openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Vertex AI API
  description: >-
    Train high-quality custom machine learning models with minimal machine
    learning expertise and effort.
  version: v1
  x-discovery-doc-revision: '20240907'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/vertex-ai/
servers:
  - url: https://aiplatform.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform.read-only: >-
              View your data across Google Cloud services and see the email
              address of your Google Account
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudAiplatformV1RayMetricSpec:
      description: Configuration for the Ray metrics.
      id: GoogleCloudAiplatformV1RayMetricSpec
      type: object
      properties:
        disabled:
          type: boolean
          description: Optional. Flag to disable the Ray metrics collection.
    GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable:
      type: object
      properties:
        bigqueryTablePath:
          description: >-
            The created BigQuery table to store logs. Customer could do their
            own query & analysis. Format: `bq://.model_deployment_monitoring_._`
          type: string
        logSource:
          enum:
            - LOG_SOURCE_UNSPECIFIED
            - TRAINING
            - SERVING
          enumDescriptions:
            - Unspecified source.
            - Logs coming from Training dataset.
            - Logs coming from Serving traffic.
          type: string
          description: The source of log.
        logType:
          description: The type of log.
          type: string
          enumDescriptions:
            - Unspecified type.
            - Predict logs.
            - Explain logs.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - PREDICT
            - EXPLAIN
        requestResponseLoggingSchemaVersion:
          readOnly: true
          type: string
          description: >-
            Output only. The schema version of the request/response logging
            BigQuery table. Default to v1 if unset.
      id: GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable
      description: >-
        ModelDeploymentMonitoringBigQueryTable specifies the BigQuery table name
        as well as some information of the logs stored in this table.
    GoogleCloudAiplatformV1ListDatasetsResponse:
      id: GoogleCloudAiplatformV1ListDatasetsResponse
      type: object
      description: Response message for DatasetService.ListDatasets.
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        datasets:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
          description: A list of Datasets that matches the specified filter in the request.
          type: array
    GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig:
      id: GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig
      description: The config for scheduling monitoring job.
      type: object
      properties:
        monitorWindow:
          description: >-
            The time window of the prediction data being included in each
            prediction dataset. This window specifies how long the data should
            be collected from historical model results for each run. If not set,
            ModelDeploymentMonitoringScheduleConfig.monitor_interval will be
            used. e.g. If currently the cutoff time is 2022-01-08 14:30:00 and
            the monitor_window is set to be 3600, then data from 2022-01-08
            13:30:00 to 2022-01-08 14:30:00 will be retrieved and aggregated to
            calculate the monitoring statistics.
          type: string
          format: google-duration
        monitorInterval:
          description: >-
            Required. The model monitoring job scheduling interval. It will be
            rounded up to next full hour. This defines how often the monitoring
            jobs are triggered.
          type: string
          format: google-duration
    GoogleCloudAiplatformV1QuestionAnsweringCorrectnessResult:
      properties:
        score:
          type: number
          readOnly: true
          format: float
          description: Output only. Question Answering Correctness score.
        confidence:
          format: float
          description: Output only. Confidence for question answering correctness score.
          readOnly: true
          type: number
        explanation:
          readOnly: true
          description: Output only. Explanation for question answering correctness score.
          type: string
      type: object
      description: Spec for question answering correctness result.
      id: GoogleCloudAiplatformV1QuestionAnsweringCorrectnessResult
    GoogleCloudAiplatformV1ContainerRegistryDestination:
      type: object
      id: GoogleCloudAiplatformV1ContainerRegistryDestination
      properties:
        outputUri:
          type: string
          description: >-
            Required. Container Registry URI of a container image. Only Google
            Container Registry and Artifact Registry are supported now. Accepted
            forms: * Google Container Registry path. For example:
            `gcr.io/projectId/imageName:tag`. * Artifact Registry path. For
            example:
            `us-central1-docker.pkg.dev/projectId/repoName/imageName:tag`. If a
            tag is not specified, "latest" will be used as the default tag.
      description: The Container Registry location for the container image.
    GoogleCloudAiplatformV1VertexRagStoreRagResource:
      properties:
        ragCorpus:
          type: string
          description: >-
            Optional. RagCorpora resource name. Format:
            `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
        ragFileIds:
          type: array
          items:
            type: string
          description: >-
            Optional. rag_file_id. The files should be in the same rag_corpus
            set in rag_corpus field.
      id: GoogleCloudAiplatformV1VertexRagStoreRagResource
      description: The definition of the Rag resource.
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame:
      properties:
        xMin:
          type: number
          format: float
          description: The leftmost coordinate of the bounding box.
        timeOffset:
          description: >-
            A time (frame) of a video in which the object has been detected.
            Expressed as a number of seconds as measured from the start of the
            video, with fractions up to a microsecond precision, and with "s"
            appended at the end.
          type: string
          format: google-duration
        xMax:
          format: float
          type: number
          description: The rightmost coordinate of the bounding box.
        yMax:
          type: number
          format: float
          description: The bottommost coordinate of the bounding box.
        yMin:
          type: number
          description: The topmost coordinate of the bounding box.
          format: float
      description: >-
        The fields `xMin`, `xMax`, `yMin`, and `yMax` refer to a bounding box,
        i.e. the rectangle over the video frame pinpointing the found
        AnnotationSpec. The coordinates are relative to the frame size, and the
        point 0,0 is in the top left of the frame.
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame
      type: object
    GoogleCloudAiplatformV1RawPredictRequest:
      description: Request message for PredictionService.RawPredict.
      type: object
      id: GoogleCloudAiplatformV1RawPredictRequest
      properties:
        httpBody:
          $ref: '#/components/schemas/GoogleApiHttpBody'
          description: >-
            The prediction input. Supports HTTP headers and arbitrary data
            payload. A DeployedModel may have an upper limit on the number of
            instances it supports per request. When this limit it is exceeded
            for an AutoML model, the RawPredict method returns an error. When
            this limit is exceeded for a custom-trained model, the behavior
            varies depending on the model. You can specify the schema for each
            instance in the predict_schemata.instance_schema_uri field when you
            create a Model. This schema applies when you deploy the `Model` as a
            `DeployedModel` to an Endpoint and use the `RawPredict` method.
    GoogleCloudAiplatformV1RaySpec:
      properties:
        headNodeResourcePoolId:
          type: string
          description: >-
            Optional. This will be used to indicate which resource pool will
            serve as the Ray head node(the first node within that pool). Will
            use the machine from the first workerpool as the head node by
            default if this field isn't set.
        resourcePoolImages:
          additionalProperties:
            type: string
          type: object
          description: >-
            Optional. Required if image_uri isn't set. A map of resource_pool_id
            to prebuild Ray image if user need to use different images for
            different head/worker pools. This map needs to cover all the
            resource pool ids. Example: { "ray_head_node_pool": "head image"
            "ray_worker_node_pool1": "worker image" "ray_worker_node_pool2":
            "another worker image" }
        rayLogsSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1RayLogsSpec'
          description: Optional. OSS Ray logging configurations.
        rayMetricSpec:
          description: Optional. Ray metrics configurations.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1RayMetricSpec'
        imageUri:
          description: >-
            Optional. Default image for user to choose a preferred ML framework
            (for example, TensorFlow or Pytorch) by choosing from [Vertex
            prebuilt
            images](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers).
            Either this or the resource_pool_images is required. Use this field
            if you need all the resource pools to have the same Ray image.
            Otherwise, use the {@code resource_pool_images} field.
          type: string
      id: GoogleCloudAiplatformV1RaySpec
      type: object
      description: >-
        Configuration information for the Ray cluster. For experimental launch,
        Ray cluster creation and Persistent cluster creation are 1:1 mapping: We
        will provision all the nodes within the Persistent cluster as Ray nodes.
    GoogleCloudAiplatformV1InputDataConfig:
      description: >-
        Specifies Vertex AI owned input data to be used for training, and
        possibly evaluating, the Model.
      type: object
      properties:
        predefinedSplit:
          description: >-
            Supported only for tabular Datasets. Split based on a predefined
            key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PredefinedSplit'
        annotationSchemaUri:
          description: >-
            Applicable only to custom training with Datasets that have DataItems
            and Annotations. Cloud Storage URI that points to a YAML file
            describing the annotation schema. The schema is defined as an
            OpenAPI 3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            The schema files that can be used here are found in
            gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that
            the chosen schema must be consistent with metadata of the Dataset
            specified by dataset_id. Only Annotations that both match this
            schema and belong to DataItems not ignored by the split method are
            used in respectively training, validation or test role, depending on
            the role of the DataItem they are on. When used in conjunction with
            annotations_filter, the Annotations used for training are filtered
            by both annotations_filter and annotation_schema_uri.
          type: string
        stratifiedSplit:
          description: >-
            Supported only for tabular Datasets. Split based on the distribution
            of the specified column.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StratifiedSplit'
        fractionSplit:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FractionSplit'
          description: Split based on fractions defining the size of each set.
        annotationsFilter:
          type: string
          description: >-
            Applicable only to Datasets that have DataItems and Annotations. A
            filter on Annotations of the Dataset. Only Annotations that both
            match this filter and belong to DataItems not ignored by the split
            method are used in respectively training, validation or test role,
            depending on the role of the DataItem they are on (for the
            auto-assigned that role is decided by Vertex AI). A filter with same
            syntax as the one used in ListAnnotations may be used, but note here
            it filters across all Annotations of the Dataset, and not just
            within a single DataItem.
        bigqueryDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination'
          description: >-
            Only applicable to custom training with tabular Dataset with
            BigQuery source. The BigQuery project location where the training
            data is to be written to. In the given project a new dataset is
            created with name `dataset___` where timestamp is in
            YYYY_MM_DDThh_mm_ss_sssZ format. All training input data is written
            into that dataset. In the dataset three tables are created,
            `training`, `validation` and `test`. * AIP_DATA_FORMAT = "bigquery".
            * AIP_TRAINING_DATA_URI = "bigquery_destination.dataset___.training"
            * AIP_VALIDATION_DATA_URI =
            "bigquery_destination.dataset___.validation" * AIP_TEST_DATA_URI =
            "bigquery_destination.dataset___.test"
        timestampSplit:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TimestampSplit'
          description: >-
            Supported only for tabular Datasets. Split based on the timestamp of
            the input data pieces.
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: >-
            The Cloud Storage location where the training data is to be written
            to. In the given directory a new directory is created with name:
            `dataset---` where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601
            format. All training input data is written into that directory. The
            Vertex AI environment variables representing Cloud Storage data URIs
            are represented in the Cloud Storage wildcard format to support
            sharded data. e.g.: "gs://.../training-*.jsonl" * AIP_DATA_FORMAT =
            "jsonl" for non-tabular data, "csv" for tabular data *
            AIP_TRAINING_DATA_URI =
            "gcs_destination/dataset---/training-*.${AIP_DATA_FORMAT}" *
            AIP_VALIDATION_DATA_URI =
            "gcs_destination/dataset---/validation-*.${AIP_DATA_FORMAT}" *
            AIP_TEST_DATA_URI =
            "gcs_destination/dataset---/test-*.${AIP_DATA_FORMAT}"
        filterSplit:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FilterSplit'
          description: Split based on the provided filters for each set.
        savedQueryId:
          description: >-
            Only applicable to Datasets that have SavedQueries. The ID of a
            SavedQuery (annotation set) under the Dataset specified by
            dataset_id used for filtering Annotations for training. Only
            Annotations that are associated with this SavedQuery are used in
            respectively training. When used in conjunction with
            annotations_filter, the Annotations used for training are filtered
            by both saved_query_id and annotations_filter. Only one of
            saved_query_id and annotation_schema_uri should be specified as both
            of them represent the same thing: problem type.
          type: string
        persistMlUseAssignment:
          type: boolean
          description: Whether to persist the ML use assignment to data item system labels.
        datasetId:
          type: string
          description: >-
            Required. The ID of the Dataset in the same Project and Location
            which data will be used to train the Model. The Dataset must use
            schema compatible with Model being trained, and what is compatible
            should be described in the used TrainingPipeline's
            training_task_definition. For tabular Datasets, all their data is
            exported to training, to pick and choose from.
      id: GoogleCloudAiplatformV1InputDataConfig
    GoogleCloudAiplatformV1MetadataSchema:
      type: object
      description: Instance of a general MetadataSchema.
      id: GoogleCloudAiplatformV1MetadataSchema
      properties:
        description:
          type: string
          description: Description of the Metadata Schema
        schemaType:
          enumDescriptions:
            - Unspecified type for the MetadataSchema.
            - >-
              A type indicating that the MetadataSchema will be used by
              Artifacts.
            - >-
              A typee indicating that the MetadataSchema will be used by
              Executions.
            - >-
              A state indicating that the MetadataSchema will be used by
              Contexts.
          type: string
          description: >-
            The type of the MetadataSchema. This is a property that identifies
            which metadata types will use the MetadataSchema.
          enum:
            - METADATA_SCHEMA_TYPE_UNSPECIFIED
            - ARTIFACT_TYPE
            - EXECUTION_TYPE
            - CONTEXT_TYPE
        schemaVersion:
          type: string
          description: >-
            The version of the MetadataSchema. The version's format must match
            the following regular expression: `^[0-9]+.+.+$`, which would allow
            to order/compare different versions. Example: 1.0.0, 1.0.1, etc.
        name:
          type: string
          description: Output only. The resource name of the MetadataSchema.
          readOnly: true
        schema:
          description: >-
            Required. The raw YAML string representation of the MetadataSchema.
            The combination of [MetadataSchema.version] and the schema name
            given by `title` in [MetadataSchema.schema] must be unique within a
            MetadataStore. The schema is defined as an OpenAPI 3.0.2
            [MetadataSchema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)
          type: string
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this MetadataSchema was created.
    GoogleCloudAiplatformV1MutateDeployedModelResponse:
      type: object
      id: GoogleCloudAiplatformV1MutateDeployedModelResponse
      properties:
        deployedModel:
          description: The DeployedModel that's being mutated.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
      description: Response message for EndpointService.MutateDeployedModel.
    GoogleCloudAiplatformV1RougeSpec:
      type: object
      id: GoogleCloudAiplatformV1RougeSpec
      properties:
        rougeType:
          type: string
          description: >-
            Optional. Supported rouge types are rougen[1-9], rougeL, and
            rougeLsum.
        splitSummaries:
          type: boolean
          description: Optional. Whether to split summaries while using rougeLsum.
        useStemmer:
          description: Optional. Whether to use stemmer to compute rouge score.
          type: boolean
      description: >-
        Spec for rouge score metric - calculates the recall of n-grams in
        prediction as compared to reference - returns a score ranging between 0
        and 1.
    GoogleCloudAiplatformV1DataLabelingJob:
      type: object
      properties:
        instructionUri:
          type: string
          description: >-
            Required. The Google Cloud Storage location of the instruction pdf.
            This pdf is shared with labelers, and provides detailed description
            on how to label DataItems in Datasets.
        encryptionSpec:
          description: >-
            Customer-managed encryption key spec for a DataLabelingJob. If set,
            this DataLabelingJob will be secured by this key. Note: Annotations
            created in the DataLabelingJob are associated with the
            EncryptionSpec of the Dataset they are exported to.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp when this DataLabelingJob was created.
        datasets:
          description: >-
            Required. Dataset resource names. Right now we only support labeling
            from a single Dataset. Format:
            `projects/{project}/locations/{location}/datasets/{dataset}`
          items:
            type: string
          type: array
        labelerCount:
          type: integer
          format: int32
          description: Required. Number of labelers to work on each DataItem.
        error:
          description: >-
            Output only. DataLabelingJob errors. It is only populated when job's
            state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
          $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        annotationLabels:
          type: object
          description: >-
            Labels to assign to annotations generated by this DataLabelingJob.
            Label keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. See
            https://goo.gl/xmQnxf for more information and examples of labels.
            System reserved label keys are prefixed with
            "aiplatform.googleapis.com/" and are immutable.
          additionalProperties:
            type: string
        updateTime:
          format: google-datetime
          readOnly: true
          description: >-
            Output only. Timestamp when this DataLabelingJob was updated most
            recently.
          type: string
        inputs:
          type: any
          description: Required. Input config parameters for the DataLabelingJob.
        displayName:
          type: string
          description: >-
            Required. The user-defined name of the DataLabelingJob. The name can
            be up to 128 characters long and can consist of any UTF-8
            characters. Display name of a DataLabelingJob.
        name:
          description: Output only. Resource name of the DataLabelingJob.
          readOnly: true
          type: string
        currentSpend:
          $ref: '#/components/schemas/GoogleTypeMoney'
          description: >-
            Output only. Estimated cost(in US dollars) that the DataLabelingJob
            has incurred to date.
          readOnly: true
        activeLearningConfig:
          description: >-
            Parameters that configure the active learning pipeline. Active
            learning will label the data incrementally via several iterations.
            For every iteration, it will select a batch of data based on the
            sampling strategy.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ActiveLearningConfig'
        specialistPools:
          items:
            type: string
          type: array
          description: The SpecialistPools' resource names associated with this job.
        state:
          type: string
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          readOnly: true
          enumDescriptions:
            - The job state is unspecified.
            - >-
              The job has been just created or resumed and processing has not
              yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - >-
              The job is being cancelled. From this state the job may only go to
              either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
              `JOB_STATE_CANCELLED`.
            - The job has been cancelled.
            - The job has been stopped, and can be resumed.
            - The job has expired.
            - >-
              The job is being updated. Only jobs in the `RUNNING` state can be
              updated. After updating, the job goes back to the `RUNNING` state.
            - >-
              The job is partially succeeded, some results may be missing due to
              errors.
          description: Output only. The detailed state of the job.
        inputsSchemaUri:
          type: string
          description: >-
            Required. Points to a YAML file stored on Google Cloud Storage
            describing the config for a specific type of DataLabelingJob. The
            schema files that can be used here are found in the
            https://storage.googleapis.com/google-cloud-aiplatform bucket in the
            /schema/datalabelingjob/inputs/ folder.
        labels:
          description: >-
            The labels with user-defined metadata to organize your
            DataLabelingJobs. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. See https://goo.gl/xmQnxf for more information and
            examples of labels. System reserved label keys are prefixed with
            "aiplatform.googleapis.com/" and are immutable. Following system
            labels exist for each DataLabelingJob: *
            "aiplatform.googleapis.com/schema": output only, its value is the
            inputs_schema's title.
          additionalProperties:
            type: string
          type: object
        labelingProgress:
          description: >-
            Output only. Current labeling job progress percentage scaled in
            interval [0, 100], indicating the percentage of DataItems that has
            been finished.
          readOnly: true
          format: int32
          type: integer
      id: GoogleCloudAiplatformV1DataLabelingJob
      description: >-
        DataLabelingJob is used to trigger a human labeling job on unlabeled
        data from the following Dataset:
    GoogleCloudAiplatformV1AssignNotebookRuntimeOperationMetadata:
      id: GoogleCloudAiplatformV1AssignNotebookRuntimeOperationMetadata
      description: Metadata information for NotebookService.AssignNotebookRuntime.
      properties:
        progressMessage:
          type: string
          description: >-
            A human-readable message that shows the intermediate progress
            details of NotebookRuntime.
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1CreateFeatureRequest:
      id: GoogleCloudAiplatformV1CreateFeatureRequest
      type: object
      description: >-
        Request message for FeaturestoreService.CreateFeature. Request message
        for FeatureRegistryService.CreateFeature.
      properties:
        parent:
          type: string
          description: >-
            Required. The resource name of the EntityType or FeatureGroup to
            create a Feature. Format for entity_type as parent:
            `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
            Format for feature_group as parent:
            `projects/{project}/locations/{location}/featureGroups/{feature_group}`
        featureId:
          type: string
          description: >-
            Required. The ID to use for the Feature, which will become the final
            component of the Feature's resource name. This value may be up to
            128 characters, and valid characters are `[a-z0-9_]`. The first
            character cannot be a number. The value must be unique within an
            EntityType/FeatureGroup.
        feature:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
          description: Required. The Feature to create.
    GoogleCloudAiplatformV1HyperparameterTuningJob:
      id: GoogleCloudAiplatformV1HyperparameterTuningJob
      type: object
      description: >-
        Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a
        Study specification and multiple CustomJobs with identical CustomJob
        specification.
      properties:
        name:
          type: string
          readOnly: true
          description: Output only. Resource name of the HyperparameterTuningJob.
        endTime:
          description: >-
            Output only. Time when the HyperparameterTuningJob entered any of
            the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`,
            `JOB_STATE_CANCELLED`.
          format: google-datetime
          type: string
          readOnly: true
        createTime:
          description: Output only. Time when the HyperparameterTuningJob was created.
          type: string
          format: google-datetime
          readOnly: true
        parallelTrialCount:
          format: int32
          description: Required. The desired number of Trials to run in parallel.
          type: integer
        encryptionSpec:
          description: >-
            Customer-managed encryption key options for a
            HyperparameterTuningJob. If this is set, then all resources created
            by the HyperparameterTuningJob will be encrypted with the provided
            encryption key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        displayName:
          description: >-
            Required. The display name of the HyperparameterTuningJob. The name
            can be up to 128 characters long and can consist of any UTF-8
            characters.
          type: string
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Output only. Only populated when job's state is JOB_STATE_FAILED or
            JOB_STATE_CANCELLED.
          readOnly: true
        trials:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
          readOnly: true
          type: array
          description: Output only. Trials of the HyperparameterTuningJob.
        satisfiesPzs:
          type: boolean
          description: Output only. Reserved for future use.
          readOnly: true
        startTime:
          format: google-datetime
          description: >-
            Output only. Time when the HyperparameterTuningJob for the first
            time entered the `JOB_STATE_RUNNING` state.
          readOnly: true
          type: string
        maxTrialCount:
          description: Required. The desired total number of Trials.
          format: int32
          type: integer
        state:
          description: Output only. The detailed state of the job.
          type: string
          readOnly: true
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          enumDescriptions:
            - The job state is unspecified.
            - >-
              The job has been just created or resumed and processing has not
              yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - >-
              The job is being cancelled. From this state the job may only go to
              either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
              `JOB_STATE_CANCELLED`.
            - The job has been cancelled.
            - The job has been stopped, and can be resumed.
            - The job has expired.
            - >-
              The job is being updated. Only jobs in the `RUNNING` state can be
              updated. After updating, the job goes back to the `RUNNING` state.
            - >-
              The job is partially succeeded, some results may be missing due to
              errors.
        satisfiesPzi:
          readOnly: true
          description: Output only. Reserved for future use.
          type: boolean
        maxFailedTrialCount:
          description: >-
            The number of failed Trials that need to be seen before failing the
            HyperparameterTuningJob. If set to 0, Vertex AI decides how many
            Trials must fail before the whole job fails.
          type: integer
          format: int32
        updateTime:
          description: >-
            Output only. Time when the HyperparameterTuningJob was most recently
            updated.
          format: google-datetime
          readOnly: true
          type: string
        studySpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpec'
          description: Required. Study configuration of the HyperparameterTuningJob.
        trialJobSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
          description: >-
            Required. The spec of a trial job. The same spec applies to the
            CustomJobs created in all the trials.
        labels:
          additionalProperties:
            type: string
          description: >-
            The labels with user-defined metadata to organize
            HyperparameterTuningJobs. Label keys and values can be no longer
            than 64 characters (Unicode codepoints), can only contain lowercase
            letters, numeric characters, underscores and dashes. International
            characters are allowed. See https://goo.gl/xmQnxf for more
            information and examples of labels.
          type: object
    GoogleCloudAiplatformV1FeatureViewSync:
      properties:
        name:
          description: >-
            Identifier. Name of the FeatureViewSync. Format:
            `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`
          type: string
        runTime:
          $ref: '#/components/schemas/GoogleTypeInterval'
          description: Output only. Time when this FeatureViewSync is finished.
          readOnly: true
        satisfiesPzi:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        syncSummary:
          description: Output only. Summary of the sync job.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureViewSyncSyncSummary
        finalStatus:
          description: Output only. Final status of the FeatureViewSync.
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcStatus'
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: >-
            Output only. Time when this FeatureViewSync is created. Creation of
            a FeatureViewSync means that the job is pending / waiting for
            sufficient resources but may not have started the actual data
            transfer yet.
      type: object
      description: >-
        FeatureViewSync is a representation of sync operation which copies data
        from data source to Feature View in Online Store.
      id: GoogleCloudAiplatformV1FeatureViewSync
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentation:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentation
      description: >-
        A TrainingJob that trains and uploads an AutoML Image Segmentation
        Model.
      properties:
        metadata:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata
          description: The metadata information.
        inputs:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs
          description: The input parameters of this TrainingJob.
    GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader:
      type: object
      id: GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader
      properties:
        featureDescriptors:
          type: array
          description: >-
            List of Feature metadata corresponding to each piece of
            ReadFeatureValuesResponse.EntityView.data.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor
        entityType:
          description: >-
            The resource name of the EntityType from the
            ReadFeatureValuesRequest. Value format:
            `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.
          type: string
      description: >-
        Response header with metadata for the requested
        ReadFeatureValuesRequest.entity_type and Features.
    GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec:
      type: object
      description: Defines the Feature value(s) to import.
      id: GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec
      properties:
        sourceField:
          type: string
          description: >-
            Source column to get the Feature values from. If not set, uses the
            column with the same name as the Feature ID.
        id:
          description: >-
            Required. ID of the Feature to import values of. This Feature must
            exist in the target EntityType, or the request will fail.
          type: string
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsSummarizationEvaluationMetrics:
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsSummarizationEvaluationMetrics
      type: object
      properties:
        rougeLSum:
          description: ROUGE-L (Longest Common Subsequence) scoring at summary level.
          type: number
          format: float
    GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass to
            ListModelEvaluationSlicesRequest.page_token to obtain that page.
          type: string
        modelEvaluationSlices:
          description: List of ModelEvaluations in the requested page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSlice'
      description: Response message for ModelService.ListModelEvaluationSlices.
      id: GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata
      properties:
        backingCustomJob:
          type: string
          description: >-
            The resource name of the CustomJob that has been created to carry
            out this custom task.
    GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest:
      properties:
        evaluatedAnnotations:
          type: array
          description: Required. Evaluated annotations resource to be imported.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EvaluatedAnnotation'
      type: object
      description: Request message for ModelService.BatchImportEvaluatedAnnotations
      id: GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation:
      description: >-
        Training pipeline will perform following transformation functions. * The
        value converted to float32. * The z_score of the value. * log(value+1)
        when the value is greater than or equal to 0. Otherwise, this
        transformation is not applied and the value is considered a missing
        value. * z_score of log(value+1) when the value is greater than or equal
        to 0. Otherwise, this transformation is not applied and the value is
        considered a missing value.
      properties:
        columnName:
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation
      type: object
    GoogleCloudAiplatformV1SchemaTimeSegment:
      properties:
        endTimeOffset:
          type: string
          format: google-duration
          description: >-
            End of the time segment (exclusive), represented as the duration
            since the start of the DataItem.
        startTimeOffset:
          type: string
          description: >-
            Start of the time segment (inclusive), represented as the duration
            since the start of the DataItem.
          format: google-duration
      id: GoogleCloudAiplatformV1SchemaTimeSegment
      type: object
      description: >-
        A time period inside of a DataItem that has a time dimension (e.g.
        video).
    GoogleCloudAiplatformV1ContainerSpec:
      id: GoogleCloudAiplatformV1ContainerSpec
      type: object
      properties:
        args:
          description: The arguments to be passed when starting the container.
          items:
            type: string
          type: array
        command:
          type: array
          items:
            type: string
          description: >-
            The command to be invoked when the container is started. It
            overrides the entrypoint instruction in Dockerfile when provided.
        imageUri:
          description: >-
            Required. The URI of a container image in the Container Registry
            that is to be run on each worker replica.
          type: string
        env:
          description: >-
            Environment variables to be passed to the container. Maximum limit
            is 100.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EnvVar'
          type: array
      description: The spec of a Container.
    GoogleCloudAiplatformV1DataItem:
      id: GoogleCloudAiplatformV1DataItem
      properties:
        createTime:
          format: google-datetime
          description: Output only. Timestamp when this DataItem was created.
          type: string
          readOnly: true
        labels:
          type: object
          description: >-
            Optional. The labels with user-defined metadata to organize your
            DataItems. Label keys and values can be no longer than 64 characters
            (Unicode codepoints), can only contain lowercase letters, numeric
            characters, underscores and dashes. International characters are
            allowed. No more than 64 user labels can be associated with one
            DataItem(System labels are excluded). See https://goo.gl/xmQnxf for
            more information and examples of labels. System reserved label keys
            are prefixed with "aiplatform.googleapis.com/" and are immutable.
          additionalProperties:
            type: string
        payload:
          description: >-
            Required. The data that the DataItem represents (for example, an
            image or a text snippet). The schema of the payload is stored in the
            parent Dataset's metadata schema's dataItemSchemaUri field.
          type: any
        satisfiesPzi:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        updateTime:
          description: Output only. Timestamp when this DataItem was last updated.
          format: google-datetime
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
          description: Output only. The resource name of the DataItem.
        etag:
          type: string
          description: >-
            Optional. Used to perform consistent read-modify-write updates. If
            not set, a blind "overwrite" update happens.
        satisfiesPzs:
          readOnly: true
          type: boolean
          description: Output only. Reserved for future use.
      type: object
      description: >-
        A piece of data in a Dataset. Could be an image, a video, a document or
        plain text.
    GoogleCloudAiplatformV1PairwiseMetricInstance:
      properties:
        jsonInstance:
          type: string
          description: >-
            Instance specified as a json string. String key-value pairs are
            expected in the json_instance to render
            PairwiseMetricSpec.instance_prompt_template.
      description: >-
        Pairwise metric instance. Usually one instance corresponds to one row in
        an evaluation dataset.
      id: GoogleCloudAiplatformV1PairwiseMetricInstance
      type: object
    GoogleCloudAiplatformV1TensorboardRun:
      type: object
      description: >-
        TensorboardRun maps to a specific execution of a training job with a
        given set of hyperparameter values, model definition, dataset, etc
      properties:
        name:
          type: string
          readOnly: true
          description: >-
            Output only. Name of the TensorboardRun. Format:
            `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Timestamp when this TensorboardRun was last updated.
        description:
          type: string
          description: Description of this TensorboardRun.
        labels:
          description: >-
            The labels with user-defined metadata to organize your
            TensorboardRuns. This field will be used to filter and visualize
            Runs in the Tensorboard UI. For example, a Vertex AI training job
            can set a label aiplatform.googleapis.com/training_job_id=xxxxx to
            all the runs created within that job. An end user can set a label
            experiment_id=xxxxx for all the runs produced in a Jupyter notebook.
            These runs can be grouped by a label value and visualized together
            in the Tensorboard UI. Label keys and values can be no longer than
            64 characters (Unicode codepoints), can only contain lowercase
            letters, numeric characters, underscores and dashes. International
            characters are allowed. No more than 64 user labels can be
            associated with one TensorboardRun (System labels are excluded). See
            https://goo.gl/xmQnxf for more information and examples of labels.
            System reserved label keys are prefixed with
            "aiplatform.googleapis.com/" and are immutable.
          type: object
          additionalProperties:
            type: string
        etag:
          type: string
          description: >-
            Used to perform a consistent read-modify-write updates. If not set,
            a blind "overwrite" update happens.
        displayName:
          description: >-
            Required. User provided name of this TensorboardRun. This value must
            be unique among all TensorboardRuns belonging to the same parent
            TensorboardExperiment.
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Output only. Timestamp when this TensorboardRun was created.
          readOnly: true
      id: GoogleCloudAiplatformV1TensorboardRun
    GoogleCloudAiplatformV1PythonPackageSpec:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
          description: Command line arguments to be passed to the Python task.
        packageUris:
          description: >-
            Required. The Google Cloud Storage location of the Python package
            files which are the training program and its dependent packages. The
            maximum number of package URIs is 100.
          items:
            type: string
          type: array
        env:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EnvVar'
          description: >-
            Environment variables to be passed to the python module. Maximum
            limit is 100.
        executorImageUri:
          type: string
          description: >-
            Required. The URI of a container image in Artifact Registry that
            will run the provided Python package. Vertex AI provides a wide
            range of executor images with pre-installed packages to meet users'
            various use cases. See the list of [pre-built containers for
            training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers).
            You must use an image from this list.
        pythonModule:
          description: >-
            Required. The Python module name to run after installing the
            packages.
          type: string
      description: The spec of a Python packaged code.
      id: GoogleCloudAiplatformV1PythonPackageSpec
    GoogleCloudAiplatformV1QuestionAnsweringRelevanceResult:
      properties:
        explanation:
          description: Output only. Explanation for question answering relevance score.
          type: string
          readOnly: true
        score:
          readOnly: true
          description: Output only. Question Answering Relevance score.
          type: number
          format: float
        confidence:
          readOnly: true
          format: float
          type: number
          description: Output only. Confidence for question answering relevance score.
      id: GoogleCloudAiplatformV1QuestionAnsweringRelevanceResult
      description: Spec for question answering relevance result.
      type: object
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig:
      id: >-
        GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig
      type: object
      properties:
        annotatedDataset:
          type: string
          description: >-
            Required. Full resource name of data labeling AnnotatedDataset.
            Format:
            `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`.
      description: >-
        Config for migrating AnnotatedDataset in datalabeling.googleapis.com to
        Vertex AI's SavedQuery.
    GoogleCloudAiplatformV1Event:
      properties:
        labels:
          description: >-
            The labels with user-defined metadata to annotate Events. Label keys
            and values can be no longer than 64 characters (Unicode codepoints),
            can only contain lowercase letters, numeric characters, underscores
            and dashes. International characters are allowed. No more than 64
            user labels can be associated with one Event (System labels are
            excluded). See https://goo.gl/xmQnxf for more information and
            examples of labels. System reserved label keys are prefixed with
            "aiplatform.googleapis.com/" and are immutable.
          type: object
          additionalProperties:
            type: string
        type:
          enumDescriptions:
            - Unspecified whether input or output of the Execution.
            - An input of the Execution.
            - An output of the Execution.
          type: string
          description: Required. The type of the Event.
          enum:
            - TYPE_UNSPECIFIED
            - INPUT
            - OUTPUT
        artifact:
          description: Required. The relative resource name of the Artifact in the Event.
          type: string
        execution:
          description: >-
            Output only. The relative resource name of the Execution in the
            Event.
          readOnly: true
          type: string
        eventTime:
          readOnly: true
          description: Output only. Time the Event occurred.
          type: string
          format: google-datetime
      description: >-
        An edge describing the relationship between an Artifact and an Execution
        in a lineage graph.
      type: object
      id: GoogleCloudAiplatformV1Event
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation:
      type: object
      description: >-
        Training pipeline will infer the proper transformation based on the
        statistic of dataset.
      properties:
        columnName:
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation
    CloudAiLargeModelsVisionRaiInfoDetectedLabels:
      type: object
      description: Filters returning list of deteceted labels, scores, and bounding boxes.
      id: CloudAiLargeModelsVisionRaiInfoDetectedLabels
      properties:
        raiCategory:
          description: The RAI category for the deteceted labels.
          type: string
        entities:
          items:
            $ref: >-
              #/components/schemas/CloudAiLargeModelsVisionRaiInfoDetectedLabelsEntity
          type: array
          description: The list of detected entities for the rai signal.
    GoogleCloudAiplatformV1ListTrialsResponse:
      type: object
      id: GoogleCloudAiplatformV1ListTrialsResponse
      description: Response message for VizierService.ListTrials.
      properties:
        nextPageToken:
          description: >-
            Pass this token as the `page_token` field of the request for a
            subsequent call. If this field is omitted, there are no subsequent
            pages.
          type: string
        trials:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
          type: array
          description: The Trials associated with the Study.
    GoogleCloudAiplatformV1ListFeaturesResponse:
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as ListFeaturesRequest.page_token to
            retrieve the next page. If this field is omitted, there are no
            subsequent pages.
          type: string
        features:
          description: The Features matching the request.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
          type: array
      description: >-
        Response message for FeaturestoreService.ListFeatures. Response message
        for FeatureRegistryService.ListFeatures.
      id: GoogleCloudAiplatformV1ListFeaturesResponse
      type: object
    GoogleCloudAiplatformV1DeleteMetadataStoreOperationMetadata:
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for deleting a MetadataStore.
      type: object
      description: Details of operations that perform MetadataService.DeleteMetadataStore.
      id: GoogleCloudAiplatformV1DeleteMetadataStoreOperationMetadata
    GoogleTypeExpr:
      type: object
      properties:
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        description:
          type: string
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      id: GoogleTypeExpr
    GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature:
      description: >-
        Response message if the request uses the SelectTimeRangeAndFeature
        option.
      id: >-
        GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature
      properties:
        impactedFeatureCount:
          type: string
          description: >-
            The count of the features or columns impacted. This is the same as
            the feature count in the request.
          format: int64
        onlineStorageModifiedEntityCount:
          description: >-
            The count of modified entities in the online storage. Each entity ID
            corresponds to one entity. Within each entity, only the features
            specified in the request are deleted.
          format: int64
          type: string
        offlineStorageModifiedEntityRowCount:
          description: >-
            The count of modified entity rows in the offline storage. Each row
            corresponds to the combination of an entity ID and a timestamp. One
            entity ID can have multiple rows in the offline storage. Within each
            row, only the features specified in the request are deleted.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1ListTensorboardRunsResponse:
      description: Response message for TensorboardService.ListTensorboardRuns.
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as ListTensorboardRunsRequest.page_token
            to retrieve the next page. If this field is omitted, there are no
            subsequent pages.
        tensorboardRuns:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
          type: array
          description: The TensorboardRuns mathching the request.
      id: GoogleCloudAiplatformV1ListTensorboardRunsResponse
    GoogleCloudAiplatformV1SummarizationHelpfulnessResult:
      description: Spec for summarization helpfulness result.
      properties:
        score:
          readOnly: true
          format: float
          type: number
          description: Output only. Summarization Helpfulness score.
        explanation:
          readOnly: true
          type: string
          description: Output only. Explanation for summarization helpfulness score.
        confidence:
          description: Output only. Confidence for summarization helpfulness score.
          type: number
          format: float
          readOnly: true
      id: GoogleCloudAiplatformV1SummarizationHelpfulnessResult
      type: object
    GoogleCloudAiplatformV1BleuSpec:
      type: object
      description: >-
        Spec for bleu score metric - calculates the precision of n-grams in the
        prediction as compared to reference - returns a score ranging between 0
        to 1.
      id: GoogleCloudAiplatformV1BleuSpec
      properties:
        useEffectiveOrder:
          description: Optional. Whether to use_effective_order to compute bleu score.
          type: boolean
    GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesResponse:
      description: Response message for ModelService.BatchImportModelEvaluationSlices
      type: object
      id: GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesResponse
      properties:
        importedModelEvaluationSlices:
          items:
            type: string
          readOnly: true
          type: array
          description: Output only. List of imported ModelEvaluationSlice.name.
    GoogleCloudAiplatformV1FeatureNoiseSigma:
      description: >-
        Noise sigma by features. Noise sigma represents the standard deviation
        of the gaussian kernel that will be used to add noise to interpolated
        inputs prior to computing gradients.
      type: object
      id: GoogleCloudAiplatformV1FeatureNoiseSigma
      properties:
        noiseSigma:
          type: array
          description: >-
            Noise sigma per feature. No noise is added to features that are not
            set.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature
    GoogleCloudAiplatformV1ResourcePoolAutoscalingSpec:
      properties:
        maxReplicaCount:
          format: int64
          type: string
          description: >-
            Optional. max replicas in the node pool, must be ≥ replica_count and
            > min_replica_count or will throw error
        minReplicaCount:
          type: string
          format: int64
          description: >-
            Optional. min replicas in the node pool, must be ≤ replica_count and
            < max_replica_count or will throw error. For autoscaling enabled
            Ray-on-Vertex, we allow min_replica_count of a resource_pool to be 0
            to match the OSS Ray
            behavior(https://docs.ray.io/en/latest/cluster/vms/user-guides/configuring-autoscaling.html#cluster-config-parameters).
            As for Persistent Resource, the min_replica_count must be > 0, we
            added a corresponding validation inside
            CreatePersistentResourceRequestValidator.java.
      description: The min/max number of replicas allowed if enabling autoscaling
      id: GoogleCloudAiplatformV1ResourcePoolAutoscalingSpec
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetrics:
      type: object
      description: Metrics for classification evaluation results.
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetrics
      properties:
        auPrc:
          description: >-
            The Area Under Precision-Recall Curve metric. Micro-averaged for the
            overall evaluation.
          type: number
          format: float
        confidenceMetrics:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics
          description: >-
            Metrics for each `confidenceThreshold` in
            0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and `positionThreshold`
            = INT32_MAX_VALUE. ROC and precision-recall curves, and other
            aggregated metrics are derived from them. The confidence metrics
            entries may also be supplied for additional values of
            `positionThreshold`, but from these no aggregated metrics are
            computed.
          type: array
        confusionMatrix:
          description: Confusion matrix of the evaluation.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
        logLoss:
          format: float
          description: The Log Loss metric.
          type: number
        auRoc:
          format: float
          description: >-
            The Area Under Receiver Operating Characteristic curve metric.
            Micro-averaged for the overall evaluation.
          type: number
    GoogleCloudAiplatformV1SuggestTrialsMetadata:
      properties:
        clientId:
          type: string
          description: >-
            The identifier of the client that is requesting the suggestion. If
            multiple SuggestTrialsRequests have the same `client_id`, the
            service will return the identical suggested Trial if the Trial is
            pending, and provide a new Trial if the last suggested Trial was
            completed.
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for suggesting Trials.
      description: Details of operations that perform Trials suggestion.
      id: GoogleCloudAiplatformV1SuggestTrialsMetadata
      type: object
    GoogleCloudAiplatformV1NotebookIdleShutdownConfig:
      description: >-
        The idle shutdown configuration of NotebookRuntimeTemplate, which
        contains the idle_timeout as required field.
      id: GoogleCloudAiplatformV1NotebookIdleShutdownConfig
      properties:
        idleTimeout:
          description: >-
            Required. Duration is accurate to the second. In Notebook, Idle
            Timeout is accurate to minute so the range of idle_timeout (second)
            is: 10 * 60 ~ 1440 * 60.
          format: google-duration
          type: string
        idleShutdownDisabled:
          type: boolean
          description: Whether Idle Shutdown is disabled in this NotebookRuntimeTemplate.
      type: object
    GoogleCloudAiplatformV1ListPersistentResourcesResponse:
      description: Response message for PersistentResourceService.ListPersistentResources
      id: GoogleCloudAiplatformV1ListPersistentResourcesResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            A token to retrieve next page of results. Pass to
            ListPersistentResourcesRequest.page_token to obtain that page.
        persistentResources:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PersistentResource'
          type: array
      type: object
    GoogleCloudAiplatformV1ModelDataStats:
      description: Stats of data used for train or evaluate the Model.
      properties:
        testAnnotationsCount:
          format: int64
          type: string
          description: >-
            Number of Annotations that are used for evaluating this Model. If
            the Model is evaluated multiple times, this will be the number of
            test Annotations used by the first evaluation. If the Model is not
            evaluated, the number is 0.
        validationAnnotationsCount:
          type: string
          description: >-
            Number of Annotations that are used for validating this Model during
            training.
          format: int64
        trainingAnnotationsCount:
          description: Number of Annotations that are used for training this Model.
          type: string
          format: int64
        validationDataItemsCount:
          format: int64
          description: >-
            Number of DataItems that were used for validating this Model during
            training.
          type: string
        trainingDataItemsCount:
          type: string
          description: Number of DataItems that were used for training this Model.
          format: int64
        testDataItemsCount:
          type: string
          format: int64
          description: >-
            Number of DataItems that were used for evaluating this Model. If the
            Model is evaluated multiple times, this will be the number of test
            DataItems used by the first evaluation. If the Model is not
            evaluated, the number is 0.
      type: object
      id: GoogleCloudAiplatformV1ModelDataStats
    GoogleCloudAiplatformV1IndexEndpoint:
      description: >-
        Indexes are deployed into it. An IndexEndpoint can have multiple
        DeployedIndexes.
      properties:
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        encryptionSpec:
          description: >-
            Immutable. Customer-managed encryption key spec for an
            IndexEndpoint. If set, this IndexEndpoint and all sub-resources of
            this IndexEndpoint will be secured by this key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: >-
            Output only. Timestamp when this IndexEndpoint was last updated.
            This timestamp is not updated when the endpoint's DeployedIndexes
            are updated, e.g. due to updates of the original Indexes they are
            the deployments of.
        privateServiceConnectConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PrivateServiceConnectConfig
          description: >-
            Optional. Configuration for private service connect. network and
            private_service_connect_config are mutually exclusive.
        displayName:
          description: >-
            Required. The display name of the IndexEndpoint. The name can be up
            to 128 characters long and can consist of any UTF-8 characters.
          type: string
        name:
          description: Output only. The resource name of the IndexEndpoint.
          readOnly: true
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Output only. Timestamp when this IndexEndpoint was created.
          readOnly: true
        description:
          type: string
          description: The description of the IndexEndpoint.
        etag:
          type: string
          description: >-
            Used to perform consistent read-modify-write updates. If not set, a
            blind "overwrite" update happens.
        labels:
          additionalProperties:
            type: string
          description: >-
            The labels with user-defined metadata to organize your
            IndexEndpoints. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. See https://goo.gl/xmQnxf for more information and
            examples of labels.
          type: object
        publicEndpointDomainName:
          type: string
          readOnly: true
          description: >-
            Output only. If public_endpoint_enabled is true, this field will be
            populated with the domain name to use for this index endpoint.
        deployedIndexes:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndex'
          description: Output only. The indexes deployed in this endpoint.
          readOnly: true
        satisfiesPzi:
          type: boolean
          readOnly: true
          description: Output only. Reserved for future use.
        enablePrivateServiceConnect:
          description: >-
            Optional. Deprecated: If true, expose the IndexEndpoint via private
            service connect. Only one of the fields, network or
            enable_private_service_connect, can be set.
          deprecated: true
          type: boolean
        publicEndpointEnabled:
          type: boolean
          description: >-
            Optional. If true, the deployed index will be accessible through
            public endpoint.
        network:
          type: string
          description: >-
            Optional. The full name of the Google Compute Engine
            [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks)
            to which the IndexEndpoint should be peered. Private services access
            must already be configured for the network. If left unspecified, the
            Endpoint is not peered with any network. network and
            private_service_connect_config are mutually exclusive.
            [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
            `projects/{project}/global/networks/{network}`. Where {project} is a
            project number, as in '12345', and {network} is network name.
      id: GoogleCloudAiplatformV1IndexEndpoint
      type: object
    GoogleCloudAiplatformV1ListTensorboardsResponse:
      description: Response message for TensorboardService.ListTensorboards.
      id: GoogleCloudAiplatformV1ListTensorboardsResponse
      properties:
        tensorboards:
          description: The Tensorboards mathching the request.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensorboard'
          type: array
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as ListTensorboardsRequest.page_token to
            retrieve the next page. If this field is omitted, there are no
            subsequent pages.
      type: object
    GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource:
      description: The Dataform Repository containing the input notebook.
      properties:
        commitSha:
          type: string
          description: >-
            The commit SHA to read repository with. If unset, the file will be
            read at HEAD.
        dataformRepositoryResourceName:
          description: >-
            The resource name of the Dataform Repository. Format:
            `projects/{project_id}/locations/{location}/repositories/{repository_id}`
          type: string
      type: object
      id: GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource
    GoogleCloudAiplatformV1PscAutomatedEndpoints:
      id: GoogleCloudAiplatformV1PscAutomatedEndpoints
      properties:
        projectId:
          type: string
          description: Corresponding project_id in pscAutomationConfigs
        matchAddress:
          type: string
          description: Ip Address created by the automated forwarding rule.
        network:
          type: string
          description: Corresponding network in pscAutomationConfigs.
      type: object
      description: >-
        PscAutomatedEndpoints defines the output of the forwarding rule
        automatically created by each PscAutomationConfig.
    GoogleCloudAiplatformV1SafetyInstance:
      description: Spec for safety instance.
      properties:
        prediction:
          description: Required. Output of the evaluated model.
          type: string
      id: GoogleCloudAiplatformV1SafetyInstance
      type: object
    GoogleCloudAiplatformV1TensorboardTimeSeries:
      type: object
      properties:
        pluginData:
          type: string
          format: byte
          description: Data of the current plugin, with the size limited to 65KB.
        etag:
          type: string
          description: >-
            Used to perform a consistent read-modify-write updates. If not set,
            a blind "overwrite" update happens.
        pluginName:
          type: string
          description: >-
            Immutable. Name of the plugin this time series pertain to. Such as
            Scalar, Tensor, Blob
        createTime:
          format: google-datetime
          description: Output only. Timestamp when this TensorboardTimeSeries was created.
          type: string
          readOnly: true
        description:
          type: string
          description: Description of this TensorboardTimeSeries.
        updateTime:
          readOnly: true
          type: string
          description: >-
            Output only. Timestamp when this TensorboardTimeSeries was last
            updated.
          format: google-datetime
        name:
          description: Output only. Name of the TensorboardTimeSeries.
          type: string
          readOnly: true
        metadata:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata
          description: >-
            Output only. Scalar, Tensor, or Blob metadata for this
            TensorboardTimeSeries.
        displayName:
          description: >-
            Required. User provided name of this TensorboardTimeSeries. This
            value should be unique among all TensorboardTimeSeries resources
            belonging to the same TensorboardRun resource (parent resource).
          type: string
        valueType:
          type: string
          enumDescriptions:
            - The value type is unspecified.
            - >-
              Used for TensorboardTimeSeries that is a list of scalars. E.g.
              accuracy of a model over epochs/time.
            - >-
              Used for TensorboardTimeSeries that is a list of tensors. E.g.
              histograms of weights of layer in a model over epoch/time.
            - >-
              Used for TensorboardTimeSeries that is a list of blob sequences.
              E.g. set of sample images with labels over epochs/time.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - SCALAR
            - TENSOR
            - BLOB_SEQUENCE
          description: Required. Immutable. Type of TensorboardTimeSeries value.
      description: TensorboardTimeSeries maps to times series produced in training runs
      id: GoogleCloudAiplatformV1TensorboardTimeSeries
    GoogleCloudAiplatformV1Attribution:
      id: GoogleCloudAiplatformV1Attribution
      description: Attribution that explains a particular prediction output.
      properties:
        outputName:
          type: string
          description: >-
            Output only. Name of the explain output. Specified as the key in
            ExplanationMetadata.outputs.
          readOnly: true
        outputIndex:
          type: array
          description: >-
            Output only. The index that locates the explained prediction output.
            If the prediction output is a scalar value, output_index is not
            populated. If the prediction output has multiple dimensions, the
            length of the output_index list is the same as the number of
            dimensions of the output. The i-th element in output_index is the
            element index of the i-th dimension of the output vector. Indices
            start from 0.
          items:
            type: integer
            format: int32
          readOnly: true
        instanceOutputValue:
          format: double
          description: >-
            Output only. Model predicted output on the corresponding explanation
            instance. The field name of the output is determined by the key in
            ExplanationMetadata.outputs. If the Model predicted output has
            multiple dimensions, this is the value in the output located by
            output_index.
          type: number
          readOnly: true
        approximationError:
          format: double
          description: >-
            Output only. Error of feature_attributions caused by approximation
            used in the explanation method. Lower value means more precise
            attributions. * For Sampled Shapley attribution, increasing
            path_count might reduce the error. * For Integrated Gradients
            attribution, increasing step_count might reduce the error. * For
            XRAI attribution, increasing step_count might reduce the error. See
            [this introduction](/vertex-ai/docs/explainable-ai/overview) for
            more information.
          readOnly: true
          type: number
        baselineOutputValue:
          description: >-
            Output only. Model predicted output if the input instance is
            constructed from the baselines of all the features defined in
            ExplanationMetadata.inputs. The field name of the output is
            determined by the key in ExplanationMetadata.outputs. If the Model's
            predicted output has multiple dimensions (rank > 1), this is the
            value in the output located by output_index. If there are multiple
            baselines, their output values are averaged.
          readOnly: true
          format: double
          type: number
        featureAttributions:
          type: any
          readOnly: true
          description: >-
            Output only. Attributions of each explained feature. Features are
            extracted from the prediction instances according to explanation
            metadata for inputs. The value is a struct, whose keys are the name
            of the feature. The values are how much the feature in the instance
            contributed to the predicted result. The format of the value is
            determined by the feature's input format: * If the feature is a
            scalar value, the attribution value is a floating number. * If the
            feature is an array of scalar values, the attribution value is an
            array. * If the feature is a struct, the attribution value is a
            struct. The keys in the attribution value struct are the same as the
            keys in the feature struct. The formats of the values in the
            attribution struct are determined by the formats of the values in
            the feature struct. The
            ExplanationMetadata.feature_attributions_schema_uri field, pointed
            to by the ExplanationSpec field of the Endpoint.deployed_models
            object, points to the schema file that describes the features and
            their attribution values (if it is populated).
        outputDisplayName:
          description: >-
            Output only. The display name of the output identified by
            output_index. For example, the predicted class name by a
            multi-classification Model. This field is only populated iff the
            Model predicts display names as a separate field along with the
            explained output. The predicted display name must has the same shape
            of the explained output, and can be located using output_index.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfig:
      type: object
      properties:
        snapshotAnalysis:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis
          description: The config for Snapshot Analysis Based Feature Monitoring.
        numericalThresholdConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig
          description: >-
            Threshold for numerical features of anomaly detection. This is
            shared by all objectives of Featurestore Monitoring for numerical
            features (i.e. Features with type (Feature.ValueType) DOUBLE or
            INT64).
        categoricalThresholdConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig
          description: >-
            Threshold for categorical features of anomaly detection. This is
            shared by all types of Featurestore Monitoring for categorical
            features (i.e. Features with type (Feature.ValueType) BOOL or
            STRING).
        importFeaturesAnalysis:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis
          description: The config for ImportFeatures Analysis Based Feature Monitoring.
      description: Configuration of how features in Featurestore are monitored.
      id: GoogleCloudAiplatformV1FeaturestoreMonitoringConfig
    GoogleCloudAiplatformV1ExportDataRequest:
      description: Request message for DatasetService.ExportData.
      type: object
      id: GoogleCloudAiplatformV1ExportDataRequest
      properties:
        exportConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportDataConfig'
          description: Required. The desired output location.
    GoogleCloudAiplatformV1BatchReadFeatureValuesRequest:
      type: object
      id: GoogleCloudAiplatformV1BatchReadFeatureValuesRequest
      properties:
        startTime:
          description: >-
            Optional. Excludes Feature values with feature generation timestamp
            before this timestamp. If not set, retrieve oldest values kept in
            Feature Store. Timestamp, if present, must not have higher than
            millisecond precision.
          type: string
          format: google-datetime
        bigqueryReadInstances:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQuerySource'
          description: Similar to csv_read_instances, but from BigQuery source.
        csvReadInstances:
          description: >-
            Each read instance consists of exactly one read timestamp and one or
            more entity IDs identifying entities of the corresponding
            EntityTypes whose Features are requested. Each output instance
            contains Feature values of requested entities concatenated together
            as of the read time. An example read instance may be `foo_entity_id,
            bar_entity_id, 2020-01-01T10:00:00.123Z`. An example output instance
            may be `foo_entity_id, bar_entity_id, 2020-01-01T10:00:00.123Z,
            foo_entity_feature1_value, bar_entity_feature2_value`. Timestamp in
            each read instance must be millisecond-aligned. `csv_read_instances`
            are read instances stored in a plain-text CSV file. The header
            should be: [ENTITY_TYPE_ID1], [ENTITY_TYPE_ID2], ..., timestamp The
            columns can be in any order. Values in the timestamp column must use
            the RFC 3339 format, e.g. `2012-07-30T10:43:17.123Z`.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CsvSource'
        entityTypeSpecs:
          description: >-
            Required. Specifies EntityType grouping Features to read values of
            and settings.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec
        destination:
          description: Required. Specifies output location and format.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValueDestination'
        passThroughFields:
          description: >-
            When not empty, the specified fields in the *_read_instances source
            will be joined as-is in the output, in addition to those fields from
            the Featurestore Entity. For BigQuery source, the type of the
            pass-through values will be automatically inferred. For CSV source,
            the pass-through values will be passed as opaque bytes.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField
          type: array
      description: Request message for FeaturestoreService.BatchReadFeatureValues.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetrics:
      properties:
        boundingBoxMetrics:
          type: array
          description: >-
            The bounding boxes match metrics for each intersection-over-union
            threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label
            confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics
        evaluatedBoundingBoxCount:
          format: int32
          type: integer
          description: >-
            The total number of bounding boxes (i.e. summed over all images) the
            ground truth used to create this evaluation had.
        boundingBoxMeanAveragePrecision:
          description: >-
            The single metric for bounding boxes evaluation: the
            `meanAveragePrecision` averaged over all
            `boundingBoxMetricsEntries`.
          type: number
          format: float
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetrics
      type: object
      description: Metrics for image object detection evaluation results.
    GoogleCloudAiplatformV1StructValue:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1StructFieldValue'
          description: A list of field values.
      id: GoogleCloudAiplatformV1StructValue
      description: Struct (or object) type feature value.
    GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult:
      type: object
      id: >-
        GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult
      description: >-
        Represents a partial result in batch migration operation for one
        MigrateResourceRequest.
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequest'
          description: >-
            It's the same as the value in
            MigrateResourceRequest.migrate_resource_requests.
        model:
          description: Migrated model resource name.
          type: string
        dataset:
          description: Migrated dataset resource name.
          type: string
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the migration request in case of failure.
    GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats:
      type: object
      id: >-
        GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats
      properties:
        validRecordCount:
          type: string
          format: int64
          description: Number of records in this file that were successfully processed.
        invalidRecordCount:
          format: int64
          description: Number of records in this file we skipped due to validate errors.
          type: string
        partialErrors:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError
          description: >-
            The detail information of the partial failures encountered for those
            invalid records that couldn't be parsed. Up to 50 partial errors
            will be reported.
        sourceGcsUri:
          description: Cloud Storage URI pointing to the original file in user's bucket.
          type: string
        invalidSparseRecordCount:
          format: int64
          type: string
          description: >-
            Number of sparse records in this file we skipped due to validate
            errors.
        validSparseRecordCount:
          format: int64
          description: >-
            Number of sparse records in this file that were successfully
            processed.
          type: string
    GoogleCloudAiplatformV1ExportFilterSplit:
      properties:
        trainingFilter:
          type: string
          description: >-
            Required. A filter on DataItems of the Dataset. DataItems that match
            this filter are used to train the Model. A filter with same syntax
            as the one used in DatasetService.ListDataItems may be used. If a
            single DataItem is matched by more than one of the FilterSplit
            filters, then it is assigned to the first set that applies to it in
            the training, validation, test order.
        validationFilter:
          type: string
          description: >-
            Required. A filter on DataItems of the Dataset. DataItems that match
            this filter are used to validate the Model. A filter with same
            syntax as the one used in DatasetService.ListDataItems may be used.
            If a single DataItem is matched by more than one of the FilterSplit
            filters, then it is assigned to the first set that applies to it in
            the training, validation, test order.
        testFilter:
          description: >-
            Required. A filter on DataItems of the Dataset. DataItems that match
            this filter are used to test the Model. A filter with same syntax as
            the one used in DatasetService.ListDataItems may be used. If a
            single DataItem is matched by more than one of the FilterSplit
            filters, then it is assigned to the first set that applies to it in
            the training, validation, test order.
          type: string
      type: object
      description: >-
        Assigns input data to training, validation, and test sets based on the
        given filters, data pieces not matched by any filter are ignored.
        Currently only supported for Datasets containing DataItems. If any of
        the filters in this message are to match nothing, then they can be set
        as '-' (the minus sign). Supported only for unstructured Datasets.
      id: GoogleCloudAiplatformV1ExportFilterSplit
    GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInput:
      description: Input for question answering correctness metric.
      type: object
      id: GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInput
      properties:
        metricSpec:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringCorrectnessSpec
          description: Required. Spec for question answering correctness score metric.
        instance:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInstance
          description: Required. Question answering correctness instance.
    GoogleCloudAiplatformV1ImportModelEvaluationRequest:
      type: object
      id: GoogleCloudAiplatformV1ImportModelEvaluationRequest
      properties:
        modelEvaluation:
          description: Required. Model evaluation resource to be imported.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation'
      description: Request message for ModelService.ImportModelEvaluation
    GoogleCloudAiplatformV1UpdateFeaturestoreOperationMetadata:
      id: GoogleCloudAiplatformV1UpdateFeaturestoreOperationMetadata
      description: Details of operations that perform update Featurestore.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Featurestore.
      type: object
    GoogleCloudAiplatformV1AddExecutionEventsResponse:
      properties: {}
      id: GoogleCloudAiplatformV1AddExecutionEventsResponse
      description: Response message for MetadataService.AddExecutionEvents.
      type: object
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation:
      id: GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation
      description: Annotation details specific to image segmentation.
      type: object
      properties:
        maskAnnotation:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation
          description: >-
            Mask based segmentation annotation. Only one mask annotation can
            exist for one image.
        polylineAnnotation:
          description: Polyline annotation.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation
        polygonAnnotation:
          description: Polygon annotation.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec:
      id: GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec
      properties:
        trainTrialJobSpec:
          description: >-
            Required. The spec of a train trial job. The same spec applies to
            all train trials.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
        maxParallelTrialCount:
          description: Required. The maximum number of trials to run in parallel.
          format: int32
          type: integer
        frequency:
          description: >-
            Required. Frequency of search trials to start train stage. Top N
            [TrainTrialSpec.max_parallel_trial_count] search trials will be
            trained for every M [TrainTrialSpec.frequency] trials searched.
          format: int32
          type: integer
      type: object
      description: Represent spec for train trials.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionRecognitionMetrics:
      description: Model evaluation metrics for video action recognition.
      type: object
      properties:
        videoActionMetrics:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics
          description: 'The metric entries for precision window lengths: 1s,2s,3s.'
        evaluatedActionCount:
          format: int32
          type: integer
          description: The number of ground truth actions used to create this evaluation.
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionRecognitionMetrics
    GoogleCloudAiplatformV1AnnotationSpec:
      id: GoogleCloudAiplatformV1AnnotationSpec
      description: Identifies a concept with which DataItems may be annotated with.
      properties:
        etag:
          description: >-
            Optional. Used to perform consistent read-modify-write updates. If
            not set, a blind "overwrite" update happens.
          type: string
        createTime:
          description: Output only. Timestamp when this AnnotationSpec was created.
          format: google-datetime
          type: string
          readOnly: true
        updateTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when AnnotationSpec was last updated.
          readOnly: true
        displayName:
          type: string
          description: >-
            Required. The user-defined name of the AnnotationSpec. The name can
            be up to 128 characters long and can consist of any UTF-8
            characters.
        name:
          description: Output only. Resource name of the AnnotationSpec.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ImportDataOperationMetadata:
      id: GoogleCloudAiplatformV1ImportDataOperationMetadata
      description: Runtime operation information for DatasetService.ImportData.
      properties:
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      type: object
    GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest:
      properties:
        deploymentResourcePool:
          description: Required. The DeploymentResourcePool to create.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeploymentResourcePool'
        deploymentResourcePoolId:
          type: string
          description: >-
            Required. The ID to use for the DeploymentResourcePool, which will
            become the final component of the DeploymentResourcePool's resource
            name. The maximum length is 63 characters, and valid characters are
            `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
      description: Request message for CreateDeploymentResourcePool method.
      type: object
      id: GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest
    GoogleCloudAiplatformV1StartNotebookRuntimeOperationMetadata:
      type: object
      id: GoogleCloudAiplatformV1StartNotebookRuntimeOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
        progressMessage:
          description: >-
            A human-readable message that shows the intermediate progress
            details of NotebookRuntime.
          type: string
      description: Metadata information for NotebookService.StartNotebookRuntime.
    GoogleCloudAiplatformV1ListDataLabelingJobsResponse:
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        dataLabelingJobs:
          description: >-
            A list of DataLabelingJobs that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob'
          type: array
      description: Response message for JobService.ListDataLabelingJobs.
      type: object
      id: GoogleCloudAiplatformV1ListDataLabelingJobsResponse
    GoogleCloudAiplatformV1DoubleArray:
      id: GoogleCloudAiplatformV1DoubleArray
      type: object
      properties:
        values:
          items:
            type: number
            format: double
          description: A list of double values.
          type: array
      description: A list of double values.
    GoogleCloudAiplatformV1ExportFeatureValuesRequest:
      type: object
      description: Request message for FeaturestoreService.ExportFeatureValues.
      properties:
        settings:
          description: Per-Feature export settings.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1DestinationFeatureSetting
          type: array
        destination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValueDestination'
          description: Required. Specifies destination location and format.
        featureSelector:
          description: Required. Selects Features to export values of.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureSelector'
        snapshotExport:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport
          description: >-
            Exports the latest Feature values of all entities of the EntityType
            within a time range.
        fullExport:
          description: >-
            Exports all historical values of all entities of the EntityType
            within a time range
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport
      id: GoogleCloudAiplatformV1ExportFeatureValuesRequest
    GoogleCloudAiplatformV1FetchFeatureValuesResponse:
      properties:
        protoStruct:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: Feature values in proto Struct format.
        keyValues:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList
          description: Feature values in KeyValue format.
        dataKey:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureViewDataKey'
          description: >-
            The data key associated with this response. Will only be populated
            for FeatureOnlineStoreService.StreamingFetchFeatureValues RPCs.
      type: object
      id: GoogleCloudAiplatformV1FetchFeatureValuesResponse
      description: Response message for FeatureOnlineStoreService.FetchFeatureValues
    GoogleCloudAiplatformV1ToolParameterKeyMatchInput:
      properties:
        metricSpec:
          description: Required. Spec for tool parameter key match metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ToolParameterKeyMatchSpec
        instances:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ToolParameterKeyMatchInstance
          type: array
          description: Required. Repeated tool parameter key match instances.
      description: Input for tool parameter key match metric.
      id: GoogleCloudAiplatformV1ToolParameterKeyMatchInput
      type: object
    GoogleCloudAiplatformV1IndexDatapointRestriction:
      properties:
        namespace:
          description: 'The namespace of this restriction. e.g.: color.'
          type: string
        allowList:
          items:
            type: string
          description: 'The attributes to allow in this namespace. e.g.: ''red'''
          type: array
        denyList:
          items:
            type: string
          type: array
          description: 'The attributes to deny in this namespace. e.g.: ''blue'''
      type: object
      id: GoogleCloudAiplatformV1IndexDatapointRestriction
      description: >-
        Restriction of a datapoint which describe its attributes(tokens) from
        each of several attribute categories(namespaces).
    GoogleCloudAiplatformV1NotebookEucConfig:
      id: GoogleCloudAiplatformV1NotebookEucConfig
      type: object
      properties:
        bypassActasCheck:
          readOnly: true
          type: boolean
          description: >-
            Output only. Whether ActAs check is bypassed for service account
            attached to the VM. If false, we need ActAs check for the default
            Compute Engine Service account. When a Runtime is created, a VM is
            allocated using Default Compute Engine Service Account. Any user
            requesting to use this Runtime requires Service Account User (ActAs)
            permission over this SA. If true, Runtime owner is using EUC and
            does not require the above permission as VM no longer use default
            Compute Engine SA, but a P4SA.
        eucDisabled:
          description: >-
            Input only. Whether EUC is disabled in this NotebookRuntimeTemplate.
            In proto3, the default value of a boolean is false. In this way, by
            default EUC will be enabled for NotebookRuntimeTemplate.
          type: boolean
      description: The euc configuration of NotebookRuntimeTemplate.
    GoogleCloudAiplatformV1PrivateServiceConnectConfig:
      type: object
      id: GoogleCloudAiplatformV1PrivateServiceConnectConfig
      properties:
        enablePrivateServiceConnect:
          description: >-
            Required. If true, expose the IndexEndpoint via private service
            connect.
          type: boolean
        serviceAttachment:
          description: >-
            Output only. The name of the generated service attachment resource.
            This is only populated if the endpoint is deployed with
            PrivateServiceConnect.
          type: string
          readOnly: true
        projectAllowlist:
          description: >-
            A list of Projects from which the forwarding rule will target the
            service attachment.
          type: array
          items:
            type: string
      description: Represents configuration for private service connect.
    GoogleCloudAiplatformV1CreateIndexEndpointOperationMetadata:
      id: GoogleCloudAiplatformV1CreateIndexEndpointOperationMetadata
      description: >-
        Runtime operation information for
        IndexEndpointService.CreateIndexEndpoint.
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
    GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec:
      description: Value specification for a parameter in `DOUBLE` type.
      properties:
        maxValue:
          format: double
          description: Required. Inclusive maximum value of the parameter.
          type: number
        defaultValue:
          format: double
          description: >-
            A default value for a `DOUBLE` parameter that is assumed to be a
            relatively good starting point. Unset value signals that there is no
            offered starting point. Currently only supported by the Vertex AI
            Vizier service. Not supported by HyperparameterTuningJob or
            TrainingPipeline.
          type: number
        minValue:
          format: double
          type: number
          description: Required. Inclusive minimum value of the parameter.
      id: GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec
      type: object
    GoogleCloudLocationListLocationsResponse:
      id: GoogleCloudLocationListLocationsResponse
      type: object
      description: The response message for Locations.ListLocations.
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
          type: array
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation
      type: object
      description: >-
        Training pipeline will perform following transformation functions. *
        Apply the transformation functions for Numerical columns. * Determine
        the year, month, day,and weekday. Treat each value from the timestamp as
        a Categorical column. * Invalid numerical values (for example, values
        that fall outside of a typical timestamp range, or are extreme values)
        receive no special treatment and are not removed.
      properties:
        timeFormat:
          description: >-
            The format in which that time field is expressed. The time_format
            must either be one of: * `unix-seconds` * `unix-milliseconds` *
            `unix-microseconds` * `unix-nanoseconds` (for respectively number of
            seconds, milliseconds, microseconds and nanoseconds since start of
            the Unix epoch); or be written in `strftime` syntax. If time_format
            is not set, then the default format is RFC 3339 `date-time` format,
            where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
          type: string
        columnName:
          type: string
    GoogleCloudAiplatformV1SchemaPredictInstanceTextExtractionPredictionInstance:
      id: >-
        GoogleCloudAiplatformV1SchemaPredictInstanceTextExtractionPredictionInstance
      description: Prediction input format for Text Extraction.
      type: object
      properties:
        mimeType:
          type: string
          description: >-
            The MIME type of the text snippet. The supported MIME types are
            listed below. - text/plain
        content:
          type: string
          description: The text snippet to make the predictions on.
        key:
          type: string
          description: >-
            This field is only used for batch prediction. If a key is provided,
            the batch prediction result will by mapped to this key. If omitted,
            then the batch prediction result will contain the entire input
            instance. Vertex AI will not check if keys in the request are
            duplicates, so it is up to the caller to ensure the keys are unique.
    GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig:
      type: object
      properties:
        scaling:
          description: >-
            Online serving scaling configuration. Only one of `fixed_node_count`
            and `scaling` can be set. Setting one will reset the other.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling
        fixedNodeCount:
          format: int32
          type: integer
          description: >-
            The number of nodes for the online store. The number of nodes
            doesn't scale automatically, but you can manually update the number
            of nodes. If set to 0, the featurestore will not have an online
            store and cannot be used for online serving.
      id: GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig
      description: >-
        OnlineServingConfig specifies the details for provisioning online
        serving resources.
    GoogleCloudAiplatformV1ToolCallValidSpec:
      id: GoogleCloudAiplatformV1ToolCallValidSpec
      properties: {}
      type: object
      description: Spec for tool call valid metric.
    GoogleCloudAiplatformV1Citation:
      type: object
      description: Source attributions for content.
      id: GoogleCloudAiplatformV1Citation
      properties:
        uri:
          type: string
          readOnly: true
          description: Output only. Url reference of the attribution.
        publicationDate:
          description: Output only. Publication date of the attribution.
          $ref: '#/components/schemas/GoogleTypeDate'
          readOnly: true
        endIndex:
          type: integer
          format: int32
          readOnly: true
          description: Output only. End index into the content.
        startIndex:
          format: int32
          readOnly: true
          type: integer
          description: Output only. Start index into the content.
        license:
          description: Output only. License of the attribution.
          readOnly: true
          type: string
        title:
          readOnly: true
          type: string
          description: Output only. Title of the attribution.
    GoogleCloudAiplatformV1GcsDestination:
      id: GoogleCloudAiplatformV1GcsDestination
      description: The Google Cloud Storage location where the output is to be written to.
      type: object
      properties:
        outputUriPrefix:
          description: >-
            Required. Google Cloud Storage URI to output directory. If the uri
            doesn't end with '/', a '/' will be automatically appended. The
            directory is created if it doesn't exist.
          type: string
    GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData:
      type: object
      description: Per month usage data
      id: GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData
      properties:
        userUsageData:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData
          description: Usage data for each user in the given month.
          type: array
    GoogleCloudAiplatformV1ListOptimalTrialsRequest:
      id: GoogleCloudAiplatformV1ListOptimalTrialsRequest
      properties: {}
      type: object
      description: Request message for VizierService.ListOptimalTrials.
    GoogleCloudAiplatformV1ExamplesOverride:
      description: Overrides for example-based explanations.
      properties:
        returnEmbeddings:
          type: boolean
          description: If true, return the embeddings instead of neighbors.
        neighborCount:
          type: integer
          format: int32
          description: The number of neighbors to return.
        crowdingCount:
          format: int32
          type: integer
          description: The number of neighbors to return that have the same crowding tag.
        restrictions:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ExamplesRestrictionsNamespace
          description: >-
            Restrict the resulting nearest neighbors to respect these
            constraints.
        dataFormat:
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - INSTANCES
            - EMBEDDINGS
          enumDescriptions:
            - Unspecified format. Must not be used.
            - Provided data is a set of model inputs.
            - Provided data is a set of embeddings.
          description: The format of the data being provided with each call.
          type: string
      type: object
      id: GoogleCloudAiplatformV1ExamplesOverride
    GoogleCloudAiplatformV1CancelCustomJobRequest:
      type: object
      properties: {}
      description: Request message for JobService.CancelCustomJob.
      id: GoogleCloudAiplatformV1CancelCustomJobRequest
    GoogleCloudAiplatformV1DirectRawPredictResponse:
      type: object
      properties:
        output:
          description: The prediction output.
          format: byte
          type: string
      description: Response message for PredictionService.DirectRawPredict.
      id: GoogleCloudAiplatformV1DirectRawPredictResponse
    GoogleCloudAiplatformV1SchemaTextSegment:
      type: object
      properties:
        startOffset:
          type: string
          format: uint64
          description: >-
            Zero-based character index of the first character of the text
            segment (counting characters from the beginning of the text).
        content:
          type: string
          description: The text content in the segment for output only.
        endOffset:
          type: string
          description: >-
            Zero-based character index of the first character past the end of
            the text segment (counting character from the beginning of the
            text). The character at the end_offset is NOT included in the text
            segment.
          format: uint64
      id: GoogleCloudAiplatformV1SchemaTextSegment
      description: The text segment inside of DataItem.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics:
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics
      description: >-
        Bounding box matching model metrics for a single intersection-over-union
        threshold and multiple label match confidence thresholds.
      type: object
      properties:
        meanAveragePrecision:
          format: float
          type: number
          description: The mean average precision, most often close to `auPrc`.
        iouThreshold:
          format: float
          description: >-
            The intersection-over-union threshold value used to compute this
            metrics entry.
          type: number
        confidenceMetrics:
          description: >-
            Metrics for each label-match confidence_threshold from
            0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is
            derived from them.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics
    GoogleCloudAiplatformV1ToolNameMatchMetricValue:
      id: GoogleCloudAiplatformV1ToolNameMatchMetricValue
      description: Tool name match metric value for an instance.
      properties:
        score:
          type: number
          format: float
          readOnly: true
          description: Output only. Tool name match score.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation
      description: >-
        Treats the column as text array and performs following transformation
        functions. * Concatenate all text values in the array into a single text
        value using a space (" ") as a delimiter, and then treat the result as a
        single text value. Apply the transformations for Text columns. * Empty
        arrays treated as an empty text.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1ListTuningJobsResponse:
      id: GoogleCloudAiplatformV1ListTuningJobsResponse
      type: object
      properties:
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Pass to
            ListTuningJobsRequest.page_token to obtain that page.
          type: string
        tuningJobs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TuningJob'
          type: array
          description: List of TuningJobs in the requested page.
      description: Response message for GenAiTuningService.ListTuningJobs
    GoogleCloudAiplatformV1TensorboardTensor:
      description: One point viewable on a tensor metric plot.
      id: GoogleCloudAiplatformV1TensorboardTensor
      type: object
      properties:
        value:
          type: string
          description: >-
            Required. Serialized form of
            https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/tensor.proto
          format: byte
        versionNumber:
          type: integer
          format: int32
          description: Optional. Version number of TensorProto used to serialize value.
    GoogleCloudAiplatformV1FeatureViewDataKey:
      type: object
      id: GoogleCloudAiplatformV1FeatureViewDataKey
      description: Lookup key for a feature view.
      properties:
        key:
          type: string
          description: String key to use for lookup.
        compositeKey:
          description: >-
            The actual Entity ID will be composed from this struct. This should
            match with the way ID is defined in the FeatureView spec.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureViewDataKeyCompositeKey
    GoogleCloudAiplatformV1PurgeExecutionsResponse:
      description: Response message for MetadataService.PurgeExecutions.
      type: object
      properties:
        purgeSample:
          items:
            type: string
          description: >-
            A sample of the Execution names that will be deleted. Only populated
            if `force` is set to false. The maximum number of samples is 100 (it
            is possible to return fewer).
          type: array
        purgeCount:
          type: string
          format: int64
          description: >-
            The number of Executions that this request deleted (or, if `force`
            is false, the number of Executions that will be deleted). This can
            be an estimate.
      id: GoogleCloudAiplatformV1PurgeExecutionsResponse
    GoogleCloudAiplatformV1RougeResults:
      description: Results for rouge metric.
      id: GoogleCloudAiplatformV1RougeResults
      properties:
        rougeMetricValues:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1RougeMetricValue'
          readOnly: true
          type: array
          description: Output only. Rouge metric values.
      type: object
    GoogleCloudAiplatformV1SummarizationVerbosityInput:
      id: GoogleCloudAiplatformV1SummarizationVerbosityInput
      properties:
        instance:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationVerbosityInstance
          description: Required. Summarization verbosity instance.
        metricSpec:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationVerbositySpec
          description: Required. Spec for summarization verbosity score metric.
      type: object
      description: Input for summarization verbosity metric.
    GoogleCloudAiplatformV1UpgradeNotebookRuntimeOperationMetadata:
      properties:
        progressMessage:
          description: >-
            A human-readable message that shows the intermediate progress
            details of NotebookRuntime.
          type: string
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
      id: GoogleCloudAiplatformV1UpgradeNotebookRuntimeOperationMetadata
      description: Metadata information for NotebookService.UpgradeNotebookRuntime.
      type: object
    GoogleCloudAiplatformV1Candidate:
      description: A response candidate generated from the model.
      id: GoogleCloudAiplatformV1Candidate
      type: object
      properties:
        safetyRatings:
          type: array
          description: >-
            Output only. List of ratings for the safety of a response candidate.
            There is at most one rating per category.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SafetyRating'
          readOnly: true
        citationMetadata:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CitationMetadata'
          description: Output only. Source attribution of the generated content.
        avgLogprobs:
          type: number
          readOnly: true
          format: double
          description: Output only. Average log probability score of the candidate.
        index:
          readOnly: true
          description: Output only. Index of the candidate.
          format: int32
          type: integer
        finishMessage:
          description: >-
            Output only. Describes the reason the mode stopped generating tokens
            in more detail. This is only filled when `finish_reason` is set.
          readOnly: true
          type: string
        groundingMetadata:
          description: >-
            Output only. Metadata specifies sources used to ground generated
            content.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GroundingMetadata'
        content:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Content'
          readOnly: true
          description: Output only. Content parts of the candidate.
        finishReason:
          description: >-
            Output only. The reason why the model stopped generating tokens. If
            empty, the model has not stopped generating the tokens.
          enumDescriptions:
            - The finish reason is unspecified.
            - >-
              Token generation reached a natural stopping point or a configured
              stop sequence.
            - Token generation reached the configured maximum output tokens.
            - >-
              Token generation stopped because the content potentially contains
              safety violations. NOTE: When streaming, content is empty if
              content filters blocks the output.
            - >-
              Token generation stopped because the content potentially contains
              copyright violations.
            - All other reasons that stopped the token generation.
            - >-
              Token generation stopped because the content contains forbidden
              terms.
            - >-
              Token generation stopped for potentially containing prohibited
              content.
            - >-
              Token generation stopped because the content potentially contains
              Sensitive Personally Identifiable Information (SPII).
            - The function call generated by the model is invalid.
          enum:
            - FINISH_REASON_UNSPECIFIED
            - STOP
            - MAX_TOKENS
            - SAFETY
            - RECITATION
            - OTHER
            - BLOCKLIST
            - PROHIBITED_CONTENT
            - SPII
            - MALFORMED_FUNCTION_CALL
          type: string
          readOnly: true
    GoogleCloudAiplatformV1PersistentResource:
      description: >-
        Represents long-lasting resources that are dedicated to users to runs
        custom workloads. A PersistentResource can have multiple node pools and
        each node pool can have its own machine spec.
      type: object
      id: GoogleCloudAiplatformV1PersistentResource
      properties:
        displayName:
          type: string
          description: >-
            Optional. The display name of the PersistentResource. The name can
            be up to 128 characters long and can consist of any UTF-8
            characters.
        labels:
          type: object
          description: >-
            Optional. The labels with user-defined metadata to organize
            PersistentResource. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. See https://goo.gl/xmQnxf for more information and
            examples of labels.
          additionalProperties:
            type: string
        reservedIpRanges:
          items:
            type: string
          type: array
          description: >-
            Optional. A list of names for the reserved IP ranges under the VPC
            network that can be used for this persistent resource. If set, we
            will deploy the persistent resource within the provided IP ranges.
            Otherwise, the persistent resource is deployed to any IP ranges
            under the provided VPC network. Example: ['vertex-ai-ip-range'].
        satisfiesPzs:
          description: Output only. Reserved for future use.
          type: boolean
          readOnly: true
        resourceRuntimeSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ResourceRuntimeSpec'
          description: >-
            Optional. Persistent Resource runtime spec. For example, used for
            Ray cluster configuration.
        createTime:
          type: string
          readOnly: true
          description: Output only. Time when the PersistentResource was created.
          format: google-datetime
        error:
          readOnly: true
          description: >-
            Output only. Only populated when persistent resource's state is
            `STOPPING` or `ERROR`.
          $ref: '#/components/schemas/GoogleRpcStatus'
        resourceRuntime:
          description: Output only. Runtime information of the Persistent Resource.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ResourceRuntime'
        name:
          description: Immutable. Resource name of a PersistentResource.
          type: string
        encryptionSpec:
          description: >-
            Optional. Customer-managed encryption key spec for a
            PersistentResource. If set, this PersistentResource and all
            sub-resources of this PersistentResource will be secured by this
            key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: >-
            Output only. Time when the PersistentResource was most recently
            updated.
        startTime:
          description: >-
            Output only. Time when the PersistentResource for the first time
            entered the `RUNNING` state.
          type: string
          readOnly: true
          format: google-datetime
        network:
          description: >-
            Optional. The full name of the Compute Engine
            [network](/compute/docs/networks-and-firewalls#networks) to peered
            with Vertex AI to host the persistent resources. For example,
            `projects/12345/global/networks/myVPC`.
            [Format](/compute/docs/reference/rest/v1/networks/insert) is of the
            form `projects/{project}/global/networks/{network}`. Where {project}
            is a project number, as in `12345`, and {network} is a network name.
            To specify this field, you must have already [configured VPC Network
            Peering for Vertex
            AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If
            this field is left unspecified, the resources aren't peered with any
            network.
          type: string
        resourcePools:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ResourcePool'
          description: Required. The spec of the pools of different resources.
          type: array
        satisfiesPzi:
          type: boolean
          readOnly: true
          description: Output only. Reserved for future use.
        state:
          type: string
          description: Output only. The detailed state of a Study.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - STOPPING
            - ERROR
            - REBOOTING
            - UPDATING
          enumDescriptions:
            - Not set.
            - >-
              The PROVISIONING state indicates the persistent resources is being
              created.
            - >-
              The RUNNING state indicates the persistent resource is healthy and
              fully usable.
            - >-
              The STOPPING state indicates the persistent resource is being
              deleted.
            - >-
              The ERROR state indicates the persistent resource may be unusable.
              Details can be found in the `error` field.
            - >-
              The REBOOTING state indicates the persistent resource is being
              rebooted (PR is not available right now but is expected to be
              ready again later).
            - >-
              The UPDATING state indicates the persistent resource is being
              updated.
    GoogleCloudAiplatformV1CreateMetadataStoreOperationMetadata:
      id: GoogleCloudAiplatformV1CreateMetadataStoreOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for creating a MetadataStore.
      type: object
      description: Details of operations that perform MetadataService.CreateMetadataStore.
    GoogleCloudAiplatformV1ModelEvaluationSlice:
      type: object
      description: >-
        A collection of metrics calculated by comparing Model's predictions on a
        slice of the test data against ground truth annotations.
      properties:
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Timestamp when this ModelEvaluationSlice was created.
        modelExplanation:
          description: >-
            Output only. Aggregated explanation metrics for the Model's
            prediction output over the data this ModelEvaluation uses. This
            field is populated only if the Model is evaluated with explanations,
            and only for tabular Models.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelExplanation'
          readOnly: true
        metricsSchemaUri:
          readOnly: true
          description: >-
            Output only. Points to a YAML file stored on Google Cloud Storage
            describing the metrics of this ModelEvaluationSlice. The schema is
            defined as an OpenAPI 3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
          type: string
        name:
          readOnly: true
          description: Output only. The resource name of the ModelEvaluationSlice.
          type: string
        slice:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSlice
          description: >-
            Output only. The slice of the test data that is used to evaluate the
            Model.
        metrics:
          type: any
          readOnly: true
          description: >-
            Output only. Sliced evaluation metrics of the Model. The schema of
            the metrics is stored in metrics_schema_uri
      id: GoogleCloudAiplatformV1ModelEvaluationSlice
    GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec:
      description: >-
        Configuration for ConvexAutomatedStoppingSpec. When there are enough
        completed trials (configured by min_measurement_count), for pending
        trials with enough measurements and steps, the policy first computes an
        overestimate of the objective value at max_num_steps according to the
        slope of the incomplete objective value curve. No prediction can be made
        if the curve is completely flat. If the overestimation is worse than the
        best objective value of the completed trials, this pending trial will be
        early-stopped, but a last measurement will be added to the pending trial
        with max_num_steps and predicted objective value from the autoregression
        model.
      properties:
        updateAllStoppedTrials:
          type: boolean
          description: >-
            ConvexAutomatedStoppingSpec by default only updates the trials that
            needs to be early stopped using a newly trained auto-regressive
            model. When this flag is set to True, all stopped trials from the
            beginning are potentially updated in terms of their
            `final_measurement`. Also, note that the training logic of
            autoregressive models is different in this case. Enabling this
            option has shown better results and this may be the default option
            in the future.
        minStepCount:
          type: string
          format: int64
          description: >-
            Minimum number of steps for a trial to complete. Trials which do not
            have a measurement with step_count > min_step_count won't be
            considered for early stopping. It's ok to set it to 0, and a trial
            can be early stopped at any stage. By default, min_step_count is set
            to be one-tenth of the max_step_count. When use_elapsed_duration is
            true, this field is set to the minimum elapsed seconds.
        learningRateParameterName:
          type: string
          description: >-
            The hyper-parameter name used in the tuning job that stands for
            learning rate. Leave it blank if learning rate is not in a parameter
            in tuning. The learning_rate is used to estimate the objective value
            of the ongoing trial.
        maxStepCount:
          type: string
          description: >-
            Steps used in predicting the final objective for early stopped
            trials. In general, it's set to be the same as the defined steps in
            training / tuning. If not defined, it will learn it from the
            completed trials. When use_steps is false, this field is set to the
            maximum elapsed seconds.
          format: int64
        minMeasurementCount:
          type: string
          format: int64
          description: >-
            The minimal number of measurements in a Trial. Early-stopping checks
            will not trigger if less than min_measurement_count+1 completed
            trials or pending trials with less than min_measurement_count
            measurements. If not defined, the default value is 5.
        useElapsedDuration:
          description: >-
            This bool determines whether or not the rule is applied based on
            elapsed_secs or steps. If use_elapsed_duration==false, the early
            stopping decision is made according to the predicted objective
            values according to the target steps. If use_elapsed_duration==true,
            elapsed_secs is used instead of steps. Also, in this case, the
            parameters max_num_steps and min_num_steps are overloaded to contain
            max_elapsed_seconds and min_elapsed_seconds.
          type: boolean
      type: object
      id: GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec
    GoogleCloudAiplatformV1AssignNotebookRuntimeRequest:
      type: object
      id: GoogleCloudAiplatformV1AssignNotebookRuntimeRequest
      properties:
        notebookRuntimeTemplate:
          type: string
          description: >-
            Required. The resource name of the NotebookRuntimeTemplate based on
            which a NotebookRuntime will be assigned (reuse or create a new
            one).
        notebookRuntimeId:
          description: Optional. User specified ID for the notebook runtime.
          type: string
        notebookRuntime:
          description: >-
            Required. Provide runtime specific information (e.g. runtime owner,
            notebook id) used for NotebookRuntime assignment.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NotebookRuntime'
      description: Request message for NotebookService.AssignNotebookRuntime.
    GoogleCloudAiplatformV1ExportFeatureValuesOperationMetadata:
      type: object
      id: GoogleCloudAiplatformV1ExportFeatureValuesOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Featurestore export Feature values.
      description: Details of operations that exports Features values.
    GoogleCloudAiplatformV1ListTensorboardExperimentsResponse:
      id: GoogleCloudAiplatformV1ListTensorboardExperimentsResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as
            ListTensorboardExperimentsRequest.page_token to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        tensorboardExperiments:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment'
          type: array
          description: The TensorboardExperiments mathching the request.
      type: object
      description: Response message for TensorboardService.ListTensorboardExperiments.
    GoogleCloudAiplatformV1UndeployModelRequest:
      type: object
      id: GoogleCloudAiplatformV1UndeployModelRequest
      description: Request message for EndpointService.UndeployModel.
      properties:
        trafficSplit:
          type: object
          additionalProperties:
            format: int32
            type: integer
          description: >-
            If this field is provided, then the Endpoint's traffic_split will be
            overwritten with it. If last DeployedModel is being undeployed from
            the Endpoint, the [Endpoint.traffic_split] will always end up empty
            when this call returns. A DeployedModel will be successfully
            undeployed only if it doesn't have any traffic assigned to it when
            this method executes, or if this field unassigns any traffic to it.
        deployedModelId:
          description: >-
            Required. The ID of the DeployedModel to be undeployed from the
            Endpoint.
          type: string
    GoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult
      properties:
        categoryMask:
          type: string
          description: >-
            A PNG image where each pixel in the mask represents the category in
            which the pixel in the original image was predicted to belong to.
            The size of this image will be the same as the original image. The
            mapping between the AnntoationSpec and the color can be found in
            model's metadata. The model will choose the most likely category and
            if none of the categories reach the confidence threshold, the pixel
            will be marked as background.
        confidenceMask:
          description: >-
            A one channel image which is encoded as an 8bit lossless PNG. The
            size of the image will be the same as the original image. For a
            specific pixel, darker color means less confidence in correctness of
            the cateogry in the categoryMask for the corresponding pixel. Black
            means no confidence and white means complete confidence.
          type: string
      description: Prediction output format for Image Segmentation.
    GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig:
      type: object
      description: >-
        Configuration defining how to transform batch prediction input instances
        to the instances that the Model accepts.
      properties:
        excludedFields:
          items:
            type: string
          type: array
          description: >-
            Fields that will be excluded in the prediction instance that is sent
            to the Model. Excluded will be attached to the batch prediction
            output if key_field is not specified. When excluded_fields is
            populated, included_fields must be empty. The input must be JSONL
            with objects at each line, BigQuery or TfRecord.
        includedFields:
          type: array
          items:
            type: string
          description: >-
            Fields that will be included in the prediction instance that is sent
            to the Model. If instance_type is `array`, the order of field names
            in included_fields also determines the order of the values in the
            array. When included_fields is populated, excluded_fields must be
            empty. The input must be JSONL with objects at each line, BigQuery
            or TfRecord.
        keyField:
          type: string
          description: >-
            The name of the field that is considered as a key. The values
            identified by the key field is not included in the transformed
            instances that is sent to the Model. This is similar to specifying
            this name of the field in excluded_fields. In addition, the batch
            prediction output will not include the instances. Instead the output
            will only include the value of the key field, in a field named `key`
            in the output: * For `jsonl` output format, the output will have a
            `key` field instead of the `instance` field. * For `csv`/`bigquery`
            output format, the output will have have a `key` column instead of
            the instance feature columns. The input must be JSONL with objects
            at each line, CSV, BigQuery or TfRecord.
        instanceType:
          description: >-
            The format of the instance that the Model accepts. Vertex AI will
            convert compatible batch prediction input instance formats to the
            specified format. Supported values are: * `object`: Each input is
            converted to JSON object format. * For `bigquery`, each row is
            converted to an object. * For `jsonl`, each line of the JSONL input
            must be an object. * Does not apply to `csv`, `file-list`,
            `tf-record`, or `tf-record-gzip`. * `array`: Each input is converted
            to JSON array format. * For `bigquery`, each row is converted to an
            array. The order of columns is determined by the BigQuery column
            order, unless included_fields is populated. included_fields must be
            populated for specifying field orders. * For `jsonl`, if each line
            of the JSONL input is an object, included_fields must be populated
            for specifying field orders. * Does not apply to `csv`, `file-list`,
            `tf-record`, or `tf-record-gzip`. If not specified, Vertex AI
            converts the batch prediction input as follows: * For `bigquery` and
            `csv`, the behavior is the same as `array`. The order of columns is
            the same as defined in the file or table, unless included_fields is
            populated. * For `jsonl`, the prediction instance format is
            determined by each line of the input. * For
            `tf-record`/`tf-record-gzip`, each record will be converted to an
            object in the format of `{"b64": }`, where `` is the Base64-encoded
            string of the content of the record. * For `file-list`, each file in
            the list will be converted to an object in the format of `{"b64":
            }`, where `` is the Base64-encoded string of the content of the
            file.
          type: string
      id: GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig
    GoogleCloudAiplatformV1CreateFeaturestoreOperationMetadata:
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Featurestore.
      type: object
      id: GoogleCloudAiplatformV1CreateFeaturestoreOperationMetadata
      description: Details of operations that perform create Featurestore.
    GoogleCloudAiplatformV1NearestNeighborsNeighbor:
      type: object
      properties:
        entityId:
          type: string
          description: The id of the similar entity.
        entityKeyValues:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FetchFeatureValuesResponse
          description: >-
            The attributes of the neighbor, e.g. filters, crowding and metadata
            Note that full entities are returned only when "return_full_entity"
            is set to true. Otherwise, only the "entity_id" and "distance"
            fields are populated.
        distance:
          description: The distance between the neighbor and the query vector.
          type: number
          format: double
      id: GoogleCloudAiplatformV1NearestNeighborsNeighbor
      description: A neighbor of the query vector.
    GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput:
      type: object
      description: The output of a multi-trial Neural Architecture Search (NAS) jobs.
      id: GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput
      properties:
        trainTrials:
          description: >-
            Output only. List of NasTrials that were started as part of train
            stage.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrial'
        searchTrials:
          description: >-
            Output only. List of NasTrials that were started as part of search
            stage.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrial'
          type: array
          readOnly: true
    GoogleCloudAiplatformV1ListEntityTypesResponse:
      id: GoogleCloudAiplatformV1ListEntityTypesResponse
      description: Response message for FeaturestoreService.ListEntityTypes.
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as ListEntityTypesRequest.page_token to
            retrieve the next page. If this field is omitted, there are no
            subsequent pages.
        entityTypes:
          type: array
          description: The EntityTypes matching the request.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityType'
      type: object
    GoogleCloudAiplatformV1ModelEvaluation:
      description: >-
        A collection of metrics calculated by comparing Model's predictions on
        all of the test data against annotations from the test data.
      properties:
        dataItemSchemaUri:
          type: string
          description: >-
            Points to a YAML file stored on Google Cloud Storage describing
            EvaluatedDataItemView.data_item_payload and
            EvaluatedAnnotation.data_item_payload. The schema is defined as an
            OpenAPI 3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            This field is not populated if there are neither
            EvaluatedDataItemViews nor EvaluatedAnnotations under this
            ModelEvaluation.
        explanationSpecs:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec
          type: array
          description: >-
            Describes the values of ExplanationSpec that are used for explaining
            the predicted values on the evaluated data.
        metadata:
          description: >-
            The metadata of the ModelEvaluation. For the ModelEvaluation
            uploaded from Managed Pipeline, metadata contains a structured value
            with keys of "pipeline_job_id", "evaluation_dataset_type",
            "evaluation_dataset_path", "row_based_metrics_path".
          type: any
        annotationSchemaUri:
          type: string
          description: >-
            Points to a YAML file stored on Google Cloud Storage describing
            EvaluatedDataItemView.predictions,
            EvaluatedDataItemView.ground_truths,
            EvaluatedAnnotation.predictions, and
            EvaluatedAnnotation.ground_truths. The schema is defined as an
            OpenAPI 3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            This field is not populated if there are neither
            EvaluatedDataItemViews nor EvaluatedAnnotations under this
            ModelEvaluation.
        createTime:
          readOnly: true
          description: Output only. Timestamp when this ModelEvaluation was created.
          format: google-datetime
          type: string
        displayName:
          description: The display name of the ModelEvaluation.
          type: string
        name:
          type: string
          readOnly: true
          description: Output only. The resource name of the ModelEvaluation.
        modelExplanation:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelExplanation'
          description: >-
            Aggregated explanation metrics for the Model's prediction output
            over the data this ModelEvaluation uses. This field is populated
            only if the Model is evaluated with explanations, and only for
            AutoML tabular Models. 
        sliceDimensions:
          description: >-
            All possible dimensions of ModelEvaluationSlices. The dimensions can
            be used as the filter of the ModelService.ListModelEvaluationSlices
            request, in the form of `slice.dimension = `.
          type: array
          items:
            type: string
        metrics:
          type: any
          description: >-
            Evaluation metrics of the Model. The schema of the metrics is stored
            in metrics_schema_uri
        metricsSchemaUri:
          type: string
          description: >-
            Points to a YAML file stored on Google Cloud Storage describing the
            metrics of this ModelEvaluation. The schema is defined as an OpenAPI
            3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
      type: object
      id: GoogleCloudAiplatformV1ModelEvaluation
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec:
      type: object
      id: GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec
      properties:
        parameterSpec:
          description: Required. The spec for a conditional parameter.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpec'
        parentIntValues:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition
          description: >-
            The spec for matching values from a parent parameter of `INTEGER`
            type.
        parentCategoricalValues:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition
          description: >-
            The spec for matching values from a parent parameter of
            `CATEGORICAL` type.
        parentDiscreteValues:
          description: >-
            The spec for matching values from a parent parameter of `DISCRETE`
            type.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition
      description: Represents a parameter spec with condition from its parent parameter.
    GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadata:
      properties:
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
        partialResults:
          description: >-
            Partial results that reflect the latest migration operation
            progress.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult
      type: object
      id: GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadata
      description: >-
        Runtime operation information for
        MigrationService.BatchMigrateResources.
    GoogleCloudAiplatformV1CreatePersistentResourceOperationMetadata:
      id: GoogleCloudAiplatformV1CreatePersistentResourceOperationMetadata
      description: Details of operations that perform create PersistentResource.
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for PersistentResource.
        progressMessage:
          description: Progress Message for Create LRO
          type: string
    GoogleCloudAiplatformV1IndexDatapointCrowdingTag:
      id: GoogleCloudAiplatformV1IndexDatapointCrowdingTag
      type: object
      properties:
        crowdingAttribute:
          type: string
          description: >-
            The attribute value used for crowding. The maximum number of
            neighbors to return per crowding attribute value
            (per_crowding_attribute_num_neighbors) is configured per-query. This
            field is ignored if per_crowding_attribute_num_neighbors is larger
            than the total number of neighbors to return for a given query.
      description: >-
        Crowding tag is a constraint on a neighbor list produced by nearest
        neighbor search requiring that no more than some value k' of the k
        neighbors returned have the same value of crowding_attribute.
    GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest:
      id: GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest
      description: Request message for NotebookService.UpgradeNotebookRuntime.
      properties: {}
      type: object
    GoogleCloudAiplatformV1ModelDeploymentMonitoringJob:
      type: object
      properties:
        error:
          description: >-
            Output only. Only populated when the job's state is
            `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
          $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        satisfiesPzi:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        endpoint:
          type: string
          description: >-
            Required. Endpoint resource name. Format:
            `projects/{project}/locations/{location}/endpoints/{endpoint}`
        enableMonitoringPipelineLogs:
          type: boolean
          description: >-
            If true, the scheduled monitoring pipeline logs are sent to Google
            Cloud Logging, including pipeline status and anomalies detected.
            Please note the logs incur cost, which are subject to [Cloud Logging
            pricing](https://cloud.google.com/logging#pricing).
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: >-
            Output only. Timestamp when this ModelDeploymentMonitoringJob was
            created.
        loggingSamplingStrategy:
          description: Required. Sample Strategy for logging.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SamplingStrategy'
        scheduleState:
          enum:
            - MONITORING_SCHEDULE_STATE_UNSPECIFIED
            - PENDING
            - OFFLINE
            - RUNNING
          description: >-
            Output only. Schedule state when the monitoring job is in Running
            state.
          type: string
          readOnly: true
          enumDescriptions:
            - Unspecified state.
            - The pipeline is picked up and wait to run.
            - The pipeline is offline and will be scheduled for next run.
            - The pipeline is running.
        modelMonitoringAlertConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelMonitoringAlertConfig
          description: Alert config for model monitoring.
        updateTime:
          format: google-datetime
          description: >-
            Output only. Timestamp when this ModelDeploymentMonitoringJob was
            updated most recently.
          type: string
          readOnly: true
        modelDeploymentMonitoringScheduleConfig:
          description: Required. Schedule config for running the monitoring job.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig
        name:
          description: Output only. Resource name of a ModelDeploymentMonitoringJob.
          type: string
          readOnly: true
        statsAnomaliesBaseDirectory:
          description: Stats anomalies base folder path.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
        labels:
          description: >-
            The labels with user-defined metadata to organize your
            ModelDeploymentMonitoringJob. Label keys and values can be no longer
            than 64 characters (Unicode codepoints), can only contain lowercase
            letters, numeric characters, underscores and dashes. International
            characters are allowed. See https://goo.gl/xmQnxf for more
            information and examples of labels.
          type: object
          additionalProperties:
            type: string
        analysisInstanceSchemaUri:
          description: >-
            YAML schema file uri describing the format of a single instance that
            you want Tensorflow Data Validation (TFDV) to analyze. If this field
            is empty, all the feature data types are inferred from
            predict_instance_schema_uri, meaning that TFDV will use the data in
            the exact format(data type) as prediction request/response. If there
            are any data type differences between predict instance and TFDV
            instance, this field can be used to override the schema. For models
            trained with Vertex AI, this field must be set as all the fields in
            predict instance formatted as string.
          type: string
        modelDeploymentMonitoringObjectiveConfigs:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig
          description: >-
            Required. The config for monitoring objectives. This is a per
            DeployedModel config. Each DeployedModel needs to be configured
            separately.
        encryptionSpec:
          description: >-
            Customer-managed encryption key spec for a
            ModelDeploymentMonitoringJob. If set, this
            ModelDeploymentMonitoringJob and all sub-resources of this
            ModelDeploymentMonitoringJob will be secured by this key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        latestMonitoringPipelineMetadata:
          readOnly: true
          description: Output only. Latest triggered monitoring pipeline metadata.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata
        state:
          readOnly: true
          type: string
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          description: >-
            Output only. The detailed state of the monitoring job. When the job
            is still creating, the state will be 'PENDING'. Once the job is
            successfully created, the state will be 'RUNNING'. Pause the job,
            the state will be 'PAUSED'. Resume the job, the state will return to
            'RUNNING'.
          enumDescriptions:
            - The job state is unspecified.
            - >-
              The job has been just created or resumed and processing has not
              yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - >-
              The job is being cancelled. From this state the job may only go to
              either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
              `JOB_STATE_CANCELLED`.
            - The job has been cancelled.
            - The job has been stopped, and can be resumed.
            - The job has expired.
            - >-
              The job is being updated. Only jobs in the `RUNNING` state can be
              updated. After updating, the job goes back to the `RUNNING` state.
            - >-
              The job is partially succeeded, some results may be missing due to
              errors.
        samplePredictInstance:
          description: >-
            Sample Predict instance, same format as PredictRequest.instances,
            this can be set as a replacement of
            ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not
            set, we will generate predict schema from collected predict
            requests.
          type: any
        displayName:
          type: string
          description: >-
            Required. The user-defined name of the ModelDeploymentMonitoringJob.
            The name can be up to 128 characters long and can consist of any
            UTF-8 characters. Display name of a ModelDeploymentMonitoringJob.
        satisfiesPzs:
          readOnly: true
          description: Output only. Reserved for future use.
          type: boolean
        bigqueryTables:
          readOnly: true
          description: >-
            Output only. The created bigquery tables for the job under customer
            project. Customer could do their own query & analysis. There could
            be 4 log tables in maximum: 1. Training data logging predict
            request/response 2. Serving data logging predict request/response
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable
        predictInstanceSchemaUri:
          type: string
          description: >-
            YAML schema file uri describing the format of a single instance,
            which are given to format this Endpoint's prediction (and
            explanation). If not set, we will generate predict schema from
            collected predict requests.
        logTtl:
          type: string
          format: google-duration
          description: >-
            The TTL of BigQuery tables in user projects which stores logs. A day
            is the basic unit of the TTL and we take the ceil of TTL/86400(a
            day). e.g. { second: 3600} indicates ttl = 1 day.
        nextScheduleTime:
          description: >-
            Output only. Timestamp when this monitoring pipeline will be
            scheduled to run for the next round.
          readOnly: true
          format: google-datetime
          type: string
      description: >-
        Represents a job that runs periodically to monitor the deployed models
        in an endpoint. It will analyze the logged training & prediction data to
        detect any abnormal behaviors.
      id: GoogleCloudAiplatformV1ModelDeploymentMonitoringJob
    GoogleCloudAiplatformV1PipelineJobRuntimeConfig:
      description: The runtime config of a PipelineJob.
      id: GoogleCloudAiplatformV1PipelineJobRuntimeConfig
      type: object
      properties:
        gcsOutputDirectory:
          type: string
          description: >-
            Required. A path in a Cloud Storage bucket, which will be treated as
            the root output directory of the pipeline. It is used by the system
            to generate the paths of output artifacts. The artifact paths are
            generated with a sub-path pattern `{job_id}/{task_id}/{output_key}`
            under the specified output directory. The service account specified
            in this pipeline must have the `storage.objects.get` and
            `storage.objects.create` permissions for this bucket.
        failurePolicy:
          description: >-
            Represents the failure policy of a pipeline. Currently, the default
            of a pipeline is that the pipeline will continue to run until no
            more tasks can be executed, also known as
            PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a pipeline is set to
            PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop scheduling any new
            tasks when a task has failed. Any scheduled tasks will continue to
            completion.
          type: string
          enumDescriptions:
            - Default value, and follows fail slow behavior.
            - >-
              Indicates that the pipeline should continue to run until all
              possible tasks have been scheduled and completed.
            - >-
              Indicates that the pipeline should stop scheduling new tasks after
              a task has failed.
          enum:
            - PIPELINE_FAILURE_POLICY_UNSPECIFIED
            - PIPELINE_FAILURE_POLICY_FAIL_SLOW
            - PIPELINE_FAILURE_POLICY_FAIL_FAST
        parameterValues:
          additionalProperties:
            type: any
          description: >-
            The runtime parameters of the PipelineJob. The parameters will be
            passed into PipelineJob.pipeline_spec to replace the placeholders at
            runtime. This field is used by pipelines built using
            `PipelineJob.pipeline_spec.schema_version` 2.1.0, such as pipelines
            built using Kubeflow Pipelines SDK 1.9 or higher and the v2 DSL.
          type: object
        inputArtifacts:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact
          description: >-
            The runtime artifacts of the PipelineJob. The key will be the input
            artifact name and the value would be one of the InputArtifact.
          type: object
        parameters:
          description: >-
            Deprecated. Use RuntimeConfig.parameter_values instead. The runtime
            parameters of the PipelineJob. The parameters will be passed into
            PipelineJob.pipeline_spec to replace the placeholders at runtime.
            This field is used by pipelines built using
            `PipelineJob.pipeline_spec.schema_version` 2.0.0 or lower, such as
            pipelines built using Kubeflow Pipelines SDK 1.8 or lower.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Value'
          deprecated: true
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecasting:
      properties:
        metadata:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata
          description: The metadata information.
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs
      type: object
      description: A TrainingJob that trains and uploads an AutoML Forecasting Model.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecasting
    GoogleCloudAiplatformV1XraiAttribution:
      description: >-
        An explanation method that redistributes Integrated Gradients
        attributions to segmented regions, taking advantage of the model's fully
        differentiable structure. Refer to this paper for more details:
        https://arxiv.org/abs/1906.02825 Supported only by image Models.
      id: GoogleCloudAiplatformV1XraiAttribution
      type: object
      properties:
        stepCount:
          format: int32
          type: integer
          description: >-
            Required. The number of steps for approximating the path integral. A
            good value to start is 50 and gradually increase until the sum to
            diff property is met within the desired error range. Valid range of
            its value is [1, 100], inclusively.
        smoothGradConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SmoothGradConfig'
          description: >-
            Config for SmoothGrad approximation of gradients. When enabled, the
            gradients are approximated by averaging the gradients from noisy
            samples in the vicinity of the inputs. Adding noise can help improve
            the computed gradients. Refer to this paper for more details:
            https://arxiv.org/pdf/1706.03825.pdf
        blurBaselineConfig:
          description: >-
            Config for XRAI with blur baseline. When enabled, a linear path from
            the maximally blurred image to the input image is created. Using a
            blurred baseline instead of zero (black image) is motivated by the
            BlurIG approach explained here: https://arxiv.org/abs/2004.03383
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BlurBaselineConfig'
    GoogleCloudAiplatformV1RestoreDatasetVersionOperationMetadata:
      description: Runtime operation information for DatasetService.RestoreDatasetVersion.
      properties:
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1RestoreDatasetVersionOperationMetadata
      type: object
    GoogleCloudAiplatformV1UploadModelRequest:
      id: GoogleCloudAiplatformV1UploadModelRequest
      description: Request message for ModelService.UploadModel.
      type: object
      properties:
        parentModel:
          description: >-
            Optional. The resource name of the model into which to upload the
            version. Only specify this field when uploading a new version.
          type: string
        serviceAccount:
          type: string
          description: >-
            Optional. The user-provided custom service account to use to do the
            model upload. If empty, [Vertex AI Service
            Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents)
            will be used to access resources needed to upload the model. This
            account must belong to the target project where the model is
            uploaded to, i.e., the project specified in the `parent` field of
            this request and have necessary read permissions (to Google Cloud
            Storage, Artifact Registry, etc.).
        model:
          description: Required. The Model to create.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
        modelId:
          type: string
          description: >-
            Optional. The ID to use for the uploaded Model, which will become
            the final component of the model resource name. This value may be up
            to 63 characters, and valid characters are `[a-z0-9_-]`. The first
            character cannot be a number or hyphen.
    GoogleCloudAiplatformV1PurgeArtifactsRequest:
      description: Request message for MetadataService.PurgeArtifacts.
      id: GoogleCloudAiplatformV1PurgeArtifactsRequest
      type: object
      properties:
        force:
          description: >-
            Optional. Flag to indicate to actually perform the purge. If `force`
            is set to false, the method will return a sample of Artifact names
            that would be deleted.
          type: boolean
        filter:
          type: string
          description: >-
            Required. A required filter matching the Artifacts to be purged.
            E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
    GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail:
      type: object
      id: GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail
      properties:
        mainJob:
          description: >-
            Output only. The name of the CustomJob for the main container
            execution.
          readOnly: true
          type: string
        failedMainJobs:
          type: array
          readOnly: true
          description: >-
            Output only. The names of the previously failed CustomJob for the
            main container executions. The list includes the all attempts in
            chronological order.
          items:
            type: string
        preCachingCheckJob:
          description: >-
            Output only. The name of the CustomJob for the pre-caching-check
            container execution. This job will be available if the
            PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in
            the lifecycle events.
          type: string
          readOnly: true
        failedPreCachingCheckJobs:
          description: >-
            Output only. The names of the previously failed CustomJob for the
            pre-caching-check container executions. This job will be available
            if the PipelineJob.pipeline_spec specifies the `pre_caching_check`
            hook in the lifecycle events. The list includes the all attempts in
            chronological order.
          type: array
          items:
            type: string
          readOnly: true
      description: >-
        The detail of a container execution. It contains the job names of the
        lifecycle of a container execution.
    GoogleCloudAiplatformV1SchemaPredictParamsImageSegmentationPredictionParams:
      properties:
        confidenceThreshold:
          type: number
          description: >-
            When the model predicts category of pixels of the image, it will
            only provide predictions for pixels that it is at least this much
            confident about. All other pixels will be classified as background.
            Default value is 0.5.
          format: float
      id: >-
        GoogleCloudAiplatformV1SchemaPredictParamsImageSegmentationPredictionParams
      description: Prediction model parameters for Image Segmentation.
      type: object
    GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource:
      properties:
        generation:
          type: string
          description: >-
            The version of the Cloud Storage object to read. If unset, the
            current version of the object is read. See
            https://cloud.google.com/storage/docs/metadata#generation-number.
        uri:
          type: string
          description: >-
            The Cloud Storage uri pointing to the ipynb file. Format:
            `gs://bucket/notebook_file.ipynb`
      description: The Cloud Storage uri for the input notebook.
      id: GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs:
      properties:
        quantiles:
          items:
            type: number
            format: double
          description: >-
            Quantiles to use for minimize-quantile-loss
            `optimization_objective`. Up to 5 quantiles are allowed of values
            between 0 and 1, exclusive. Required if the value of
            optimization_objective is minimize-quantile-loss. Represents the
            percent quantiles to use for that objective. Quantiles must be
            unique.
          type: array
        exportEvaluatedDataItemsConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig
          description: >-
            Configuration for exporting test set predictions to a BigQuery
            table. If this configuration is absent, then the export is not
            performed.
        targetColumn:
          description: >-
            The name of the column that the Model is to predict values for. This
            column must be unavailable at forecast.
          type: string
        forecastHorizon:
          type: string
          description: >-
            The amount of time into the future for which forecasted values for
            the target are returned. Expressed in number of units defined by the
            `data_granularity` field.
          format: int64
        unavailableAtForecastColumns:
          type: array
          description: >-
            Names of columns that are unavailable when a forecast is requested.
            This column contains information for the given entity (identified by
            the time_series_identifier_column) that is unknown before the
            forecast For example, actual weather on a given day.
          items:
            type: string
        timeColumn:
          type: string
          description: >-
            The name of the column that identifies time order in the time
            series. This column must be available at forecast.
        contextWindow:
          description: >-
            The amount of time into the past training and prediction data is
            used for model training and prediction respectively. Expressed in
            number of units defined by the `data_granularity` field.
          type: string
          format: int64
        weightColumn:
          description: >-
            Column name that should be used as the weight column. Higher values
            in this column give more importance to the row during model
            training. The column must have numeric values between 0 and 10000
            inclusively; 0 means the row is ignored for training. If weight
            column field is not set, then all rows are assumed to have equal
            weight of 1. This column must be available at forecast.
          type: string
        optimizationObjective:
          type: string
          description: >-
            Objective function the model is optimizing towards. The training
            process creates a model that optimizes the value of the objective
            function over the validation set. The supported optimization
            objectives: * "minimize-rmse" (default) - Minimize root-mean-squared
            error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE).
            * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). *
            "minimize-rmspe" - Minimize root-mean-squared percentage error
            (RMSPE). * "minimize-wape-mae" - Minimize the combination of
            weighted absolute percentage error (WAPE) and mean-absolute-error
            (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at
            the quantiles defined in `quantiles`. * "minimize-mape" - Minimize
            the mean absolute percentage error.
        additionalExperiments:
          description: Additional experiment flags for the time series forcasting training.
          type: array
          items:
            type: string
        validationOptions:
          description: >-
            Validation options for the data validation component. The available
            options are: * "fail-pipeline" - default, will validate against the
            validation and fail the pipeline if it fails. * "ignore-validation"
            - ignore the results of the validation and continue
          type: string
        availableAtForecastColumns:
          description: >-
            Names of columns that are available and provided when a forecast is
            requested. These columns contain information for the given entity
            (identified by the time_series_identifier_column column) that is
            known at forecast. For example, predicted weather for a specific
            day.
          type: array
          items:
            type: string
        timeSeriesAttributeColumns:
          description: >-
            Column names that should be used as attribute columns. The value of
            these columns does not vary as a function of time. For example,
            store ID or item color.
          type: array
          items:
            type: string
        hierarchyConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig
          description: >-
            Configuration that defines the hierarchical relationship of time
            series and parameters for hierarchical forecasting strategies.
        dataGranularity:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity
          description: Expected difference in time granularity between rows in the data.
        trainBudgetMilliNodeHours:
          format: int64
          description: >-
            Required. The train budget of creating this model, expressed in
            milli node hours i.e. 1,000 value in this field means 1 node hour.
            The training cost of the model will not exceed this budget. The
            final cost will be attempted to be close to the budget, though may
            end up being (even) noticeably smaller - at the backend's
            discretion. This especially may happen when further model training
            ceases to provide any improvements. If the budget is set to a value
            known to be insufficient to train a model for the given dataset, the
            training won't be attempted and will error. The train budget must be
            between 1,000 and 72,000 milli node hours, inclusive.
          type: string
        timeSeriesIdentifierColumn:
          description: The name of the column that identifies the time series.
          type: string
        transformations:
          type: array
          description: >-
            Each transformation will apply transform function to given input
            column. And the result will be used for training. When creating
            transformation for BigQuery Struct column, the column should be
            flattened using "." as the delimiter.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation
        holidayRegions:
          items:
            type: string
          type: array
          description: >-
            The geographical region based on which the holiday effect is applied
            in modeling by adding holiday categorical array feature that include
            all holidays matching the date. This option only allowed when
            data_granularity is day. By default, holiday effect modeling is
            disabled. To turn it on, specify the holiday region using this
            option.
        windowConfig:
          description: Config containing strategy for generating sliding windows.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs
    GoogleCloudAiplatformV1CreateDatasetVersionOperationMetadata:
      description: Runtime operation information for DatasetService.CreateDatasetVersion.
      id: GoogleCloudAiplatformV1CreateDatasetVersionOperationMetadata
      type: object
      properties:
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1MigrateResourceResponse:
      type: object
      description: Describes a successfully migrated resource.
      properties:
        model:
          type: string
          description: Migrated Model's resource name.
        migratableResource:
          description: >-
            Before migration, the identifier in ml.googleapis.com,
            automl.googleapis.com or datalabeling.googleapis.com.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigratableResource'
        dataset:
          description: Migrated Dataset's resource name.
          type: string
      id: GoogleCloudAiplatformV1MigrateResourceResponse
    GoogleCloudAiplatformV1FunctionResponse:
      properties:
        response:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: >-
            Required. The function response in JSON object format. Use "output"
            key to specify function output and "error" key to specify error
            details (if any). If "output" and "error" keys are not specified,
            then whole "response" is treated as function output.
        name:
          type: string
          description: >-
            Required. The name of the function to call. Matches
            [FunctionDeclaration.name] and [FunctionCall.name].
      id: GoogleCloudAiplatformV1FunctionResponse
      type: object
      description: >-
        The result output from a [FunctionCall] that contains a string
        representing the [FunctionDeclaration.name] and a structured JSON object
        containing any output from the function is used as context to the model.
        This should contain the result of a [FunctionCall] made based on model
        prediction.
    GoogleCloudAiplatformV1ExplanationSpec:
      description: Specification of Model explanation.
      id: GoogleCloudAiplatformV1ExplanationSpec
      type: object
      properties:
        metadata:
          description: >-
            Optional. Metadata describing the Model's input and output for
            explanation.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadata'
        parameters:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationParameters'
          description: >-
            Required. Parameters that configure explaining of the Model's
            predictions.
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange:
      description: A range of values for slice(s). `low` is inclusive, `high` is exclusive.
      type: object
      properties:
        high:
          format: float
          description: Exclusive high value for the range.
          type: number
        low:
          description: Inclusive low value for the range.
          format: float
          type: number
      id: GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange
    GoogleCloudAiplatformV1PSCAutomationConfig:
      type: object
      description: >-
        PSC config that is used to automatically create forwarding rule via
        ServiceConnectionMap.
      properties:
        network:
          type: string
          description: >-
            Required. The full name of the Google Compute Engine
            [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks).
            [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
            `projects/{project}/global/networks/{network}`. Where {project} is a
            project number, as in '12345', and {network} is network name.
        projectId:
          description: Required. Project id used to create forwarding rule.
          type: string
      id: GoogleCloudAiplatformV1PSCAutomationConfig
    GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor:
      id: GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor
      description: Metadata for requested Features.
      properties:
        id:
          type: string
          description: Feature ID.
      type: object
    GoogleCloudAiplatformV1TimeSeriesDataPoint:
      type: object
      description: A TensorboardTimeSeries data point.
      properties:
        scalar:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Scalar'
          description: A scalar value.
        wallTime:
          format: google-datetime
          type: string
          description: >-
            Wall clock timestamp when this data point is generated by the end
            user.
        step:
          format: int64
          description: Step index of this data point within the run.
          type: string
        tensor:
          description: A tensor value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTensor'
        blobs:
          description: A blob sequence value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardBlobSequence'
      id: GoogleCloudAiplatformV1TimeSeriesDataPoint
    GoogleCloudAiplatformV1EvaluatedAnnotationExplanation:
      properties:
        explanation:
          description: Explanation attribution response details.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Explanation'
        explanationType:
          type: string
          description: >-
            Explanation type. For AutoML Image Classification models, possible
            values are: * `image-integrated-gradients` * `image-xrai`
      id: GoogleCloudAiplatformV1EvaluatedAnnotationExplanation
      type: object
      description: Explanation result of the prediction produced by the Model.
    GoogleCloudAiplatformV1ToolParameterKeyMatchMetricValue:
      description: Tool parameter key match metric value for an instance.
      id: GoogleCloudAiplatformV1ToolParameterKeyMatchMetricValue
      type: object
      properties:
        score:
          type: number
          description: Output only. Tool parameter key match score.
          format: float
          readOnly: true
    GoogleCloudAiplatformV1SchemaVisualInspectionClassificationLabelSavedQueryMetadata:
      properties:
        multiLabel:
          description: Whether or not the classification label is multi_label.
          type: boolean
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaVisualInspectionClassificationLabelSavedQueryMetadata
    GoogleCloudAiplatformV1CreateFeatureOnlineStoreOperationMetadata:
      properties:
        genericMetadata:
          description: Operation metadata for FeatureOnlineStore.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1CreateFeatureOnlineStoreOperationMetadata
      type: object
      description: Details of operations that perform create FeatureOnlineStore.
    GoogleCloudAiplatformV1ToolCallValidInstance:
      id: GoogleCloudAiplatformV1ToolCallValidInstance
      properties:
        reference:
          type: string
          description: Required. Ground truth used to compare against the prediction.
        prediction:
          type: string
          description: Required. Output of the evaluated model.
      description: Spec for tool call valid instance.
      type: object
    GoogleCloudAiplatformV1PredictRequest:
      id: GoogleCloudAiplatformV1PredictRequest
      properties:
        instances:
          description: >-
            Required. The instances that are the input to the prediction call. A
            DeployedModel may have an upper limit on the number of instances it
            supports per request, and when it is exceeded the prediction call
            errors in case of AutoML Models, or, in case of customer created
            Models, the behaviour is as documented by that Model. The schema of
            any single instance may be specified via Endpoint's DeployedModels'
            Model's PredictSchemata's instance_schema_uri.
          items:
            type: any
          type: array
        parameters:
          description: >-
            The parameters that govern the prediction. The schema of the
            parameters may be specified via Endpoint's DeployedModels' Model's
            PredictSchemata's parameters_schema_uri.
          type: any
      description: Request message for PredictionService.Predict.
      type: object
    GoogleCloudAiplatformV1NearestNeighborQuery:
      properties:
        perCrowdingAttributeNeighborCount:
          description: >-
            Optional. Crowding is a constraint on a neighbor list produced by
            nearest neighbor search requiring that no more than
            sper_crowding_attribute_neighbor_count of the k neighbors returned
            have the same value of crowding_attribute. It's used for improving
            result diversity.
          type: integer
          format: int32
        embedding:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NearestNeighborQueryEmbedding
          description: Optional. The embedding vector that be used for similar search.
        neighborCount:
          format: int32
          type: integer
          description: >-
            Optional. The number of similar entities to be retrieved from
            feature view for each query.
        parameters:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NearestNeighborQueryParameters
          description: Optional. Parameters that can be set to tune query on the fly.
        numericFilters:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter
          description: Optional. The list of numeric filters.
          type: array
        entityId:
          type: string
          description: >-
            Optional. The entity id whose similar entities should be searched
            for. If embedding is set, search will use embedding instead of
            entity_id.
        stringFilters:
          type: array
          description: Optional. The list of string filters.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1NearestNeighborQueryStringFilter
      id: GoogleCloudAiplatformV1NearestNeighborQuery
      description: A query to find a number of similar entities.
      type: object
    GoogleCloudAiplatformV1UndeployModelResponse:
      type: object
      id: GoogleCloudAiplatformV1UndeployModelResponse
      properties: {}
      description: Response message for EndpointService.UndeployModel.
    GoogleCloudAiplatformV1RemoveContextChildrenResponse:
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1RemoveContextChildrenResponse
      description: Response message for MetadataService.RemoveContextChildren.
    GoogleCloudAiplatformV1ImportDataConfig:
      id: GoogleCloudAiplatformV1ImportDataConfig
      type: object
      description: >-
        Describes the location from where we import data into a Dataset,
        together with the labels that will be applied to the DataItems and the
        Annotations.
      properties:
        annotationLabels:
          type: object
          additionalProperties:
            type: string
          description: >-
            Labels that will be applied to newly imported Annotations. If two
            Annotations are identical, one of them will be deduped. Two
            Annotations are considered identical if their payload,
            payload_schema_uri and all of their labels are the same. These
            labels will be overridden by Annotation labels specified inside
            index file referenced by import_schema_uri, e.g. jsonl file.
        importSchemaUri:
          type: string
          description: >-
            Required. Points to a YAML file stored on Google Cloud Storage
            describing the import format. Validation will be done against the
            schema. The schema is defined as an [OpenAPI 3.0.2 Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
        dataItemLabels:
          type: object
          additionalProperties:
            type: string
          description: >-
            Labels that will be applied to newly imported DataItems. If an
            identical DataItem as one being imported already exists in the
            Dataset, then these labels will be appended to these of the already
            existing one, and if labels with identical key is imported before,
            the old label value will be overwritten. If two DataItems are
            identical in the same import data operation, the labels will be
            combined and if key collision happens in this case, one of the
            values will be picked randomly. Two DataItems are considered
            identical if their content bytes are identical (e.g. image bytes or
            pdf bytes). These labels will be overridden by Annotation labels
            specified inside index file referenced by import_schema_uri, e.g.
            jsonl file.
        gcsSource:
          description: The Google Cloud Storage location for the input content.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics:
      properties:
        meanAbsoluteError:
          format: float
          description: >-
            Mean absolute error. Only set for ModelEvaluations, not for
            ModelEvaluationSlices.
          type: number
        meanSquaredError:
          format: float
          description: >-
            Mean squared error. Only set for ModelEvaluations, not for
            ModelEvaluationSlices.
          type: number
        confusionMatrix:
          description: >-
            Confusion matrix of the evaluation. Only set for ModelEvaluations,
            not for ModelEvaluationSlices.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
        linearKappa:
          description: >-
            Linear weighted kappa. Only set for ModelEvaluations, not for
            ModelEvaluationSlices.
          type: number
          format: float
        recall:
          format: float
          type: number
          description: Recall.
        quadraticKappa:
          type: number
          format: float
          description: >-
            Quadratic weighted kappa. Only set for ModelEvaluations, not for
            ModelEvaluationSlices.
        precision:
          type: number
          format: float
          description: Precision.
        f1Score:
          format: float
          type: number
          description: The harmonic mean of recall and precision.
      type: object
      description: Model evaluation metrics for text sentiment problems.
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics
    GoogleCloudAiplatformV1SuggestTrialsResponse:
      type: object
      properties:
        endTime:
          type: string
          description: The time at which operation processing completed.
          format: google-datetime
        trials:
          type: array
          description: A list of Trials.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
        studyState:
          description: The state of the Study.
          enumDescriptions:
            - The study state is unspecified.
            - The study is active.
            - The study is stopped due to an internal error.
            - >-
              The study is done when the service exhausts the parameter search
              space or max_trial_count is reached.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
            - COMPLETED
          type: string
        startTime:
          type: string
          description: The time at which the operation was started.
          format: google-datetime
      description: Response message for VizierService.SuggestTrials.
      id: GoogleCloudAiplatformV1SuggestTrialsResponse
    GoogleCloudAiplatformV1SupervisedTuningDatasetDistribution:
      properties:
        mean:
          readOnly: true
          type: number
          description: Output only. The arithmetic mean of the values in the population.
          format: double
        sum:
          format: int64
          readOnly: true
          type: string
          description: Output only. Sum of a given population of values.
        min:
          format: double
          description: Output only. The minimum of the population values.
          readOnly: true
          type: number
        median:
          type: number
          format: double
          readOnly: true
          description: Output only. The median of the values in the population.
        p5:
          format: double
          type: number
          description: Output only. The 5th percentile of the values in the population.
          readOnly: true
        buckets:
          readOnly: true
          description: Output only. Defines the histogram bucket.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SupervisedTuningDatasetDistributionDatasetBucket
          type: array
        p95:
          format: double
          description: Output only. The 95th percentile of the values in the population.
          type: number
          readOnly: true
        billableSum:
          format: int64
          type: string
          readOnly: true
          description: Output only. Sum of a given population of values that are billable.
        max:
          format: double
          description: Output only. The maximum of the population values.
          readOnly: true
          type: number
      type: object
      description: Dataset distribution for Supervised Tuning.
      id: GoogleCloudAiplatformV1SupervisedTuningDatasetDistribution
    GoogleCloudAiplatformV1FeatureValueMetadata:
      id: GoogleCloudAiplatformV1FeatureValueMetadata
      properties:
        generateTime:
          format: google-datetime
          description: >-
            Feature generation timestamp. Typically, it is provided by user at
            feature ingestion time. If not, feature store will use the system
            timestamp when the data is ingested into feature store. For
            streaming ingestion, the time, aligned by days, must be no older
            than five years (1825 days) and no later than one year (366 days) in
            the future.
          type: string
      type: object
      description: Metadata of feature value.
    GoogleCloudAiplatformV1Blob:
      properties:
        data:
          format: byte
          description: Required. Raw bytes.
          type: string
        mimeType:
          description: Required. The IANA standard MIME type of the source data.
          type: string
      description: >-
        Content blob. It's preferred to send as text directly rather than raw
        bytes.
      id: GoogleCloudAiplatformV1Blob
      type: object
    GoogleCloudAiplatformV1WriteTensorboardRunDataResponse:
      type: object
      properties: {}
      description: Response message for TensorboardService.WriteTensorboardRunData.
      id: GoogleCloudAiplatformV1WriteTensorboardRunDataResponse
    GoogleCloudAiplatformV1BoolArray:
      id: GoogleCloudAiplatformV1BoolArray
      description: A list of boolean values.
      type: object
      properties:
        values:
          items:
            type: boolean
          description: A list of bool values.
          type: array
    GoogleCloudAiplatformV1SupervisedTuningDatasetDistributionDatasetBucket:
      description: >-
        Dataset bucket used to create a histogram for the distribution given a
        population of values.
      type: object
      id: GoogleCloudAiplatformV1SupervisedTuningDatasetDistributionDatasetBucket
      properties:
        right:
          description: Output only. Right bound of the bucket.
          type: number
          format: double
          readOnly: true
        left:
          format: double
          type: number
          description: Output only. Left bound of the bucket.
          readOnly: true
        count:
          format: double
          type: number
          readOnly: true
          description: Output only. Number of values in the bucket.
    GoogleCloudAiplatformV1FeatureViewIndexConfigTreeAHConfig:
      type: object
      id: GoogleCloudAiplatformV1FeatureViewIndexConfigTreeAHConfig
      properties:
        leafNodeEmbeddingCount:
          description: >-
            Optional. Number of embeddings on each leaf node. The default value
            is 1000 if not set.
          type: string
          format: int64
      description: Configuration options for the tree-AH algorithm.
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis:
      description: >-
        Configuration of the Featurestore's Snapshot Analysis Based Monitoring.
        This type of analysis generates statistics for each Feature based on a
        snapshot of the latest feature value of each entities every
        monitoring_interval.
      id: GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis
      properties:
        disabled:
          type: boolean
          description: >-
            The monitoring schedule for snapshot analysis. For EntityType-level
            config: unset / disabled = true indicates disabled by default for
            Features under it; otherwise by default enable snapshot analysis
            monitoring with monitoring_interval for Features under it.
            Feature-level config: disabled = true indicates disabled regardless
            of the EntityType-level config; unset monitoring_interval indicates
            going with EntityType-level config; otherwise run snapshot analysis
            monitoring with monitoring_interval regardless of the
            EntityType-level config. Explicitly Disable the snapshot analysis
            based monitoring.
        monitoringIntervalDays:
          type: integer
          description: >-
            Configuration of the snapshot analysis based monitoring pipeline
            running interval. The value indicates number of days.
          format: int32
        stalenessDays:
          format: int32
          type: integer
          description: >-
            Customized export features time window for snapshot analysis. Unit
            is one day. Default value is 3 weeks. Minimum value is 1 day.
            Maximum value is 4000 days.
      type: object
    GoogleCloudAiplatformV1SummarizationQualityInstance:
      type: object
      id: GoogleCloudAiplatformV1SummarizationQualityInstance
      description: Spec for summarization quality instance.
      properties:
        context:
          type: string
          description: Required. Text to be summarized.
        reference:
          description: Optional. Ground truth used to compare against the prediction.
          type: string
        prediction:
          type: string
          description: Required. Output of the evaluated model.
        instruction:
          type: string
          description: Required. Summarization prompt for LLM.
    GoogleTypeInterval:
      properties:
        endTime:
          description: >-
            Optional. Exclusive end of the interval. If specified, a Timestamp
            matching this interval will have to be before the end.
          type: string
          format: google-datetime
        startTime:
          description: >-
            Optional. Inclusive start of the interval. If specified, a Timestamp
            matching this interval will have to be the same or after the start.
          type: string
          format: google-datetime
      id: GoogleTypeInterval
      type: object
      description: >-
        Represents a time interval, encoded as a Timestamp start (inclusive) and
        a Timestamp end (exclusive). The start must be less than or equal to the
        end. When the start equals the end, the interval is empty (matches no
        time). When both start and end are unspecified, the interval matches any
        time.
    GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInstance:
      type: object
      id: GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInstance
      description: Spec for question answering helpfulness instance.
      properties:
        instruction:
          type: string
          description: >-
            Required. The question asked and other instruction in the inference
            prompt.
        context:
          description: Optional. Text provided as context to answer the question.
          type: string
        reference:
          type: string
          description: Optional. Ground truth used to compare against the prediction.
        prediction:
          type: string
          description: Required. Output of the evaluated model.
    GoogleCloudAiplatformV1FindNeighborsRequestQueryRRF:
      description: Parameters for RRF algorithm that combines search results.
      id: GoogleCloudAiplatformV1FindNeighborsRequestQueryRRF
      type: object
      properties:
        alpha:
          type: number
          format: float
          description: >-
            Required. Users can provide an alpha value to give more weight to
            dense vs sparse results. For example, if the alpha is 0, we only
            return sparse and if the alpha is 1, we only return dense.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation
      description: >-
        Training pipeline will infer the proper transformation based on the
        statistic of dataset.
      type: object
      properties:
        columnName:
          type: string
    GoogleCloudAiplatformV1IdMatcher:
      type: object
      description: Matcher for Features of an EntityType by Feature ID.
      id: GoogleCloudAiplatformV1IdMatcher
      properties:
        ids:
          description: >-
            Required. The following are accepted as `ids`: * A single-element
            list containing only `*`, which selects all Features in the target
            EntityType, or * A list containing only Feature IDs, which selects
            only Features with those IDs in the target EntityType.
          items:
            type: string
          type: array
    GoogleCloudAiplatformV1PairwiseMetricInput:
      id: GoogleCloudAiplatformV1PairwiseMetricInput
      properties:
        instance:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PairwiseMetricInstance'
          description: Required. Pairwise metric instance.
        metricSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PairwiseMetricSpec'
          description: Required. Spec for pairwise metric.
      type: object
      description: Input for pairwise metric.
    GoogleCloudAiplatformV1CreateNotebookExecutionJobRequest:
      type: object
      description: Request message for [NotebookService.CreateNotebookExecutionJob]
      properties:
        notebookExecutionJobId:
          description: Optional. User specified ID for the NotebookExecutionJob.
          type: string
        parent:
          description: >-
            Required. The resource name of the Location to create the
            NotebookExecutionJob. Format:
            `projects/{project}/locations/{location}`
          type: string
        notebookExecutionJob:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NotebookExecutionJob'
          description: Required. The NotebookExecutionJob to create.
      id: GoogleCloudAiplatformV1CreateNotebookExecutionJobRequest
    GoogleCloudAiplatformV1UpdateExplanationDatasetOperationMetadata:
      description: Runtime operation information for ModelService.UpdateExplanationDataset.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The common part of the operation metadata.
      id: GoogleCloudAiplatformV1UpdateExplanationDatasetOperationMetadata
      type: object
    GoogleCloudAiplatformV1ExportFractionSplit:
      type: object
      description: >-
        Assigns the input data to training, validation, and test sets as per the
        given fractions. Any of `training_fraction`, `validation_fraction` and
        `test_fraction` may optionally be provided, they must sum to up to 1. If
        the provided ones sum to less than 1, the remainder is assigned to sets
        as decided by Vertex AI. If none of the fractions are set, by default
        roughly 80% of data is used for training, 10% for validation, and 10%
        for test.
      id: GoogleCloudAiplatformV1ExportFractionSplit
      properties:
        validationFraction:
          type: number
          description: >-
            The fraction of the input data that is to be used to validate the
            Model.
          format: double
        trainingFraction:
          format: double
          type: number
          description: >-
            The fraction of the input data that is to be used to train the
            Model.
        testFraction:
          format: double
          type: number
          description: >-
            The fraction of the input data that is to be used to evaluate the
            Model.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsPairwiseTextGenerationEvaluationMetrics:
      description: Metrics for general pairwise text generation evaluation results.
      properties:
        cohensKappa:
          description: >-
            A measurement of agreement between the autorater and human raters
            that takes the likelihood of random agreement into account.
          type: number
          format: float
        humanPreferenceBaselineModelWinRate:
          description: >-
            Percentage of time humans decided the baseline model had the better
            response.
          format: float
          type: number
        baselineModelWinRate:
          description: >-
            Percentage of time the autorater decided the baseline model had the
            better response.
          format: float
          type: number
        falsePositiveCount:
          format: int64
          type: string
          description: >-
            Number of examples where the autorater chose the model, but humans
            preferred the baseline model.
        humanPreferenceModelWinRate:
          type: number
          description: Percentage of time humans decided the model had the better response.
          format: float
        modelWinRate:
          format: float
          description: >-
            Percentage of time the autorater decided the model had the better
            response.
          type: number
        accuracy:
          format: float
          type: number
          description: Fraction of cases where the autorater agreed with the human raters.
        trueNegativeCount:
          type: string
          format: int64
          description: >-
            Number of examples where both the autorater and humans decided that
            the model had the worse response.
        f1Score:
          format: float
          description: Harmonic mean of precision and recall.
          type: number
        truePositiveCount:
          format: int64
          description: >-
            Number of examples where both the autorater and humans decided that
            the model had the better response.
          type: string
        precision:
          type: number
          format: float
          description: >-
            Fraction of cases where the autorater and humans thought the model
            had a better response out of all cases where the autorater thought
            the model had a better response. True positive divided by all
            positive.
        falseNegativeCount:
          type: string
          format: int64
          description: >-
            Number of examples where the autorater chose the baseline model, but
            humans preferred the model.
        recall:
          format: float
          type: number
          description: >-
            Fraction of cases where the autorater and humans thought the model
            had a better response out of all cases where the humans thought the
            model had a better response.
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsPairwiseTextGenerationEvaluationMetrics
    GoogleCloudAiplatformV1ResourceRuntimeSpec:
      properties:
        raySpec:
          description: >-
            Optional. Ray cluster configuration. Required when creating a
            dedicated RayCluster on the PersistentResource.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1RaySpec'
        serviceAccountSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ServiceAccountSpec'
          description: >-
            Optional. Configure the use of workload identity on the
            PersistentResource
      type: object
      id: GoogleCloudAiplatformV1ResourceRuntimeSpec
      description: >-
        Configuration for the runtime on a PersistentResource instance,
        including but not limited to: * Service accounts used to run the
        workloads. * Whether to make it a dedicated Ray Cluster.
    GoogleCloudAiplatformV1ModelExplanation:
      id: GoogleCloudAiplatformV1ModelExplanation
      type: object
      description: Aggregated explanation metrics for a Model over a set of instances.
      properties:
        meanAttributions:
          type: array
          readOnly: true
          description: >-
            Output only. Aggregated attributions explaining the Model's
            prediction outputs over the set of instances. The attributions are
            grouped by outputs. For Models that predict only one output, such as
            regression Models that predict only one score, there is only one
            attibution that explains the predicted output. For Models that
            predict multiple outputs, such as multiclass Models that predict
            multiple classes, each element explains one specific item.
            Attribution.output_index can be used to identify which output this
            attribution is explaining. The baselineOutputValue,
            instanceOutputValue and featureAttributions fields are averaged over
            the test data. NOTE: Currently AutoML tabular classification Models
            produce only one attribution, which averages attributions over all
            the classes it predicts. Attribution.approximation_error is not
            populated.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Attribution'
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation:
      description: >-
        Training pipeline will perform following transformation functions. * The
        value converted to float32. * The z_score of the value. * log(value+1)
        when the value is greater than or equal to 0. Otherwise, this
        transformation is not applied and the value is considered a missing
        value. * z_score of log(value+1) when the value is greater than or equal
        to 0. Otherwise, this transformation is not applied and the value is
        considered a missing value.
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation
      properties:
        columnName:
          type: string
    GoogleCloudAiplatformV1ModelOriginalModelInfo:
      id: GoogleCloudAiplatformV1ModelOriginalModelInfo
      description: Contains information about the original Model if this Model is a copy.
      type: object
      properties:
        model:
          type: string
          readOnly: true
          description: >-
            Output only. The resource name of the Model this Model is a copy of,
            including the revision. Format:
            `projects/{project}/locations/{location}/models/{model_id}@{version_id}`
    GoogleCloudAiplatformV1ProbeExecAction:
      id: GoogleCloudAiplatformV1ProbeExecAction
      description: ExecAction specifies a command to execute.
      type: object
      properties:
        command:
          items:
            type: string
          type: array
          description: >-
            Command is the command line to execute inside the container, the
            working directory for the command is root ('/') in the container's
            filesystem. The command is simply exec'd, it is not run inside a
            shell, so traditional shell instructions ('|', etc) won't work. To
            use a shell, you need to explicitly call out to that shell. Exit
            status of 0 is treated as live/healthy and non-zero is unhealthy.
    GoogleCloudAiplatformV1GroundingChunkRetrievedContext:
      id: GoogleCloudAiplatformV1GroundingChunkRetrievedContext
      type: object
      description: Chunk from context retrieved by the retrieval tools.
      properties:
        title:
          type: string
          description: Title of the attribution.
        uri:
          type: string
          description: URI reference of the attribution.
    GoogleCloudAiplatformV1GroundingMetadata:
      description: Metadata returned to client when grounding is enabled.
      type: object
      properties:
        searchEntryPoint:
          description: Optional. Google search entry for the following-up web searches.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SearchEntryPoint'
        webSearchQueries:
          description: Optional. Web search queries for the following-up web search.
          items:
            type: string
          type: array
        groundingChunks:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1GroundingChunk'
          description: >-
            List of supporting references retrieved from specified grounding
            source.
        groundingSupports:
          type: array
          description: Optional. List of grounding support.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1GroundingSupport'
      id: GoogleCloudAiplatformV1GroundingMetadata
    GoogleCloudAiplatformV1AddExecutionEventsRequest:
      description: Request message for MetadataService.AddExecutionEvents.
      properties:
        events:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Event'
          type: array
          description: The Events to create and add.
      type: object
      id: GoogleCloudAiplatformV1AddExecutionEventsRequest
    GoogleCloudAiplatformV1AvroSource:
      type: object
      id: GoogleCloudAiplatformV1AvroSource
      properties:
        gcsSource:
          description: Required. Google Cloud Storage location.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
      description: The storage details for Avro input content.
    GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks:
      properties:
        notebooks:
          description: Required. Regional resource references to notebooks.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
          type: array
      id: GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks
      description: Open notebooks.
      type: object
    GoogleCloudAiplatformV1SchemaTextSentimentSavedQueryMetadata:
      properties:
        sentimentMax:
          description: The maximum sentiment of sentiment Anntoation in this SavedQuery.
          type: integer
          format: int32
      type: object
      description: The metadata of SavedQuery contains TextSentiment Annotations.
      id: GoogleCloudAiplatformV1SchemaTextSentimentSavedQueryMetadata
    GoogleCloudAiplatformV1CreateRegistryFeatureOperationMetadata:
      id: GoogleCloudAiplatformV1CreateRegistryFeatureOperationMetadata
      description: Details of operations that perform create FeatureGroup.
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Feature.
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig:
      properties:
        value:
          type: number
          description: >-
            Specify a threshold value that can trigger the alert. 1. For
            categorical feature, the distribution distance is calculated by
            L-inifinity norm. 2. For numerical feature, the distribution
            distance is calculated by Jensen–Shannon divergence. Each feature
            must have a non-zero threshold if they need to be monitored.
            Otherwise no alert will be triggered for that feature.
          format: double
      description: The config for Featurestore Monitoring threshold.
      type: object
      id: GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig
    GoogleCloudAiplatformV1IndexDatapoint:
      id: GoogleCloudAiplatformV1IndexDatapoint
      properties:
        crowdingTag:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1IndexDatapointCrowdingTag
          description: >-
            Optional. CrowdingTag of the datapoint, the number of neighbors to
            return in each crowding can be configured during query.
        featureVector:
          type: array
          description: >-
            Required. Feature embedding vector for dense index. An array of
            numbers with the length of [NearestNeighborSearchConfig.dimensions].
          items:
            type: number
            format: float
        sparseEmbedding:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1IndexDatapointSparseEmbedding
          description: Optional. Feature embedding vector for sparse index.
        restricts:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1IndexDatapointRestriction
          description: >-
            Optional. List of Restrict of the datapoint, used to perform
            "restricted searches" where boolean rule are used to filter the
            subset of the database eligible for matching. This uses categorical
            tokens. See:
            https://cloud.google.com/vertex-ai/docs/matching-engine/filtering
          type: array
        numericRestricts:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1IndexDatapointNumericRestriction
          description: >-
            Optional. List of Restrict of the datapoint, used to perform
            "restricted searches" where boolean rule are used to filter the
            subset of the database eligible for matching. This uses numeric
            comparisons.
        datapointId:
          description: Required. Unique identifier of the datapoint.
          type: string
      description: A datapoint of Index.
      type: object
    GoogleCloudAiplatformV1ListNasTrialDetailsResponse:
      id: GoogleCloudAiplatformV1ListNasTrialDetailsResponse
      type: object
      description: Response message for JobService.ListNasTrialDetails
      properties:
        nasTrialDetails:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrialDetail'
          description: List of top NasTrials in the requested page.
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Pass to
            ListNasTrialDetailsRequest.page_token to obtain that page.
          type: string
    GoogleCloudAiplatformV1PairwiseSummarizationQualityInstance:
      description: Spec for pairwise summarization quality instance.
      properties:
        prediction:
          description: Required. Output of the candidate model.
          type: string
        instruction:
          type: string
          description: Required. Summarization prompt for LLM.
        context:
          description: Required. Text to be summarized.
          type: string
        baselinePrediction:
          type: string
          description: Required. Output of the baseline model.
        reference:
          type: string
          description: Optional. Ground truth used to compare against the prediction.
      id: GoogleCloudAiplatformV1PairwiseSummarizationQualityInstance
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceImageSegmentationPredictionInstance:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaPredictInstanceImageSegmentationPredictionInstance
      description: Prediction input format for Image Segmentation.
      properties:
        mimeType:
          type: string
          description: >-
            The MIME type of the content of the image. Only the images in below
            listed MIME types are supported. - image/jpeg - image/png
        content:
          description: The image bytes to make the predictions on.
          type: string
    GoogleCloudAiplatformV1FeatureViewSyncSyncSummary:
      id: GoogleCloudAiplatformV1FeatureViewSyncSyncSummary
      properties:
        rowSynced:
          readOnly: true
          type: string
          format: int64
          description: Output only. Total number of rows synced.
        systemWatermarkTime:
          description: >-
            Lower bound of the system time watermark for the sync job. This is
            only set for continuously syncing feature views.
          format: google-datetime
          type: string
        totalSlot:
          type: string
          format: int64
          description: Output only. BigQuery slot milliseconds consumed for the sync job.
          readOnly: true
      type: object
      description: >-
        Summary from the Sync job. For continuous syncs, the summary is updated
        periodically. For batch syncs, it gets updated on completion of the
        sync.
    GoogleCloudAiplatformV1ModelMonitoringAlertConfig:
      description: The alert config for model monitoring.
      properties:
        enableLogging:
          type: boolean
          description: >-
            Dump the anomalies to Cloud Logging. The anomalies will be put to
            json payload encoded from proto
            google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry.
            This can be further sinked to Pub/Sub or any other services
            supported by Cloud Logging.
        emailAlertConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig
          description: Email alert config.
        notificationChannels:
          items:
            type: string
          description: >-
            Resource names of the NotificationChannels to send alert. Must be of
            the format `projects//notificationChannels/`
          type: array
      id: GoogleCloudAiplatformV1ModelMonitoringAlertConfig
      type: object
    GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInput:
      type: object
      id: GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInput
      properties:
        metricSpec:
          description: Required. Spec for pairwise question answering quality score metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualitySpec
        instance:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInstance
          description: Required. Pairwise question answering quality instance.
      description: Input for pairwise question answering quality metric.
    GoogleCloudAiplatformV1GenerationConfigRoutingConfig:
      id: GoogleCloudAiplatformV1GenerationConfigRoutingConfig
      type: object
      properties:
        manualMode:
          description: Manual routing.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1GenerationConfigRoutingConfigManualRoutingMode
        autoMode:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode
          description: Automated routing.
      description: The configuration for routing the request to a specific model.
    GoogleCloudAiplatformV1CreateDeploymentResourcePoolOperationMetadata:
      type: object
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1CreateDeploymentResourcePoolOperationMetadata
      description: Runtime operation information for CreateDeploymentResourcePool method.
    GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors:
      properties:
        id:
          type: string
          description: The ID of the query datapoint.
        neighbors:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1FindNeighborsResponseNeighbor
          type: array
          description: All its neighbors.
      id: GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors
      type: object
      description: Nearest neighbors for one query.
    GoogleCloudLocationLocation:
      description: A resource that represents a Google Cloud location.
      properties:
        labels:
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
        name:
          type: string
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
        displayName:
          type: string
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
      type: object
      id: GoogleCloudLocationLocation
    GoogleCloudAiplatformV1RemoveDatapointsResponse:
      properties: {}
      type: object
      description: Response message for IndexService.RemoveDatapoints
      id: GoogleCloudAiplatformV1RemoveDatapointsResponse
    GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse:
      id: GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse
      type: object
      description: Response message for JobService.ListHyperparameterTuningJobs
      properties:
        hyperparameterTuningJobs:
          type: array
          description: >-
            List of HyperparameterTuningJobs in the requested page.
            HyperparameterTuningJob.trials of the jobs will be not be returned.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Pass to
            ListHyperparameterTuningJobsRequest.page_token to obtain that page.
          type: string
    GoogleCloudAiplatformV1ListModelsResponse:
      description: Response message for ModelService.ListModels
      type: object
      properties:
        models:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
          description: List of Models in the requested page.
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass to
            ListModelsRequest.page_token to obtain that page.
          type: string
      id: GoogleCloudAiplatformV1ListModelsResponse
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation
      properties:
        text:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation
        numeric:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation
        auto:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation
        categorical:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation
        timestamp:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation
    GoogleCloudAiplatformV1TFRecordDestination:
      id: GoogleCloudAiplatformV1TFRecordDestination
      description: The storage details for TFRecord output content.
      properties:
        gcsDestination:
          description: Required. Google Cloud Storage location.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
      type: object
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource:
      properties:
        uri:
          description: The URI of a BigQuery table.
          type: string
      id: GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource
      type: object
    GoogleCloudAiplatformV1SampleConfig:
      description: >-
        Active learning data sampling config. For every active learning labeling
        iteration, it will select a batch of data based on the sampling
        strategy.
      id: GoogleCloudAiplatformV1SampleConfig
      type: object
      properties:
        followingBatchSamplePercentage:
          description: >-
            The percentage of data needed to be labeled in each following batch
            (except the first batch).
          format: int32
          type: integer
        initialBatchSamplePercentage:
          description: The percentage of data needed to be labeled in the first batch.
          format: int32
          type: integer
        sampleStrategy:
          type: string
          description: >-
            Field to choose sampling strategy. Sampling strategy will decide
            which data should be selected for human labeling in every batch.
          enum:
            - SAMPLE_STRATEGY_UNSPECIFIED
            - UNCERTAINTY
          enumDescriptions:
            - Default will be treated as UNCERTAINTY.
            - Sample the most uncertain data to label.
    GoogleCloudAiplatformV1PurgeContextsMetadata:
      description: Details of operations that perform MetadataService.PurgeContexts.
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for purging Contexts.
      id: GoogleCloudAiplatformV1PurgeContextsMetadata
    GoogleIamV1SetIamPolicyRequest:
      type: object
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/GoogleIamV1Policy'
      id: GoogleIamV1SetIamPolicyRequest
    GoogleCloudAiplatformV1UpdateFeatureViewOperationMetadata:
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for FeatureView Update.
      id: GoogleCloudAiplatformV1UpdateFeatureViewOperationMetadata
      description: Details of operations that perform update FeatureView.
    GoogleLongrunningListOperationsResponse:
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          type: array
          description: >-
            A list of operations that matches the specified filter in the
            request.
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
    GoogleCloudAiplatformV1SummarizationVerbositySpec:
      description: Spec for summarization verbosity score metric.
      type: object
      id: GoogleCloudAiplatformV1SummarizationVerbositySpec
      properties:
        useReference:
          description: >-
            Optional. Whether to use instance.reference to compute summarization
            verbosity.
          type: boolean
        version:
          format: int32
          description: Optional. Which version to use for evaluation.
          type: integer
    GoogleCloudAiplatformV1ModelEvaluationSliceSlice:
      properties:
        dimension:
          description: >-
            Output only. The dimension of the slice. Well-known dimensions are:
            * `annotationSpec`: This slice is on the test data that has either
            ground truth or prediction with AnnotationSpec.display_name equals
            to value. * `slice`: This slice is a user customized slice defined
            by its SliceSpec.
          readOnly: true
          type: string
        value:
          type: string
          description: Output only. The value of the dimension in this slice.
          readOnly: true
        sliceSpec:
          description: Output only. Specification for how the data was sliced.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec
      description: Definition of a slice.
      type: object
      id: GoogleCloudAiplatformV1ModelEvaluationSliceSlice
    GoogleCloudAiplatformV1MigratableResourceAutomlModel:
      description: Represents one Model in automl.googleapis.com.
      properties:
        model:
          type: string
          description: >-
            Full resource name of automl Model. Format:
            `projects/{project}/locations/{location}/models/{model}`.
        modelDisplayName:
          description: The Model's display name in automl.googleapis.com.
          type: string
      type: object
      id: GoogleCloudAiplatformV1MigratableResourceAutomlModel
    GoogleCloudAiplatformV1SearchNearestEntitiesResponse:
      type: object
      id: GoogleCloudAiplatformV1SearchNearestEntitiesResponse
      description: Response message for FeatureOnlineStoreService.SearchNearestEntities
      properties:
        nearestNeighbors:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NearestNeighbors'
          description: The nearest neighbors of the query entity.
    GoogleCloudAiplatformV1CopyModelOperationMetadata:
      type: object
      properties:
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1CopyModelOperationMetadata
      description: Details of ModelService.CopyModel operation.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs:
      type: object
      properties:
        modelType:
          enumDescriptions:
            - Should not be set.
            - >-
              A model to be used via prediction calls to uCAIP API. Expected to
              have a higher latency, but should also have a higher prediction
              quality than other models.
            - >-
              A model to be used via prediction calls to uCAIP API. Expected to
              have a lower latency but relatively lower prediction quality.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) as TensorFlow
              model and used on a mobile or edge device afterwards. Expected to
              have low latency, but may have lower prediction quality than other
              mobile models.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD_HIGH_ACCURACY_1
            - CLOUD_LOW_ACCURACY_1
            - MOBILE_TF_LOW_LATENCY_1
          type: string
        budgetMilliNodeHours:
          format: int64
          type: string
          description: >-
            The training budget of creating this model, expressed in milli node
            hours i.e. 1,000 value in this field means 1 node hour. The actual
            metadata.costMilliNodeHours will be equal or less than this value.
            If further model training ceases to provide any improvements, it
            will stop without using the full budget and the
            metadata.successfulStopReason will be `model-converged`. Note,
            node_hour = actual_hour * number_of_nodes_involved. Or
            actual_wall_clock_hours = train_budget_milli_node_hours /
            (number_of_nodes_involved * 1000) For modelType
            `cloud-high-accuracy-1`(default), the budget must be between 20,000
            and 2,000,000 milli node hours, inclusive. The default value is
            192,000 which represents one day in wall time (1000 milli * 24 hours
            * 8 nodes).
        baseModelId:
          type: string
          description: >-
            The ID of the `base` model. If it is specified, the new model will
            be trained based on the `base` model. Otherwise, the new model will
            be trained from scratch. The `base` model must be in the same
            Project and Location as the new Model to train, and have the same
            modelType.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs
    GoogleCloudAiplatformV1PointwiseMetricInput:
      description: Input for pointwise metric.
      id: GoogleCloudAiplatformV1PointwiseMetricInput
      type: object
      properties:
        instance:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PointwiseMetricInstance'
          description: Required. Pointwise metric instance.
        metricSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PointwiseMetricSpec'
          description: Required. Spec for pointwise metric.
    GoogleCloudAiplatformV1SummarizationVerbosityInstance:
      id: GoogleCloudAiplatformV1SummarizationVerbosityInstance
      description: Spec for summarization verbosity instance.
      type: object
      properties:
        context:
          description: Required. Text to be summarized.
          type: string
        reference:
          description: Optional. Ground truth used to compare against the prediction.
          type: string
        prediction:
          type: string
          description: Required. Output of the evaluated model.
        instruction:
          type: string
          description: Optional. Summarization prompt for LLM.
    GoogleCloudAiplatformV1CitationMetadata:
      id: GoogleCloudAiplatformV1CitationMetadata
      description: A collection of source attributions for a piece of content.
      properties:
        citations:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Citation'
          type: array
          description: Output only. List of citations.
      type: object
    GoogleCloudAiplatformV1UndeployModelOperationMetadata:
      type: object
      description: Runtime operation information for EndpointService.UndeployModel.
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1UndeployModelOperationMetadata
    GoogleCloudAiplatformV1SchemaTextExtractionAnnotation:
      description: Annotation details specific to text extraction.
      properties:
        annotationSpecId:
          description: >-
            The resource Id of the AnnotationSpec that this Annotation pertains
            to.
          type: string
        displayName:
          type: string
          description: >-
            The display name of the AnnotationSpec that this Annotation pertains
            to.
        textSegment:
          description: The segment of the text content.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTextSegment'
      id: GoogleCloudAiplatformV1SchemaTextExtractionAnnotation
      type: object
    GoogleCloudAiplatformV1GroundingChunkWeb:
      properties:
        title:
          type: string
          description: Title of the chunk.
        uri:
          description: URI reference of the chunk.
          type: string
      type: object
      description: Chunk from the web.
      id: GoogleCloudAiplatformV1GroundingChunkWeb
    GoogleIamV1Policy:
      type: object
      properties:
        etag:
          type: string
          format: byte
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
        version:
          format: int32
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      id: GoogleIamV1Policy
    CloudAiLargeModelsVisionNamedBoundingBox:
      id: CloudAiLargeModelsVisionNamedBoundingBox
      type: object
      properties:
        y1:
          type: number
          format: float
        classes:
          type: array
          items:
            type: string
        entities:
          items:
            type: string
          type: array
        y2:
          type: number
          format: float
        x2:
          type: number
          format: float
        x1:
          format: float
          type: number
        scores:
          type: array
          items:
            format: float
            type: number
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadata:
      description: The metadata of Datasets that contain time series data.
      properties:
        inputConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig
        timeColumn:
          description: >-
            The column name of the time column that identifies time order in the
            time series.
          type: string
        timeSeriesIdentifierColumn:
          type: string
          description: >-
            The column name of the time series identifier column that identifies
            the time series.
      type: object
      id: GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadata
    GoogleCloudAiplatformV1ReservationAffinity:
      type: object
      description: >-
        A ReservationAffinity can be used to configure a Vertex AI resource
        (e.g., a DeployedModel) to draw its Compute Engine resources from a
        Shared Reservation, or exclusively from on-demand capacity.
      id: GoogleCloudAiplatformV1ReservationAffinity
      properties:
        reservationAffinityType:
          enum:
            - TYPE_UNSPECIFIED
            - NO_RESERVATION
            - ANY_RESERVATION
            - SPECIFIC_RESERVATION
          enumDescriptions:
            - Default value. This should not be used.
            - Do not consume from any reserved capacity, only use on-demand.
            - Consume any reservation available, falling back to on-demand.
            - >-
              Consume from a specific reservation. When chosen, the reservation
              must be identified via the `key` and `values` fields.
          description: Required. Specifies the reservation affinity type.
          type: string
        key:
          description: >-
            Optional. Corresponds to the label key of a reservation resource. To
            target a SPECIFIC_RESERVATION by name, use
            `compute.googleapis.com/reservation-name` as the key and specify the
            name of your reservation as its value.
          type: string
        values:
          description: >-
            Optional. Corresponds to the label values of a reservation resource.
            This must be the full resource name of the reservation.
          type: array
          items:
            type: string
    GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest:
      description: Request message for TensorboardService.BatchCreateTensorboardRuns.
      properties:
        requests:
          type: array
          description: >-
            Required. The request message specifying the TensorboardRuns to
            create. A maximum of 1000 TensorboardRuns can be created in a batch.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1CreateTensorboardRunRequest
      id: GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig
      description: >-
        Configuration that defines the hierarchical relationship of time series
        and parameters for hierarchical forecasting strategies.
      properties:
        groupTemporalTotalWeight:
          type: number
          description: >-
            The weight of the loss for predictions aggregated over both the
            horizon and time series in the same hierarchy group.
          format: double
        groupColumns:
          description: >-
            A list of time series attribute column names that define the time
            series hierarchy. Only one level of hierarchy is supported, ex.
            'region' for a hierarchy of stores or 'department' for a hierarchy
            of products. If multiple columns are specified, time series will be
            grouped by their combined values, ex. ('blue', 'large') for 'color'
            and 'size', up to 5 columns are accepted. If no group columns are
            specified, all time series are considered to be part of the same
            group.
          type: array
          items:
            type: string
        temporalTotalWeight:
          description: >-
            The weight of the loss for predictions aggregated over the horizon
            for a single time series.
          type: number
          format: double
        groupTotalWeight:
          format: double
          description: >-
            The weight of the loss for predictions aggregated over time series
            in the same group.
          type: number
    GoogleCloudAiplatformV1StopTrialRequest:
      properties: {}
      description: Request message for VizierService.StopTrial.
      id: GoogleCloudAiplatformV1StopTrialRequest
      type: object
    GoogleCloudAiplatformV1StudySpecStudyStoppingConfig:
      description: >-
        The configuration (stopping conditions) for automated stopping of a
        Study. Conditions include trial budgets, time budgets, and convergence
        detection.
      id: GoogleCloudAiplatformV1StudySpecStudyStoppingConfig
      properties:
        maxNumTrialsNoProgress:
          description: >-
            If the objective value has not improved for this many consecutive
            trials, stop the study. WARNING: Effective only for single-objective
            studies.
          type: integer
          format: int32
        maxNumTrials:
          description: If there are more than this many trials, stop the study.
          format: int32
          type: integer
        maxDurationNoProgress:
          type: string
          description: >-
            If the objective value has not improved for this much time, stop the
            study. WARNING: Effective only for single-objective studies.
          format: google-duration
        maximumRuntimeConstraint:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudyTimeConstraint'
          description: If the specified time or duration has passed, stop the study.
        shouldStopAsap:
          description: >-
            If true, a Study enters STOPPING_ASAP whenever it would normally
            enters STOPPING state. The bottom line is: set to true if you want
            to interrupt on-going evaluations of Trials as soon as the study
            stopping condition is met. (Please see Study.State documentation for
            the source of truth).
          type: boolean
        minNumTrials:
          type: integer
          description: >-
            If there are fewer than this many COMPLETED trials, do not stop the
            study.
          format: int32
        minimumRuntimeConstraint:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudyTimeConstraint'
          description: >-
            Each "stopping rule" in this proto specifies an "if" condition.
            Before Vizier would generate a new suggestion, it first checks each
            specified stopping rule, from top to bottom in this list. Note that
            the first few rules (e.g. minimum_runtime_constraint,
            min_num_trials) will prevent other stopping rules from being
            evaluated until they are met. For example, setting
            `min_num_trials=5` and `always_stop_after= 1 hour` means that the
            Study will ONLY stop after it has 5 COMPLETED trials, even if more
            than an hour has passed since its creation. It follows the first
            applicable rule (whose "if" condition is satisfied) to make a
            stopping decision. If none of the specified rules are applicable,
            then Vizier decides that the study should not stop. If Vizier
            decides that the study should stop, the study enters STOPPING state
            (or STOPPING_ASAP if should_stop_asap = true). IMPORTANT: The
            automatic study state transition happens precisely as described
            above; that is, deleting trials or updating StudyConfig NEVER
            automatically moves the study state back to ACTIVE. If you want to
            _resume_ a Study that was stopped, 1) change the stopping conditions
            if necessary, 2) activate the study, and then 3) ask for
            suggestions. If the specified time or duration has not passed, do
            not stop the study.
      type: object
    GoogleCloudAiplatformV1NearestNeighborQueryStringFilter:
      id: GoogleCloudAiplatformV1NearestNeighborQueryStringFilter
      type: object
      description: >-
        String filter is used to search a subset of the entities by using
        boolean rules on string columns. For example: if a query specifies
        string filter with 'name = color, allow_tokens = {red, blue},
        deny_tokens = {purple}',' then that query will match entities that are
        red or blue, but if those points are also purple, then they will be
        excluded even if they are red/blue. Only string filter is supported for
        now, numeric filter will be supported in the near future.
      properties:
        name:
          type: string
          description: Required. Column names in BigQuery that used as filters.
        denyTokens:
          items:
            type: string
          description: Optional. The denied tokens.
          type: array
        allowTokens:
          description: Optional. The allowed tokens.
          items:
            type: string
          type: array
    GoogleCloudAiplatformV1ExplanationMetadata:
      id: GoogleCloudAiplatformV1ExplanationMetadata
      type: object
      description: Metadata describing the Model's input and output for explanation.
      properties:
        inputs:
          description: >-
            Required. Map from feature names to feature input metadata. Keys are
            the name of the features. Values are the specification of the
            feature. An empty InputMetadata is valid. It describes a text
            feature which has the name specified as the key in
            ExplanationMetadata.inputs. The baseline of the empty feature is
            chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the
            key can be any friendly name of the feature. Once specified,
            featureAttributions are keyed by this key (if not grouped with
            another feature). For custom images, the key must match with the key
            in instance.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataInputMetadata
          type: object
        latentSpaceSource:
          description: >-
            Name of the source to generate embeddings for example based
            explanations.
          type: string
        outputs:
          description: >-
            Required. Map from output names to output metadata. For Vertex
            AI-provided Tensorflow images, keys can be any user defined string
            that consists of any UTF-8 characters. For custom images, keys are
            the name of the output field in the prediction to be explained.
            Currently only one key is allowed.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata
        featureAttributionsSchemaUri:
          type: string
          description: >-
            Points to a YAML file stored on Google Cloud Storage describing the
            format of the feature attributions. The schema is defined as an
            OpenAPI 3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            AutoML tabular Models always have this field populated by Vertex AI.
            Note: The URI given on output may be different, including the URI
            scheme, than the one given on input. The output URI will point to a
            location where the user only has a read access.
    GoogleCloudAiplatformV1BatchReadFeatureValuesResponse:
      description: Response message for FeaturestoreService.BatchReadFeatureValues.
      properties: {}
      type: object
      id: GoogleCloudAiplatformV1BatchReadFeatureValuesResponse
    GoogleCloudAiplatformV1PipelineJobDetail:
      description: The runtime detail of PipelineJob.
      type: object
      id: GoogleCloudAiplatformV1PipelineJobDetail
      properties:
        pipelineContext:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
          description: Output only. The context of the pipeline.
        taskDetails:
          description: Output only. The runtime details of the tasks under the pipeline.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetail'
          readOnly: true
          type: array
        pipelineRunContext:
          description: Output only. The context of the current pipeline run.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
    GoogleCloudAiplatformV1FeatureViewVertexRagSource:
      id: GoogleCloudAiplatformV1FeatureViewVertexRagSource
      properties:
        uri:
          description: >-
            Required. The BigQuery view/table URI that will be materialized on
            each manual sync trigger. The table/view is expected to have the
            following columns and types at least: - `corpus_id` (STRING,
            NULLABLE/REQUIRED) - `file_id` (STRING, NULLABLE/REQUIRED) -
            `chunk_id` (STRING, NULLABLE/REQUIRED) - `chunk_data_type` (STRING,
            NULLABLE/REQUIRED) - `chunk_data` (STRING, NULLABLE/REQUIRED) -
            `embeddings` (FLOAT, REPEATED) - `file_original_uri` (STRING,
            NULLABLE/REQUIRED)
          type: string
        ragCorpusId:
          format: int64
          description: Optional. The RAG corpus id corresponding to this FeatureView.
          type: string
      description: A Vertex Rag source for features that need to be synced to Online Store.
      type: object
    GoogleCloudAiplatformV1TuningJob:
      id: GoogleCloudAiplatformV1TuningJob
      properties:
        description:
          description: Optional. The description of the TuningJob.
          type: string
        supervisedTuningSpec:
          description: Tuning Spec for Supervised Fine Tuning.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SupervisedTuningSpec'
        tunedModel:
          description: >-
            Output only. The tuned model resources assiociated with this
            TuningJob.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TunedModel'
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Time when the TuningJob was most recently updated.
        encryptionSpec:
          description: >-
            Customer-managed encryption key options for a TuningJob. If this is
            set, then all resources created by the TuningJob will be encrypted
            with the provided encryption key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        createTime:
          format: google-datetime
          description: Output only. Time when the TuningJob was created.
          readOnly: true
          type: string
        experiment:
          readOnly: true
          description: Output only. The Experiment associated with this TuningJob.
          type: string
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Output only. Only populated when job's state is `JOB_STATE_FAILED`
            or `JOB_STATE_CANCELLED`.
          readOnly: true
        labels:
          description: >-
            Optional. The labels with user-defined metadata to organize
            TuningJob and generated resources such as Model and Endpoint. Label
            keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. See
            https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
          additionalProperties:
            type: string
        startTime:
          readOnly: true
          type: string
          format: google-datetime
          description: >-
            Output only. Time when the TuningJob for the first time entered the
            `JOB_STATE_RUNNING` state.
        name:
          readOnly: true
          description: >-
            Output only. Identifier. Resource name of a TuningJob. Format:
            `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
          type: string
        tuningDataStats:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TuningDataStats'
          description: >-
            Output only. The tuning data statistics associated with this
            TuningJob.
        endTime:
          description: >-
            Output only. Time when the TuningJob entered any of the following
            JobStates: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`,
            `JOB_STATE_CANCELLED`, `JOB_STATE_EXPIRED`.
          type: string
          format: google-datetime
          readOnly: true
        state:
          readOnly: true
          description: Output only. The detailed state of the job.
          type: string
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          enumDescriptions:
            - The job state is unspecified.
            - >-
              The job has been just created or resumed and processing has not
              yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - >-
              The job is being cancelled. From this state the job may only go to
              either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
              `JOB_STATE_CANCELLED`.
            - The job has been cancelled.
            - The job has been stopped, and can be resumed.
            - The job has expired.
            - >-
              The job is being updated. Only jobs in the `RUNNING` state can be
              updated. After updating, the job goes back to the `RUNNING` state.
            - >-
              The job is partially succeeded, some results may be missing due to
              errors.
        baseModel:
          description: The base model that is being tuned, e.g., "gemini-1.0-pro-002".
          type: string
        tunedModelDisplayName:
          type: string
          description: >-
            Optional. The display name of the TunedModel. The name can be up to
            128 characters long and can consist of any UTF-8 characters.
      type: object
      description: Represents a TuningJob that runs with Google owned models.
    GoogleCloudAiplatformV1ListSchedulesResponse:
      id: GoogleCloudAiplatformV1ListSchedulesResponse
      properties:
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Pass to
            ListSchedulesRequest.page_token to obtain that page.
          type: string
        schedules:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
          description: List of Schedules in the requested page.
          type: array
      type: object
      description: Response message for ScheduleService.ListSchedules
    GoogleCloudAiplatformV1ToolParameterKVMatchSpec:
      properties:
        useStrictStringMatch:
          description: Optional. Whether to use STRCIT string match on parameter values.
          type: boolean
      id: GoogleCloudAiplatformV1ToolParameterKVMatchSpec
      description: Spec for tool parameter key value match metric.
      type: object
    GoogleCloudAiplatformV1MigratableResourceAutomlDataset:
      type: object
      description: Represents one Dataset in automl.googleapis.com.
      id: GoogleCloudAiplatformV1MigratableResourceAutomlDataset
      properties:
        datasetDisplayName:
          description: The Dataset's display name in automl.googleapis.com.
          type: string
        dataset:
          description: >-
            Full resource name of automl Dataset. Format:
            `projects/{project}/locations/{location}/datasets/{dataset}`.
          type: string
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity
      description: A duration of time expressed in time granularity units.
      properties:
        quantity:
          type: string
          format: int64
          description: >-
            The number of granularity_units between data points in the training
            data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30.
            For all other values of `granularity_unit`, must be 1.
        unit:
          description: >-
            The time granularity unit of this time period. The supported units
            are: * "minute" * "hour" * "day" * "week" * "month" * "year"
          type: string
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata
      properties:
        evaluatedDataItemsBigqueryUri:
          description: BigQuery destination uri for exported evaluated examples.
          type: string
        trainCostMilliNodeHours:
          type: string
          format: int64
          description: >-
            Output only. The actual training cost of the model, expressed in
            milli node hours, i.e. 1,000 value in this field means 1 node hour.
            Guaranteed to not exceed the train budget.
      description: Model metadata specific to AutoML Tables.
      type: object
    GoogleCloudAiplatformV1ToolCallValidMetricValue:
      description: Tool call valid metric value for an instance.
      type: object
      id: GoogleCloudAiplatformV1ToolCallValidMetricValue
      properties:
        score:
          type: number
          description: Output only. Tool call valid score.
          format: float
          readOnly: true
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig:
      id: >-
        GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig
      type: object
      properties:
        skewThresholds:
          description: >-
            Key is the feature name and value is the threshold. If a feature
            needs to be monitored for skew, a value threshold must be configured
            for that feature. The threshold here is against feature distribution
            distance between the training and prediction feature.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
        attributionScoreSkewThresholds:
          description: >-
            Key is the feature name and value is the threshold. The threshold
            here is against attribution score distance between the training and
            prediction feature.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
        defaultSkewThreshold:
          description: >-
            Skew anomaly detection threshold used by all features. When the
            per-feature thresholds are not set, this field can be used to
            specify a threshold for all features.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
      description: >-
        The config for Training & Prediction data skew detection. It specifies
        the training dataset sources and the skew detection parameters.
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline:
      id: >-
        GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline
      type: object
      description: >-
        Output from BatchPredictionJob for Model Monitoring baseline dataset,
        which can be used to generate baseline attribution scores.
      properties:
        gcs:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: Cloud Storage location for BatchExplain output.
        predictionFormat:
          description: The storage format of the predictions generated BatchPrediction job.
          enumDescriptions:
            - Should not be set.
            - Predictions are in JSONL files.
            - Predictions are in BigQuery.
          enum:
            - PREDICTION_FORMAT_UNSPECIFIED
            - JSONL
            - BIGQUERY
          type: string
        bigquery:
          description: BigQuery location for BatchExplain output.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination'
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry
      properties:
        quantile:
          description: The quantile for this entry.
          type: number
          format: double
        observedQuantile:
          type: number
          description: >-
            This is a custom metric that calculates the percentage of true
            values that were less than the predicted value for that quantile.
            Only populated when optimization_objective is minimize-quantile-loss
            and each entry corresponds to an entry in quantiles The percent
            value can be used to compare with the quantile value, which is the
            target value.
          format: double
        scaledPinballLoss:
          format: float
          description: The scaled pinball loss of this quantile.
          type: number
      description: Entry for the Quantiles loss type optimization objective.
    GoogleCloudAiplatformV1FluencyInput:
      type: object
      id: GoogleCloudAiplatformV1FluencyInput
      properties:
        metricSpec:
          description: Required. Spec for fluency score metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FluencySpec'
        instance:
          description: Required. Fluency instance.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FluencyInstance'
      description: Input for fluency metric.
    GoogleCloudAiplatformV1DeployedIndex:
      type: object
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when the DeployedIndex was created.
          type: string
        index:
          description: >-
            Required. The name of the Index this is the deployment of. We may
            refer to this Index as the DeployedIndex's "original" Index.
          type: string
        dedicatedResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DedicatedResources'
          description: >-
            Optional. A description of resources that are dedicated to the
            DeployedIndex, and that need a higher degree of manual
            configuration. The field min_replica_count must be set to a value
            strictly greater than 0, or else validation will fail. We don't
            provide SLA when min_replica_count=1. If max_replica_count is not
            set, the default value is min_replica_count. The max allowed replica
            count is 1000. Available machine types for SMALL shard:
            e2-standard-2 and all machine types available for MEDIUM and LARGE
            shard. Available machine types for MEDIUM shard: e2-standard-16 and
            all machine types available for LARGE shard. Available machine types
            for LARGE shard: e2-highmem-16, n2d-standard-32. n1-standard-16 and
            n1-standard-32 are still available, but we recommend e2-standard-16
            and e2-highmem-16 for cost efficiency.
        reservedIpRanges:
          type: array
          items:
            type: string
          description: >-
            Optional. A list of reserved ip ranges under the VPC network that
            can be used for this DeployedIndex. If set, we will deploy the index
            within the provided ip ranges. Otherwise, the index might be
            deployed to any ip ranges under the provided VPC network. The value
            should be the name of the address
            (https://cloud.google.com/compute/docs/reference/rest/v1/addresses)
            Example: ['vertex-ai-ip-range']. For more information about subnets
            and network IP ranges, please see
            https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
        enableAccessLogging:
          type: boolean
          description: >-
            Optional. If true, private endpoint's access logs are sent to Cloud
            Logging. These logs are like standard server access logs, containing
            information like timestamp and latency for each MatchRequest. Note
            that logs may incur a cost, especially if the deployed index
            receives a high queries per second rate (QPS). Estimate your costs
            before enabling this option.
        privateEndpoints:
          readOnly: true
          description: >-
            Output only. Provides paths for users to send requests directly to
            the deployed index services running on Cloud via private services
            access. This field is populated if network is configured.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexPrivateEndpoints'
        displayName:
          type: string
          description: >-
            The display name of the DeployedIndex. If not provided upon
            creation, the Index's display_name is used.
        indexSyncTime:
          type: string
          description: >-
            Output only. The DeployedIndex may depend on various data on its
            original Index. Additionally when certain changes to the original
            Index are being done (e.g. when what the Index contains is being
            changed) the DeployedIndex may be asynchronously updated in the
            background to reflect these changes. If this timestamp's value is at
            least the Index.update_time of the original Index, it means that
            this DeployedIndex and the original Index are in sync. If this
            timestamp is older, then to see which updates this DeployedIndex
            already contains (and which it does not), one must list the
            operations that are running on the original Index. Only the
            successfully completed Operations with update_time equal or before
            this sync time are contained in this DeployedIndex.
          readOnly: true
          format: google-datetime
        id:
          type: string
          description: >-
            Required. The user specified ID of the DeployedIndex. The ID can be
            up to 128 characters long and must start with a letter and only
            contain letters, numbers, and underscores. The ID must be unique
            within the project it is created in.
        pscAutomationConfigs:
          description: >-
            Optional. If set for PSC deployed index, PSC connection will be
            automatically created after deployment is done and the endpoint
            information is populated in
            private_endpoints.psc_automated_endpoints.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PSCAutomationConfig'
        automaticResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1AutomaticResources'
          description: >-
            Optional. A description of resources that the DeployedIndex uses,
            which to large degree are decided by Vertex AI, and optionally
            allows only a modest additional configuration. If min_replica_count
            is not set, the default value is 2 (we don't provide SLA when
            min_replica_count=1). If max_replica_count is not set, the default
            value is min_replica_count. The max allowed replica count is 1000.
        deploymentGroup:
          type: string
          description: >-
            Optional. The deployment group can be no longer than 64 characters
            (eg: 'test', 'prod'). If not set, we will use the 'default'
            deployment group. Creating `deployment_groups` with
            `reserved_ip_ranges` is a recommended practice when the peered
            network has multiple peering ranges. This creates your deployments
            from predictable IP spaces for easier traffic administration. Also,
            one deployment_group (except 'default') can only be used with the
            same reserved_ip_ranges which means if the deployment_group has been
            used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d,
            e] is disallowed. Note: we only support up to 5 deployment
            groups(not including 'default').
        deployedIndexAuthConfig:
          description: >-
            Optional. If set, the authentication is enabled for the private
            endpoint.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndexAuthConfig'
      description: >-
        A deployment of an Index. IndexEndpoints contain one or more
        DeployedIndexes.
      id: GoogleCloudAiplatformV1DeployedIndex
    GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInstance:
      type: object
      id: GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInstance
      description: Spec for question answering correctness instance.
      properties:
        instruction:
          type: string
          description: >-
            Required. The question asked and other instruction in the inference
            prompt.
        prediction:
          type: string
          description: Required. Output of the evaluated model.
        reference:
          type: string
          description: Optional. Ground truth used to compare against the prediction.
        context:
          description: Optional. Text provided as context to answer the question.
          type: string
    GoogleCloudAiplatformV1CoherenceResult:
      type: object
      description: Spec for coherence result.
      id: GoogleCloudAiplatformV1CoherenceResult
      properties:
        explanation:
          readOnly: true
          description: Output only. Explanation for coherence score.
          type: string
        confidence:
          readOnly: true
          type: number
          description: Output only. Confidence for coherence score.
          format: float
        score:
          type: number
          readOnly: true
          description: Output only. Coherence score.
          format: float
    GoogleCloudAiplatformV1DeployIndexOperationMetadata:
      description: Runtime operation information for IndexEndpointService.DeployIndex.
      type: object
      id: GoogleCloudAiplatformV1DeployIndexOperationMetadata
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
        deployedIndexId:
          description: The unique index id specified by user
          type: string
    CloudAiLargeModelsVisionRaiInfo:
      description: 'Next ID: 6'
      properties:
        detectedLabels:
          type: array
          items:
            $ref: '#/components/schemas/CloudAiLargeModelsVisionRaiInfoDetectedLabels'
          description: The list of detected labels for different rai categories.
        raiCategories:
          items:
            type: string
          description: List of rai categories' information to return
          type: array
        scores:
          description: >-
            List of rai scores mapping to the rai categories. Rounded to 1
            decimal place.
          type: array
          items:
            type: number
            format: float
        modelName:
          type: string
          description: >-
            The model name used to indexing into the RaiFilterConfig map. Would
            either be one of imagegeneration@002-006, imagen-3.0-... api
            endpoint names, or internal names used for mapping to different
            filter configs (genselfie, ai_watermark) than its api endpoint.
        blockedEntities:
          type: array
          description: List of blocked entities from the blocklist if it is detected.
          items:
            type: string
      id: CloudAiLargeModelsVisionRaiInfo
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics
      properties:
        confidenceThreshold:
          format: float
          type: number
          description: The confidence threshold value used to compute the metrics.
        f1Score:
          format: float
          description: The harmonic mean of recall and precision.
          type: number
        recall:
          format: float
          type: number
          description: Recall under the given confidence threshold.
        precision:
          description: Precision under the given confidence threshold.
          format: float
          type: number
      description: Metrics for a single confidence threshold.
    GoogleCloudAiplatformV1Tensorboard:
      properties:
        satisfiesPzi:
          readOnly: true
          type: boolean
          description: Output only. Reserved for future use.
        updateTime:
          type: string
          description: Output only. Timestamp when this Tensorboard was last updated.
          readOnly: true
          format: google-datetime
        description:
          description: Description of this Tensorboard.
          type: string
        isDefault:
          type: boolean
          description: >-
            Used to indicate if the TensorBoard instance is the default one.
            Each project & region can have at most one default TensorBoard
            instance. Creation of a default TensorBoard instance and updating an
            existing TensorBoard instance to be default will mark all other
            TensorBoard instances (if any) as non default.
        etag:
          type: string
          description: >-
            Used to perform a consistent read-modify-write updates. If not set,
            a blind "overwrite" update happens.
        blobStoragePathPrefix:
          description: >-
            Output only. Consumer project Cloud Storage path prefix used to
            store blob data, which can either be a bucket or directory. Does not
            end with a '/'.
          type: string
          readOnly: true
        name:
          description: >-
            Output only. Name of the Tensorboard. Format:
            `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            The labels with user-defined metadata to organize your Tensorboards.
            Label keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. No
            more than 64 user labels can be associated with one Tensorboard
            (System labels are excluded). See https://goo.gl/xmQnxf for more
            information and examples of labels. System reserved label keys are
            prefixed with "aiplatform.googleapis.com/" and are immutable.
        runCount:
          readOnly: true
          format: int32
          description: Output only. The number of Runs stored in this Tensorboard.
          type: integer
        satisfiesPzs:
          type: boolean
          readOnly: true
          description: Output only. Reserved for future use.
        displayName:
          description: Required. User provided name of this Tensorboard.
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Output only. Timestamp when this Tensorboard was created.
          readOnly: true
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Customer-managed encryption key spec for a Tensorboard. If set, this
            Tensorboard and all sub-resources of this Tensorboard will be
            secured by this key.
      id: GoogleCloudAiplatformV1Tensorboard
      type: object
      description: >-
        Tensorboard is a physical database that stores users' training metrics.
        A default Tensorboard is provided in each region of a Google Cloud
        project. If needed users can also create extra Tensorboards in their
        projects.
    GoogleCloudAiplatformV1QuestionAnsweringQualityResult:
      type: object
      description: Spec for question answering quality result.
      properties:
        confidence:
          readOnly: true
          format: float
          description: Output only. Confidence for question answering quality score.
          type: number
        explanation:
          type: string
          readOnly: true
          description: Output only. Explanation for question answering quality score.
        score:
          description: Output only. Question Answering Quality score.
          type: number
          format: float
          readOnly: true
      id: GoogleCloudAiplatformV1QuestionAnsweringQualityResult
    GoogleCloudAiplatformV1WriteFeatureValuesResponse:
      description: >-
        Response message for
        FeaturestoreOnlineServingService.WriteFeatureValues.
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1WriteFeatureValuesResponse
    GoogleCloudAiplatformV1FluencySpec:
      properties:
        version:
          format: int32
          type: integer
          description: Optional. Which version to use for evaluation.
      id: GoogleCloudAiplatformV1FluencySpec
      type: object
      description: Spec for fluency score metric.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata:
      properties:
        successfulStopReason:
          enumDescriptions:
            - Should not be set.
            - The inputs.budgetMilliNodeHours had been reached.
            - >-
              Further training of the Model ceased to increase its quality,
              since it already has converged.
          type: string
          enum:
            - SUCCESSFUL_STOP_REASON_UNSPECIFIED
            - BUDGET_REACHED
            - MODEL_CONVERGED
          description: >-
            For successful job completions, this is the reason why the job has
            finished.
        costMilliNodeHours:
          type: string
          description: >-
            The actual training cost of creating this model, expressed in milli
            node hours, i.e. 1,000 value in this field means 1 node hour.
            Guaranteed to not exceed inputs.budgetMilliNodeHours.
          format: int64
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetrics:
      description: Metrics for text extraction evaluation results.
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetrics
      type: object
      properties:
        confusionMatrix:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
          description: >-
            Confusion matrix of the evaluation. Only set for Models where number
            of AnnotationSpecs is no more than 10. Only set for
            ModelEvaluations, not for ModelEvaluationSlices.
        confidenceMetrics:
          description: >-
            Metrics that have confidence thresholds. Precision-recall curve can
            be derived from them.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics
    GoogleCloudAiplatformV1CreateNotebookRuntimeTemplateOperationMetadata:
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
      type: object
      description: Metadata information for NotebookService.CreateNotebookRuntimeTemplate.
      id: GoogleCloudAiplatformV1CreateNotebookRuntimeTemplateOperationMetadata
    GoogleCloudAiplatformV1ExportDataOperationMetadata:
      description: Runtime operation information for DatasetService.ExportData.
      type: object
      properties:
        gcsOutputDirectory:
          description: >-
            A Google Cloud Storage directory which path ends with '/'. The
            exported data is stored in the directory.
          type: string
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1ExportDataOperationMetadata
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix:
      properties:
        rows:
          items:
            items:
              type: any
            type: array
          type: array
          description: >-
            Rows in the confusion matrix. The number of rows is equal to the
            size of `annotationSpecs`. `rowsi` is the number of DataItems that
            have ground truth of the `annotationSpecs[i]` and are predicted as
            `annotationSpecs[j]` by the Model being evaluated. For Text
            Extraction, when `annotationSpecs[i]` is the last element in
            `annotationSpecs`, i.e. the special negative AnnotationSpec, `rowsi`
            is the number of predicted entities of `annoatationSpec[j]` that are
            not labeled as any of the ground truth AnnotationSpec. When
            annotationSpecs[j] is the special negative AnnotationSpec, `rowsi`
            is the number of entities have ground truth of `annotationSpec[i]`
            that are not predicted as an entity by the Model. The value of the
            last cell, i.e. `rowi` where i == j and `annotationSpec[i]` is the
            special negative AnnotationSpec, is always 0.
        annotationSpecs:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef
          description: >-
            AnnotationSpecs used in the confusion matrix. For AutoML Text
            Extraction, a special negative AnnotationSpec with empty `id` and
            `displayName` of "NULL" will be added as the last element.
          type: array
      type: object
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
    GoogleCloudAiplatformV1FeatureStatsAnomaly:
      id: GoogleCloudAiplatformV1FeatureStatsAnomaly
      type: object
      properties:
        distributionDeviation:
          format: double
          description: >-
            Deviation from the current stats to baseline stats. 1. For
            categorical feature, the distribution distance is calculated by
            L-inifinity norm. 2. For numerical feature, the distribution
            distance is calculated by Jensen–Shannon divergence.
          type: number
        score:
          description: >-
            Feature importance score, only populated when cross-feature
            monitoring is enabled. For now only used to represent feature
            attribution score within range [0, 1] for
            ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and
            ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT.
          format: double
          type: number
        endTime:
          format: google-datetime
          type: string
          description: >-
            The end timestamp of window where stats were generated. For
            objectives where time window doesn't make sense (e.g. Featurestore
            Snapshot Monitoring), end_time indicates the timestamp of the data
            used to generate stats (e.g. timestamp we take snapshots for feature
            values).
        statsUri:
          type: string
          description: >-
            Path of the stats file for current feature values in Cloud Storage
            bucket. Format: gs:////stats. Example:
            gs://monitoring_bucket/feature_name/stats. Stats are stored as
            binary format with Protobuf message
            [tensorflow.metadata.v0.FeatureNameStatistics](https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/statistics.proto).
        anomalyUri:
          description: >-
            Path of the anomaly file for current feature values in Cloud Storage
            bucket. Format: gs:////anomalies. Example:
            gs://monitoring_bucket/feature_name/anomalies. Stats are stored as
            binary format with Protobuf message Anoamlies are stored as binary
            format with Protobuf message [tensorflow.metadata.v0.AnomalyInfo]
            (https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/anomalies.proto).
          type: string
        anomalyDetectionThreshold:
          format: double
          type: number
          description: >-
            This is the threshold used when detecting anomalies. The threshold
            can be changed by user, so this one might be different from
            ThresholdConfig.value.
        startTime:
          description: >-
            The start timestamp of window where stats were generated. For
            objectives where time window doesn't make sense (e.g. Featurestore
            Snapshot Monitoring), start_time is only used to indicate the
            monitoring intervals, so it always equals to (end_time -
            monitoring_interval).
          format: google-datetime
          type: string
      description: >-
        Stats and Anomaly generated at specific timestamp for specific Feature.
        The start_time and end_time are used to define the time range of the
        dataset that current stats belongs to, e.g. prediction traffic is
        bucketed into prediction datasets by time window. If the Dataset is not
        defined by time window, start_time = end_time. Timestamp of the stats
        and anomalies always refers to end_time. Raw stats and anomalies are
        stored in stats_uri or anomaly_uri in the tensorflow defined protos.
        Field data_stats contains almost identical information with the raw
        stats in Vertex AI defined proto, for UI to display.
    GoogleCloudAiplatformV1Execution:
      id: GoogleCloudAiplatformV1Execution
      type: object
      properties:
        schemaVersion:
          type: string
          description: >-
            The version of the schema in `schema_title` to use. Schema title and
            version is expected to be registered in earlier Create Schema calls.
            And both are used together as unique identifiers to identify schemas
            within the local metadata store.
        state:
          type: string
          enumDescriptions:
            - Unspecified Execution state
            - The Execution is new
            - The Execution is running
            - The Execution has finished running
            - The Execution has failed
            - The Execution completed through Cache hit.
            - The Execution was cancelled.
          enum:
            - STATE_UNSPECIFIED
            - NEW
            - RUNNING
            - COMPLETE
            - FAILED
            - CACHED
            - CANCELLED
          description: >-
            The state of this Execution. This is a property of the Execution,
            and does not imply or capture any ongoing process. This property is
            managed by clients (such as Vertex AI Pipelines) and the system does
            not prescribe or check the validity of state transitions.
        name:
          description: Output only. The resource name of the Execution.
          type: string
          readOnly: true
        etag:
          description: >-
            An eTag used to perform consistent read-modify-write updates. If not
            set, a blind "overwrite" update happens.
          type: string
        schemaTitle:
          type: string
          description: >-
            The title of the schema describing the metadata. Schema title and
            version is expected to be registered in earlier Create Schema calls.
            And both are used together as unique identifiers to identify schemas
            within the local metadata store.
        description:
          type: string
          description: Description of the Execution
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when this Execution was created.
          type: string
        updateTime:
          type: string
          readOnly: true
          description: Output only. Timestamp when this Execution was last updated.
          format: google-datetime
        displayName:
          description: >-
            User provided display name of the Execution. May be up to 128
            Unicode characters.
          type: string
        labels:
          type: object
          description: >-
            The labels with user-defined metadata to organize your Executions.
            Label keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. No
            more than 64 user labels can be associated with one Execution
            (System labels are excluded).
          additionalProperties:
            type: string
        metadata:
          description: >-
            Properties of the Execution. Top level metadata keys' heading and
            trailing spaces will be trimmed. The size of this field should not
            exceed 200KB.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
      description: Instance of a general execution.
    GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest:
      description: >-
        Request message for
        JobService.SearchModelDeploymentMonitoringStatsAnomalies.
      type: object
      properties:
        pageSize:
          description: The standard list page size.
          type: integer
          format: int32
        deployedModelId:
          description: >-
            Required. The DeployedModel ID of the
            [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id].
          type: string
        endTime:
          type: string
          description: >-
            The latest timestamp of stats being generated. If not set, indicates
            feching stats till the latest possible one.
          format: google-datetime
        startTime:
          type: string
          format: google-datetime
          description: >-
            The earliest timestamp of stats being generated. If not set,
            indicates fetching stats till the earliest possible one.
        featureDisplayName:
          type: string
          description: >-
            The feature display name. If specified, only return the stats
            belonging to this feature. Format:
            ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name,
            example: "user_destination".
        objectives:
          description: Required. Objectives of the stats to retrieve.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective
          type: array
        pageToken:
          description: >-
            A page token received from a previous
            JobService.SearchModelDeploymentMonitoringStatsAnomalies call.
          type: string
      id: >-
        GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
    GoogleCloudAiplatformV1ExactMatchMetricValue:
      description: Exact match metric value for an instance.
      type: object
      id: GoogleCloudAiplatformV1ExactMatchMetricValue
      properties:
        score:
          type: number
          description: Output only. Exact match score.
          format: float
          readOnly: true
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource:
      properties:
        uri:
          items:
            type: string
          description: >-
            Cloud Storage URI of one or more files. Only CSV files are
            supported. The first line of the CSV file is used as the header. If
            there are multiple files, the header is the first line of the
            lexicographically first file, the other files must either contain
            the exact same header or omit the header.
          type: array
      type: object
      id: GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource
    GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest:
      id: GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest
      properties:
        filter:
          type: string
          description: >-
            Exports the TensorboardTimeSeries' data that match the filter
            expression.
        pageSize:
          description: >-
            The maximum number of data points to return per page. The default
            page_size is 1000. Values must be between 1 and 10000. Values above
            10000 are coerced to 10000.
          type: integer
          format: int32
        orderBy:
          description: >-
            Field to use to sort the TensorboardTimeSeries' data. By default,
            TensorboardTimeSeries' data is returned in a pseudo random order.
          type: string
        pageToken:
          description: >-
            A page token, received from a previous
            ExportTensorboardTimeSeriesData call. Provide this to retrieve the
            subsequent page. When paginating, all other parameters provided to
            ExportTensorboardTimeSeriesData must match the call that provided
            the page token.
          type: string
      description: Request message for TensorboardService.ExportTensorboardTimeSeriesData.
      type: object
    GoogleCloudAiplatformV1ExportModelOperationMetadata:
      properties:
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
        outputInfo:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo
          description: >-
            Output only. Information further describing the output of this Model
            export.
          readOnly: true
      description: Details of ModelService.ExportModel operation.
      type: object
      id: GoogleCloudAiplatformV1ExportModelOperationMetadata
    GoogleCloudAiplatformV1TimeSeriesData:
      id: GoogleCloudAiplatformV1TimeSeriesData
      properties:
        valueType:
          enumDescriptions:
            - The value type is unspecified.
            - >-
              Used for TensorboardTimeSeries that is a list of scalars. E.g.
              accuracy of a model over epochs/time.
            - >-
              Used for TensorboardTimeSeries that is a list of tensors. E.g.
              histograms of weights of layer in a model over epoch/time.
            - >-
              Used for TensorboardTimeSeries that is a list of blob sequences.
              E.g. set of sample images with labels over epochs/time.
          description: >-
            Required. Immutable. The value type of this time series. All the
            values in this time series data must match this value type.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - SCALAR
            - TENSOR
            - BLOB_SEQUENCE
          type: string
        tensorboardTimeSeriesId:
          type: string
          description: >-
            Required. The ID of the TensorboardTimeSeries, which will become the
            final component of the TensorboardTimeSeries' resource name
        values:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TimeSeriesDataPoint'
          type: array
          description: Required. Data points in this time series.
      description: All the data stored in a TensorboardTimeSeries.
      type: object
    GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail:
      type: object
      id: GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail
      description: The detailed info for a custom job executor.
      properties:
        failedJobs:
          readOnly: true
          items:
            type: string
          type: array
          description: >-
            Output only. The names of the previously failed CustomJob. The list
            includes the all attempts in chronological order.
        job:
          readOnly: true
          type: string
          description: Output only. The name of the CustomJob.
    GoogleCloudAiplatformV1DirectPredictRequest:
      id: GoogleCloudAiplatformV1DirectPredictRequest
      properties:
        parameters:
          description: The parameters that govern the prediction.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
        inputs:
          description: The prediction input.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
      description: Request message for PredictionService.DirectPredict.
      type: object
    GoogleCloudAiplatformV1GenerationConfigRoutingConfigManualRoutingMode:
      description: When manual routing is set, the specified model will be used directly.
      id: GoogleCloudAiplatformV1GenerationConfigRoutingConfigManualRoutingMode
      properties:
        modelName:
          type: string
          description: >-
            The model name to use. Only the public LLM models are accepted. e.g.
            'gemini-1.5-pro-001'.
      type: object
    GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList:
      type: object
      id: >-
        GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList
      properties:
        features:
          description: List of feature names and values.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair
          type: array
      description: >-
        Response structure in the format of key (feature name) and (feature)
        value pair.
    GoogleCloudAiplatformV1FunctionDeclaration:
      properties:
        parameters:
          description: >-
            Optional. Describes the parameters to this function in JSON Schema
            Object format. Reflects the Open API 3.03 Parameter Object. string
            Key: the name of the parameter. Parameter names are case sensitive.
            Schema Value: the Schema defining the type used for the parameter.
            For function with no parameters, this can be left unset. Parameter
            names must start with a letter or an underscore and must only
            contain chars a-z, A-Z, 0-9, or underscores with a maximum length of
            64. Example with 1 required and 1 optional parameter: type: OBJECT
            properties: param1: type: STRING param2: type: INTEGER required: -
            param1
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Schema'
        name:
          type: string
          description: >-
            Required. The name of the function to call. Must start with a letter
            or an underscore. Must be a-z, A-Z, 0-9, or contain underscores,
            dots and dashes, with a maximum length of 64.
        description:
          type: string
          description: >-
            Optional. Description and purpose of the function. Model uses it to
            decide how and whether to call the function.
        response:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Schema'
          description: >-
            Optional. Describes the output from this function in JSON Schema
            format. Reflects the Open API 3.03 Response Object. The Schema
            defines the type used for the response value of the function.
      description: >-
        Structured representation of a function declaration as defined by the
        [OpenAPI 3.0 specification](https://spec.openapis.org/oas/v3.0.3).
        Included in this declaration are the function name and parameters. This
        FunctionDeclaration is a representation of a block of code that can be
        used as a `Tool` by the model and executed by the client.
      type: object
      id: GoogleCloudAiplatformV1FunctionDeclaration
    GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry:
      properties:
        inlineContext:
          type: string
          description: >-
            The grounding text passed inline with the Predict API. It can
            support up to 1 million bytes.
        enterpriseDatastore:
          deprecated: true
          description: >-
            The uri of the Vertex AI Search data source. Deprecated. Use
            vertex_ai_search_datastore instead.
          type: string
        vertexAiSearchDatastore:
          type: string
          description: The uri of the Vertex AI Search data source.
        type:
          enumDescriptions:
            - ''
            - Uses Web Search to check the grounding.
            - >-
              Uses Vertex AI Search to check the grounding. Deprecated. Use
              VERTEX_AI_SEARCH instead.
            - Uses Vertex AI Search to check the grounding
            - Uses inline context to check the grounding.
          description: The type of the grounding checking source.
          enum:
            - UNSPECIFIED
            - WEB
            - ENTERPRISE
            - VERTEX_AI_SEARCH
            - INLINE
          type: string
          enumDeprecated:
            - false
            - false
            - true
            - false
            - false
      id: GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry
      description: Single source entry for the grounding checking.
      type: object
    GoogleCloudAiplatformV1Retrieval:
      properties:
        vertexAiSearch:
          description: Set to use data source powered by Vertex AI Search.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1VertexAISearch'
        disableAttribution:
          type: boolean
          description: Optional. Deprecated. This option is no longer supported.
          deprecated: true
        vertexRagStore:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1VertexRagStore'
          description: >-
            Set to use data source powered by Vertex RAG store. User data is
            uploaded via the VertexRagDataService.
      id: GoogleCloudAiplatformV1Retrieval
      type: object
      description: >-
        Defines a retrieval tool that model can call to access external
        knowledge.
    GoogleCloudAiplatformV1SafetySetting:
      description: Safety settings.
      id: GoogleCloudAiplatformV1SafetySetting
      type: object
      properties:
        method:
          enum:
            - HARM_BLOCK_METHOD_UNSPECIFIED
            - SEVERITY
            - PROBABILITY
          enumDescriptions:
            - The harm block method is unspecified.
            - The harm block method uses both probability and severity scores.
            - The harm block method uses the probability score.
          type: string
          description: >-
            Optional. Specify if the threshold is used for probability or
            severity score. If not specified, the threshold is used for
            probability score.
        category:
          enumDescriptions:
            - The harm category is unspecified.
            - The harm category is hate speech.
            - The harm category is dangerous content.
            - The harm category is harassment.
            - The harm category is sexually explicit content.
            - The harm category is civic integrity.
          description: Required. Harm category.
          enum:
            - HARM_CATEGORY_UNSPECIFIED
            - HARM_CATEGORY_HATE_SPEECH
            - HARM_CATEGORY_DANGEROUS_CONTENT
            - HARM_CATEGORY_HARASSMENT
            - HARM_CATEGORY_SEXUALLY_EXPLICIT
            - HARM_CATEGORY_CIVIC_INTEGRITY
          type: string
        threshold:
          enumDescriptions:
            - Unspecified harm block threshold.
            - Block low threshold and above (i.e. block more).
            - Block medium threshold and above.
            - Block only high threshold (i.e. block less).
            - Block none.
            - Turn off the safety filter.
          type: string
          enum:
            - HARM_BLOCK_THRESHOLD_UNSPECIFIED
            - BLOCK_LOW_AND_ABOVE
            - BLOCK_MEDIUM_AND_ABOVE
            - BLOCK_ONLY_HIGH
            - BLOCK_NONE
            - 'OFF'
          description: Required. The harm block threshold.
    GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling:
      id: GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling
      type: object
      properties:
        minNodeCount:
          description: >-
            Required. The minimum number of nodes to scale down to. Must be
            greater than or equal to 1.
          type: integer
          format: int32
        maxNodeCount:
          description: >-
            The maximum number of nodes to scale up to. Must be greater than
            min_node_count, and less than or equal to 10 times of
            'min_node_count'.
          type: integer
          format: int32
        cpuUtilizationTarget:
          description: >-
            Optional. The cpu utilization that the Autoscaler should be trying
            to achieve. This number is on a scale from 0 (no utilization) to 100
            (total utilization), and is limited between 10 and 80. When a
            cluster's CPU utilization exceeds the target that you have set,
            Bigtable immediately adds nodes to the cluster. When CPU utilization
            is substantially lower than the target, Bigtable removes nodes. If
            not set or set to 0, default to 50.
          type: integer
          format: int32
      description: >-
        Online serving scaling configuration. If min_node_count and
        max_node_count are set to the same value, the cluster will be configured
        with the fixed number of node (no auto-scaling).
    GoogleCloudAiplatformV1ExportModelRequest:
      properties:
        outputConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ExportModelRequestOutputConfig
          description: Required. The desired output location and configuration.
      type: object
      description: Request message for ModelService.ExportModel.
      id: GoogleCloudAiplatformV1ExportModelRequest
    GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData:
      type: object
      properties:
        username:
          type: string
          description: User's username
        viewCount:
          type: string
          description: Number of times the user has read data within the Tensorboard.
          format: int64
      description: Per user usage data.
      id: GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData
    GoogleCloudAiplatformV1QuestionAnsweringRelevanceSpec:
      type: object
      description: Spec for question answering relevance metric.
      properties:
        version:
          format: int32
          description: Optional. Which version to use for evaluation.
          type: integer
        useReference:
          type: boolean
          description: >-
            Optional. Whether to use instance.reference to compute question
            answering relevance.
      id: GoogleCloudAiplatformV1QuestionAnsweringRelevanceSpec
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomTask:
      properties:
        metadata:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata
          description: The metadata information.
        inputs:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
          description: The input parameters of this CustomTask.
      description: A TrainingJob that trains a custom code Model.
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomTask
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTables:
      description: A TrainingJob that trains and uploads an AutoML Tables Model.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTables
      type: object
      properties:
        metadata:
          description: The metadata information.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs
    GoogleCloudAiplatformV1SchemaVideoClassificationAnnotation:
      description: Annotation details specific to video classification.
      type: object
      properties:
        displayName:
          type: string
          description: >-
            The display name of the AnnotationSpec that this Annotation pertains
            to.
        timeSegment:
          description: >-
            This Annotation applies to the time period represented by the
            TimeSegment. If it's not set, the Annotation applies to the whole
            video.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSegment'
        annotationSpecId:
          type: string
          description: >-
            The resource Id of the AnnotationSpec that this Annotation pertains
            to.
      id: GoogleCloudAiplatformV1SchemaVideoClassificationAnnotation
    GoogleCloudAiplatformV1UpdateExplanationDatasetRequest:
      description: Request message for ModelService.UpdateExplanationDataset.
      id: GoogleCloudAiplatformV1UpdateExplanationDatasetRequest
      type: object
      properties:
        examples:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Examples'
          description: The example config containing the location of the dataset.
    GoogleCloudAiplatformV1FractionSplit:
      properties:
        validationFraction:
          type: number
          format: double
          description: >-
            The fraction of the input data that is to be used to validate the
            Model.
        trainingFraction:
          format: double
          type: number
          description: >-
            The fraction of the input data that is to be used to train the
            Model.
        testFraction:
          type: number
          description: >-
            The fraction of the input data that is to be used to evaluate the
            Model.
          format: double
      description: >-
        Assigns the input data to training, validation, and test sets as per the
        given fractions. Any of `training_fraction`, `validation_fraction` and
        `test_fraction` may optionally be provided, they must sum to up to 1. If
        the provided ones sum to less than 1, the remainder is assigned to sets
        as decided by Vertex AI. If none of the fractions are set, by default
        roughly 80% of data is used for training, 10% for validation, and 10%
        for test.
      id: GoogleCloudAiplatformV1FractionSplit
      type: object
    GoogleCloudAiplatformV1SummarizationVerbosityResult:
      description: Spec for summarization verbosity result.
      id: GoogleCloudAiplatformV1SummarizationVerbosityResult
      type: object
      properties:
        score:
          readOnly: true
          description: Output only. Summarization Verbosity score.
          type: number
          format: float
        confidence:
          readOnly: true
          description: Output only. Confidence for summarization verbosity score.
          format: float
          type: number
        explanation:
          type: string
          description: Output only. Explanation for summarization verbosity score.
          readOnly: true
    GoogleCloudAiplatformV1MetadataStoreDataplexConfig:
      type: object
      id: GoogleCloudAiplatformV1MetadataStoreDataplexConfig
      properties:
        enabledPipelinesLineage:
          type: boolean
          description: >-
            Optional. Whether or not Data Lineage synchronization is enabled for
            Vertex Pipelines.
      description: Represents Dataplex integration settings.
    GoogleCloudAiplatformV1CancelTrainingPipelineRequest:
      properties: {}
      type: object
      id: GoogleCloudAiplatformV1CancelTrainingPipelineRequest
      description: Request message for PipelineService.CancelTrainingPipeline.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata:
      description: Model metadata specific to AutoML Forecasting.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata
      type: object
      properties:
        trainCostMilliNodeHours:
          description: >-
            Output only. The actual training cost of the model, expressed in
            milli node hours, i.e. 1,000 value in this field means 1 node hour.
            Guaranteed to not exceed the train budget.
          format: int64
          type: string
        evaluatedDataItemsBigqueryUri:
          description: BigQuery destination uri for exported evaluated examples.
          type: string
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter
      properties:
        trainerType:
          enumDescriptions:
            - Default value.
            - ''
            - ''
          type: string
          enum:
            - TRAINER_TYPE_UNSPECIFIED
            - AUTOML_TRAINER
            - MODEL_GARDEN_TRAINER
        checkpointName:
          type: string
          description: >-
            Optional. An unique name of pretrained model checkpoint provided in
            model garden, it will be mapped to a GCS location internally.
        trainerConfig:
          additionalProperties:
            type: string
          description: Customizable trainer settings, used in the `model_garden_trainer`.
          type: object
        studySpec:
          description: >-
            Optioinal. StudySpec of hyperparameter tuning job. Required for
            `model_garden_trainer`.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpec'
        datasetConfig:
          type: object
          description: Customizable dataset settings, used in the `model_garden_trainer`.
          additionalProperties:
            type: string
      description: >-
        A wrapper class which contains the tunable parameters in an AutoML Image
        training job.
      type: object
    GoogleCloudAiplatformV1FeatureGroupBigQueryTimeSeries:
      type: object
      properties:
        timestampColumn:
          type: string
          description: >-
            Optional. Column hosting timestamp values for a time-series source.
            Will be used to determine the latest `feature_values` for each
            entity. Optional. If not provided, column named `feature_timestamp`
            of type `TIMESTAMP` will be used.
      id: GoogleCloudAiplatformV1FeatureGroupBigQueryTimeSeries
    GoogleCloudAiplatformV1CsvSource:
      type: object
      description: The storage details for CSV input content.
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
          description: Required. Google Cloud Storage location.
      id: GoogleCloudAiplatformV1CsvSource
    GoogleCloudAiplatformV1IndexStats:
      type: object
      properties:
        sparseVectorsCount:
          format: int64
          readOnly: true
          type: string
          description: Output only. The number of sparse vectors in the Index.
        vectorsCount:
          format: int64
          type: string
          readOnly: true
          description: Output only. The number of dense vectors in the Index.
        shardsCount:
          format: int32
          description: Output only. The number of shards in the Index.
          type: integer
          readOnly: true
      id: GoogleCloudAiplatformV1IndexStats
      description: Stats of the Index.
    GoogleCloudAiplatformV1EntityIdSelector:
      properties:
        csvSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CsvSource'
          description: Source of Csv
        entityIdField:
          description: >-
            Source column that holds entity IDs. If not provided, entity IDs are
            extracted from the column named entity_id.
          type: string
      id: GoogleCloudAiplatformV1EntityIdSelector
      type: object
      description: Selector for entityId. Getting ids from the given source.
    GoogleCloudAiplatformV1FindNeighborsRequest:
      description: The request message for MatchService.FindNeighbors.
      properties:
        queries:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1FindNeighborsRequestQuery
          type: array
          description: The list of queries.
        deployedIndexId:
          type: string
          description: >-
            The ID of the DeployedIndex that will serve the request. This
            request is sent to a specific IndexEndpoint, as per the
            IndexEndpoint.network. That IndexEndpoint also has
            IndexEndpoint.deployed_indexes, and each such index has a
            DeployedIndex.id field. The value of the field below must equal one
            of the DeployedIndex.id fields of the IndexEndpoint that is being
            called for this request.
        returnFullDatapoint:
          type: boolean
          description: >-
            If set to true, the full datapoints (including all vector values and
            restricts) of the nearest neighbors are returned. Note that
            returning full datapoint will significantly increase the latency and
            cost of the query.
      type: object
      id: GoogleCloudAiplatformV1FindNeighborsRequest
    GoogleCloudAiplatformV1CustomJob:
      properties:
        webAccessUris:
          readOnly: true
          additionalProperties:
            type: string
          description: >-
            Output only. URIs for accessing [interactive
            shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell)
            (one URI for each training node). Only available if
            job_spec.enable_web_access is `true`. The keys are names of each
            node in the training job; for example, `workerpool0-0` for the
            primary node, `workerpool1-0` for the first node in the second
            worker pool, and `workerpool1-1` for the second node in the second
            worker pool. The values are the URIs for each node's interactive
            shell.
          type: object
        endTime:
          type: string
          description: >-
            Output only. Time when the CustomJob entered any of the following
            states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`,
            `JOB_STATE_CANCELLED`.
          readOnly: true
          format: google-datetime
        state:
          readOnly: true
          type: string
          description: Output only. The detailed state of the job.
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          enumDescriptions:
            - The job state is unspecified.
            - >-
              The job has been just created or resumed and processing has not
              yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - >-
              The job is being cancelled. From this state the job may only go to
              either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
              `JOB_STATE_CANCELLED`.
            - The job has been cancelled.
            - The job has been stopped, and can be resumed.
            - The job has expired.
            - >-
              The job is being updated. Only jobs in the `RUNNING` state can be
              updated. After updating, the job goes back to the `RUNNING` state.
            - >-
              The job is partially succeeded, some results may be missing due to
              errors.
        startTime:
          type: string
          description: >-
            Output only. Time when the CustomJob for the first time entered the
            `JOB_STATE_RUNNING` state.
          format: google-datetime
          readOnly: true
        name:
          type: string
          readOnly: true
          description: Output only. Resource name of a CustomJob.
        jobSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
          description: Required. Job spec.
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. Time when the CustomJob was most recently updated.
          type: string
        satisfiesPzi:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        displayName:
          description: >-
            Required. The display name of the CustomJob. The name can be up to
            128 characters long and can consist of any UTF-8 characters.
          type: string
        satisfiesPzs:
          readOnly: true
          description: Output only. Reserved for future use.
          type: boolean
        labels:
          type: object
          description: >-
            The labels with user-defined metadata to organize CustomJobs. Label
            keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. See
            https://goo.gl/xmQnxf for more information and examples of labels.
          additionalProperties:
            type: string
        error:
          description: >-
            Output only. Only populated when job's state is `JOB_STATE_FAILED`
            or `JOB_STATE_CANCELLED`.
          $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Customer-managed encryption key options for a CustomJob. If this is
            set, then all resources created by the CustomJob will be encrypted
            with the provided encryption key.
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Time when the CustomJob was created.
      id: GoogleCloudAiplatformV1CustomJob
      description: >-
        Represents a job that runs custom workloads such as a Docker container
        or a Python package. A CustomJob can have multiple worker pools and each
        worker pool can have its own machine and input spec. A CustomJob will be
        cleaned up once the job enters terminal state (failed or succeeded).
      type: object
    GoogleCloudAiplatformV1ListEndpointsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token to retrieve the next page of results. Pass to
            ListEndpointsRequest.page_token to obtain that page.
        endpoints:
          description: List of Endpoints in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Endpoint'
          type: array
      id: GoogleCloudAiplatformV1ListEndpointsResponse
      type: object
      description: Response message for EndpointService.ListEndpoints.
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation:
      properties:
        annotationSpecId:
          type: string
          description: >-
            The resource Id of the AnnotationSpec that this Annotation pertains
            to.
        displayName:
          type: string
          description: >-
            The display name of the AnnotationSpec that this Annotation pertains
            to.
        vertexes:
          description: >-
            The vertexes are connected one by one and the last vertex is
            connected to the first one to represent a polygon.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaVertex'
          type: array
      id: >-
        GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation
      description: Represents a polygon in image.
      type: object
    GoogleCloudAiplatformV1FeatureOnlineStoreOptimized:
      description: Optimized storage type
      properties: {}
      type: object
      id: GoogleCloudAiplatformV1FeatureOnlineStoreOptimized
    GoogleCloudAiplatformV1SchemaPredictParamsImageClassificationPredictionParams:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaPredictParamsImageClassificationPredictionParams
      description: Prediction model parameters for Image Classification.
      properties:
        confidenceThreshold:
          type: number
          format: float
          description: >-
            The Model only returns predictions with at least this confidence
            score. Default value is 0.0
        maxPredictions:
          description: >-
            The Model only returns up to that many top, by confidence score,
            predictions per instance. If this number is very high, the Model may
            return fewer predictions. Default value is 10.
          type: integer
          format: int32
    GoogleCloudAiplatformV1CustomJobSpec:
      type: object
      properties:
        workerPoolSpecs:
          description: >-
            Required. The spec of the worker pools including machine type and
            Docker image. All worker pools except the first one are optional and
            can be skipped by providing an empty value.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1WorkerPoolSpec'
        models:
          description: >-
            Optional. The name of the Model resources for which to generate a
            mapping to artifact URIs. Applicable only to some of the
            Google-provided custom jobs. Format:
            `projects/{project}/locations/{location}/models/{model}` In order to
            retrieve a specific version of the model, also provide the version
            ID or version alias. Example:
            `projects/{project}/locations/{location}/models/{model}@2` or
            `projects/{project}/locations/{location}/models/{model}@golden` If
            no version ID or alias is specified, the "default" version will be
            returned. The "default" version alias is created for the first
            version of the model, and can be moved to other versions later on.
            There will be exactly one default version.
          items:
            type: string
          type: array
        tensorboard:
          type: string
          description: >-
            Optional. The name of a Vertex AI Tensorboard resource to which this
            CustomJob will upload Tensorboard logs. Format:
            `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
        reservedIpRanges:
          items:
            type: string
          type: array
          description: >-
            Optional. A list of names for the reserved ip ranges under the VPC
            network that can be used for this job. If set, we will deploy the
            job within the provided ip ranges. Otherwise, the job will be
            deployed to any ip ranges under the provided VPC network. Example:
            ['vertex-ai-ip-range'].
        enableWebAccess:
          description: >-
            Optional. Whether you want Vertex AI to enable [interactive shell
            access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell)
            to training containers. If set to `true`, you can access interactive
            shells at the URIs given by CustomJob.web_access_uris or
            Trial.web_access_uris (within HyperparameterTuningJob.trials).
          type: boolean
        scheduling:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Scheduling'
          description: Scheduling options for a CustomJob.
        experimentRun:
          description: >-
            Optional. The Experiment Run associated with this job. Format:
            `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`
          type: string
        baseOutputDirectory:
          description: >-
            The Cloud Storage location to store the output of this CustomJob or
            HyperparameterTuningJob. For HyperparameterTuningJob, the
            baseOutputDirectory of each child CustomJob backing a Trial is set
            to a subdirectory of name id under its parent
            HyperparameterTuningJob's baseOutputDirectory. The following Vertex
            AI environment variables will be passed to containers or python
            modules when this field is set: For CustomJob: * AIP_MODEL_DIR =
            `/model/` * AIP_CHECKPOINT_DIR = `/checkpoints/` *
            AIP_TENSORBOARD_LOG_DIR = `/logs/` For CustomJob backing a Trial of
            HyperparameterTuningJob: * AIP_MODEL_DIR = `//model/` *
            AIP_CHECKPOINT_DIR = `//checkpoints/` * AIP_TENSORBOARD_LOG_DIR =
            `//logs/`
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
        enableDashboardAccess:
          description: >-
            Optional. Whether you want Vertex AI to enable access to the
            customized dashboard in training chief container. If set to `true`,
            you can access the dashboard at the URIs given by
            CustomJob.web_access_uris or Trial.web_access_uris (within
            HyperparameterTuningJob.trials).
          type: boolean
        persistentResourceId:
          description: >-
            Optional. The ID of the PersistentResource in the same Project and
            Location which to run If this is specified, the job will be run on
            existing machines held by the PersistentResource instead of
            on-demand short-live machines. The network and CMEK configs on the
            job should be consistent with those on the PersistentResource,
            otherwise, the job will be rejected.
          type: string
        network:
          description: >-
            Optional. The full name of the Compute Engine
            [network](/compute/docs/networks-and-firewalls#networks) to which
            the Job should be peered. For example,
            `projects/12345/global/networks/myVPC`.
            [Format](/compute/docs/reference/rest/v1/networks/insert) is of the
            form `projects/{project}/global/networks/{network}`. Where {project}
            is a project number, as in `12345`, and {network} is a network name.
            To specify this field, you must have already [configured VPC Network
            Peering for Vertex
            AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If
            this field is left unspecified, the job is not peered with any
            network.
          type: string
        protectedArtifactLocationId:
          type: string
          description: >-
            The ID of the location to store protected artifacts. e.g.
            us-central1. Populate only when the location is different than
            CustomJob location. List of supported locations:
            https://cloud.google.com/vertex-ai/docs/general/locations
        serviceAccount:
          description: >-
            Specifies the service account for workload run-as account. Users
            submitting jobs must have act-as permission on this run-as account.
            If unspecified, the [Vertex AI Custom Code Service
            Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents)
            for the CustomJob's project is used.
          type: string
        experiment:
          type: string
          description: >-
            Optional. The Experiment associated with this job. Format:
            `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`
      description: Represents the spec of a CustomJob.
      id: GoogleCloudAiplatformV1CustomJobSpec
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity:
      properties:
        unit:
          description: >-
            The time granularity unit of this time period. The supported units
            are: * "minute" * "hour" * "day" * "week" * "month" * "year"
          type: string
        quantity:
          format: int64
          description: >-
            The number of granularity_units between data points in the training
            data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30.
            For all other values of `granularity_unit`, must be 1.
          type: string
      description: A duration of time expressed in time granularity units.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity
      type: object
    GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity:
      id: GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity
      properties:
        entityIdSelector:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityIdSelector'
          description: >-
            Required. Selectors choosing feature values of which entity id to be
            deleted from the EntityType.
      description: >-
        Message to select entity. If an entity id is selected, all the feature
        values corresponding to the entity id will be deleted, including the
        entityId.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata
      properties:
        trainCostMilliNodeHours:
          format: int64
          type: string
          description: >-
            Output only. The actual training cost of the model, expressed in
            milli node hours, i.e. 1,000 value in this field means 1 node hour.
            Guaranteed to not exceed the train budget.
        evaluatedDataItemsBigqueryUri:
          description: BigQuery destination uri for exported evaluated examples.
          type: string
      type: object
      description: Model metadata specific to Seq2Seq Plus Forecasting.
    GoogleCloudAiplatformV1ListSpecialistPoolsResponse:
      properties:
        specialistPools:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SpecialistPool'
          description: >-
            A list of SpecialistPools that matches the specified filter in the
            request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
      id: GoogleCloudAiplatformV1ListSpecialistPoolsResponse
      description: Response message for SpecialistPoolService.ListSpecialistPools.
    GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest:
      type: object
      properties: {}
      description: Request message for JobService.PauseModelDeploymentMonitoringJob.
      id: GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest
    GoogleCloudAiplatformV1DeployedIndexAuthConfig:
      description: Used to set up the auth on the DeployedIndex's private endpoint.
      id: GoogleCloudAiplatformV1DeployedIndexAuthConfig
      properties:
        authProvider:
          description: Defines the authentication provider that the DeployedIndex uses.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider
      type: object
    GoogleCloudAiplatformV1ListMetadataStoresResponse:
      description: Response message for MetadataService.ListMetadataStores.
      type: object
      id: GoogleCloudAiplatformV1ListMetadataStoresResponse
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as ListMetadataStoresRequest.page_token
            to retrieve the next page. If this field is not populated, there are
            no subsequent pages.
          type: string
        metadataStores:
          type: array
          description: The MetadataStores found for the Location.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataStore'
    GoogleCloudAiplatformV1TimestampSplit:
      properties:
        key:
          description: >-
            Required. The key is a name of one of the Dataset's data columns.
            The values of the key (the values in the column) must be in RFC 3339
            `date-time` format, where `time-offset` = `"Z"` (e.g.
            1985-04-12T23:20:50.52Z). If for a piece of data the key is not
            present or has an invalid value, that piece is ignored by the
            pipeline.
          type: string
        testFraction:
          description: >-
            The fraction of the input data that is to be used to evaluate the
            Model.
          type: number
          format: double
        validationFraction:
          description: >-
            The fraction of the input data that is to be used to validate the
            Model.
          type: number
          format: double
        trainingFraction:
          type: number
          format: double
          description: >-
            The fraction of the input data that is to be used to train the
            Model.
      type: object
      id: GoogleCloudAiplatformV1TimestampSplit
      description: >-
        Assigns input data to training, validation, and test sets based on a
        provided timestamps. The youngest data pieces are assigned to training
        set, next to validation set, and the oldest to the test set. Supported
        only for tabular Datasets.
    GoogleCloudAiplatformV1NetworkSpec:
      id: GoogleCloudAiplatformV1NetworkSpec
      type: object
      description: Network spec.
      properties:
        network:
          description: >-
            The full name of the Google Compute Engine
            [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks)
          type: string
        enableInternetAccess:
          type: boolean
          description: Whether to enable public internet access. Default false.
        subnetwork:
          description: >-
            The name of the subnet that this instance is in. Format:
            `projects/{project_id_or_number}/regions/{region}/subnetworks/{subnetwork_id}`
          type: string
    GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo:
      description: >-
        Further describes the output of the ExportModel. Supplements
        ExportModelRequest.OutputConfig.
      type: object
      properties:
        imageOutputUri:
          readOnly: true
          type: string
          description: >-
            Output only. If the Model image is being exported to Google
            Container Registry or Artifact Registry this is the full path of the
            image created.
        artifactOutputUri:
          readOnly: true
          type: string
          description: >-
            Output only. If the Model artifact is being exported to Google Cloud
            Storage this is the full path of the directory created, into which
            the Model files are being written to.
      id: GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo
    GoogleCloudAiplatformV1MutateDeployedModelOperationMetadata:
      id: GoogleCloudAiplatformV1MutateDeployedModelOperationMetadata
      type: object
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      description: Runtime operation information for EndpointService.MutateDeployedModel.
    GoogleCloudAiplatformV1CountTokensRequest:
      id: GoogleCloudAiplatformV1CountTokensRequest
      properties:
        instances:
          type: array
          description: >-
            Optional. The instances that are the input to token counting call.
            Schema is identical to the prediction schema of the underlying
            model.
          items:
            type: any
        generationConfig:
          description: >-
            Optional. Generation config that the model will use to generate the
            response.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenerationConfig'
        tools:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tool'
          description: >-
            Optional. A list of `Tools` the model may use to generate the next
            response. A `Tool` is a piece of code that enables the system to
            interact with external systems to perform an action, or set of
            actions, outside of knowledge and scope of the model.
          type: array
        systemInstruction:
          description: >-
            Optional. The user provided system instructions for the model. Note:
            only text should be used in parts and content in each part will be
            in a separate paragraph.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Content'
        contents:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Content'
          description: Optional. Input content.
        model:
          type: string
          description: >-
            Optional. The name of the publisher model requested to serve the
            prediction. Format:
            `projects/{project}/locations/{location}/publishers/*/models/*`
      type: object
      description: Request message for PredictionService.CountTokens.
    GoogleCloudAiplatformV1FeatureSelector:
      description: Selector for Features of an EntityType.
      type: object
      id: GoogleCloudAiplatformV1FeatureSelector
      properties:
        idMatcher:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IdMatcher'
          description: Required. Matches Features based on ID.
    GoogleCloudAiplatformV1BatchDedicatedResources:
      description: >-
        A description of resources that are used for performing batch
        operations, are dedicated to a Model, and need manual configuration.
      properties:
        machineSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MachineSpec'
          description: Required. Immutable. The specification of a single machine.
        maxReplicaCount:
          format: int32
          type: integer
          description: >-
            Immutable. The maximum number of machine replicas the batch
            operation may be scaled to. The default value is 10.
        startingReplicaCount:
          description: >-
            Immutable. The number of machine replicas used at the start of the
            batch operation. If not set, Vertex AI decides starting number, not
            greater than max_replica_count
          type: integer
          format: int32
      id: GoogleCloudAiplatformV1BatchDedicatedResources
      type: object
    GoogleCloudAiplatformV1SearchNearestEntitiesRequest:
      description: The request message for FeatureOnlineStoreService.SearchNearestEntities.
      properties:
        query:
          description: Required. The query.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NearestNeighborQuery'
        returnFullEntity:
          type: boolean
          description: >-
            Optional. If set to true, the full entities (including all vector
            values and metadata) of the nearest neighbors are returned;
            otherwise only entity id of the nearest neighbors will be returned.
            Note that returning full entities will significantly increase the
            latency and cost of the query.
      id: GoogleCloudAiplatformV1SearchNearestEntitiesRequest
      type: object
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig:
      properties:
        explanationBaseline:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline
          description: >-
            Predictions generated by the BatchPredictionJob using baseline
            dataset.
        enableFeatureAttributes:
          description: >-
            If want to analyze the Vertex Explainable AI feature attribute
            scores or not. If set to true, Vertex AI will log the feature
            attributions from explain response and do the skew/drift detection
            for them.
          type: boolean
      type: object
      description: >-
        The config for integrating with Vertex Explainable AI. Only applicable
        if the Model has explanation_spec populated.
      id: GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig
    GoogleCloudAiplatformV1EntityType:
      type: object
      id: GoogleCloudAiplatformV1EntityType
      description: >-
        An entity type is a type of object in a system that needs to be modeled
        and have stored information about. For example, driver is an entity
        type, and driver0 is an instance of an entity type driver.
      properties:
        satisfiesPzi:
          type: boolean
          readOnly: true
          description: Output only. Reserved for future use.
        monitoringConfig:
          description: >-
            Optional. The default monitoring configuration for all Features with
            value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under
            this EntityType. If this is populated with
            [FeaturestoreMonitoringConfig.monitoring_interval] specified,
            snapshot analysis monitoring is enabled. Otherwise, snapshot
            analysis monitoring is disabled.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfig
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            Optional. The labels with user-defined metadata to organize your
            EntityTypes. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. See https://goo.gl/xmQnxf for more information on and
            examples of labels. No more than 64 user labels can be associated
            with one EntityType (System labels are excluded)." System reserved
            label keys are prefixed with "aiplatform.googleapis.com/" and are
            immutable.
        description:
          description: Optional. Description of the EntityType.
          type: string
        offlineStorageTtlDays:
          description: >-
            Optional. Config for data retention policy in offline storage. TTL
            in days for feature values that will be stored in offline storage.
            The Feature Store offline storage periodically removes obsolete
            feature values older than `offline_storage_ttl_days` since the
            feature generation time. If unset (or explicitly set to 0), default
            to 4000 days TTL.
          type: integer
          format: int32
        createTime:
          format: google-datetime
          description: Output only. Timestamp when this EntityType was created.
          type: string
          readOnly: true
        etag:
          type: string
          description: >-
            Optional. Used to perform a consistent read-modify-write updates. If
            not set, a blind "overwrite" update happens.
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        updateTime:
          description: >-
            Output only. Timestamp when this EntityType was most recently
            updated.
          type: string
          readOnly: true
          format: google-datetime
        name:
          description: >-
            Immutable. Name of the EntityType. Format:
            `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
            The last part entity_type is assigned by the client. The entity_type
            can be up to 64 characters long and can consist only of ASCII Latin
            letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting
            with a letter. The value will be unique given a featurestore.
          type: string
    GoogleCloudAiplatformV1ListIndexEndpointsResponse:
      description: Response message for IndexEndpointService.ListIndexEndpoints.
      properties:
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass to
            ListIndexEndpointsRequest.page_token to obtain that page.
          type: string
        indexEndpoints:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint'
          type: array
          description: List of IndexEndpoints in the requested page.
      type: object
      id: GoogleCloudAiplatformV1ListIndexEndpointsResponse
    GoogleCloudAiplatformV1DeployModelResponse:
      type: object
      properties:
        deployedModel:
          description: The DeployedModel that had been deployed in the Endpoint.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
      description: Response message for EndpointService.DeployModel.
      id: GoogleCloudAiplatformV1DeployModelResponse
    GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode:
      id: GoogleCloudAiplatformV1GenerationConfigRoutingConfigAutoRoutingMode
      type: object
      description: >-
        When automated routing is specified, the routing will be determined by
        the pretrained routing model and customer provided model routing
        preference.
      properties:
        modelRoutingPreference:
          type: string
          enumDescriptions:
            - Unspecified model routing preference.
            - Prefer higher quality over low cost.
            - Balanced model routing preference.
            - Prefer lower cost over higher quality.
          description: The model routing preference.
          enum:
            - UNKNOWN
            - PRIORITIZE_QUALITY
            - BALANCED
            - PRIORITIZE_COST
    GoogleCloudAiplatformV1PipelineTaskExecutorDetail:
      type: object
      properties:
        containerDetail:
          readOnly: true
          description: Output only. The detailed info for a container executor.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail
        customJobDetail:
          readOnly: true
          description: Output only. The detailed info for a custom job executor.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail
      id: GoogleCloudAiplatformV1PipelineTaskExecutorDetail
      description: The runtime detail of a pipeline executor.
    GoogleCloudAiplatformV1CreateDatasetOperationMetadata:
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
      description: Runtime operation information for DatasetService.CreateDataset.
      type: object
      id: GoogleCloudAiplatformV1CreateDatasetOperationMetadata
    GoogleCloudAiplatformV1TensorboardExperiment:
      description: >-
        A TensorboardExperiment is a group of TensorboardRuns, that are
        typically the results of a training job run, in a Tensorboard.
      id: GoogleCloudAiplatformV1TensorboardExperiment
      properties:
        name:
          type: string
          description: >-
            Output only. Name of the TensorboardExperiment. Format:
            `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
          readOnly: true
        etag:
          description: >-
            Used to perform consistent read-modify-write updates. If not set, a
            blind "overwrite" update happens.
          type: string
        labels:
          description: >-
            The labels with user-defined metadata to organize your
            TensorboardExperiment. Label keys and values cannot be longer than
            64 characters (Unicode codepoints), can only contain lowercase
            letters, numeric characters, underscores and dashes. International
            characters are allowed. No more than 64 user labels can be
            associated with one Dataset (System labels are excluded). See
            https://goo.gl/xmQnxf for more information and examples of labels.
            System reserved label keys are prefixed with
            `aiplatform.googleapis.com/` and are immutable. The following system
            labels exist for each Dataset: *
            `aiplatform.googleapis.com/dataset_metadata_schema`: output only.
            Its value is the metadata_schema's title.
          additionalProperties:
            type: string
          type: object
        updateTime:
          description: >-
            Output only. Timestamp when this TensorboardExperiment was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Description of this TensorboardExperiment.
          type: string
        displayName:
          type: string
          description: User provided name of this TensorboardExperiment.
        source:
          type: string
          description: >-
            Immutable. Source of the TensorboardExperiment. Example: a custom
            training job.
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Timestamp when this TensorboardExperiment was created.
      type: object
    GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse:
      description: Response message for NotebookService.ListNotebookRuntimeTemplates.
      type: object
      id: GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse
      properties:
        notebookRuntimeTemplates:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1NotebookRuntimeTemplate
          description: List of NotebookRuntimeTemplates in the requested page.
          type: array
        nextPageToken:
          type: string
          description: >-
            A token to retrieve next page of results. Pass to
            ListNotebookRuntimeTemplatesRequest.page_token to obtain that page.
    GoogleCloudAiplatformV1CreateTensorboardRunRequest:
      type: object
      properties:
        parent:
          type: string
          description: >-
            Required. The resource name of the TensorboardExperiment to create
            the TensorboardRun in. Format:
            `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
        tensorboardRunId:
          type: string
          description: >-
            Required. The ID to use for the Tensorboard run, which becomes the
            final component of the Tensorboard run's resource name. This value
            should be 1-128 characters, and valid characters are `/a-z-/`.
        tensorboardRun:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
          description: Required. The TensorboardRun to create.
      description: Request message for TensorboardService.CreateTensorboardRun.
      id: GoogleCloudAiplatformV1CreateTensorboardRunRequest
    GoogleCloudAiplatformV1PointwiseMetricResult:
      type: object
      id: GoogleCloudAiplatformV1PointwiseMetricResult
      properties:
        score:
          format: float
          description: Output only. Pointwise metric score.
          type: number
          readOnly: true
        explanation:
          description: Output only. Explanation for pointwise metric score.
          type: string
          readOnly: true
      description: Spec for pointwise metric result.
    GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata:
      id: >-
        GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata
      type: object
      properties:
        runTime:
          type: string
          description: >-
            The time that most recent monitoring pipelines that is related to
            this run.
          format: google-datetime
        status:
          description: The status of the most recent monitoring pipeline.
          $ref: '#/components/schemas/GoogleRpcStatus'
      description: All metadata of most recent monitoring pipelines.
    GoogleCloudAiplatformV1BatchPredictionJobOutputInfo:
      type: object
      description: Further describes this job's output. Supplements output_config.
      id: GoogleCloudAiplatformV1BatchPredictionJobOutputInfo
      properties:
        gcsOutputDirectory:
          readOnly: true
          description: >-
            Output only. The full path of the Cloud Storage directory created,
            into which the prediction output is written.
          type: string
        bigqueryOutputDataset:
          readOnly: true
          description: >-
            Output only. The path of the BigQuery dataset created, in
            `bq://projectId.bqDatasetId` format, into which the prediction
            output is written.
          type: string
        bigqueryOutputTable:
          readOnly: true
          description: >-
            Output only. The name of the BigQuery table created, in
            `predictions_` format, into which the prediction output is written.
            Can be used by UI to generate the BigQuery output path, for example.
          type: string
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset:
      description: Training Dataset information.
      id: GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset
      properties:
        bigquerySource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQuerySource'
          description: >-
            The BigQuery table of the unmanaged Dataset used to train this
            Model.
        dataFormat:
          type: string
          description: >-
            Data format of the dataset, only applicable if the input is from
            Google Cloud Storage. The possible formats are: "tf-record" The
            source file is a TFRecord file. "csv" The source file is a CSV file.
            "jsonl" The source file is a JSONL file.
        targetField:
          description: >-
            The target field name the model is to predict. This field will be
            excluded when doing Predict and (or) Explain for the training data.
          type: string
        dataset:
          type: string
          description: The resource name of the Dataset used to train this Model.
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
          description: >-
            The Google Cloud Storage uri of the unmanaged Dataset used to train
            this Model.
        loggingSamplingStrategy:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SamplingStrategy'
          description: >-
            Strategy to sample data from Training Dataset. If not set, we
            process the whole dataset.
      type: object
    GoogleCloudAiplatformV1IndexDatapointNumericRestriction:
      properties:
        op:
          description: >-
            This MUST be specified for queries and must NOT be specified for
            datapoints.
          enumDescriptions:
            - Default value of the enum.
            - Datapoints are eligible iff their value is < the query's.
            - Datapoints are eligible iff their value is <= the query's.
            - Datapoints are eligible iff their value is == the query's.
            - Datapoints are eligible iff their value is >= the query's.
            - Datapoints are eligible iff their value is > the query's.
            - Datapoints are eligible iff their value is != the query's.
          type: string
          enum:
            - OPERATOR_UNSPECIFIED
            - LESS
            - LESS_EQUAL
            - EQUAL
            - GREATER_EQUAL
            - GREATER
            - NOT_EQUAL
        valueDouble:
          format: double
          description: Represents 64 bit float.
          type: number
        valueFloat:
          type: number
          format: float
          description: Represents 32 bit float.
        valueInt:
          type: string
          description: Represents 64 bit integer.
          format: int64
        namespace:
          type: string
          description: 'The namespace of this restriction. e.g.: cost.'
      type: object
      description: >-
        This field allows restricts to be based on numeric comparisons rather
        than categorical tokens.
      id: GoogleCloudAiplatformV1IndexDatapointNumericRestriction
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec:
      properties:
        maxParallelTrialCount:
          type: integer
          format: int32
          description: Required. The maximum number of trials to run in parallel.
        maxTrialCount:
          description: >-
            Required. The maximum number of Neural Architecture Search (NAS)
            trials to run.
          type: integer
          format: int32
        maxFailedTrialCount:
          type: integer
          format: int32
          description: >-
            The number of failed trials that need to be seen before failing the
            NasJob. If set to 0, Vertex AI decides how many trials must fail
            before the whole job fails.
        searchTrialJobSpec:
          description: >-
            Required. The spec of a search trial job. The same spec applies to
            all search trials.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
      id: GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec
      description: Represent spec for search trials.
      type: object
    GoogleCloudAiplatformV1DataItemView:
      properties:
        hasTruncatedAnnotations:
          type: boolean
          description: >-
            True if and only if the Annotations field has been truncated. It
            happens if more Annotations for this DataItem met the request's
            annotation_filter than are allowed to be returned by
            annotations_limit. Note that if Annotations field is not being
            returned due to field mask, then this field will not be set to true
            no matter how many Annotations are there.
        dataItem:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DataItem'
          description: The DataItem.
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Annotation'
          description: >-
            The Annotations on the DataItem. If too many Annotations should be
            returned for the DataItem, this field will be truncated per
            annotations_limit in request. If it was, then the
            has_truncated_annotations will be set to true.
      type: object
      id: GoogleCloudAiplatformV1DataItemView
      description: A container for a single DataItem and Annotations on it.
    GoogleCloudAiplatformV1SavedQuery:
      properties:
        name:
          type: string
          readOnly: true
          description: Output only. Resource name of the SavedQuery.
        createTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when this SavedQuery was created.
          readOnly: true
        annotationFilter:
          readOnly: true
          type: string
          description: Output only. Filters on the Annotations in the dataset.
        problemType:
          type: string
          description: >-
            Required. Problem type of the SavedQuery. Allowed values: *
            IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL
            * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX *
            TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL *
            TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION *
            VIDEO_OBJECT_TRACKING
        etag:
          type: string
          description: >-
            Used to perform a consistent read-modify-write update. If not set, a
            blind "overwrite" update happens.
        supportAutomlTraining:
          type: boolean
          description: >-
            Output only. If the Annotations belonging to the SavedQuery can be
            used for AutoML training.
          readOnly: true
        annotationSpecCount:
          format: int32
          readOnly: true
          type: integer
          description: >-
            Output only. Number of AnnotationSpecs in the context of the
            SavedQuery.
        metadata:
          description: Some additional information about the SavedQuery.
          type: any
        displayName:
          description: >-
            Required. The user-defined name of the SavedQuery. The name can be
            up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when SavedQuery was last updated.
      id: GoogleCloudAiplatformV1SavedQuery
      type: object
      description: >-
        A SavedQuery is a view of the dataset. It references a subset of
        annotations by problem type and filters.
    GoogleCloudAiplatformV1ResumeScheduleRequest:
      type: object
      description: Request message for ScheduleService.ResumeSchedule.
      properties:
        catchUp:
          type: boolean
          description: >-
            Optional. Whether to backfill missed runs when the schedule is
            resumed from PAUSED state. If set to true, all missed runs will be
            scheduled. New runs will be scheduled after the backfill is
            complete. This will also update Schedule.catch_up field. Default to
            false.
      id: GoogleCloudAiplatformV1ResumeScheduleRequest
    GoogleCloudAiplatformV1TrialContext:
      properties:
        parameters:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TrialParameter'
          description: >-
            If/when a Trial is generated or selected from this Context, its
            Parameters will match any parameters specified here. (I.e. if this
            context specifies parameter name:'a' int_value:3, then a resulting
            Trial will have int_value:3 for its parameter named 'a'.) Note that
            we first attempt to match existing REQUESTED Trials with contexts,
            and if there are no matches, we generate suggestions in the subspace
            defined by the parameters specified here. NOTE: a Context without
            any Parameters matches the entire feasible search space.
          type: array
        description:
          description: >-
            A human-readable field which can store a description of this
            context. This will become part of the resulting Trial's description
            field.
          type: string
      type: object
      id: GoogleCloudAiplatformV1TrialContext
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation:
      properties:
        columnName:
          type: string
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation
      description: >-
        Training pipeline will infer the proper transformation based on the
        statistic of dataset.
    GoogleCloudAiplatformV1UpdateFeatureGroupOperationMetadata:
      type: object
      description: Details of operations that perform update FeatureGroup.
      id: GoogleCloudAiplatformV1UpdateFeatureGroupOperationMetadata
      properties:
        genericMetadata:
          description: Operation metadata for FeatureGroup.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig:
      properties:
        desiredMinSafeTrialsFraction:
          description: >-
            Desired minimum fraction of safe trials (over total number of
            trials) that should be targeted by the algorithm at any time during
            the study (best effort). This should be between 0.0 and 1.0 and a
            value of 0.0 means that there is no minimum and an algorithm
            proceeds without targeting any specific fraction. A value of 1.0
            means that the algorithm attempts to only Suggest safe Trials.
          format: double
          type: number
        safetyThreshold:
          description: >-
            Safety threshold (boundary value between safe and unsafe). NOTE that
            if you leave SafetyMetricConfig unset, a default value of 0 will be
            used.
          type: number
          format: double
      description: >-
        Used in safe optimization to specify threshold levels and risk
        tolerance.
      type: object
      id: GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig
    GoogleCloudAiplatformV1ImportFeatureValuesRequest:
      properties:
        disableOnlineServing:
          type: boolean
          description: >-
            If set, data will not be imported for online serving. This is
            typically used for backfilling, where Feature generation timestamps
            are not in the timestamp range needed for online serving.
        featureTimeField:
          type: string
          description: >-
            Source column that holds the Feature timestamp for all Feature
            values in each entity.
        avroSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1AvroSource'
        featureSpecs:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec
          type: array
          description: >-
            Required. Specifications defining which Feature values to import
            from the entity. The request fails if no feature_specs are provided,
            and having multiple feature_specs for one Feature is not allowed.
        workerCount:
          type: integer
          format: int32
          description: >-
            Specifies the number of workers that are used to write data to the
            Featurestore. Consider the online serving capacity that you require
            to achieve the desired import throughput without interfering with
            online serving. The value must be positive, and less than or equal
            to 100. If not set, defaults to using 1 worker. The low count
            ensures minimal impact on online serving performance.
        disableIngestionAnalysis:
          type: boolean
          description: If true, API doesn't start ingestion analysis pipeline.
        csvSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CsvSource'
        bigquerySource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQuerySource'
        featureTime:
          format: google-datetime
          description: >-
            Single Feature timestamp for all entities being imported. The
            timestamp must not have higher than millisecond precision.
          type: string
        entityIdField:
          type: string
          description: >-
            Source column that holds entity IDs. If not provided, entity IDs are
            extracted from the column named entity_id.
      id: GoogleCloudAiplatformV1ImportFeatureValuesRequest
      description: Request message for FeaturestoreService.ImportFeatureValues.
      type: object
    GoogleCloudAiplatformV1BatchPredictionJobOutputConfig:
      description: >-
        Configures the output of BatchPredictionJob. See
        Model.supported_output_storage_formats for supported output formats, and
        how predictions are expressed via any of them.
      properties:
        predictionsFormat:
          description: >-
            Required. The format in which Vertex AI gives the predictions, must
            be one of the Model's supported_output_storage_formats.
          type: string
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: >-
            The Cloud Storage location of the directory where the output is to
            be written to. In the given directory a new directory is created.
            Its name is `prediction--`, where timestamp is in
            YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. Inside of it files
            `predictions_0001.`, `predictions_0002.`, ..., `predictions_N.` are
            created where `` depends on chosen predictions_format, and N may
            equal 0001 and depends on the total number of successfully predicted
            instances. If the Model has both instance and prediction schemata
            defined then each such file contains predictions as per the
            predictions_format. If prediction for any instance failed (partially
            or completely), then an additional `errors_0001.`,
            `errors_0002.`,..., `errors_N.` files are created (N depends on
            total number of failed predictions). These files contain the failed
            instances, as per their schema, followed by an additional `error`
            field which as value has google.rpc.Status containing only `code`
            and `message` fields.
        bigqueryDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination'
          description: >-
            The BigQuery project or dataset location where the output is to be
            written to. If project is provided, a new dataset is created with
            name `prediction__` where is made BigQuery-dataset-name compatible
            (for example, most special characters become underscores), and
            timestamp is in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601" format.
            In the dataset two tables will be created, `predictions`, and
            `errors`. If the Model has both instance and prediction schemata
            defined then the tables have columns as follows: The `predictions`
            table contains instances for which the prediction succeeded, it has
            columns as per a concatenation of the Model's instance and
            prediction schemata. The `errors` table contains rows for which the
            prediction has failed, it has instance columns, as per the instance
            schema, followed by a single "errors" column, which as values has
            google.rpc.Status represented as a STRUCT, and containing only
            `code` and `message`.
      type: object
      id: GoogleCloudAiplatformV1BatchPredictionJobOutputConfig
    GoogleCloudAiplatformV1PublisherModelCallToActionDeployVertex:
      description: Multiple setups to deploy the PublisherModel.
      properties:
        multiDeployVertex:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionDeploy
          description: Optional. One click deployment configurations.
          type: array
      type: object
      id: GoogleCloudAiplatformV1PublisherModelCallToActionDeployVertex
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs
      type: object
      properties:
        predictionType:
          description: >-
            The type of prediction the Model is to produce. "classification" -
            Predict one out of multiple target values is picked for each row.
            "regression" - Predict a value based on its relation to other
            values. This type is available only to columns that contain
            semantically numeric values, i.e. integers or floating point number,
            even if stored as e.g. strings.
          type: string
        targetColumn:
          description: The column name of the target column that the model is to predict.
          type: string
        additionalExperiments:
          description: Additional experiment flags for the Tables training pipeline.
          items:
            type: string
          type: array
        disableEarlyStopping:
          type: boolean
          description: >-
            Use the entire training budget. This disables the early stopping
            feature. By default, the early stopping feature is enabled, which
            means that AutoML Tables might stop training before the entire
            training budget has been used.
        optimizationObjectivePrecisionValue:
          description: >-
            Required when optimization_objective is
            "maximize-recall-at-precision". Must be between 0 and 1, inclusive.
          format: float
          type: number
        optimizationObjectiveRecallValue:
          format: float
          description: >-
            Required when optimization_objective is
            "maximize-precision-at-recall". Must be between 0 and 1, inclusive.
          type: number
        weightColumnName:
          type: string
          description: >-
            Column name that should be used as the weight column. Higher values
            in this column give more importance to the row during model
            training. The column must have numeric values between 0 and 10000
            inclusively; 0 means the row is ignored for training. If weight
            column field is not set, then all rows are assumed to have equal
            weight of 1.
        exportEvaluatedDataItemsConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig
          description: >-
            Configuration for exporting test set predictions to a BigQuery
            table. If this configuration is absent, then the export is not
            performed.
        optimizationObjective:
          type: string
          description: >-
            Objective function the model is optimizing towards. The training
            process creates a model that maximizes/minimizes the value of the
            objective function over the validation set. The supported
            optimization objectives depend on the prediction type. If the field
            is not set, a default objective function is used. classification
            (binary): "maximize-au-roc" (default) - Maximize the area under the
            receiver operating characteristic (ROC) curve. "minimize-log-loss" -
            Minimize log loss. "maximize-au-prc" - Maximize the area under the
            precision-recall curve. "maximize-precision-at-recall" - Maximize
            precision for a specified recall value.
            "maximize-recall-at-precision" - Maximize recall for a specified
            precision value. classification (multi-class): "minimize-log-loss"
            (default) - Minimize log loss. regression: "minimize-rmse" (default)
            - Minimize root-mean-squared error (RMSE). "minimize-mae" - Minimize
            mean-absolute error (MAE). "minimize-rmsle" - Minimize
            root-mean-squared log error (RMSLE).
        trainBudgetMilliNodeHours:
          format: int64
          type: string
          description: >-
            Required. The train budget of creating this model, expressed in
            milli node hours i.e. 1,000 value in this field means 1 node hour.
            The training cost of the model will not exceed this budget. The
            final cost will be attempted to be close to the budget, though may
            end up being (even) noticeably smaller - at the backend's
            discretion. This especially may happen when further model training
            ceases to provide any improvements. If the budget is set to a value
            known to be insufficient to train a model for the given dataset, the
            training won't be attempted and will error. The train budget must be
            between 1,000 and 72,000 milli node hours, inclusive.
        transformations:
          description: >-
            Each transformation will apply transform function to given input
            column. And the result will be used for training. When creating
            transformation for BigQuery Struct column, the column should be
            flattened using "." as the delimiter.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation
          type: array
    GoogleCloudAiplatformV1AddTrialMeasurementRequest:
      description: Request message for VizierService.AddTrialMeasurement.
      type: object
      id: GoogleCloudAiplatformV1AddTrialMeasurementRequest
      properties:
        measurement:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Measurement'
          description: Required. The measurement to be added to a Trial.
    GoogleCloudAiplatformV1FeatureViewIndexConfig:
      description: Configuration for vector indexing.
      properties:
        distanceMeasureType:
          enumDescriptions:
            - Should not be set.
            - Euclidean (L_2) Distance.
            - >-
              Cosine Distance. Defined as 1 - cosine similarity. We strongly
              suggest using DOT_PRODUCT_DISTANCE + UNIT_L2_NORM instead of
              COSINE distance. Our algorithms have been more optimized for
              DOT_PRODUCT distance which, when combined with UNIT_L2_NORM, is
              mathematically equivalent to COSINE distance and results in the
              same ranking.
            - Dot Product Distance. Defined as a negative of the dot product.
          enum:
            - DISTANCE_MEASURE_TYPE_UNSPECIFIED
            - SQUARED_L2_DISTANCE
            - COSINE_DISTANCE
            - DOT_PRODUCT_DISTANCE
          description: Optional. The distance measure used in nearest neighbor search.
          type: string
        bruteForceConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureViewIndexConfigBruteForceConfig
          description: >-
            Optional. Configuration options for using brute force search, which
            simply implements the standard linear search in the database for
            each query. It is primarily meant for benchmarking and to generate
            the ground truth for approximate search.
        filterColumns:
          items:
            type: string
          description: >-
            Optional. Columns of features that're used to filter vector search
            results.
          type: array
        embeddingDimension:
          format: int32
          description: Optional. The number of dimensions of the input embedding.
          type: integer
        crowdingColumn:
          description: >-
            Optional. Column of crowding. This column contains crowding
            attribute which is a constraint on a neighbor list produced by
            FeatureOnlineStoreService.SearchNearestEntities to diversify search
            results. If
            NearestNeighborQuery.per_crowding_attribute_neighbor_count is set to
            K in SearchNearestEntitiesRequest, it's guaranteed that no more than
            K entities of the same crowding attribute are returned in the
            response.
          type: string
        embeddingColumn:
          type: string
          description: >-
            Optional. Column of embedding. This column contains the source data
            to create index for vector search. embedding_column must be set when
            using vector search.
        treeAhConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureViewIndexConfigTreeAHConfig
          description: >-
            Optional. Configuration options for the tree-AH algorithm (Shallow
            tree + Asymmetric Hashing). Please refer to this paper for more
            details: https://arxiv.org/abs/1908.10396
      id: GoogleCloudAiplatformV1FeatureViewIndexConfig
      type: object
    CloudAiLargeModelsVisionVideo:
      properties:
        uri:
          type: string
          description: Path to another storage (typically Google Cloud Storage).
        video:
          format: byte
          type: string
          description: Raw bytes.
      id: CloudAiLargeModelsVisionVideo
      type: object
      description: Video
    GoogleCloudAiplatformV1AddContextChildrenResponse:
      properties: {}
      id: GoogleCloudAiplatformV1AddContextChildrenResponse
      description: Response message for MetadataService.AddContextChildren.
      type: object
    GoogleCloudAiplatformV1ListTrainingPipelinesResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token to retrieve the next page of results. Pass to
            ListTrainingPipelinesRequest.page_token to obtain that page.
        trainingPipelines:
          description: List of TrainingPipelines in the requested page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline'
      id: GoogleCloudAiplatformV1ListTrainingPipelinesResponse
      description: Response message for PipelineService.ListTrainingPipelines
    GoogleCloudAiplatformV1ListModelVersionsResponse:
      type: object
      properties:
        models:
          type: array
          description: >-
            List of Model versions in the requested page. In the returned Model
            name field, version ID instead of regvision tag will be included.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
        nextPageToken:
          type: string
          description: >-
            A token to retrieve the next page of results. Pass to
            ListModelVersionsRequest.page_token to obtain that page.
      id: GoogleCloudAiplatformV1ListModelVersionsResponse
      description: Response message for ModelService.ListModelVersions
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs:
      properties:
        sentimentMax:
          format: int32
          description: >-
            A sentiment is expressed as an integer ordinal, where higher value
            means a more positive sentiment. The range of sentiments that will
            be used is between 0 and sentimentMax (inclusive on both ends), and
            all the values in the range must be represented in the dataset
            before a model can be created. Only the Annotations with this
            sentimentMax will be used for training. sentimentMax value must be
            between 1 and 10 (inclusive).
          type: integer
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs
    GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset:
      properties:
        dataset:
          type: string
          description: >-
            Full resource name of data labeling Dataset. Format:
            `projects/{project}/datasets/{dataset}`.
        dataLabelingAnnotatedDatasets:
          type: array
          description: >-
            The migratable AnnotatedDataset in datalabeling.googleapis.com
            belongs to the data labeling Dataset.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset
        datasetDisplayName:
          type: string
          description: The Dataset's display name in datalabeling.googleapis.com.
      description: Represents one Dataset in datalabeling.googleapis.com.
      id: GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset
      type: object
    CloudAiLargeModelsVisionGenerateVideoResponse:
      description: Generate video response.
      type: object
      properties:
        raiMediaFilteredReasons:
          description: Returns rai failure reasons if any.
          items:
            type: string
          type: array
        generatedSamples:
          type: array
          items:
            $ref: '#/components/schemas/CloudAiLargeModelsVisionMedia'
          description: The generates samples.
        raiMediaFilteredCount:
          format: int32
          description: Returns if any videos were filtered due to RAI policies.
          type: integer
      id: CloudAiLargeModelsVisionGenerateVideoResponse
    GoogleCloudAiplatformV1FeatureViewBigQuerySource:
      id: GoogleCloudAiplatformV1FeatureViewBigQuerySource
      type: object
      properties:
        entityIdColumns:
          items:
            type: string
          description: Required. Columns to construct entity_id / row keys.
          type: array
        uri:
          type: string
          description: >-
            Required. The BigQuery view URI that will be materialized on each
            sync trigger based on FeatureView.SyncConfig.
    GoogleCloudAiplatformV1ListArtifactsResponse:
      id: GoogleCloudAiplatformV1ListArtifactsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as ListArtifactsRequest.page_token to
            retrieve the next page. If this field is not populated, there are no
            subsequent pages.
        artifacts:
          description: The Artifacts retrieved from the MetadataStore.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
          type: array
      description: Response message for MetadataService.ListArtifacts.
    GoogleCloudAiplatformV1GroundednessSpec:
      properties:
        version:
          description: Optional. Which version to use for evaluation.
          format: int32
          type: integer
      description: Spec for groundedness metric.
      id: GoogleCloudAiplatformV1GroundednessSpec
      type: object
    GoogleCloudAiplatformV1DirectPredictResponse:
      id: GoogleCloudAiplatformV1DirectPredictResponse
      properties:
        outputs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          type: array
          description: The prediction output.
        parameters:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          description: The parameters that govern the prediction.
      type: object
      description: Response message for PredictionService.DirectPredict.
    GoogleCloudAiplatformV1PublisherModelCallToActionDeploy:
      id: GoogleCloudAiplatformV1PublisherModelCallToActionDeploy
      type: object
      properties:
        containerSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelContainerSpec'
          description: >-
            Optional. The specification of the container that is to be used when
            deploying this Model in Vertex AI. Not present for Large Models.
        automaticResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1AutomaticResources'
          description: >-
            A description of resources that to large degree are decided by
            Vertex AI, and require only a modest additional configuration.
        title:
          description: Required. The title of the regional resource reference.
          type: string
        artifactUri:
          description: >-
            Optional. The path to the directory containing the Model artifact
            and any of its supporting files.
          type: string
        modelDisplayName:
          description: Optional. Default model display name.
          type: string
        largeModelReference:
          description: >-
            Optional. Large model reference. When this is set,
            model_artifact_spec is not needed.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1LargeModelReference'
        publicArtifactUri:
          type: string
          description: >-
            Optional. The signed URI for ephemeral Cloud Storage access to model
            artifact.
        sharedResources:
          description: >-
            The resource name of the shared DeploymentResourcePool to deploy on.
            Format:
            `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
          type: string
        dedicatedResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DedicatedResources'
          description: >-
            A description of resources that are dedicated to the DeployedModel,
            and that need a higher degree of manual configuration.
        deployMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionDeployDeployMetadata
          description: Optional. Metadata information about this deployment config.
        deployTaskName:
          description: >-
            Optional. The name of the deploy task (e.g., "text to image
            generation").
          type: string
      description: >-
        Model metadata that is needed for UploadModel or
        DeployModel/CreateEndpoint requests.
    GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest:
      properties: {}
      description: Request message for JobService.ResumeModelDeploymentMonitoringJob.
      type: object
      id: GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest
    GoogleCloudAiplatformV1NotebookRuntime:
      id: GoogleCloudAiplatformV1NotebookRuntime
      type: object
      properties:
        serviceAccount:
          readOnly: true
          description: >-
            Output only. The service account that the NotebookRuntime workload
            runs as.
          type: string
        healthState:
          type: string
          enumDescriptions:
            - Unspecified health state.
            - NotebookRuntime is in healthy state. Applies to ACTIVE state.
            - NotebookRuntime is in unhealthy state. Applies to ACTIVE state.
          readOnly: true
          enum:
            - HEALTH_STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
          description: Output only. The health state of the NotebookRuntime.
        idleShutdownConfig:
          description: >-
            Output only. The idle shutdown configuration of the notebook
            runtime.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NotebookIdleShutdownConfig
          readOnly: true
        displayName:
          type: string
          description: >-
            Required. The display name of the NotebookRuntime. The name can be
            up to 128 characters long and can consist of any UTF-8 characters.
        satisfiesPzi:
          readOnly: true
          description: Output only. Reserved for future use.
          type: boolean
        description:
          description: The description of the NotebookRuntime.
          type: string
        version:
          description: Output only. The VM os image version of NotebookRuntime.
          type: string
          readOnly: true
        isUpgradable:
          readOnly: true
          description: Output only. Whether NotebookRuntime is upgradable.
          type: boolean
        notebookRuntimeType:
          description: Output only. The type of the notebook runtime.
          readOnly: true
          enumDescriptions:
            - >-
              Unspecified notebook runtime type, NotebookRuntimeType will
              default to USER_DEFINED.
            - runtime or template with coustomized configurations from user.
            - runtime or template with system defined configurations.
          enum:
            - NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED
            - USER_DEFINED
            - ONE_CLICK
          type: string
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Output only. Customer-managed encryption key spec for the notebook
            runtime.
          readOnly: true
        notebookRuntimeTemplateRef:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NotebookRuntimeTemplateRef
          description: >-
            Output only. The pointer to NotebookRuntimeTemplate this
            NotebookRuntime is created from.
          readOnly: true
        expirationTime:
          readOnly: true
          type: string
          description: >-
            Output only. Timestamp when this NotebookRuntime will be expired: 1.
            System Predefined NotebookRuntime: 24 hours after creation. After
            expiration, system predifined runtime will be deleted. 2. User
            created NotebookRuntime: 6 months after last upgrade. After
            expiration, user created runtime will be stopped and allowed for
            upgrade.
          format: google-datetime
        updateTime:
          description: >-
            Output only. Timestamp when this NotebookRuntime was most recently
            updated.
          type: string
          format: google-datetime
          readOnly: true
        proxyUri:
          type: string
          description: Output only. The proxy endpoint used to access the NotebookRuntime.
          readOnly: true
        runtimeState:
          readOnly: true
          enumDescriptions:
            - Unspecified runtime state.
            - NotebookRuntime is in running state.
            - NotebookRuntime is in starting state.
            - NotebookRuntime is in stopping state.
            - NotebookRuntime is in stopped state.
            - >-
              NotebookRuntime is in upgrading state. It is in the middle of
              upgrading process.
            - NotebookRuntime was unable to start/stop properly.
            - NotebookRuntime is in invalid state. Cannot be recovered.
          enum:
            - RUNTIME_STATE_UNSPECIFIED
            - RUNNING
            - BEING_STARTED
            - BEING_STOPPED
            - STOPPED
            - BEING_UPGRADED
            - ERROR
            - INVALID
          description: Output only. The runtime (instance) state of the NotebookRuntime.
          type: string
        name:
          description: Output only. The resource name of the NotebookRuntime.
          type: string
          readOnly: true
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this NotebookRuntime was created.
        networkTags:
          description: >-
            Optional. The Compute Engine tags to add to runtime (see [Tagging
            instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
          type: array
          items:
            type: string
        labels:
          description: >-
            The labels with user-defined metadata to organize your
            NotebookRuntime. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. No more than 64 user labels can be associated with one
            NotebookRuntime (System labels are excluded). See
            https://goo.gl/xmQnxf for more information and examples of labels.
            System reserved label keys are prefixed with
            "aiplatform.googleapis.com/" and are immutable. Following system
            labels exist for NotebookRuntime: *
            "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output
            only, its value is the Compute Engine instance id. *
            "aiplatform.googleapis.com/colab_enterprise_entry_service": its
            value is either "bigquery" or "vertex"; if absent, it should be
            "vertex". This is to describe the entry service, either BigQuery or
            Vertex.
          additionalProperties:
            type: string
          type: object
        satisfiesPzs:
          readOnly: true
          type: boolean
          description: Output only. Reserved for future use.
        runtimeUser:
          type: string
          description: Required. The user email of the NotebookRuntime.
      description: >-
        A runtime is a virtual machine allocated to a particular user for a
        particular Notebook file on temporary basis with lifetime limited to 24
        hours.
    GoogleCloudAiplatformV1ExamplesExampleGcsSource:
      id: GoogleCloudAiplatformV1ExamplesExampleGcsSource
      description: The Cloud Storage input instances.
      type: object
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
          description: The Cloud Storage location for the input instances.
        dataFormat:
          type: string
          enumDescriptions:
            - Format unspecified, used when unset.
            - Examples are stored in JSONL files.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - JSONL
          description: >-
            The format in which instances are given, if not specified, assume
            it's JSONL format. Currently only JSONL format is supported.
    GoogleCloudAiplatformV1SearchEntryPoint:
      id: GoogleCloudAiplatformV1SearchEntryPoint
      description: Google search entry point.
      properties:
        renderedContent:
          type: string
          description: >-
            Optional. Web content snippet that can be embedded in a web page or
            an app webview.
        sdkBlob:
          format: byte
          type: string
          description: Optional. Base64 encoded JSON representing array of tuple.
      type: object
    GoogleCloudAiplatformV1SafetyInput:
      description: Input for safety metric.
      properties:
        metricSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SafetySpec'
          description: Required. Spec for safety metric.
        instance:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SafetyInstance'
          description: Required. Safety instance.
      id: GoogleCloudAiplatformV1SafetyInput
      type: object
    GoogleCloudAiplatformV1ErrorAnalysisAnnotation:
      id: GoogleCloudAiplatformV1ErrorAnalysisAnnotation
      properties:
        attributedItems:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem
          description: >-
            Attributed items for a given annotation, typically representing
            neighbors from the training sets constrained by the query type.
          type: array
        outlierThreshold:
          type: number
          description: >-
            The threshold used to determine if this annotation is an outlier or
            not.
          format: double
        queryType:
          enumDescriptions:
            - Unspecified query type for model error analysis.
            - Query similar samples across all classes in the dataset.
            - Query similar samples from the same class of the input sample.
            - Query dissimilar samples from the same class of the input sample.
          enum:
            - QUERY_TYPE_UNSPECIFIED
            - ALL_SIMILAR
            - SAME_CLASS_SIMILAR
            - SAME_CLASS_DISSIMILAR
          type: string
          description: The query type used for finding the attributed items.
        outlierScore:
          description: >-
            The outlier score of this annotated item. Usually defined as the min
            of all distances from attributed items.
          type: number
          format: double
      type: object
      description: Model error analysis for each annotation.
    GoogleCloudAiplatformV1StreamingPredictRequest:
      description: >-
        Request message for PredictionService.StreamingPredict. The first
        message must contain endpoint field and optionally input. The subsequent
        messages must contain input.
      id: GoogleCloudAiplatformV1StreamingPredictRequest
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          description: The prediction input.
        parameters:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          description: The parameters that govern the prediction.
      type: object
    GoogleCloudAiplatformV1ExportModelResponse:
      type: object
      properties: {}
      description: Response message of ModelService.ExportModel operation.
      id: GoogleCloudAiplatformV1ExportModelResponse
    GoogleCloudAiplatformV1CsvDestination:
      type: object
      description: The storage details for CSV output content.
      id: GoogleCloudAiplatformV1CsvDestination
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: Required. Google Cloud Storage location.
    GoogleCloudAiplatformV1TuningDataStats:
      id: GoogleCloudAiplatformV1TuningDataStats
      properties:
        supervisedTuningDataStats:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SupervisedTuningDataStats
          description: The SFT Tuning data stats.
      type: object
      description: The tuning data statistic values for TuningJob.
    CloudAiLargeModelsVisionRaiInfoDetectedLabelsBoundingBox:
      type: object
      id: CloudAiLargeModelsVisionRaiInfoDetectedLabelsBoundingBox
      description: >-
        An integer bounding box of original pixels of the image for the detected
        labels.
      properties:
        y1:
          format: int32
          description: The Y coordinate of the top-left corner, in pixels.
          type: integer
        x2:
          type: integer
          description: The X coordinate of the bottom-right corner, in pixels.
          format: int32
        y2:
          format: int32
          type: integer
          description: The Y coordinate of the bottom-right corner, in pixels.
        x1:
          format: int32
          description: The X coordinate of the top-left corner, in pixels.
          type: integer
    GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig:
      id: GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig
      type: object
      properties:
        samplingRate:
          description: >-
            Percentage of requests to be logged, expressed as a fraction in
            range(0,1].
          type: number
          format: double
        enabled:
          type: boolean
          description: If logging is enabled or not.
        bigqueryDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination'
          description: >-
            BigQuery table for logging. If only given a project, a new dataset
            will be created with name `logging__` where will be made
            BigQuery-dataset-name compatible (e.g. most special characters will
            become underscores). If no table name is given, a new table will be
            created with name `request_response_logging`
      description: Configuration for logging request-response to a BigQuery table.
    GoogleCloudAiplatformV1RebootPersistentResourceOperationMetadata:
      id: GoogleCloudAiplatformV1RebootPersistentResourceOperationMetadata
      description: Details of operations that perform reboot PersistentResource.
      properties:
        progressMessage:
          description: Progress Message for Reboot LRO
          type: string
        genericMetadata:
          description: Operation metadata for PersistentResource.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      type: object
    GoogleCloudAiplatformV1ToolParameterKVMatchInstance:
      description: Spec for tool parameter key value match instance.
      type: object
      id: GoogleCloudAiplatformV1ToolParameterKVMatchInstance
      properties:
        reference:
          description: Required. Ground truth used to compare against the prediction.
          type: string
        prediction:
          type: string
          description: Required. Output of the evaluated model.
    GoogleCloudAiplatformV1SchemaAnnotationSpecColor:
      type: object
      description: >-
        An entry of mapping between color and AnnotationSpec. The mapping is
        used in segmentation mask.
      id: GoogleCloudAiplatformV1SchemaAnnotationSpecColor
      properties:
        displayName:
          type: string
          description: >-
            The display name of the AnnotationSpec represented by the color in
            the segmentation mask.
        id:
          description: >-
            The ID of the AnnotationSpec represented by the color in the
            segmentation mask.
          type: string
        color:
          $ref: '#/components/schemas/GoogleTypeColor'
          description: The color of the AnnotationSpec in a segmentation mask.
    GoogleCloudAiplatformV1UserActionReference:
      type: object
      properties:
        dataLabelingJob:
          type: string
          description: >-
            For API calls that start a LabelingJob. Resource name of the
            LabelingJob. Format:
            `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
        method:
          description: >-
            The method name of the API RPC call. For example,
            "/google.cloud.aiplatform.{apiVersion}.DatasetService.CreateDataset"
          type: string
        operation:
          description: >-
            For API calls that return a long running operation. Resource name of
            the long running operation. Format:
            `projects/{project}/locations/{location}/operations/{operation}`
          type: string
      description: >-
        References an API call. It contains more information about long running
        operation and Jobs that are triggered by the API call.
      id: GoogleCloudAiplatformV1UserActionReference
    GoogleCloudAiplatformV1TunedModel:
      description: >-
        The Model Registry Model and Online Prediction Endpoint assiociated with
        this TuningJob.
      type: object
      properties:
        model:
          readOnly: true
          type: string
          description: >-
            Output only. The resource name of the TunedModel. Format:
            `projects/{project}/locations/{location}/models/{model}`.
        endpoint:
          type: string
          description: >-
            Output only. A resource name of an Endpoint. Format:
            `projects/{project}/locations/{location}/endpoints/{endpoint}`.
          readOnly: true
      id: GoogleCloudAiplatformV1TunedModel
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation:
      description: >-
        Treats the column as categorical array and performs following
        transformation functions. * For each element in the array, convert the
        category name to a dictionary lookup index and generate an embedding for
        each index. Combine the embedding of all elements into a single
        embedding using the mean. * Empty arrays treated as an embedding of
        zeroes.
      properties:
        columnName:
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceVideoObjectTrackingPredictionInstance:
      description: Prediction input format for Video Object Tracking.
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaPredictInstanceVideoObjectTrackingPredictionInstance
      properties:
        content:
          description: >-
            The Google Cloud Storage location of the video on which to perform
            the prediction.
          type: string
        timeSegmentEnd:
          description: >-
            The end, exclusive, of the video's time segment on which to perform
            the prediction. Expressed as a number of seconds as measured from
            the start of the video, with "s" appended at the end. Fractions are
            allowed, up to a microsecond precision, and "inf" or "Infinity" is
            allowed, which means the end of the video.
          type: string
        mimeType:
          description: >-
            The MIME type of the content of the video. Only the following are
            supported: video/mp4 video/avi video/quicktime
          type: string
        timeSegmentStart:
          description: >-
            The beginning, inclusive, of the video's time segment on which to
            perform the prediction. Expressed as a number of seconds as measured
            from the start of the video, with "s" appended at the end. Fractions
            are allowed, up to a microsecond precision.
          type: string
    GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature:
      id: >-
        GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature
      description: >-
        Message to select time range and feature. Values of the selected feature
        generated within an inclusive time range will be deleted. Using this
        option permanently deletes the feature values from the specified feature
        IDs within the specified time range. This might include data from the
        online storage. If you want to retain any deleted historical data in the
        online storage, you must re-ingest it.
      type: object
      properties:
        skipOnlineStorageDelete:
          description: >-
            If set, data will not be deleted from online storage. When time
            range is older than the data in online storage, setting this to be
            true will make the deletion have no impact on online serving.
          type: boolean
        timeRange:
          description: >-
            Required. Select feature generated within a half-inclusive time
            range. The time range is lower inclusive and upper exclusive.
          $ref: '#/components/schemas/GoogleTypeInterval'
        featureSelector:
          description: >-
            Required. Selectors choosing which feature values to be deleted from
            the EntityType.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureSelector'
    GoogleCloudAiplatformV1SchemaImageClassificationAnnotation:
      properties:
        annotationSpecId:
          type: string
          description: >-
            The resource Id of the AnnotationSpec that this Annotation pertains
            to.
        displayName:
          type: string
          description: >-
            The display name of the AnnotationSpec that this Annotation pertains
            to.
      id: GoogleCloudAiplatformV1SchemaImageClassificationAnnotation
      description: Annotation details specific to image classification.
      type: object
    GoogleCloudAiplatformV1SchemaTextSentimentAnnotation:
      type: object
      id: GoogleCloudAiplatformV1SchemaTextSentimentAnnotation
      properties:
        displayName:
          description: >-
            The display name of the AnnotationSpec that this Annotation pertains
            to.
          type: string
        sentimentMax:
          format: int32
          description: The sentiment max score for text.
          type: integer
        sentiment:
          format: int32
          type: integer
          description: The sentiment score for text.
        annotationSpecId:
          type: string
          description: >-
            The resource Id of the AnnotationSpec that this Annotation pertains
            to.
      description: Annotation details specific to text sentiment.
    GoogleCloudAiplatformV1UpdateFeatureOperationMetadata:
      type: object
      description: Details of operations that perform update Feature.
      id: GoogleCloudAiplatformV1UpdateFeatureOperationMetadata
      properties:
        genericMetadata:
          description: Operation metadata for Feature Update.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1StreamRawPredictRequest:
      properties:
        httpBody:
          description: >-
            The prediction input. Supports HTTP headers and arbitrary data
            payload.
          $ref: '#/components/schemas/GoogleApiHttpBody'
      type: object
      description: Request message for PredictionService.StreamRawPredict.
      id: GoogleCloudAiplatformV1StreamRawPredictRequest
    GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource:
      description: >-
        A Feature Registry source for features that need to be synced to Online
        Store.
      type: object
      properties:
        projectNumber:
          type: string
          description: >-
            Optional. The project number of the parent project of the Feature
            Groups.
          format: int64
        featureGroups:
          description: Required. List of features that need to be synced to Online Store.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup
          type: array
      id: GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource
    GoogleCloudAiplatformV1TrialParameter:
      id: GoogleCloudAiplatformV1TrialParameter
      description: A message representing a parameter to be tuned.
      properties:
        parameterId:
          type: string
          description: >-
            Output only. The ID of the parameter. The parameter should be
            defined in StudySpec's Parameters.
          readOnly: true
        value:
          readOnly: true
          description: >-
            Output only. The value of the parameter. `number_value` will be set
            if a parameter defined in StudySpec is in type 'INTEGER', 'DOUBLE'
            or 'DISCRETE'. `string_value` will be set if a parameter defined in
            StudySpec is in type 'CATEGORICAL'.
          type: any
      type: object
    GoogleCloudAiplatformV1UpdateModelDeploymentMonitoringJobOperationMetadata:
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: >-
        GoogleCloudAiplatformV1UpdateModelDeploymentMonitoringJobOperationMetadata
      type: object
      description: >-
        Runtime operation information for
        JobService.UpdateModelDeploymentMonitoringJob.
    GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec:
      description: >-
        The median automated stopping rule stops a pending Trial if the Trial's
        best objective_value is strictly below the median 'performance' of all
        completed Trials reported up to the Trial's last measurement. Currently,
        'performance' refers to the running average of the objective values
        reported by the Trial in each measurement.
      id: GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec
      properties:
        useElapsedDuration:
          type: boolean
          description: >-
            True if median automated stopping rule applies on
            Measurement.elapsed_duration. It means that elapsed_duration field
            of latest measurement of current Trial is used to compute median
            objective value for each completed Trials.
      type: object
    GoogleCloudAiplatformV1SummarizationHelpfulnessInstance:
      description: Spec for summarization helpfulness instance.
      type: object
      id: GoogleCloudAiplatformV1SummarizationHelpfulnessInstance
      properties:
        reference:
          type: string
          description: Optional. Ground truth used to compare against the prediction.
        instruction:
          type: string
          description: Optional. Summarization prompt for LLM.
        context:
          type: string
          description: Required. Text to be summarized.
        prediction:
          type: string
          description: Required. Output of the evaluated model.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata
      type: object
      properties:
        evaluatedDataItemsBigqueryUri:
          type: string
          description: BigQuery destination uri for exported evaluated examples.
        trainCostMilliNodeHours:
          type: string
          description: >-
            Output only. The actual training cost of the model, expressed in
            milli node hours, i.e. 1,000 value in this field means 1 node hour.
            Guaranteed to not exceed the train budget.
          format: int64
      description: Model metadata specific to TFT Forecasting.
    GoogleCloudAiplatformV1LineageSubgraph:
      description: >-
        A subgraph of the overall lineage graph. Event edges connect Artifact
        and Execution nodes.
      properties:
        executions:
          description: The Execution nodes in the subgraph.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
        events:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Event'
          description: The Event edges between Artifacts and Executions in the subgraph.
        artifacts:
          description: The Artifact nodes in the subgraph.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      type: object
      id: GoogleCloudAiplatformV1LineageSubgraph
    GoogleIamV1Binding:
      properties:
        members:
          type: array
          items:
            type: string
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/GoogleTypeExpr'
      description: Associates `members`, or principals, with a `role`.
      type: object
      id: GoogleIamV1Binding
    GoogleCloudAiplatformV1SummarizationQualitySpec:
      id: GoogleCloudAiplatformV1SummarizationQualitySpec
      description: Spec for summarization quality score metric.
      type: object
      properties:
        version:
          format: int32
          type: integer
          description: Optional. Which version to use for evaluation.
        useReference:
          description: >-
            Optional. Whether to use instance.reference to compute summarization
            quality.
          type: boolean
    GoogleCloudAiplatformV1ExactMatchResults:
      properties:
        exactMatchMetricValues:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ExactMatchMetricValue'
          description: Output only. Exact match metric values.
          type: array
      description: Results for exact match metric.
      type: object
      id: GoogleCloudAiplatformV1ExactMatchResults
    GoogleCloudAiplatformV1FeatureOnlineStoreDedicatedServingEndpoint:
      properties:
        serviceAttachment:
          type: string
          readOnly: true
          description: >-
            Output only. The name of the service attachment resource. Populated
            if private service connect is enabled and after FeatureViewSync is
            created.
        publicEndpointDomainName:
          type: string
          readOnly: true
          description: >-
            Output only. This field will be populated with the domain name to
            use for this FeatureOnlineStore
        privateServiceConnectConfig:
          description: >-
            Optional. Private service connect config. The private service
            connection is available only for Optimized storage type, not for
            embedding management now. If
            PrivateServiceConnectConfig.enable_private_service_connect set to
            true, customers will use private service connection to send request.
            Otherwise, the connection will set to public endpoint.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PrivateServiceConnectConfig
      description: >-
        The dedicated serving endpoint for this FeatureOnlineStore. Only need to
        set when you choose Optimized storage type. Public endpoint is
        provisioned by default.
      type: object
      id: GoogleCloudAiplatformV1FeatureOnlineStoreDedicatedServingEndpoint
    GoogleCloudAiplatformV1PairwiseSummarizationQualityResult:
      id: GoogleCloudAiplatformV1PairwiseSummarizationQualityResult
      description: Spec for pairwise summarization quality result.
      type: object
      properties:
        pairwiseChoice:
          enumDescriptions:
            - Unspecified prediction choice.
            - Baseline prediction wins
            - Candidate prediction wins
            - Winner cannot be determined
          description: Output only. Pairwise summarization prediction choice.
          enum:
            - PAIRWISE_CHOICE_UNSPECIFIED
            - BASELINE
            - CANDIDATE
            - TIE
          readOnly: true
          type: string
        explanation:
          readOnly: true
          description: Output only. Explanation for summarization quality score.
          type: string
        confidence:
          description: Output only. Confidence for summarization quality score.
          format: float
          type: number
          readOnly: true
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoObjectTrackingMetrics:
      properties:
        boundingBoxMeanAveragePrecision:
          format: float
          description: >-
            The single metric for bounding boxes evaluation: the
            `meanAveragePrecision` averaged over all `boundingBoxMetrics`.
          type: number
        boundingBoxMetrics:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics
          description: >-
            The bounding boxes match metrics for each intersection-over-union
            threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label
            confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
        trackMeanAveragePrecision:
          type: number
          format: float
          description: >-
            UNIMPLEMENTED. The single metric for tracks accuracy evaluation: the
            `meanAveragePrecision` averaged over all `trackMetrics`.
        trackMeanBoundingBoxIou:
          type: number
          format: float
          description: >-
            UNIMPLEMENTED. The single metric for tracks bounding box iou
            evaluation: the `meanBoundingBoxIou` averaged over all
            `trackMetrics`.
        trackMeanMismatchRate:
          description: >-
            UNIMPLEMENTED. The single metric for tracking consistency
            evaluation: the `meanMismatchRate` averaged over all `trackMetrics`.
          type: number
          format: float
        trackMetrics:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics
          description: >-
            UNIMPLEMENTED. The tracks match metrics for each
            intersection-over-union threshold
            0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence
            threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
          type: array
        evaluatedFrameCount:
          format: int32
          description: >-
            UNIMPLEMENTED. The number of video frames used to create this
            evaluation.
          type: integer
        evaluatedBoundingBoxCount:
          type: integer
          format: int32
          description: >-
            UNIMPLEMENTED. The total number of bounding boxes (i.e. summed over
            all frames) the ground truth used to create this evaluation had.
        evaluatedTrackCount:
          format: int32
          type: integer
          description: >-
            UNIMPLEMENTED. The total number of tracks (i.e. as seen across all
            frames) the ground truth used to create this evaluation had.
      type: object
      description: >-
        Model evaluation metrics for video object tracking problems. Evaluates
        prediction quality of both labeled bounding boxes and labeled tracks
        (i.e. series of bounding boxes sharing same label and instance ID).
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoObjectTrackingMetrics
    GoogleCloudAiplatformV1CopyModelRequest:
      type: object
      description: Request message for ModelService.CopyModel.
      id: GoogleCloudAiplatformV1CopyModelRequest
      properties:
        modelId:
          type: string
          description: >-
            Optional. Copy source_model into a new Model with this ID. The ID
            will become the final component of the model resource name. This
            value may be up to 63 characters, and valid characters are
            `[a-z0-9_-]`. The first character cannot be a number or hyphen.
        sourceModel:
          type: string
          description: >-
            Required. The resource name of the Model to copy. That Model must be
            in the same Project. Format:
            `projects/{project}/locations/{location}/models/{model}`
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Customer-managed encryption key options. If this is set, then the
            Model copy will be encrypted with the provided encryption key.
        parentModel:
          type: string
          description: >-
            Optional. Specify this field to copy source_model into this existing
            Model as a new version. Format:
            `projects/{project}/locations/{location}/models/{model}`
    GoogleCloudAiplatformV1WriteTensorboardRunDataRequest:
      type: object
      id: GoogleCloudAiplatformV1WriteTensorboardRunDataRequest
      description: Request message for TensorboardService.WriteTensorboardRunData.
      properties:
        tensorboardRun:
          type: string
          description: >-
            Required. The resource name of the TensorboardRun to write data to.
            Format:
            `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
        timeSeriesData:
          description: >-
            Required. The TensorboardTimeSeries data to write. Values with in a
            time series are indexed by their step value. Repeated writes to the
            same step will overwrite the existing value for that step. The upper
            limit of data points per write request is 5000.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TimeSeriesData'
          type: array
    GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource:
      description: The content of the input notebook in ipynb format.
      type: object
      id: GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource
      properties:
        content:
          type: string
          description: The base64-encoded contents of the input notebook file.
          format: byte
    CloudAiPlatformCommonCreatePipelineJobApiErrorDetail:
      id: CloudAiPlatformCommonCreatePipelineJobApiErrorDetail
      description: 'Create API error message for Vertex Pipeline. Next Id: 3.'
      type: object
      properties:
        errorCause:
          enum:
            - ERROR_CAUSE_UNSPECIFIED
            - INVALID_PIPELINE_SPEC_FORMAT
            - INVALID_PIPELINE_SPEC
            - INVALID_DEPLOYMENT_CONFIG
            - INVALID_DEPLOYMENT_SPEC
            - INVALID_INSTANCE_SCHEMA
            - INVALID_CUSTOM_JOB
            - INVALID_CONTAINER_SPEC
            - INVALID_NOTIFICATION_EMAIL_SETUP
            - INVALID_SERVICE_ACCOUNT_SETUP
            - INVALID_KMS_SETUP
            - INVALID_NETWORK_SETUP
            - INVALID_PIPELINE_TASK_SPEC
            - INVALID_PIPELINE_TASK_ARTIFACT
            - INVALID_IMPORTER_SPEC
            - INVALID_RESOLVER_SPEC
            - INVALID_RUNTIME_PARAMETERS
            - CLOUD_API_NOT_ENABLED
            - INVALID_GCS_INPUT_URI
            - INVALID_GCS_OUTPUT_URI
            - INVALID_COMPONENT_SPEC
            - INVALID_DAG_OUTPUTS_SPEC
            - INVALID_DAG_SPEC
            - INSUFFICIENT_QUOTA
            - INTERNAL
          description: The error root cause returned by CreatePipelineJob API.
          type: string
          enumDescriptions:
            - Should never be used.
            - IR Pipeline Spec can not been parsed to yaml or json format.
            - A pipeline spec is invalid.
            - A deployment config is invalid.
            - A deployment spec is invalid.
            - An instance schema is invalid.
            - A custom job is invalid.
            - A container spec is invalid.
            - Notification email setup is invalid.
            - Service account setup is invalid.
            - KMS setup is invalid.
            - Network setup is invalid.
            - Task spec is invalid.
            - Task artifact is invalid.
            - Importer spec is invalid.
            - Resolver spec is invalid.
            - Runtime Parameters are invalid.
            - Cloud API not enabled.
            - Invalid GCS input uri
            - Invalid GCS output uri
            - Component spec of pipeline is invalid.
            - DagOutputsSpec is invalid.
            - DagSpec is invalid.
            - Project does not have enough quota.
            - An internal error with unknown cause.
        publicMessage:
          type: string
          description: Public messages contains actionable items for the error cause.
    GoogleCloudAiplatformV1ResourcesConsumed:
      properties:
        replicaHours:
          description: >-
            Output only. The number of replica hours used. Note that many
            replicas may run in parallel, and additionally any given work may be
            queued for some time. Therefore this value is not strictly related
            to wall time.
          readOnly: true
          type: number
          format: double
      id: GoogleCloudAiplatformV1ResourcesConsumed
      description: Statistics information about resource consumption.
      type: object
    GoogleCloudAiplatformV1PointwiseMetricInstance:
      id: GoogleCloudAiplatformV1PointwiseMetricInstance
      description: >-
        Pointwise metric instance. Usually one instance corresponds to one row
        in an evaluation dataset.
      properties:
        jsonInstance:
          description: >-
            Instance specified as a json string. String key-value pairs are
            expected in the json_instance to render
            PointwiseMetricSpec.instance_prompt_template.
          type: string
      type: object
    GoogleCloudAiplatformV1ToolCallValidResults:
      properties:
        toolCallValidMetricValues:
          type: array
          description: Output only. Tool call valid metric values.
          readOnly: true
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ToolCallValidMetricValue
      description: Results for tool call valid metric.
      type: object
      id: GoogleCloudAiplatformV1ToolCallValidResults
    GoogleCloudAiplatformV1PipelineTemplateMetadata:
      properties:
        version:
          description: >-
            The version_name in artifact registry. Will always be presented in
            output if the PipelineJob.template_uri is from supported template
            registry. Format is "sha256:abcdef123456...".
          type: string
      description: >-
        Pipeline template metadata if PipelineJob.template_uri is from supported
        template registry. Currently, the only supported registry is Artifact
        Registry.
      type: object
      id: GoogleCloudAiplatformV1PipelineTemplateMetadata
    GoogleCloudAiplatformV1MetadataStore:
      properties:
        dataplexConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1MetadataStoreDataplexConfig
          description: Optional. Dataplex integration settings.
        updateTime:
          description: Output only. Timestamp when this MetadataStore was last updated.
          readOnly: true
          type: string
          format: google-datetime
        name:
          type: string
          description: Output only. The resource name of the MetadataStore instance.
          readOnly: true
        createTime:
          format: google-datetime
          description: Output only. Timestamp when this MetadataStore was created.
          type: string
          readOnly: true
        state:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1MetadataStoreMetadataStoreState
          description: Output only. State information of the MetadataStore.
          readOnly: true
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Customer-managed encryption key spec for a Metadata Store. If set,
            this Metadata Store and all sub-resources of this Metadata Store are
            secured using this key.
        description:
          type: string
          description: Description of the MetadataStore.
      type: object
      id: GoogleCloudAiplatformV1MetadataStore
      description: >-
        Instance of a metadata store. Contains a set of metadata that can be
        queried.
    GoogleCloudAiplatformV1ToolParameterKeyMatchInstance:
      description: Spec for tool parameter key match instance.
      id: GoogleCloudAiplatformV1ToolParameterKeyMatchInstance
      type: object
      properties:
        reference:
          type: string
          description: Required. Ground truth used to compare against the prediction.
        prediction:
          type: string
          description: Required. Output of the evaluated model.
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig:
      type: object
      properties:
        dataset:
          type: string
          description: >-
            Required. Full resource name of data labeling Dataset. Format:
            `projects/{project}/datasets/{dataset}`.
        datasetDisplayName:
          type: string
          description: >-
            Optional. Display name of the Dataset in Vertex AI. System will pick
            a display name if unspecified.
        migrateDataLabelingAnnotatedDatasetConfigs:
          type: array
          description: >-
            Optional. Configs for migrating AnnotatedDataset in
            datalabeling.googleapis.com to Vertex AI's SavedQuery. The specified
            AnnotatedDatasets have to belong to the datalabeling Dataset.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig
      description: >-
        Config for migrating Dataset in datalabeling.googleapis.com to Vertex
        AI's Dataset.
      id: >-
        GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig
    GoogleCloudAiplatformV1ToolParameterKVMatchInput:
      id: GoogleCloudAiplatformV1ToolParameterKVMatchInput
      properties:
        metricSpec:
          description: Required. Spec for tool parameter key value match metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ToolParameterKVMatchSpec'
        instances:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ToolParameterKVMatchInstance
          description: Required. Repeated tool parameter key value match instances.
      type: object
      description: Input for tool parameter key value match metric.
    GoogleRpcStatus:
      type: object
      properties:
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: GoogleRpcStatus
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation:
      id: GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation
      description: The mask based segmentation annotation.
      properties:
        annotationSpecColors:
          description: The mapping between color and AnnotationSpec for this Annotation.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaAnnotationSpecColor
        maskGcsUri:
          description: >-
            Google Cloud Storage URI that points to the mask image. The image
            must be in PNG format. It must have the same size as the DataItem's
            image. Each pixel in the image mask represents the AnnotationSpec
            which the pixel in the image DataItem belong to. Each color is
            mapped to one AnnotationSpec based on annotation_spec_colors.
          type: string
      type: object
    GoogleCloudAiplatformV1Content:
      description: >-
        The base structured datatype containing multi-part content of a message.
        A `Content` includes a `role` field designating the producer of the
        `Content` and a `parts` field containing multi-part data that contains
        the content of the message turn.
      properties:
        parts:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Part'
          type: array
          description: >-
            Required. Ordered `Parts` that constitute a single message. Parts
            may have different IANA MIME types.
        role:
          type: string
          description: >-
            Optional. The producer of the content. Must be either 'user' or
            'model'. Useful to set for multi-turn conversations, otherwise can
            be left blank or unset.
      type: object
      id: GoogleCloudAiplatformV1Content
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation:
      type: object
      properties:
        columnName:
          type: string
      description: >-
        Training pipeline will perform following transformation functions. * The
        value converted to float32. * The z_score of the value. * log(value+1)
        when the value is greater than or equal to 0. Otherwise, this
        transformation is not applied and the value is considered a missing
        value. * z_score of log(value+1) when the value is greater than or equal
        to 0. Otherwise, this transformation is not applied and the value is
        considered a missing value. * A boolean value that indicates whether the
        value is valid.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation
    GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest:
      properties: {}
      description: Request message for VizierService.CheckTrialEarlyStoppingState.
      type: object
      id: GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest
    GoogleCloudAiplatformV1ToolNameMatchResults:
      id: GoogleCloudAiplatformV1ToolNameMatchResults
      description: Results for tool name match metric.
      properties:
        toolNameMatchMetricValues:
          description: Output only. Tool name match metric values.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ToolNameMatchMetricValue
          readOnly: true
      type: object
    GoogleCloudAiplatformV1DeployedIndexRef:
      type: object
      id: GoogleCloudAiplatformV1DeployedIndexRef
      description: Points to a DeployedIndex.
      properties:
        indexEndpoint:
          type: string
          description: Immutable. A resource name of the IndexEndpoint.
        displayName:
          description: Output only. The display name of the DeployedIndex.
          readOnly: true
          type: string
        deployedIndexId:
          type: string
          description: Immutable. The ID of the DeployedIndex in the above IndexEndpoint.
    GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest:
      properties:
        names:
          description: >-
            Required. The names of the PipelineJobs to delete. A maximum of 32
            PipelineJobs can be deleted in a batch. Format:
            `projects/{project}/locations/{location}/pipelineJobs/{pipelineJob}`
          type: array
          items:
            type: string
      id: GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest
      type: object
      description: Request message for PipelineService.BatchDeletePipelineJobs.
    GoogleTypeColor:
      description: >-
        Represents a color in the RGBA color space. This representation is
        designed for simplicity of conversion to and from color representations
        in various languages over compactness. For example, the fields of this
        representation can be trivially provided to the constructor of
        `java.awt.Color` in Java; it can also be trivially provided to UIColor's
        `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little
        work, it can be easily formatted into a CSS `rgba()` string in
        JavaScript. This reference page doesn't have information about the
        absolute color space that should be used to interpret the RGB value—for
        example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications
        should assume the sRGB color space. When color equality needs to be
        decided, implementations, unless documented otherwise, treat two colors
        as equal if all their red, green, blue, and alpha values each differ by
        at most `1e-5`. Example (Java): import com.google.type.Color; // ...
        public static java.awt.Color fromProto(Color protocolor) { float alpha =
        protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return
        new java.awt.Color( protocolor.getRed(), protocolor.getGreen(),
        protocolor.getBlue(), alpha); } public static Color
        toProto(java.awt.Color color) { float red = (float) color.getRed();
        float green = (float) color.getGreen(); float blue = (float)
        color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder
        = Color .newBuilder() .setRed(red / denominator) .setGreen(green /
        denominator) .setBlue(blue / denominator); int alpha = color.getAlpha();
        if (alpha != 255) { result.setAlpha( FloatValue .newBuilder()
        .setValue(((float) alpha) / denominator) .build()); } return
        resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static
        UIColor* fromProto(Color* protocolor) { float red = [protocolor red];
        float green = [protocolor green]; float blue = [protocolor blue];
        FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if
        (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return
        [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static
        Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if
        (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return
        nil; } Color* result = [[Color alloc] init]; [result setRed:red];
        [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) {
        [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease];
        return result; } // ... Example (JavaScript): // ... var protoToCssColor
        = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var
        greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue ||
        0.0; var red = Math.floor(redFrac * 255); var green =
        Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if
        (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); }
        var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red,
        green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac,
        ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var
        rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
        = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
        resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) {
        resultBuilder.push('0'); } resultBuilder.push(hexString); return
        resultBuilder.join(''); }; // ...
      type: object
      id: GoogleTypeColor
      properties:
        blue:
          description: The amount of blue in the color as a value in the interval [0, 1].
          format: float
          type: number
        alpha:
          format: float
          description: >-
            The fraction of this color that should be applied to the pixel. That
            is, the final pixel color is defined by the equation: `pixel color =
            alpha * (this color) + (1.0 - alpha) * (background color)` This
            means that a value of 1.0 corresponds to a solid color, whereas a
            value of 0.0 corresponds to a completely transparent color. This
            uses a wrapper message rather than a simple float scalar so that it
            is possible to distinguish between a default value and the value
            being unset. If omitted, this color object is rendered as a solid
            color (as if the alpha value had been explicitly given a value of
            1.0).
          type: number
        red:
          description: The amount of red in the color as a value in the interval [0, 1].
          format: float
          type: number
        green:
          type: number
          description: The amount of green in the color as a value in the interval [0, 1].
          format: float
    GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact:
      id: GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact
      type: object
      properties:
        artifactId:
          type: string
          description: >-
            Artifact resource id from MLMD. Which is the last portion of an
            artifact resource name:
            `projects/{project}/locations/{location}/metadataStores/default/artifacts/{artifact_id}`.
            The artifact must stay within the same project, location and default
            metadatastore as the pipeline.
      description: The type of an input artifact.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation:
      properties:
        columnName:
          type: string
      type: object
      description: >-
        Training pipeline will perform following transformation functions. * The
        text as is--no change to case, punctuation, spelling, tense, and so on.
        * Convert the category name to a dictionary lookup index and generate an
        embedding for each index.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation
    GoogleCloudAiplatformV1GenieSource:
      description: >-
        Contains information about the source of the models generated from
        Generative AI Studio.
      properties:
        baseModelUri:
          description: Required. The public base model URI.
          type: string
      id: GoogleCloudAiplatformV1GenieSource
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetrics:
      type: object
      description: Metrics for image segmentation evaluation results.
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetrics
      properties:
        confidenceMetricsEntries:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry
          description: >-
            Metrics for each confidenceThreshold in
            0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 Precision-recall curve
            can be derived from it.
          type: array
    GoogleCloudAiplatformV1WorkerPoolSpec:
      id: GoogleCloudAiplatformV1WorkerPoolSpec
      type: object
      description: Represents the spec of a worker pool in a job.
      properties:
        replicaCount:
          description: Optional. The number of worker replicas to use for this worker pool.
          format: int64
          type: string
        pythonPackageSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PythonPackageSpec'
          description: The Python packaged task.
        nfsMounts:
          type: array
          description: Optional. List of NFS mount spec.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NfsMount'
        machineSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MachineSpec'
          description: Optional. Immutable. The specification of a single machine.
        diskSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DiskSpec'
          description: Disk spec.
        containerSpec:
          description: The custom container task.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ContainerSpec'
    GoogleCloudAiplatformV1FilterSplit:
      type: object
      properties:
        trainingFilter:
          description: >-
            Required. A filter on DataItems of the Dataset. DataItems that match
            this filter are used to train the Model. A filter with same syntax
            as the one used in DatasetService.ListDataItems may be used. If a
            single DataItem is matched by more than one of the FilterSplit
            filters, then it is assigned to the first set that applies to it in
            the training, validation, test order.
          type: string
        validationFilter:
          type: string
          description: >-
            Required. A filter on DataItems of the Dataset. DataItems that match
            this filter are used to validate the Model. A filter with same
            syntax as the one used in DatasetService.ListDataItems may be used.
            If a single DataItem is matched by more than one of the FilterSplit
            filters, then it is assigned to the first set that applies to it in
            the training, validation, test order.
        testFilter:
          description: >-
            Required. A filter on DataItems of the Dataset. DataItems that match
            this filter are used to test the Model. A filter with same syntax as
            the one used in DatasetService.ListDataItems may be used. If a
            single DataItem is matched by more than one of the FilterSplit
            filters, then it is assigned to the first set that applies to it in
            the training, validation, test order.
          type: string
      description: >-
        Assigns input data to training, validation, and test sets based on the
        given filters, data pieces not matched by any filter are ignored.
        Currently only supported for Datasets containing DataItems. If any of
        the filters in this message are to match nothing, then they can be set
        as '-' (the minus sign). Supported only for unstructured Datasets. 
      id: GoogleCloudAiplatformV1FilterSplit
    GoogleCloudAiplatformV1UpsertDatapointsResponse:
      id: GoogleCloudAiplatformV1UpsertDatapointsResponse
      description: Response message for IndexService.UpsertDatapoints
      type: object
      properties: {}
    GoogleCloudAiplatformV1EnvVar:
      type: object
      description: >-
        Represents an environment variable present in a Container or Python
        Module.
      properties:
        value:
          type: string
          description: >-
            Required. Variables that reference a $(VAR_NAME) are expanded using
            the previous defined environment variables in the container and any
            service environment variables. If a variable cannot be resolved, the
            reference in the input string will be unchanged. The $(VAR_NAME)
            syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
            references will never be expanded, regardless of whether the
            variable exists or not.
        name:
          description: >-
            Required. Name of the environment variable. Must be a valid C
            identifier.
          type: string
      id: GoogleCloudAiplatformV1EnvVar
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation:
      properties:
        invalidValuesAllowed:
          type: boolean
          description: >-
            If invalid values is allowed, the training pipeline will create a
            boolean feature that indicated whether the value is valid.
            Otherwise, the training pipeline will discard the input row from
            trainining data.
        columnName:
          type: string
      description: >-
        Treats the column as numerical array and performs following
        transformation functions. * All transformations for Numerical types
        applied to the average of the all elements. * The average of empty
        arrays is treated as zero.
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation
    GoogleCloudAiplatformV1FulfillmentInput:
      properties:
        instance:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FulfillmentInstance'
          description: Required. Fulfillment instance.
        metricSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FulfillmentSpec'
          description: Required. Spec for fulfillment score metric.
      type: object
      id: GoogleCloudAiplatformV1FulfillmentInput
      description: Input for fulfillment metric.
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition:
      properties:
        values:
          type: array
          description: >-
            Required. Matches values of the parent parameter of 'CATEGORICAL'
            type. All values must exist in `categorical_value_spec` of parent
            parameter.
          items:
            type: string
      type: object
      description: Represents the spec to match categorical values from parent parameter.
      id: >-
        GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics:
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics
      type: object
      properties:
        confidenceThreshold:
          format: float
          type: number
          description: The confidence threshold value used to compute the metrics.
        trackingRecall:
          format: float
          description: Tracking recall.
          type: number
        trackingPrecision:
          format: float
          type: number
          description: Tracking precision.
        mismatchRate:
          type: number
          description: >-
            Mismatch rate, which measures the tracking consistency, i.e.
            correctness of instance ID continuity.
          format: float
        boundingBoxIou:
          description: >-
            Bounding box intersection-over-union precision. Measures how well
            the bounding boxes overlap between each other (e.g. complete overlap
            or just barely above iou_threshold).
          type: number
          format: float
      description: Metrics for a single confidence threshold.
    GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessSpec:
      type: object
      id: GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessSpec
      properties:
        version:
          type: integer
          format: int32
          description: Optional. Which version to use for evaluation.
        useReference:
          type: boolean
          description: >-
            Optional. Whether to use instance.reference to compute question
            answering helpfulness.
      description: Spec for question answering helpfulness metric.
    GoogleCloudAiplatformV1ListFeatureViewsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as ListFeatureViewsRequest.page_token to
            retrieve the next page. If this field is omitted, there are no
            subsequent pages.
        featureViews:
          description: The FeatureViews matching the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureView'
      id: GoogleCloudAiplatformV1ListFeatureViewsResponse
      description: Response message for FeatureOnlineStoreAdminService.ListFeatureViews.
    GoogleCloudAiplatformV1SampledShapleyAttribution:
      properties:
        pathCount:
          format: int32
          description: >-
            Required. The number of feature permutations to consider when
            approximating the Shapley values. Valid range of its value is [1,
            50], inclusively.
          type: integer
      id: GoogleCloudAiplatformV1SampledShapleyAttribution
      type: object
      description: >-
        An attribution method that approximates Shapley values for features that
        contribute to the label being predicted. A sampling strategy is used to
        approximate the value rather than considering all subsets of features.
    GoogleCloudAiplatformV1SchemaPredictPredictionTabularClassificationPredictionResult:
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionTabularClassificationPredictionResult
      description: Prediction output format for Tabular Classification.
      type: object
      properties:
        scores:
          items:
            format: float
            type: number
          description: >-
            The model's confidence in each class being correct, higher value
            means higher confidence. The N-th score corresponds to the N-th
            class in classes.
          type: array
        classes:
          items:
            type: string
          description: >-
            The name of the classes being classified, contains all possible
            values of the target column.
          type: array
    GoogleCloudAiplatformV1CancelTuningJobRequest:
      type: object
      description: Request message for GenAiTuningService.CancelTuningJob.
      id: GoogleCloudAiplatformV1CancelTuningJobRequest
      properties: {}
    GoogleCloudAiplatformV1DirectRawPredictRequest:
      description: Request message for PredictionService.DirectRawPredict.
      id: GoogleCloudAiplatformV1DirectRawPredictRequest
      properties:
        methodName:
          type: string
          description: >-
            Fully qualified name of the API method being invoked to perform
            predictions. Format: `/namespace.Service/Method/` Example:
            `/tensorflow.serving.PredictionService/Predict`
        input:
          format: byte
          type: string
          description: The prediction input.
      type: object
    CloudAiLargeModelsVisionImage:
      id: CloudAiLargeModelsVisionImage
      properties:
        uri:
          type: string
          description: Path to another storage (typically Google Cloud Storage).
        text:
          type: string
          description: Text/Expanded text input for imagen.
        semanticFilterResponse:
          description: Semantic filter info for image.
          $ref: '#/components/schemas/CloudAiLargeModelsVisionSemanticFilterResponse'
        image:
          type: string
          format: byte
          description: Raw bytes.
        encoding:
          type: string
          description: Image encoding, encoded as "image/png" or "image/jpg".
        imageRaiScores:
          $ref: '#/components/schemas/CloudAiLargeModelsVisionImageRAIScores'
          description: RAI scores for generated image.
        generationSeed:
          type: integer
          format: int32
          description: >-
            Generation seed for the sampled image. This parameter is exposed to
            the user only if one of the following is true: 1. The user specified
            per-example seeds in the request. 2. The user doesn't specify the
            generation seed in the request.
        raiInfo:
          $ref: '#/components/schemas/CloudAiLargeModelsVisionRaiInfo'
          description: RAI info for image.
      type: object
      description: Image.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs:
      properties:
        disableEarlyStopping:
          type: boolean
          description: >-
            Use the entire training budget. This disables the early stopping
            feature. When false the early stopping feature is enabled, which
            means that AutoML Image Object Detection might stop training before
            the entire training budget has been used.
        budgetMilliNodeHours:
          description: >-
            The training budget of creating this model, expressed in milli node
            hours i.e. 1,000 value in this field means 1 node hour. The actual
            metadata.costMilliNodeHours will be equal or less than this value.
            If further model training ceases to provide any improvements, it
            will stop without using the full budget and the
            metadata.successfulStopReason will be `model-converged`. Note,
            node_hour = actual_hour * number_of_nodes_involved. For modelType
            `cloud`(default), the budget must be between 20,000 and 900,000
            milli node hours, inclusive. The default value is 216,000 which
            represents one day in wall time, considering 9 nodes are used. For
            model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`,
            `mobile-tf-high-accuracy-1` the training budget must be between
            1,000 and 100,000 milli node hours, inclusive. The default value is
            24,000 which represents one day in wall time on a single node that
            is used.
          format: int64
          type: string
        tunableParameter:
          description: Trainer type for Vision TrainRequest.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter
        uptrainBaseModelId:
          type: string
          description: >-
            The ID of `base` model for upTraining. If it is specified, the new
            model will be upTrained based on the `base` model for upTraining.
            Otherwise, the new model will be trained from scratch. The `base`
            model for upTraining must be in the same Project and Location as the
            new Model to train, and have the same modelType.
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD_HIGH_ACCURACY_1
            - CLOUD_LOW_LATENCY_1
            - CLOUD_1
            - MOBILE_TF_LOW_LATENCY_1
            - MOBILE_TF_VERSATILE_1
            - MOBILE_TF_HIGH_ACCURACY_1
            - CLOUD_STREAMING_1
            - SPINENET
            - YOLO
          type: string
          enumDescriptions:
            - Should not be set.
            - >-
              A model best tailored to be used within Google Cloud, and which
              cannot be exported. Expected to have a higher latency, but should
              also have a higher prediction quality than other cloud models.
            - >-
              A model best tailored to be used within Google Cloud, and which
              cannot be exported. Expected to have a low latency, but may have
              lower prediction quality than other cloud models.
            - >-
              A model best tailored to be used within Google Cloud, and which
              cannot be exported. Compared to the CLOUD_HIGH_ACCURACY_1 and
              CLOUD_LOW_LATENCY_1 models above, it is expected to have higher
              prediction quality and lower latency.
            - >-
              A model that, in addition to being available within Google Cloud
              can also be exported (see ModelService.ExportModel) and used on a
              mobile or edge device with TensorFlow afterwards. Expected to have
              low latency, but may have lower prediction quality than other
              mobile models.
            - >-
              A model that, in addition to being available within Google Cloud
              can also be exported (see ModelService.ExportModel) and used on a
              mobile or edge device with TensorFlow afterwards.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) and used on a
              mobile or edge device with TensorFlow afterwards. Expected to have
              a higher latency, but should also have a higher prediction quality
              than other mobile models.
            - >-
              A model best tailored to be used within Google Cloud, and which
              cannot be exported. Expected to best support predictions in
              streaming with lower latency and lower prediction quality than
              other cloud models.
            - >-
              SpineNet for Model Garden training with customizable
              hyperparameters. Best tailored to be used within Google Cloud, and
              cannot be exported externally.
            - >-
              YOLO for Model Garden training with customizable hyperparameters.
              Best tailored to be used within Google Cloud, and cannot be
              exported externally.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs
      type: object
    GoogleCloudAiplatformV1DeployedModel:
      description: A deployment of a Model. Endpoints contain one or more DeployedModels.
      id: GoogleCloudAiplatformV1DeployedModel
      type: object
      properties:
        serviceAccount:
          description: >-
            The service account that the DeployedModel's container runs as.
            Specify the email address of the service account. If this service
            account is not specified, the container runs as a service account
            that doesn't have access to the resource project. Users deploying
            the Model must have the `iam.serviceAccounts.actAs` permission on
            this service account.
          type: string
        model:
          description: >-
            Required. The resource name of the Model that this is the deployment
            of. Note that the Model may be in a different location than the
            DeployedModel's Endpoint. The resource name may contain version id
            or version alias to specify the version. Example:
            `projects/{project}/locations/{location}/models/{model}@2` or
            `projects/{project}/locations/{location}/models/{model}@golden` if
            no version is specified, the default version will be deployed.
          type: string
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when the DeployedModel was created.
        privateEndpoints:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PrivateEndpoints'
          description: >-
            Output only. Provide paths for users to send predict/explain/health
            requests directly to the deployed model services running on Cloud
            via private services access. This field is populated if network is
            configured.
        dedicatedResources:
          description: >-
            A description of resources that are dedicated to the DeployedModel,
            and that need a higher degree of manual configuration.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DedicatedResources'
        modelVersionId:
          description: Output only. The version ID of the model that is deployed.
          type: string
          readOnly: true
        id:
          type: string
          description: >-
            Immutable. The ID of the DeployedModel. If not provided upon
            deployment, Vertex AI will generate a value for this ID. This value
            should be 1-10 characters, and valid characters are `/[0-9]/`.
        disableExplanations:
          type: boolean
          description: >-
            If true, deploy the model without explainable feature, regardless
            the existence of Model.explanation_spec or explanation_spec.
        disableContainerLogging:
          description: >-
            For custom-trained Models and AutoML Tabular Models, the container
            of the DeployedModel instances will send `stderr` and `stdout`
            streams to Cloud Logging by default. Please note that the logs incur
            cost, which are subject to [Cloud Logging
            pricing](https://cloud.google.com/logging/pricing). User can disable
            container logging by setting this flag to true.
          type: boolean
        displayName:
          type: string
          description: >-
            The display name of the DeployedModel. If not provided upon
            creation, the Model's display_name is used.
        automaticResources:
          description: >-
            A description of resources that to large degree are decided by
            Vertex AI, and require only a modest additional configuration.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1AutomaticResources'
        sharedResources:
          type: string
          description: >-
            The resource name of the shared DeploymentResourcePool to deploy on.
            Format:
            `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
        enableAccessLogging:
          description: >-
            If true, online prediction access logs are sent to Cloud Logging.
            These logs are like standard server access logs, containing
            information like timestamp and latency for each prediction request.
            Note that logs may incur a cost, especially if your project receives
            prediction requests at a high queries per second rate (QPS).
            Estimate your costs before enabling this option.
          type: boolean
        explanationSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec'
          description: >-
            Explanation configuration for this DeployedModel. When deploying a
            Model using EndpointService.DeployModel, this value overrides the
            value of Model.explanation_spec. All fields of explanation_spec are
            optional in the request. If a field of explanation_spec is not
            populated, the value of the same field of Model.explanation_spec is
            inherited. If the corresponding Model.explanation_spec is not
            populated, all fields of the explanation_spec will be used for the
            explanation configuration.
    GoogleCloudAiplatformV1QuestionAnsweringCorrectnessSpec:
      type: object
      id: GoogleCloudAiplatformV1QuestionAnsweringCorrectnessSpec
      properties:
        useReference:
          description: >-
            Optional. Whether to use instance.reference to compute question
            answering correctness.
          type: boolean
        version:
          description: Optional. Which version to use for evaluation.
          type: integer
          format: int32
      description: Spec for question answering correctness metric.
    GoogleCloudAiplatformV1Schedule:
      description: >-
        An instance of a Schedule periodically schedules runs to make API calls
        based on user specified time specification and API request type.
      properties:
        displayName:
          type: string
          description: >-
            Required. User provided name of the Schedule. The name can be up to
            128 characters long and can consist of any UTF-8 characters.
        nextRunTime:
          description: >-
            Output only. Timestamp when this Schedule should schedule the next
            run. Having a next_run_time in the past means the runs are being
            started behind schedule.
          type: string
          format: google-datetime
          readOnly: true
        createNotebookExecutionJobRequest:
          description: Request for NotebookService.CreateNotebookExecutionJob.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1CreateNotebookExecutionJobRequest
        maxConcurrentRunCount:
          format: int64
          type: string
          description: >-
            Required. Maximum number of runs that can be started concurrently
            for this Schedule. This is the limit for starting the scheduled
            requests and not the execution of the operations/jobs created by the
            requests (if applicable).
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this Schedule was created.
          type: string
        state:
          description: Output only. The state of this Schedule.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
            - COMPLETED
          enumDescriptions:
            - Unspecified.
            - >-
              The Schedule is active. Runs are being scheduled on the
              user-specified timespec.
            - >-
              The schedule is paused. No new runs will be created until the
              schedule is resumed. Already started runs will be allowed to
              complete.
            - >-
              The Schedule is completed. No new runs will be scheduled. Already
              started runs will be allowed to complete. Schedules in completed
              state cannot be paused or resumed.
          readOnly: true
          type: string
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when this Schedule was updated.
        endTime:
          format: google-datetime
          type: string
          description: >-
            Optional. Timestamp after which no new runs can be scheduled. If
            specified, The schedule will be completed when either end_time is
            reached or when scheduled_run_count >= max_run_count. If not
            specified, new runs will keep getting scheduled until this Schedule
            is paused or deleted. Already scheduled runs will be allowed to
            complete. Unset if not specified.
        maxRunCount:
          description: >-
            Optional. Maximum run count of the schedule. If specified, The
            schedule will be completed when either started_run_count >=
            max_run_count or when end_time is reached. If not specified, new
            runs will keep getting scheduled until this Schedule is paused or
            deleted. Already scheduled runs will be allowed to complete. Unset
            if not specified.
          format: int64
          type: string
        allowQueueing:
          description: >-
            Optional. Whether new scheduled runs can be queued when
            max_concurrent_runs limit is reached. If set to true, new runs will
            be queued instead of skipped. Default to false.
          type: boolean
        catchUp:
          description: >-
            Output only. Whether to backfill missed runs when the schedule is
            resumed from PAUSED state. If set to true, all missed runs will be
            scheduled. New runs will be scheduled after the backfill is
            complete. Default to false.
          type: boolean
          readOnly: true
        startTime:
          format: google-datetime
          type: string
          description: >-
            Optional. Timestamp after which the first run can be scheduled.
            Default to Schedule create time if not specified.
        lastScheduledRunResponse:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ScheduleRunResponse'
          description: >-
            Output only. Response of the last scheduled run. This is the
            response for starting the scheduled requests and not the execution
            of the operations/jobs created by the requests (if applicable).
            Unset if no run has been scheduled yet.
        cron:
          type: string
          description: >-
            Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch
            scheduled runs. To explicitly set a timezone to the cron tab, apply
            a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or
            "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid
            string from IANA time zone database. For example,
            "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * *
            * *".
        createPipelineJobRequest:
          description: >-
            Request for PipelineService.CreatePipelineJob.
            CreatePipelineJobRequest.parent field is required (format:
            projects/{project}/locations/{location}).
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CreatePipelineJobRequest'
        startedRunCount:
          description: Output only. The number of runs started by this schedule.
          readOnly: true
          format: int64
          type: string
        name:
          description: Immutable. The resource name of the Schedule.
          type: string
        lastResumeTime:
          description: >-
            Output only. Timestamp when this Schedule was last resumed. Unset if
            never resumed from pause.
          readOnly: true
          format: google-datetime
          type: string
        lastPauseTime:
          readOnly: true
          description: >-
            Output only. Timestamp when this Schedule was last paused. Unset if
            never paused.
          type: string
          format: google-datetime
      type: object
      id: GoogleCloudAiplatformV1Schedule
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics
      properties:
        maxPredictions:
          type: integer
          format: int32
          description: >-
            Metrics are computed with an assumption that the Model always
            returns at most this many predictions (ordered by their score,
            descendingly), but they all still need to meet the
            `confidenceThreshold`.
        f1ScoreAt1:
          description: The harmonic mean of recallAt1 and precisionAt1.
          type: number
          format: float
        falseNegativeCount:
          format: int64
          type: string
          description: >-
            The number of ground truth labels that are not matched by a Model
            created label.
        trueNegativeCount:
          type: string
          format: int64
          description: >-
            The number of labels that were not created by the Model, but if they
            would, they would not match a ground truth label.
        precision:
          format: float
          type: number
          description: Precision for the given confidence threshold.
        confidenceThreshold:
          description: >-
            Metrics are computed with an assumption that the Model never returns
            predictions with score lower than this value.
          type: number
          format: float
        truePositiveCount:
          type: string
          format: int64
          description: The number of Model created labels that match a ground truth label.
        f1ScoreMicro:
          type: number
          format: float
          description: Micro-averaged F1 Score.
        f1Score:
          type: number
          description: >-
            The harmonic mean of recall and precision. For summary metrics, it
            computes the micro-averaged F1 score.
          format: float
        recallAt1:
          description: >-
            The Recall (True Positive Rate) when only considering the label that
            has the highest prediction score and not below the confidence
            threshold for each DataItem.
          format: float
          type: number
        recall:
          type: number
          description: Recall (True Positive Rate) for the given confidence threshold.
          format: float
        confusionMatrix:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
          description: Confusion matrix of the evaluation for this confidence_threshold.
        f1ScoreMacro:
          format: float
          type: number
          description: Macro-averaged F1 Score.
        precisionAt1:
          description: >-
            The precision when only considering the label that has the highest
            prediction score and not below the confidence threshold for each
            DataItem.
          type: number
          format: float
        falsePositiveCount:
          format: int64
          description: >-
            The number of Model created labels that do not match a ground truth
            label.
          type: string
        falsePositiveRate:
          format: float
          type: number
          description: False Positive Rate for the given confidence threshold.
        falsePositiveRateAt1:
          type: number
          description: >-
            The False Positive Rate when only considering the label that has the
            highest prediction score and not below the confidence threshold for
            each DataItem.
          format: float
    GoogleCloudAiplatformV1DeployIndexResponse:
      type: object
      description: Response message for IndexEndpointService.DeployIndex.
      properties:
        deployedIndex:
          description: The DeployedIndex that had been deployed in the IndexEndpoint.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndex'
      id: GoogleCloudAiplatformV1DeployIndexResponse
    GoogleCloudAiplatformV1CoherenceInstance:
      description: Spec for coherence instance.
      properties:
        prediction:
          description: Required. Output of the evaluated model.
          type: string
      type: object
      id: GoogleCloudAiplatformV1CoherenceInstance
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata:
      type: object
      properties:
        bestTrialBackingCustomJob:
          type: string
          description: >-
            The resource name of the CustomJob that has been created to run the
            best Trial of this HyperparameterTuning task.
        backingHyperparameterTuningJob:
          description: >-
            The resource name of the HyperparameterTuningJob that has been
            created to carry out this HyperparameterTuning task.
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata
    GoogleCloudAiplatformV1ListNotebookRuntimesResponse:
      type: object
      id: GoogleCloudAiplatformV1ListNotebookRuntimesResponse
      description: Response message for NotebookService.ListNotebookRuntimes.
      properties:
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass to
            ListNotebookRuntimesRequest.page_token to obtain that page.
          type: string
        notebookRuntimes:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NotebookRuntime'
          type: array
          description: List of NotebookRuntimes in the requested page.
    GoogleCloudAiplatformV1RemoveContextChildrenRequest:
      properties:
        childContexts:
          type: array
          items:
            type: string
          description: The resource names of the child Contexts.
      description: Request message for MetadataService.DeleteContextChildrenRequest.
      id: GoogleCloudAiplatformV1RemoveContextChildrenRequest
      type: object
    GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessResult:
      description: Spec for question answering helpfulness result.
      type: object
      id: GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessResult
      properties:
        explanation:
          readOnly: true
          description: Output only. Explanation for question answering helpfulness score.
          type: string
        score:
          description: Output only. Question Answering Helpfulness score.
          readOnly: true
          type: number
          format: float
        confidence:
          format: float
          type: number
          description: Output only. Confidence for question answering helpfulness score.
          readOnly: true
    GoogleCloudAiplatformV1DatasetVersion:
      properties:
        modelReference:
          readOnly: true
          description: >-
            Output only. Reference to the public base model last used by the
            dataset version. Only set for prompt dataset versions.
          type: string
        displayName:
          type: string
          description: >-
            The user-defined name of the DatasetVersion. The name can be up to
            128 characters long and can consist of any UTF-8 characters.
        satisfiesPzi:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        satisfiesPzs:
          type: boolean
          description: Output only. Reserved for future use.
          readOnly: true
        updateTime:
          description: Output only. Timestamp when this DatasetVersion was last updated.
          readOnly: true
          format: google-datetime
          type: string
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when this DatasetVersion was created.
        bigQueryDatasetName:
          type: string
          readOnly: true
          description: Output only. Name of the associated BigQuery dataset.
        metadata:
          readOnly: true
          type: any
          description: >-
            Required. Output only. Additional information about the
            DatasetVersion.
        name:
          readOnly: true
          description: Output only. Identifier. The resource name of the DatasetVersion.
          type: string
        etag:
          description: >-
            Used to perform consistent read-modify-write updates. If not set, a
            blind "overwrite" update happens.
          type: string
      id: GoogleCloudAiplatformV1DatasetVersion
      type: object
      description: Describes the dataset version.
    GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse:
      id: GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse
      description: Response message for JobService.ListModelDeploymentMonitoringJobs.
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        modelDeploymentMonitoringJobs:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob
          description: >-
            A list of ModelDeploymentMonitoringJobs that matches the specified
            filter in the request.
    GoogleCloudAiplatformV1CreateNotebookExecutionJobOperationMetadata:
      id: GoogleCloudAiplatformV1CreateNotebookExecutionJobOperationMetadata
      type: object
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
        progressMessage:
          description: >-
            A human-readable message that shows the intermediate progress
            details of NotebookRuntime.
          type: string
      description: Metadata information for NotebookService.CreateNotebookExecutionJob.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry:
      properties:
        iouScore:
          type: number
          description: >-
            The intersection-over-union score. The measure of overlap of the
            annotation's category mask with ground truth category mask on the
            DataItem.
          format: float
        confidenceThreshold:
          format: float
          type: number
          description: >-
            Metrics are computed with an assumption that the model never returns
            predictions with score lower than this value.
        confusionMatrix:
          description: Confusion matrix for the given confidence threshold.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
        diceScoreCoefficient:
          format: float
          type: number
          description: DSC or the F1 score, The harmonic mean of recall and precision.
        precision:
          type: number
          description: Precision for the given confidence threshold.
          format: float
        recall:
          format: float
          description: Recall (True Positive Rate) for the given confidence threshold.
          type: number
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry
      type: object
    GoogleCloudAiplatformV1PipelineTaskDetail:
      properties:
        executorDetail:
          description: Output only. The detailed execution info.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PipelineTaskExecutorDetail
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - CANCEL_PENDING
            - CANCELLING
            - CANCELLED
            - FAILED
            - SKIPPED
            - NOT_TRIGGERED
          description: Output only. State of the task.
          enumDescriptions:
            - Unspecified.
            - Specifies pending state for the task.
            - Specifies task is being executed.
            - Specifies task completed successfully.
            - Specifies Task cancel is in pending state.
            - Specifies task is being cancelled.
            - Specifies task was cancelled.
            - Specifies task failed.
            - Specifies task was skipped due to cache hit.
            - >-
              Specifies that the task was not triggered because the task's
              trigger policy is not satisfied. The trigger policy is specified
              in the `condition` field of PipelineJob.pipeline_spec.
          readOnly: true
          type: string
        outputs:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetailArtifactList
          description: Output only. The runtime output artifacts of the task.
          type: object
          readOnly: true
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
          description: >-
            Output only. The error that occurred during task execution. Only
            populated when the task's state is FAILED or CANCELLED.
        inputs:
          description: Output only. The runtime input artifacts of the task.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetailArtifactList
          readOnly: true
          type: object
        parentTaskId:
          format: int64
          description: >-
            Output only. The id of the parent task if the task is within a
            component scope. Empty if the task is at the root level.
          type: string
          readOnly: true
        startTime:
          format: google-datetime
          description: Output only. Task start time.
          readOnly: true
          type: string
        execution:
          readOnly: true
          description: Output only. The execution metadata of the task.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
        endTime:
          readOnly: true
          description: Output only. Task end time.
          format: google-datetime
          type: string
        taskName:
          description: >-
            Output only. The user specified name of the task that is defined in
            pipeline_spec.
          readOnly: true
          type: string
        taskId:
          readOnly: true
          type: string
          format: int64
          description: Output only. The system generated ID of the task.
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Task create time.
        pipelineTaskStatus:
          type: array
          readOnly: true
          description: >-
            Output only. A list of task status. This field keeps a record of
            task status evolving over time.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus
      description: The runtime detail of a task execution.
      type: object
      id: GoogleCloudAiplatformV1PipelineTaskDetail
    GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec:
      description: Value specification for a parameter in `INTEGER` type.
      type: object
      id: GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec
      properties:
        defaultValue:
          format: int64
          description: >-
            A default value for an `INTEGER` parameter that is assumed to be a
            relatively good starting point. Unset value signals that there is no
            offered starting point. Currently only supported by the Vertex AI
            Vizier service. Not supported by HyperparameterTuningJob or
            TrainingPipeline.
          type: string
        maxValue:
          type: string
          format: int64
          description: Required. Inclusive maximum value of the parameter.
        minValue:
          format: int64
          description: Required. Inclusive minimum value of the parameter.
          type: string
    GoogleCloudAiplatformV1ResourceRuntime:
      id: GoogleCloudAiplatformV1ResourceRuntime
      properties:
        accessUris:
          type: object
          readOnly: true
          description: >-
            Output only. URIs for user to connect to the Cluster. Example: {
            "RAY_HEAD_NODE_INTERNAL_IP": "head-node-IP:10001"
            "RAY_DASHBOARD_URI": "ray-dashboard-address:8888" }
          additionalProperties:
            type: string
      type: object
      description: Persistent Cluster runtime information as output
    GoogleCloudAiplatformV1SearchMigratableResourcesResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            The standard next-page token. The migratable_resources may not fill
            page_size in SearchMigratableResourcesRequest even when there are
            subsequent pages.
        migratableResources:
          type: array
          description: >-
            All migratable resources that can be migrated to the location
            specified in the request.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MigratableResource'
      description: Response message for MigrationService.SearchMigratableResources.
      id: GoogleCloudAiplatformV1SearchMigratableResourcesResponse
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines:
      id: GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines
      type: object
      description: Open fine tuning pipelines.
      properties:
        fineTuningPipelines:
          description: Required. Regional resource references to fine tuning pipelines.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
          type: array
    GoogleCloudAiplatformV1ComputeTokensRequest:
      id: GoogleCloudAiplatformV1ComputeTokensRequest
      type: object
      properties:
        instances:
          description: >-
            Optional. The instances that are the input to token computing API
            call. Schema is identical to the prediction schema of the text
            model, even for the non-text models, like chat models, or Codey
            models.
          type: array
          items:
            type: any
        model:
          type: string
          description: >-
            Optional. The name of the publisher model requested to serve the
            prediction. Format:
            projects/{project}/locations/{location}/publishers/*/models/*
        contents:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Content'
          description: Optional. Input content.
          type: array
      description: Request message for ComputeTokens RPC call.
    GoogleCloudAiplatformV1SyncFeatureViewResponse:
      properties:
        featureViewSync:
          type: string
          description: >-
            Format:
            `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`
      id: GoogleCloudAiplatformV1SyncFeatureViewResponse
      description: Response message for FeatureOnlineStoreAdminService.SyncFeatureView.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation
      properties:
        columnName:
          type: string
        timeFormat:
          description: >-
            The format in which that time field is expressed. The time_format
            must either be one of: * `unix-seconds` * `unix-milliseconds` *
            `unix-microseconds` * `unix-nanoseconds` (for respectively number of
            seconds, milliseconds, microseconds and nanoseconds since start of
            the Unix epoch); or be written in `strftime` syntax. If time_format
            is not set, then the default format is RFC 3339 `date-time` format,
            where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
          type: string
      description: >-
        Training pipeline will perform following transformation functions. *
        Apply the transformation functions for Numerical columns. * Determine
        the year, month, day,and weekday. Treat each value from the timestamp as
        a Categorical column. * Invalid numerical values (for example, values
        that fall outside of a typical timestamp range, or are extreme values)
        receive no special treatment and are not removed.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassification:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassification
      type: object
      properties:
        inputs:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata
          description: The metadata information.
      description: >-
        A TrainingJob that trains and uploads an AutoML Image Classification
        Model.
    GoogleCloudAiplatformV1CompleteTrialRequest:
      description: Request message for VizierService.CompleteTrial.
      properties:
        trialInfeasible:
          description: >-
            Optional. True if the Trial cannot be run with the given Parameter,
            and final_measurement will be ignored.
          type: boolean
        finalMeasurement:
          description: >-
            Optional. If provided, it will be used as the completed Trial's
            final_measurement; Otherwise, the service will auto-select a
            previously reported measurement as the final-measurement
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Measurement'
        infeasibleReason:
          type: string
          description: >-
            Optional. A human readable reason why the trial was infeasible. This
            should only be provided if `trial_infeasible` is true.
      type: object
      id: GoogleCloudAiplatformV1CompleteTrialRequest
    GoogleCloudAiplatformV1FeatureGroupBigQuery:
      id: GoogleCloudAiplatformV1FeatureGroupBigQuery
      type: object
      properties:
        timeSeries:
          description: >-
            Optional. If the source is a time-series source, this can be set to
            control how downstream sources (ex: FeatureView ) will treat
            time-series sources. If not set, will treat the source as a
            time-series source with `feature_timestamp` as timestamp column and
            no scan boundary.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureGroupBigQueryTimeSeries
        staticDataSource:
          description: Optional. Set if the data source is not a time-series.
          type: boolean
        entityIdColumns:
          type: array
          description: >-
            Optional. Columns to construct entity_id / row keys. If not provided
            defaults to `entity_id`.
          items:
            type: string
        dense:
          description: >-
            Optional. If set, all feature values will be fetched from a single
            row per unique entityId including nulls. If not set, will collapse
            all rows for each unique entityId into a singe row with any non-null
            values if present, if no non-null values are present will sync null.
            ex: If source has schema `(entity_id, feature_timestamp, f0, f1)`
            and the following rows: `(e1, 2020-01-01T10:00:00.123Z, 10, 15)`
            `(e1, 2020-02-01T10:00:00.123Z, 20, null)` If dense is set, `(e1,
            20, null)` is synced to online stores. If dense is not set, `(e1,
            20, 15)` is synced to online stores.
          type: boolean
        bigQuerySource:
          description: >-
            Required. Immutable. The BigQuery source URI that points to either a
            BigQuery Table or View.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQuerySource'
      description: Input source type for BigQuery Tables and Views.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs:
      properties:
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - MOBILE_VERSATILE_1
            - MOBILE_CORAL_VERSATILE_1
            - MOBILE_CORAL_LOW_LATENCY_1
            - MOBILE_JETSON_VERSATILE_1
            - MOBILE_JETSON_LOW_LATENCY_1
          enumDescriptions:
            - Should not be set.
            - >-
              A model best tailored to be used within Google Cloud, and which c
              annot be exported. Default.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) as a
              TensorFlow or TensorFlow Lite model and used on a mobile or edge
              device afterwards.
            - >-
              A versatile model that is meant to be exported (see
              ModelService.ExportModel) and used on a Google Coral device.
            - >-
              A model that trades off quality for low latency, to be exported
              (see ModelService.ExportModel) and used on a Google Coral device.
            - >-
              A versatile model that is meant to be exported (see
              ModelService.ExportModel) and used on an NVIDIA Jetson device.
            - >-
              A model that trades off quality for low latency, to be exported
              (see ModelService.ExportModel) and used on an NVIDIA Jetson
              device.
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs
      type: object
    GoogleCloudAiplatformV1PersistentDiskSpec:
      properties:
        diskSizeGb:
          format: int64
          type: string
          description: Size in GB of the disk (default is 100GB).
        diskType:
          description: >-
            Type of the disk (default is "pd-standard"). Valid values: "pd-ssd"
            (Persistent Disk Solid State Drive) "pd-standard" (Persistent Disk
            Hard Disk Drive) "pd-balanced" (Balanced Persistent Disk)
            "pd-extreme" (Extreme Persistent Disk)
          type: string
      id: GoogleCloudAiplatformV1PersistentDiskSpec
      type: object
      description: Represents the spec of persistent disk options.
    GoogleCloudAiplatformV1PredictResponse:
      description: Response message for PredictionService.Predict.
      id: GoogleCloudAiplatformV1PredictResponse
      type: object
      properties:
        model:
          type: string
          readOnly: true
          description: >-
            Output only. The resource name of the Model which is deployed as the
            DeployedModel that this prediction hits.
        modelDisplayName:
          readOnly: true
          description: >-
            Output only. The display name of the Model which is deployed as the
            DeployedModel that this prediction hits.
          type: string
        metadata:
          readOnly: true
          type: any
          description: >-
            Output only. Request-level metadata returned by the model. The
            metadata type will be dependent upon the model implementation.
        predictions:
          type: array
          description: >-
            The predictions that are the output of the predictions call. The
            schema of any single prediction may be specified via Endpoint's
            DeployedModels' Model's PredictSchemata's prediction_schema_uri.
          items:
            type: any
        deployedModelId:
          type: string
          description: ID of the Endpoint's DeployedModel that served this prediction.
        modelVersionId:
          description: >-
            Output only. The version ID of the Model which is deployed as the
            DeployedModel that this prediction hits.
          type: string
          readOnly: true
    GoogleCloudAiplatformV1ListPipelineJobsResponse:
      description: Response message for PipelineService.ListPipelineJobs
      type: object
      properties:
        pipelineJobs:
          description: List of PipelineJobs in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJob'
          type: array
        nextPageToken:
          type: string
          description: >-
            A token to retrieve the next page of results. Pass to
            ListPipelineJobsRequest.page_token to obtain that page.
      id: GoogleCloudAiplatformV1ListPipelineJobsResponse
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs
      properties:
        modelType:
          enumDescriptions:
            - Should not be set.
            - >-
              A model best tailored to be used within Google Cloud, and which
              cannot be exported. Default.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) as a
              TensorFlow or TensorFlow Lite model and used on a mobile or edge
              device afterwards.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) to a Jetson
              device afterwards.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - MOBILE_VERSATILE_1
            - MOBILE_JETSON_VERSATILE_1
          type: string
      type: object
    GoogleCloudAiplatformV1ImportFeatureValuesResponse:
      description: Response message for FeaturestoreService.ImportFeatureValues.
      properties:
        importedFeatureValueCount:
          type: string
          format: int64
          description: Number of Feature values that have been imported by the operation.
        invalidRowCount:
          type: string
          description: >-
            The number of rows in input source that weren't imported due to
            either * Not having any featureValues. * Having a null entityId. *
            Having a null timestamp. * Not being parsable (applicable for CSV
            sources).
          format: int64
        importedEntityCount:
          description: Number of entities that have been imported by the operation.
          type: string
          format: int64
        timestampOutsideRetentionRowsCount:
          description: >-
            The number rows that weren't ingested due to having feature
            timestamps outside the retention boundary.
          type: string
          format: int64
      id: GoogleCloudAiplatformV1ImportFeatureValuesResponse
      type: object
    GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse:
      description: >-
        Response message for
        JobService.SearchModelDeploymentMonitoringStatsAnomalies.
      properties:
        nextPageToken:
          type: string
          description: >-
            The page token that can be used by the next
            JobService.SearchModelDeploymentMonitoringStatsAnomalies call.
        monitoringStats:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies
          description: >-
            Stats retrieved for requested objectives. There are at most 1000
            ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.prediction_stats
            in the response.
          type: array
      id: >-
        GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse
      type: object
    GoogleCloudAiplatformV1GenerateContentResponseUsageMetadata:
      properties:
        candidatesTokenCount:
          format: int32
          description: Number of tokens in the response(s).
          type: integer
        promptTokenCount:
          description: >-
            Number of tokens in the request. When `cached_content` is set, this
            is still the total effective prompt size meaning this includes the
            number of tokens in the cached content.
          type: integer
          format: int32
        totalTokenCount:
          type: integer
          format: int32
          description: Total token count for prompt and response candidates.
      type: object
      description: Usage metadata about response(s).
      id: GoogleCloudAiplatformV1GenerateContentResponseUsageMetadata
    GoogleCloudAiplatformV1StratifiedSplit:
      id: GoogleCloudAiplatformV1StratifiedSplit
      description: >-
        Assigns input data to the training, validation, and test sets so that
        the distribution of values found in the categorical column (as specified
        by the `key` field) is mirrored within each split. The fraction values
        determine the relative sizes of the splits. For example, if the
        specified column has three values, with 50% of the rows having value
        "A", 25% value "B", and 25% value "C", and the split fractions are
        specified as 80/10/10, then the training set will constitute 80% of the
        training data, with about 50% of the training set rows having the value
        "A" for the specified column, about 25% having the value "B", and about
        25% having the value "C". Only the top 500 occurring values are used;
        any values not in the top 500 values are randomly assigned to a split.
        If less than three rows contain a specific value, those rows are
        randomly assigned. Supported only for tabular Datasets.
      properties:
        trainingFraction:
          type: number
          description: >-
            The fraction of the input data that is to be used to train the
            Model.
          format: double
        validationFraction:
          type: number
          format: double
          description: >-
            The fraction of the input data that is to be used to validate the
            Model.
        testFraction:
          format: double
          type: number
          description: >-
            The fraction of the input data that is to be used to evaluate the
            Model.
        key:
          type: string
          description: >-
            Required. The key is a name of one of the Dataset's data columns.
            The key provided must be for a categorical column.
      type: object
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig:
      properties:
        bigquerySource:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource
      id: GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig
      description: >-
        The tables Dataset's data source. The Dataset doesn't store the data
        directly, but only pointer(s) to its data.
      type: object
    GoogleCloudAiplatformV1FeatureOnlineStore:
      properties:
        name:
          type: string
          description: >-
            Identifier. Name of the FeatureOnlineStore. Format:
            `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
        state:
          description: Output only. State of the featureOnlineStore.
          readOnly: true
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              State when the featureOnlineStore configuration is not being
              updated and the fields reflect the current configuration of the
              featureOnlineStore. The featureOnlineStore is usable in this
              state.
            - >-
              The state of the featureOnlineStore configuration when it is being
              updated. During an update, the fields reflect either the original
              configuration or the updated configuration of the
              featureOnlineStore. The featureOnlineStore is still usable in this
              state.
          enum:
            - STATE_UNSPECIFIED
            - STABLE
            - UPDATING
          type: string
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Optional. Customer-managed encryption key spec for data storage. If
            set, online store will be secured by this key.
        satisfiesPzs:
          readOnly: true
          description: Output only. Reserved for future use.
          type: boolean
        dedicatedServingEndpoint:
          description: >-
            Optional. The dedicated serving endpoint for this
            FeatureOnlineStore, which is different from common Vertex service
            endpoint.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStoreDedicatedServingEndpoint
        bigtable:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStoreBigtable
          description: >-
            Contains settings for the Cloud Bigtable instance that will be
            created to serve featureValues for all FeatureViews under this
            FeatureOnlineStore.
        labels:
          type: object
          description: >-
            Optional. The labels with user-defined metadata to organize your
            FeatureOnlineStore. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. See https://goo.gl/xmQnxf for more information on and
            examples of labels. No more than 64 user labels can be associated
            with one FeatureOnlineStore(System labels are excluded)." System
            reserved label keys are prefixed with "aiplatform.googleapis.com/"
            and are immutable.
          additionalProperties:
            type: string
        optimized:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStoreOptimized
          description: >-
            Contains settings for the Optimized store that will be created to
            serve featureValues for all FeatureViews under this
            FeatureOnlineStore. When choose Optimized storage type, need to set
            PrivateServiceConnectConfig.enable_private_service_connect to use
            private endpoint. Otherwise will use public endpoint by default.
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Timestamp when this FeatureOnlineStore was created.
        satisfiesPzi:
          description: Output only. Reserved for future use.
          type: boolean
          readOnly: true
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: >-
            Output only. Timestamp when this FeatureOnlineStore was last
            updated.
        etag:
          type: string
          description: >-
            Optional. Used to perform consistent read-modify-write updates. If
            not set, a blind "overwrite" update happens.
      id: GoogleCloudAiplatformV1FeatureOnlineStore
      type: object
      description: >-
        Vertex AI Feature Online Store provides a centralized repository for
        serving ML features and embedding indexes at low latency. The Feature
        Online Store is a top-level container.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation:
      properties:
        columnName:
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation
      description: >-
        Training pipeline will perform following transformation functions. * The
        categorical string as is--no change to case, punctuation, spelling,
        tense, and so on. * Convert the category name to a dictionary lookup
        index and generate an embedding for each index. * Categories that appear
        less than 5 times in the training dataset are treated as the "unknown"
        category. The "unknown" category gets its own special lookup index and
        resulting embedding.
      type: object
    GoogleCloudAiplatformV1PredictSchemata:
      type: object
      description: >-
        Contains the schemata used in Model's predictions and explanations via
        PredictionService.Predict, PredictionService.Explain and
        BatchPredictionJob.
      id: GoogleCloudAiplatformV1PredictSchemata
      properties:
        parametersSchemaUri:
          description: >-
            Immutable. Points to a YAML file stored on Google Cloud Storage
            describing the parameters of prediction and explanation via
            PredictRequest.parameters, ExplainRequest.parameters and
            BatchPredictionJob.model_parameters. The schema is defined as an
            OpenAPI 3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            AutoML Models always have this field populated by Vertex AI, if no
            parameters are supported, then it is set to an empty string. Note:
            The URI given on output will be immutable and probably different,
            including the URI scheme, than the one given on input. The output
            URI will point to a location where the user only has a read access.
          type: string
        predictionSchemaUri:
          description: >-
            Immutable. Points to a YAML file stored on Google Cloud Storage
            describing the format of a single prediction produced by this Model,
            which are returned via PredictResponse.predictions,
            ExplainResponse.explanations, and BatchPredictionJob.output_config.
            The schema is defined as an OpenAPI 3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            AutoML Models always have this field populated by Vertex AI. Note:
            The URI given on output will be immutable and probably different,
            including the URI scheme, than the one given on input. The output
            URI will point to a location where the user only has a read access.
          type: string
        instanceSchemaUri:
          type: string
          description: >-
            Immutable. Points to a YAML file stored on Google Cloud Storage
            describing the format of a single instance, which are used in
            PredictRequest.instances, ExplainRequest.instances and
            BatchPredictionJob.input_config. The schema is defined as an OpenAPI
            3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            AutoML Models always have this field populated by Vertex AI. Note:
            The URI given on output will be immutable and probably different,
            including the URI scheme, than the one given on input. The output
            URI will point to a location where the user only has a read access.
    GoogleCloudAiplatformV1BleuInput:
      properties:
        metricSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BleuSpec'
          description: Required. Spec for bleu score metric.
        instances:
          description: Required. Repeated bleu instances.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1BleuInstance'
      description: Input for bleu metric.
      id: GoogleCloudAiplatformV1BleuInput
      type: object
    GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair:
      properties:
        name:
          type: string
          description: Feature short name.
        value:
          description: Feature value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValue'
      id: >-
        GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair
      type: object
      description: Feature name & value pair.
    GoogleCloudAiplatformV1UpdateIndexOperationMetadata:
      id: GoogleCloudAiplatformV1UpdateIndexOperationMetadata
      type: object
      description: Runtime operation information for IndexService.UpdateIndex.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
        nearestNeighborSearchOperationMetadata:
          description: >-
            The operation metadata with regard to Matching Engine Index
            operation.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata
    GoogleCloudAiplatformV1GenerateContentResponse:
      description: Response message for [PredictionService.GenerateContent].
      properties:
        candidates:
          description: Output only. Generated candidates.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Candidate'
          type: array
          readOnly: true
        promptFeedback:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback
          description: >-
            Output only. Content filter results for a prompt sent in the
            request. Note: Sent only in the first stream chunk. Only happens
            when no candidates were generated due to content violations.
          readOnly: true
        usageMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1GenerateContentResponseUsageMetadata
          description: Usage metadata about the response(s).
      id: GoogleCloudAiplatformV1GenerateContentResponse
      type: object
    GoogleCloudAiplatformV1ExamplesRestrictionsNamespace:
      properties:
        deny:
          items:
            type: string
          description: The list of deny tags.
          type: array
        namespaceName:
          type: string
          description: The namespace name.
        allow:
          description: The list of allowed tags.
          type: array
          items:
            type: string
      id: GoogleCloudAiplatformV1ExamplesRestrictionsNamespace
      type: object
      description: Restrictions namespace for example-based explanations overrides.
    GoogleCloudAiplatformV1PurgeExecutionsMetadata:
      id: GoogleCloudAiplatformV1PurgeExecutionsMetadata
      type: object
      properties:
        genericMetadata:
          description: Operation metadata for purging Executions.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      description: Details of operations that perform MetadataService.PurgeExecutions.
    GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport:
      properties:
        snapshotTime:
          description: >-
            Exports Feature values as of this timestamp. If not set, retrieve
            values as of now. Timestamp, if present, must not have higher than
            millisecond precision.
          format: google-datetime
          type: string
        startTime:
          type: string
          description: >-
            Excludes Feature values with feature generation timestamp before
            this timestamp. If not set, retrieve oldest values kept in Feature
            Store. Timestamp, if present, must not have higher than millisecond
            precision.
          format: google-datetime
      type: object
      description: >-
        Describes exporting the latest Feature values of all entities of the
        EntityType between [start_time, snapshot_time].
      id: GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport
    GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization:
      id: GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization
      type: object
      description: Visualization configurations for image explanation.
      properties:
        clipPercentUpperbound:
          format: float
          type: number
          description: >-
            Excludes attributions above the specified percentile from the
            highlighted areas. Using the clip_percent_upperbound and
            clip_percent_lowerbound together can be useful for filtering out
            noise and making it easier to see areas of strong attribution.
            Defaults to 99.9.
        colorMap:
          type: string
          enum:
            - COLOR_MAP_UNSPECIFIED
            - PINK_GREEN
            - VIRIDIS
            - RED
            - GREEN
            - RED_GREEN
            - PINK_WHITE_GREEN
          enumDescriptions:
            - Should not be used.
            - 'Positive: green. Negative: pink.'
            - >-
              Viridis color map: A perceptually uniform color mapping which is
              easier to see by those with colorblindness and progresses from
              yellow to green to blue. Positive: yellow. Negative: blue.
            - 'Positive: red. Negative: red.'
            - 'Positive: green. Negative: green.'
            - 'Positive: green. Negative: red.'
            - PiYG palette.
          description: >-
            The color scheme used for the highlighted areas. Defaults to
            PINK_GREEN for Integrated Gradients attribution, which shows
            positive attributions in green and negative in pink. Defaults to
            VIRIDIS for XRAI attribution, which highlights the most influential
            regions in yellow and the least influential in blue.
        polarity:
          enumDescriptions:
            - Default value. This is the same as POSITIVE.
            - >-
              Highlights the pixels/outlines that were most influential to the
              model's prediction.
            - >-
              Setting polarity to negative highlights areas that does not lead
              to the models's current prediction.
            - Shows both positive and negative attributions.
          description: >-
            Whether to only highlight pixels with positive contributions,
            negative or both. Defaults to POSITIVE.
          enum:
            - POLARITY_UNSPECIFIED
            - POSITIVE
            - NEGATIVE
            - BOTH
          type: string
        overlayType:
          enumDescriptions:
            - Default value. This is the same as NONE.
            - No overlay.
            - The attributions are shown on top of the original image.
            - >-
              The attributions are shown on top of grayscaled version of the
              original image.
            - >-
              The attributions are used as a mask to reveal predictive parts of
              the image and hide the un-predictive parts.
          enum:
            - OVERLAY_TYPE_UNSPECIFIED
            - NONE
            - ORIGINAL
            - GRAYSCALE
            - MASK_BLACK
          type: string
          description: >-
            How the original image is displayed in the visualization. Adjusting
            the overlay can help increase visual clarity if the original image
            makes it difficult to view the visualization. Defaults to NONE.
        clipPercentLowerbound:
          type: number
          description: >-
            Excludes attributions below the specified percentile, from the
            highlighted areas. Defaults to 62.
          format: float
        type:
          type: string
          description: >-
            Type of the image visualization. Only applicable to Integrated
            Gradients attribution. OUTLINES shows regions of attribution, while
            PIXELS shows per-pixel attribution. Defaults to OUTLINES.
          enumDescriptions:
            - Should not be used.
            - Shows which pixel contributed to the image prediction.
            - >-
              Shows which region contributed to the image prediction by
              outlining the region.
          enum:
            - TYPE_UNSPECIFIED
            - PIXELS
            - OUTLINES
    GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError:
      id: GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError
      properties:
        sourceGcsUri:
          type: string
          description: Cloud Storage URI pointing to the original file in user's bucket.
        errorType:
          enumDescriptions:
            - Default, shall not be used.
            - The record is empty.
            - Invalid json format.
            - Invalid csv format.
            - Invalid avro format.
            - The embedding id is not valid.
            - >-
              The size of the dense embedding vectors does not match with the
              specified dimension.
            - The `namespace` field is missing.
            - >-
              Generic catch-all error. Only used for validation failure where
              the root cause cannot be easily retrieved programmatically.
            - There are multiple restricts with the same `namespace` value.
            - Numeric restrict has operator specified in datapoint.
            - Numeric restrict has multiple values specified.
            - Numeric restrict has invalid numeric value specified.
            - File is not in UTF_8 format.
            - Error parsing sparse dimensions field.
            - Token restrict value is invalid.
            - Invalid sparse embedding.
            - Invalid dense embedding.
          description: The error type of this record.
          type: string
          enum:
            - ERROR_TYPE_UNSPECIFIED
            - EMPTY_LINE
            - INVALID_JSON_SYNTAX
            - INVALID_CSV_SYNTAX
            - INVALID_AVRO_SYNTAX
            - INVALID_EMBEDDING_ID
            - EMBEDDING_SIZE_MISMATCH
            - NAMESPACE_MISSING
            - PARSING_ERROR
            - DUPLICATE_NAMESPACE
            - OP_IN_DATAPOINT
            - MULTIPLE_VALUES
            - INVALID_NUMERIC_VALUE
            - INVALID_ENCODING
            - INVALID_SPARSE_DIMENSIONS
            - INVALID_TOKEN_VALUE
            - INVALID_SPARSE_EMBEDDING
            - INVALID_EMBEDDING
        errorMessage:
          description: >-
            A human-readable message that is shown to the user to help them fix
            the error. Note that this message may change from time to time, your
            code should check against error_type as the source of truth.
          type: string
        embeddingId:
          type: string
          description: Empty if the embedding id is failed to parse.
        rawRecord:
          type: string
          description: The original content of this record.
      type: object
    GoogleCloudAiplatformV1CreateTensorboardOperationMetadata:
      id: GoogleCloudAiplatformV1CreateTensorboardOperationMetadata
      properties:
        genericMetadata:
          description: Operation metadata for Tensorboard.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      type: object
      description: Details of operations that perform create Tensorboard.
    GoogleCloudAiplatformV1ToolCallValidInput:
      type: object
      description: Input for tool call valid metric.
      id: GoogleCloudAiplatformV1ToolCallValidInput
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ToolCallValidInstance'
          description: Required. Repeated tool call valid instances.
        metricSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ToolCallValidSpec'
          description: Required. Spec for tool call valid metric.
    GoogleCloudAiplatformV1NearestNeighborQueryParameters:
      id: GoogleCloudAiplatformV1NearestNeighborQueryParameters
      properties:
        leafNodesSearchFraction:
          format: double
          type: number
          description: >-
            Optional. The fraction of the number of leaves to search, set at
            query time allows user to tune search performance. This value
            increase result in both search accuracy and latency increase. The
            value should be between 0.0 and 1.0.
        approximateNeighborCandidates:
          format: int32
          description: >-
            Optional. The number of neighbors to find via approximate search
            before exact reordering is performed; if set, this value must be >
            neighbor_count.
          type: integer
      description: >-
        Parameters that can be overrided in each query to tune query latency and
        recall.
      type: object
    GoogleCloudAiplatformV1IndexPrivateEndpoints:
      id: GoogleCloudAiplatformV1IndexPrivateEndpoints
      properties:
        matchGrpcAddress:
          readOnly: true
          type: string
          description: Output only. The ip address used to send match gRPC requests.
        pscAutomatedEndpoints:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PscAutomatedEndpoints'
          description: >-
            Output only. PscAutomatedEndpoints is populated if private service
            connect is enabled if PscAutomatedConfig is set.
        serviceAttachment:
          readOnly: true
          type: string
          description: >-
            Output only. The name of the service attachment resource. Populated
            if private service connect is enabled.
      type: object
      description: >-
        IndexPrivateEndpoints proto is used to provide paths for users to send
        requests via private endpoints (e.g. private service access, private
        service connect). To send request via private service access, use
        match_grpc_address. To send request via private service connect, use
        service_attachment.
    GoogleCloudAiplatformV1CancelPipelineJobRequest:
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1CancelPipelineJobRequest
      description: Request message for PipelineService.CancelPipelineJob.
    GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion:
      id: GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion
      description: Represents one model Version in ml.googleapis.com.
      properties:
        endpoint:
          type: string
          description: >-
            The ml.googleapis.com endpoint that this model Version currently
            lives in. Example values: * ml.googleapis.com *
            us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com *
            asia-east1-ml.googleapis.com
        version:
          description: >-
            Full resource name of ml engine model Version. Format:
            `projects/{project}/models/{model}/versions/{version}`.
          type: string
      type: object
    GoogleCloudAiplatformV1AddContextChildrenRequest:
      id: GoogleCloudAiplatformV1AddContextChildrenRequest
      properties:
        childContexts:
          items:
            type: string
          description: The resource names of the child Contexts.
          type: array
      description: Request message for MetadataService.AddContextChildren.
      type: object
    GoogleCloudAiplatformV1ExactMatchInput:
      properties:
        instances:
          type: array
          description: Required. Repeated exact match instances.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ExactMatchInstance'
        metricSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExactMatchSpec'
          description: Required. Spec for exact match metric.
      type: object
      id: GoogleCloudAiplatformV1ExactMatchInput
      description: Input for exact match metric.
    GoogleCloudAiplatformV1StudyTimeConstraint:
      id: GoogleCloudAiplatformV1StudyTimeConstraint
      properties:
        maxDuration:
          type: string
          description: Counts the wallclock time passed since the creation of this Study.
          format: google-duration
        endTime:
          description: Compares the wallclock time to this time. Must use UTC timezone.
          format: google-datetime
          type: string
      type: object
      description: Time-based Constraint for Study
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentiment:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentiment
      type: object
      properties:
        inputs:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs
          description: The input parameters of this TrainingJob.
      description: A TrainingJob that trains and uploads an AutoML Text Sentiment Model.
    GoogleCloudAiplatformV1ExactMatchInstance:
      description: Spec for exact match instance.
      type: object
      properties:
        prediction:
          type: string
          description: Required. Output of the evaluated model.
        reference:
          description: Required. Ground truth used to compare against the prediction.
          type: string
      id: GoogleCloudAiplatformV1ExactMatchInstance
    GoogleCloudAiplatformV1CreatePipelineJobRequest:
      type: object
      description: Request message for PipelineService.CreatePipelineJob.
      properties:
        parent:
          description: >-
            Required. The resource name of the Location to create the
            PipelineJob in. Format: `projects/{project}/locations/{location}`
          type: string
        pipelineJobId:
          type: string
          description: >-
            The ID to use for the PipelineJob, which will become the final
            component of the PipelineJob name. If not provided, an ID will be
            automatically generated. This value should be less than 128
            characters, and valid characters are `/a-z-/`.
        pipelineJob:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJob'
          description: Required. The PipelineJob to create.
      id: GoogleCloudAiplatformV1CreatePipelineJobRequest
    GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        deploymentResourcePools:
          description: The DeploymentResourcePools from the specified location.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeploymentResourcePool'
          type: array
      description: Response message for ListDeploymentResourcePools method.
      id: GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse
    GoogleCloudAiplatformV1Neighbor:
      properties:
        neighborId:
          readOnly: true
          description: Output only. The neighbor id.
          type: string
        neighborDistance:
          format: double
          description: Output only. The neighbor distance.
          type: number
          readOnly: true
      id: GoogleCloudAiplatformV1Neighbor
      description: Neighbors for example-based explanations.
      type: object
    GoogleCloudAiplatformV1UpdatePersistentResourceOperationMetadata:
      description: Details of operations that perform update PersistentResource.
      id: GoogleCloudAiplatformV1UpdatePersistentResourceOperationMetadata
      type: object
      properties:
        progressMessage:
          description: Progress Message for Update LRO
          type: string
        genericMetadata:
          description: Operation metadata for PersistentResource.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1BlurBaselineConfig:
      type: object
      id: GoogleCloudAiplatformV1BlurBaselineConfig
      description: >-
        Config for blur baseline. When enabled, a linear path from the maximally
        blurred image to the input image is created. Using a blurred baseline
        instead of zero (black image) is motivated by the BlurIG approach
        explained here: https://arxiv.org/abs/2004.03383
      properties:
        maxBlurSigma:
          format: float
          description: >-
            The standard deviation of the blur kernel for the blurred baseline.
            The same blurring parameter is used for both the height and the
            width dimension. If not set, the method defaults to the zero (i.e.
            black for images) baseline.
          type: number
    GoogleCloudAiplatformV1DeleteFeatureValuesResponse:
      description: Response message for FeaturestoreService.DeleteFeatureValues.
      type: object
      properties:
        selectTimeRangeAndFeature:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature
          description: Response for request specifying time range and feature
        selectEntity:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity
          description: Response for request specifying the entities to delete
      id: GoogleCloudAiplatformV1DeleteFeatureValuesResponse
    GoogleCloudAiplatformV1StudySpec:
      description: Represents specification of a Study.
      properties:
        parameters:
          description: Required. The set of parameters to tune.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpec'
          type: array
        measurementSelectionType:
          enum:
            - MEASUREMENT_SELECTION_TYPE_UNSPECIFIED
            - LAST_MEASUREMENT
            - BEST_MEASUREMENT
          type: string
          enumDescriptions:
            - Will be treated as LAST_MEASUREMENT.
            - Use the last measurement reported.
            - Use the best measurement reported.
          description: Describe which measurement selection type will be used
        medianAutomatedStoppingSpec:
          description: The automated early stopping spec using median rule.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec
        algorithm:
          enum:
            - ALGORITHM_UNSPECIFIED
            - GRID_SEARCH
            - RANDOM_SEARCH
          enumDescriptions:
            - >-
              The default algorithm used by Vertex AI for [hyperparameter
              tuning](https://cloud.google.com/vertex-ai/docs/training/hyperparameter-tuning-overview)
              and [Vertex AI
              Vizier](https://cloud.google.com/vertex-ai/docs/vizier).
            - >-
              Simple grid search within the feasible space. To use grid search,
              all parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`.
            - Simple random search within the feasible space.
          description: The search algorithm specified for the Study.
          type: string
        decayCurveStoppingSpec:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec
          description: The automated early stopping spec using decay curve rule.
        observationNoise:
          enumDescriptions:
            - The default noise level chosen by Vertex AI.
            - >-
              Vertex AI assumes that the objective function is (nearly)
              perfectly reproducible, and will never repeat the same Trial
              parameters.
            - >-
              Vertex AI will estimate the amount of noise in metric evaluations,
              it may repeat the same Trial parameters more than once.
          enum:
            - OBSERVATION_NOISE_UNSPECIFIED
            - LOW
            - HIGH
          type: string
          description: >-
            The observation noise level of the study. Currently only supported
            by the Vertex AI Vizier service. Not supported by
            HyperparameterTuningJob or TrainingPipeline.
        convexAutomatedStoppingSpec:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec
          description: The automated early stopping spec using convex stopping rule.
        metrics:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecMetricSpec'
          type: array
          description: Required. Metric specs for the Study.
        studyStoppingConfig:
          description: >-
            Conditions for automated stopping of a Study. Enable automated
            stopping by configuring at least one condition.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecStudyStoppingConfig
      id: GoogleCloudAiplatformV1StudySpec
      type: object
    GoogleCloudAiplatformV1EvaluateInstancesRequest:
      type: object
      description: Request message for EvaluationService.EvaluateInstances.
      id: GoogleCloudAiplatformV1EvaluateInstancesRequest
      properties:
        pairwiseQuestionAnsweringQualityInput:
          description: Input for pairwise question answering quality metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInput
        exactMatchInput:
          description: >-
            Auto metric instances. Instances and metric spec for exact match
            metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExactMatchInput'
        toolNameMatchInput:
          description: Input for tool name match metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ToolNameMatchInput'
        summarizationVerbosityInput:
          description: Input for summarization verbosity metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationVerbosityInput
        coherenceInput:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CoherenceInput'
          description: Input for coherence metric.
        questionAnsweringQualityInput:
          description: Input for question answering quality metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringQualityInput
        groundednessInput:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GroundednessInput'
          description: Input for groundedness metric.
        bleuInput:
          description: Instances and metric spec for bleu metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BleuInput'
        summarizationHelpfulnessInput:
          description: Input for summarization helpfulness metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationHelpfulnessInput
        questionAnsweringRelevanceInput:
          description: Input for question answering relevance metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringRelevanceInput
        fulfillmentInput:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FulfillmentInput'
          description: Input for fulfillment metric.
        pointwiseMetricInput:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PointwiseMetricInput'
          description: Input for pointwise metric.
        questionAnsweringCorrectnessInput:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInput
          description: Input for question answering correctness metric.
        toolParameterKvMatchInput:
          description: Input for tool parameter key value match metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ToolParameterKVMatchInput
        pairwiseSummarizationQualityInput:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PairwiseSummarizationQualityInput
          description: Input for pairwise summarization quality metric.
        pairwiseMetricInput:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PairwiseMetricInput'
          description: Input for pairwise metric.
        questionAnsweringHelpfulnessInput:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInput
          description: Input for question answering helpfulness metric.
        fluencyInput:
          description: >-
            LLM-based metric instance. General text generation metrics,
            applicable to other categories. Input for fluency metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FluencyInput'
        summarizationQualityInput:
          description: Input for summarization quality metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationQualityInput
        toolCallValidInput:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ToolCallValidInput'
          description: Tool call metric instances. Input for tool call valid metric.
        toolParameterKeyMatchInput:
          description: Input for tool parameter key match metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ToolParameterKeyMatchInput
        safetyInput:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SafetyInput'
          description: Input for safety metric.
        rougeInput:
          description: Instances and metric spec for rouge metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1RougeInput'
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec:
      type: object
      properties:
        metric:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec
          description: >-
            Metric specs for the NAS job. Validation for this field is done at
            `multi_trial_algorithm_spec` field.
        trainTrialSpec:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec
          description: >-
            Spec for train trials. Top N
            [TrainTrialSpec.max_parallel_trial_count] search trials will be
            trained for every M [TrainTrialSpec.frequency] trials searched.
        multiTrialAlgorithm:
          enumDescriptions:
            - Defaults to `REINFORCEMENT_LEARNING`.
            - >-
              The Reinforcement Learning Algorithm for Multi-trial Neural
              Architecture Search (NAS).
            - >-
              The Grid Search Algorithm for Multi-trial Neural Architecture
              Search (NAS).
          type: string
          enum:
            - MULTI_TRIAL_ALGORITHM_UNSPECIFIED
            - REINFORCEMENT_LEARNING
            - GRID_SEARCH
          description: >-
            The multi-trial Neural Architecture Search (NAS) algorithm type.
            Defaults to `REINFORCEMENT_LEARNING`.
        searchTrialSpec:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec
          description: Required. Spec for search trials.
      id: GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec
      description: The spec of multi-trial Neural Architecture Search (NAS).
    GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity:
      properties:
        offlineStorageDeletedEntityRowCount:
          format: int64
          type: string
          description: >-
            The count of deleted entity rows in the offline storage. Each row
            corresponds to the combination of an entity ID and a timestamp. One
            entity ID can have multiple rows in the offline storage.
        onlineStorageDeletedEntityCount:
          description: >-
            The count of deleted entities in the online storage. Each entity ID
            corresponds to one entity.
          type: string
          format: int64
      id: GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity
      description: Response message if the request uses the SelectEntity option.
      type: object
    GoogleCloudAiplatformV1NasJob:
      description: Represents a Neural Architecture Search (NAS) job.
      id: GoogleCloudAiplatformV1NasJob
      properties:
        name:
          description: Output only. Resource name of the NasJob.
          type: string
          readOnly: true
        nasJobSpec:
          description: Required. The specification of a NasJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJobSpec'
        state:
          description: Output only. The detailed state of the job.
          type: string
          readOnly: true
          enumDescriptions:
            - The job state is unspecified.
            - >-
              The job has been just created or resumed and processing has not
              yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - >-
              The job is being cancelled. From this state the job may only go to
              either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
              `JOB_STATE_CANCELLED`.
            - The job has been cancelled.
            - The job has been stopped, and can be resumed.
            - The job has expired.
            - >-
              The job is being updated. Only jobs in the `RUNNING` state can be
              updated. After updating, the job goes back to the `RUNNING` state.
            - >-
              The job is partially succeeded, some results may be missing due to
              errors.
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
        endTime:
          readOnly: true
          description: >-
            Output only. Time when the NasJob entered any of the following
            states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`,
            `JOB_STATE_CANCELLED`.
          format: google-datetime
          type: string
        nasJobOutput:
          description: Output only. Output of the NasJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJobOutput'
          readOnly: true
        enableRestrictedImageTraining:
          description: >-
            Optional. Enable a separation of Custom model training and
            restricted image training for tenant project.
          type: boolean
          deprecated: true
        createTime:
          description: Output only. Time when the NasJob was created.
          format: google-datetime
          type: string
          readOnly: true
        encryptionSpec:
          description: >-
            Customer-managed encryption key options for a NasJob. If this is
            set, then all resources created by the NasJob will be encrypted with
            the provided encryption key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        error:
          readOnly: true
          description: >-
            Output only. Only populated when job's state is JOB_STATE_FAILED or
            JOB_STATE_CANCELLED.
          $ref: '#/components/schemas/GoogleRpcStatus'
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        updateTime:
          description: Output only. Time when the NasJob was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            The labels with user-defined metadata to organize NasJobs. Label
            keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. See
            https://goo.gl/xmQnxf for more information and examples of labels.
        startTime:
          readOnly: true
          type: string
          description: >-
            Output only. Time when the NasJob for the first time entered the
            `JOB_STATE_RUNNING` state.
          format: google-datetime
        displayName:
          description: >-
            Required. The display name of the NasJob. The name can be up to 128
            characters long and can consist of any UTF-8 characters.
          type: string
        satisfiesPzi:
          readOnly: true
          type: boolean
          description: Output only. Reserved for future use.
      type: object
    GoogleCloudAiplatformV1StructFieldValue:
      type: object
      properties:
        value:
          description: The value for this field.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValue'
        name:
          type: string
          description: Name of the field in the struct feature.
      id: GoogleCloudAiplatformV1StructFieldValue
      description: One field of a Struct (or object) type feature value.
    GoogleCloudAiplatformV1CancelNasJobRequest:
      properties: {}
      type: object
      description: Request message for JobService.CancelNasJob.
      id: GoogleCloudAiplatformV1CancelNasJobRequest
    GoogleCloudAiplatformV1ThresholdConfig:
      id: GoogleCloudAiplatformV1ThresholdConfig
      properties:
        value:
          type: number
          format: double
          description: >-
            Specify a threshold value that can trigger the alert. If this
            threshold config is for feature distribution distance: 1. For
            categorical feature, the distribution distance is calculated by
            L-inifinity norm. 2. For numerical feature, the distribution
            distance is calculated by Jensen–Shannon divergence. Each feature
            must have a non-zero threshold if they need to be monitored.
            Otherwise no alert will be triggered for that feature.
      type: object
      description: The config for feature monitoring threshold.
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoActionRecognitionPredictionResult:
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionVideoActionRecognitionPredictionResult
      description: Prediction output format for Video Action Recognition.
      type: object
      properties:
        displayName:
          description: The display name of the AnnotationSpec that had been identified.
          type: string
        id:
          type: string
          description: The resource ID of the AnnotationSpec that had been identified.
        timeSegmentStart:
          format: google-duration
          description: >-
            The beginning, inclusive, of the video's time segment in which the
            AnnotationSpec has been identified. Expressed as a number of seconds
            as measured from the start of the video, with fractions up to a
            microsecond precision, and with "s" appended at the end.
          type: string
        timeSegmentEnd:
          format: google-duration
          description: >-
            The end, exclusive, of the video's time segment in which the
            AnnotationSpec has been identified. Expressed as a number of seconds
            as measured from the start of the video, with fractions up to a
            microsecond precision, and with "s" appended at the end.
          type: string
        confidence:
          format: float
          description: >-
            The Model's confidence in correction of this prediction, higher
            value means higher confidence.
          type: number
    GoogleCloudAiplatformV1MutateDeployedIndexResponse:
      properties:
        deployedIndex:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndex'
          description: The DeployedIndex that had been updated in the IndexEndpoint.
      type: object
      id: GoogleCloudAiplatformV1MutateDeployedIndexResponse
      description: Response message for IndexEndpointService.MutateDeployedIndex.
    GoogleCloudAiplatformV1CompletionStats:
      description: >-
        Success and error statistics of processing multiple entities (for
        example, DataItems or structured data rows) in batch.
      type: object
      id: GoogleCloudAiplatformV1CompletionStats
      properties:
        failedCount:
          description: >-
            Output only. The number of entities for which any error was
            encountered.
          readOnly: true
          format: int64
          type: string
        successfulCount:
          readOnly: true
          format: int64
          description: >-
            Output only. The number of entities that had been processed
            successfully.
          type: string
        successfulForecastPointCount:
          type: string
          description: >-
            Output only. The number of the successful forecast points that are
            generated by the forecasting model. This is ONLY used by the
            forecasting batch prediction.
          readOnly: true
          format: int64
        incompleteCount:
          format: int64
          readOnly: true
          type: string
          description: >-
            Output only. In cases when enough errors are encountered a job,
            pipeline, or operation may be failed as a whole. Below is the number
            of entities for which the processing had not been finished (either
            in successful or failed state). Set to -1 if the number is unknown
            (for example, the operation failed before the total entity number
            could be collected).
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis:
      id: >-
        GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis
      type: object
      description: >-
        Configuration of the Featurestore's ImportFeature Analysis Based
        Monitoring. This type of analysis generates statistics for values of
        each Feature imported by every ImportFeatureValues operation.
      properties:
        state:
          type: string
          description: >-
            Whether to enable / disable / inherite default hebavior for import
            features analysis.
          enum:
            - STATE_UNSPECIFIED
            - DEFAULT
            - ENABLED
            - DISABLED
          enumDescriptions:
            - Should not be used.
            - >-
              The default behavior of whether to enable the monitoring.
              EntityType-level config: disabled. Feature-level config: inherited
              from the configuration of EntityType this Feature belongs to.
            - >-
              Explicitly enables import features analysis. EntityType-level
              config: by default enables import features analysis for all
              Features under it. Feature-level config: enables import features
              analysis regardless of the EntityType-level config.
            - >-
              Explicitly disables import features analysis. EntityType-level
              config: by default disables import features analysis for all
              Features under it. Feature-level config: disables import features
              analysis regardless of the EntityType-level config.
        anomalyDetectionBaseline:
          enum:
            - BASELINE_UNSPECIFIED
            - LATEST_STATS
            - MOST_RECENT_SNAPSHOT_STATS
            - PREVIOUS_IMPORT_FEATURES_STATS
          type: string
          enumDescriptions:
            - Should not be used.
            - >-
              Choose the later one statistics generated by either most recent
              snapshot analysis or previous import features analysis. If non of
              them exists, skip anomaly detection and only generate a
              statistics.
            - >-
              Use the statistics generated by the most recent snapshot analysis
              if exists.
            - >-
              Use the statistics generated by the previous import features
              analysis if exists.
          description: >-
            The baseline used to do anomaly detection for the statistics
            generated by import features analysis.
    GoogleCloudAiplatformV1FluencyInstance:
      id: GoogleCloudAiplatformV1FluencyInstance
      properties:
        prediction:
          type: string
          description: Required. Output of the evaluated model.
      description: Spec for fluency instance.
      type: object
    GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest:
      id: GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest
      properties:
        parent:
          type: string
          description: >-
            Required. The resource name of the TensorboardRun to create the
            TensorboardTimeSeries in. Format:
            `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
        tensorboardTimeSeriesId:
          type: string
          description: >-
            Optional. The user specified unique ID to use for the
            TensorboardTimeSeries, which becomes the final component of the
            TensorboardTimeSeries's resource name. This value should match
            "a-z0-9{0, 127}"
        tensorboardTimeSeries:
          description: Required. The TensorboardTimeSeries to create.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
      type: object
      description: Request message for TensorboardService.CreateTensorboardTimeSeries.
    GoogleCloudAiplatformV1FeatureOnlineStoreBigtable:
      properties:
        autoScaling:
          description: Required. Autoscaling config applied to Bigtable Instance.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling
      type: object
      id: GoogleCloudAiplatformV1FeatureOnlineStoreBigtable
    GoogleCloudAiplatformV1NotebookRuntimeTemplate:
      id: GoogleCloudAiplatformV1NotebookRuntimeTemplate
      properties:
        description:
          description: The description of the NotebookRuntimeTemplate.
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            The labels with user-defined metadata to organize the
            NotebookRuntimeTemplates. Label keys and values can be no longer
            than 64 characters (Unicode codepoints), can only contain lowercase
            letters, numeric characters, underscores and dashes. International
            characters are allowed. See https://goo.gl/xmQnxf for more
            information and examples of labels.
        updateTime:
          type: string
          format: google-datetime
          description: >-
            Output only. Timestamp when this NotebookRuntimeTemplate was most
            recently updated.
          readOnly: true
        serviceAccount:
          description: >-
            The service account that the runtime workload runs as. You can use
            any service account within the same project, but you must have the
            service account user permission to use the instance. If not
            specified, the [Compute Engine default service
            account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account)
            is used.
          type: string
        createTime:
          type: string
          description: >-
            Output only. Timestamp when this NotebookRuntimeTemplate was
            created.
          readOnly: true
          format: google-datetime
        notebookRuntimeType:
          description: Optional. Immutable. The type of the notebook runtime template.
          enum:
            - NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED
            - USER_DEFINED
            - ONE_CLICK
          enumDescriptions:
            - >-
              Unspecified notebook runtime type, NotebookRuntimeType will
              default to USER_DEFINED.
            - runtime or template with coustomized configurations from user.
            - runtime or template with system defined configurations.
          type: string
        name:
          type: string
          description: The resource name of the NotebookRuntimeTemplate.
        networkSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NetworkSpec'
          description: Optional. Network spec.
        idleShutdownConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NotebookIdleShutdownConfig
          description: >-
            The idle shutdown configuration of NotebookRuntimeTemplate. This
            config will only be set when idle shutdown is enabled.
        isDefault:
          type: boolean
          description: Output only. The default template to use if not specified.
          readOnly: true
        displayName:
          type: string
          description: >-
            Required. The display name of the NotebookRuntimeTemplate. The name
            can be up to 128 characters long and can consist of any UTF-8
            characters.
        machineSpec:
          description: >-
            Optional. Immutable. The specification of a single machine for the
            template.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MachineSpec'
        etag:
          type: string
          description: >-
            Used to perform consistent read-modify-write updates. If not set, a
            blind "overwrite" update happens.
        encryptionSpec:
          description: Customer-managed encryption key spec for the notebook runtime.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        shieldedVmConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ShieldedVmConfig'
          description: Optional. Immutable. Runtime Shielded VM spec.
        networkTags:
          type: array
          items:
            type: string
          description: >-
            Optional. The Compute Engine tags to add to runtime (see [Tagging
            instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
        eucConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NotebookEucConfig'
          description: EUC configuration of the NotebookRuntimeTemplate.
        dataPersistentDiskSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PersistentDiskSpec'
          description: >-
            Optional. The specification of persistent disk attached to the
            runtime as data disk storage.
      description: >-
        A template that specifies runtime configurations such as machine type,
        runtime version, network configurations, etc. Multiple runtimes can be
        created from a runtime template.
      type: object
    GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling:
      type: object
      properties:
        maxNodeCount:
          type: integer
          format: int32
          description: >-
            Required. The maximum number of nodes to scale up to. Must be
            greater than or equal to min_node_count, and less than or equal to
            10 times of 'min_node_count'.
        cpuUtilizationTarget:
          type: integer
          format: int32
          description: >-
            Optional. A percentage of the cluster's CPU capacity. Can be from
            10% to 80%. When a cluster's CPU utilization exceeds the target that
            you have set, Bigtable immediately adds nodes to the cluster. When
            CPU utilization is substantially lower than the target, Bigtable
            removes nodes. If not set will default to 50%.
        minNodeCount:
          description: >-
            Required. The minimum number of nodes to scale down to. Must be
            greater than or equal to 1.
          type: integer
          format: int32
      id: GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling
    GoogleCloudAiplatformV1Presets:
      type: object
      properties:
        modality:
          description: >-
            The modality of the uploaded model, which automatically configures
            the distance measurement and feature normalization for the
            underlying example index and queries. If your model does not
            precisely fit one of these types, it is okay to choose the closest
            type.
          enumDescriptions:
            - Should not be set. Added as a recommended best practice for enums
            - IMAGE modality
            - TEXT modality
            - TABULAR modality
          enum:
            - MODALITY_UNSPECIFIED
            - IMAGE
            - TEXT
            - TABULAR
          type: string
        query:
          enum:
            - PRECISE
            - FAST
          type: string
          enumDescriptions:
            - More precise neighbors as a trade-off against slower response.
            - Faster response as a trade-off against less precise neighbors.
          description: >-
            Preset option controlling parameters for speed-precision trade-off
            when querying for examples. If omitted, defaults to `PRECISE`.
      id: GoogleCloudAiplatformV1Presets
      description: Preset configuration for example-based explanations
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig:
      properties:
        attributionScoreDriftThresholds:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
          description: >-
            Key is the feature name and value is the threshold. The threshold
            here is against attribution score distance between different time
            windows.
          type: object
        defaultDriftThreshold:
          description: >-
            Drift anomaly detection threshold used by all features. When the
            per-feature thresholds are not set, this field can be used to
            specify a threshold for all features.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
        driftThresholds:
          description: >-
            Key is the feature name and value is the threshold. If a feature
            needs to be monitored for drift, a value threshold must be
            configured for that feature. The threshold here is against feature
            distribution distance between different time windws.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
          type: object
      type: object
      description: The config for Prediction data drift detection.
      id: >-
        GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation:
      description: >-
        Training pipeline will perform following transformation functions. *
        Apply the transformation functions for Numerical columns. * Determine
        the year, month, day,and weekday. Treat each value from the timestamp as
        a Categorical column. * Invalid numerical values (for example, values
        that fall outside of a typical timestamp range, or are extreme values)
        receive no special treatment and are not removed.
      properties:
        columnName:
          type: string
        timeFormat:
          description: >-
            The format in which that time field is expressed. The time_format
            must either be one of: * `unix-seconds` * `unix-milliseconds` *
            `unix-microseconds` * `unix-nanoseconds` (for respectively number of
            seconds, milliseconds, microseconds and nanoseconds since start of
            the Unix epoch); or be written in `strftime` syntax. If time_format
            is not set, then the default format is RFC 3339 `date-time` format,
            where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
          type: string
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation
    GoogleCloudAiplatformV1Endpoint:
      description: >-
        Models are deployed into it, and afterwards Endpoint is called to obtain
        predictions and explanations.
      properties:
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the Endpoint.
        createTime:
          description: Output only. Timestamp when this Endpoint was created.
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          description: >-
            Required. The display name of the Endpoint. The name can be up to
            128 characters long and can consist of any UTF-8 characters.
          type: string
        modelDeploymentMonitoringJob:
          description: >-
            Output only. Resource name of the Model Monitoring job associated
            with this Endpoint if monitoring is enabled by
            JobService.CreateModelDeploymentMonitoringJob. Format:
            `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
          type: string
          readOnly: true
        updateTime:
          description: Output only. Timestamp when this Endpoint was last updated.
          readOnly: true
          format: google-datetime
          type: string
        predictRequestResponseLoggingConfig:
          description: Configures the request-response logging for online prediction.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig
        satisfiesPzi:
          description: Output only. Reserved for future use.
          type: boolean
          readOnly: true
        deployedModels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
          readOnly: true
          description: >-
            Output only. The models deployed in this Endpoint. To add or remove
            DeployedModels use EndpointService.DeployModel and
            EndpointService.UndeployModel respectively.
        enablePrivateServiceConnect:
          type: boolean
          deprecated: true
          description: >-
            Deprecated: If true, expose the Endpoint via private service
            connect. Only one of the fields, network or
            enable_private_service_connect, can be set.
        dedicatedEndpointEnabled:
          description: >-
            If true, the endpoint will be exposed through a dedicated DNS
            [Endpoint.dedicated_endpoint_dns]. Your request to the dedicated DNS
            will be isolated from other users' traffic and will have better
            performance and reliability. Note: Once you enabled dedicated
            endpoint, you won't be able to send request to the shared DNS
            {region}-aiplatform.googleapis.com. The limitation will be removed
            soon.
          type: boolean
        trafficSplit:
          description: >-
            A map from a DeployedModel's ID to the percentage of this Endpoint's
            traffic that should be forwarded to that DeployedModel. If a
            DeployedModel's ID is not listed in this map, then it receives no
            traffic. The traffic percentage values must add up to 100, or map
            must be empty if the Endpoint is to not accept any traffic at a
            moment.
          type: object
          additionalProperties:
            format: int32
            type: integer
        etag:
          type: string
          description: >-
            Used to perform consistent read-modify-write updates. If not set, a
            blind "overwrite" update happens.
        satisfiesPzs:
          readOnly: true
          type: boolean
          description: Output only. Reserved for future use.
        privateServiceConnectConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PrivateServiceConnectConfig
          description: >-
            Optional. Configuration for private service connect. network and
            private_service_connect_config are mutually exclusive.
        dedicatedEndpointDns:
          type: string
          readOnly: true
          description: >-
            Output only. DNS of the dedicated endpoint. Will only be populated
            if dedicated_endpoint_enabled is true. Format:
            `https://{endpoint_id}.{region}-{project_number}.prediction.vertexai.goog`.
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Customer-managed encryption key spec for an Endpoint. If set, this
            Endpoint and all sub-resources of this Endpoint will be secured by
            this key.
        network:
          description: >-
            Optional. The full name of the Google Compute Engine
            [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks)
            to which the Endpoint should be peered. Private services access must
            already be configured for the network. If left unspecified, the
            Endpoint is not peered with any network. Only one of the fields,
            network or enable_private_service_connect, can be set.
            [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
            `projects/{project}/global/networks/{network}`. Where `{project}` is
            a project number, as in `12345`, and `{network}` is network name.
          type: string
        description:
          description: The description of the Endpoint.
          type: string
        labels:
          type: object
          description: >-
            The labels with user-defined metadata to organize your Endpoints.
            Label keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. See
            https://goo.gl/xmQnxf for more information and examples of labels.
          additionalProperties:
            type: string
      type: object
      id: GoogleCloudAiplatformV1Endpoint
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata:
      properties:
        costMilliNodeHours:
          type: string
          description: >-
            The actual training cost of creating this model, expressed in milli
            node hours, i.e. 1,000 value in this field means 1 node hour.
            Guaranteed to not exceed inputs.budgetMilliNodeHours.
          format: int64
        successfulStopReason:
          enumDescriptions:
            - Should not be set.
            - The inputs.budgetMilliNodeHours had been reached.
            - >-
              Further training of the Model ceased to increase its quality,
              since it already has converged.
          description: >-
            For successful job completions, this is the reason why the job has
            finished.
          enum:
            - SUCCESSFUL_STOP_REASON_UNSPECIFIED
            - BUDGET_REACHED
            - MODEL_CONVERGED
          type: string
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata
    GoogleCloudAiplatformV1DeployedModelRef:
      description: Points to a DeployedModel.
      id: GoogleCloudAiplatformV1DeployedModelRef
      properties:
        endpoint:
          description: Immutable. A resource name of an Endpoint.
          type: string
        deployedModelId:
          type: string
          description: Immutable. An ID of a DeployedModel in the above Endpoint.
      type: object
    GoogleCloudAiplatformV1PipelineTaskDetailArtifactList:
      id: GoogleCloudAiplatformV1PipelineTaskDetailArtifactList
      properties:
        artifacts:
          type: array
          description: Output only. A list of artifact metadata.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
          readOnly: true
      type: object
      description: A list of artifact metadata.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation
      type: object
      properties:
        categorical:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation
        numeric:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation
        auto:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation
        text:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation
        timestamp:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation
    GoogleCloudAiplatformV1SchemaVideoActionRecognitionAnnotation:
      type: object
      id: GoogleCloudAiplatformV1SchemaVideoActionRecognitionAnnotation
      properties:
        annotationSpecId:
          description: >-
            The resource Id of the AnnotationSpec that this Annotation pertains
            to.
          type: string
        displayName:
          type: string
          description: >-
            The display name of the AnnotationSpec that this Annotation pertains
            to.
        timeSegment:
          description: >-
            This Annotation applies to the time period represented by the
            TimeSegment. If it's not set, the Annotation applies to the whole
            video.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSegment'
      description: Annotation details specific to video action recognition.
    GoogleCloudAiplatformV1UnmanagedContainerModel:
      description: >-
        Contains model information necessary to perform batch prediction without
        requiring a full model import.
      type: object
      properties:
        artifactUri:
          type: string
          description: >-
            The path to the directory containing the Model artifact and any of
            its supporting files.
        predictSchemata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictSchemata'
          description: Contains the schemata used in Model's predictions and explanations
        containerSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelContainerSpec'
          description: >-
            Input only. The specification of the container that is to be used
            when deploying this Model.
      id: GoogleCloudAiplatformV1UnmanagedContainerModel
    GoogleCloudAiplatformV1GenerateContentRequest:
      properties:
        labels:
          description: >-
            Optional. The labels with user-defined metadata for the request. It
            is used for billing and reporting only. Label keys and values can be
            no longer than 63 characters (Unicode codepoints) and can only
            contain lowercase letters, numeric characters, underscores, and
            dashes. International characters are allowed. Label values are
            optional. Label keys must start with a letter.
          additionalProperties:
            type: string
          type: object
        systemInstruction:
          description: >-
            Optional. The user provided system instructions for the model. Note:
            only text should be used in parts and content in each part will be
            in a separate paragraph.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Content'
        generationConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenerationConfig'
          description: Optional. Generation config.
        contents:
          description: >-
            Required. The content of the current conversation with the model.
            For single-turn queries, this is a single instance. For multi-turn
            queries, this is a repeated field that contains conversation history
            + latest request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Content'
        tools:
          description: >-
            Optional. A list of `Tools` the model may use to generate the next
            response. A `Tool` is a piece of code that enables the system to
            interact with external systems to perform an action, or set of
            actions, outside of knowledge and scope of the model.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tool'
        toolConfig:
          description: >-
            Optional. Tool config. This config is shared for all tools provided
            in the request.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ToolConfig'
        safetySettings:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SafetySetting'
          description: >-
            Optional. Per request settings for blocking unsafe content. Enforced
            on GenerateContentResponse.candidates.
          type: array
      description: Request message for [PredictionService.GenerateContent].
      type: object
      id: GoogleCloudAiplatformV1GenerateContentRequest
    GoogleCloudAiplatformV1FunctionCall:
      description: >-
        A predicted [FunctionCall] returned from the model that contains a
        string representing the [FunctionDeclaration.name] and a structured JSON
        object containing the parameters and their values.
      id: GoogleCloudAiplatformV1FunctionCall
      type: object
      properties:
        args:
          description: >-
            Optional. Required. The function parameters and values in JSON
            object format. See [FunctionDeclaration.parameters] for parameter
            details.
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
        name:
          type: string
          description: >-
            Required. The name of the function to call. Matches
            [FunctionDeclaration.name].
    GoogleCloudAiplatformV1ExplainRequest:
      id: GoogleCloudAiplatformV1ExplainRequest
      properties:
        explanationSpecOverride:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationSpecOverride'
          description: >-
            If specified, overrides the explanation_spec of the DeployedModel.
            Can be used for explaining prediction results with different
            configurations, such as: - Explaining top-5 predictions results as
            opposed to top-1; - Increasing path count or step count of the
            attribution methods to reduce approximate errors; - Using different
            baselines for explaining the prediction results.
        instances:
          description: >-
            Required. The instances that are the input to the explanation call.
            A DeployedModel may have an upper limit on the number of instances
            it supports per request, and when it is exceeded the explanation
            call errors in case of AutoML Models, or, in case of customer
            created Models, the behaviour is as documented by that Model. The
            schema of any single instance may be specified via Endpoint's
            DeployedModels' Model's PredictSchemata's instance_schema_uri.
          type: array
          items:
            type: any
        parameters:
          description: >-
            The parameters that govern the prediction. The schema of the
            parameters may be specified via Endpoint's DeployedModels' Model's
            PredictSchemata's parameters_schema_uri.
          type: any
        deployedModelId:
          type: string
          description: >-
            If specified, this ExplainRequest will be served by the chosen
            DeployedModel, overriding Endpoint.traffic_split.
      type: object
      description: Request message for PredictionService.Explain.
    GoogleCloudAiplatformV1ListFeatureGroupsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as ListFeatureGroupsRequest.page_token to
            retrieve the next page. If this field is omitted, there are no
            subsequent pages.
        featureGroups:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureGroup'
          description: The FeatureGroups matching the request.
          type: array
      description: Response message for FeatureRegistryService.ListFeatureGroups.
      type: object
      id: GoogleCloudAiplatformV1ListFeatureGroupsResponse
    GoogleCloudAiplatformV1BatchPredictionJobInputConfig:
      description: >-
        Configures the input to BatchPredictionJob. See
        Model.supported_input_storage_formats for Model's supported input
        formats, and how instances should be expressed via any of them.
      type: object
      id: GoogleCloudAiplatformV1BatchPredictionJobInputConfig
      properties:
        gcsSource:
          description: The Cloud Storage location for the input instances.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
        instancesFormat:
          description: >-
            Required. The format in which instances are given, must be one of
            the Model's supported_input_storage_formats.
          type: string
        bigquerySource:
          description: >-
            The BigQuery location of the input table. The schema of the table
            should be in the format described by the given context OpenAPI
            Schema, if one is provided. The table may contain additional columns
            that are not described by the schema, and they will be ignored.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQuerySource'
    GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInstance:
      properties:
        baselinePrediction:
          description: Required. Output of the baseline model.
          type: string
        instruction:
          type: string
          description: Required. Question Answering prompt for LLM.
        prediction:
          type: string
          description: Required. Output of the candidate model.
        reference:
          description: Optional. Ground truth used to compare against the prediction.
          type: string
        context:
          description: Required. Text to answer the question.
          type: string
      type: object
      description: Spec for pairwise question answering quality instance.
      id: GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInstance
    GoogleCloudAiplatformV1EncryptionSpec:
      type: object
      id: GoogleCloudAiplatformV1EncryptionSpec
      properties:
        kmsKeyName:
          type: string
          description: >-
            Required. The Cloud KMS resource identifier of the customer managed
            encryption key used to protect a resource. Has the form:
            `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.
            The key needs to be in the same region as where the compute resource
            is created.
      description: >-
        Represents a customer-managed encryption key spec that can be applied to
        a top-level resource.
    GoogleCloudAiplatformV1Probe:
      description: >-
        Probe describes a health check to be performed against a container to
        determine whether it is alive or ready to receive traffic.
      id: GoogleCloudAiplatformV1Probe
      type: object
      properties:
        exec:
          description: ExecAction probes the health of a container by executing a command.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ProbeExecAction'
        periodSeconds:
          format: int32
          description: >-
            How often (in seconds) to perform the probe. Default to 10 seconds.
            Minimum value is 1. Must be less than timeout_seconds. Maps to
            Kubernetes probe argument 'periodSeconds'.
          type: integer
        timeoutSeconds:
          type: integer
          description: >-
            Number of seconds after which the probe times out. Defaults to 1
            second. Minimum value is 1. Must be greater or equal to
            period_seconds. Maps to Kubernetes probe argument 'timeoutSeconds'.
          format: int32
    GoogleCloudAiplatformV1GroundednessInput:
      properties:
        instance:
          description: Required. Groundedness instance.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GroundednessInstance'
        metricSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GroundednessSpec'
          description: Required. Spec for groundedness metric.
      type: object
      description: Input for groundedness metric.
      id: GoogleCloudAiplatformV1GroundednessInput
    GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualitySpec:
      description: Spec for pairwise question answering quality score metric.
      id: GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualitySpec
      type: object
      properties:
        version:
          type: integer
          format: int32
          description: Optional. Which version to use for evaluation.
        useReference:
          type: boolean
          description: >-
            Optional. Whether to use instance.reference to compute question
            answering quality.
    GoogleCloudAiplatformV1FeatureView:
      description: >-
        FeatureView is representation of values that the FeatureOnlineStore will
        serve based on its syncConfig.
      properties:
        name:
          type: string
          description: >-
            Identifier. Name of the FeatureView. Format:
            `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
        bigQuerySource:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureViewBigQuerySource
          description: >-
            Optional. Configures how data is supposed to be extracted from a
            BigQuery source to be loaded onto the FeatureOnlineStore.
        satisfiesPzi:
          description: Output only. Reserved for future use.
          type: boolean
          readOnly: true
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            Optional. The labels with user-defined metadata to organize your
            FeatureViews. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. See https://goo.gl/xmQnxf for more information on and
            examples of labels. No more than 64 user labels can be associated
            with one FeatureOnlineStore(System labels are excluded)." System
            reserved label keys are prefixed with "aiplatform.googleapis.com/"
            and are immutable.
        vertexRagSource:
          description: Optional. The Vertex RAG Source that the FeatureView is linked to.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureViewVertexRagSource
        createTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when this FeatureView was created.
          readOnly: true
        satisfiesPzs:
          type: boolean
          description: Output only. Reserved for future use.
          readOnly: true
        featureRegistrySource:
          description: >-
            Optional. Configures the features from a Feature Registry source
            that need to be loaded onto the FeatureOnlineStore.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource
        indexConfig:
          description: >-
            Optional. Configuration for index preparation for vector search. It
            contains the required configurations to create an index from source
            data, so that approximate nearest neighbor (a.k.a ANN) algorithms
            search can be performed during online serving.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureViewIndexConfig'
        updateTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when this FeatureView was last updated.
          readOnly: true
        etag:
          description: >-
            Optional. Used to perform consistent read-modify-write updates. If
            not set, a blind "overwrite" update happens.
          type: string
        syncConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureViewSyncConfig'
          description: >-
            Configures when data is to be synced/updated for this FeatureView.
            At the end of the sync the latest featureValues for each entityId of
            this FeatureView are made ready for online serving.
      type: object
      id: GoogleCloudAiplatformV1FeatureView
    GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport:
      id: GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport
      type: object
      properties:
        startTime:
          description: >-
            Excludes Feature values with feature generation timestamp before
            this timestamp. If not set, retrieve oldest values kept in Feature
            Store. Timestamp, if present, must not have higher than millisecond
            precision.
          type: string
          format: google-datetime
        endTime:
          format: google-datetime
          type: string
          description: >-
            Exports Feature values as of this timestamp. If not set, retrieve
            values as of now. Timestamp, if present, must not have higher than
            millisecond precision.
      description: >-
        Describes exporting all historical Feature values of all entities of the
        EntityType between [start_time, end_time].
    GoogleCloudAiplatformV1StudySpecMetricSpec:
      type: object
      description: Represents a metric to optimize.
      properties:
        metricId:
          type: string
          description: >-
            Required. The ID of the metric. Must not contain whitespaces and
            must be unique amongst all MetricSpecs.
        goal:
          description: Required. The optimization goal of the metric.
          type: string
          enum:
            - GOAL_TYPE_UNSPECIFIED
            - MAXIMIZE
            - MINIMIZE
          enumDescriptions:
            - Goal Type will default to maximize.
            - Maximize the goal metric.
            - Minimize the goal metric.
        safetyConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig
          description: >-
            Used for safe search. In the case, the metric will be a safety
            metric. You must provide a separate metric for objective metric.
      id: GoogleCloudAiplatformV1StudySpecMetricSpec
    GoogleCloudAiplatformV1UploadModelResponse:
      description: Response message of ModelService.UploadModel operation.
      id: GoogleCloudAiplatformV1UploadModelResponse
      type: object
      properties:
        modelVersionId:
          type: string
          description: Output only. The version ID of the model that is uploaded.
          readOnly: true
        model:
          description: >-
            The name of the uploaded Model resource. Format:
            `projects/{project}/locations/{location}/models/{model}`
          type: string
    GoogleCloudAiplatformV1ListStudiesResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            Passes this token as the `page_token` field of the request for a
            subsequent call. If this field is omitted, there are no subsequent
            pages.
        studies:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Study'
          description: The studies associated with the project.
          type: array
      description: Response message for VizierService.ListStudies.
      id: GoogleCloudAiplatformV1ListStudiesResponse
      type: object
    GoogleCloudAiplatformV1RougeMetricValue:
      properties:
        score:
          description: Output only. Rouge score.
          readOnly: true
          type: number
          format: float
      id: GoogleCloudAiplatformV1RougeMetricValue
      type: object
      description: Rouge metric value for an instance.
    CloudAiLargeModelsVisionMedia:
      properties:
        video:
          $ref: '#/components/schemas/CloudAiLargeModelsVisionVideo'
          description: Video
        image:
          $ref: '#/components/schemas/CloudAiLargeModelsVisionImage'
          description: Image.
      id: CloudAiLargeModelsVisionMedia
      type: object
      description: Media.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetrics:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetrics
      properties:
        exactMatch:
          type: number
          description: >-
            The rate at which the input predicted strings exactly match their
            references.
          format: float
    GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem:
      type: object
      description: >-
        Attributed items for a given annotation, typically representing
        neighbors from the training sets constrained by the query type.
      id: GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem
      properties:
        annotationResourceName:
          description: >-
            The unique ID for each annotation. Used by FE to allocate the
            annotation in DB.
          type: string
        distance:
          description: The distance of this item to the annotation.
          type: number
          format: double
    GoogleCloudAiplatformV1ReadIndexDatapointsRequest:
      description: The request message for MatchService.ReadIndexDatapoints.
      id: GoogleCloudAiplatformV1ReadIndexDatapointsRequest
      properties:
        ids:
          type: array
          description: IDs of the datapoints to be searched for.
          items:
            type: string
        deployedIndexId:
          description: The ID of the DeployedIndex that will serve the request.
          type: string
      type: object
    GoogleCloudAiplatformV1BatchMigrateResourcesResponse:
      type: object
      id: GoogleCloudAiplatformV1BatchMigrateResourcesResponse
      properties:
        migrateResourceResponses:
          description: Successfully migrated resources.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1MigrateResourceResponse
          type: array
      description: Response message for MigrationService.BatchMigrateResources.
    GoogleCloudAiplatformV1BatchCreateFeaturesRequest:
      description: Request message for FeaturestoreService.BatchCreateFeatures.
      type: object
      id: GoogleCloudAiplatformV1BatchCreateFeaturesRequest
      properties:
        requests:
          description: >-
            Required. The request message specifying the Features to create. All
            Features must be created under the same parent EntityType. The
            `parent` field in each child request message can be omitted. If
            `parent` is set in a child request, then the value must match the
            `parent` value in this request message.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1CreateFeatureRequest'
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition:
      type: object
      description: Represents the spec to match discrete values from parent parameter.
      id: >-
        GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition
      properties:
        values:
          description: >-
            Required. Matches values of the parent parameter of 'DISCRETE' type.
            All values must exist in `discrete_value_spec` of parent parameter.
            The Epsilon of the value matching is 1e-10.
          items:
            format: double
            type: number
          type: array
    GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata:
      description: Describes metadata for a TensorboardTimeSeries.
      properties:
        maxStep:
          format: int64
          description: >-
            Output only. Max step index of all data points within a
            TensorboardTimeSeries.
          readOnly: true
          type: string
        maxBlobSequenceLength:
          type: string
          readOnly: true
          format: int64
          description: >-
            Output only. The largest blob sequence length (number of blobs) of
            all data points in this time series, if its ValueType is
            BLOB_SEQUENCE.
        maxWallTime:
          type: string
          format: google-datetime
          description: >-
            Output only. Max wall clock timestamp of all data points within a
            TensorboardTimeSeries.
          readOnly: true
      id: GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata
      type: object
    GoogleCloudAiplatformV1Study:
      id: GoogleCloudAiplatformV1Study
      type: object
      properties:
        createTime:
          type: string
          readOnly: true
          description: Output only. Time at which the study was created.
          format: google-datetime
        state:
          description: Output only. The detailed state of a Study.
          enumDescriptions:
            - The study state is unspecified.
            - The study is active.
            - The study is stopped due to an internal error.
            - >-
              The study is done when the service exhausts the parameter search
              space or max_trial_count is reached.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
            - COMPLETED
          type: string
        name:
          type: string
          description: >-
            Output only. The name of a study. The study's globally unique
            identifier. Format:
            `projects/{project}/locations/{location}/studies/{study}`
          readOnly: true
        studySpec:
          description: Required. Configuration of the Study.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpec'
        inactiveReason:
          readOnly: true
          type: string
          description: >-
            Output only. A human readable reason why the Study is inactive. This
            should be empty if a study is ACTIVE or COMPLETED.
        displayName:
          type: string
          description: Required. Describes the Study, default value is empty string.
      description: A message representing a Study.
    GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse:
      properties:
        importedEvaluatedAnnotationsCount:
          description: Output only. Number of EvaluatedAnnotations imported.
          format: int32
          type: integer
          readOnly: true
      description: Response message for ModelService.BatchImportEvaluatedAnnotations
      id: GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse
      type: object
    GoogleCloudAiplatformV1RougeInstance:
      properties:
        prediction:
          description: Required. Output of the evaluated model.
          type: string
        reference:
          description: Required. Ground truth used to compare against the prediction.
          type: string
      description: Spec for rouge instance.
      id: GoogleCloudAiplatformV1RougeInstance
      type: object
    GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec:
      properties:
        useElapsedDuration:
          type: boolean
          description: >-
            True if Measurement.elapsed_duration is used as the x-axis of each
            Trials Decay Curve. Otherwise, Measurement.step_count will be used
            as the x-axis.
      id: GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec
      description: >-
        The decay curve automated stopping rule builds a Gaussian Process
        Regressor to predict the final objective value of a Trial based on the
        already completed Trials and the intermediate measurements of the
        current Trial. Early stopping is requested for the current Trial if
        there is very low probability to exceed the optimal value found so far.
      type: object
    GoogleCloudAiplatformV1QuestionAnsweringRelevanceInput:
      type: object
      description: Input for question answering relevance metric.
      id: GoogleCloudAiplatformV1QuestionAnsweringRelevanceInput
      properties:
        instance:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringRelevanceInstance
          description: Required. Question answering relevance instance.
        metricSpec:
          description: Required. Spec for question answering relevance score metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringRelevanceSpec
    GoogleCloudAiplatformV1Port:
      id: GoogleCloudAiplatformV1Port
      type: object
      description: Represents a network port in a container.
      properties:
        containerPort:
          format: int32
          description: >-
            The number of the port to expose on the pod's IP address. Must be a
            valid port number, between 1 and 65535 inclusive.
          type: integer
    GoogleCloudAiplatformV1SummarizationQualityInput:
      type: object
      description: Input for summarization quality metric.
      properties:
        instance:
          description: Required. Summarization quality instance.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationQualityInstance
        metricSpec:
          description: Required. Spec for summarization quality score metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SummarizationQualitySpec'
      id: GoogleCloudAiplatformV1SummarizationQualityInput
    GoogleCloudAiplatformV1SchemaPredictInstanceVideoActionRecognitionPredictionInstance:
      properties:
        content:
          description: >-
            The Google Cloud Storage location of the video on which to perform
            the prediction.
          type: string
        timeSegmentEnd:
          type: string
          description: >-
            The end, exclusive, of the video's time segment on which to perform
            the prediction. Expressed as a number of seconds as measured from
            the start of the video, with "s" appended at the end. Fractions are
            allowed, up to a microsecond precision, and "inf" or "Infinity" is
            allowed, which means the end of the video.
        timeSegmentStart:
          type: string
          description: >-
            The beginning, inclusive, of the video's time segment on which to
            perform the prediction. Expressed as a number of seconds as measured
            from the start of the video, with "s" appended at the end. Fractions
            are allowed, up to a microsecond precision.
        mimeType:
          description: >-
            The MIME type of the content of the video. Only the following are
            supported: video/mp4 video/avi video/quicktime
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaPredictInstanceVideoActionRecognitionPredictionInstance
      description: Prediction input format for Video Action Recognition.
      type: object
    GoogleCloudAiplatformV1MigrateResourceRequest:
      type: object
      description: >-
        Config of migrating one resource from automl.googleapis.com,
        datalabeling.googleapis.com and ml.googleapis.com to Vertex AI.
      id: GoogleCloudAiplatformV1MigrateResourceRequest
      properties:
        migrateAutomlDatasetConfig:
          description: >-
            Config for migrating Dataset in automl.googleapis.com to Vertex AI's
            Dataset.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig
        migrateDataLabelingDatasetConfig:
          description: >-
            Config for migrating Dataset in datalabeling.googleapis.com to
            Vertex AI's Dataset.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig
        migrateMlEngineModelVersionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig
          description: >-
            Config for migrating Version in ml.googleapis.com to Vertex AI's
            Model.
        migrateAutomlModelConfig:
          description: >-
            Config for migrating Model in automl.googleapis.com to Vertex AI's
            Model.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig
    GoogleCloudAiplatformV1SchemaPredictParamsVideoObjectTrackingPredictionParams:
      type: object
      description: Prediction model parameters for Video Object Tracking.
      id: >-
        GoogleCloudAiplatformV1SchemaPredictParamsVideoObjectTrackingPredictionParams
      properties:
        minBoundingBoxSize:
          description: >-
            Only bounding boxes with shortest edge at least that long as a
            relative value of video frame size are returned. Default value is
            0.0.
          type: number
          format: float
        confidenceThreshold:
          description: >-
            The Model only returns predictions with at least this confidence
            score. Default value is 0.0
          format: float
          type: number
        maxPredictions:
          description: >-
            The model only returns up to that many top, by confidence score,
            predictions per frame of the video. If this number is very high, the
            Model may return fewer predictions per frame. Default value is 50.
          format: int32
          type: integer
    GoogleCloudAiplatformV1ListBatchPredictionJobsResponse:
      id: GoogleCloudAiplatformV1ListBatchPredictionJobsResponse
      type: object
      description: Response message for JobService.ListBatchPredictionJobs
      properties:
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Pass to
            ListBatchPredictionJobsRequest.page_token to obtain that page.
          type: string
        batchPredictionJobs:
          description: List of BatchPredictionJobs in the requested page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob'
    GoogleCloudAiplatformV1SchemaPredictInstanceImageObjectDetectionPredictionInstance:
      properties:
        mimeType:
          type: string
          description: >-
            The MIME type of the content of the image. Only the images in below
            listed MIME types are supported. - image/jpeg - image/gif -
            image/png - image/webp - image/bmp - image/tiff -
            image/vnd.microsoft.icon
        content:
          type: string
          description: The image bytes or Cloud Storage URI to make the prediction on.
      description: Prediction input format for Image Object Detection.
      id: >-
        GoogleCloudAiplatformV1SchemaPredictInstanceImageObjectDetectionPredictionInstance
      type: object
    GoogleCloudAiplatformV1WriteFeatureValuesRequest:
      type: object
      description: Request message for FeaturestoreOnlineServingService.WriteFeatureValues.
      properties:
        payloads:
          description: >-
            Required. The entities to be written. Up to 100,000 feature values
            can be written across all `payloads`.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1WriteFeatureValuesPayload
      id: GoogleCloudAiplatformV1WriteFeatureValuesRequest
    CloudAiLargeModelsVisionImageRAIScores:
      description: RAI scores for generated image returned.
      id: CloudAiLargeModelsVisionImageRAIScores
      properties:
        agileWatermarkDetectionScore:
          description: Agile watermark score for image.
          type: number
          format: double
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation
      properties:
        columnName:
          type: string
      description: >-
        Training pipeline will perform following transformation functions. * The
        categorical string as is--no change to case, punctuation, spelling,
        tense, and so on. * Convert the category name to a dictionary lookup
        index and generate an embedding for each index. * Categories that appear
        less than 5 times in the training dataset are treated as the "unknown"
        category. The "unknown" category gets its own special lookup index and
        resulting embedding.
      type: object
    GoogleCloudAiplatformV1SchemaVideoDataItem:
      description: Payload of Video DataItem.
      properties:
        mimeType:
          readOnly: true
          description: >-
            Output only. The mime type of the content of the video. Only the
            videos in below listed mime types are supported. Supported
            mime_type: - video/mp4 - video/avi - video/quicktime
          type: string
        gcsUri:
          description: >-
            Required. Google Cloud Storage URI points to the original video in
            user's bucket. The video is up to 50 GB in size and up to 3 hour in
            duration.
          type: string
      id: GoogleCloudAiplatformV1SchemaVideoDataItem
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation
      properties:
        numeric:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation
        text:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation
        auto:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation
        timestamp:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation
        categorical:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation
      type: object
    GoogleCloudAiplatformV1CancelBatchPredictionJobRequest:
      type: object
      id: GoogleCloudAiplatformV1CancelBatchPredictionJobRequest
      properties: {}
      description: Request message for JobService.CancelBatchPredictionJob.
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoClassificationPredictionResult:
      description: Prediction output format for Video Classification.
      properties:
        confidence:
          type: number
          format: float
          description: >-
            The Model's confidence in correction of this prediction, higher
            value means higher confidence.
        displayName:
          type: string
          description: The display name of the AnnotationSpec that had been identified.
        timeSegmentEnd:
          description: >-
            The end, exclusive, of the video's time segment in which the
            AnnotationSpec has been identified. Expressed as a number of seconds
            as measured from the start of the video, with fractions up to a
            microsecond precision, and with "s" appended at the end. Note that
            for 'segment-classification' prediction type, this equals the
            original 'timeSegmentEnd' from the input instance, for other types
            it is the end of a shot or a 1 second interval respectively.
          format: google-duration
          type: string
        type:
          type: string
          description: >-
            The type of the prediction. The requested types can be configured
            via parameters. This will be one of - segment-classification -
            shot-classification - one-sec-interval-classification
        timeSegmentStart:
          description: >-
            The beginning, inclusive, of the video's time segment in which the
            AnnotationSpec has been identified. Expressed as a number of seconds
            as measured from the start of the video, with fractions up to a
            microsecond precision, and with "s" appended at the end. Note that
            for 'segment-classification' prediction type, this equals the
            original 'timeSegmentStart' from the input instance, for other types
            it is the start of a shot or a 1 second interval respectively.
          format: google-duration
          type: string
        id:
          description: The resource ID of the AnnotationSpec that had been identified.
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionVideoClassificationPredictionResult
      type: object
    GoogleCloudAiplatformV1ModelGardenSource:
      properties:
        publicModelName:
          type: string
          description: Required. The model garden source model resource name.
      id: GoogleCloudAiplatformV1ModelGardenSource
      type: object
      description: >-
        Contains information about the source of the models generated from Model
        Garden.
    GoogleCloudAiplatformV1SearchDataItemsResponse:
      description: Response message for DatasetService.SearchDataItems.
      properties:
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass to
            SearchDataItemsRequest.page_token to obtain that page.
          type: string
        dataItemViews:
          type: array
          description: The DataItemViews read.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DataItemView'
      id: GoogleCloudAiplatformV1SearchDataItemsResponse
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToAction:
      properties:
        openGenerationAiStudio:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
          description: Optional. Open in Generation AI Studio.
        viewRestApi:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi
          description: Optional. To view Rest API docs.
        createApplication:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
          description: Optional. Create application using the PublisherModel.
        deployGke:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionDeployGke
          description: Optional. Deploy PublisherModel to Google Kubernetes Engine.
        openFineTuningPipelines:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines
          description: Optional. Open fine-tuning pipelines of the PublisherModel.
        openNotebook:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
          description: Optional. Open notebook of the PublisherModel.
        openGenie:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
          description: Optional. Open Genie / Playground.
        openEvaluationPipeline:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
          description: Optional. Open evaluation pipeline of the PublisherModel.
        multiDeployVertex:
          description: >-
            Optional. Multiple setups to deploy the PublisherModel to Vertex
            Endpoint.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionDeployVertex
        openNotebooks:
          description: Optional. Open notebooks of the PublisherModel.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks
        requestAccess:
          description: Optional. Request for access.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
        deploy:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionDeploy
          description: Optional. Deploy the PublisherModel to Vertex Endpoint.
        openPromptTuningPipeline:
          description: Optional. Open prompt-tuning pipeline of the PublisherModel.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
        openFineTuningPipeline:
          description: Optional. Open fine-tuning pipeline of the PublisherModel.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
      type: object
      id: GoogleCloudAiplatformV1PublisherModelCallToAction
      description: Actions could take on this Publisher Model.
    CloudAiLargeModelsVisionSemanticFilterResponse:
      id: CloudAiLargeModelsVisionSemanticFilterResponse
      type: object
      properties:
        passedSemanticFilter:
          type: boolean
          description: >-
            This response is added when semantic filter config is turned on in
            EditConfig. It reports if this image is passed semantic filter
            response. If passed_semantic_filter is false, the bounding box
            information will be populated for user to check what caused the
            semantic filter to fail.
        namedBoundingBoxes:
          type: array
          items:
            $ref: '#/components/schemas/CloudAiLargeModelsVisionNamedBoundingBox'
          description: >-
            Class labels of the bounding boxes that failed the semantic
            filtering. Bounding box coordinates.
    GoogleCloudAiplatformV1Feature:
      id: GoogleCloudAiplatformV1Feature
      properties:
        updateTime:
          format: google-datetime
          type: string
          description: >-
            Output only. Only applicable for Vertex AI Feature Store (Legacy).
            Timestamp when this EntityType was most recently updated.
          readOnly: true
        createTime:
          format: google-datetime
          description: >-
            Output only. Only applicable for Vertex AI Feature Store (Legacy).
            Timestamp when this EntityType was created.
          readOnly: true
          type: string
        monitoringStatsAnomalies:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly
          readOnly: true
          description: >-
            Output only. Only applicable for Vertex AI Feature Store (Legacy).
            The list of historical stats and anomalies with specified
            objectives.
          type: array
        versionColumnName:
          type: string
          description: >-
            Only applicable for Vertex AI Feature Store. The name of the
            BigQuery Table/View column hosting data for this version. If no
            value is provided, will use feature_id.
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            Optional. The labels with user-defined metadata to organize your
            Features. Label keys and values can be no longer than 64 characters
            (Unicode codepoints), can only contain lowercase letters, numeric
            characters, underscores and dashes. International characters are
            allowed. See https://goo.gl/xmQnxf for more information on and
            examples of labels. No more than 64 user labels can be associated
            with one Feature (System labels are excluded)." System reserved
            label keys are prefixed with "aiplatform.googleapis.com/" and are
            immutable.
        etag:
          type: string
          description: >-
            Used to perform a consistent read-modify-write updates. If not set,
            a blind "overwrite" update happens.
        name:
          description: >-
            Immutable. Name of the Feature. Format:
            `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
            `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
            The last part feature is assigned by the client. The feature can be
            up to 64 characters long and can consist only of ASCII Latin letters
            A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a
            letter. The value will be unique given an entity type.
          type: string
        valueType:
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - BOOL
            - BOOL_ARRAY
            - DOUBLE
            - DOUBLE_ARRAY
            - INT64
            - INT64_ARRAY
            - STRING
            - STRING_ARRAY
            - BYTES
            - STRUCT
          enumDescriptions:
            - The value type is unspecified.
            - Used for Feature that is a boolean.
            - Used for Feature that is a list of boolean.
            - Used for Feature that is double.
            - Used for Feature that is a list of double.
            - Used for Feature that is INT64.
            - Used for Feature that is a list of INT64.
            - Used for Feature that is string.
            - Used for Feature that is a list of String.
            - Used for Feature that is bytes.
            - Used for Feature that is struct.
          description: >-
            Immutable. Only applicable for Vertex AI Feature Store (Legacy).
            Type of Feature value.
          type: string
        disableMonitoring:
          type: boolean
          description: >-
            Optional. Only applicable for Vertex AI Feature Store (Legacy). If
            not set, use the monitoring_config defined for the EntityType this
            Feature belongs to. Only Features with type (Feature.ValueType)
            BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true,
            all types of data monitoring are disabled despite the config on
            EntityType.
        description:
          description: Description of the Feature.
          type: string
        pointOfContact:
          type: string
          description: >-
            Entity responsible for maintaining this feature. Can be comma
            separated list of email addresses or URIs.
      type: object
      description: >-
        Feature Metadata information. For example, color is a feature that
        describes an apple.
    GoogleCloudAiplatformV1ToolConfig:
      description: >-
        Tool config. This config is shared for all tools provided in the
        request.
      properties:
        functionCallingConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FunctionCallingConfig'
          description: Optional. Function calling config.
      type: object
      id: GoogleCloudAiplatformV1ToolConfig
    GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback:
      description: Content filter results for a prompt sent in the request.
      id: GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback
      properties:
        blockReasonMessage:
          readOnly: true
          type: string
          description: Output only. A readable block reason message.
        safetyRatings:
          description: Output only. Safety ratings.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SafetyRating'
        blockReason:
          type: string
          enumDescriptions:
            - Unspecified blocked reason.
            - Candidates blocked due to safety.
            - Candidates blocked due to other reason.
            - >-
              Candidates blocked due to the terms which are included from the
              terminology blocklist.
            - Candidates blocked due to prohibited content.
          enum:
            - BLOCKED_REASON_UNSPECIFIED
            - SAFETY
            - OTHER
            - BLOCKLIST
            - PROHIBITED_CONTENT
          description: Output only. Blocked reason.
          readOnly: true
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult:
      description: Prediction output format for Image and Text Classification.
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult
      type: object
      properties:
        confidences:
          description: >-
            The Model's confidences in correctness of the predicted IDs, higher
            value means higher confidence. Order matches the Ids.
          items:
            format: float
            type: number
          type: array
        ids:
          type: array
          items:
            type: string
            format: int64
          description: The resource IDs of the AnnotationSpecs that had been identified.
        displayNames:
          items:
            type: string
          description: >-
            The display names of the AnnotationSpecs that had been identified,
            order matches the IDs.
          type: array
    GoogleCloudAiplatformV1StreamingPredictResponse:
      id: GoogleCloudAiplatformV1StreamingPredictResponse
      properties:
        outputs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          type: array
          description: The prediction output.
        parameters:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          description: The parameters that govern the prediction.
      type: object
      description: Response message for PredictionService.StreamingPredict.
    GoogleCloudAiplatformV1PrivateEndpoints:
      description: >-
        PrivateEndpoints proto is used to provide paths for users to send
        requests privately. To send request via private service access, use
        predict_http_uri, explain_http_uri or health_http_uri. To send request
        via private service connect, use service_attachment.
      properties:
        explainHttpUri:
          type: string
          description: Output only. Http(s) path to send explain requests.
          readOnly: true
        healthHttpUri:
          type: string
          readOnly: true
          description: Output only. Http(s) path to send health check requests.
        serviceAttachment:
          type: string
          readOnly: true
          description: >-
            Output only. The name of the service attachment resource. Populated
            if private service connect is enabled.
        predictHttpUri:
          description: Output only. Http(s) path to send prediction requests.
          type: string
          readOnly: true
      type: object
      id: GoogleCloudAiplatformV1PrivateEndpoints
    GoogleCloudAiplatformV1SamplingStrategy:
      description: >-
        Sampling Strategy for logging, can be for both training and prediction
        dataset.
      properties:
        randomSampleConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig
          description: Random sample config. Will support more sampling strategies later.
      type: object
      id: GoogleCloudAiplatformV1SamplingStrategy
    GoogleCloudAiplatformV1FeatureViewIndexConfigBruteForceConfig:
      description: Configuration options for using brute force search.
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1FeatureViewIndexConfigBruteForceConfig
    GoogleCloudAiplatformV1Value:
      type: object
      id: GoogleCloudAiplatformV1Value
      description: Value is the value of the field.
      properties:
        stringValue:
          type: string
          description: A string value.
        intValue:
          type: string
          description: An integer value.
          format: int64
        doubleValue:
          description: A double value.
          format: double
          type: number
    GoogleCloudAiplatformV1ActiveLearningConfig:
      type: object
      description: >-
        Parameters that configure the active learning pipeline. Active learning
        will label the data incrementally by several iterations. For every
        iteration, it will select a batch of data based on the sampling
        strategy.
      id: GoogleCloudAiplatformV1ActiveLearningConfig
      properties:
        maxDataItemCount:
          format: int64
          description: Max number of human labeled DataItems.
          type: string
        maxDataItemPercentage:
          description: Max percent of total DataItems for human labeling.
          format: int32
          type: integer
        sampleConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SampleConfig'
          description: >-
            Active learning data sampling config. For every active learning
            labeling iteration, it will select a batch of data based on the
            sampling strategy.
        trainingConfig:
          description: >-
            CMLE training config. For every active learning labeling iteration,
            system will train a machine learning model on CMLE. The trained
            model will be used by data sampling algorithm to select DataItems.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TrainingConfig'
    GoogleCloudAiplatformV1Index:
      id: GoogleCloudAiplatformV1Index
      type: object
      description: >-
        A representation of a collection of database items organized in a way
        that allows for approximate nearest neighbor (a.k.a ANN) algorithms
        search.
      properties:
        metadataSchemaUri:
          type: string
          description: >-
            Immutable. Points to a YAML file stored on Google Cloud Storage
            describing additional information about the Index, that is specific
            to it. Unset if the Index does not have any additional information.
            The schema is defined as an OpenAPI 3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            Note: The URI given on output will be immutable and probably
            different, including the URI scheme, than the one given on input.
            The output URI will point to a location where the user only has a
            read access.
        displayName:
          description: >-
            Required. The display name of the Index. The name can be up to 128
            characters long and can consist of any UTF-8 characters.
          type: string
        etag:
          type: string
          description: >-
            Used to perform consistent read-modify-write updates. If not set, a
            blind "overwrite" update happens.
        metadata:
          type: any
          description: >-
            An additional information about the Index; the schema of the
            metadata can be found in metadata_schema.
        satisfiesPzs:
          description: Output only. Reserved for future use.
          type: boolean
          readOnly: true
        labels:
          description: >-
            The labels with user-defined metadata to organize your Indexes.
            Label keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. See
            https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
          additionalProperties:
            type: string
        deployedIndexes:
          description: >-
            Output only. The pointers to DeployedIndexes created from this
            Index. An Index can be only deleted if all its DeployedIndexes had
            been undeployed first.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndexRef'
          readOnly: true
        indexUpdateMethod:
          enum:
            - INDEX_UPDATE_METHOD_UNSPECIFIED
            - BATCH_UPDATE
            - STREAM_UPDATE
          type: string
          description: >-
            Immutable. The update method to use with this Index. If not set,
            BATCH_UPDATE will be used by default.
          enumDescriptions:
            - Should not be used.
            - >-
              BatchUpdate: user can call UpdateIndex with files on Cloud Storage
              of Datapoints to update.
            - >-
              StreamUpdate: user can call UpsertDatapoints/DeleteDatapoints to
              update the Index and the updates will be applied in corresponding
              DeployedIndexes in nearly real-time.
        updateTime:
          format: google-datetime
          description: >-
            Output only. Timestamp when this Index was most recently updated.
            This also includes any update to the contents of the Index. Note
            that Operations working on this Index may have their
            Operations.metadata.generic_metadata.update_time a little after the
            value of this timestamp, yet that does not mean their results are
            not already reflected in the Index. Result of any successfully
            completed Operation on the Index is reflected in it.
          type: string
          readOnly: true
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Immutable. Customer-managed encryption key spec for an Index. If
            set, this Index and all sub-resources of this Index will be secured
            by this key.
        satisfiesPzi:
          description: Output only. Reserved for future use.
          type: boolean
          readOnly: true
        name:
          description: Output only. The resource name of the Index.
          readOnly: true
          type: string
        description:
          type: string
          description: The description of the Index.
        indexStats:
          description: Output only. Stats of the index resource.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexStats'
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Timestamp when this Index was created.
    GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesRequest:
      type: object
      id: GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesRequest
      description: Request message for ModelService.BatchImportModelEvaluationSlices
      properties:
        modelEvaluationSlices:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSlice'
          type: array
          description: Required. Model evaluation slice resource to be imported.
    GoogleCloudAiplatformV1ToolNameMatchInput:
      type: object
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ToolNameMatchInstance'
          description: Required. Repeated tool name match instances.
        metricSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ToolNameMatchSpec'
          description: Required. Spec for tool name match metric.
      id: GoogleCloudAiplatformV1ToolNameMatchInput
      description: Input for tool name match metric.
    GoogleCloudAiplatformV1TensorboardBlob:
      properties:
        data:
          type: string
          format: byte
          description: >-
            Optional. The bytes of the blob is not present unless it's returned
            by the ReadTensorboardBlobData endpoint.
        id:
          type: string
          description: >-
            Output only. A URI safe key uniquely identifying a blob. Can be used
            to locate the blob stored in the Cloud Storage bucket of the
            consumer project.
          readOnly: true
      id: GoogleCloudAiplatformV1TensorboardBlob
      description: One blob (e.g, image, graph) viewable on a blob metric plot.
      type: object
    GoogleCloudAiplatformV1NearestNeighborQueryEmbedding:
      description: The embedding vector.
      type: object
      properties:
        value:
          description: Optional. Individual value in the embedding.
          type: array
          items:
            format: float
            type: number
      id: GoogleCloudAiplatformV1NearestNeighborQueryEmbedding
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtraction:
      description: A TrainingJob that trains and uploads an AutoML Text Extraction Model.
      properties:
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtraction
      type: object
    GoogleLongrunningOperation:
      type: object
      properties:
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        metadata:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      id: GoogleLongrunningOperation
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics
      properties:
        recall:
          format: float
          description: Recall (True Positive Rate) for the given confidence threshold.
          type: number
        confidenceThreshold:
          description: >-
            Metrics are computed with an assumption that the Model never returns
            predictions with score lower than this value.
          type: number
          format: float
        precision:
          description: Precision for the given confidence threshold.
          format: float
          type: number
        f1Score:
          description: The harmonic mean of recall and precision.
          type: number
          format: float
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig:
      properties:
        datasetDisplayName:
          description: >-
            Required. Display name of the Dataset in Vertex AI. System will pick
            a display name if unspecified.
          type: string
        dataset:
          description: >-
            Required. Full resource name of automl Dataset. Format:
            `projects/{project}/locations/{location}/datasets/{dataset}`.
          type: string
      description: >-
        Config for migrating Dataset in automl.googleapis.com to Vertex AI's
        Dataset.
      id: GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig
      type: object
    GoogleCloudAiplatformV1TensorboardBlobSequence:
      properties:
        values:
          description: List of blobs contained within the sequence.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardBlob'
          type: array
      type: object
      id: GoogleCloudAiplatformV1TensorboardBlobSequence
      description: >-
        One point viewable on a blob metric plot, but mostly just a wrapper
        message to work around repeated fields can't be used directly within
        `oneof` fields.
    GoogleCloudAiplatformV1ListNotebookExecutionJobsResponse:
      description: Response message for [NotebookService.CreateNotebookExecutionJob]
      properties:
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass to
            ListNotebookExecutionJobs.page_token to obtain that page.
          type: string
        notebookExecutionJobs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NotebookExecutionJob'
          type: array
          description: List of NotebookExecutionJobs in the requested page.
      id: GoogleCloudAiplatformV1ListNotebookExecutionJobsResponse
      type: object
    GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest:
      id: GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest
      description: Request message for JobService.CancelHyperparameterTuningJob.
      type: object
      properties: {}
    GoogleCloudAiplatformV1Artifact:
      type: object
      description: Instance of a general artifact.
      properties:
        metadata:
          type: object
          description: >-
            Properties of the Artifact. Top level metadata keys' heading and
            trailing spaces will be trimmed. The size of this field should not
            exceed 200KB.
          additionalProperties:
            type: any
            description: Properties of the object.
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            The labels with user-defined metadata to organize your Artifacts.
            Label keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. No
            more than 64 user labels can be associated with one Artifact (System
            labels are excluded).
        displayName:
          description: >-
            User provided display name of the Artifact. May be up to 128 Unicode
            characters.
          type: string
        etag:
          type: string
          description: >-
            An eTag used to perform consistent read-modify-write updates. If not
            set, a blind "overwrite" update happens.
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Timestamp when this Artifact was created.
        schemaVersion:
          description: >-
            The version of the schema in schema_name to use. Schema title and
            version is expected to be registered in earlier Create Schema calls.
            And both are used together as unique identifiers to identify schemas
            within the local metadata store.
          type: string
        uri:
          type: string
          description: >-
            The uniform resource identifier of the artifact file. May be empty
            if there is no actual artifact file.
        name:
          type: string
          readOnly: true
          description: Output only. The resource name of the Artifact.
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - LIVE
          type: string
          enumDescriptions:
            - Unspecified state for the Artifact.
            - >-
              A state used by systems like Vertex AI Pipelines to indicate that
              the underlying data item represented by this Artifact is being
              created.
            - >-
              A state indicating that the Artifact should exist, unless
              something external to the system deletes it.
          description: >-
            The state of this Artifact. This is a property of the Artifact, and
            does not imply or capture any ongoing process. This property is
            managed by clients (such as Vertex AI Pipelines), and the system
            does not prescribe or check the validity of state transitions.
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this Artifact was last updated.
          type: string
        description:
          type: string
          description: Description of the Artifact
        schemaTitle:
          type: string
          description: >-
            The title of the schema describing the metadata. Schema title and
            version is expected to be registered in earlier Create Schema calls.
            And both are used together as unique identifiers to identify schemas
            within the local metadata store.
      id: GoogleCloudAiplatformV1Artifact
    GoogleCloudAiplatformV1ComputeTokensResponse:
      id: GoogleCloudAiplatformV1ComputeTokensResponse
      type: object
      description: Response message for ComputeTokens RPC call.
      properties:
        tokensInfo:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TokensInfo'
          type: array
          description: >-
            Lists of tokens info from the input. A ComputeTokensRequest could
            have multiple instances with a prompt in each instance. We also need
            to return lists of tokens info for the request with multiple
            instances.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation
      properties:
        invalidValuesAllowed:
          type: boolean
          description: >-
            If invalid values is allowed, the training pipeline will create a
            boolean feature that indicated whether the value is valid.
            Otherwise, the training pipeline will discard the input row from
            trainining data.
        columnName:
          type: string
        timeFormat:
          description: >-
            The format in which that time field is expressed. The time_format
            must either be one of: * `unix-seconds` * `unix-milliseconds` *
            `unix-microseconds` * `unix-nanoseconds` (for respectively number of
            seconds, milliseconds, microseconds and nanoseconds since start of
            the Unix epoch); or be written in `strftime` syntax. If time_format
            is not set, then the default format is RFC 3339 `date-time` format,
            where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
          type: string
      description: >-
        Training pipeline will perform following transformation functions. *
        Apply the transformation functions for Numerical columns. * Determine
        the year, month, day,and weekday. Treat each value from the * timestamp
        as a Categorical column. * Invalid numerical values (for example, values
        that fall outside of a typical timestamp range, or are extreme values)
        receive no special treatment and are not removed.
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig:
      type: object
      properties:
        bigquerySource:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource
      description: >-
        The time series Dataset's data source. The Dataset doesn't store the
        data directly, but only pointer(s) to its data.
      id: GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics:
      description: The Evaluation metrics given a specific precision_window_length.
      properties:
        precisionWindowLength:
          type: string
          format: google-duration
          description: >-
            This VideoActionMetrics is calculated based on this prediction
            window length. If the predicted action's timestamp is inside the
            time window whose center is the ground truth action's timestamp with
            this specific length, the prediction result is treated as a true
            positive.
        confidenceMetrics:
          type: array
          description: >-
            Metrics for each label-match confidence_threshold from
            0.05,0.10,...,0.95,0.96,0.97,0.98,0.99.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics
        meanAveragePrecision:
          type: number
          format: float
          description: The mean average precision.
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics
      type: object
    GoogleCloudAiplatformV1NasTrialDetail:
      type: object
      id: GoogleCloudAiplatformV1NasTrialDetail
      properties:
        trainTrial:
          description: >-
            The train NasTrial corresponding to search_trial. Only populated if
            search_trial is used for training.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrial'
        searchTrial:
          description: The requested search NasTrial.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrial'
        name:
          description: Output only. Resource name of the NasTrialDetail.
          type: string
          readOnly: true
        parameters:
          type: string
          description: The parameters for the NasJob NasTrial.
      description: >-
        Represents a NasTrial details along with its parameters. If there is a
        corresponding train NasTrial, the train NasTrial is also returned.
    GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInput:
      type: object
      id: GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInput
      properties:
        instance:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInstance
          description: Required. Question answering helpfulness instance.
        metricSpec:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessSpec
          description: Required. Spec for question answering helpfulness score metric.
      description: Input for question answering helpfulness metric.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef:
      properties:
        displayName:
          type: string
          description: Display name of the AnnotationSpec.
        id:
          type: string
          description: ID of the AnnotationSpec.
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef
      type: object
    GoogleCloudAiplatformV1ToolParameterKeyMatchSpec:
      id: GoogleCloudAiplatformV1ToolParameterKeyMatchSpec
      properties: {}
      type: object
      description: Spec for tool parameter key match metric.
    GoogleCloudAiplatformV1SchemaPredictPredictionImageObjectDetectionPredictionResult:
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionImageObjectDetectionPredictionResult
      type: object
      properties:
        bboxes:
          items:
            items:
              type: any
            type: array
          description: >-
            Bounding boxes, i.e. the rectangles over the image, that pinpoint
            the found AnnotationSpecs. Given in order that matches the IDs. Each
            bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
            `yMax`, which represent the extremal coordinates of the box. They
            are relative to the image size, and the point 0,0 is in the top left
            of the image.
          type: array
        ids:
          description: >-
            The resource IDs of the AnnotationSpecs that had been identified,
            ordered by the confidence score descendingly.
          items:
            format: int64
            type: string
          type: array
        displayNames:
          type: array
          description: >-
            The display names of the AnnotationSpecs that had been identified,
            order matches the IDs.
          items:
            type: string
        confidences:
          type: array
          description: >-
            The Model's confidences in correctness of the predicted IDs, higher
            value means higher confidence. Order matches the Ids.
          items:
            type: number
            format: float
      description: Prediction output format for Image Object Detection.
    GoogleCloudAiplatformV1SchemaPredictionResult:
      properties:
        key:
          description: Optional user-provided key from the input instance.
          type: string
        instance:
          additionalProperties:
            description: Properties of the object.
            type: any
          description: >-
            User's input instance. Struct is used here instead of Any so that
            JsonFormat does not append an extra "@type" field when we convert
            the proto to JSON.
          type: object
        error:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaPredictionResultError
          description: The error result. Do not set prediction if this is set.
        prediction:
          description: >-
            The prediction result. Value is used here instead of Any so that
            JsonFormat does not append an extra "@type" field when we convert
            the proto to JSON and so we can represent array of objects. Do not
            set error if this is set.
          type: any
      type: object
      id: GoogleCloudAiplatformV1SchemaPredictionResult
      description: Represents a line of JSONL in the batch prediction output file.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecasting:
      properties:
        inputs:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs
          description: The input parameters of this TrainingJob.
        metadata:
          description: The metadata information.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecasting
      description: A TrainingJob that trains and uploads an AutoML Forecasting Model.
      type: object
    GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse:
      description: Response message for TensorboardService.BatchCreateTensorboardRuns.
      properties:
        tensorboardRuns:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
          description: The created TensorboardRuns.
          type: array
      type: object
      id: GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse
    GoogleCloudAiplatformV1ExportModelRequestOutputConfig:
      description: Output configuration for the Model export.
      properties:
        exportFormatId:
          description: >-
            The ID of the format in which the Model must be exported. Each Model
            lists the export formats it supports. If no value is provided here,
            then the first from the list of the Model's supported formats is
            used by default.
          type: string
        artifactDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: >-
            The Cloud Storage location where the Model artifact is to be written
            to. Under the directory given as the destination a new one with name
            "`model-export--`", where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ
            ISO-8601 format, will be created. Inside, the Model and any of its
            supporting files will be written. This field should only be set when
            the `exportableContent` field of the
            [Model.supported_export_formats] object contains `ARTIFACT`.
        imageDestination:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ContainerRegistryDestination
          description: >-
            The Google Container Registry or Artifact Registry uri where the
            Model container image will be copied to. This field should only be
            set when the `exportableContent` field of the
            [Model.supported_export_formats] object contains `IMAGE`.
      type: object
      id: GoogleCloudAiplatformV1ExportModelRequestOutputConfig
    GoogleCloudAiplatformV1ManualBatchTuningParameters:
      id: GoogleCloudAiplatformV1ManualBatchTuningParameters
      description: Manual batch tuning parameters.
      properties:
        batchSize:
          format: int32
          description: >-
            Immutable. The number of the records (e.g. instances) of the
            operation given in each batch to a machine replica. Machine type,
            and size of a single record should be considered when setting this
            parameter, higher value speeds up the batch operation's execution,
            but too high value will result in a whole batch not fitting in a
            machine's memory, and the whole operation will fail. The default
            value is 64.
          type: integer
      type: object
    GoogleCloudAiplatformV1CreateSpecialistPoolOperationMetadata:
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
      id: GoogleCloudAiplatformV1CreateSpecialistPoolOperationMetadata
      description: >-
        Runtime operation information for
        SpecialistPoolService.CreateSpecialistPool.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking:
      description: >-
        A TrainingJob that trains and uploads an AutoML Video ObjectTracking
        Model.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking
      type: object
      properties:
        inputs:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs
          description: The input parameters of this TrainingJob.
    GoogleCloudAiplatformV1Trial:
      type: object
      properties:
        name:
          description: Output only. Resource name of the Trial assigned by the service.
          type: string
          readOnly: true
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - REQUESTED
            - ACTIVE
            - STOPPING
            - SUCCEEDED
            - INFEASIBLE
          enumDescriptions:
            - The Trial state is unspecified.
            - >-
              Indicates that a specific Trial has been requested, but it has not
              yet been suggested by the service.
            - Indicates that the Trial has been suggested.
            - Indicates that the Trial should stop according to the service.
            - Indicates that the Trial is completed successfully.
            - >-
              Indicates that the Trial should not be attempted again. The
              service will set a Trial to INFEASIBLE when it's done but missing
              the final_measurement.
          readOnly: true
          description: Output only. The detailed state of the Trial.
        parameters:
          readOnly: true
          type: array
          description: Output only. The parameters of the Trial.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TrialParameter'
        webAccessUris:
          description: >-
            Output only. URIs for accessing [interactive
            shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell)
            (one URI for each training node). Only available if this trial is
            part of a HyperparameterTuningJob and the job's
            trial_job_spec.enable_web_access field is `true`. The keys are names
            of each node used for the trial; for example, `workerpool0-0` for
            the primary node, `workerpool1-0` for the first node in the second
            worker pool, and `workerpool1-1` for the second node in the second
            worker pool. The values are the URIs for each node's interactive
            shell.
          additionalProperties:
            type: string
          readOnly: true
          type: object
        customJob:
          description: >-
            Output only. The CustomJob name linked to the Trial. It's set for a
            HyperparameterTuningJob's Trial.
          type: string
          readOnly: true
        startTime:
          readOnly: true
          description: Output only. Time when the Trial was started.
          format: google-datetime
          type: string
        infeasibleReason:
          description: >-
            Output only. A human readable string describing why the Trial is
            infeasible. This is set only if Trial state is `INFEASIBLE`.
          readOnly: true
          type: string
        endTime:
          format: google-datetime
          readOnly: true
          description: >-
            Output only. Time when the Trial's status changed to `SUCCEEDED` or
            `INFEASIBLE`.
          type: string
        finalMeasurement:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Measurement'
          description: Output only. The final measurement containing the objective value.
          readOnly: true
        measurements:
          description: >-
            Output only. A list of measurements that are strictly
            lexicographically ordered by their induced tuples (steps,
            elapsed_duration). These are used for early stopping computations.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Measurement'
          readOnly: true
        id:
          description: Output only. The identifier of the Trial assigned by the service.
          readOnly: true
          type: string
        clientId:
          type: string
          readOnly: true
          description: >-
            Output only. The identifier of the client that originally requested
            this Trial. Each client is identified by a unique client_id. When a
            client asks for a suggestion, Vertex AI Vizier will assign it a
            Trial. The client should evaluate the Trial, complete it, and report
            back to Vertex AI Vizier. If suggestion is asked again by same
            client_id before the Trial is completed, the same Trial will be
            returned. Multiple clients with different client_ids can ask for
            suggestions simultaneously, each of them will get their own Trial.
      description: >-
        A message representing a Trial. A Trial contains a unique set of
        Parameters that has been or will be evaluated, along with the objective
        metrics got by running the Trial.
      id: GoogleCloudAiplatformV1Trial
    GoogleCloudAiplatformV1SupervisedHyperParameters:
      properties:
        learningRateMultiplier:
          type: number
          description: Optional. Multiplier for adjusting the default learning rate.
          format: double
        adapterSize:
          enum:
            - ADAPTER_SIZE_UNSPECIFIED
            - ADAPTER_SIZE_ONE
            - ADAPTER_SIZE_FOUR
            - ADAPTER_SIZE_EIGHT
            - ADAPTER_SIZE_SIXTEEN
            - ADAPTER_SIZE_THIRTY_TWO
          description: Optional. Adapter size for tuning.
          type: string
          enumDescriptions:
            - Adapter size is unspecified.
            - Adapter size 1.
            - Adapter size 4.
            - Adapter size 8.
            - Adapter size 16.
            - Adapter size 32.
        epochCount:
          description: >-
            Optional. Number of complete passes the model makes over the entire
            training dataset during training.
          type: string
          format: int64
      type: object
      description: Hyperparameters for SFT.
      id: GoogleCloudAiplatformV1SupervisedHyperParameters
    GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly:
      properties:
        objective:
          type: string
          enum:
            - OBJECTIVE_UNSPECIFIED
            - IMPORT_FEATURE_ANALYSIS
            - SNAPSHOT_ANALYSIS
          enumDescriptions:
            - If it's OBJECTIVE_UNSPECIFIED, monitoring_stats will be empty.
            - Stats are generated by Import Feature Analysis.
            - Stats are generated by Snapshot Analysis.
          description: Output only. The objective for each stats.
          readOnly: true
        featureStatsAnomaly:
          readOnly: true
          description: >-
            Output only. The stats and anomalies generated at specific
            timestamp.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureStatsAnomaly'
      id: GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly
      description: >-
        A list of historical SnapshotAnalysis or ImportFeaturesAnalysis stats
        requested by user, sorted by FeatureStatsAnomaly.start_time descending.
      type: object
    GoogleCloudAiplatformV1Tensor:
      description: A tensor value type.
      id: GoogleCloudAiplatformV1Tensor
      type: object
      properties:
        tensorVal:
          format: byte
          description: Serialized raw tensor content.
          type: string
        listVal:
          description: A list of tensor values.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
        floatVal:
          description: FLOAT
          items:
            format: float
            type: number
          type: array
        boolVal:
          description: >-
            Type specific representations that make it easy to create tensor
            protos in all languages. Only the representation corresponding to
            "dtype" can be set. The values hold the flattened representation of
            the tensor in row major order. BOOL
          items:
            type: boolean
          type: array
        int64Val:
          description: INT64
          type: array
          items:
            type: string
            format: int64
        dtype:
          enumDescriptions:
            - >-
              Not a legal value for DataType. Used to indicate a DataType field
              has not been set.
            - >-
              Data types that all computation devices are expected to be capable
              to support.
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: The data type of tensor.
          type: string
          enum:
            - DATA_TYPE_UNSPECIFIED
            - BOOL
            - STRING
            - FLOAT
            - DOUBLE
            - INT8
            - INT16
            - INT32
            - INT64
            - UINT8
            - UINT16
            - UINT32
            - UINT64
        stringVal:
          type: array
          description: STRING
          items:
            type: string
        uintVal:
          items:
            type: integer
            format: uint32
          type: array
          description: UINT8 UINT16 UINT32
        intVal:
          description: INT_8 INT_16 INT_32
          items:
            type: integer
            format: int32
          type: array
        doubleVal:
          description: DOUBLE
          items:
            format: double
            type: number
          type: array
        structVal:
          description: A map of string to tensor.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          type: object
        shape:
          type: array
          description: Shape of the tensor.
          items:
            format: int64
            type: string
        uint64Val:
          description: UINT64
          items:
            type: string
            format: uint64
          type: array
        bytesVal:
          description: STRING
          type: array
          items:
            format: byte
            type: string
    GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider:
      type: object
      id: GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider
      properties:
        allowedIssuers:
          items:
            type: string
          type: array
          description: >-
            A list of allowed JWT issuers. Each entry must be a valid Google
            service account, in the following format:
            `service-account-name@project-id.iam.gserviceaccount.com`
        audiences:
          items:
            type: string
          description: >-
            The list of JWT
            [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).
            that are allowed to access. A JWT containing any of these audiences
            will be accepted.
          type: array
      description: >-
        Configuration for an authentication provider, including support for
        [JSON Web Token
        (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
    GoogleCloudAiplatformV1CreateFeatureGroupOperationMetadata:
      type: object
      description: Details of operations that perform create FeatureGroup.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for FeatureGroup.
      id: GoogleCloudAiplatformV1CreateFeatureGroupOperationMetadata
    GoogleCloudAiplatformV1Annotation:
      description: >-
        Used to assign specific AnnotationSpec to a particular area of a
        DataItem or the whole part of the DataItem.
      properties:
        payloadSchemaUri:
          type: string
          description: >-
            Required. Google Cloud Storage URI points to a YAML file describing
            payload. The schema is defined as an [OpenAPI 3.0.2 Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            The schema files that can be used here are found in
            gs://google-cloud-aiplatform/schema/dataset/annotation/, note that
            the chosen schema must be consistent with the parent Dataset's
            metadata.
        updateTime:
          format: google-datetime
          description: Output only. Timestamp when this Annotation was last updated.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. The labels with user-defined metadata to organize your
            Annotations. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. No more than 64 user labels can be associated with one
            Annotation(System labels are excluded). See https://goo.gl/xmQnxf
            for more information and examples of labels. System reserved label
            keys are prefixed with "aiplatform.googleapis.com/" and are
            immutable. Following system labels exist for each Annotation: *
            "aiplatform.googleapis.com/annotation_set_name": optional, name of
            the UI's annotation set this Annotation belongs to. If not set, the
            Annotation is not visible in the UI. *
            "aiplatform.googleapis.com/payload_schema": output only, its value
            is the payload_schema's title.
          type: object
        etag:
          type: string
          description: >-
            Optional. Used to perform consistent read-modify-write updates. If
            not set, a blind "overwrite" update happens.
        annotationSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1UserActionReference'
          readOnly: true
          description: Output only. The source of the Annotation.
        payload:
          type: any
          description: Required. The schema of the payload can be found in payload_schema.
        name:
          description: Output only. Resource name of the Annotation.
          type: string
          readOnly: true
        createTime:
          description: Output only. Timestamp when this Annotation was created.
          readOnly: true
          format: google-datetime
          type: string
      type: object
      id: GoogleCloudAiplatformV1Annotation
    GoogleCloudAiplatformV1ImportDataRequest:
      description: Request message for DatasetService.ImportData.
      properties:
        importConfigs:
          description: >-
            Required. The desired input locations. The contents of all input
            locations will be imported in one batch.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ImportDataConfig'
      type: object
      id: GoogleCloudAiplatformV1ImportDataRequest
    GoogleCloudAiplatformV1ExplanationMetadataOverride:
      properties:
        inputs:
          description: >-
            Required. Overrides the input metadata of the features. The key is
            the name of the feature to be overridden. The keys specified here
            must exist in the input metadata to be overridden. If a feature is
            not specified here, the corresponding feature's input metadata is
            not overridden.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride
          type: object
      description: >-
        The ExplanationMetadata entries that can be overridden at online
        explanation time.
      type: object
      id: GoogleCloudAiplatformV1ExplanationMetadataOverride
    GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset:
      id: >-
        GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset
      type: object
      description: Represents one AnnotatedDataset in datalabeling.googleapis.com.
      properties:
        annotatedDataset:
          type: string
          description: >-
            Full resource name of data labeling AnnotatedDataset. Format:
            `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`.
        annotatedDatasetDisplayName:
          type: string
          description: The AnnotatedDataset's display name in datalabeling.googleapis.com.
    GoogleCloudAiplatformV1NasJobSpec:
      description: Represents the spec of a NasJob.
      properties:
        searchSpaceSpec:
          type: string
          description: It defines the search space for Neural Architecture Search (NAS).
        multiTrialAlgorithmSpec:
          description: The spec of multi-trial algorithms.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec
        resumeNasJobId:
          type: string
          description: >-
            The ID of the existing NasJob in the same Project and Location which
            will be used to resume search. search_space_spec and
            nas_algorithm_spec are obtained from previous NasJob hence should
            not provide them again for this NasJob.
      type: object
      id: GoogleCloudAiplatformV1NasJobSpec
    GoogleCloudAiplatformV1Scalar:
      type: object
      description: One point viewable on a scalar metric plot.
      id: GoogleCloudAiplatformV1Scalar
      properties:
        value:
          format: double
          type: number
          description: Value of the point at this step / timestamp.
    GoogleCloudAiplatformV1SchemaPredictPredictionTextExtractionPredictionResult:
      properties:
        textSegmentStartOffsets:
          items:
            format: int64
            type: string
          type: array
          description: >-
            The start offsets, inclusive, of the text segment in which the
            AnnotationSpec has been identified. Expressed as a zero-based number
            of characters as measured from the start of the text snippet.
        ids:
          type: array
          description: >-
            The resource IDs of the AnnotationSpecs that had been identified,
            ordered by the confidence score descendingly.
          items:
            format: int64
            type: string
        confidences:
          type: array
          items:
            format: float
            type: number
          description: >-
            The Model's confidences in correctness of the predicted IDs, higher
            value means higher confidence. Order matches the Ids.
        textSegmentEndOffsets:
          items:
            format: int64
            type: string
          type: array
          description: >-
            The end offsets, inclusive, of the text segment in which the
            AnnotationSpec has been identified. Expressed as a zero-based number
            of characters as measured from the start of the text snippet.
        displayNames:
          items:
            type: string
          description: >-
            The display names of the AnnotationSpecs that had been identified,
            order matches the IDs.
          type: array
      description: Prediction output format for Text Extraction.
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionTextExtractionPredictionResult
      type: object
    GoogleCloudAiplatformV1SummarizationHelpfulnessSpec:
      type: object
      id: GoogleCloudAiplatformV1SummarizationHelpfulnessSpec
      properties:
        version:
          description: Optional. Which version to use for evaluation.
          format: int32
          type: integer
        useReference:
          type: boolean
          description: >-
            Optional. Whether to use instance.reference to compute summarization
            helpfulness.
      description: Spec for summarization helpfulness score metric.
    GoogleCloudAiplatformV1MetadataStoreMetadataStoreState:
      id: GoogleCloudAiplatformV1MetadataStoreMetadataStoreState
      description: Represents state information for a MetadataStore.
      properties:
        diskUtilizationBytes:
          type: string
          description: The disk utilization of the MetadataStore in bytes.
          format: int64
      type: object
    GoogleCloudAiplatformV1FileData:
      properties:
        fileUri:
          type: string
          description: Required. URI.
        mimeType:
          description: Required. The IANA standard MIME type of the source data.
          type: string
      type: object
      description: URI based data.
      id: GoogleCloudAiplatformV1FileData
    GoogleCloudAiplatformV1NotebookExecutionJob:
      properties:
        serviceAccount:
          description: The service account to run the execution as.
          type: string
        createTime:
          description: Output only. Timestamp when this NotebookExecutionJob was created.
          readOnly: true
          type: string
          format: google-datetime
        status:
          description: >-
            Output only. Populated when the NotebookExecutionJob is completed.
            When there is an error during notebook execution, the error details
            are populated.
          $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        gcsOutputUri:
          description: >-
            The Cloud Storage location to upload the result to. Format:
            `gs://bucket-name`
          type: string
        gcsNotebookSource:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource
          description: >-
            The Cloud Storage url pointing to the ipynb file. Format:
            `gs://bucket/notebook_file.ipynb`
        directNotebookSource:
          description: The contents of an input notebook file.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource
        updateTime:
          format: google-datetime
          description: >-
            Output only. Timestamp when this NotebookExecutionJob was most
            recently updated.
          readOnly: true
          type: string
        executionTimeout:
          format: google-duration
          description: >-
            Max running time of the execution job in seconds (default 86400s /
            24 hrs).
          type: string
        name:
          readOnly: true
          description: >-
            Output only. The resource name of this NotebookExecutionJob. Format:
            `projects/{project_id}/locations/{location}/notebookExecutionJobs/{job_id}`
          type: string
        jobState:
          description: Output only. The state of the NotebookExecutionJob.
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          readOnly: true
          enumDescriptions:
            - The job state is unspecified.
            - >-
              The job has been just created or resumed and processing has not
              yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - >-
              The job is being cancelled. From this state the job may only go to
              either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
              `JOB_STATE_CANCELLED`.
            - The job has been cancelled.
            - The job has been stopped, and can be resumed.
            - The job has expired.
            - >-
              The job is being updated. Only jobs in the `RUNNING` state can be
              updated. After updating, the job goes back to the `RUNNING` state.
            - >-
              The job is partially succeeded, some results may be missing due to
              errors.
          type: string
        notebookRuntimeTemplateResourceName:
          type: string
          description: The NotebookRuntimeTemplate to source compute configuration from.
        displayName:
          description: >-
            The display name of the NotebookExecutionJob. The name can be up to
            128 characters long and can consist of any UTF-8 characters.
          type: string
        labels:
          description: >-
            The labels with user-defined metadata to organize
            NotebookExecutionJobs. Label keys and values can be no longer than
            64 characters (Unicode codepoints), can only contain lowercase
            letters, numeric characters, underscores and dashes. International
            characters are allowed. See https://goo.gl/xmQnxf for more
            information and examples of labels. System reserved label keys are
            prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
          additionalProperties:
            type: string
        scheduleResourceName:
          description: >-
            Output only. The Schedule resource name if this job is triggered by
            one. Format:
            `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
          type: string
          readOnly: true
        dataformRepositorySource:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource
          description: >-
            The Dataform Repository pointing to a single file notebook
            repository.
        executionUser:
          description: >-
            The user email to run the execution as. Only supported by Colab
            runtimes.
          type: string
        encryptionSpec:
          description: >-
            Customer-managed encryption key spec for the notebook execution job.
            This field is auto-populated if the
            NotebookService.NotebookRuntimeTemplate has an encryption spec.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
      type: object
      description: NotebookExecutionJob represents an instance of a notebook execution.
      id: GoogleCloudAiplatformV1NotebookExecutionJob
    GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter:
      id: GoogleCloudAiplatformV1NearestNeighborQueryNumericFilter
      description: >-
        Numeric filter is used to search a subset of the entities by using
        boolean rules on numeric columns. For example: Database Point 0: {name:
        "a" value_int: 42} {name: "b" value_float: 1.0} Database Point 1: {name:
        "a" value_int: 10} {name: "b" value_float: 2.0} Database Point 2: {name:
        "a" value_int: -1} {name: "b" value_float: 3.0} Query: {name: "a"
        value_int: 12 operator: LESS} // Matches Point 1, 2 {name: "b"
        value_float: 2.0 operator: EQUAL} // Matches Point 1
      type: object
      properties:
        valueInt:
          format: int64
          description: int value type.
          type: string
        valueDouble:
          type: number
          description: double value type.
          format: double
        op:
          enum:
            - OPERATOR_UNSPECIFIED
            - LESS
            - LESS_EQUAL
            - EQUAL
            - GREATER_EQUAL
            - GREATER
            - NOT_EQUAL
          description: >-
            Optional. This MUST be specified for queries and must NOT be
            specified for database points.
          type: string
          enumDescriptions:
            - Unspecified operator.
            - Entities are eligible if their value is < the query's.
            - Entities are eligible if their value is <= the query's.
            - Entities are eligible if their value is == the query's.
            - Entities are eligible if their value is >= the query's.
            - Entities are eligible if their value is > the query's.
            - Entities are eligible if their value is != the query's.
        name:
          type: string
          description: Required. Column name in BigQuery that used as filters.
        valueFloat:
          description: float value type.
          format: float
          type: number
    GoogleCloudAiplatformV1ReadTensorboardSizeResponse:
      description: Response message for TensorboardService.ReadTensorboardSize.
      properties:
        storageSizeByte:
          description: Payload storage size for the TensorBoard
          type: string
          format: int64
      id: GoogleCloudAiplatformV1ReadTensorboardSizeResponse
      type: object
    GoogleCloudAiplatformV1CoherenceSpec:
      properties:
        version:
          type: integer
          description: Optional. Which version to use for evaluation.
          format: int32
      description: Spec for coherence score metric.
      id: GoogleCloudAiplatformV1CoherenceSpec
      type: object
    GoogleCloudAiplatformV1ReadFeatureValuesResponse:
      id: GoogleCloudAiplatformV1ReadFeatureValuesResponse
      description: Response message for FeaturestoreOnlineServingService.ReadFeatureValues.
      properties:
        header:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader
          description: Response header.
        entityView:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView
          description: >-
            Entity view with Feature values. This may be the entity in the
            Featurestore if values for all Features were requested, or a
            projection of the entity in the Featurestore if values for only some
            Features were requested.
      type: object
    GoogleCloudAiplatformV1ReadTensorboardUsageResponse:
      properties:
        monthlyUsageData:
          description: Maps year-month (YYYYMM) string to per month usage data.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData
          type: object
      id: GoogleCloudAiplatformV1ReadTensorboardUsageResponse
      description: Response message for TensorboardService.ReadTensorboardUsage.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation
      properties:
        columnName:
          type: string
      description: >-
        Training pipeline will perform following transformation functions. * The
        text as is--no change to case, punctuation, spelling, tense, and so on.
        * Tokenize text to words. Convert each words to a dictionary lookup
        index and generate an embedding for each index. Combine the embedding of
        all elements into a single embedding using the mean. * Tokenization is
        based on unicode script boundaries. * Missing values get their own
        lookup index and resulting embedding. * Stop-words receive no special
        treatment and are not removed.
    GoogleCloudAiplatformV1VertexRagStore:
      properties:
        vectorDistanceThreshold:
          type: number
          format: double
          description: >-
            Optional. Only return results with vector distance smaller than the
            threshold.
        similarityTopK:
          type: integer
          format: int32
          description: >-
            Optional. Number of top k results to return from the selected
            corpora.
        ragCorpora:
          deprecated: true
          description: Optional. Deprecated. Please use rag_resources instead.
          type: array
          items:
            type: string
        ragResources:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1VertexRagStoreRagResource
          description: >-
            Optional. The representation of the rag source. It can be used to
            specify corpus only or ragfiles. Currently only support one corpus
            or multiple files from one corpus. In the future we may open up
            multiple corpora support.
          type: array
      description: Retrieve from Vertex RAG Store for grounding.
      id: GoogleCloudAiplatformV1VertexRagStore
      type: object
    GoogleCloudAiplatformV1CancelDataLabelingJobRequest:
      properties: {}
      description: Request message for JobService.CancelDataLabelingJob.
      id: GoogleCloudAiplatformV1CancelDataLabelingJobRequest
      type: object
    GoogleCloudAiplatformV1BatchReadFeatureValuesOperationMetadata:
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Featurestore batch read Features values.
      type: object
      id: GoogleCloudAiplatformV1BatchReadFeatureValuesOperationMetadata
      description: Details of operations that batch reads Feature values.
    GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature:
      description: Noise sigma for a single feature.
      properties:
        name:
          description: >-
            The name of the input feature for which noise sigma is provided. The
            features are defined in explanation metadata inputs.
          type: string
        sigma:
          format: float
          type: number
          description: >-
            This represents the standard deviation of the Gaussian kernel that
            will be used to add noise to the feature prior to computing
            gradients. Similar to noise_sigma but represents the noise added to
            the current feature. Defaults to 0.1.
      id: GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature
      type: object
    GoogleCloudAiplatformV1FluencyResult:
      properties:
        confidence:
          description: Output only. Confidence for fluency score.
          format: float
          type: number
          readOnly: true
        score:
          type: number
          format: float
          description: Output only. Fluency score.
          readOnly: true
        explanation:
          readOnly: true
          type: string
          description: Output only. Explanation for fluency score.
      description: Spec for fluency result.
      id: GoogleCloudAiplatformV1FluencyResult
      type: object
    GoogleCloudAiplatformV1VideoMetadata:
      description: Metadata describes the input video content.
      properties:
        endOffset:
          format: google-duration
          description: Optional. The end offset of the video.
          type: string
        startOffset:
          format: google-duration
          type: string
          description: Optional. The start offset of the video.
      id: GoogleCloudAiplatformV1VideoMetadata
      type: object
    GoogleCloudAiplatformV1PurgeContextsResponse:
      properties:
        purgeCount:
          format: int64
          type: string
          description: >-
            The number of Contexts that this request deleted (or, if `force` is
            false, the number of Contexts that will be deleted). This can be an
            estimate.
        purgeSample:
          items:
            type: string
          description: >-
            A sample of the Context names that will be deleted. Only populated
            if `force` is set to false. The maximum number of samples is 100 (it
            is possible to return fewer).
          type: array
      id: GoogleCloudAiplatformV1PurgeContextsResponse
      description: Response message for MetadataService.PurgeContexts.
      type: object
    GoogleCloudAiplatformV1FindNeighborsResponse:
      description: The response message for MatchService.FindNeighbors.
      type: object
      properties:
        nearestNeighbors:
          description: The nearest neighbors of the query datapoints.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors
      id: GoogleCloudAiplatformV1FindNeighborsResponse
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs:
      properties:
        targetColumn:
          type: string
          description: >-
            The name of the column that the Model is to predict values for. This
            column must be unavailable at forecast.
        contextWindow:
          type: string
          format: int64
          description: >-
            The amount of time into the past training and prediction data is
            used for model training and prediction respectively. Expressed in
            number of units defined by the `data_granularity` field.
        exportEvaluatedDataItemsConfig:
          description: >-
            Configuration for exporting test set predictions to a BigQuery
            table. If this configuration is absent, then the export is not
            performed.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig
        enableProbabilisticInference:
          description: >-
            If probabilistic inference is enabled, the model will fit a
            distribution that captures the uncertainty of a prediction. At
            inference time, the predictive distribution is used to make a point
            prediction that minimizes the optimization objective. For example,
            the mean of a predictive distribution is the point prediction that
            minimizes RMSE loss. If quantiles are specified, then the quantiles
            of the distribution are also returned. The optimization objective
            cannot be minimize-quantile-loss.
          type: boolean
        validationOptions:
          type: string
          description: >-
            Validation options for the data validation component. The available
            options are: * "fail-pipeline" - default, will validate against the
            validation and fail the pipeline if it fails. * "ignore-validation"
            - ignore the results of the validation and continue
        quantiles:
          items:
            format: double
            type: number
          description: >-
            Quantiles to use for minimize-quantile-loss
            `optimization_objective`, or for probabilistic inference. Up to 5
            quantiles are allowed of values between 0 and 1, exclusive. Required
            if the value of optimization_objective is minimize-quantile-loss.
            Represents the percent quantiles to use for that objective.
            Quantiles must be unique.
          type: array
        weightColumn:
          description: >-
            Column name that should be used as the weight column. Higher values
            in this column give more importance to the row during model
            training. The column must have numeric values between 0 and 10000
            inclusively; 0 means the row is ignored for training. If weight
            column field is not set, then all rows are assumed to have equal
            weight of 1.
          type: string
        timeSeriesIdentifierColumn:
          description: The name of the column that identifies the time series.
          type: string
        trainBudgetMilliNodeHours:
          format: int64
          type: string
          description: >-
            Required. The train budget of creating this model, expressed in
            milli node hours i.e. 1,000 value in this field means 1 node hour.
            The training cost of the model will not exceed this budget. The
            final cost will be attempted to be close to the budget, though may
            end up being (even) noticeably smaller - at the backend's
            discretion. This especially may happen when further model training
            ceases to provide any improvements. If the budget is set to a value
            known to be insufficient to train a model for the given dataset, the
            training won't be attempted and will error. The train budget must be
            between 1,000 and 72,000 milli node hours, inclusive.
        unavailableAtForecastColumns:
          items:
            type: string
          description: >-
            Names of columns that are unavailable when a forecast is requested.
            This column contains information for the given entity (identified by
            the time_series_identifier_column) that is unknown before the
            forecast For example, actual weather on a given day.
          type: array
        timeColumn:
          type: string
          description: >-
            The name of the column that identifies time order in the time
            series. This column must be available at forecast.
        additionalExperiments:
          items:
            type: string
          type: array
          description: Additional experiment flags for the time series forcasting training.
        optimizationObjective:
          type: string
          description: >-
            Objective function the model is optimizing towards. The training
            process creates a model that optimizes the value of the objective
            function over the validation set. The supported optimization
            objectives: * "minimize-rmse" (default) - Minimize root-mean-squared
            error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE).
            * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). *
            "minimize-rmspe" - Minimize root-mean-squared percentage error
            (RMSPE). * "minimize-wape-mae" - Minimize the combination of
            weighted absolute percentage error (WAPE) and mean-absolute-error
            (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at
            the quantiles defined in `quantiles`. * "minimize-mape" - Minimize
            the mean absolute percentage error.
        transformations:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation
          description: >-
            Each transformation will apply transform function to given input
            column. And the result will be used for training. When creating
            transformation for BigQuery Struct column, the column should be
            flattened using "." as the delimiter.
          type: array
        availableAtForecastColumns:
          items:
            type: string
          type: array
          description: >-
            Names of columns that are available and provided when a forecast is
            requested. These columns contain information for the given entity
            (identified by the time_series_identifier_column column) that is
            known at forecast. For example, predicted weather for a specific
            day.
        windowConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig
          description: Config containing strategy for generating sliding windows.
        holidayRegions:
          type: array
          description: >-
            The geographical region based on which the holiday effect is applied
            in modeling by adding holiday categorical array feature that include
            all holidays matching the date. This option only allowed when
            data_granularity is day. By default, holiday effect modeling is
            disabled. To turn it on, specify the holiday region using this
            option.
          items:
            type: string
        hierarchyConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig
          description: >-
            Configuration that defines the hierarchical relationship of time
            series and parameters for hierarchical forecasting strategies.
        dataGranularity:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity
          description: Expected difference in time granularity between rows in the data.
        forecastHorizon:
          type: string
          format: int64
          description: >-
            The amount of time into the future for which forecasted values for
            the target are returned. Expressed in number of units defined by the
            `data_granularity` field.
        timeSeriesAttributeColumns:
          items:
            type: string
          type: array
          description: >-
            Column names that should be used as attribute columns. The value of
            these columns does not vary as a function of time. For example,
            store ID or item color.
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs
    GoogleCloudAiplatformV1RebootPersistentResourceRequest:
      id: GoogleCloudAiplatformV1RebootPersistentResourceRequest
      description: Request message for PersistentResourceService.RebootPersistentResource.
      type: object
      properties: {}
    GoogleCloudAiplatformV1ToolNameMatchInstance:
      description: Spec for tool name match instance.
      id: GoogleCloudAiplatformV1ToolNameMatchInstance
      type: object
      properties:
        reference:
          description: Required. Ground truth used to compare against the prediction.
          type: string
        prediction:
          description: Required. Output of the evaluated model.
          type: string
    GoogleCloudAiplatformV1SchemaTextClassificationAnnotation:
      properties:
        displayName:
          type: string
          description: >-
            The display name of the AnnotationSpec that this Annotation pertains
            to.
        annotationSpecId:
          description: >-
            The resource Id of the AnnotationSpec that this Annotation pertains
            to.
          type: string
      type: object
      description: Annotation details specific to text classification.
      id: GoogleCloudAiplatformV1SchemaTextClassificationAnnotation
    GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies:
      description: Statistics and anomalies generated by Model Monitoring.
      properties:
        featureStats:
          description: A list of historical Stats and Anomalies generated for all Features.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies
        objective:
          enumDescriptions:
            - Default value, should not be set.
            - >-
              Raw feature values' stats to detect skew between
              Training-Prediction datasets.
            - >-
              Raw feature values' stats to detect drift between
              Serving-Prediction datasets.
            - >-
              Feature attribution scores to detect skew between
              Training-Prediction datasets.
            - >-
              Feature attribution scores to detect skew between Prediction
              datasets collected within different time windows.
          enum:
            - MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED
            - RAW_FEATURE_SKEW
            - RAW_FEATURE_DRIFT
            - FEATURE_ATTRIBUTION_SKEW
            - FEATURE_ATTRIBUTION_DRIFT
          description: Model Monitoring Objective those stats and anomalies belonging to.
          type: string
        deployedModelId:
          type: string
          description: Deployed Model ID.
        anomalyCount:
          format: int32
          type: integer
          description: Number of anomalies within all stats.
      id: GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies
      type: object
    GoogleCloudAiplatformV1LookupStudyRequest:
      description: Request message for VizierService.LookupStudy.
      id: GoogleCloudAiplatformV1LookupStudyRequest
      properties:
        displayName:
          description: Required. The user-defined display name of the Study
          type: string
      type: object
    GoogleCloudAiplatformV1ResourcePool:
      id: GoogleCloudAiplatformV1ResourcePool
      type: object
      description: >-
        Represents the spec of a group of resources of the same type, for
        example machine type, disk, and accelerators, in a PersistentResource.
      properties:
        machineSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MachineSpec'
          description: Required. Immutable. The specification of a single machine.
        usedReplicaCount:
          format: int64
          type: string
          readOnly: true
          description: >-
            Output only. The number of machines currently in use by training
            jobs for this resource pool. Will replace idle_replica_count.
        diskSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DiskSpec'
          description: Optional. Disk spec for the machine in this node pool.
        id:
          description: >-
            Immutable. The unique ID in a PersistentResource for referring to
            this resource pool. User can specify it if necessary. Otherwise,
            it's generated automatically.
          type: string
        replicaCount:
          type: string
          description: >-
            Optional. The total number of machines to use for this resource
            pool.
          format: int64
        autoscalingSpec:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ResourcePoolAutoscalingSpec
          description: >-
            Optional. Optional spec to configure GKE or Ray-on-Vertex
            autoscaling
    GoogleCloudAiplatformV1UpdateTensorboardOperationMetadata:
      description: Details of operations that perform update Tensorboard.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Tensorboard.
      type: object
      id: GoogleCloudAiplatformV1UpdateTensorboardOperationMetadata
    GoogleCloudAiplatformV1ListMetadataSchemasResponse:
      description: Response message for MetadataService.ListMetadataSchemas.
      id: GoogleCloudAiplatformV1ListMetadataSchemasResponse
      type: object
      properties:
        metadataSchemas:
          description: The MetadataSchemas found for the MetadataStore.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataSchema'
        nextPageToken:
          description: >-
            A token, which can be sent as ListMetadataSchemasRequest.page_token
            to retrieve the next page. If this field is not populated, there are
            no subsequent pages.
          type: string
    GoogleCloudAiplatformV1BigQuerySource:
      properties:
        inputUri:
          description: >-
            Required. BigQuery URI to a table, up to 2000 characters long.
            Accepted forms: * BigQuery path. For example:
            `bq://projectId.bqDatasetId.bqTableId`.
          type: string
      description: The BigQuery location for the input content.
      type: object
      id: GoogleCloudAiplatformV1BigQuerySource
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue:
      id: GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue
      description: Single value that supports strings and floats.
      properties:
        stringValue:
          description: String type.
          type: string
        floatValue:
          format: float
          type: number
          description: Float type.
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceTextSentimentPredictionInstance:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaPredictInstanceTextSentimentPredictionInstance
      description: Prediction input format for Text Sentiment.
      properties:
        mimeType:
          description: >-
            The MIME type of the text snippet. The supported MIME types are
            listed below. - text/plain
          type: string
        content:
          type: string
          description: The text snippet to make the predictions on.
    GoogleCloudAiplatformV1TokensInfo:
      properties:
        tokenIds:
          items:
            format: int64
            type: string
          description: A list of token ids from the input.
          type: array
        tokens:
          description: A list of tokens from the input.
          items:
            type: string
            format: byte
          type: array
        role:
          type: string
          description: >-
            Optional. Optional fields for the role from the corresponding
            Content.
      id: GoogleCloudAiplatformV1TokensInfo
      description: >-
        Tokens info with a list of tokens and the corresponding list of token
        ids.
      type: object
    GoogleCloudAiplatformV1SafetyResult:
      type: object
      description: Spec for safety result.
      id: GoogleCloudAiplatformV1SafetyResult
      properties:
        score:
          readOnly: true
          format: float
          description: Output only. Safety score.
          type: number
        explanation:
          type: string
          description: Output only. Explanation for safety score.
          readOnly: true
        confidence:
          type: number
          readOnly: true
          format: float
          description: Output only. Confidence for safety score.
    GoogleCloudAiplatformV1SchemaTextDatasetMetadata:
      type: object
      properties:
        gcsBucket:
          description: >-
            Google Cloud Storage Bucket name that contains the blob data of this
            Dataset.
          type: string
        dataItemSchemaUri:
          description: >-
            Points to a YAML file stored on Google Cloud Storage describing
            payload of the Text DataItems that belong to this Dataset.
          type: string
      id: GoogleCloudAiplatformV1SchemaTextDatasetMetadata
      description: The metadata of Datasets that contain Text DataItems.
    GoogleCloudAiplatformV1UpdateFeatureOnlineStoreOperationMetadata:
      id: GoogleCloudAiplatformV1UpdateFeatureOnlineStoreOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for FeatureOnlineStore.
      type: object
      description: Details of operations that perform update FeatureOnlineStore.
    GoogleCloudAiplatformV1Segment:
      properties:
        startIndex:
          readOnly: true
          format: int32
          description: >-
            Output only. Start index in the given Part, measured in bytes.
            Offset from the start of the Part, inclusive, starting at zero.
          type: integer
        endIndex:
          description: >-
            Output only. End index in the given Part, measured in bytes. Offset
            from the start of the Part, exclusive, starting at zero.
          readOnly: true
          type: integer
          format: int32
        text:
          type: string
          readOnly: true
          description: >-
            Output only. The text corresponding to the segment from the
            response.
        partIndex:
          type: integer
          description: >-
            Output only. The index of a Part object within its parent Content
            object.
          format: int32
          readOnly: true
      description: Segment of the content.
      id: GoogleCloudAiplatformV1Segment
      type: object
    GoogleCloudAiplatformV1FeatureViewSyncConfig:
      id: GoogleCloudAiplatformV1FeatureViewSyncConfig
      type: object
      description: Configuration for Sync. Only one option is set.
      properties:
        cron:
          description: >-
            Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch
            scheduled runs. To explicitly set a timezone to the cron tab, apply
            a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or
            "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid
            string from IANA time zone database. For example,
            "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * *
            * *".
          type: string
    GoogleCloudAiplatformV1DedicatedResources:
      type: object
      properties:
        maxReplicaCount:
          format: int32
          type: integer
          description: >-
            Immutable. The maximum number of replicas this DeployedModel may be
            deployed on when the traffic against it increases. If the requested
            value is too large, the deployment will error, but if deployment
            succeeds then the ability to scale the model to that many replicas
            is guaranteed (barring service outages). If traffic against the
            DeployedModel increases beyond what its replicas at maximum may
            handle, a portion of the traffic will be dropped. If this value is
            not provided, will use min_replica_count as the default value. The
            value of this field impacts the charge against Vertex CPU and GPU
            quotas. Specifically, you will be charged for (max_replica_count *
            number of cores in the selected machine type) and (max_replica_count
            * number of GPUs per replica in the selected machine type).
        machineSpec:
          description: >-
            Required. Immutable. The specification of a single machine used by
            the prediction.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MachineSpec'
        spot:
          type: boolean
          description: >-
            Optional. If true, schedule the deployment workload on [spot
            VMs](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms).
        autoscalingMetricSpecs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1AutoscalingMetricSpec'
          description: >-
            Immutable. The metric specifications that overrides a resource
            utilization metric (CPU utilization, accelerator's duty cycle, and
            so on) target value (default to 60 if not set). At most one entry is
            allowed per metric. If machine_spec.accelerator_count is above 0,
            the autoscaling will be based on both CPU utilization and
            accelerator's duty cycle metrics and scale up when either metrics
            exceeds its target value while scale down if both metrics are under
            their target value. The default target value is 60 for both metrics.
            If machine_spec.accelerator_count is 0, the autoscaling will be
            based on CPU utilization metric only with default target value 60 if
            not explicitly set. For example, in the case of Online Prediction,
            if you want to override target CPU utilization to 80, you should set
            autoscaling_metric_specs.metric_name to
            `aiplatform.googleapis.com/prediction/online/cpu/utilization` and
            autoscaling_metric_specs.target to `80`.
          type: array
        minReplicaCount:
          format: int32
          type: integer
          description: >-
            Required. Immutable. The minimum number of machine replicas this
            DeployedModel will be always deployed on. This value must be greater
            than or equal to 1. If traffic against the DeployedModel increases,
            it may dynamically be deployed onto more replicas, and as traffic
            decreases, some of these extra replicas may be freed.
      description: >-
        A description of resources that are dedicated to a DeployedModel, and
        that need a higher degree of manual configuration.
      id: GoogleCloudAiplatformV1DedicatedResources
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation:
      description: >-
        Training pipeline will perform following transformation functions. * The
        categorical string as is--no change to case, punctuation, spelling,
        tense, and so on. * Convert the category name to a dictionary lookup
        index and generate an embedding for each index. * Categories that appear
        less than 5 times in the training dataset are treated as the "unknown"
        category. The "unknown" category gets its own special lookup index and
        resulting embedding.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse:
      id: GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse
      description: Response message for TensorboardService.ReadTensorboardTimeSeriesData.
      properties:
        timeSeriesData:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TimeSeriesData'
          description: The returned time series data.
      type: object
    GoogleCloudAiplatformV1ExplanationSpecOverride:
      properties:
        examplesOverride:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExamplesOverride'
          description: The example-based explanations parameter overrides.
        parameters:
          description: >-
            The parameters to be overridden. Note that the attribution method
            cannot be changed. If not specified, no parameter is overridden.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationParameters'
        metadata:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataOverride
          description: >-
            The metadata to be overridden. If not specified, no metadata is
            overridden.
      id: GoogleCloudAiplatformV1ExplanationSpecOverride
      type: object
      description: >-
        The ExplanationSpec entries that can be overridden at online explanation
        time.
    GoogleCloudAiplatformV1ExactMatchSpec:
      type: object
      description: >-
        Spec for exact match metric - returns 1 if prediction and reference
        exactly matches, otherwise 0.
      id: GoogleCloudAiplatformV1ExactMatchSpec
      properties: {}
    GoogleCloudAiplatformV1Model:
      id: GoogleCloudAiplatformV1Model
      description: A trained machine learning Model.
      properties:
        displayName:
          type: string
          description: >-
            Required. The display name of the Model. The name can be up to 128
            characters long and can consist of any UTF-8 characters.
        versionUpdateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp when this version was most recently updated.
        pipelineJob:
          type: string
          description: >-
            Optional. This field is populated if the model is produced by a
            pipeline job.
        deployedModels:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModelRef'
          description: >-
            Output only. The pointers to DeployedModels created from this Model.
            Note that Model could have been deployed to Endpoints in different
            Locations.
        metadataArtifact:
          readOnly: true
          description: >-
            Output only. The resource name of the Artifact that was created in
            MetadataStore when creating the Model. The Artifact resource name
            pattern is
            `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
          type: string
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Customer-managed encryption key spec for a Model. If set, this Model
            and all sub-resources of this Model will be secured by this key.
        modelSourceInfo:
          description: >-
            Output only. Source of a model. It can either be automl training
            pipeline, custom training pipeline, BigQuery ML, or saved and tuned
            from Genie or Model Garden.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelSourceInfo'
        satisfiesPzi:
          type: boolean
          readOnly: true
          description: Output only. Reserved for future use.
        etag:
          description: >-
            Used to perform consistent read-modify-write updates. If not set, a
            blind "overwrite" update happens.
          type: string
        explanationSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec'
          description: >-
            The default explanation specification for this Model. The Model can
            be used for requesting explanation after being deployed if it is
            populated. The Model can be used for batch explanation if it is
            populated. All fields of the explanation_spec can be overridden by
            explanation_spec of DeployModelRequest.deployed_model, or
            explanation_spec of BatchPredictionJob. If the default explanation
            specification is not set for this Model, this Model can still be
            used for requesting explanation by setting explanation_spec of
            DeployModelRequest.deployed_model and for batch explanation by
            setting explanation_spec of BatchPredictionJob.
        versionCreateTime:
          description: Output only. Timestamp when this version was created.
          type: string
          format: google-datetime
          readOnly: true
        trainingPipeline:
          readOnly: true
          type: string
          description: >-
            Output only. The resource name of the TrainingPipeline that uploaded
            this Model, if any.
        containerSpec:
          description: >-
            Input only. The specification of the container that is to be used
            when deploying this Model. The specification is ingested upon
            ModelService.UploadModel, and all binaries it contains are copied
            and stored internally by Vertex AI. Not required for AutoML Models.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelContainerSpec'
        artifactUri:
          type: string
          description: >-
            Immutable. The path to the directory containing the Model artifact
            and any of its supporting files. Not required for AutoML Models.
        description:
          type: string
          description: The description of the Model.
        versionDescription:
          type: string
          description: The description of this version.
        metadataSchemaUri:
          description: >-
            Immutable. Points to a YAML file stored on Google Cloud Storage
            describing additional information about the Model, that is specific
            to it. Unset if the Model does not have any additional information.
            The schema is defined as an OpenAPI 3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            AutoML Models always have this field populated by Vertex AI, if no
            additional metadata is needed, this field is set to an empty string.
            Note: The URI given on output will be immutable and probably
            different, including the URI scheme, than the one given on input.
            The output URI will point to a location where the user only has a
            read access.
          type: string
        metadata:
          description: >-
            Immutable. An additional information about the Model; the schema of
            the metadata can be found in metadata_schema. Unset if the Model
            does not have any additional information.
          type: any
        versionAliases:
          type: array
          items:
            type: string
          description: >-
            User provided version aliases so that a model version can be
            referenced via alias (i.e.
            `projects/{project}/locations/{location}/models/{model_id}@{version_alias}`
            instead of auto-generated version id (i.e.
            `projects/{project}/locations/{location}/models/{model_id}@{version_id})`.
            The format is a-z{0,126}[a-z0-9] to distinguish from version_id. A
            default version alias will be created for the first version of the
            model, and there must be exactly one default version alias for a
            model.
        originalModelInfo:
          description: >-
            Output only. If this Model is a copy of another Model, this contains
            info about the original.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelOriginalModelInfo'
          readOnly: true
        predictSchemata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictSchemata'
          description: >-
            The schemata that describe formats of the Model's predictions and
            explanations as given and returned via PredictionService.Predict and
            PredictionService.Explain.
        supportedInputStorageFormats:
          readOnly: true
          description: >-
            Output only. The formats this Model supports in
            BatchPredictionJob.input_config. If
            PredictSchemata.instance_schema_uri exists, the instances should be
            given as per that schema. The possible formats are: * `jsonl` The
            JSON Lines format, where each instance is a single line. Uses
            GcsSource. * `csv` The CSV format, where each instance is a single
            comma-separated line. The first line in the file is the header,
            containing comma-separated field names. Uses GcsSource. *
            `tf-record` The TFRecord format, where each instance is a single
            record in tfrecord syntax. Uses GcsSource. * `tf-record-gzip`
            Similar to `tf-record`, but the file is gzipped. Uses GcsSource. *
            `bigquery` Each instance is a single row in BigQuery. Uses
            BigQuerySource. * `file-list` Each line of the file is the location
            of an instance to process, uses `gcs_source` field of the
            InputConfig object. If this Model doesn't support any of these
            formats it means it cannot be used with a BatchPredictionJob.
            However, if it has supported_deployment_resources_types, it could
            serve online predictions by using PredictionService.Predict or
            PredictionService.Explain.
          type: array
          items:
            type: string
        versionId:
          type: string
          readOnly: true
          description: >-
            Output only. Immutable. The version ID of the model. A new version
            is committed when a new model version is uploaded or trained under
            an existing model id. It is an auto-incrementing decimal number in
            string representation.
        labels:
          description: >-
            The labels with user-defined metadata to organize your Models. Label
            keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. See
            https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
          additionalProperties:
            type: string
        baseModelSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelBaseModelSource'
          description: >-
            Optional. User input field to specify the base model source.
            Currently it only supports specifing the Model Garden models and
            Genie models.
        supportedDeploymentResourcesTypes:
          type: array
          readOnly: true
          items:
            type: string
            enum:
              - DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED
              - DEDICATED_RESOURCES
              - AUTOMATIC_RESOURCES
              - SHARED_RESOURCES
            enumDescriptions:
              - Should not be used.
              - >-
                Resources that are dedicated to the DeployedModel, and that need
                a higher degree of manual configuration.
              - >-
                Resources that to large degree are decided by Vertex AI, and
                require only a modest additional configuration.
              - >-
                Resources that can be shared by multiple DeployedModels. A
                pre-configured DeploymentResourcePool is required.
          description: >-
            Output only. When this Model is deployed, its prediction resources
            are described by the `prediction_resources` field of the
            Endpoint.deployed_models object. Because not all Models support all
            resource configuration types, the configuration types this Model
            supports are listed here. If no configuration types are listed, the
            Model cannot be deployed to an Endpoint and does not support online
            predictions (PredictionService.Predict or
            PredictionService.Explain). Such a Model can serve predictions by
            using a BatchPredictionJob, if it has at least one entry each in
            supported_input_storage_formats and
            supported_output_storage_formats.
        dataStats:
          description: >-
            Stats of data used for training or evaluating the Model. Only
            populated when the Model is trained by a TrainingPipeline with
            data_input_config.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDataStats'
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this Model was most recently updated.
        satisfiesPzs:
          type: boolean
          readOnly: true
          description: Output only. Reserved for future use.
        supportedExportFormats:
          description: >-
            Output only. The formats in which this Model may be exported. If
            empty, this Model is not available for export.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelExportFormat'
        name:
          description: The resource name of the Model.
          type: string
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Timestamp when this Model was uploaded into Vertex AI.
        supportedOutputStorageFormats:
          description: >-
            Output only. The formats this Model supports in
            BatchPredictionJob.output_config. If both
            PredictSchemata.instance_schema_uri and
            PredictSchemata.prediction_schema_uri exist, the predictions are
            returned together with their instances. In other words, the
            prediction has the original instance data first, followed by the
            actual prediction content (as per the schema). The possible formats
            are: * `jsonl` The JSON Lines format, where each prediction is a
            single line. Uses GcsDestination. * `csv` The CSV format, where each
            prediction is a single comma-separated line. The first line in the
            file is the header, containing comma-separated field names. Uses
            GcsDestination. * `bigquery` Each prediction is a single row in a
            BigQuery table, uses BigQueryDestination . If this Model doesn't
            support any of these formats it means it cannot be used with a
            BatchPredictionJob. However, if it has
            supported_deployment_resources_types, it could serve online
            predictions by using PredictionService.Predict or
            PredictionService.Explain.
          items:
            type: string
          type: array
          readOnly: true
      type: object
    GoogleCloudAiplatformV1BatchCreateFeaturesResponse:
      type: object
      id: GoogleCloudAiplatformV1BatchCreateFeaturesResponse
      properties:
        features:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
          description: The Features created.
          type: array
      description: Response message for FeaturestoreService.BatchCreateFeatures.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation
      properties:
        columnName:
          type: string
      description: >-
        Training pipeline will perform following transformation functions. * The
        categorical string as is--no change to case, punctuation, spelling,
        tense, and so on. * Convert the category name to a dictionary lookup
        index and generate an embedding for each index. * Categories that appear
        less than 5 times in the training dataset are treated as the "unknown"
        category. The "unknown" category gets its own special lookup index and
        resulting embedding.
      type: object
    GoogleCloudAiplatformV1DiskSpec:
      id: GoogleCloudAiplatformV1DiskSpec
      description: Represents the spec of disk options.
      properties:
        bootDiskType:
          description: >-
            Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd"
            (Persistent Disk Solid State Drive) or "pd-standard" (Persistent
            Disk Hard Disk Drive).
          type: string
        bootDiskSizeGb:
          format: int32
          type: integer
          description: Size in GB of the boot disk (default is 100GB).
      type: object
    GoogleCloudAiplatformV1ToolParameterKeyMatchResults:
      description: Results for tool parameter key match metric.
      type: object
      id: GoogleCloudAiplatformV1ToolParameterKeyMatchResults
      properties:
        toolParameterKeyMatchMetricValues:
          description: Output only. Tool parameter key match metric values.
          type: array
          readOnly: true
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ToolParameterKeyMatchMetricValue
    GoogleCloudAiplatformV1BleuResults:
      description: Results for bleu metric.
      id: GoogleCloudAiplatformV1BleuResults
      type: object
      properties:
        bleuMetricValues:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1BleuMetricValue'
          description: Output only. Bleu metric values.
          readOnly: true
          type: array
    GoogleCloudAiplatformV1QuestionAnsweringQualityInstance:
      type: object
      properties:
        instruction:
          type: string
          description: Required. Question Answering prompt for LLM.
        reference:
          description: Optional. Ground truth used to compare against the prediction.
          type: string
        context:
          description: Required. Text to answer the question.
          type: string
        prediction:
          type: string
          description: Required. Output of the evaluated model.
      description: Spec for question answering quality instance.
      id: GoogleCloudAiplatformV1QuestionAnsweringQualityInstance
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig:
      description: >-
        Specification message containing the config for this SliceSpec. When
        `kind` is selected as `value` and/or `range`, only a single slice will
        be computed. When `all_values` is present, a separate slice will be
        computed for each possible label/value for the corresponding key in
        `config`. Examples, with feature zip_code with values 12345, 23334,
        88888 and feature country with values "US", "Canada", "Mexico" in the
        dataset: Example 1: { "zip_code": { "value": { "float_value": 12345.0 }
        } } A single slice for any data with zip_code 12345 in the dataset.
        Example 2: { "zip_code": { "range": { "low": 12345, "high": 20000 } } }
        A single slice containing data where the zip_codes between 12345 and
        20000 For this example, data with the zip_code of 12345 will be in this
        slice. Example 3: { "zip_code": { "range": { "low": 10000, "high": 20000
        } }, "country": { "value": { "string_value": "US" } } } A single slice
        containing data where the zip_codes between 10000 and 20000 has the
        country "US". For this example, data with the zip_code of 12345 and
        country "US" will be in this slice. Example 4: { "country":
        {"all_values": { "value": true } } } Three slices are computed, one for
        each unique country in the dataset. Example 5: { "country": {
        "all_values": { "value": true } }, "zip_code": { "value": {
        "float_value": 12345.0 } } } Three slices are computed, one for each
        unique country in the dataset where the zip_code is also 12345. For this
        example, data with zip_code 12345 and country "US" will be in one slice,
        zip_code 12345 and country "Canada" in another slice, and zip_code 12345
        and country "Mexico" in another slice, totaling 3 slices.
      id: GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig
      properties:
        value:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue
          description: >-
            A unique specific value for a given feature. Example: `{ "value": {
            "string_value": "12345" } }`
        allValues:
          type: boolean
          description: >-
            If all_values is set to true, then all possible labels of the keyed
            feature will have another slice computed. Example:
            `{"all_values":{"value":true}}`
        range:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange
          description: >-
            A range of values for a numerical feature. Example:
            `{"range":{"low":10000.0,"high":50000.0}}` will capture 12345 and
            23334 in the slice.
      type: object
    GoogleCloudAiplatformV1Examples:
      type: object
      description: >-
        Example-based explainability that returns the nearest neighbors from the
        provided dataset.
      id: GoogleCloudAiplatformV1Examples
      properties:
        presets:
          description: >-
            Simplified preset configuration, which automatically sets
            configuration values based on the desired query speed-precision
            trade-off and modality.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Presets'
        nearestNeighborSearchConfig:
          type: any
          description: >-
            The full configuration for the generated index, the semantics are
            the same as metadata and should match
            [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
        exampleGcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExamplesExampleGcsSource'
          description: The Cloud Storage input instances.
        neighborCount:
          format: int32
          description: The number of neighbors to return when querying for examples.
          type: integer
    GoogleCloudAiplatformV1ExplanationParameters:
      description: Parameters to configure explaining for Model's predictions.
      id: GoogleCloudAiplatformV1ExplanationParameters
      type: object
      properties:
        integratedGradientsAttribution:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1IntegratedGradientsAttribution
          description: >-
            An attribution method that computes Aumann-Shapley values taking
            advantage of the model's fully differentiable structure. Refer to
            this paper for more details: https://arxiv.org/abs/1703.01365
        sampledShapleyAttribution:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SampledShapleyAttribution
          description: >-
            An attribution method that approximates Shapley values for features
            that contribute to the label being predicted. A sampling strategy is
            used to approximate the value rather than considering all subsets of
            features. Refer to this paper for model details:
            https://arxiv.org/abs/1306.4265.
        outputIndices:
          items:
            type: any
          description: >-
            If populated, only returns attributions that have output_index
            contained in output_indices. It must be an ndarray of integers, with
            the same shape of the output it's explaining. If not populated,
            returns attributions for top_k indices of outputs. If neither top_k
            nor output_indices is populated, returns the argmax index of the
            outputs. Only applicable to Models that predict multiple outputs
            (e,g, multi-class Models that predict multiple classes).
          type: array
        xraiAttribution:
          description: >-
            An attribution method that redistributes Integrated Gradients
            attribution to segmented regions, taking advantage of the model's
            fully differentiable structure. Refer to this paper for more
            details: https://arxiv.org/abs/1906.02825 XRAI currently performs
            better on natural images, like a picture of a house or an animal. If
            the images are taken in artificial environments, like a lab or
            manufacturing line, or from diagnostic equipment, like x-rays or
            quality-control cameras, use Integrated Gradients instead.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1XraiAttribution'
        examples:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Examples'
          description: >-
            Example-based explanations that returns the nearest neighbors from
            the provided dataset.
        topK:
          description: >-
            If populated, returns attributions for top K indices of outputs
            (defaults to 1). Only applies to Models that predicts more than one
            outputs (e,g, multi-class Models). When set to -1, returns
            explanations for all outputs.
          format: int32
          type: integer
    GoogleCloudAiplatformV1Measurement:
      properties:
        stepCount:
          type: string
          description: >-
            Output only. The number of steps the machine learning model has been
            trained for. Must be non-negative.
          readOnly: true
          format: int64
        metrics:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MeasurementMetric'
          type: array
          description: >-
            Output only. A list of metrics got by evaluating the objective
            functions using suggested Parameter values.
          readOnly: true
        elapsedDuration:
          readOnly: true
          type: string
          description: >-
            Output only. Time that the Trial has been running at the point of
            this Measurement.
          format: google-duration
      id: GoogleCloudAiplatformV1Measurement
      description: >-
        A message representing a Measurement of a Trial. A Measurement contains
        the Metrics got by executing a Trial using suggested hyperparameter
        values.
      type: object
    GoogleCloudAiplatformV1SchemaImageBoundingBoxAnnotation:
      properties:
        xMax:
          type: number
          description: The rightmost coordinate of the bounding box.
          format: double
        displayName:
          description: >-
            The display name of the AnnotationSpec that this Annotation pertains
            to.
          type: string
        yMin:
          type: number
          description: The topmost coordinate of the bounding box.
          format: double
        annotationSpecId:
          type: string
          description: >-
            The resource Id of the AnnotationSpec that this Annotation pertains
            to.
        yMax:
          type: number
          description: The bottommost coordinate of the bounding box.
          format: double
        xMin:
          type: number
          description: The leftmost coordinate of the bounding box.
          format: double
      id: GoogleCloudAiplatformV1SchemaImageBoundingBoxAnnotation
      description: Annotation details specific to image object detection.
      type: object
    GoogleCloudAiplatformV1GroundingChunk:
      id: GoogleCloudAiplatformV1GroundingChunk
      description: Grounding chunk.
      properties:
        retrievedContext:
          description: Grounding chunk from context retrieved by the retrieval tools.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1GroundingChunkRetrievedContext
        web:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GroundingChunkWeb'
          description: Grounding chunk from the web.
      type: object
    GoogleCloudAiplatformV1BleuMetricValue:
      properties:
        score:
          description: Output only. Bleu score.
          type: number
          format: float
          readOnly: true
      description: Bleu metric value for an instance.
      id: GoogleCloudAiplatformV1BleuMetricValue
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningTask:
      type: object
      properties:
        metadata:
          description: The metadata information.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata
        inputs:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec
          description: The input parameters of this HyperparameterTuningTask.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningTask
      description: A TrainingJob that tunes Hypererparameters of a custom code Model.
    GoogleCloudAiplatformV1Featurestore:
      description: >-
        Vertex AI Feature Store provides a centralized repository for
        organizing, storing, and serving ML features. The Featurestore is a
        top-level container for your features and their values.
      id: GoogleCloudAiplatformV1Featurestore
      properties:
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. The labels with user-defined metadata to organize your
            Featurestore. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. See https://goo.gl/xmQnxf for more information on and
            examples of labels. No more than 64 user labels can be associated
            with one Featurestore(System labels are excluded)." System reserved
            label keys are prefixed with "aiplatform.googleapis.com/" and are
            immutable.
          type: object
        onlineServingConfig:
          description: >-
            Optional. Config for online storage resources. The field should not
            co-exist with the field of `OnlineStoreReplicationConfig`. If both
            of it and OnlineStoreReplicationConfig are unset, the feature store
            will not have an online store and cannot be used for online serving.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig
        onlineStorageTtlDays:
          format: int32
          description: >-
            Optional. TTL in days for feature values that will be stored in
            online serving storage. The Feature Store online storage
            periodically removes obsolete feature values older than
            `online_storage_ttl_days` since the feature generation time. Note
            that `online_storage_ttl_days` should be less than or equal to
            `offline_storage_ttl_days` for each EntityType under a featurestore.
            If not set, default to 4000 days
          type: integer
        updateTime:
          type: string
          description: Output only. Timestamp when this Featurestore was last updated.
          format: google-datetime
          readOnly: true
        satisfiesPzi:
          type: boolean
          readOnly: true
          description: Output only. Reserved for future use.
        etag:
          type: string
          description: >-
            Optional. Used to perform consistent read-modify-write updates. If
            not set, a blind "overwrite" update happens.
        encryptionSpec:
          description: >-
            Optional. Customer-managed encryption key spec for data storage. If
            set, both of the online and offline data storage will be secured by
            this key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        state:
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - STABLE
            - UPDATING
          description: Output only. State of the featurestore.
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              State when the featurestore configuration is not being updated and
              the fields reflect the current configuration of the featurestore.
              The featurestore is usable in this state.
            - >-
              The state of the featurestore configuration when it is being
              updated. During an update, the fields reflect either the original
              configuration or the updated configuration of the featurestore.
              For example, `online_serving_config.fixed_node_count` can take
              minutes to update. While the update is in progress, the
              featurestore is in the UPDATING state, and the value of
              `fixed_node_count` can be the original value or the updated value,
              depending on the progress of the operation. Until the update
              completes, the actual number of nodes can still be the original
              value of `fixed_node_count`. The featurestore is still usable in
              this state.
          type: string
        satisfiesPzs:
          type: boolean
          description: Output only. Reserved for future use.
          readOnly: true
        createTime:
          readOnly: true
          type: string
          description: Output only. Timestamp when this Featurestore was created.
          format: google-datetime
        name:
          description: >-
            Output only. Name of the Featurestore. Format:
            `projects/{project}/locations/{location}/featurestores/{featurestore}`
          type: string
          readOnly: true
      type: object
    GoogleCloudAiplatformV1FeatureGroup:
      id: GoogleCloudAiplatformV1FeatureGroup
      type: object
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp when this FeatureGroup was created.
        updateTime:
          description: Output only. Timestamp when this FeatureGroup was last updated.
          type: string
          readOnly: true
          format: google-datetime
        bigQuery:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureGroupBigQuery'
          description: >-
            Indicates that features for this group come from BigQuery
            Table/View. By default treats the source as a sparse time series
            source. The BigQuery source table or view must have at least one
            entity ID column and a column named `feature_timestamp`.
        name:
          description: >-
            Identifier. Name of the FeatureGroup. Format:
            `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
          type: string
        description:
          description: Optional. Description of the FeatureGroup.
          type: string
        etag:
          type: string
          description: >-
            Optional. Used to perform consistent read-modify-write updates. If
            not set, a blind "overwrite" update happens.
        labels:
          description: >-
            Optional. The labels with user-defined metadata to organize your
            FeatureGroup. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. See https://goo.gl/xmQnxf for more information on and
            examples of labels. No more than 64 user labels can be associated
            with one FeatureGroup(System labels are excluded)." System reserved
            label keys are prefixed with "aiplatform.googleapis.com/" and are
            immutable.
          additionalProperties:
            type: string
          type: object
      description: Vertex AI Feature Group.
    GoogleCloudAiplatformV1CountTokensResponse:
      id: GoogleCloudAiplatformV1CountTokensResponse
      description: Response message for PredictionService.CountTokens.
      type: object
      properties:
        totalBillableCharacters:
          description: >-
            The total number of billable characters counted across all instances
            from the request.
          format: int32
          type: integer
        totalTokens:
          description: >-
            The total number of tokens counted across all instances from the
            request.
          type: integer
          format: int32
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics:
      description: Metrics for forecasting evaluation results.
      type: object
      properties:
        meanAbsoluteError:
          description: Mean Absolute Error (MAE).
          type: number
          format: float
        weightedAbsolutePercentageError:
          format: float
          description: >-
            Weighted Absolute Percentage Error. Does not use weights, this is
            just what the metric is called. Undefined if actual values sum to
            zero. Will be very large if actual values sum to a very small
            number.
          type: number
        rootMeanSquaredError:
          type: number
          format: float
          description: Root Mean Squared Error (RMSE).
        rootMeanSquaredPercentageError:
          format: float
          type: number
          description: >-
            Root Mean Square Percentage Error. Square root of MSPE.
            Undefined/imaginary when MSPE is negative.
        rSquared:
          format: float
          type: number
          description: >-
            Coefficient of determination as Pearson correlation coefficient.
            Undefined when ground truth or predictions are constant or near
            constant.
        quantileMetrics:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry
          description: The quantile metrics entries for each quantile.
          type: array
        meanAbsolutePercentageError:
          description: >-
            Mean absolute percentage error. Infinity when there are zeros in the
            ground truth.
          format: float
          type: number
        rootMeanSquaredLogError:
          description: >-
            Root mean squared log error. Undefined when there are negative
            ground truth values or predictions.
          format: float
          type: number
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics
    GoogleCloudAiplatformV1BigQueryDestination:
      description: The BigQuery location for the output content.
      type: object
      id: GoogleCloudAiplatformV1BigQueryDestination
      properties:
        outputUri:
          description: >-
            Required. BigQuery URI to a project or table, up to 2000 characters
            long. When only the project is specified, the Dataset and Table is
            created. When the full table reference is specified, the Dataset
            must exist and table must not exist. Accepted forms: * BigQuery
            path. For example: `bq://projectId` or `bq://projectId.bqDatasetId`
            or `bq://projectId.bqDatasetId.bqTableId`.
          type: string
    GoogleCloudAiplatformV1SchemaVideoDatasetMetadata:
      type: object
      id: GoogleCloudAiplatformV1SchemaVideoDatasetMetadata
      properties:
        dataItemSchemaUri:
          description: >-
            Points to a YAML file stored on Google Cloud Storage describing
            payload of the Video DataItems that belong to this Dataset.
          type: string
        gcsBucket:
          type: string
          description: >-
            Google Cloud Storage Bucket name that contains the blob data of this
            Dataset.
      description: The metadata of Datasets that contain Video DataItems.
    GoogleCloudAiplatformV1SafetyRating:
      type: object
      description: Safety rating corresponding to the generated content.
      id: GoogleCloudAiplatformV1SafetyRating
      properties:
        probabilityScore:
          description: Output only. Harm probability score.
          type: number
          format: float
          readOnly: true
        severity:
          readOnly: true
          type: string
          enumDescriptions:
            - Harm severity unspecified.
            - Negligible level of harm severity.
            - Low level of harm severity.
            - Medium level of harm severity.
            - High level of harm severity.
          enum:
            - HARM_SEVERITY_UNSPECIFIED
            - HARM_SEVERITY_NEGLIGIBLE
            - HARM_SEVERITY_LOW
            - HARM_SEVERITY_MEDIUM
            - HARM_SEVERITY_HIGH
          description: Output only. Harm severity levels in the content.
        probability:
          enumDescriptions:
            - Harm probability unspecified.
            - Negligible level of harm.
            - Low level of harm.
            - Medium level of harm.
            - High level of harm.
          readOnly: true
          type: string
          description: Output only. Harm probability levels in the content.
          enum:
            - HARM_PROBABILITY_UNSPECIFIED
            - NEGLIGIBLE
            - LOW
            - MEDIUM
            - HIGH
        severityScore:
          description: Output only. Harm severity score.
          type: number
          readOnly: true
          format: float
        blocked:
          readOnly: true
          type: boolean
          description: >-
            Output only. Indicates whether the content was filtered out because
            of this rating.
        category:
          type: string
          enumDescriptions:
            - The harm category is unspecified.
            - The harm category is hate speech.
            - The harm category is dangerous content.
            - The harm category is harassment.
            - The harm category is sexually explicit content.
            - The harm category is civic integrity.
          enum:
            - HARM_CATEGORY_UNSPECIFIED
            - HARM_CATEGORY_HATE_SPEECH
            - HARM_CATEGORY_DANGEROUS_CONTENT
            - HARM_CATEGORY_HARASSMENT
            - HARM_CATEGORY_SEXUALLY_EXPLICIT
            - HARM_CATEGORY_CIVIC_INTEGRITY
          readOnly: true
          description: Output only. Harm category.
    GoogleCloudAiplatformV1SearchFeaturesResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as SearchFeaturesRequest.page_token to
            retrieve the next page. If this field is omitted, there are no
            subsequent pages.
        features:
          description: >-
            The Features matching the request. Fields returned: * `name` *
            `description` * `labels` * `create_time` * `update_time`
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
          type: array
      type: object
      id: GoogleCloudAiplatformV1SearchFeaturesResponse
      description: Response message for FeaturestoreService.SearchFeatures.
    GoogleCloudAiplatformV1DeleteFeatureValuesOperationMetadata:
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Featurestore delete Features values.
      id: GoogleCloudAiplatformV1DeleteFeatureValuesOperationMetadata
      description: Details of operations that delete Feature values.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation:
      properties:
        columnName:
          type: string
        invalidValuesAllowed:
          description: >-
            If invalid values is allowed, the training pipeline will create a
            boolean feature that indicated whether the value is valid.
            Otherwise, the training pipeline will discard the input row from
            trainining data.
          type: boolean
      description: >-
        Training pipeline will perform following transformation functions. * The
        value converted to float32. * The z_score of the value. * log(value+1)
        when the value is greater than or equal to 0. Otherwise, this
        transformation is not applied and the value is considered a missing
        value. * z_score of log(value+1) when the value is greater than or equal
        to 0. Otherwise, this transformation is not applied and the value is
        considered a missing value. * A boolean value that indicates whether the
        value is valid.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec
      properties:
        parallelTrialCount:
          type: integer
          description: The desired number of Trials to run in parallel.
          format: int32
        maxTrialCount:
          format: int32
          description: The desired total number of Trials.
          type: integer
        studySpec:
          description: Study configuration of the HyperparameterTuningJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpec'
        maxFailedTrialCount:
          format: int32
          type: integer
          description: >-
            The number of failed Trials that need to be seen before failing the
            HyperparameterTuningJob. If set to 0, Vertex AI decides how many
            Trials must fail before the whole job fails.
        trialJobSpec:
          description: >-
            The spec of a trial job. The same spec applies to the CustomJobs
            created in all the trials.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
      type: object
    GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateMetatdata:
      description: >-
        This message will be placed in the metadata field of a
        google.longrunning.Operation associated with a
        CheckTrialEarlyStoppingState request.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for suggesting Trials.
        trial:
          type: string
          description: The Trial name.
        study:
          type: string
          description: The name of the Study that the Trial belongs to.
      id: GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateMetatdata
      type: object
    GoogleCloudAiplatformV1StartNotebookRuntimeRequest:
      properties: {}
      id: GoogleCloudAiplatformV1StartNotebookRuntimeRequest
      description: Request message for NotebookService.StartNotebookRuntime.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata:
      type: object
      properties:
        costMilliNodeHours:
          description: >-
            The actual training cost of creating this model, expressed in milli
            node hours, i.e. 1,000 value in this field means 1 node hour.
            Guaranteed to not exceed inputs.budgetMilliNodeHours.
          type: string
          format: int64
        successfulStopReason:
          type: string
          enum:
            - SUCCESSFUL_STOP_REASON_UNSPECIFIED
            - BUDGET_REACHED
            - MODEL_CONVERGED
          enumDescriptions:
            - Should not be set.
            - The inputs.budgetMilliNodeHours had been reached.
            - >-
              Further training of the Model ceased to increase its quality,
              since it already has converged.
          description: >-
            For successful job completions, this is the reason why the job has
            finished.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata
    GoogleCloudAiplatformV1Tool:
      id: GoogleCloudAiplatformV1Tool
      description: >-
        Tool details that the model may use to generate response. A `Tool` is a
        piece of code that enables the system to interact with external systems
        to perform an action, or set of actions, outside of knowledge and scope
        of the model. A Tool object should contain exactly one type of Tool (e.g
        FunctionDeclaration, Retrieval or GoogleSearchRetrieval).
      type: object
      properties:
        functionDeclarations:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FunctionDeclaration'
          description: >-
            Optional. Function tool type. One or more function declarations to
            be passed to the model along with the current user query. Model may
            decide to call a subset of these functions by populating
            FunctionCall in the response. User should provide a FunctionResponse
            for each function call in the next turn. Based on the function
            responses, Model will generate the final response back to the user.
            Maximum 64 function declarations can be provided.
          type: array
        retrieval:
          description: >-
            Optional. Retrieval tool type. System will always execute the
            provided retrieval tool(s) to get external knowledge to answer the
            prompt. Retrieval results are presented to the model for generation.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Retrieval'
        googleSearchRetrieval:
          description: >-
            Optional. GoogleSearchRetrieval tool type. Specialized retrieval
            tool that is powered by Google search.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GoogleSearchRetrieval'
    GoogleCloudAiplatformV1ReadFeatureValuesRequest:
      properties:
        featureSelector:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureSelector'
          description: Required. Selector choosing Features of the target EntityType.
        entityId:
          description: >-
            Required. ID for a specific entity. For example, for a machine
            learning model predicting user clicks on a website, an entity ID
            could be `user_123`.
          type: string
      type: object
      description: Request message for FeaturestoreOnlineServingService.ReadFeatureValues.
      id: GoogleCloudAiplatformV1ReadFeatureValuesRequest
    GoogleCloudAiplatformV1FetchFeatureValuesRequest:
      description: >-
        Request message for FeatureOnlineStoreService.FetchFeatureValues. All
        the features under the requested feature view will be returned.
      id: GoogleCloudAiplatformV1FetchFeatureValuesRequest
      type: object
      properties:
        dataKey:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureViewDataKey'
          description: Optional. The request key to fetch feature values for.
        dataFormat:
          description: >-
            Optional. Response data format. If not set,
            FeatureViewDataFormat.KEY_VALUE will be used.
          type: string
          enum:
            - FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED
            - KEY_VALUE
            - PROTO_STRUCT
          enumDescriptions:
            - Not set. Will be treated as the KeyValue format.
            - Return response data in key-value format.
            - Return response data in proto Struct format.
    GoogleCloudAiplatformV1SchemaPredictPredictionTabularRegressionPredictionResult:
      description: Prediction output format for Tabular Regression.
      type: object
      properties:
        lowerBound:
          description: The lower bound of the prediction interval.
          type: number
          format: float
        quantilePredictions:
          type: array
          description: Quantile predictions, in 1-1 correspondence with quantile_values.
          items:
            type: number
            format: float
        quantileValues:
          description: Quantile values.
          items:
            format: float
            type: number
          type: array
        value:
          description: The regression value.
          format: float
          type: number
        upperBound:
          type: number
          description: The upper bound of the prediction interval.
          format: float
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionTabularRegressionPredictionResult
    GoogleCloudAiplatformV1MigratableResource:
      id: GoogleCloudAiplatformV1MigratableResource
      description: >-
        Represents one resource that exists in automl.googleapis.com,
        datalabeling.googleapis.com or ml.googleapis.com.
      type: object
      properties:
        automlDataset:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1MigratableResourceAutomlDataset
          description: Output only. Represents one Dataset in automl.googleapis.com.
          readOnly: true
        lastMigrateTime:
          type: string
          description: >-
            Output only. Timestamp when the last migration attempt on this
            MigratableResource started. Will not be set if there's no migration
            attempt on this MigratableResource.
          readOnly: true
          format: google-datetime
        lastUpdateTime:
          readOnly: true
          format: google-datetime
          description: >-
            Output only. Timestamp when this MigratableResource was last
            updated.
          type: string
        mlEngineModelVersion:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion
          description: Output only. Represents one Version in ml.googleapis.com.
          readOnly: true
        dataLabelingDataset:
          description: Output only. Represents one Dataset in datalabeling.googleapis.com.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset
        automlModel:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1MigratableResourceAutomlModel
          description: Output only. Represents one Model in automl.googleapis.com.
          readOnly: true
    GoogleCloudAiplatformV1QuestionAnsweringQualitySpec:
      properties:
        useReference:
          description: >-
            Optional. Whether to use instance.reference to compute question
            answering quality.
          type: boolean
        version:
          description: Optional. Which version to use for evaluation.
          format: int32
          type: integer
      description: Spec for question answering quality score metric.
      type: object
      id: GoogleCloudAiplatformV1QuestionAnsweringQualitySpec
    GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec:
      properties:
        values:
          items:
            type: number
            format: double
          type: array
          description: >-
            Required. A list of possible values. The list should be in
            increasing order and at least 1e-10 apart. For instance, this
            parameter might have possible settings of 1.5, 2.5, and 4.0. This
            list should not contain more than 1,000 values.
        defaultValue:
          format: double
          type: number
          description: >-
            A default value for a `DISCRETE` parameter that is assumed to be a
            relatively good starting point. Unset value signals that there is no
            offered starting point. It automatically rounds to the nearest
            feasible discrete point. Currently only supported by the Vertex AI
            Vizier service. Not supported by HyperparameterTuningJob or
            TrainingPipeline.
      id: GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec
      description: Value specification for a parameter in `DISCRETE` type.
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult:
      type: object
      properties:
        tftFeatureImportance:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance
          description: Only use these if TFt is enabled.
        value:
          description: The regression value.
          type: number
          format: float
        quantilePredictions:
          description: Quantile predictions, in 1-1 correspondence with quantile_values.
          type: array
          items:
            format: float
            type: number
        quantileValues:
          type: array
          items:
            format: float
            type: number
          description: Quantile values.
      description: Prediction output format for Time Series Forecasting.
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult
    GoogleCloudAiplatformV1SchemaPredictionResultError:
      id: GoogleCloudAiplatformV1SchemaPredictionResultError
      properties:
        message:
          type: string
          description: Error message with additional details.
        status:
          description: >-
            Error status. This will be serialized into the enum name e.g.
            "NOT_FOUND".
          enumDescriptions:
            - 'Not an error; returned on success. HTTP Mapping: 200 OK'
            - >-
              The operation was cancelled, typically by the caller. HTTP
              Mapping: 499 Client Closed Request
            - >-
              Unknown error. For example, this error may be returned when a
              `Status` value received from another address space belongs to an
              error space that is not known in this address space. Also errors
              raised by APIs that do not return enough error information may be
              converted to this error. HTTP Mapping: 500 Internal Server Error
            - >-
              The client specified an invalid argument. Note that this differs
              from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments
              that are problematic regardless of the state of the system (e.g.,
              a malformed file name). HTTP Mapping: 400 Bad Request
            - >-
              The deadline expired before the operation could complete. For
              operations that change the state of the system, this error may be
              returned even if the operation has completed successfully. For
              example, a successful response from a server could have been
              delayed long enough for the deadline to expire. HTTP Mapping: 504
              Gateway Timeout
            - >-
              Some requested entity (e.g., file or directory) was not found.
              Note to server developers: if a request is denied for an entire
              class of users, such as gradual feature rollout or undocumented
              allowlist, `NOT_FOUND` may be used. If a request is denied for
              some users within a class of users, such as user-based access
              control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not
              Found
            - >-
              The entity that a client attempted to create (e.g., file or
              directory) already exists. HTTP Mapping: 409 Conflict
            - >-
              The caller does not have permission to execute the specified
              operation. `PERMISSION_DENIED` must not be used for rejections
              caused by exhausting some resource (use `RESOURCE_EXHAUSTED`
              instead for those errors). `PERMISSION_DENIED` must not be used if
              the caller can not be identified (use `UNAUTHENTICATED` instead
              for those errors). This error code does not imply the request is
              valid or the requested entity exists or satisfies other
              pre-conditions. HTTP Mapping: 403 Forbidden
            - >-
              The request does not have valid authentication credentials for the
              operation. HTTP Mapping: 401 Unauthorized
            - >-
              Some resource has been exhausted, perhaps a per-user quota, or
              perhaps the entire file system is out of space. HTTP Mapping: 429
              Too Many Requests
            - >-
              The operation was rejected because the system is not in a state
              required for the operation's execution. For example, the directory
              to be deleted is non-empty, an rmdir operation is applied to a
              non-directory, etc. Service implementors can use the following
              guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and
              `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just
              the failing call. (b) Use `ABORTED` if the client should retry at
              a higher level. For example, when a client-specified test-and-set
              fails, indicating the client should restart a read-modify-write
              sequence. (c) Use `FAILED_PRECONDITION` if the client should not
              retry until the system state has been explicitly fixed. For
              example, if an "rmdir" fails because the directory is non-empty,
              `FAILED_PRECONDITION` should be returned since the client should
              not retry unless the files are deleted from the directory. HTTP
              Mapping: 400 Bad Request
            - >-
              The operation was aborted, typically due to a concurrency issue
              such as a sequencer check failure or transaction abort. See the
              guidelines above for deciding between `FAILED_PRECONDITION`,
              `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict
            - >-
              The operation was attempted past the valid range. E.g., seeking or
              reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error
              indicates a problem that may be fixed if the system state changes.
              For example, a 32-bit file system will generate `INVALID_ARGUMENT`
              if asked to read at an offset that is not in the range [0,2^32-1],
              but it will generate `OUT_OF_RANGE` if asked to read from an
              offset past the current file size. There is a fair bit of overlap
              between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend
              using `OUT_OF_RANGE` (the more specific error) when it applies so
              that callers who are iterating through a space can easily look for
              an `OUT_OF_RANGE` error to detect when they are done. HTTP
              Mapping: 400 Bad Request
            - >-
              The operation is not implemented or is not supported/enabled in
              this service. HTTP Mapping: 501 Not Implemented
            - >-
              Internal errors. This means that some invariants expected by the
              underlying system have been broken. This error code is reserved
              for serious errors. HTTP Mapping: 500 Internal Server Error
            - >-
              The service is currently unavailable. This is most likely a
              transient condition, which can be corrected by retrying with a
              backoff. Note that it is not always safe to retry non-idempotent
              operations. See the guidelines above for deciding between
              `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping:
              503 Service Unavailable
            - >-
              Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal
              Server Error
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          type: string
      type: object
    GoogleCloudAiplatformV1ExplanationMetadataInputMetadata:
      id: GoogleCloudAiplatformV1ExplanationMetadataInputMetadata
      properties:
        featureValueDomain:
          description: >-
            The domain details of the input feature value. Like min/max,
            original mean or standard deviation if normalized.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain
        encodedBaselines:
          description: >-
            A list of baselines for the encoded tensor. The shape of each
            baseline should match the shape of the encoded tensor. If a scalar
            is provided, Vertex AI broadcasts to the same shape as the encoded
            tensor.
          type: array
          items:
            type: any
        denseShapeTensorName:
          description: >-
            Specifies the shape of the values of the input if the input is a
            sparse representation. Refer to Tensorflow documentation for more
            details:
            https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.
          type: string
        indicesTensorName:
          type: string
          description: >-
            Specifies the index of the values of the input tensor. Required when
            the input tensor is a sparse representation. Refer to Tensorflow
            documentation for more details:
            https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.
        encoding:
          enumDescriptions:
            - Default value. This is the same as IDENTITY.
            - The tensor represents one feature.
            - >-
              The tensor represents a bag of features where each index maps to a
              feature. InputMetadata.index_feature_mapping must be provided for
              this encoding. For example: ``` input = [27, 6.0, 150]
              index_feature_mapping = ["age", "height", "weight"] ```
            - >-
              The tensor represents a bag of features where each index maps to a
              feature. Zero values in the tensor indicates feature being
              non-existent. InputMetadata.index_feature_mapping must be provided
              for this encoding. For example: ``` input = [2, 0, 5, 0, 1]
              index_feature_mapping = ["a", "b", "c", "d", "e"] ```
            - >-
              The tensor is a list of binaries representing whether a feature
              exists or not (1 indicates existence).
              InputMetadata.index_feature_mapping must be provided for this
              encoding. For example: ``` input = [1, 0, 1, 0, 1]
              index_feature_mapping = ["a", "b", "c", "d", "e"] ```
            - >-
              The tensor is encoded into a 1-dimensional array represented by an
              encoded tensor. InputMetadata.encoded_tensor_name must be provided
              for this encoding. For example: ``` input = ["This", "is", "a",
              "test", "."] encoded = [0.1, 0.2, 0.3, 0.4, 0.5] ```
            - >-
              Select this encoding when the input tensor is encoded into a
              2-dimensional array represented by an encoded tensor.
              InputMetadata.encoded_tensor_name must be provided for this
              encoding. The first dimension of the encoded tensor's shape is the
              same as the input tensor's shape. For example: ``` input =
              ["This", "is", "a", "test", "."] encoded = [[0.1, 0.2, 0.3, 0.4,
              0.5], [0.2, 0.1, 0.4, 0.3, 0.5], [0.5, 0.1, 0.3, 0.5, 0.4], [0.5,
              0.3, 0.1, 0.2, 0.4], [0.4, 0.3, 0.2, 0.5, 0.1]] ```
          enum:
            - ENCODING_UNSPECIFIED
            - IDENTITY
            - BAG_OF_FEATURES
            - BAG_OF_FEATURES_SPARSE
            - INDICATOR
            - COMBINED_EMBEDDING
            - CONCAT_EMBEDDING
          description: >-
            Defines how the feature is encoded into the input tensor. Defaults
            to IDENTITY.
          type: string
        indexFeatureMapping:
          description: >-
            A list of feature names for each index in the input tensor. Required
            when the input InputMetadata.encoding is BAG_OF_FEATURES,
            BAG_OF_FEATURES_SPARSE, INDICATOR.
          type: array
          items:
            type: string
        inputBaselines:
          items:
            type: any
          type: array
          description: >-
            Baseline inputs for this feature. If no baseline is specified,
            Vertex AI chooses the baseline for this feature. If multiple
            baselines are specified, Vertex AI returns the average attributions
            across them in Attribution.feature_attributions. For Vertex
            AI-provided Tensorflow images (both 1.x and 2.x), the shape of each
            baseline must match the shape of the input tensor. If a scalar is
            provided, we broadcast to the same shape as the input tensor. For
            custom images, the element of the baselines must be in the same
            format as the feature's input in the instance[]. The schema of any
            single instance may be specified via Endpoint's DeployedModels'
            Model's PredictSchemata's instance_schema_uri.
        inputTensorName:
          description: >-
            Name of the input tensor for this feature. Required and is only
            applicable to Vertex AI-provided images for Tensorflow.
          type: string
        visualization:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization
          description: Visualization configurations for image explanation.
        modality:
          type: string
          description: >-
            Modality of the feature. Valid values are: numeric, image. Defaults
            to numeric.
        groupName:
          description: >-
            Name of the group that the input belongs to. Features with the same
            group name will be treated as one feature when computing
            attributions. Features grouped together can have different shapes in
            value. If provided, there will be one single attribution generated
            in Attribution.feature_attributions, keyed by the group name.
          type: string
        encodedTensorName:
          description: >-
            Encoded tensor is a transformation of the input tensor. Must be
            provided if choosing Integrated Gradients attribution or XRAI
            attribution and the input tensor is not differentiable. An encoded
            tensor is generated if the input tensor is encoded by a lookup
            table.
          type: string
      description: >-
        Metadata of the input of a feature. Fields other than
        InputMetadata.input_baselines are applicable only for Models that are
        using Vertex AI-provided images for Tensorflow.
      type: object
    GoogleCloudAiplatformV1DeployModelOperationMetadata:
      description: Runtime operation information for EndpointService.DeployModel.
      type: object
      id: GoogleCloudAiplatformV1DeployModelOperationMetadata
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1CreateEntityTypeOperationMetadata:
      description: Details of operations that perform create EntityType.
      type: object
      id: GoogleCloudAiplatformV1CreateEntityTypeOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for EntityType.
    GoogleCloudAiplatformV1ModelContainerSpec:
      properties:
        healthRoute:
          description: >-
            Immutable. HTTP path on the container to send health checks to.
            Vertex AI intermittently sends GET requests to this path on the
            container's IP address and port to check that the container is
            healthy. Read more about [health
            checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#health).
            For example, if you set this field to `/bar`, then Vertex AI
            intermittently sends a GET request to the `/bar` path on the port of
            your container specified by the first value of this
            `ModelContainerSpec`'s ports field. If you don't specify this field,
            it defaults to the following value when you deploy this Model to an
            Endpoint: /v1/endpoints/ENDPOINT/deployedModels/
            DEPLOYED_MODEL:predict The placeholders in this value are replaced
            as follows: * ENDPOINT: The last segment (following `endpoints/`)of
            the Endpoint.name][] field of the Endpoint where this Model has been
            deployed. (Vertex AI makes this value available to your container
            code as the [`AIP_ENDPOINT_ID` environment
            variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
            * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex
            AI makes this value available to your container code as the
            [`AIP_DEPLOYED_MODEL_ID` environment
            variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
          type: string
        ports:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Port'
          description: >-
            Immutable. List of ports to expose from the container. Vertex AI
            sends any prediction requests that it receives to the first port on
            this list. Vertex AI also sends [liveness and health
            checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#liveness)
            to this port. If you do not specify this field, it defaults to
            following value: ```json [ { "containerPort": 8080 } ] ``` Vertex AI
            does not use ports other than the first one listed. This field
            corresponds to the `ports` field of the Kubernetes Containers [v1
            core
            API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
          type: array
        sharedMemorySizeMb:
          type: string
          description: >-
            Immutable. The amount of the VM memory to reserve as the shared
            memory for the model in megabytes.
          format: int64
        env:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EnvVar'
          description: >-
            Immutable. List of environment variables to set in the container.
            After the container starts running, code running in the container
            can read these environment variables. Additionally, the command and
            args fields can reference these variables. Later entries in this
            list can also reference earlier entries. For example, the following
            example sets the variable `VAR_2` to have the value `foo bar`:
            ```json [ { "name": "VAR_1", "value": "foo" }, { "name": "VAR_2",
            "value": "$(VAR_1) bar" } ] ``` If you switch the order of the
            variables in the example, then the expansion does not occur. This
            field corresponds to the `env` field of the Kubernetes Containers
            [v1 core
            API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
        imageUri:
          type: string
          description: >-
            Required. Immutable. URI of the Docker image to be used as the
            custom container for serving predictions. This URI must identify an
            image in Artifact Registry or Container Registry. Learn more about
            the [container publishing
            requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#publishing),
            including permissions requirements for the Vertex AI Service Agent.
            The container image is ingested upon ModelService.UploadModel,
            stored internally, and this original path is afterwards not used. To
            learn about the requirements for the Docker image itself, see
            [Custom container
            requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#).
            You can use the URI to one of Vertex AI's [pre-built container
            images for
            prediction](https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers)
            in this field.
        args:
          type: array
          items:
            type: string
          description: >-
            Immutable. Specifies arguments for the command that runs when the
            container starts. This overrides the container's
            [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd).
            Specify this field as an array of executable and arguments, similar
            to a Docker `CMD`'s "default parameters" form. If you don't specify
            this field but do specify the command field, then the command from
            the `command` field runs without any additional arguments. See the
            [Kubernetes documentation about how the `command` and `args` fields
            interact with a container's `ENTRYPOINT` and
            `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes).
            If you don't specify this field and don't specify the `command`
            field, then the container's
            [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd)
            and `CMD` determine what runs based on their default behavior. See
            the Docker documentation about [how `CMD` and `ENTRYPOINT`
            interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
            In this field, you can reference [environment variables set by
            Vertex
            AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables)
            and environment variables set in the env field. You cannot reference
            environment variables set in the Docker image. In order for
            environment variables to be expanded, reference them by using the
            following syntax: $( VARIABLE_NAME) Note that this differs from Bash
            variable expansion, which does not use parentheses. If a variable
            cannot be resolved, the reference in the input string is used
            unchanged. To avoid variable expansion, you can escape this syntax
            with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to
            the `args` field of the Kubernetes Containers [v1 core
            API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
        grpcPorts:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Port'
          description: >-
            Immutable. List of ports to expose from the container. Vertex AI
            sends gRPC prediction requests that it receives to the first port on
            this list. Vertex AI also sends liveness and health checks to this
            port. If you do not specify this field, gRPC requests to the
            container will be disabled. Vertex AI does not use ports other than
            the first one listed. This field corresponds to the `ports` field of
            the Kubernetes Containers v1 core API.
          type: array
        deploymentTimeout:
          format: google-duration
          description: >-
            Immutable. Deployment timeout. Limit for deployment timeout is 2
            hours.
          type: string
        predictRoute:
          description: >-
            Immutable. HTTP path on the container to send prediction requests
            to. Vertex AI forwards requests sent using
            projects.locations.endpoints.predict to this path on the container's
            IP address and port. Vertex AI then returns the container's response
            in the API response. For example, if you set this field to `/foo`,
            then when Vertex AI receives a prediction request, it forwards the
            request body in a POST request to the `/foo` path on the port of
            your container specified by the first value of this
            `ModelContainerSpec`'s ports field. If you don't specify this field,
            it defaults to the following value when you deploy this Model to an
            Endpoint:
            /v1/endpoints/ENDPOINT/deployedModels/DEPLOYED_MODEL:predict The
            placeholders in this value are replaced as follows: * ENDPOINT: The
            last segment (following `endpoints/`)of the Endpoint.name][] field
            of the Endpoint where this Model has been deployed. (Vertex AI makes
            this value available to your container code as the
            [`AIP_ENDPOINT_ID` environment
            variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
            * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex
            AI makes this value available to your container code as the
            [`AIP_DEPLOYED_MODEL_ID` environment
            variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
          type: string
        command:
          type: array
          description: >-
            Immutable. Specifies the command that runs when the container
            starts. This overrides the container's
            [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint).
            Specify this field as an array of executable and arguments, similar
            to a Docker `ENTRYPOINT`'s "exec" form, not its "shell" form. If you
            do not specify this field, then the container's `ENTRYPOINT` runs,
            in conjunction with the args field or the container's
            [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd), if
            either exists. If this field is not specified and the container does
            not have an `ENTRYPOINT`, then refer to the Docker documentation
            about [how `CMD` and `ENTRYPOINT`
            interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
            If you specify this field, then you can also specify the `args`
            field to provide additional arguments for this command. However, if
            you specify this field, then the container's `CMD` is ignored. See
            the [Kubernetes documentation about how the `command` and `args`
            fields interact with a container's `ENTRYPOINT` and
            `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes).
            In this field, you can reference [environment variables set by
            Vertex
            AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables)
            and environment variables set in the env field. You cannot reference
            environment variables set in the Docker image. In order for
            environment variables to be expanded, reference them by using the
            following syntax: $( VARIABLE_NAME) Note that this differs from Bash
            variable expansion, which does not use parentheses. If a variable
            cannot be resolved, the reference in the input string is used
            unchanged. To avoid variable expansion, you can escape this syntax
            with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to
            the `command` field of the Kubernetes Containers [v1 core
            API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
          items:
            type: string
        healthProbe:
          description: Immutable. Specification for Kubernetes readiness probe.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Probe'
        startupProbe:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Probe'
          description: Immutable. Specification for Kubernetes startup probe.
      type: object
      id: GoogleCloudAiplatformV1ModelContainerSpec
      description: >-
        Specification of a container for serving predictions. Some fields in
        this message correspond to fields in the [Kubernetes Container v1 core
        specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
    GoogleCloudAiplatformV1UpdateDeploymentResourcePoolOperationMetadata:
      id: GoogleCloudAiplatformV1UpdateDeploymentResourcePoolOperationMetadata
      type: object
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      description: Runtime operation information for UpdateDeploymentResourcePool method.
    GoogleCloudAiplatformV1QuestionAnsweringRelevanceInstance:
      description: Spec for question answering relevance instance.
      type: object
      properties:
        prediction:
          type: string
          description: Required. Output of the evaluated model.
        instruction:
          type: string
          description: >-
            Required. The question asked and other instruction in the inference
            prompt.
        reference:
          description: Optional. Ground truth used to compare against the prediction.
          type: string
        context:
          description: Optional. Text provided as context to answer the question.
          type: string
      id: GoogleCloudAiplatformV1QuestionAnsweringRelevanceInstance
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource:
      properties:
        uri:
          type: array
          items:
            type: string
          description: >-
            Cloud Storage URI of one or more files. Only CSV files are
            supported. The first line of the CSV file is used as the header. If
            there are multiple files, the header is the first line of the
            lexicographically first file, the other files must either contain
            the exact same header or omit the header.
      id: GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource
      type: object
    CloudAiLargeModelsVisionRaiInfoDetectedLabelsEntity:
      properties:
        mid:
          description: MID of the label
          type: string
        description:
          type: string
          description: Description of the label
        iouScore:
          format: float
          type: number
          description: >-
            The intersection ratio between the detection bounding box and the
            mask.
        score:
          type: number
          format: float
          description: Confidence score of the label
        boundingBox:
          $ref: >-
            #/components/schemas/CloudAiLargeModelsVisionRaiInfoDetectedLabelsBoundingBox
          description: Bounding box of the label
      description: The properties for a detected entity from the rai signal.
      type: object
      id: CloudAiLargeModelsVisionRaiInfoDetectedLabelsEntity
    GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest:
      id: GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest
      type: object
      properties:
        entityIds:
          items:
            type: string
          description: >-
            Required. IDs of entities to read Feature values of. The maximum
            number of IDs is 100. For example, for a machine learning model
            predicting user clicks on a website, an entity ID could be
            `user_123`.
          type: array
        featureSelector:
          description: >-
            Required. Selector choosing Features of the target EntityType.
            Feature IDs will be deduplicated.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureSelector'
      description: >-
        Request message for
        FeaturestoreOnlineServingService.StreamingFeatureValuesRead.
    GoogleCloudAiplatformV1StudySpecParameterSpec:
      properties:
        scaleType:
          enumDescriptions:
            - By default, no scaling is applied.
            - Scales the feasible space to (0, 1) linearly.
            - >-
              Scales the feasible space logarithmically to (0, 1). The entire
              feasible space must be strictly positive.
            - >-
              Scales the feasible space "reverse" logarithmically to (0, 1). The
              result is that values close to the top of the feasible space are
              spread out more than points near the bottom. The entire feasible
              space must be strictly positive.
          description: >-
            How the parameter should be scaled. Leave unset for `CATEGORICAL`
            parameters.
          type: string
          enum:
            - SCALE_TYPE_UNSPECIFIED
            - UNIT_LINEAR_SCALE
            - UNIT_LOG_SCALE
            - UNIT_REVERSE_LOG_SCALE
        categoricalValueSpec:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec
          description: The value spec for a 'CATEGORICAL' parameter.
        integerValueSpec:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec
          description: The value spec for an 'INTEGER' parameter.
        discreteValueSpec:
          description: The value spec for a 'DISCRETE' parameter.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec
        doubleValueSpec:
          description: The value spec for a 'DOUBLE' parameter.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec
        conditionalParameterSpecs:
          description: >-
            A conditional parameter node is active if the parameter's value
            matches the conditional node's parent_value_condition. If two items
            in conditional_parameter_specs have the same name, they must have
            disjoint parent_value_condition.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec
        parameterId:
          type: string
          description: >-
            Required. The ID of the parameter. Must not contain whitespaces and
            must be unique amongst all ParameterSpecs.
      type: object
      id: GoogleCloudAiplatformV1StudySpecParameterSpec
      description: Represents a single parameter to optimize.
    GoogleCloudAiplatformV1BatchPredictionJob:
      description: >-
        A job that uses a Model to produce predictions on multiple input
        instances. If predictions for significant portion of the instances fail,
        the job may finish without attempting predictions for all remaining
        instances.
      properties:
        inputConfig:
          description: >-
            Required. Input configuration of the instances on which predictions
            are performed. The schema of any single instance may be specified
            via the Model's PredictSchemata's instance_schema_uri.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobInputConfig
        createTime:
          readOnly: true
          description: Output only. Time when the BatchPredictionJob was created.
          format: google-datetime
          type: string
        name:
          readOnly: true
          description: Output only. Resource name of the BatchPredictionJob.
          type: string
        endTime:
          type: string
          format: google-datetime
          description: >-
            Output only. Time when the BatchPredictionJob entered any of the
            following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`,
            `JOB_STATE_CANCELLED`.
          readOnly: true
        outputInfo:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobOutputInfo
          readOnly: true
          description: Output only. Information further describing the output of this job.
        displayName:
          description: Required. The user-defined name of this BatchPredictionJob.
          type: string
        resourcesConsumed:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ResourcesConsumed'
          description: >-
            Output only. Information about resources that had been consumed by
            this job. Provided in real time at best effort basis, as well as a
            final value once the job completes. Note: This field currently may
            be not populated for batch predictions that use AutoML Models.
        updateTime:
          type: string
          readOnly: true
          description: >-
            Output only. Time when the BatchPredictionJob was most recently
            updated.
          format: google-datetime
        instanceConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig
          description: >-
            Configuration for how to convert batch prediction input instances to
            the prediction instances that are sent to the Model.
        partialFailures:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
          description: >-
            Output only. Partial failures encountered. For example, single files
            that can't be read. This field never exceeds 20 entries. Status
            details fields contain standard Google Cloud error details.
        labels:
          description: >-
            The labels with user-defined metadata to organize
            BatchPredictionJobs. Label keys and values can be no longer than 64
            characters (Unicode codepoints), can only contain lowercase letters,
            numeric characters, underscores and dashes. International characters
            are allowed. See https://goo.gl/xmQnxf for more information and
            examples of labels.
          type: object
          additionalProperties:
            type: string
        manualBatchTuningParameters:
          description: >-
            Immutable. Parameters configuring the batch behavior. Currently only
            applicable when dedicated_resources are used (in other cases Vertex
            AI does the tuning itself).
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ManualBatchTuningParameters
        satisfiesPzs:
          readOnly: true
          description: Output only. Reserved for future use.
          type: boolean
        modelVersionId:
          readOnly: true
          description: >-
            Output only. The version ID of the Model that produces the
            predictions via this job.
          type: string
        disableContainerLogging:
          type: boolean
          description: >-
            For custom-trained Models and AutoML Tabular Models, the container
            of the DeployedModel instances will send `stderr` and `stdout`
            streams to Cloud Logging by default. Please note that the logs incur
            cost, which are subject to [Cloud Logging
            pricing](https://cloud.google.com/logging/pricing). User can disable
            container logging by setting this flag to true.
        unmanagedContainerModel:
          description: >-
            Contains model information necessary to perform batch prediction
            without requiring uploading to model registry. Exactly one of model
            and unmanaged_container_model must be set.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1UnmanagedContainerModel'
        completionStats:
          description: >-
            Output only. Statistics on completed and failed prediction
            instances.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CompletionStats'
        modelParameters:
          description: >-
            The parameters that govern the predictions. The schema of the
            parameters may be specified via the Model's PredictSchemata's
            parameters_schema_uri.
          type: any
        encryptionSpec:
          description: >-
            Customer-managed encryption key options for a BatchPredictionJob. If
            this is set, then all resources created by the BatchPredictionJob
            will be encrypted with the provided encryption key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        startTime:
          description: >-
            Output only. Time when the BatchPredictionJob for the first time
            entered the `JOB_STATE_RUNNING` state.
          format: google-datetime
          type: string
          readOnly: true
        dedicatedResources:
          description: >-
            The config of resources used by the Model during the batch
            prediction. If the Model supports DEDICATED_RESOURCES this config
            may be provided (and the job will use these resources), if the Model
            doesn't support AUTOMATIC_RESOURCES, this config must be provided.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchDedicatedResources'
        outputConfig:
          description: >-
            Required. The Configuration specifying where output predictions
            should be written. The schema of any single prediction may be
            specified as a concatenation of Model's PredictSchemata's
            instance_schema_uri and prediction_schema_uri.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobOutputConfig
        explanationSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec'
          description: >-
            Explanation configuration for this BatchPredictionJob. Can be
            specified only if generate_explanation is set to `true`. This value
            overrides the value of Model.explanation_spec. All fields of
            explanation_spec are optional in the request. If a field of the
            explanation_spec object is not populated, the corresponding field of
            the Model.explanation_spec object is inherited.
        serviceAccount:
          type: string
          description: >-
            The service account that the DeployedModel's container runs as. If
            not specified, a system generated one will be used, which has
            minimal permissions and the custom container, if used, may not have
            enough permission to access other Google Cloud resources. Users
            deploying the Model must have the `iam.serviceAccounts.actAs`
            permission on this service account.
        satisfiesPzi:
          type: boolean
          readOnly: true
          description: Output only. Reserved for future use.
        model:
          description: >-
            The name of the Model resource that produces the predictions via
            this job, must share the same ancestor Location. Starting this job
            has no impact on any existing deployments of the Model and their
            resources. Exactly one of model and unmanaged_container_model must
            be set. The model resource name may contain version id or version
            alias to specify the version. Example:
            `projects/{project}/locations/{location}/models/{model}@2` or
            `projects/{project}/locations/{location}/models/{model}@golden` if
            no version is specified, the default version will be deployed. The
            model resource could also be a publisher model. Example:
            `publishers/{publisher}/models/{model}` or
            `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`
          type: string
        state:
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          description: Output only. The detailed state of the job.
          enumDescriptions:
            - The job state is unspecified.
            - >-
              The job has been just created or resumed and processing has not
              yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - >-
              The job is being cancelled. From this state the job may only go to
              either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or
              `JOB_STATE_CANCELLED`.
            - The job has been cancelled.
            - The job has been stopped, and can be resumed.
            - The job has expired.
            - >-
              The job is being updated. Only jobs in the `RUNNING` state can be
              updated. After updating, the job goes back to the `RUNNING` state.
            - >-
              The job is partially succeeded, some results may be missing due to
              errors.
          readOnly: true
          type: string
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Output only. Only populated when the job's state is JOB_STATE_FAILED
            or JOB_STATE_CANCELLED.
          readOnly: true
        generateExplanation:
          description: >-
            Generate explanation with the batch prediction results. When set to
            `true`, the batch prediction output changes based on the
            `predictions_format` field of the BatchPredictionJob.output_config
            object: * `bigquery`: output includes a column named `explanation`.
            The value is a struct that conforms to the Explanation object. *
            `jsonl`: The JSON objects on each line include an additional entry
            keyed `explanation`. The value of the entry is a JSON object that
            conforms to the Explanation object. * `csv`: Generating explanations
            for CSV format is not supported. If this field is set to true,
            either the Model.explanation_spec or explanation_spec must be
            populated.
          type: boolean
      type: object
      id: GoogleCloudAiplatformV1BatchPredictionJob
    GoogleCloudAiplatformV1SchemaVisualInspectionMaskSavedQueryMetadata:
      type: object
      id: GoogleCloudAiplatformV1SchemaVisualInspectionMaskSavedQueryMetadata
      properties: {}
    GoogleCloudAiplatformV1PublisherModel:
      properties:
        launchStage:
          type: string
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - EXPERIMENTAL
            - PRIVATE_PREVIEW
            - PUBLIC_PREVIEW
            - GA
          description: Optional. Indicates the launch stage of the model.
          enumDescriptions:
            - The model launch stage is unspecified.
            - >-
              Used to indicate the PublisherModel is at Experimental launch
              stage, available to a small set of customers.
            - >-
              Used to indicate the PublisherModel is at Private Preview launch
              stage, only available to a small set of customers, although a
              larger set of customers than an Experimental launch. Previews are
              the first launch stage used to get feedback from customers.
            - >-
              Used to indicate the PublisherModel is at Public Preview launch
              stage, available to all customers, although not supported for
              production workloads.
            - >-
              Used to indicate the PublisherModel is at GA launch stage,
              available to all customers and ready for production workload.
        versionId:
          description: >-
            Output only. Immutable. The version ID of the PublisherModel. A new
            version is committed when a new model version is uploaded under an
            existing model id. It is an auto-incrementing decimal number in
            string representation.
          type: string
          readOnly: true
        openSourceCategory:
          enum:
            - OPEN_SOURCE_CATEGORY_UNSPECIFIED
            - PROPRIETARY
            - GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT
            - THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT
            - GOOGLE_OWNED_OSS
            - THIRD_PARTY_OWNED_OSS
          enumDescriptions:
            - The open source category is unspecified, which should not be used.
            - Used to indicate the PublisherModel is not open sourced.
            - >-
              Used to indicate the PublisherModel is a Google-owned open source
              model w/ Google checkpoint.
            - >-
              Used to indicate the PublisherModel is a 3p-owned open source
              model w/ Google checkpoint.
            - >-
              Used to indicate the PublisherModel is a Google-owned pure open
              source model.
            - >-
              Used to indicate the PublisherModel is a 3p-owned pure open source
              model.
          type: string
          description: Required. Indicates the open source category of the publisher model.
        name:
          readOnly: true
          description: Output only. The resource name of the PublisherModel.
          type: string
        publisherModelTemplate:
          description: >-
            Optional. Output only. Immutable. Used to indicate this model has a
            publisher model and provide the template of the publisher model
            resource name.
          readOnly: true
          type: string
        predictSchemata:
          description: >-
            Optional. The schemata that describes formats of the
            PublisherModel's predictions and explanations as given and returned
            via PredictionService.Predict.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictSchemata'
        frameworks:
          type: array
          description: Optional. Additional information about the model's Frameworks.
          items:
            type: string
        supportedActions:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToAction
          description: Optional. Supported call-to-action options.
        versionState:
          enumDescriptions:
            - The version state is unspecified.
            - Used to indicate the version is stable.
            - Used to indicate the version is unstable.
          description: Optional. Indicates the state of the model version.
          type: string
          enum:
            - VERSION_STATE_UNSPECIFIED
            - VERSION_STATE_STABLE
            - VERSION_STATE_UNSTABLE
      id: GoogleCloudAiplatformV1PublisherModel
      description: A Model Garden Publisher Model.
      type: object
    GoogleCloudAiplatformV1Part:
      description: >-
        A datatype containing media that is part of a multi-part `Content`
        message. A `Part` consists of data which has an associated datatype. A
        `Part` can only contain one of the accepted types in `Part.data`. A
        `Part` must have a fixed IANA MIME type identifying the type and subtype
        of the media if `inline_data` or `file_data` field is filled with raw
        bytes.
      type: object
      id: GoogleCloudAiplatformV1Part
      properties:
        fileData:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FileData'
          description: Optional. URI based data.
        functionCall:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FunctionCall'
          description: >-
            Optional. A predicted [FunctionCall] returned from the model that
            contains a string representing the [FunctionDeclaration.name] with
            the parameters and their values.
        text:
          description: Optional. Text part (can be code).
          type: string
        functionResponse:
          description: >-
            Optional. The result output of a [FunctionCall] that contains a
            string representing the [FunctionDeclaration.name] and a structured
            JSON object containing any output from the function call. It is used
            as context to the model.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FunctionResponse'
        videoMetadata:
          description: >-
            Optional. Video metadata. The metadata should only be specified
            while the video data is presented in inline_data or file_data.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1VideoMetadata'
        inlineData:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Blob'
          description: Optional. Inlined bytes data.
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition:
      type: object
      properties:
        values:
          items:
            type: string
            format: int64
          description: >-
            Required. Matches values of the parent parameter of 'INTEGER' type.
            All values must lie in `integer_value_spec` of parent parameter.
          type: array
      description: Represents the spec to match integer values from parent parameter.
      id: >-
        GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition
    GoogleCloudAiplatformV1AutoscalingMetricSpec:
      description: >-
        The metric specification that defines the target resource utilization
        (CPU utilization, accelerator's duty cycle, and so on) for calculating
        the desired replica count.
      id: GoogleCloudAiplatformV1AutoscalingMetricSpec
      type: object
      properties:
        target:
          format: int32
          description: >-
            The target resource utilization in percentage (1% - 100%) for the
            given metric; once the real usage deviates from the target by a
            certain percentage, the machine replicas change. The default value
            is 60 (representing 60%) if not provided.
          type: integer
        metricName:
          type: string
          description: >-
            Required. The resource metric name. Supported metrics: * For Online
            Prediction: *
            `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle`
            * `aiplatform.googleapis.com/prediction/online/cpu/utilization`
    GoogleCloudAiplatformV1ListFeatureViewSyncsResponse:
      id: GoogleCloudAiplatformV1ListFeatureViewSyncsResponse
      type: object
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as ListFeatureViewSyncsRequest.page_token
            to retrieve the next page. If this field is omitted, there are no
            subsequent pages.
          type: string
        featureViewSyncs:
          type: array
          description: The FeatureViewSyncs matching the request.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureViewSync'
      description: >-
        Response message for
        FeatureOnlineStoreAdminService.ListFeatureViewSyncs.
    GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec:
      description: Value specification for a parameter in `CATEGORICAL` type.
      id: GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec
      properties:
        defaultValue:
          description: >-
            A default value for a `CATEGORICAL` parameter that is assumed to be
            a relatively good starting point. Unset value signals that there is
            no offered starting point. Currently only supported by the Vertex AI
            Vizier service. Not supported by HyperparameterTuningJob or
            TrainingPipeline.
          type: string
        values:
          type: array
          items:
            type: string
          description: Required. The list of possible categories.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig
      properties:
        maxCount:
          format: int64
          type: string
          description: >-
            Maximum number of windows that should be generated across all time
            series.
        column:
          description: >-
            Name of the column that should be used to generate sliding windows.
            The column should contain either booleans or string booleans; if the
            value of the row is True, generate a sliding window with the horizon
            starting at that row. The column will not be used as a feature in
            training.
          type: string
        strideLength:
          type: string
          description: >-
            Stride length used to generate input examples. Within one time
            series, every {$STRIDE_LENGTH} rows will be used to generate a
            sliding window.
          format: int64
      description: >-
        Config that contains the strategy used to generate sliding windows in
        time series training. A window is a series of rows that comprise the
        context up to the time of prediction, and the horizon following. The
        corresponding row for each window marks the start of the forecast
        horizon. Each window is used as an input example for
        training/evaluation.
      type: object
    GoogleCloudAiplatformV1PublisherModelDocumentation:
      properties:
        title:
          description: >-
            Required. E.g., OVERVIEW, USE CASES, DOCUMENTATION, SDK & SAMPLES,
            JAVA, NODE.JS, etc..
          type: string
        content:
          description: Required. Content of this piece of document (in Markdown format).
          type: string
      id: GoogleCloudAiplatformV1PublisherModelDocumentation
      type: object
      description: A named piece of documentation.
    GoogleCloudAiplatformV1GenericOperationMetadata:
      id: GoogleCloudAiplatformV1GenericOperationMetadata
      description: Generic Metadata shared by all operations.
      type: object
      properties:
        createTime:
          format: google-datetime
          description: Output only. Time when the operation was created.
          readOnly: true
          type: string
        partialFailures:
          readOnly: true
          description: >-
            Output only. Partial failures encountered. E.g. single files that
            couldn't be read. This field should never exceed 20 entries. Status
            details field will contain standard Google Cloud error details.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: >-
            Output only. Time when the operation was updated for the last time.
            If the operation has finished (successfully or not), this is the
            finish time.
    GoogleCloudAiplatformV1NasJobOutput:
      properties:
        multiTrialJobOutput:
          readOnly: true
          description: >-
            Output only. The output of this multi-trial Neural Architecture
            Search (NAS) job.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput
      description: Represents a uCAIP NasJob output.
      id: GoogleCloudAiplatformV1NasJobOutput
      type: object
    GoogleCloudAiplatformV1ModelExportFormat:
      properties:
        exportableContents:
          readOnly: true
          description: Output only. The content of this Model that may be exported.
          items:
            enum:
              - EXPORTABLE_CONTENT_UNSPECIFIED
              - ARTIFACT
              - IMAGE
            enumDescriptions:
              - Should not be used.
              - >-
                Model artifact and any of its supported files. Will be exported
                to the location specified by the `artifactDestination` field of
                the ExportModelRequest.output_config object.
              - >-
                The container image that is to be used when deploying this
                Model. Will be exported to the location specified by the
                `imageDestination` field of the ExportModelRequest.output_config
                object.
            type: string
          type: array
        id:
          description: >-
            Output only. The ID of the export format. The possible format IDs
            are: * `tflite` Used for Android mobile devices. * `edgetpu-tflite`
            Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices. *
            `tf-saved-model` A tensorflow model in SavedModel format. * `tf-js`
            A [TensorFlow.js](https://www.tensorflow.org/js) model that can be
            used in the browser and in Node.js using JavaScript. * `core-ml`
            Used for iOS mobile devices. * `custom-trained` A Model that was
            uploaded or trained by custom code.
          readOnly: true
          type: string
      description: >-
        Represents export format supported by the Model. All formats export to
        Google Cloud Storage.
      type: object
      id: GoogleCloudAiplatformV1ModelExportFormat
    GoogleCloudAiplatformV1PublisherModelCallToActionDeployDeployMetadata:
      description: >-
        Metadata information about the deployment for managing deployment
        config.
      type: object
      properties:
        sampleRequest:
          description: Optional. Sample request for deployed endpoint.
          type: string
        labels:
          description: >-
            Optional. Labels for the deployment. For managing deployment config
            like verifying, source of deployment config, etc.
          additionalProperties:
            type: string
          type: object
      id: GoogleCloudAiplatformV1PublisherModelCallToActionDeployDeployMetadata
    GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse:
      id: GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse
      description: Response message for TensorboardService.ListTensorboardTimeSeries.
      type: object
      properties:
        tensorboardTimeSeries:
          description: The TensorboardTimeSeries mathching the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as
            ListTensorboardTimeSeriesRequest.page_token to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig:
      properties:
        modelVersion:
          type: string
          description: >-
            Required. Full resource name of ml engine model version. Format:
            `projects/{project}/models/{model}/versions/{version}`.
        modelDisplayName:
          type: string
          description: >-
            Required. Display name of the model in Vertex AI. System will pick a
            display name if unspecified.
        endpoint:
          description: >-
            Required. The ml.googleapis.com endpoint that this model version
            should be migrated from. Example values: * ml.googleapis.com *
            us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com *
            asia-east1-ml.googleapis.com
          type: string
      description: Config for migrating version in ml.googleapis.com to Vertex AI's Model.
      id: >-
        GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig
      type: object
    GoogleCloudAiplatformV1Dataset:
      properties:
        dataItemCount:
          description: >-
            Output only. The number of DataItems in this Dataset. Only apply for
            non-structured Dataset.
          format: int64
          readOnly: true
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            The labels with user-defined metadata to organize your Datasets.
            Label keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. No
            more than 64 user labels can be associated with one Dataset (System
            labels are excluded). See https://goo.gl/xmQnxf for more information
            and examples of labels. System reserved label keys are prefixed with
            "aiplatform.googleapis.com/" and are immutable. Following system
            labels exist for each Dataset: *
            "aiplatform.googleapis.com/dataset_metadata_schema": output only,
            its value is the metadata_schema's title.
        encryptionSpec:
          description: >-
            Customer-managed encryption key spec for a Dataset. If set, this
            Dataset and all sub-resources of this Dataset will be secured by
            this key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Timestamp when this Dataset was last updated.
        etag:
          type: string
          description: >-
            Used to perform consistent read-modify-write updates. If not set, a
            blind "overwrite" update happens.
        metadataSchemaUri:
          description: >-
            Required. Points to a YAML file stored on Google Cloud Storage
            describing additional information about the Dataset. The schema is
            defined as an OpenAPI 3.0.2 Schema Object. The schema files that can
            be used here are found in
            gs://google-cloud-aiplatform/schema/dataset/metadata/.
          type: string
        description:
          description: The description of the Dataset.
          type: string
        displayName:
          type: string
          description: >-
            Required. The user-defined name of the Dataset. The name can be up
            to 128 characters long and can consist of any UTF-8 characters.
        satisfiesPzi:
          description: Output only. Reserved for future use.
          type: boolean
          readOnly: true
        metadata:
          description: Required. Additional information about the Dataset.
          type: any
        satisfiesPzs:
          type: boolean
          description: Output only. Reserved for future use.
          readOnly: true
        name:
          type: string
          readOnly: true
          description: Output only. Identifier. The resource name of the Dataset.
        savedQueries:
          type: array
          description: >-
            All SavedQueries belong to the Dataset will be returned in List/Get
            Dataset response. The annotation_specs field will not be populated
            except for UI cases which will only use annotation_spec_count. In
            CreateDataset request, a SavedQuery is created together if this
            field is set, up to one SavedQuery can be set in
            CreateDatasetRequest. The SavedQuery should not contain any
            AnnotationSpec.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SavedQuery'
        metadataArtifact:
          type: string
          description: >-
            Output only. The resource name of the Artifact that was created in
            MetadataStore when creating the Dataset. The Artifact resource name
            pattern is
            `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
          readOnly: true
        modelReference:
          type: string
          description: >-
            Optional. Reference to the public base model last used by the
            dataset. Only set for prompt datasets.
        createTime:
          type: string
          readOnly: true
          description: Output only. Timestamp when this Dataset was created.
          format: google-datetime
      id: GoogleCloudAiplatformV1Dataset
      type: object
      description: A collection of DataItems and Annotations on them.
    GoogleCloudAiplatformV1EvaluateInstancesResponse:
      type: object
      properties:
        questionAnsweringRelevanceResult:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringRelevanceResult
          description: Result for question answering relevance metric.
        fluencyResult:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FluencyResult'
          description: >-
            LLM-based metric evaluation result. General text generation metrics,
            applicable to other categories. Result for fluency metric.
        pointwiseMetricResult:
          description: Generic metrics. Result for pointwise metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PointwiseMetricResult'
        bleuResults:
          description: Results for bleu metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BleuResults'
        rougeResults:
          description: Results for rouge metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1RougeResults'
        summarizationHelpfulnessResult:
          description: Result for summarization helpfulness metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationHelpfulnessResult
        toolNameMatchResults:
          description: Results for tool name match metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ToolNameMatchResults'
        summarizationVerbosityResult:
          description: Result for summarization verbosity metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationVerbosityResult
        groundednessResult:
          description: Result for groundedness metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GroundednessResult'
        summarizationQualityResult:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationQualityResult
          description: Summarization only metrics. Result for summarization quality metric.
        questionAnsweringCorrectnessResult:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringCorrectnessResult
          description: Result for question answering correctness metric.
        questionAnsweringHelpfulnessResult:
          description: Result for question answering helpfulness metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessResult
        exactMatchResults:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExactMatchResults'
          description: Auto metric evaluation results. Results for exact match metric.
        safetyResult:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SafetyResult'
          description: Result for safety metric.
        toolCallValidResults:
          description: Tool call metrics. Results for tool call valid metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ToolCallValidResults'
        pairwiseMetricResult:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PairwiseMetricResult'
          description: Result for pairwise metric.
        toolParameterKeyMatchResults:
          description: Results for tool parameter key match metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ToolParameterKeyMatchResults
        questionAnsweringQualityResult:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringQualityResult
          description: >-
            Question answering only metrics. Result for question answering
            quality metric.
        pairwiseSummarizationQualityResult:
          description: Result for pairwise summarization quality metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PairwiseSummarizationQualityResult
        pairwiseQuestionAnsweringQualityResult:
          description: Result for pairwise question answering quality metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult
        coherenceResult:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CoherenceResult'
          description: Result for coherence metric.
        toolParameterKvMatchResults:
          description: Results for tool parameter key value match metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ToolParameterKVMatchResults
        fulfillmentResult:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FulfillmentResult'
          description: Result for fulfillment metric.
      id: GoogleCloudAiplatformV1EvaluateInstancesResponse
      description: Response message for EvaluationService.EvaluateInstances.
    GoogleCloudAiplatformV1DeleteFeatureValuesRequest:
      description: Request message for FeaturestoreService.DeleteFeatureValues.
      properties:
        selectEntity:
          description: Select feature values to be deleted by specifying entities.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity
        selectTimeRangeAndFeature:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature
          description: >-
            Select feature values to be deleted by specifying time range and
            features.
      type: object
      id: GoogleCloudAiplatformV1DeleteFeatureValuesRequest
    GoogleCloudAiplatformV1ListDatasetVersionsResponse:
      id: GoogleCloudAiplatformV1ListDatasetVersionsResponse
      description: Response message for DatasetService.ListDatasetVersions.
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        datasetVersions:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DatasetVersion'
          type: array
          description: >-
            A list of DatasetVersions that matches the specified filter in the
            request.
    GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest:
      type: object
      properties:
        writeRunDataRequests:
          description: >-
            Required. Requests containing per-run TensorboardTimeSeries data to
            write.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1WriteTensorboardRunDataRequest
          type: array
      id: GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest
      description: Request message for TensorboardService.WriteTensorboardExperimentData.
    GoogleCloudAiplatformV1ServiceAccountSpec:
      description: >-
        Configuration for the use of custom service account to run the
        workloads.
      properties:
        serviceAccount:
          description: >-
            Optional. Required when all below conditions are met *
            `enable_custom_service_account` is true; * any runtime is specified
            via `ResourceRuntimeSpec` on creation time, for example, Ray The
            users must have `iam.serviceAccounts.actAs` permission on this
            service account and then the specified runtime containers will run
            as it. Do not set this field if you want to submit jobs using custom
            service account to this PersistentResource after creation, but only
            specify the `service_account` inside the job.
          type: string
        enableCustomServiceAccount:
          description: >-
            Required. If true, custom user-managed service account is enforced
            to run any workloads (for example, Vertex Jobs) on the resource.
            Otherwise, uses the [Vertex AI Custom Code Service
            Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents).
          type: boolean
      type: object
      id: GoogleCloudAiplatformV1ServiceAccountSpec
    GoogleCloudAiplatformV1SuggestTrialsRequest:
      properties:
        clientId:
          type: string
          description: >-
            Required. The identifier of the client that is requesting the
            suggestion. If multiple SuggestTrialsRequests have the same
            `client_id`, the service will return the identical suggested Trial
            if the Trial is pending, and provide a new Trial if the last
            suggested Trial was completed.
        suggestionCount:
          format: int32
          description: Required. The number of suggestions requested. It must be positive.
          type: integer
        contexts:
          description: >-
            Optional. This allows you to specify the "context" for a Trial; a
            context is a slice (a subspace) of the search space. Typical uses
            for contexts: 1) You are using Vizier to tune a server for best
            performance, but there's a strong weekly cycle. The context
            specifies the day-of-week. This allows Tuesday to generalize from
            Wednesday without assuming that everything is identical. 2) Imagine
            you're optimizing some medical treatment for people. As they walk in
            the door, you know certain facts about them (e.g. sex, weight,
            height, blood-pressure). Put that information in the context, and
            Vizier will adapt its suggestions to the patient. 3) You want to do
            a fair A/B test efficiently. Specify the "A" and "B" conditions as
            contexts, and Vizier will generalize between "A" and "B" conditions.
            If they are similar, this will allow Vizier to converge to the
            optimum faster than if "A" and "B" were separate Studies. NOTE: You
            can also enter contexts as REQUESTED Trials, e.g. via the
            CreateTrial() RPC; that's the asynchronous option where you don't
            need a close association between contexts and suggestions. NOTE: All
            the Parameters you set in a context MUST be defined in the Study.
            NOTE: You must supply 0 or $suggestion_count contexts. If you don't
            supply any contexts, Vizier will make suggestions from the full
            search space specified in the StudySpec; if you supply a full set of
            context, each suggestion will match the corresponding context. NOTE:
            A Context with no features set matches anything, and allows
            suggestions from the full search space. NOTE: Contexts MUST lie
            within the search space specified in the StudySpec. It's an error if
            they don't. NOTE: Contexts preferentially match ACTIVE then
            REQUESTED trials before new suggestions are generated. NOTE:
            Generation of suggestions involves a match between a Context and
            (optionally) a REQUESTED trial; if that match is not fully
            specified, a suggestion will be geneated in the merged subspace.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TrialContext'
          type: array
      id: GoogleCloudAiplatformV1SuggestTrialsRequest
      type: object
      description: Request message for VizierService.SuggestTrials.
    GoogleCloudAiplatformV1FulfillmentResult:
      type: object
      description: Spec for fulfillment result.
      properties:
        confidence:
          format: float
          description: Output only. Confidence for fulfillment score.
          type: number
          readOnly: true
        explanation:
          type: string
          readOnly: true
          description: Output only. Explanation for fulfillment score.
        score:
          readOnly: true
          description: Output only. Fulfillment score.
          type: number
          format: float
      id: GoogleCloudAiplatformV1FulfillmentResult
    GoogleCloudAiplatformV1ToolParameterKVMatchMetricValue:
      description: Tool parameter key value match metric value for an instance.
      type: object
      id: GoogleCloudAiplatformV1ToolParameterKVMatchMetricValue
      properties:
        score:
          type: number
          format: float
          readOnly: true
          description: Output only. Tool parameter key value match score.
    GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse:
      description: Response message for TensorboardService.ExportTensorboardTimeSeriesData.
      id: GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as page_token to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
        timeSeriesDataPoints:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TimeSeriesDataPoint'
          description: The returned time series data points.
    GoogleCloudAiplatformV1CreateEndpointOperationMetadata:
      description: Runtime operation information for EndpointService.CreateEndpoint.
      id: GoogleCloudAiplatformV1CreateEndpointOperationMetadata
      type: object
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1BatchCreateFeaturesOperationMetadata:
      type: object
      properties:
        genericMetadata:
          description: Operation metadata for Feature.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1BatchCreateFeaturesOperationMetadata
      description: Details of operations that perform batch create Features.
    GoogleCloudAiplatformV1SchemaTextDataItem:
      type: object
      description: Payload of Text DataItem.
      properties:
        gcsUri:
          type: string
          description: >-
            Output only. Google Cloud Storage URI points to the original text in
            user's bucket. The text file is up to 10MB in size.
          readOnly: true
      id: GoogleCloudAiplatformV1SchemaTextDataItem
    GoogleCloudAiplatformV1Schema:
      properties:
        default:
          type: any
          description: Optional. Default value of the data.
        enum:
          description: >-
            Optional. Possible values of the element of Type.STRING with enum
            format. For example we can define an Enum Direction as :
            {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH", "WEST"]}
          type: array
          items:
            type: string
        minimum:
          description: >-
            Optional. SCHEMA FIELDS FOR TYPE INTEGER and NUMBER Minimum value of
            the Type.INTEGER and Type.NUMBER
          type: number
          format: double
        maxItems:
          description: Optional. Maximum number of the elements for Type.ARRAY.
          format: int64
          type: string
        minLength:
          description: >-
            Optional. SCHEMA FIELDS FOR TYPE STRING Minimum length of the
            Type.STRING
          type: string
          format: int64
        propertyOrdering:
          items:
            type: string
          type: array
          description: >-
            Optional. The order of the properties. Not a standard field in open
            api spec. Only used to support the order of the properties.
        required:
          description: Optional. Required properties of Type.OBJECT.
          items:
            type: string
          type: array
        title:
          description: Optional. The title of the Schema.
          type: string
        example:
          type: any
          description: >-
            Optional. Example of the object. Will only populated when the object
            is the root.
        type:
          enumDescriptions:
            - Not specified, should not be used.
            - OpenAPI string type
            - OpenAPI number type
            - OpenAPI integer type
            - OpenAPI boolean type
            - OpenAPI array type
            - OpenAPI object type
          description: Optional. The type of the data.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - NUMBER
            - INTEGER
            - BOOLEAN
            - ARRAY
            - OBJECT
        maxProperties:
          description: Optional. Maximum number of the properties for Type.OBJECT.
          format: int64
          type: string
        nullable:
          type: boolean
          description: Optional. Indicates if the value may be null.
        minItems:
          type: string
          format: int64
          description: Optional. Minimum number of the elements for Type.ARRAY.
        pattern:
          description: >-
            Optional. Pattern of the Type.STRING to restrict a string to a
            regular expression.
          type: string
        maxLength:
          description: Optional. Maximum length of the Type.STRING
          type: string
          format: int64
        description:
          description: Optional. The description of the data.
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Schema'
          type: object
          description: Optional. SCHEMA FIELDS FOR TYPE OBJECT Properties of Type.OBJECT.
        format:
          type: string
          description: >-
            Optional. The format of the data. Supported formats: for NUMBER
            type: "float", "double" for INTEGER type: "int32", "int64" for
            STRING type: "email", "byte", etc
        minProperties:
          format: int64
          type: string
          description: Optional. Minimum number of the properties for Type.OBJECT.
        items:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Schema'
          description: >-
            Optional. SCHEMA FIELDS FOR TYPE ARRAY Schema of the elements of
            Type.ARRAY.
        maximum:
          format: double
          description: Optional. Maximum value of the Type.INTEGER and Type.NUMBER
          type: number
      id: GoogleCloudAiplatformV1Schema
      description: >-
        Schema is used to define the format of input/output data. Represents a
        select subset of an [OpenAPI 3.0 schema
        object](https://spec.openapis.org/oas/v3.0.3#schema-object). More fields
        may be added in the future as needed.
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResult:
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResult
      type: object
      description: Prediction output format for Video Object Tracking.
      properties:
        id:
          description: The resource ID of the AnnotationSpec that had been identified.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that had been identified.
          type: string
        timeSegmentEnd:
          type: string
          format: google-duration
          description: >-
            The end, inclusive, of the video's time segment in which the object
            instance has been detected. Expressed as a number of seconds as
            measured from the start of the video, with fractions up to a
            microsecond precision, and with "s" appended at the end.
        frames:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame
          description: >-
            All of the frames of the video in which a single object instance has
            been detected. The bounding boxes in the frames identify the same
            object.
          type: array
        timeSegmentStart:
          type: string
          format: google-duration
          description: >-
            The beginning, inclusive, of the video's time segment in which the
            object instance has been detected. Expressed as a number of seconds
            as measured from the start of the video, with fractions up to a
            microsecond precision, and with "s" appended at the end.
        confidence:
          description: >-
            The Model's confidence in correction of this prediction, higher
            value means higher confidence.
          type: number
          format: float
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs
      type: object
      properties:
        optimizationObjective:
          type: string
          description: >-
            Objective function the model is optimizing towards. The training
            process creates a model that optimizes the value of the objective
            function over the validation set. The supported optimization
            objectives: * "minimize-rmse" (default) - Minimize root-mean-squared
            error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE).
            * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). *
            "minimize-rmspe" - Minimize root-mean-squared percentage error
            (RMSPE). * "minimize-wape-mae" - Minimize the combination of
            weighted absolute percentage error (WAPE) and mean-absolute-error
            (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at
            the quantiles defined in `quantiles`. * "minimize-mape" - Minimize
            the mean absolute percentage error.
        timeColumn:
          type: string
          description: >-
            The name of the column that identifies time order in the time
            series. This column must be available at forecast.
        transformations:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation
          description: >-
            Each transformation will apply transform function to given input
            column. And the result will be used for training. When creating
            transformation for BigQuery Struct column, the column should be
            flattened using "." as the delimiter.
        weightColumn:
          description: >-
            Column name that should be used as the weight column. Higher values
            in this column give more importance to the row during model
            training. The column must have numeric values between 0 and 10000
            inclusively; 0 means the row is ignored for training. If weight
            column field is not set, then all rows are assumed to have equal
            weight of 1. This column must be available at forecast.
          type: string
        timeSeriesIdentifierColumn:
          description: The name of the column that identifies the time series.
          type: string
        targetColumn:
          description: >-
            The name of the column that the Model is to predict values for. This
            column must be unavailable at forecast.
          type: string
        validationOptions:
          type: string
          description: >-
            Validation options for the data validation component. The available
            options are: * "fail-pipeline" - default, will validate against the
            validation and fail the pipeline if it fails. * "ignore-validation"
            - ignore the results of the validation and continue
        quantiles:
          items:
            format: double
            type: number
          type: array
          description: >-
            Quantiles to use for minimize-quantile-loss
            `optimization_objective`. Up to 5 quantiles are allowed of values
            between 0 and 1, exclusive. Required if the value of
            optimization_objective is minimize-quantile-loss. Represents the
            percent quantiles to use for that objective. Quantiles must be
            unique.
        hierarchyConfig:
          description: >-
            Configuration that defines the hierarchical relationship of time
            series and parameters for hierarchical forecasting strategies.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig
        windowConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig
          description: Config containing strategy for generating sliding windows.
        forecastHorizon:
          description: >-
            The amount of time into the future for which forecasted values for
            the target are returned. Expressed in number of units defined by the
            `data_granularity` field.
          type: string
          format: int64
        unavailableAtForecastColumns:
          type: array
          items:
            type: string
          description: >-
            Names of columns that are unavailable when a forecast is requested.
            This column contains information for the given entity (identified by
            the time_series_identifier_column) that is unknown before the
            forecast For example, actual weather on a given day.
        exportEvaluatedDataItemsConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig
          description: >-
            Configuration for exporting test set predictions to a BigQuery
            table. If this configuration is absent, then the export is not
            performed.
        additionalExperiments:
          items:
            type: string
          type: array
          description: Additional experiment flags for the time series forcasting training.
        trainBudgetMilliNodeHours:
          description: >-
            Required. The train budget of creating this model, expressed in
            milli node hours i.e. 1,000 value in this field means 1 node hour.
            The training cost of the model will not exceed this budget. The
            final cost will be attempted to be close to the budget, though may
            end up being (even) noticeably smaller - at the backend's
            discretion. This especially may happen when further model training
            ceases to provide any improvements. If the budget is set to a value
            known to be insufficient to train a model for the given dataset, the
            training won't be attempted and will error. The train budget must be
            between 1,000 and 72,000 milli node hours, inclusive.
          type: string
          format: int64
        holidayRegions:
          description: >-
            The geographical region based on which the holiday effect is applied
            in modeling by adding holiday categorical array feature that include
            all holidays matching the date. This option only allowed when
            data_granularity is day. By default, holiday effect modeling is
            disabled. To turn it on, specify the holiday region using this
            option.
          type: array
          items:
            type: string
        contextWindow:
          description: >-
            The amount of time into the past training and prediction data is
            used for model training and prediction respectively. Expressed in
            number of units defined by the `data_granularity` field.
          type: string
          format: int64
        dataGranularity:
          description: Expected difference in time granularity between rows in the data.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity
        availableAtForecastColumns:
          description: >-
            Names of columns that are available and provided when a forecast is
            requested. These columns contain information for the given entity
            (identified by the time_series_identifier_column column) that is
            known at forecast. For example, predicted weather for a specific
            day.
          type: array
          items:
            type: string
        timeSeriesAttributeColumns:
          type: array
          items:
            type: string
          description: >-
            Column names that should be used as attribute columns. The value of
            these columns does not vary as a function of time. For example,
            store ID or item color.
    GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest:
      id: GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest
      description: Request message for PipelineService.BatchCancelPipelineJobs.
      type: object
      properties:
        names:
          type: array
          description: >-
            Required. The names of the PipelineJobs to cancel. A maximum of 32
            PipelineJobs can be cancelled in a batch. Format:
            `projects/{project}/locations/{location}/pipelineJobs/{pipelineJob}`
          items:
            type: string
    GoogleCloudAiplatformV1IntegratedGradientsAttribution:
      id: GoogleCloudAiplatformV1IntegratedGradientsAttribution
      description: >-
        An attribution method that computes the Aumann-Shapley value taking
        advantage of the model's fully differentiable structure. Refer to this
        paper for more details: https://arxiv.org/abs/1703.01365
      properties:
        stepCount:
          description: >-
            Required. The number of steps for approximating the path integral. A
            good value to start is 50 and gradually increase until the sum to
            diff property is within the desired error range. Valid range of its
            value is [1, 100], inclusively.
          format: int32
          type: integer
        blurBaselineConfig:
          description: >-
            Config for IG with blur baseline. When enabled, a linear path from
            the maximally blurred image to the input image is created. Using a
            blurred baseline instead of zero (black image) is motivated by the
            BlurIG approach explained here: https://arxiv.org/abs/2004.03383
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BlurBaselineConfig'
        smoothGradConfig:
          description: >-
            Config for SmoothGrad approximation of gradients. When enabled, the
            gradients are approximated by averaging the gradients from noisy
            samples in the vicinity of the inputs. Adding noise can help improve
            the computed gradients. Refer to this paper for more details:
            https://arxiv.org/pdf/1706.03825.pdf
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SmoothGradConfig'
      type: object
    GoogleCloudAiplatformV1SchemaImageDataItem:
      type: object
      properties:
        gcsUri:
          description: >-
            Required. Google Cloud Storage URI points to the original image in
            user's bucket. The image is up to 30MB in size.
          type: string
        mimeType:
          readOnly: true
          description: >-
            Output only. The mime type of the content of the image. Only the
            images in below listed mime types are supported. - image/jpeg -
            image/gif - image/png - image/webp - image/bmp - image/tiff -
            image/vnd.microsoft.icon
          type: string
      description: Payload of Image DataItem.
      id: GoogleCloudAiplatformV1SchemaImageDataItem
    GoogleCloudAiplatformV1Int64Array:
      description: A list of int64 values.
      id: GoogleCloudAiplatformV1Int64Array
      type: object
      properties:
        values:
          items:
            type: string
            format: int64
          type: array
          description: A list of int64 values.
    GoogleCloudAiplatformV1SafetySpec:
      description: Spec for safety metric.
      type: object
      id: GoogleCloudAiplatformV1SafetySpec
      properties:
        version:
          type: integer
          description: Optional. Which version to use for evaluation.
          format: int32
    GoogleCloudAiplatformV1ExportDataConfig:
      description: >-
        Describes what part of the Dataset is to be exported, the destination of
        the export and how to export.
      type: object
      id: GoogleCloudAiplatformV1ExportDataConfig
      properties:
        exportUse:
          enumDescriptions:
            - Regular user export.
            - Export for custom code training.
          enum:
            - EXPORT_USE_UNSPECIFIED
            - CUSTOM_CODE_TRAINING
          type: string
          description: Indicates the usage of the exported files.
        filterSplit:
          description: Split based on the provided filters for each set.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportFilterSplit'
        annotationsFilter:
          description: >-
            An expression for filtering what part of the Dataset is to be
            exported. Only Annotations that match this filter will be exported.
            The filter syntax is the same as in ListAnnotations.
          type: string
        fractionSplit:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportFractionSplit'
          description: Split based on fractions defining the size of each set.
        savedQueryId:
          description: >-
            The ID of a SavedQuery (annotation set) under the Dataset specified
            by dataset_id used for filtering Annotations for training. Only used
            for custom training data export use cases. Only applicable to
            Datasets that have SavedQueries. Only Annotations that are
            associated with this SavedQuery are used in respectively training.
            When used in conjunction with annotations_filter, the Annotations
            used for training are filtered by both saved_query_id and
            annotations_filter. Only one of saved_query_id and
            annotation_schema_uri should be specified as both of them represent
            the same thing: problem type.
          type: string
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: >-
            The Google Cloud Storage location where the output is to be written
            to. In the given directory a new directory will be created with
            name: `export-data--` where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ
            ISO-8601 format. All export output will be written into that
            directory. Inside that directory, annotations with the same schema
            will be grouped into sub directories which are named with the
            corresponding annotations' schema title. Inside these sub
            directories, a schema.yaml will be created to describe the output
            format.
        annotationSchemaUri:
          type: string
          description: >-
            The Cloud Storage URI that points to a YAML file describing the
            annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema
            Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
            The schema files that can be used here are found in
            gs://google-cloud-aiplatform/schema/dataset/annotation/, note that
            the chosen schema must be consistent with metadata of the Dataset
            specified by dataset_id. Only used for custom training data export
            use cases. Only applicable to Datasets that have DataItems and
            Annotations. Only Annotations that both match this schema and belong
            to DataItems not ignored by the split method are used in
            respectively training, validation or test role, depending on the
            role of the DataItem they are on. When used in conjunction with
            annotations_filter, the Annotations used for training are filtered
            by both annotations_filter and annotation_schema_uri.
    GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse:
      id: GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse
      description: >-
        Response message for
        FeatureOnlineStoreAdminService.ListFeatureOnlineStores.
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as
            ListFeatureOnlineStoresRequest.page_token to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        featureOnlineStores:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStore'
          description: The FeatureOnlineStores matching the request.
      type: object
    GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse:
      properties: {}
      description: Response message for MetadataService.AddContextArtifactsAndExecutions.
      id: GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse
      type: object
    GoogleCloudAiplatformV1FeatureValueList:
      type: object
      description: Container for list of values.
      id: GoogleCloudAiplatformV1FeatureValueList
      properties:
        values:
          description: A list of feature values. All of them should be the same data type.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValue'
          type: array
    GoogleCloudAiplatformV1FeatureValue:
      id: GoogleCloudAiplatformV1FeatureValue
      description: Value for a feature.
      type: object
      properties:
        stringValue:
          type: string
          description: String feature value.
        doubleArrayValue:
          description: A list of double type feature value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DoubleArray'
        stringArrayValue:
          description: A list of string type feature value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StringArray'
        int64ArrayValue:
          description: A list of int64 type feature value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Int64Array'
        int64Value:
          type: string
          description: Int64 feature value.
          format: int64
        doubleValue:
          type: number
          format: double
          description: Double type feature value.
        metadata:
          description: Metadata of feature value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValueMetadata'
        boolArrayValue:
          description: A list of bool type feature value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BoolArray'
        structValue:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StructValue'
          description: A struct type feature value.
        boolValue:
          description: Bool type feature value.
          type: boolean
        bytesValue:
          description: Bytes feature value.
          type: string
          format: byte
    GoogleCloudAiplatformV1FindNeighborsRequestQuery:
      description: >-
        A query to find a number of the nearest neighbors (most similar vectors)
        of a vector.
      type: object
      properties:
        fractionLeafNodesToSearchOverride:
          type: number
          description: >-
            The fraction of the number of leaves to search, set at query time
            allows user to tune search performance. This value increase result
            in both search accuracy and latency increase. The value should be
            between 0.0 and 1.0. If not set or set to 0.0, query uses the
            default value specified in
            NearestNeighborSearchConfig.TreeAHConfig.fraction_leaf_nodes_to_search.
          format: double
        neighborCount:
          format: int32
          type: integer
          description: >-
            The number of nearest neighbors to be retrieved from database for
            each query. If not set, will use the default from the service
            configuration
            (https://cloud.google.com/vertex-ai/docs/matching-engine/configuring-indexes#nearest-neighbor-search-config).
        approximateNeighborCount:
          format: int32
          type: integer
          description: >-
            The number of neighbors to find via approximate search before exact
            reordering is performed. If not set, the default value from scam
            config is used; if set, this value must be > 0.
        perCrowdingAttributeNeighborCount:
          type: integer
          format: int32
          description: >-
            Crowding is a constraint on a neighbor list produced by nearest
            neighbor search requiring that no more than some value k' of the k
            neighbors returned have the same value of crowding_attribute. It's
            used for improving result diversity. This field is the maximum
            number of matches with the same crowding tag.
        datapoint:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint'
          description: >-
            Required. The datapoint/vector whose nearest neighbors should be
            searched for.
        rrf:
          description: Optional. Represents RRF algorithm that combines search results.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1FindNeighborsRequestQueryRRF
      id: GoogleCloudAiplatformV1FindNeighborsRequestQuery
    GoogleCloudAiplatformV1ScheduleRunResponse:
      description: Status of a scheduled run.
      properties:
        runResponse:
          description: The response of the scheduled run.
          type: string
        scheduledRunTime:
          type: string
          format: google-datetime
          description: The scheduled run time based on the user-specified schedule.
      type: object
      id: GoogleCloudAiplatformV1ScheduleRunResponse
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation:
      properties:
        displayName:
          description: >-
            The display name of the AnnotationSpec that this Annotation pertains
            to.
          type: string
        annotationSpecId:
          type: string
          description: >-
            The resource Id of the AnnotationSpec that this Annotation pertains
            to.
        vertexes:
          description: >-
            The vertexes are connected one by one and the last vertex in not
            connected to the first one.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaVertex'
          type: array
      description: Represents a polyline in image.
      id: >-
        GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation
      type: object
    GoogleCloudAiplatformV1ListAnnotationsResponse:
      description: Response message for DatasetService.ListAnnotations.
      properties:
        annotations:
          type: array
          description: >-
            A list of Annotations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Annotation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: GoogleCloudAiplatformV1ListAnnotationsResponse
      type: object
    GoogleCloudAiplatformV1GenerationConfig:
      properties:
        responseMimeType:
          description: >-
            Optional. Output response mimetype of the generated candidate text.
            Supported mimetype: - `text/plain`: (default) Text output. -
            `application/json`: JSON response in the candidates. The model needs
            to be prompted to output the appropriate response type, otherwise
            the behavior is undefined. This is a preview feature.
          type: string
        routingConfig:
          description: Optional. Routing configuration.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1GenerationConfigRoutingConfig
        frequencyPenalty:
          format: float
          description: Optional. Frequency penalties.
          type: number
        stopSequences:
          items:
            type: string
          description: Optional. Stop sequences.
          type: array
        responseSchema:
          description: >-
            Optional. The `Schema` object allows the definition of input and
            output data types. These types can be objects, but also primitives
            and arrays. Represents a select subset of an [OpenAPI 3.0 schema
            object](https://spec.openapis.org/oas/v3.0.3#schema). If set, a
            compatible response_mime_type must also be set. Compatible
            mimetypes: `application/json`: Schema for JSON response.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Schema'
        presencePenalty:
          format: float
          type: number
          description: Optional. Positive penalties.
        maxOutputTokens:
          description: >-
            Optional. The maximum number of output tokens to generate per
            message.
          format: int32
          type: integer
        temperature:
          description: Optional. Controls the randomness of predictions.
          format: float
          type: number
        topK:
          description: Optional. If specified, top-k sampling will be used.
          format: float
          type: number
        seed:
          description: Optional. Seed.
          format: int32
          type: integer
        candidateCount:
          type: integer
          format: int32
          description: Optional. Number of candidates to generate.
        topP:
          type: number
          description: Optional. If specified, nucleus sampling will be used.
          format: float
      id: GoogleCloudAiplatformV1GenerationConfig
      description: Generation config.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs:
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs
      properties: {}
    GoogleCloudAiplatformV1FulfillmentSpec:
      properties:
        version:
          description: Optional. Which version to use for evaluation.
          format: int32
          type: integer
      id: GoogleCloudAiplatformV1FulfillmentSpec
      type: object
      description: Spec for fulfillment metric.
    GoogleTypeDate:
      type: object
      id: GoogleTypeDate
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      properties:
        month:
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          type: integer
          format: int32
        day:
          type: integer
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          format: int32
        year:
          format: int32
          type: integer
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
    GoogleCloudAiplatformV1DeploymentResourcePool:
      properties:
        dedicatedResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DedicatedResources'
          description: >-
            Required. The underlying DedicatedResources that the
            DeploymentResourcePool uses.
        serviceAccount:
          description: >-
            The service account that the DeploymentResourcePool's container(s)
            run as. Specify the email address of the service account. If this
            service account is not specified, the container(s) run as a service
            account that doesn't have access to the resource project. Users
            deploying the Models to this DeploymentResourcePool must have the
            `iam.serviceAccounts.actAs` permission on this service account.
          type: string
        disableContainerLogging:
          type: boolean
          description: >-
            If the DeploymentResourcePool is deployed with custom-trained Models
            or AutoML Tabular Models, the container(s) of the
            DeploymentResourcePool will send `stderr` and `stdout` streams to
            Cloud Logging by default. Please note that the logs incur cost,
            which are subject to [Cloud Logging
            pricing](https://cloud.google.com/logging/pricing). User can disable
            container logging by setting this flag to true.
        name:
          type: string
          description: >-
            Immutable. The resource name of the DeploymentResourcePool. Format:
            `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
        encryptionSpec:
          description: >-
            Customer-managed encryption key spec for a DeploymentResourcePool.
            If set, this DeploymentResourcePool will be secured by this key.
            Endpoints and the DeploymentResourcePool they deploy in need to have
            the same EncryptionSpec.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        satisfiesPzi:
          description: Output only. Reserved for future use.
          type: boolean
          readOnly: true
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when this DeploymentResourcePool was created.
        satisfiesPzs:
          type: boolean
          description: Output only. Reserved for future use.
          readOnly: true
      type: object
      id: GoogleCloudAiplatformV1DeploymentResourcePool
      description: >-
        A description of resources that can be shared by multiple
        DeployedModels, whose underlying specification consists of a
        DedicatedResources.
    GoogleCloudAiplatformV1UpdateExplanationDatasetResponse:
      id: GoogleCloudAiplatformV1UpdateExplanationDatasetResponse
      properties: {}
      description: Response message of ModelService.UpdateExplanationDataset operation.
      type: object
    GoogleCloudAiplatformV1TrainingPipeline:
      type: object
      description: >-
        The TrainingPipeline orchestrates tasks associated with training a
        Model. It always executes the training task, and optionally may also
        export data from Vertex AI's Dataset which becomes the training input,
        upload the Model to Vertex AI, and evaluate the Model.
      id: GoogleCloudAiplatformV1TrainingPipeline
      properties:
        startTime:
          type: string
          description: >-
            Output only. Time when the TrainingPipeline for the first time
            entered the `PIPELINE_STATE_RUNNING` state.
          format: google-datetime
          readOnly: true
        modelId:
          type: string
          description: >-
            Optional. The ID to use for the uploaded Model, which will become
            the final component of the model resource name. This value may be up
            to 63 characters, and valid characters are `[a-z0-9_-]`. The first
            character cannot be a number or hyphen.
        trainingTaskMetadata:
          type: any
          readOnly: true
          description: >-
            Output only. The metadata information as specified in the
            training_task_definition's `metadata`. This metadata is an auxiliary
            runtime and final information about the training task. While the
            pipeline is running this information is populated only at a best
            effort basis. Only present if the pipeline's
            training_task_definition contains `metadata` object.
        state:
          type: string
          readOnly: true
          description: Output only. The detailed state of the pipeline.
          enum:
            - PIPELINE_STATE_UNSPECIFIED
            - PIPELINE_STATE_QUEUED
            - PIPELINE_STATE_PENDING
            - PIPELINE_STATE_RUNNING
            - PIPELINE_STATE_SUCCEEDED
            - PIPELINE_STATE_FAILED
            - PIPELINE_STATE_CANCELLING
            - PIPELINE_STATE_CANCELLED
            - PIPELINE_STATE_PAUSED
          enumDescriptions:
            - The pipeline state is unspecified.
            - >-
              The pipeline has been created or resumed, and processing has not
              yet begun.
            - The service is preparing to run the pipeline.
            - The pipeline is in progress.
            - The pipeline completed successfully.
            - The pipeline failed.
            - >-
              The pipeline is being cancelled. From this state, the pipeline may
              only go to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED
              or PIPELINE_STATE_CANCELLED.
            - The pipeline has been cancelled.
            - The pipeline has been stopped, and can be resumed.
        displayName:
          description: Required. The user-defined name of this TrainingPipeline.
          type: string
        trainingTaskInputs:
          description: >-
            Required. The training task's parameter(s), as specified in the
            training_task_definition's `inputs`.
          type: any
        endTime:
          description: >-
            Output only. Time when the TrainingPipeline entered any of the
            following states: `PIPELINE_STATE_SUCCEEDED`,
            `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.
          readOnly: true
          type: string
          format: google-datetime
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Customer-managed encryption key spec for a TrainingPipeline. If set,
            this TrainingPipeline will be secured by this key. Note: Model
            trained by this TrainingPipeline is also secured by this key if
            model_to_upload is not set separately.
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            The labels with user-defined metadata to organize TrainingPipelines.
            Label keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. See
            https://goo.gl/xmQnxf for more information and examples of labels.
        name:
          description: Output only. Resource name of the TrainingPipeline.
          readOnly: true
          type: string
        inputDataConfig:
          description: >-
            Specifies Vertex AI owned input data that may be used for training
            the Model. The TrainingPipeline's training_task_definition should
            make clear whether this config is used and if there are any special
            requirements on how it should be filled. If nothing about this
            config is mentioned in the training_task_definition, then it should
            be assumed that the TrainingPipeline does not depend on this
            configuration.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1InputDataConfig'
        parentModel:
          description: >-
            Optional. When specify this field, the `model_to_upload` will not be
            uploaded as a new model, instead, it will become a new version of
            this `parent_model`.
          type: string
        error:
          description: >-
            Output only. Only populated when the pipeline's state is
            `PIPELINE_STATE_FAILED` or `PIPELINE_STATE_CANCELLED`.
          $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        modelToUpload:
          description: >-
            Describes the Model that may be uploaded (via
            ModelService.UploadModel) by this TrainingPipeline. The
            TrainingPipeline's training_task_definition should make clear
            whether this Model description should be populated, and if there are
            any special requirements regarding how it should be filled. If
            nothing is mentioned in the training_task_definition, then it should
            be assumed that this field should not be filled and the training
            task either uploads the Model without a need of this information, or
            that training task does not support uploading a Model as part of the
            pipeline. When the Pipeline's state becomes
            `PIPELINE_STATE_SUCCEEDED` and the trained Model had been uploaded
            into Vertex AI, then the model_to_upload's resource name is
            populated. The Model is always uploaded into the Project and
            Location in which this pipeline is.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
        trainingTaskDefinition:
          type: string
          description: >-
            Required. A Google Cloud Storage path to the YAML file that defines
            the training task which is responsible for producing the model
            artifact, and may also include additional auxiliary work. The
            definition files that can be used here are found in
            gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note:
            The URI given on output will be immutable and probably different,
            including the URI scheme, than the one given on input. The output
            URI will point to a location where the user only has a read access.
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. Time when the TrainingPipeline was created.
          type: string
        updateTime:
          readOnly: true
          type: string
          description: >-
            Output only. Time when the TrainingPipeline was most recently
            updated.
          format: google-datetime
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassification:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassification
      type: object
      description: >-
        A TrainingJob that trains and uploads an AutoML Video Classification
        Model.
      properties:
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs
    GoogleCloudAiplatformV1ListIndexesResponse:
      type: object
      description: Response message for IndexService.ListIndexes.
      properties:
        nextPageToken:
          type: string
          description: >-
            A token to retrieve next page of results. Pass to
            ListIndexesRequest.page_token to obtain that page.
        indexes:
          type: array
          description: List of indexes in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Index'
      id: GoogleCloudAiplatformV1ListIndexesResponse
    GoogleCloudAiplatformV1SpecialistPool:
      id: GoogleCloudAiplatformV1SpecialistPool
      type: object
      properties:
        pendingDataLabelingJobs:
          items:
            type: string
          readOnly: true
          description: Output only. The resource name of the pending data labeling jobs.
          type: array
        name:
          type: string
          description: Required. The resource name of the SpecialistPool.
        specialistManagersCount:
          type: integer
          format: int32
          readOnly: true
          description: Output only. The number of managers in this SpecialistPool.
        specialistWorkerEmails:
          type: array
          description: The email addresses of workers in the SpecialistPool.
          items:
            type: string
        specialistManagerEmails:
          items:
            type: string
          type: array
          description: The email addresses of the managers in the SpecialistPool.
        displayName:
          description: >-
            Required. The user-defined name of the SpecialistPool. The name can
            be up to 128 characters long and can consist of any UTF-8
            characters. This field should be unique on project-level.
          type: string
      description: >-
        SpecialistPool represents customers' own workforce to work on their data
        labeling jobs. It includes a group of specialist managers and workers.
        Managers are responsible for managing the workers in this pool as well
        as customers' data labeling jobs associated with this pool. Customers
        create specialist pool as well as start data labeling jobs on Cloud,
        managers and workers handle the jobs using CrowdCompute console.
    GoogleCloudAiplatformV1SyncFeatureViewRequest:
      id: GoogleCloudAiplatformV1SyncFeatureViewRequest
      properties: {}
      description: Request message for FeatureOnlineStoreAdminService.SyncFeatureView.
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences:
      description: >-
        The regional resource name or the URI. Key is region, e.g., us-central1,
        europe-west2, global, etc..
      properties:
        resourceDescription:
          type: string
          description: Optional. Description of the resource.
        references:
          description: Required.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1PublisherModelResourceReference
        resourceTitle:
          description: Optional. Title of the resource.
          type: string
        title:
          description: 'Required. '
          type: string
        resourceUseCase:
          type: string
          description: Optional. Use case (CUJ) of the resource.
      type: object
      id: >-
        GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
    GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig:
      properties:
        userEmails:
          type: array
          description: The email addresses to send the alert.
          items:
            type: string
      id: GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig
      type: object
      description: The config for email alert.
    GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance:
      id: GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance
      type: object
      properties:
        contextWeights:
          items:
            format: float
            type: number
          type: array
          description: >-
            TFT feature importance values. Each pair for
            {context/horizon/attribute} should have the same shape since the
            weight corresponds to the column names.
        horizonWeights:
          items:
            type: number
            format: float
          type: array
        attributeColumns:
          items:
            type: string
          type: array
        horizonColumns:
          type: array
          items:
            type: string
        contextColumns:
          type: array
          items:
            type: string
        attributeWeights:
          items:
            type: number
            format: float
          type: array
    GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField:
      id: GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField
      description: Describe pass-through fields in read_instance source.
      type: object
      properties:
        fieldName:
          type: string
          description: >-
            Required. The name of the field in the CSV header or the name of the
            column in BigQuery table. The naming restriction is the same as
            Feature.name.
    GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride:
      description: The input metadata entries to be overridden.
      type: object
      id: GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride
      properties:
        inputBaselines:
          type: array
          items:
            type: any
          description: >-
            Baseline inputs for this feature. This overrides the
            `input_baseline` field of the ExplanationMetadata.InputMetadata
            object of the corresponding feature's input metadata. If it's not
            specified, the original baselines are not overridden.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics:
      properties:
        bleu:
          type: number
          description: >-
            BLEU (bilingual evaluation understudy) scores based on sacrebleu
            implementation.
          format: float
        rougeLSum:
          description: ROUGE-L (Longest Common Subsequence) scoring at summary level.
          type: number
          format: float
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics
      type: object
    GoogleCloudAiplatformV1MeasurementMetric:
      type: object
      properties:
        value:
          format: double
          type: number
          description: Output only. The value for this metric.
          readOnly: true
        metricId:
          type: string
          readOnly: true
          description: >-
            Output only. The ID of the Metric. The Metric should be defined in
            StudySpec's Metrics.
      id: GoogleCloudAiplatformV1MeasurementMetric
      description: A message representing a metric in the measurement.
    GoogleCloudAiplatformV1ImportFeatureValuesOperationMetadata:
      id: GoogleCloudAiplatformV1ImportFeatureValuesOperationMetadata
      type: object
      description: Details of operations that perform import Feature values.
      properties:
        importedFeatureValueCount:
          type: string
          format: int64
          description: Number of Feature values that have been imported by the operation.
        blockingOperationIds:
          items:
            format: int64
            type: string
          description: >-
            List of ImportFeatureValues operations running under a single
            EntityType that are blocking this operation.
          type: array
        invalidRowCount:
          format: int64
          type: string
          description: >-
            The number of rows in input source that weren't imported due to
            either * Not having any featureValues. * Having a null entityId. *
            Having a null timestamp. * Not being parsable (applicable for CSV
            sources).
        timestampOutsideRetentionRowsCount:
          description: >-
            The number rows that weren't ingested due to having timestamps
            outside the retention boundary.
          format: int64
          type: string
        importedEntityCount:
          format: int64
          type: string
          description: Number of entities that have been imported by the operation.
        sourceUris:
          description: The source URI from where Feature values are imported.
          items:
            type: string
          type: array
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Featurestore import Feature values.
    GoogleCloudAiplatformV1TrainingConfig:
      properties:
        timeoutTrainingMilliHours:
          type: string
          description: >-
            The timeout hours for the CMLE training job, expressed in milli
            hours i.e. 1,000 value in this field means 1 hour.
          format: int64
      description: >-
        CMLE training config. For every active learning labeling iteration,
        system will train a machine learning model on CMLE. The trained model
        will be used by data sampling algorithm to select DataItems.
      id: GoogleCloudAiplatformV1TrainingConfig
      type: object
    GoogleCloudAiplatformV1ListFeaturestoresResponse:
      description: Response message for FeaturestoreService.ListFeaturestores.
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as ListFeaturestoresRequest.page_token to
            retrieve the next page. If this field is omitted, there are no
            subsequent pages.
          type: string
        featurestores:
          description: The Featurestores matching the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Featurestore'
      type: object
      id: GoogleCloudAiplatformV1ListFeaturestoresResponse
    GoogleCloudAiplatformV1IndexDatapointSparseEmbedding:
      description: >-
        Feature embedding vector for sparse index. An array of numbers whose
        values are located in the specified dimensions.
      type: object
      properties:
        values:
          type: array
          description: Required. The list of embedding values of the sparse vector.
          items:
            type: number
            format: float
        dimensions:
          items:
            format: int64
            type: string
          description: >-
            Required. The list of indexes for the embedding values of the sparse
            vector.
          type: array
      id: GoogleCloudAiplatformV1IndexDatapointSparseEmbedding
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadata:
      properties:
        inputConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig
      id: GoogleCloudAiplatformV1SchemaTablesDatasetMetadata
      type: object
      description: The metadata of Datasets that contain tables data.
    GoogleCloudAiplatformV1UndeployIndexOperationMetadata:
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      type: object
      description: Runtime operation information for IndexEndpointService.UndeployIndex.
      id: GoogleCloudAiplatformV1UndeployIndexOperationMetadata
    GoogleCloudAiplatformV1SchemaImageDatasetMetadata:
      type: object
      description: The metadata of Datasets that contain Image DataItems.
      id: GoogleCloudAiplatformV1SchemaImageDatasetMetadata
      properties:
        dataItemSchemaUri:
          description: >-
            Points to a YAML file stored on Google Cloud Storage describing
            payload of the Image DataItems that belong to this Dataset.
          type: string
        gcsBucket:
          description: >-
            Google Cloud Storage Bucket name that contains the blob data of this
            Dataset.
          type: string
    GoogleCloudAiplatformV1PurgeExecutionsRequest:
      description: Request message for MetadataService.PurgeExecutions.
      properties:
        force:
          type: boolean
          description: >-
            Optional. Flag to indicate to actually perform the purge. If `force`
            is set to false, the method will return a sample of Execution names
            that would be deleted.
        filter:
          description: >-
            Required. A required filter matching the Executions to be purged.
            E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
          type: string
      id: GoogleCloudAiplatformV1PurgeExecutionsRequest
      type: object
    GoogleApiHttpBody:
      type: object
      properties:
        extensions:
          description: >-
            Application specific response metadata. Must be set in the first
            response for streaming APIs.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
        data:
          format: byte
          type: string
          description: The HTTP request/response body as raw binary.
        contentType:
          type: string
          description: >-
            The HTTP Content-Type header value specifying the content type of
            the body.
      description: >-
        Message that represents an arbitrary HTTP body. It should only be used
        for payload formats that can't be represented as JSON, such as raw
        binary or an HTML page. This message can be used both in streaming and
        non-streaming API methods in the request as well as the response. It can
        be used as a top-level request field, which is convenient if one wants
        to extract parameters from either the URL or HTTP template into the
        request fields and also want access to the raw HTTP body. Example:
        message GetResourceRequest { // A unique request id. string request_id =
        1; // The raw HTTP body is bound to this field. google.api.HttpBody
        http_body = 2; } service ResourceService { rpc
        GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
        UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); }
        Example with streaming methods: service CaldavService { rpc
        GetCalendar(stream google.api.HttpBody) returns (stream
        google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody)
        returns (stream google.api.HttpBody); } Use of this type only changes
        how the request and response bodies are handled, all other features will
        continue to work unchanged.
      id: GoogleApiHttpBody
    GoogleCloudAiplatformV1DeleteOperationMetadata:
      type: object
      description: Details of operations that perform deletes of any entities.
      id: GoogleCloudAiplatformV1DeleteOperationMetadata
      properties:
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams:
      type: object
      description: Prediction model parameters for Video Classification.
      id: >-
        GoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams
      properties:
        segmentClassification:
          type: boolean
          description: >-
            Set to true to request segment-level classification. Vertex AI
            returns labels and their confidence scores for the entire time
            segment of the video that user specified in the input instance.
            Default value is true
        shotClassification:
          type: boolean
          description: >-
            Set to true to request shot-level classification. Vertex AI
            determines the boundaries for each camera shot in the entire time
            segment of the video that user specified in the input instance.
            Vertex AI then returns labels and their confidence scores for each
            detected shot, along with the start and end time of the shot.
            WARNING: Model evaluation is not done for this classification type,
            the quality of it depends on the training data, but there are no
            metrics provided to describe that quality. Default value is false
        oneSecIntervalClassification:
          type: boolean
          description: >-
            Set to true to request classification for a video at one-second
            intervals. Vertex AI returns labels and their confidence scores for
            each second of the entire time segment of the video that user
            specified in the input WARNING: Model evaluation is not done for
            this classification type, the quality of it depends on the training
            data, but there are no metrics provided to describe that quality.
            Default value is false
        maxPredictions:
          type: integer
          description: >-
            The Model only returns up to that many top, by confidence score,
            predictions per instance. If this number is very high, the Model may
            return fewer predictions. Default value is 10,000.
          format: int32
        confidenceThreshold:
          type: number
          format: float
          description: >-
            The Model only returns predictions with at least this confidence
            score. Default value is 0.0
    GoogleCloudAiplatformV1MachineSpec:
      id: GoogleCloudAiplatformV1MachineSpec
      type: object
      description: Specification of a single machine.
      properties:
        acceleratorCount:
          description: The number of accelerators to attach to the machine.
          format: int32
          type: integer
        machineType:
          description: >-
            Immutable. The type of the machine. See the [list of machine types
            supported for
            prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types)
            See the [list of machine types supported for custom
            training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types).
            For DeployedModel this field is optional, and the default value is
            `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec
            this field is required.
          type: string
        reservationAffinity:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ReservationAffinity'
          description: >-
            Optional. Immutable. Configuration controlling how this resource
            pool consumes reservation.
        tpuTopology:
          description: >-
            Immutable. The topology of the TPUs. Corresponds to the TPU
            topologies available from GKE. (Example: tpu_topology: "2x2x1").
          type: string
        acceleratorType:
          enumDescriptions:
            - Unspecified accelerator type, which means no accelerator.
            - >-
              Deprecated: Nvidia Tesla K80 GPU has reached end of support, see
              https://cloud.google.com/compute/docs/eol/k80-eol.
            - Nvidia Tesla P100 GPU.
            - Nvidia Tesla V100 GPU.
            - Nvidia Tesla P4 GPU.
            - Nvidia Tesla T4 GPU.
            - Nvidia Tesla A100 GPU.
            - Nvidia A100 80GB GPU.
            - Nvidia L4 GPU.
            - Nvidia H100 80Gb GPU.
            - TPU v2.
            - TPU v3.
            - TPU v4.
            - TPU v5.
          type: string
          description: >-
            Immutable. The type of accelerator(s) that may be attached to the
            machine as per accelerator_count.
          enum:
            - ACCELERATOR_TYPE_UNSPECIFIED
            - NVIDIA_TESLA_K80
            - NVIDIA_TESLA_P100
            - NVIDIA_TESLA_V100
            - NVIDIA_TESLA_P4
            - NVIDIA_TESLA_T4
            - NVIDIA_TESLA_A100
            - NVIDIA_A100_80GB
            - NVIDIA_L4
            - NVIDIA_H100_80GB
            - TPU_V2
            - TPU_V3
            - TPU_V4_POD
            - TPU_V5_LITEPOD
          enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
    GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult:
      id: >-
        GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult
      properties:
        sentiment:
          description: >-
            The integer sentiment labels between 0 (inclusive) and sentimentMax
            label (inclusive), while 0 maps to the least positive sentiment and
            sentimentMax maps to the most positive one. The higher the score is,
            the more positive the sentiment in the text snippet is. Note:
            sentimentMax is an integer value between 1 (inclusive) and 10
            (inclusive).
          format: int32
          type: integer
      type: object
      description: Prediction output format for Text Sentiment
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation:
      type: object
      description: >-
        Training pipeline will perform following transformation functions. * The
        text as is--no change to case, punctuation, spelling, tense, and so on.
        * Convert the category name to a dictionary lookup index and generate an
        embedding for each index.
      properties:
        columnName:
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation
    GoogleCloudAiplatformV1FunctionCallingConfig:
      properties:
        allowedFunctionNames:
          description: >-
            Optional. Function names to call. Only set when the Mode is ANY.
            Function names should match [FunctionDeclaration.name]. With mode
            set to ANY, model will predict a function call from the set of
            function names provided.
          type: array
          items:
            type: string
        mode:
          type: string
          description: Optional. Function calling mode.
          enumDescriptions:
            - Unspecified function calling mode. This value should not be used.
            - >-
              Default model behavior, model decides to predict either function
              calls or natural language response.
            - >-
              Model is constrained to always predicting function calls only. If
              "allowed_function_names" are set, the predicted function calls
              will be limited to any one of "allowed_function_names", else the
              predicted function calls will be any one of the provided
              "function_declarations".
            - >-
              Model will not predict any function calls. Model behavior is same
              as when not passing any function declarations.
          enum:
            - MODE_UNSPECIFIED
            - AUTO
            - ANY
            - NONE
      description: Function calling config.
      type: object
      id: GoogleCloudAiplatformV1FunctionCallingConfig
    GoogleCloudAiplatformV1NearestNeighbors:
      description: Nearest neighbors for one query.
      type: object
      properties:
        neighbors:
          description: All its neighbors.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1NearestNeighborsNeighbor
          type: array
      id: GoogleCloudAiplatformV1NearestNeighbors
    GoogleCloudAiplatformV1DestinationFeatureSetting:
      type: object
      properties:
        featureId:
          type: string
          description: Required. The ID of the Feature to apply the setting to.
        destinationField:
          type: string
          description: >-
            Specify the field name in the export destination. If not specified,
            Feature ID is used.
      id: GoogleCloudAiplatformV1DestinationFeatureSetting
    GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec:
      description: >-
        Selects Features of an EntityType to read values of and specifies read
        settings.
      properties:
        entityTypeId:
          description: >-
            Required. ID of the EntityType to select Features. The EntityType id
            is the entity_type_id specified during EntityType creation.
          type: string
        settings:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1DestinationFeatureSetting
          description: Per-Feature settings for the batch read.
        featureSelector:
          description: >-
            Required. Selectors choosing which Feature values to read from the
            EntityType.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureSelector'
      type: object
      id: GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec
    GoogleCloudAiplatformV1PurgeArtifactsResponse:
      description: Response message for MetadataService.PurgeArtifacts.
      id: GoogleCloudAiplatformV1PurgeArtifactsResponse
      properties:
        purgeSample:
          description: >-
            A sample of the Artifact names that will be deleted. Only populated
            if `force` is set to false. The maximum number of samples is 100 (it
            is possible to return fewer).
          items:
            type: string
          type: array
        purgeCount:
          type: string
          description: >-
            The number of Artifacts that this request deleted (or, if `force` is
            false, the number of Artifacts that will be deleted). This can be an
            estimate.
          format: int64
      type: object
    GoogleCloudAiplatformV1QuestionAnsweringQualityInput:
      id: GoogleCloudAiplatformV1QuestionAnsweringQualityInput
      properties:
        metricSpec:
          description: Required. Spec for question answering quality score metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringQualitySpec
        instance:
          description: Required. Question answering quality instance.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1QuestionAnsweringQualityInstance
      description: Input for question answering quality metric.
      type: object
    GoogleCloudAiplatformV1VertexAISearch:
      type: object
      description: >-
        Retrieve from Vertex AI Search datastore for grounding. See
        https://cloud.google.com/products/agent-builder
      properties:
        datastore:
          description: >-
            Required. Fully-qualified Vertex AI Search data store resource ID.
            Format:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
          type: string
      id: GoogleCloudAiplatformV1VertexAISearch
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassification:
      type: object
      properties:
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassification
      description: >-
        A TrainingJob that trains and uploads an AutoML Text Classification
        Model.
    GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData:
      properties:
        values:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValueList'
          description: >-
            Feature values list if values, successive in time, are requested. If
            the requested number of values is greater than the number of
            existing Feature values, nonexistent values are omitted instead of
            being returned as empty.
        value:
          description: Feature value if a single value is requested.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValue'
      description: >-
        Container to hold value(s), successive in time, for one Feature from the
        request.
      type: object
      id: GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData
    GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata:
      description: Metadata of the prediction output to be explained.
      properties:
        displayNameMappingKey:
          description: >-
            Specify a field name in the prediction to look for the display name.
            Use this if the prediction contains the display names for the
            outputs. The display names in the prediction must have the same
            shape of the outputs, so that it can be located by
            Attribution.output_index for a specific output.
          type: string
        outputTensorName:
          type: string
          description: >-
            Name of the output tensor. Required and is only applicable to Vertex
            AI provided images for Tensorflow.
        indexDisplayNameMapping:
          description: >-
            Static mapping between the index and display name. Use this if the
            outputs are a deterministic n-dimensional array, e.g. a list of
            scores of all the classes in a pre-defined order for a
            multi-classification Model. It's not feasible if the outputs are
            non-deterministic, e.g. the Model produces top-k classes or sort the
            outputs by their values. The shape of the value must be an
            n-dimensional array of strings. The number of dimensions must match
            that of the outputs to be explained. The
            Attribution.output_display_name is populated by locating in the
            mapping with Attribution.output_index.
          type: any
      type: object
      id: GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata
    GoogleCloudAiplatformV1ListOptimalTrialsResponse:
      id: GoogleCloudAiplatformV1ListOptimalTrialsResponse
      description: Response message for VizierService.ListOptimalTrials.
      type: object
      properties:
        optimalTrials:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
          description: >-
            The pareto-optimal Trials for multiple objective Study or the
            optimal trial for single objective Study. The definition of
            pareto-optimal can be checked in wiki page.
            https://en.wikipedia.org/wiki/Pareto_efficiency
          type: array
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs
      type: object
      properties:
        multiLabel:
          type: boolean
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig:
      description: >-
        Config for migrating Model in automl.googleapis.com to Vertex AI's
        Model.
      type: object
      properties:
        model:
          type: string
          description: >-
            Required. Full resource name of automl Model. Format:
            `projects/{project}/locations/{location}/models/{model}`.
        modelDisplayName:
          description: >-
            Optional. Display name of the model in Vertex AI. System will pick a
            display name if unspecified.
          type: string
      id: GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig
    GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus:
      type: object
      description: A single record of the task status.
      properties:
        error:
          readOnly: true
          description: >-
            Output only. The error that occurred during the state. May be set
            when the state is any of the non-final state
            (PENDING/RUNNING/CANCELLING) or FAILED state. If the state is
            FAILED, the error here is final and not going to be retried. If the
            state is a non-final state, the error indicates a system-error being
            retried.
          $ref: '#/components/schemas/GoogleRpcStatus'
        state:
          readOnly: true
          enumDescriptions:
            - Unspecified.
            - Specifies pending state for the task.
            - Specifies task is being executed.
            - Specifies task completed successfully.
            - Specifies Task cancel is in pending state.
            - Specifies task is being cancelled.
            - Specifies task was cancelled.
            - Specifies task failed.
            - Specifies task was skipped due to cache hit.
            - >-
              Specifies that the task was not triggered because the task's
              trigger policy is not satisfied. The trigger policy is specified
              in the `condition` field of PipelineJob.pipeline_spec.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - CANCEL_PENDING
            - CANCELLING
            - CANCELLED
            - FAILED
            - SKIPPED
            - NOT_TRIGGERED
          type: string
          description: Output only. The state of the task.
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Update time of this status.
      id: GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig:
      properties:
        overrideExistingTable:
          type: boolean
          description: >-
            If true and an export destination is specified, then the contents of
            the destination are overwritten. Otherwise, if the export
            destination already exists, then the export operation fails.
        destinationBigqueryUri:
          description: >-
            URI of desired destination BigQuery table. Expected format:
            `bq://{project_id}:{dataset_id}:{table}` If not specified, then
            results are exported to the following auto-created BigQuery table:
            `{project_id}:export_evaluated_examples_{model_name}_{yyyy_MM_dd'T'HH_mm_ss_SSS'Z'}.evaluated_examples`
          type: string
      type: object
      description: Configuration for exporting test set predictions to a BigQuery table.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig
    GoogleCloudAiplatformV1BleuInstance:
      description: Spec for bleu instance.
      id: GoogleCloudAiplatformV1BleuInstance
      type: object
      properties:
        prediction:
          description: Required. Output of the evaluated model.
          type: string
        reference:
          type: string
          description: Required. Ground truth used to compare against the prediction.
    GoogleCloudAiplatformV1RemoveDatapointsRequest:
      description: Request message for IndexService.RemoveDatapoints
      type: object
      properties:
        datapointIds:
          description: A list of datapoint ids to be deleted.
          items:
            type: string
          type: array
      id: GoogleCloudAiplatformV1RemoveDatapointsRequest
    GoogleCloudAiplatformV1RougeInput:
      id: GoogleCloudAiplatformV1RougeInput
      description: Input for rouge metric.
      properties:
        instances:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1RougeInstance'
          type: array
          description: Required. Repeated rouge instances.
        metricSpec:
          description: Required. Spec for rouge score metric.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1RougeSpec'
      type: object
    GoogleCloudAiplatformV1LargeModelReference:
      properties:
        name:
          type: string
          description: >-
            Required. The unique name of the large Foundation or pre-built
            model. Like "chat-bison", "text-bison". Or model name with version
            ID, like "chat-bison@001", "text-bison@005", etc.
      description: Contains information about the Large Model.
      id: GoogleCloudAiplatformV1LargeModelReference
      type: object
    GoogleCloudAiplatformV1NfsMount:
      description: Represents a mount configuration for Network File System (NFS) to mount.
      properties:
        path:
          type: string
          description: >-
            Required. Source path exported from NFS server. Has to start with
            '/', and combined with the ip address, it indicates the source mount
            path in the form of `server:path`
        server:
          description: Required. IP address of the NFS server.
          type: string
        mountPoint:
          description: >-
            Required. Destination mount path. The NFS will be mounted for the
            user under /mnt/nfs/
          type: string
      type: object
      id: GoogleCloudAiplatformV1NfsMount
    GoogleCloudAiplatformV1GoogleSearchRetrieval:
      id: GoogleCloudAiplatformV1GoogleSearchRetrieval
      description: Tool to retrieve public web data for grounding, powered by Google.
      type: object
      properties: {}
    GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse:
      properties:
        blobs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardBlob'
          description: Blob messages containing blob bytes.
          type: array
      id: GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse
      description: Response message for TensorboardService.ReadTensorboardBlobData.
      type: object
    GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata:
      id: GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata
      properties:
        dataBytesCount:
          description: The ingested data size in bytes.
          format: int64
          type: string
        contentValidationStats:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats
          description: >-
            The validation stats of the content (per file) to be inserted or
            updated on the Matching Engine Index resource. Populated if
            contentsDeltaUri is provided as part of Index.metadata. Please note
            that, currently for those files that are broken or has unsupported
            file format, we will not have the stats for those files.
          type: array
      type: object
      description: Runtime operation metadata with regard to Matching Engine Index.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics:
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics
      type: object
      properties:
        meanTrackingAveragePrecision:
          description: The mean average precision over all confidence thresholds.
          format: float
          type: number
        meanMismatchRate:
          format: float
          description: The mean mismatch rate over all confidence thresholds.
          type: number
        iouThreshold:
          description: >-
            The intersection-over-union threshold value between bounding boxes
            across frames used to compute this metric entry.
          format: float
          type: number
        confidenceMetrics:
          description: >-
            Metrics for each label-match `confidenceThreshold` from
            0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is
            derived from them.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics
        meanBoundingBoxIou:
          format: float
          description: The mean bounding box iou over all confidence thresholds.
          type: number
      description: >-
        UNIMPLEMENTED. Track matching model metrics for a single track match
        threshold and multiple label match confidence thresholds.
    GoogleCloudAiplatformV1MutateDeployedModelRequest:
      type: object
      description: Request message for EndpointService.MutateDeployedModel.
      id: GoogleCloudAiplatformV1MutateDeployedModelRequest
      properties:
        deployedModel:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
          description: >-
            Required. The DeployedModel to be mutated within the Endpoint. Only
            the following fields can be mutated: * `min_replica_count` in either
            DedicatedResources or AutomaticResources * `max_replica_count` in
            either DedicatedResources or AutomaticResources *
            autoscaling_metric_specs * `disable_container_logging` (v1 only) *
            `enable_container_logging` (v1beta1 only)
        updateMask:
          format: google-fieldmask
          description: >-
            Required. The update mask applies to the resource. See
            google.protobuf.FieldMask.
          type: string
    GoogleCloudAiplatformV1FeatureValueDestination:
      type: object
      id: GoogleCloudAiplatformV1FeatureValueDestination
      properties:
        tfrecordDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TFRecordDestination'
          description: >-
            Output in TFRecord format. Below are the mapping from Feature value
            type in Featurestore to Feature value type in TFRecord: Value type
            in Featurestore | Value type in TFRecord DOUBLE, DOUBLE_ARRAY |
            FLOAT_LIST INT64, INT64_ARRAY | INT64_LIST STRING, STRING_ARRAY,
            BYTES | BYTES_LIST true -> byte_string("true"), false ->
            byte_string("false") BOOL, BOOL_ARRAY (true, false) | BYTES_LIST
        bigqueryDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination'
          description: >-
            Output in BigQuery format. BigQueryDestination.output_uri in
            FeatureValueDestination.bigquery_destination must refer to a table.
        csvDestination:
          description: >-
            Output in CSV format. Array Feature value types are not allowed in
            CSV format.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CsvDestination'
      description: A destination location for Feature values and format.
    GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView:
      id: GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView
      description: Entity view with Feature values.
      properties:
        data:
          type: array
          description: >-
            Each piece of data holds the k requested values for one requested
            Feature. If no values for the requested Feature exist, the
            corresponding cell will be empty. This has the same size and is in
            the same order as the features from the header
            ReadFeatureValuesResponse.header.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData
        entityId:
          description: ID of the requested entity.
          type: string
      type: object
    GoogleCloudAiplatformV1Scheduling:
      properties:
        maxWaitDuration:
          format: google-duration
          description: >-
            Optional. This is the maximum duration that a job will wait for the
            requested resources to be provisioned if the scheduling strategy is
            set to [Strategy.DWS_FLEX_START]. If set to 0, the job will wait
            indefinitely. The default is 24 hours.
          type: string
        timeout:
          format: google-duration
          description: The maximum job running time. The default is 7 days.
          type: string
        strategy:
          description: Optional. This determines which type of scheduling strategy to use.
          enumDeprecated:
            - false
            - true
            - true
            - false
            - false
            - false
          type: string
          enumDescriptions:
            - Strategy will default to STANDARD.
            - Deprecated. Regular on-demand provisioning strategy.
            - Deprecated. Low cost by making potential use of spot resources.
            - Standard provisioning strategy uses regular on-demand resources.
            - Spot provisioning strategy uses spot resources.
            - Flex Start strategy uses DWS to queue for resources.
          enum:
            - STRATEGY_UNSPECIFIED
            - ON_DEMAND
            - LOW_COST
            - STANDARD
            - SPOT
            - FLEX_START
        restartJobOnWorkerRestart:
          description: >-
            Restarts the entire CustomJob if a worker gets restarted. This
            feature can be used by distributed training jobs that are not
            resilient to workers leaving and joining a job.
          type: boolean
        disableRetries:
          type: boolean
          description: >-
            Optional. Indicates if the job should retry for internal errors
            after the job starts running. If true, overrides
            `Scheduling.restart_job_on_worker_restart` to false.
      id: GoogleCloudAiplatformV1Scheduling
      type: object
      description: All parameters related to queuing and scheduling of custom jobs.
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec:
      description: Specification for how the data should be sliced.
      id: GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec
      properties:
        configs:
          type: object
          description: >-
            Mapping configuration for this SliceSpec. The key is the name of the
            feature. By default, the key will be prefixed by "instance" as a
            dictionary prefix for Vertex Batch Predictions output format.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig
      type: object
    GoogleCloudAiplatformV1CopyModelResponse:
      properties:
        model:
          type: string
          description: >-
            The name of the copied Model resource. Format:
            `projects/{project}/locations/{location}/models/{model}`
        modelVersionId:
          type: string
          description: Output only. The version ID of the model that is copied.
          readOnly: true
      description: Response message of ModelService.CopyModel operation.
      type: object
      id: GoogleCloudAiplatformV1CopyModelResponse
    GoogleCloudAiplatformV1PipelineJob:
      id: GoogleCloudAiplatformV1PipelineJob
      properties:
        jobDetail:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJobDetail'
          readOnly: true
          description: >-
            Output only. The details of pipeline run. Not available in the list
            view.
        endTime:
          description: Output only. Pipeline end time.
          type: string
          readOnly: true
          format: google-datetime
        serviceAccount:
          description: >-
            The service account that the pipeline workload runs as. If not
            specified, the Compute Engine default service account in the project
            will be used. See
            https://cloud.google.com/compute/docs/access/service-accounts#default_service_account
            Users starting the pipeline must have the
            `iam.serviceAccounts.actAs` permission on this service account.
          type: string
        createTime:
          type: string
          readOnly: true
          description: Output only. Pipeline creation time.
          format: google-datetime
        state:
          enum:
            - PIPELINE_STATE_UNSPECIFIED
            - PIPELINE_STATE_QUEUED
            - PIPELINE_STATE_PENDING
            - PIPELINE_STATE_RUNNING
            - PIPELINE_STATE_SUCCEEDED
            - PIPELINE_STATE_FAILED
            - PIPELINE_STATE_CANCELLING
            - PIPELINE_STATE_CANCELLED
            - PIPELINE_STATE_PAUSED
          description: Output only. The detailed state of the job.
          enumDescriptions:
            - The pipeline state is unspecified.
            - >-
              The pipeline has been created or resumed, and processing has not
              yet begun.
            - The service is preparing to run the pipeline.
            - The pipeline is in progress.
            - The pipeline completed successfully.
            - The pipeline failed.
            - >-
              The pipeline is being cancelled. From this state, the pipeline may
              only go to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED
              or PIPELINE_STATE_CANCELLED.
            - The pipeline has been cancelled.
            - The pipeline has been stopped, and can be resumed.
          type: string
          readOnly: true
        templateMetadata:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineTemplateMetadata'
          description: >-
            Output only. Pipeline template metadata. Will fill up fields if
            PipelineJob.template_uri is from supported template registry.
        name:
          description: Output only. The resource name of the PipelineJob.
          type: string
          readOnly: true
        preflightValidations:
          description: >-
            Optional. Whether to do component level validations before job
            creation.
          type: boolean
        error:
          description: >-
            Output only. The error that occurred during pipeline execution. Only
            populated when the pipeline's state is FAILED or CANCELLED.
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcStatus'
        runtimeConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJobRuntimeConfig'
          description: Runtime config of the pipeline.
        startTime:
          format: google-datetime
          readOnly: true
          description: Output only. Pipeline start time.
          type: string
        pipelineSpec:
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
          description: The spec of the pipeline.
        templateUri:
          description: >-
            A template uri from where the PipelineJob.pipeline_spec, if empty,
            will be downloaded. Currently, only uri from Vertex Template
            Registry & Gallery is supported. Reference to
            https://cloud.google.com/vertex-ai/docs/pipelines/create-pipeline-template.
          type: string
        network:
          description: >-
            The full name of the Compute Engine
            [network](/compute/docs/networks-and-firewalls#networks) to which
            the Pipeline Job's workload should be peered. For example,
            `projects/12345/global/networks/myVPC`.
            [Format](/compute/docs/reference/rest/v1/networks/insert) is of the
            form `projects/{project}/global/networks/{network}`. Where {project}
            is a project number, as in `12345`, and {network} is a network name.
            Private services access must already be configured for the network.
            Pipeline job will apply the network configuration to the Google
            Cloud resources being launched, if applied, such as Vertex AI
            Training or Dataflow job. If left unspecified, the workload is not
            peered with any network.
          type: string
        displayName:
          description: >-
            The display name of the Pipeline. The name can be up to 128
            characters long and can consist of any UTF-8 characters.
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            The labels with user-defined metadata to organize PipelineJob. Label
            keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. See
            https://goo.gl/xmQnxf for more information and examples of labels.
            Note there is some reserved label key for Vertex AI Pipelines. -
            `vertex-ai-pipelines-run-billing-id`, user set value will get
            overrided.
        reservedIpRanges:
          description: >-
            A list of names for the reserved ip ranges under the VPC network
            that can be used for this Pipeline Job's workload. If set, we will
            deploy the Pipeline Job's workload within the provided ip ranges.
            Otherwise, the job will be deployed to any ip ranges under the
            provided VPC network. Example: ['vertex-ai-ip-range'].
          type: array
          items:
            type: string
        scheduleName:
          type: string
          description: >-
            Output only. The schedule resource name. Only returned if the
            Pipeline is created by Schedule API.
          readOnly: true
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: >-
            Customer-managed encryption key spec for a pipelineJob. If set, this
            PipelineJob and all of its sub-resources will be secured by this
            key.
        updateTime:
          type: string
          description: >-
            Output only. Timestamp when this PipelineJob was most recently
            updated.
          readOnly: true
          format: google-datetime
      type: object
      description: An instance of a machine learning PipelineJob.
    GoogleCloudAiplatformV1ExportDataResponse:
      id: GoogleCloudAiplatformV1ExportDataResponse
      properties:
        dataStats:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDataStats'
          description: >-
            Only present for custom code training export use case. Records data
            stats, i.e., train/validation/test item/annotation counts calculated
            during the export operation.
        exportedFiles:
          description: >-
            All of the files that are exported in this export operation. For
            custom code training export, only three (training, validation and
            test) Cloud Storage paths in wildcard format are populated (for
            example, gs://.../training-*).
          items:
            type: string
          type: array
      description: Response message for DatasetService.ExportData.
      type: object
    GoogleCloudAiplatformV1PointwiseMetricSpec:
      type: object
      description: Spec for pointwise metric.
      properties:
        metricPromptTemplate:
          type: string
          description: Required. Metric prompt template for pointwise metric.
      id: GoogleCloudAiplatformV1PointwiseMetricSpec
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity:
      type: object
      properties:
        unit:
          type: string
          description: >-
            The time granularity unit of this time period. The supported units
            are: * "minute" * "hour" * "day" * "week" * "month" * "year"
        quantity:
          format: int64
          description: >-
            The number of granularity_units between data points in the training
            data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30.
            For all other values of `granularity_unit`, must be 1.
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity
      description: A duration of time expressed in time granularity units.
    GoogleCloudAiplatformV1PredefinedSplit:
      properties:
        key:
          description: >-
            Required. The key is a name of one of the Dataset's data columns.
            The value of the key (either the label's value or value in the
            column) must be one of {`training`, `validation`, `test`}, and it
            defines to which set the given piece of data is assigned. If for a
            piece of data the key is not present or has an invalid value, that
            piece is ignored by the pipeline.
          type: string
      type: object
      description: >-
        Assigns input data to training, validation, and test sets based on the
        value of a provided key. Supported only for tabular Datasets.
      id: GoogleCloudAiplatformV1PredefinedSplit
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs
      properties:
        modelType:
          type: string
          enumDescriptions:
            - Should not be set.
            - >-
              A model best tailored to be used within Google Cloud, and which c
              annot be exported. Default.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) as a
              TensorFlow or TensorFlow Lite model and used on a mobile or edge
              device afterwards.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) to a Jetson
              device afterwards.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) as a
              TensorFlow or TensorFlow Lite model and used on a Coral device
              afterwards.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - MOBILE_VERSATILE_1
            - MOBILE_JETSON_VERSATILE_1
            - MOBILE_CORAL_VERSATILE_1
      type: object
    GoogleCloudAiplatformV1UpsertDatapointsRequest:
      properties:
        updateMask:
          description: >-
            Optional. Update mask is used to specify the fields to be
            overwritten in the datapoints by the update. The fields specified in
            the update_mask are relative to each IndexDatapoint inside
            datapoints, not the full request. Updatable fields: * Use
            `all_restricts` to update both restricts and numeric_restricts.
          type: string
          format: google-fieldmask
        datapoints:
          type: array
          description: A list of datapoints to be created/updated.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint'
      description: Request message for IndexService.UpsertDatapoints
      id: GoogleCloudAiplatformV1UpsertDatapointsRequest
      type: object
    GoogleIamV1TestIamPermissionsResponse:
      id: GoogleIamV1TestIamPermissionsResponse
      properties:
        permissions:
          type: array
          items:
            type: string
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
      type: object
      description: Response message for `TestIamPermissions` method.
    GoogleCloudAiplatformV1SummarizationQualityResult:
      description: Spec for summarization quality result.
      type: object
      id: GoogleCloudAiplatformV1SummarizationQualityResult
      properties:
        explanation:
          type: string
          readOnly: true
          description: Output only. Explanation for summarization quality score.
        score:
          type: number
          readOnly: true
          format: float
          description: Output only. Summarization Quality score.
        confidence:
          type: number
          description: Output only. Confidence for summarization quality score.
          readOnly: true
          format: float
    GoogleCloudAiplatformV1MutateDeployedIndexOperationMetadata:
      properties:
        deployedIndexId:
          type: string
          description: The unique index id specified by user
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
      type: object
      id: GoogleCloudAiplatformV1MutateDeployedIndexOperationMetadata
      description: >-
        Runtime operation information for
        IndexEndpointService.MutateDeployedIndex.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation:
      description: >-
        Training pipeline will perform following transformation functions. * The
        text as is--no change to case, punctuation, spelling, tense, and so on.
        * Convert the category name to a dictionary lookup index and generate an
        embedding for each index.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult:
      description: Spec for pairwise question answering quality result.
      type: object
      id: GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult
      properties:
        confidence:
          description: Output only. Confidence for question answering quality score.
          format: float
          type: number
          readOnly: true
        explanation:
          description: Output only. Explanation for question answering quality score.
          type: string
          readOnly: true
        pairwiseChoice:
          enumDescriptions:
            - Unspecified prediction choice.
            - Baseline prediction wins
            - Candidate prediction wins
            - Winner cannot be determined
          enum:
            - PAIRWISE_CHOICE_UNSPECIFIED
            - BASELINE
            - CANDIDATE
            - TIE
          readOnly: true
          description: Output only. Pairwise question answering prediction choice.
          type: string
    GoogleCloudAiplatformV1ListDataItemsResponse:
      type: object
      description: Response message for DatasetService.ListDataItems.
      properties:
        dataItems:
          description: >-
            A list of DataItems that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DataItem'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: GoogleCloudAiplatformV1ListDataItemsResponse
    GoogleCloudAiplatformV1ShieldedVmConfig:
      description: >-
        A set of Shielded Instance options. See [Images using supported Shielded
        VM
        features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
      type: object
      properties:
        enableSecureBoot:
          description: >-
            Defines whether the instance has [Secure
            Boot](https://cloud.google.com/compute/shielded-vm/docs/shielded-vm#secure-boot)
            enabled. Secure Boot helps ensure that the system only runs
            authentic software by verifying the digital signature of all boot
            components, and halting the boot process if signature verification
            fails.
          type: boolean
      id: GoogleCloudAiplatformV1ShieldedVmConfig
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection:
      properties:
        metadata:
          description: The metadata information
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection
      description: >-
        A TrainingJob that trains and uploads an AutoML Image Object Detection
        Model.
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics:
      properties:
        recall:
          type: number
          description: Output only. Recall for the given confidence threshold.
          format: float
        f1Score:
          format: float
          type: number
          description: Output only. The harmonic mean of recall and precision.
        precision:
          description: Output only. Precision for the given confidence threshold.
          type: number
          format: float
        confidenceThreshold:
          type: number
          description: >-
            Output only. The confidence threshold value used to compute the
            metrics.
          format: float
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics
      description: Metrics for a single confidence threshold.
      type: object
    GoogleCloudAiplatformV1UndeployIndexResponse:
      id: GoogleCloudAiplatformV1UndeployIndexResponse
      type: object
      description: Response message for IndexEndpointService.UndeployIndex.
      properties: {}
    GoogleCloudAiplatformV1PublisherModelCallToActionDeployGke:
      type: object
      id: GoogleCloudAiplatformV1PublisherModelCallToActionDeployGke
      description: Configurations for PublisherModel GKE deployment
      properties:
        gkeYamlConfigs:
          type: array
          description: Optional. GKE deployment configuration in yaml format.
          items:
            type: string
    GoogleCloudAiplatformV1PurgeContextsRequest:
      id: GoogleCloudAiplatformV1PurgeContextsRequest
      type: object
      description: Request message for MetadataService.PurgeContexts.
      properties:
        filter:
          type: string
          description: >-
            Required. A required filter matching the Contexts to be purged.
            E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
        force:
          description: >-
            Optional. Flag to indicate to actually perform the purge. If `force`
            is set to false, the method will return a sample of Context names
            that would be deleted.
          type: boolean
    GoogleCloudAiplatformV1NasTrial:
      id: GoogleCloudAiplatformV1NasTrial
      type: object
      properties:
        endTime:
          readOnly: true
          type: string
          description: >-
            Output only. Time when the NasTrial's status changed to `SUCCEEDED`
            or `INFEASIBLE`.
          format: google-datetime
        id:
          type: string
          description: Output only. The identifier of the NasTrial assigned by the service.
          readOnly: true
        startTime:
          readOnly: true
          type: string
          description: Output only. Time when the NasTrial was started.
          format: google-datetime
        finalMeasurement:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Measurement'
          description: Output only. The final measurement containing the objective value.
          readOnly: true
        state:
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - REQUESTED
            - ACTIVE
            - STOPPING
            - SUCCEEDED
            - INFEASIBLE
          description: Output only. The detailed state of the NasTrial.
          enumDescriptions:
            - The NasTrial state is unspecified.
            - >-
              Indicates that a specific NasTrial has been requested, but it has
              not yet been suggested by the service.
            - Indicates that the NasTrial has been suggested.
            - Indicates that the NasTrial should stop according to the service.
            - Indicates that the NasTrial is completed successfully.
            - >-
              Indicates that the NasTrial should not be attempted again. The
              service will set a NasTrial to INFEASIBLE when it's done but
              missing the final_measurement.
      description: Represents a uCAIP NasJob trial.
    GoogleCloudAiplatformV1GroundingSupport:
      description: Grounding support.
      properties:
        segment:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Segment'
          description: Segment of the content this support belongs to.
        groundingChunkIndices:
          description: >-
            A list of indices (into 'grounding_chunk') specifying the citations
            associated with the claim. For instance [1,3,4] means that
            grounding_chunk[1], grounding_chunk[3], grounding_chunk[4] are the
            retrieved content attributed to the claim.
          type: array
          items:
            format: int32
            type: integer
        confidenceScores:
          description: >-
            Confidence score of the support references. Ranges from 0 to 1. 1 is
            the most confident. This list must have the same size as the
            grounding_chunk_indices.
          type: array
          items:
            format: float
            type: number
      id: GoogleCloudAiplatformV1GroundingSupport
      type: object
    GoogleCloudAiplatformV1ModelBaseModelSource:
      properties:
        genieSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenieSource'
          description: Information about the base model of Genie models.
        modelGardenSource:
          description: Source information of Model Garden models.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelGardenSource'
      description: >-
        User input field to specify the base model source. Currently it only
        supports specifing the Model Garden models and Genie models.
      type: object
      id: GoogleCloudAiplatformV1ModelBaseModelSource
    GoogleCloudAiplatformV1SchemaVertex:
      type: object
      properties:
        x:
          description: X coordinate.
          type: number
          format: double
        'y':
          type: number
          description: Y coordinate.
          format: double
      description: >-
        A vertex represents a 2D point in the image. NOTE: the normalized vertex
        coordinates are relative to the original image and range from 0 to 1.
      id: GoogleCloudAiplatformV1SchemaVertex
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource:
      type: object
      id: GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource
      properties:
        uri:
          type: string
          description: >-
            The URI of a BigQuery table. e.g.
            bq://projectId.bqDatasetId.bqTableId
    GoogleCloudAiplatformV1PurgeArtifactsMetadata:
      id: GoogleCloudAiplatformV1PurgeArtifactsMetadata
      properties:
        genericMetadata:
          description: Operation metadata for purging Artifacts.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      description: Details of operations that perform MetadataService.PurgeArtifacts.
      type: object
    GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig:
      properties:
        sampleRate:
          type: number
          description: Sample rate (0, 1]
          format: double
      type: object
      id: GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig
      description: Requests are randomly selected.
    GoogleCloudAiplatformV1ListModelEvaluationsResponse:
      type: object
      description: Response message for ModelService.ListModelEvaluations.
      id: GoogleCloudAiplatformV1ListModelEvaluationsResponse
      properties:
        modelEvaluations:
          description: List of ModelEvaluations in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation'
          type: array
        nextPageToken:
          type: string
          description: >-
            A token to retrieve next page of results. Pass to
            ListModelEvaluationsRequest.page_token to obtain that page.
    GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective:
      properties:
        type:
          type: string
          enumDescriptions:
            - Default value, should not be set.
            - >-
              Raw feature values' stats to detect skew between
              Training-Prediction datasets.
            - >-
              Raw feature values' stats to detect drift between
              Serving-Prediction datasets.
            - >-
              Feature attribution scores to detect skew between
              Training-Prediction datasets.
            - >-
              Feature attribution scores to detect skew between Prediction
              datasets collected within different time windows.
          enum:
            - MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED
            - RAW_FEATURE_SKEW
            - RAW_FEATURE_DRIFT
            - FEATURE_ATTRIBUTION_SKEW
            - FEATURE_ATTRIBUTION_DRIFT
        topFeatureCount:
          type: integer
          format: int32
          description: >-
            If set, all attribution scores between
            SearchModelDeploymentMonitoringStatsAnomaliesRequest.start_time and
            SearchModelDeploymentMonitoringStatsAnomaliesRequest.end_time are
            fetched, and page token doesn't take effect in this case. Only used
            to retrieve attribution score for the top Features which has the
            highest attribution score in the latest monitoring run.
      type: object
      description: Stats requested for specific objective.
      id: >-
        GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective
    GoogleCloudAiplatformV1PairwiseMetricSpec:
      description: Spec for pairwise metric.
      properties:
        metricPromptTemplate:
          type: string
          description: Required. Metric prompt template for pairwise metric.
      id: GoogleCloudAiplatformV1PairwiseMetricSpec
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation:
      type: object
      properties:
        columnName:
          type: string
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation
      description: >-
        Training pipeline will infer the proper transformation based on the
        statistic of dataset.
    GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup:
      id: GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup
      description: >-
        Features belonging to a single feature group that will be synced to
        Online Store.
      properties:
        featureIds:
          description: Required. Identifiers of features under the feature group.
          type: array
          items:
            type: string
        featureGroupId:
          description: Required. Identifier of the feature group.
          type: string
      type: object
    GoogleCloudAiplatformV1PublisherModelResourceReference:
      properties:
        resourceName:
          type: string
          description: The resource name of the Google Cloud resource.
        useCase:
          description: Use case (CUJ) of the resource.
          deprecated: true
          type: string
        uri:
          description: The URI of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
          deprecated: true
      description: Reference to a resource.
      id: GoogleCloudAiplatformV1PublisherModelResourceReference
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsVideoActionRecognitionPredictionParams:
      description: Prediction model parameters for Video Action Recognition.
      id: >-
        GoogleCloudAiplatformV1SchemaPredictParamsVideoActionRecognitionPredictionParams
      type: object
      properties:
        maxPredictions:
          format: int32
          type: integer
          description: >-
            The model only returns up to that many top, by confidence score,
            predictions per frame of the video. If this number is very high, the
            Model may return fewer predictions per frame. Default value is 50.
        confidenceThreshold:
          description: >-
            The Model only returns predictions with at least this confidence
            score. Default value is 0.0
          type: number
          format: float
    GoogleCloudAiplatformV1SupervisedTuningDataStats:
      description: Tuning data statistics for Supervised Tuning.
      type: object
      id: GoogleCloudAiplatformV1SupervisedTuningDataStats
      properties:
        totalTruncatedExampleCount:
          format: int64
          type: string
          description: >-
            The number of examples in the dataset that have been truncated by
            any amount.
        userInputTokenDistribution:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SupervisedTuningDatasetDistribution
          readOnly: true
          description: Output only. Dataset distributions for the user input tokens.
        totalBillableCharacterCount:
          description: Output only. Number of billable characters in the tuning dataset.
          format: int64
          type: string
          deprecated: true
          readOnly: true
        tuningDatasetExampleCount:
          readOnly: true
          description: Output only. Number of examples in the tuning dataset.
          format: int64
          type: string
        totalBillableTokenCount:
          description: Output only. Number of billable tokens in the tuning dataset.
          type: string
          readOnly: true
          format: int64
        userOutputTokenDistribution:
          description: Output only. Dataset distributions for the user output tokens.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SupervisedTuningDatasetDistribution
        truncatedExampleIndices:
          description: >-
            A partial sample of the indices (starting from 1) of the truncated
            examples.
          items:
            type: string
            format: int64
          type: array
        userMessagePerExampleDistribution:
          description: Output only. Dataset distributions for the messages per example.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SupervisedTuningDatasetDistribution
        totalTuningCharacterCount:
          type: string
          format: int64
          readOnly: true
          description: Output only. Number of tuning characters in the tuning dataset.
        tuningStepCount:
          description: Output only. Number of tuning steps for this Tuning Job.
          readOnly: true
          type: string
          format: int64
        userDatasetExamples:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Content'
          type: array
          description: Output only. Sample user messages in the training dataset uri.
    GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig:
      type: object
      properties:
        disableAttribution:
          type: boolean
          description: >-
            If set, skip finding claim attributions (i.e not generate grounding
            citation).
          deprecated: true
        sources:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry
          type: array
          description: The sources for the grounding checking.
      description: The configuration for grounding checking.
      id: GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig
    GoogleCloudAiplatformV1GroundednessInstance:
      properties:
        context:
          type: string
          description: >-
            Required. Background information provided in context used to compare
            against the prediction.
        prediction:
          type: string
          description: Required. Output of the evaluated model.
      type: object
      id: GoogleCloudAiplatformV1GroundednessInstance
      description: Spec for groundedness instance.
    GoogleCloudAiplatformV1FeatureViewDataKeyCompositeKey:
      description: ID that is comprised from several parts (columns).
      properties:
        parts:
          description: >-
            Parts to construct Entity ID. Should match with the same ID columns
            as defined in FeatureView in the same order.
          type: array
          items:
            type: string
      id: GoogleCloudAiplatformV1FeatureViewDataKeyCompositeKey
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs:
      properties:
        disableEarlyStopping:
          description: >-
            Use the entire training budget. This disables the early stopping
            feature. When false the early stopping feature is enabled, which
            means that AutoML Image Classification might stop training before
            the entire training budget has been used.
          type: boolean
        baseModelId:
          type: string
          description: >-
            The ID of the `base` model. If it is specified, the new model will
            be trained based on the `base` model. Otherwise, the new model will
            be trained from scratch. The `base` model must be in the same
            Project and Location as the new Model to train, and have the same
            modelType.
        tunableParameter:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter
          description: Trainer type for Vision TrainRequest.
        budgetMilliNodeHours:
          type: string
          format: int64
          description: >-
            The training budget of creating this model, expressed in milli node
            hours i.e. 1,000 value in this field means 1 node hour. The actual
            metadata.costMilliNodeHours will be equal or less than this value.
            If further model training ceases to provide any improvements, it
            will stop without using the full budget and the
            metadata.successfulStopReason will be `model-converged`. Note,
            node_hour = actual_hour * number_of_nodes_involved. For modelType
            `cloud`(default), the budget must be between 8,000 and 800,000 milli
            node hours, inclusive. The default value is 192,000 which represents
            one day in wall time, considering 8 nodes are used. For model types
            `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`,
            `mobile-tf-high-accuracy-1`, the training budget must be between
            1,000 and 100,000 milli node hours, inclusive. The default value is
            24,000 which represents one day in wall time on a single node that
            is used.
        multiLabel:
          description: >-
            If false, a single-label (multi-class) Model will be trained (i.e.
            assuming that for each image just up to one annotation may be
            applicable). If true, a multi-label Model will be trained (i.e.
            assuming that for each image multiple annotations may be
            applicable).
          type: boolean
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - CLOUD_1
            - MOBILE_TF_LOW_LATENCY_1
            - MOBILE_TF_VERSATILE_1
            - MOBILE_TF_HIGH_ACCURACY_1
            - EFFICIENTNET
            - MAXVIT
            - VIT
            - COCA
          type: string
          enumDescriptions:
            - Should not be set.
            - >-
              A Model best tailored to be used within Google Cloud, and which
              cannot be exported. Default.
            - >-
              A model type best tailored to be used within Google Cloud, which
              cannot be exported externally. Compared to the CLOUD model above,
              it is expected to have higher prediction accuracy.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) as TensorFlow
              or Core ML model and used on a mobile or edge device afterwards.
              Expected to have low latency, but may have lower prediction
              quality than other mobile models.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) as TensorFlow
              or Core ML model and used on a mobile or edge device with
              afterwards.
            - >-
              A model that, in addition to being available within Google Cloud,
              can also be exported (see ModelService.ExportModel) as TensorFlow
              or Core ML model and used on a mobile or edge device afterwards.
              Expected to have a higher latency, but should also have a higher
              prediction quality than other mobile models.
            - >-
              EfficientNet model for Model Garden training with customizable
              hyperparameters. Best tailored to be used within Google Cloud, and
              cannot be exported externally.
            - >-
              MaxViT model for Model Garden training with customizable
              hyperparameters. Best tailored to be used within Google Cloud, and
              cannot be exported externally.
            - >-
              ViT model for Model Garden training with customizable
              hyperparameters. Best tailored to be used within Google Cloud, and
              cannot be exported externally.
            - >-
              CoCa model for Model Garden training with customizable
              hyperparameters. Best tailored to be used within Google Cloud, and
              cannot be exported externally.
        uptrainBaseModelId:
          description: >-
            The ID of `base` model for upTraining. If it is specified, the new
            model will be upTrained based on the `base` model for upTraining.
            Otherwise, the new model will be trained from scratch. The `base`
            model for upTraining must be in the same Project and Location as the
            new Model to train, and have the same modelType.
          type: string
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs
    GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig:
      id: GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig
      properties:
        deployedModelId:
          type: string
          description: The DeployedModel ID of the objective config.
        objectiveConfig:
          description: >-
            The objective config of for the modelmonitoring job of this deployed
            model.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig
      description: >-
        ModelDeploymentMonitoringObjectiveConfig contains the pair of
        deployed_model_id to ModelMonitoringObjectiveConfig.
      type: object
    GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata:
      id: GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata
      type: object
      description: The metadata of Datasets that contain Text Prompt data.
      properties:
        systemInstruction:
          type: string
          description: The content of the prompt dataset system instruction.
        hasPromptVariable:
          description: Whether the prompt dataset has prompt variable.
          type: boolean
        candidateCount:
          type: string
          description: Number of candidates.
          format: int64
        gcsUri:
          type: string
          description: The Google Cloud Storage URI that stores the prompt data.
        note:
          description: User-created prompt note. Note size limit is 2KB.
          type: string
        topK:
          format: int64
          description: >-
            Top K value set when the dataset was saved. This value determines
            how many candidates with highest probability from the vocab would be
            selected for each decoding step.
          type: string
        topP:
          format: float
          description: >-
            Top P value set when the dataset was saved. Given topK tokens for
            decoding, top candidates will be selected until the sum of their
            probabilities is topP.
          type: number
        promptType:
          type: string
          description: Type of the prompt dataset.
        systemInstructionGcsUri:
          type: string
          description: >-
            The Google Cloud Storage URI that stores the system instruction,
            starting with gs://.
        maxOutputTokens:
          type: string
          description: >-
            Value of the maximum number of tokens generated set when the dataset
            was saved.
          format: int64
        temperature:
          description: >-
            Temperature value used for sampling set when the dataset was saved.
            This value is used to tune the degree of randomness.
          format: float
          type: number
        stopSequences:
          description: Customized stop sequences.
          items:
            type: string
          type: array
        text:
          type: string
          description: The content of the prompt dataset.
        groundingConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig
          description: Grounding checking configuration.
    GoogleCloudAiplatformV1EvaluatedAnnotation:
      id: GoogleCloudAiplatformV1EvaluatedAnnotation
      type: object
      description: >-
        True positive, false positive, or false negative. EvaluatedAnnotation is
        only available under ModelEvaluationSlice with slice of `annotationSpec`
        dimension.
      properties:
        errorAnalysisAnnotations:
          type: array
          description: Annotations of model error analysis results.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ErrorAnalysisAnnotation
        evaluatedDataItemViewId:
          description: >-
            Output only. ID of the EvaluatedDataItemView under the same ancestor
            ModelEvaluation. The EvaluatedDataItemView consists of all ground
            truths and predictions on data_item_payload.
          readOnly: true
          type: string
        predictions:
          type: array
          items:
            type: any
          description: >-
            Output only. The model predicted annotations. For true positive,
            there is one and only one prediction, which matches the only one
            ground truth annotation in ground_truths. For false positive, there
            is one and only one prediction, which doesn't match any ground truth
            annotation of the corresponding data_item_view_id. For false
            negative, there are zero or more predictions which are similar to
            the only ground truth annotation in ground_truths but not enough for
            a match. The schema of the prediction is stored in
            ModelEvaluation.annotation_schema_uri
          readOnly: true
        type:
          readOnly: true
          enumDescriptions:
            - Invalid value.
            - >-
              The EvaluatedAnnotation is a true positive. It has a prediction
              created by the Model and a ground truth Annotation which the
              prediction matches.
            - >-
              The EvaluatedAnnotation is false positive. It has a prediction
              created by the Model which does not match any ground truth
              annotation.
            - >-
              The EvaluatedAnnotation is false negative. It has a ground truth
              annotation which is not matched by any of the model created
              predictions.
          enum:
            - EVALUATED_ANNOTATION_TYPE_UNSPECIFIED
            - TRUE_POSITIVE
            - FALSE_POSITIVE
            - FALSE_NEGATIVE
          description: Output only. Type of the EvaluatedAnnotation.
          type: string
        dataItemPayload:
          readOnly: true
          type: any
          description: >-
            Output only. The data item payload that the Model predicted this
            EvaluatedAnnotation on.
        explanations:
          description: >-
            Explanations of predictions. Each element of the explanations
            indicates the explanation for one explanation Method. The
            attributions list in the EvaluatedAnnotationExplanation.explanation
            object corresponds to the predictions list. For example, the second
            element in the attributions list explains the second element in the
            predictions list.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1EvaluatedAnnotationExplanation
          type: array
        groundTruths:
          readOnly: true
          type: array
          items:
            type: any
          description: >-
            Output only. The ground truth Annotations, i.e. the Annotations that
            exist in the test data the Model is evaluated on. For true positive,
            there is one and only one ground truth annotation, which matches the
            only prediction in predictions. For false positive, there are zero
            or more ground truth annotations that are similar to the only
            prediction in predictions, but not enough for a match. For false
            negative, there is one and only one ground truth annotation, which
            doesn't match any predictions created by the model. The schema of
            the ground truth is stored in ModelEvaluation.annotation_schema_uri
    GoogleCloudAiplatformV1MergeVersionAliasesRequest:
      type: object
      properties:
        versionAliases:
          type: array
          description: >-
            Required. The set of version aliases to merge. The alias should be
            at most 128 characters, and match `a-z{0,126}[a-z-0-9]`. Add the `-`
            prefix to an alias means removing that alias from the version. `-`
            is NOT counted in the 128 characters. Example: `-golden` means
            removing the `golden` alias from the version. There is NO ordering
            in aliases, which means 1) The aliases returned from GetModel API
            might not have the exactly same order from this MergeVersionAliases
            API. 2) Adding and deleting the same alias in the request is not
            recommended, and the 2 operations will be cancelled out.
          items:
            type: string
      description: Request message for ModelService.MergeVersionAliases.
      id: GoogleCloudAiplatformV1MergeVersionAliasesRequest
    GoogleCloudAiplatformV1NotebookRuntimeTemplateRef:
      type: object
      properties:
        notebookRuntimeTemplate:
          type: string
          description: Immutable. A resource name of the NotebookRuntimeTemplate.
      id: GoogleCloudAiplatformV1NotebookRuntimeTemplateRef
      description: Points to a NotebookRuntimeTemplateRef.
    GoogleCloudAiplatformV1ListCustomJobsResponse:
      id: GoogleCloudAiplatformV1ListCustomJobsResponse
      type: object
      properties:
        customJobs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJob'
          description: List of CustomJobs in the requested page.
          type: array
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Pass to
            ListCustomJobsRequest.page_token to obtain that page.
          type: string
      description: Response message for JobService.ListCustomJobs
    GoogleCloudAiplatformV1ExplainResponse:
      id: GoogleCloudAiplatformV1ExplainResponse
      properties:
        deployedModelId:
          type: string
          description: ID of the Endpoint's DeployedModel that served this explanation.
        predictions:
          items:
            type: any
          type: array
          description: >-
            The predictions that are the output of the predictions call. Same as
            PredictResponse.predictions.
        explanations:
          description: >-
            The explanations of the Model's PredictResponse.predictions. It has
            the same number of elements as instances to be explained.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Explanation'
      description: Response message for PredictionService.Explain.
      type: object
    GoogleCloudAiplatformV1DeployModelRequest:
      properties:
        deployedModel:
          description: >-
            Required. The DeployedModel to be created within the Endpoint. Note
            that Endpoint.traffic_split must be updated for the DeployedModel to
            start receiving traffic, either as part of this call, or via
            EndpointService.UpdateEndpoint.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
        trafficSplit:
          type: object
          description: >-
            A map from a DeployedModel's ID to the percentage of this Endpoint's
            traffic that should be forwarded to that DeployedModel. If this
            field is non-empty, then the Endpoint's traffic_split will be
            overwritten with it. To refer to the ID of the just being deployed
            Model, a "0" should be used, and the actual ID of the new
            DeployedModel will be filled in its place by this method. The
            traffic percentage values must add up to 100. If this field is
            empty, then the Endpoint's traffic_split is not updated.
          additionalProperties:
            format: int32
            type: integer
      id: GoogleCloudAiplatformV1DeployModelRequest
      description: Request message for EndpointService.DeployModel.
      type: object
    GoogleCloudAiplatformV1CoherenceInput:
      type: object
      properties:
        instance:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CoherenceInstance'
          description: Required. Coherence instance.
        metricSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CoherenceSpec'
          description: Required. Spec for coherence score metric.
      id: GoogleCloudAiplatformV1CoherenceInput
      description: Input for coherence metric.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation:
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation
      type: object
      properties:
        text:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation
        repeatedNumeric:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation
        repeatedCategorical:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation
        numeric:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation
        categorical:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation
        repeatedText:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation
        auto:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation
        timestamp:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation
    GoogleCloudAiplatformV1SummarizationHelpfulnessInput:
      description: Input for summarization helpfulness metric.
      id: GoogleCloudAiplatformV1SummarizationHelpfulnessInput
      properties:
        instance:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationHelpfulnessInstance
          description: Required. Summarization helpfulness instance.
        metricSpec:
          description: Required. Spec for summarization helpfulness score metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SummarizationHelpfulnessSpec
      type: object
    GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateResponse:
      properties:
        shouldStop:
          type: boolean
          description: True if the Trial should stop.
      id: GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateResponse
      type: object
      description: Response message for VizierService.CheckTrialEarlyStoppingState.
    GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse:
      properties:
        timeSeriesData:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TimeSeriesData'
          description: The returned time series data.
          type: array
      description: >-
        Response message for
        TensorboardService.BatchReadTensorboardTimeSeriesData.
      id: GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceTextClassificationPredictionInstance:
      description: Prediction input format for Text Classification.
      id: >-
        GoogleCloudAiplatformV1SchemaPredictInstanceTextClassificationPredictionInstance
      properties:
        mimeType:
          type: string
          description: >-
            The MIME type of the text snippet. The supported MIME types are
            listed below. - text/plain
        content:
          type: string
          description: The text snippet to make the predictions on.
      type: object
    GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse:
      properties: {}
      id: GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse
      description: Response message for TensorboardService.WriteTensorboardExperimentData.
      type: object
    GoogleCloudAiplatformV1CreateIndexOperationMetadata:
      description: Runtime operation information for IndexService.CreateIndex.
      properties:
        nearestNeighborSearchOperationMetadata:
          description: >-
            The operation metadata with regard to Matching Engine Index
            operation.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      type: object
      id: GoogleCloudAiplatformV1CreateIndexOperationMetadata
    GoogleCloudAiplatformV1PairwiseSummarizationQualityInput:
      properties:
        metricSpec:
          description: Required. Spec for pairwise summarization quality score metric.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PairwiseSummarizationQualitySpec
        instance:
          description: Required. Pairwise summarization quality instance.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1PairwiseSummarizationQualityInstance
      type: object
      description: Input for pairwise summarization quality metric.
      id: GoogleCloudAiplatformV1PairwiseSummarizationQualityInput
    GoogleCloudAiplatformV1ModelSourceInfo:
      description: Detail description of the source information of the model.
      id: GoogleCloudAiplatformV1ModelSourceInfo
      properties:
        sourceType:
          enumDescriptions:
            - Should not be used.
            - The Model is uploaded by automl training pipeline.
            - The Model is uploaded by user or custom training pipeline.
            - The Model is registered and sync'ed from BigQuery ML.
            - The Model is saved or tuned from Model Garden.
            - The Model is saved or tuned from Genie.
            - The Model is uploaded by text embedding finetuning pipeline.
            - The Model is saved or tuned from Marketplace.
          enum:
            - MODEL_SOURCE_TYPE_UNSPECIFIED
            - AUTOML
            - CUSTOM
            - BQML
            - MODEL_GARDEN
            - GENIE
            - CUSTOM_TEXT_EMBEDDING
            - MARKETPLACE
          type: string
          description: Type of the model source.
        copy:
          type: boolean
          description: >-
            If this Model is copy of another Model. If true then source_type
            pertains to the original.
      type: object
    GoogleCloudAiplatformV1ToolNameMatchSpec:
      description: Spec for tool name match metric.
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1ToolNameMatchSpec
    GoogleCloudAiplatformV1UndeployIndexRequest:
      properties:
        deployedIndexId:
          description: >-
            Required. The ID of the DeployedIndex to be undeployed from the
            IndexEndpoint.
          type: string
      description: Request message for IndexEndpointService.UndeployIndex.
      type: object
      id: GoogleCloudAiplatformV1UndeployIndexRequest
    GoogleCloudAiplatformV1SupervisedTuningSpec:
      description: Tuning Spec for Supervised Tuning for first party models.
      properties:
        validationDatasetUri:
          description: >-
            Optional. Cloud Storage path to file containing validation dataset
            for tuning. The dataset must be formatted as a JSONL file.
          type: string
        hyperParameters:
          description: Optional. Hyperparameters for SFT.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SupervisedHyperParameters
        trainingDatasetUri:
          description: >-
            Required. Cloud Storage path to file containing training dataset for
            tuning. The dataset must be formatted as a JSONL file.
          type: string
      type: object
      id: GoogleCloudAiplatformV1SupervisedTuningSpec
    GoogleCloudAiplatformV1GcsSource:
      type: object
      id: GoogleCloudAiplatformV1GcsSource
      description: The Google Cloud Storage location for the input content.
      properties:
        uris:
          type: array
          description: >-
            Required. Google Cloud Storage URI(-s) to the input file(s). May
            contain wildcards. For more information on wildcards, see
            https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.
          items:
            type: string
    GoogleCloudAiplatformV1ReadIndexDatapointsResponse:
      id: GoogleCloudAiplatformV1ReadIndexDatapointsResponse
      properties:
        datapoints:
          description: The result list of datapoints.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint'
          type: array
      description: The response message for MatchService.ReadIndexDatapoints.
      type: object
    GoogleCloudAiplatformV1Context:
      type: object
      description: Instance of a general context.
      properties:
        description:
          type: string
          description: Description of the Context
        name:
          type: string
          description: Immutable. The resource name of the Context.
        etag:
          description: >-
            An eTag used to perform consistent read-modify-write updates. If not
            set, a blind "overwrite" update happens.
          type: string
        displayName:
          description: >-
            User provided display name of the Context. May be up to 128 Unicode
            characters.
          type: string
        schemaTitle:
          type: string
          description: >-
            The title of the schema describing the metadata. Schema title and
            version is expected to be registered in earlier Create Schema calls.
            And both are used together as unique identifiers to identify schemas
            within the local metadata store.
        schemaVersion:
          type: string
          description: >-
            The version of the schema in schema_name to use. Schema title and
            version is expected to be registered in earlier Create Schema calls.
            And both are used together as unique identifiers to identify schemas
            within the local metadata store.
        labels:
          description: >-
            The labels with user-defined metadata to organize your Contexts.
            Label keys and values can be no longer than 64 characters (Unicode
            codepoints), can only contain lowercase letters, numeric characters,
            underscores and dashes. International characters are allowed. No
            more than 64 user labels can be associated with one Context (System
            labels are excluded).
          additionalProperties:
            type: string
          type: object
        parentContexts:
          items:
            type: string
          description: >-
            Output only. A list of resource names of Contexts that are parents
            of this Context. A Context may have at most 10 parent_contexts.
          readOnly: true
          type: array
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when this Context was last updated.
          type: string
        createTime:
          description: Output only. Timestamp when this Context was created.
          format: google-datetime
          readOnly: true
          type: string
        metadata:
          type: object
          description: >-
            Properties of the Context. Top level metadata keys' heading and
            trailing spaces will be trimmed. The size of this field should not
            exceed 200KB.
          additionalProperties:
            description: Properties of the object.
            type: any
      id: GoogleCloudAiplatformV1Context
    GoogleCloudAiplatformV1SchemaVideoObjectTrackingAnnotation:
      id: GoogleCloudAiplatformV1SchemaVideoObjectTrackingAnnotation
      type: object
      properties:
        instanceId:
          type: string
          format: int64
          description: >-
            The instance of the object, expressed as a positive integer. Used to
            track the same object across different frames.
        xMin:
          type: number
          format: double
          description: The leftmost coordinate of the bounding box.
        yMax:
          format: double
          type: number
          description: The bottommost coordinate of the bounding box.
        yMin:
          type: number
          description: The topmost coordinate of the bounding box.
          format: double
        timeOffset:
          format: google-duration
          description: >-
            A time (frame) of a video to which this annotation pertains.
            Represented as the duration since the video's start.
          type: string
        displayName:
          type: string
          description: >-
            The display name of the AnnotationSpec that this Annotation pertains
            to.
        annotationSpecId:
          type: string
          description: >-
            The resource Id of the AnnotationSpec that this Annotation pertains
            to.
        xMax:
          description: The rightmost coordinate of the bounding box.
          format: double
          type: number
      description: Annotation details specific to video object tracking.
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec:
      properties:
        metricId:
          type: string
          description: Required. The ID of the metric. Must not contain whitespaces.
        goal:
          type: string
          description: Required. The optimization goal of the metric.
          enumDescriptions:
            - Goal Type will default to maximize.
            - Maximize the goal metric.
            - Minimize the goal metric.
          enum:
            - GOAL_TYPE_UNSPECIFIED
            - MAXIMIZE
            - MINIMIZE
      description: Represents a metric to optimize.
      id: GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec
      type: object
    GoogleCloudAiplatformV1CreateFeatureViewOperationMetadata:
      description: Details of operations that perform create FeatureView.
      id: GoogleCloudAiplatformV1CreateFeatureViewOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for FeatureView Create.
      type: object
    GoogleCloudAiplatformV1AutomaticResources:
      properties:
        maxReplicaCount:
          format: int32
          description: >-
            Immutable. The maximum number of replicas this DeployedModel may be
            deployed on when the traffic against it increases. If the requested
            value is too large, the deployment will error, but if deployment
            succeeds then the ability to scale the model to that many replicas
            is guaranteed (barring service outages). If traffic against the
            DeployedModel increases beyond what its replicas at maximum may
            handle, a portion of the traffic will be dropped. If this value is
            not provided, a no upper bound for scaling under heavy traffic will
            be assume, though Vertex AI may be unable to scale beyond certain
            replica number.
          type: integer
        minReplicaCount:
          format: int32
          type: integer
          description: >-
            Immutable. The minimum number of replicas this DeployedModel will be
            always deployed on. If traffic against it increases, it may
            dynamically be deployed onto more replicas up to max_replica_count,
            and as traffic decreases, some of these extra replicas may be freed.
            If the requested value is too large, the deployment will error.
      id: GoogleCloudAiplatformV1AutomaticResources
      type: object
      description: >-
        A description of resources that to large degree are decided by Vertex
        AI, and require only a modest additional configuration. Each Model
        supporting these resources documents its specific guidelines.
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig:
      description: >-
        The objective configuration for model monitoring, including the
        information needed to detect anomalies for one particular model.
      id: GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig
      properties:
        trainingPredictionSkewDetectionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig
          description: The config for skew between training data and prediction data.
        trainingDataset:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset
          description: >-
            Training dataset for models. This field has to be set only if
            TrainingPredictionSkewDetectionConfig is specified.
        predictionDriftDetectionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig
          description: The config for drift of prediction data.
        explanationConfig:
          description: The config for integrating with Vertex Explainable AI.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig
      type: object
    GoogleCloudAiplatformV1PairwiseSummarizationQualitySpec:
      id: GoogleCloudAiplatformV1PairwiseSummarizationQualitySpec
      type: object
      properties:
        useReference:
          description: >-
            Optional. Whether to use instance.reference to compute pairwise
            summarization quality.
          type: boolean
        version:
          description: Optional. Which version to use for evaluation.
          type: integer
          format: int32
      description: Spec for pairwise summarization quality score metric.
    GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse:
      description: >-
        Response message for
        TensorboardService.BatchCreateTensorboardTimeSeries.
      properties:
        tensorboardTimeSeries:
          type: array
          description: The created TensorboardTimeSeries.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
      id: GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse
      type: object
    GoogleCloudAiplatformV1BatchMigrateResourcesRequest:
      properties:
        migrateResourceRequests:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequest'
          description: >-
            Required. The request messages specifying the resources to migrate.
            They must be in the same location as the destination. Up to 50
            resources can be migrated in one batch.
      id: GoogleCloudAiplatformV1BatchMigrateResourcesRequest
      type: object
      description: Request message for MigrationService.BatchMigrateResources.
    GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest:
      properties:
        requests:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest
          description: >-
            Required. The request message specifying the TensorboardTimeSeries
            to create. A maximum of 1000 TensorboardTimeSeries can be created in
            a batch.
          type: array
      description: Request message for TensorboardService.BatchCreateTensorboardTimeSeries.
      id: GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest
      type: object
    GoogleCloudAiplatformV1ImportDataResponse:
      properties: {}
      description: Response message for DatasetService.ImportData.
      type: object
      id: GoogleCloudAiplatformV1ImportDataResponse
    GoogleCloudAiplatformV1RayLogsSpec:
      type: object
      properties:
        disabled:
          description: >-
            Optional. Flag to disable the export of Ray OSS logs to Cloud
            Logging.
          type: boolean
      description: Configuration for the Ray OSS Logs.
      id: GoogleCloudAiplatformV1RayLogsSpec
    GoogleCloudAiplatformV1ToolParameterKVMatchResults:
      id: GoogleCloudAiplatformV1ToolParameterKVMatchResults
      properties:
        toolParameterKvMatchMetricValues:
          description: Output only. Tool parameter key value match metric values.
          readOnly: true
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1ToolParameterKVMatchMetricValue
          type: array
      type: object
      description: Results for tool parameter key value match metric.
    GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest:
      description: Request message for MetadataService.AddContextArtifactsAndExecutions.
      id: GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest
      properties:
        artifacts:
          items:
            type: string
          type: array
          description: >-
            The resource names of the Artifacts to attribute to the Context.
            Format:
            `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
        executions:
          items:
            type: string
          description: >-
            The resource names of the Executions to associate with the Context.
            Format:
            `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
          type: array
      type: object
    GoogleCloudAiplatformV1CreateFeatureOperationMetadata:
      type: object
      description: Details of operations that perform create Feature.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Feature.
      id: GoogleCloudAiplatformV1CreateFeatureOperationMetadata
    GoogleCloudAiplatformV1ListSavedQueriesResponse:
      id: GoogleCloudAiplatformV1ListSavedQueriesResponse
      description: Response message for DatasetService.ListSavedQueries.
      type: object
      properties:
        savedQueries:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SavedQuery'
          description: >-
            A list of SavedQueries that match the specified filter in the
            request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
    GoogleCloudAiplatformV1SmoothGradConfig:
      id: GoogleCloudAiplatformV1SmoothGradConfig
      type: object
      properties:
        noiseSigma:
          type: number
          format: float
          description: >-
            This is a single float value and will be used to add noise to all
            the features. Use this field when all features are normalized to
            have the same distribution: scale to range [0, 1], [-1, 1] or
            z-scoring, where features are normalized to have 0-mean and
            1-variance. Learn more about
            [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization).
            For best results the recommended value is about 10% - 20% of the
            standard deviation of the input feature. Refer to section 3.2 of the
            SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to
            0.1. If the distribution is different per feature, set
            feature_noise_sigma instead for each feature.
        featureNoiseSigma:
          description: >-
            This is similar to noise_sigma, but provides additional flexibility.
            A separate noise sigma can be provided for each feature, which is
            useful if their distributions are different. No noise is added to
            features that are not set. If this field is unset, noise_sigma will
            be used for all features.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureNoiseSigma'
        noisySampleCount:
          format: int32
          description: >-
            The number of gradient samples to use for approximation. The higher
            this number, the more accurate the gradient is, but the runtime
            complexity increases by this factor as well. Valid range of its
            value is [1, 50]. Defaults to 3.
          type: integer
      description: >-
        Config for SmoothGrad approximation of gradients. When enabled, the
        gradients are approximated by averaging the gradients from noisy samples
        in the vicinity of the inputs. Adding noise can help improve the
        computed gradients. Refer to this paper for more details:
        https://arxiv.org/pdf/1706.03825.pdf
    GoogleCloudAiplatformV1FindNeighborsResponseNeighbor:
      description: A neighbor of the query vector.
      properties:
        datapoint:
          description: >-
            The datapoint of the neighbor. Note that full datapoints are
            returned only when "return_full_datapoint" is set to true.
            Otherwise, only the "datapoint_id" and "crowding_tag" fields are
            populated.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint'
        distance:
          type: number
          description: The distance between the neighbor and the dense embedding query.
          format: double
        sparseDistance:
          description: The distance between the neighbor and the query sparse_embedding.
          format: double
          type: number
      type: object
      id: GoogleCloudAiplatformV1FindNeighborsResponseNeighbor
    GoogleCloudAiplatformV1UpdateSpecialistPoolOperationMetadata:
      id: GoogleCloudAiplatformV1UpdateSpecialistPoolOperationMetadata
      description: >-
        Runtime operation metadata for
        SpecialistPoolService.UpdateSpecialistPool.
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
        specialistPool:
          description: >-
            Output only. The name of the SpecialistPool to which the specialists
            are being added. Format:
            `projects/{project_id}/locations/{location_id}/specialistPools/{specialist_pool}`
          readOnly: true
          type: string
    GoogleCloudAiplatformV1StringArray:
      description: A list of string values.
      properties:
        values:
          description: A list of string values.
          items:
            type: string
          type: array
      type: object
      id: GoogleCloudAiplatformV1StringArray
    GoogleCloudAiplatformV1PairwiseMetricResult:
      id: GoogleCloudAiplatformV1PairwiseMetricResult
      description: Spec for pairwise metric result.
      properties:
        explanation:
          readOnly: true
          type: string
          description: Output only. Explanation for pairwise metric score.
        pairwiseChoice:
          readOnly: true
          description: Output only. Pairwise metric choice.
          enum:
            - PAIRWISE_CHOICE_UNSPECIFIED
            - BASELINE
            - CANDIDATE
            - TIE
          enumDescriptions:
            - Unspecified prediction choice.
            - Baseline prediction wins
            - Candidate prediction wins
            - Winner cannot be determined
          type: string
      type: object
    GoogleCloudAiplatformV1DeployIndexRequest:
      type: object
      properties:
        deployedIndex:
          description: Required. The DeployedIndex to be created within the IndexEndpoint.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndex'
      description: Request message for IndexEndpointService.DeployIndex.
      id: GoogleCloudAiplatformV1DeployIndexRequest
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition:
      description: >-
        A TrainingJob that trains and uploads an AutoML Video Action Recognition
        Model.
      id: >-
        GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition
      type: object
      properties:
        inputs:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs
          description: The input parameters of this TrainingJob.
    GoogleCloudAiplatformV1Explanation:
      description: >-
        Explanation of a prediction (provided in PredictResponse.predictions)
        produced by the Model on a given instance.
      type: object
      id: GoogleCloudAiplatformV1Explanation
      properties:
        attributions:
          readOnly: true
          description: >-
            Output only. Feature attributions grouped by predicted outputs. For
            Models that predict only one output, such as regression Models that
            predict only one score, there is only one attibution that explains
            the predicted output. For Models that predict multiple outputs, such
            as multiclass Models that predict multiple classes, each element
            explains one specific item. Attribution.output_index can be used to
            identify which output this attribution is explaining. By default, we
            provide Shapley values for the predicted class. However, you can
            configure the explanation request to generate Shapley values for any
            other classes too. For example, if a model predicts a probability of
            `0.4` for approving a loan application, the model's decision is to
            reject the application since `p(reject) = 0.6 > p(approve) = 0.4`,
            and the default Shapley values would be computed for rejection
            decision and not approval, even though the latter might be the
            positive class. If users set ExplanationParameters.top_k, the
            attributions are sorted by instance_output_value in descending
            order. If ExplanationParameters.output_indices is specified, the
            attributions are stored by Attribution.output_index in the same
            order as they appear in the output_indices.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Attribution'
        neighbors:
          type: array
          readOnly: true
          description: >-
            Output only. List of the nearest neighbors for example-based
            explanations. For models deployed with the examples explanations
            feature enabled, the attributions field is empty and instead the
            neighbors field is populated.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Neighbor'
    GoogleTypeMoney:
      description: Represents an amount of money with its currency type.
      type: object
      properties:
        currencyCode:
          type: string
          description: The three-letter currency code defined in ISO 4217.
        nanos:
          type: integer
          description: >-
            Number of nano (10^-9) units of the amount. The value must be
            between -999,999,999 and +999,999,999 inclusive. If `units` is
            positive, `nanos` must be positive or zero. If `units` is zero,
            `nanos` can be positive, zero, or negative. If `units` is negative,
            `nanos` must be negative or zero. For example $-1.75 is represented
            as `units`=-1 and `nanos`=-750,000,000.
          format: int32
        units:
          description: >-
            The whole units of the amount. For example if `currencyCode` is
            `"USD"`, then 1 unit is one US dollar.
          type: string
          format: int64
      id: GoogleTypeMoney
    GoogleCloudAiplatformV1WriteFeatureValuesPayload:
      description: Contains Feature values to be written for a specific entity.
      properties:
        entityId:
          description: Required. The ID of the entity.
          type: string
        featureValues:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValue'
          description: >-
            Required. Feature values to be written, mapping from Feature ID to
            value. Up to 100,000 `feature_values` entries may be written across
            all payloads. The feature generation time, aligned by days, must be
            no older than five years (1825 days) and no later than one year (366
            days) in the future.
          type: object
      id: GoogleCloudAiplatformV1WriteFeatureValuesPayload
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceVideoClassificationPredictionInstance:
      properties:
        timeSegmentStart:
          description: >-
            The beginning, inclusive, of the video's time segment on which to
            perform the prediction. Expressed as a number of seconds as measured
            from the start of the video, with "s" appended at the end. Fractions
            are allowed, up to a microsecond precision.
          type: string
        content:
          type: string
          description: >-
            The Google Cloud Storage location of the video on which to perform
            the prediction.
        timeSegmentEnd:
          description: >-
            The end, exclusive, of the video's time segment on which to perform
            the prediction. Expressed as a number of seconds as measured from
            the start of the video, with "s" appended at the end. Fractions are
            allowed, up to a microsecond precision, and "inf" or "Infinity" is
            allowed, which means the end of the video.
          type: string
        mimeType:
          type: string
          description: >-
            The MIME type of the content of the video. Only the following are
            supported: video/mp4 video/avi video/quicktime
      id: >-
        GoogleCloudAiplatformV1SchemaPredictInstanceVideoClassificationPredictionInstance
      description: Prediction input format for Video Classification.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecasting:
      properties:
        metadata:
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata
          description: The metadata information.
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: >-
            #/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecasting
      description: A TrainingJob that trains and uploads an AutoML Forecasting Model.
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi:
      type: object
      properties:
        title:
          description: Required. The title of the view rest API.
          type: string
        documentations:
          description: Required.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudAiplatformV1PublisherModelDocumentation
      id: GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi
      description: Rest API docs.
    GoogleCloudAiplatformV1SchemaPredictInstanceImageClassificationPredictionInstance:
      description: Prediction input format for Image Classification.
      type: object
      id: >-
        GoogleCloudAiplatformV1SchemaPredictInstanceImageClassificationPredictionInstance
      properties:
        mimeType:
          description: >-
            The MIME type of the content of the image. Only the images in below
            listed MIME types are supported. - image/jpeg - image/gif -
            image/png - image/webp - image/bmp - image/tiff -
            image/vnd.microsoft.icon
          type: string
        content:
          description: The image bytes or Cloud Storage URI to make the prediction on.
          type: string
    GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec:
      id: GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec
      properties:
        explanationType:
          type: string
          description: >-
            Explanation type. For AutoML Image Classification models, possible
            values are: * `image-integrated-gradients` * `image-xrai`
        explanationSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec'
          description: Explanation spec details.
      type: object
    GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies:
      id: >-
        GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies
      description: Historical Stats (and Anomalies) for a specific Feature.
      type: object
      properties:
        threshold:
          description: Threshold for anomaly detection.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
        featureDisplayName:
          description: Display Name of the Feature.
          type: string
        trainingStats:
          description: Stats calculated for the Training Dataset.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureStatsAnomaly'
        predictionStats:
          description: >-
            A list of historical stats generated by different time window's
            Prediction Dataset.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureStatsAnomaly'
          type: array
    GoogleCloudAiplatformV1ListExecutionsResponse:
      type: object
      description: Response message for MetadataService.ListExecutions.
      properties:
        executions:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
          type: array
          description: The Executions retrieved from the MetadataStore.
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as ListExecutionsRequest.page_token to
            retrieve the next page. If this field is not populated, there are no
            subsequent pages.
      id: GoogleCloudAiplatformV1ListExecutionsResponse
    GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain:
      type: object
      description: >-
        Domain details of the input feature value. Provides numeric information
        about the feature, such as its range (min, max). If the feature has been
        pre-processed, for example with z-scoring, then it provides information
        about how to recover the original feature. For example, if the input
        feature is an image and it has been pre-processed to obtain 0-mean and
        stddev = 1 values, then original_mean, and original_stddev refer to the
        mean and stddev of the original feature (e.g. image tensor) from which
        input feature (with mean = 0 and stddev = 1) was obtained.
      id: >-
        GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain
      properties:
        maxValue:
          description: The maximum permissible value for this feature.
          type: number
          format: float
        minValue:
          type: number
          format: float
          description: The minimum permissible value for this feature.
        originalStddev:
          type: number
          description: >-
            If this input feature has been normalized to a standard deviation of
            1.0, the original_stddev specifies the standard deviation of the
            domain prior to normalization.
          format: float
        originalMean:
          type: number
          description: >-
            If this input feature has been normalized to a mean value of 0, the
            original_mean specifies the mean value of the domain prior to
            normalization.
          format: float
    GoogleCloudAiplatformV1GroundednessResult:
      type: object
      properties:
        confidence:
          readOnly: true
          type: number
          format: float
          description: Output only. Confidence for groundedness score.
        score:
          format: float
          readOnly: true
          description: Output only. Groundedness score.
          type: number
        explanation:
          description: Output only. Explanation for groundedness score.
          readOnly: true
          type: string
      id: GoogleCloudAiplatformV1GroundednessResult
      description: Spec for groundedness result.
    GoogleCloudAiplatformV1SearchMigratableResourcesRequest:
      id: GoogleCloudAiplatformV1SearchMigratableResourcesRequest
      type: object
      properties:
        pageToken:
          type: string
          description: The standard page token.
        pageSize:
          type: integer
          description: The standard page size. The default and maximum value is 100.
          format: int32
        filter:
          description: >-
            A filter for your search. You can use the following types of
            filters: * Resource type filters. The following strings filter for a
            specific type of MigratableResource: * `ml_engine_model_version:*` *
            `automl_model:*` * `automl_dataset:*` * `data_labeling_dataset:*` *
            "Migrated or not" filters. The following strings filter for
            resources that either have or have not already been migrated: *
            `last_migrate_time:*` filters for migrated resources. * `NOT
            last_migrate_time:*` filters for not yet migrated resources.
          type: string
      description: Request message for MigrationService.SearchMigratableResources.
    GoogleCloudAiplatformV1PauseScheduleRequest:
      type: object
      properties: {}
      description: Request message for ScheduleService.PauseSchedule.
      id: GoogleCloudAiplatformV1PauseScheduleRequest
    GoogleCloudAiplatformV1ListContextsResponse:
      type: object
      description: Response message for MetadataService.ListContexts.
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as ListContextsRequest.page_token to
            retrieve the next page. If this field is not populated, there are no
            subsequent pages.
        contexts:
          description: The Contexts retrieved from the MetadataStore.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      id: GoogleCloudAiplatformV1ListContextsResponse
    GoogleCloudAiplatformV1QueryDeployedModelsResponse:
      type: object
      description: Response message for QueryDeployedModels method.
      properties:
        totalEndpointCount:
          format: int32
          description: >-
            The total number of Endpoints that have DeployedModels on this
            DeploymentResourcePool.
          type: integer
        deployedModelRefs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModelRef'
          description: >-
            References to the DeployedModels that share the specified
            deploymentResourcePool.
          type: array
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        deployedModels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
          description: DEPRECATED Use deployed_model_refs instead.
          deprecated: true
        totalDeployedModelCount:
          type: integer
          format: int32
          description: The total number of DeployedModels on this DeploymentResourcePool.
      id: GoogleCloudAiplatformV1QueryDeployedModelsResponse
    GoogleCloudAiplatformV1FulfillmentInstance:
      description: Spec for fulfillment instance.
      type: object
      properties:
        instruction:
          description: Required. Inference instruction prompt to compare prediction with.
          type: string
        prediction:
          description: Required. Output of the evaluated model.
          type: string
      id: GoogleCloudAiplatformV1FulfillmentInstance
    GoogleCloudAiplatformV1ExportFeatureValuesResponse:
      description: Response message for FeaturestoreService.ExportFeatureValues.
      id: GoogleCloudAiplatformV1ExportFeatureValuesResponse
      type: object
      properties: {}
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics:
      id: >-
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics
      properties:
        rSquared:
          description: >-
            Coefficient of determination as Pearson correlation coefficient.
            Undefined when ground truth or predictions are constant or near
            constant.
          type: number
          format: float
        rootMeanSquaredLogError:
          format: float
          type: number
          description: >-
            Root mean squared log error. Undefined when there are negative
            ground truth values or predictions.
        rootMeanSquaredError:
          type: number
          description: Root Mean Squared Error (RMSE).
          format: float
        meanAbsolutePercentageError:
          description: >-
            Mean absolute percentage error. Infinity when there are zeros in the
            ground truth.
          format: float
          type: number
        meanAbsoluteError:
          format: float
          type: number
          description: Mean Absolute Error (MAE).
      description: Metrics for regression evaluation results.
      type: object
    GoogleCloudAiplatformV1ListNasJobsResponse:
      id: GoogleCloudAiplatformV1ListNasJobsResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            A token to retrieve the next page of results. Pass to
            ListNasJobsRequest.page_token to obtain that page.
        nasJobs:
          description: >-
            List of NasJobs in the requested page. NasJob.nas_job_output of the
            jobs will not be returned.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJob'
      description: Response message for JobService.ListNasJobs
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsImageObjectDetectionPredictionParams:
      id: >-
        GoogleCloudAiplatformV1SchemaPredictParamsImageObjectDetectionPredictionParams
      type: object
      properties:
        maxPredictions:
          description: >-
            The Model only returns up to that many top, by confidence score,
            predictions per instance. Note that number of returned predictions
            is also limited by metadata's predictionsLimit. Default value is 10.
          type: integer
          format: int32
        confidenceThreshold:
          description: >-
            The Model only returns predictions with at least this confidence
            score. Default value is 0.0
          format: float
          type: number
      description: Prediction model parameters for Image Object Detection.
    GoogleCloudAiplatformV1UploadModelOperationMetadata:
      id: GoogleCloudAiplatformV1UploadModelOperationMetadata
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The common part of the operation metadata.
      description: Details of ModelService.UploadModel operation.
  parameters:
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
  x-stackQL-resources:
    models:
      id: google.aiplatform.models
      name: models
      title: Models
      methods:
        count_tokens:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:countTokens/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_generate_content:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:streamGenerateContent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_content:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:generateContent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        compute_tokens:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:computeTokens/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        predict:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:predict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        server_streaming_predict:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:serverStreamingPredict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        raw_predict:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:rawPredict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_raw_predict:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:streamRawPredict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.models
        merge_version_aliases:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:mergeVersionAliases/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models:upload/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        copy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models:copy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/models/methods/get'
          - $ref: '#/components/x-stackQL-resources/models/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/models/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/models/methods/delete'
    locations:
      id: google.aiplatform.locations
      name: locations
      title: Locations
      methods:
        evaluate_instances:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:evaluateInstances/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    datasets:
      id: google.aiplatform.datasets
      name: datasets
      title: Datasets
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1datasets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1datasets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.datasets
        get:
          operation:
            $ref: '#/paths/~1v1~1datasets~1{datasetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1datasets~1{datasetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1datasets~1{datasetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_data_items:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:searchDataItems/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/get'
          - $ref: '#/components/x-stackQL-resources/datasets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/delete'
    dataset_versions:
      id: google.aiplatform.dataset_versions
      name: dataset_versions
      title: Dataset_versions
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1datasets~1{datasetsId}~1datasetVersions~1{datasetVersionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1datasets~1{datasetsId}~1datasetVersions~1{datasetVersionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1datasets~1{datasetsId}~1datasetVersions~1{datasetVersionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: >-
              #/paths/~1v1~1datasets~1{datasetsId}~1datasetVersions~1{datasetVersionsId}:restore/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1datasets~1{datasetsId}~1datasetVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.datasetVersions
        create:
          operation:
            $ref: '#/paths/~1v1~1datasets~1{datasetsId}~1datasetVersions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dataset_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/dataset_versions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dataset_versions/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/dataset_versions/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dataset_versions/methods/delete'
    operations:
      id: google.aiplatform.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        wait:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}~1operations~1{operationsId}:wait/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    annotation_specs:
      id: google.aiplatform.annotation_specs
      name: annotation_specs
      title: Annotation_specs
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1annotationSpecs~1{annotationSpecsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/annotation_specs/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    annotations:
      id: google.aiplatform.annotations
      name: annotations
      title: Annotations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1dataItems~1{dataItemsId}~1annotations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.annotations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/annotations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    data_items:
      id: google.aiplatform.data_items
      name: data_items
      title: Data_items
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1dataItems/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataItems
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_items/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    saved_queries:
      id: google.aiplatform.saved_queries
      name: saved_queries
      title: Saved_queries
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1savedQueries~1{savedQueriesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1savedQueries/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.savedQueries
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/saved_queries/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/saved_queries/methods/delete'
    endpoints:
      id: google.aiplatform.endpoints
      name: endpoints
      title: Endpoints
      methods:
        generate_content:
          operation:
            $ref: '#/paths/~1v1~1endpoints~1{endpointsId}:generateContent/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        predict:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:predict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.endpoints
        count_tokens:
          operation:
            $ref: '#/paths/~1v1~1endpoints~1{endpointsId}:countTokens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        raw_predict:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:rawPredict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        server_streaming_predict:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:serverStreamingPredict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy_model:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:undeployModel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy_model:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:deployModel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        explain:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:explain/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mutate_deployed_model:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:mutateDeployedModel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_raw_predict:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:streamRawPredict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        direct_predict:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:directPredict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        compute_tokens:
          operation:
            $ref: '#/paths/~1v1~1endpoints~1{endpointsId}:computeTokens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stream_generate_content:
          operation:
            $ref: '#/paths/~1v1~1endpoints~1{endpointsId}:streamGenerateContent/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        direct_raw_predict:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:directRawPredict/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/delete'
    schedules:
      id: google.aiplatform.schedules
      name: schedules
      title: Schedules
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pause:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}:pause/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schedules
        resume:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}:resume/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/schedules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/delete'
    specialist_pools:
      id: google.aiplatform.specialist_pools
      name: specialist_pools
      title: Specialist_pools
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.specialistPools
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/specialist_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/specialist_pools/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/specialist_pools/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/specialist_pools/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/specialist_pools/methods/delete'
    notebook_execution_jobs:
      id: google.aiplatform.notebook_execution_jobs
      name: notebook_execution_jobs
      title: Notebook_execution_jobs
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookExecutionJobs~1{notebookExecutionJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookExecutionJobs~1{notebookExecutionJobsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookExecutionJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookExecutionJobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.notebookExecutionJobs
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/notebook_execution_jobs/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/notebook_execution_jobs/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/notebook_execution_jobs/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/notebook_execution_jobs/methods/delete
    feature_groups:
      id: google.aiplatform.feature_groups
      name: feature_groups
      title: Feature_groups
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureGroups/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureGroups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.featureGroups
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureGroups~1{featureGroupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureGroups~1{featureGroupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureGroups~1{featureGroupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/feature_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/feature_groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/feature_groups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/feature_groups/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/feature_groups/methods/delete'
    operations_wait:
      id: google.aiplatform.operations_wait
      name: operations_wait
      title: Operations_wait
      methods:
        list_wait:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}~1operations~1{operationsId}:wait/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations_wait/methods/list_wait'
        insert: []
        update: []
        replace: []
        delete: []
    features:
      id: google.aiplatform.features
      name: features
      title: Features
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features~1{featuresId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features~1{featuresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features~1{featuresId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.features
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features:batchCreate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/features/methods/get'
          - $ref: '#/components/x-stackQL-resources/features/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/features/methods/batch_create'
          - $ref: '#/components/x-stackQL-resources/features/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/features/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/features/methods/delete'
    model_deployment_monitoring_jobs:
      id: google.aiplatform.model_deployment_monitoring_jobs
      name: model_deployment_monitoring_jobs
      title: Model_deployment_monitoring_jobs
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pause:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}:pause/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.modelDeploymentMonitoringJobs
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resume:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}:resume/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_model_deployment_monitoring_stats_anomalies:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}:searchModelDeploymentMonitoringStatsAnomalies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/model_deployment_monitoring_jobs/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/model_deployment_monitoring_jobs/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/model_deployment_monitoring_jobs/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/model_deployment_monitoring_jobs/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/model_deployment_monitoring_jobs/methods/delete
    feature_views_iam_policies:
      id: google.aiplatform.feature_views_iam_policies
      name: feature_views_iam_policies
      title: Feature_views_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/feature_views_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/feature_views_iam_policies/methods/set_iam_policy
        delete: []
    feature_views:
      id: google.aiplatform.feature_views
      name: feature_views
      title: Feature_views
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_nearest_entities:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}:searchNearestEntities/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.featureViews
        sync:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}:sync/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/feature_views/methods/get'
          - $ref: '#/components/x-stackQL-resources/feature_views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/feature_views/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/feature_views/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/feature_views/methods/delete'
    feature_views_feature_values:
      id: google.aiplatform.feature_views_feature_values
      name: feature_views_feature_values
      title: Feature_views_feature_values
      methods:
        fetch_feature_values:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}:fetchFeatureValues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/feature_views_feature_values/methods/fetch_feature_values
        insert: []
        update: []
        replace: []
        delete: []
    feature_view_syncs:
      id: google.aiplatform.feature_view_syncs
      name: feature_view_syncs
      title: Feature_view_syncs
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}~1featureViewSyncs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.featureViewSyncs
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}~1featureViews~1{featureViewsId}~1featureViewSyncs~1{featureViewSyncsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/feature_view_syncs/methods/get'
          - $ref: '#/components/x-stackQL-resources/feature_view_syncs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    feature_online_stores:
      id: google.aiplatform.feature_online_stores
      name: feature_online_stores
      title: Feature_online_stores
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.featureOnlineStores
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/feature_online_stores/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/feature_online_stores/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/feature_online_stores/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/feature_online_stores/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/feature_online_stores/methods/delete
    feature_online_stores_iam_policies:
      id: google.aiplatform.feature_online_stores_iam_policies
      name: feature_online_stores_iam_policies
      title: Feature_online_stores_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featureOnlineStores~1{featureOnlineStoresId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/feature_online_stores_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/feature_online_stores_iam_policies/methods/set_iam_policy
        delete: []
    batch_prediction_jobs:
      id: google.aiplatform.batch_prediction_jobs
      name: batch_prediction_jobs
      title: Batch_prediction_jobs
      methods:
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs~1{batchPredictionJobsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs~1{batchPredictionJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs~1{batchPredictionJobsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.batchPredictionJobs
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/batch_prediction_jobs/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/batch_prediction_jobs/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/batch_prediction_jobs/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/batch_prediction_jobs/methods/delete
    entity_types:
      id: google.aiplatform.entity_types
      name: entity_types
      title: Entity_types
      methods:
        import_feature_values:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:importFeatureValues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        streaming_read_feature_values:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:streamingReadFeatureValues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.entityTypes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_feature_values:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:exportFeatureValues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_feature_values:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:readFeatureValues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        write_feature_values:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:writeFeatureValues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entity_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/entity_types/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/entity_types/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/entity_types/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/entity_types/methods/delete'
    entity_types_iam_policies:
      id: google.aiplatform.entity_types_iam_policies
      name: entity_types_iam_policies
      title: Entity_types_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/entity_types_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/entity_types_iam_policies/methods/set_iam_policy
        delete: []
    entity_types_feature_values:
      id: google.aiplatform.entity_types_feature_values
      name: entity_types_feature_values
      title: Entity_types_feature_values
      methods:
        delete_feature_values:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:deleteFeatureValues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/entity_types_feature_values/methods/delete_feature_values
    featurestores:
      id: google.aiplatform.featurestores
      name: featurestores
      title: Featurestores
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_read_feature_values:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}:batchReadFeatureValues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.featurestores
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_features:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores:searchFeatures/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/featurestores/methods/get'
          - $ref: '#/components/x-stackQL-resources/featurestores/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/featurestores/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/featurestores/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/featurestores/methods/delete'
    featurestores_iam_policies:
      id: google.aiplatform.featurestores_iam_policies
      name: featurestores_iam_policies
      title: Featurestores_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/featurestores_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/featurestores_iam_policies/methods/set_iam_policy
        delete: []
    trials_trial_measurement:
      id: google.aiplatform.trials_trial_measurement
      name: trials_trial_measurement
      title: Trials_trial_measurement
      methods:
        add_trial_measurement:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}:addTrialMeasurement/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/trials_trial_measurement/methods/add_trial_measurement
        update: []
        replace: []
        delete: []
    trials:
      id: google.aiplatform.trials
      name: trials
      title: Trials
      methods:
        complete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}:complete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        suggest:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials:suggest/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.trials
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}:stop/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_trial_early_stopping_state:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}:checkTrialEarlyStoppingState/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/trials/methods/get'
          - $ref: '#/components/x-stackQL-resources/trials/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/trials/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/trials/methods/delete'
    trials_optimal_trials:
      id: google.aiplatform.trials_optimal_trials
      name: trials_optimal_trials
      title: Trials_optimal_trials
      methods:
        list_optimal_trials:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials:listOptimalTrials/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/trials_optimal_trials/methods/list_optimal_trials
        insert: []
        update: []
        replace: []
        delete: []
    studies:
      id: google.aiplatform.studies
      name: studies
      title: Studies
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.studies
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lookup:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies:lookup/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/studies/methods/get'
          - $ref: '#/components/x-stackQL-resources/studies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/studies/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/studies/methods/delete'
    tensorboards:
      id: google.aiplatform.tensorboards
      name: tensorboards
      title: Tensorboards
      methods:
        read_size:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}:readSize/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tensorboards
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_usage:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}:readUsage/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_read:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}:batchRead/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tensorboards/methods/get'
          - $ref: '#/components/x-stackQL-resources/tensorboards/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tensorboards/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/tensorboards/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tensorboards/methods/delete'
    time_series:
      id: google.aiplatform.time_series
      name: time_series
      title: Time_series
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tensorboardTimeSeries
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_blob_data:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}:readBlobData/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}:read/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_tensorboard_time_series:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}:exportTensorboardTimeSeries/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/time_series/methods/get'
          - $ref: '#/components/x-stackQL-resources/time_series/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/time_series/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/time_series/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/time_series/methods/delete'
    runs:
      id: google.aiplatform.runs
      name: runs
      title: Runs
      methods:
        write:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}:write/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs:batchCreate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tensorboardRuns
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/runs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/runs/methods/batch_create'
          - $ref: '#/components/x-stackQL-resources/runs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/runs/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/runs/methods/delete'
    experiments:
      id: google.aiplatform.experiments
      name: experiments
      title: Experiments
      methods:
        write:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}:write/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}:batchCreate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tensorboardExperiments
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/get'
          - $ref: '#/components/x-stackQL-resources/experiments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/batch_create'
          - $ref: '#/components/x-stackQL-resources/experiments/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/delete'
    tuning_jobs:
      id: google.aiplatform.tuning_jobs
      name: tuning_jobs
      title: Tuning_jobs
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tuningJobs~1{tuningJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tuningJobs~1{tuningJobsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tuningJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tuningJobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tuningJobs
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tuning_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/tuning_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tuning_jobs/methods/create'
        update: []
        replace: []
        delete: []
    notebook_runtimes:
      id: google.aiplatform.notebook_runtimes
      name: notebook_runtimes
      title: Notebook_runtimes
      methods:
        assign:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimes:assign/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimes~1{notebookRuntimesId}:start/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimes~1{notebookRuntimesId}:upgrade/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.notebookRuntimes
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimes~1{notebookRuntimesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimes~1{notebookRuntimesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notebook_runtimes/methods/get'
          - $ref: '#/components/x-stackQL-resources/notebook_runtimes/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notebook_runtimes/methods/delete'
    persistent_resources:
      id: google.aiplatform.persistent_resources
      name: persistent_resources
      title: Persistent_resources
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1persistentResources~1{persistentResourcesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1persistentResources~1{persistentResourcesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1persistentResources~1{persistentResourcesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reboot:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1persistentResources~1{persistentResourcesId}:reboot/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1persistentResources/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1persistentResources/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.persistentResources
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/persistent_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/persistent_resources/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/persistent_resources/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/persistent_resources/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/persistent_resources/methods/delete
    migratable_resources:
      id: google.aiplatform.migratable_resources
      name: migratable_resources
      title: Migratable_resources
      methods:
        batch_migrate:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migratableResources:batchMigrate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migratableResources:search/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    notebook_runtime_templates_iam_policies:
      id: google.aiplatform.notebook_runtime_templates_iam_policies
      name: notebook_runtime_templates_iam_policies
      title: Notebook_runtime_templates_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimeTemplates~1{notebookRuntimeTemplatesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimeTemplates~1{notebookRuntimeTemplatesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimeTemplates~1{notebookRuntimeTemplatesId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/notebook_runtime_templates_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/notebook_runtime_templates_iam_policies/methods/set_iam_policy
        delete: []
    notebook_runtime_templates:
      id: google.aiplatform.notebook_runtime_templates
      name: notebook_runtime_templates
      title: Notebook_runtime_templates
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimeTemplates/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.notebookRuntimeTemplates
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimeTemplates/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimeTemplates~1{notebookRuntimeTemplatesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimeTemplates~1{notebookRuntimeTemplatesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1notebookRuntimeTemplates~1{notebookRuntimeTemplatesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/notebook_runtime_templates/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/notebook_runtime_templates/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/notebook_runtime_templates/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/notebook_runtime_templates/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/notebook_runtime_templates/methods/delete
    index_endpoints:
      id: google.aiplatform.index_endpoints
      name: index_endpoints
      title: Index_endpoints
      methods:
        undeploy_index:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}:undeployIndex/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy_index:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}:deployIndex/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_index_datapoints:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}:readIndexDatapoints/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mutate_deployed_index:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}:mutateDeployedIndex/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        find_neighbors:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}:findNeighbors/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.indexEndpoints
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/index_endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/index_endpoints/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/index_endpoints/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/index_endpoints/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/index_endpoints/methods/delete'
    data_labeling_jobs:
      id: google.aiplatform.data_labeling_jobs
      name: data_labeling_jobs
      title: Data_labeling_jobs
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs~1{dataLabelingJobsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs~1{dataLabelingJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs~1{dataLabelingJobsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataLabelingJobs
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_labeling_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_labeling_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_labeling_jobs/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_labeling_jobs/methods/delete'
    custom_jobs:
      id: google.aiplatform.custom_jobs
      name: custom_jobs
      title: Custom_jobs
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.customJobs
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs~1{customJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs~1{customJobsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs~1{customJobsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/custom_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/custom_jobs/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/custom_jobs/methods/delete'
    training_pipelines:
      id: google.aiplatform.training_pipelines
      name: training_pipelines
      title: Training_pipelines
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.trainingPipelines
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines~1{trainingPipelinesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines~1{trainingPipelinesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines~1{trainingPipelinesId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/training_pipelines/methods/get'
          - $ref: '#/components/x-stackQL-resources/training_pipelines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/training_pipelines/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/training_pipelines/methods/delete'
    deployment_resource_pools:
      id: google.aiplatform.deployment_resource_pools
      name: deployment_resource_pools
      title: Deployment_resource_pools
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deploymentResourcePools/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deploymentResourcePools
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deploymentResourcePools/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_deployed_models:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deploymentResourcePools~1{deploymentResourcePoolsId}:queryDeployedModels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deploymentResourcePools~1{deploymentResourcePoolsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deploymentResourcePools~1{deploymentResourcePoolsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deploymentResourcePools~1{deploymentResourcePoolsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/deployment_resource_pools/methods/query_deployed_models
          - $ref: >-
              #/components/x-stackQL-resources/deployment_resource_pools/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/deployment_resource_pools/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/deployment_resource_pools/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/deployment_resource_pools/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/deployment_resource_pools/methods/delete
    indexes:
      id: google.aiplatform.indexes
      name: indexes
      title: Indexes
      methods:
        upsert_datapoints:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes~1{indexesId}:upsertDatapoints/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes~1{indexesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes~1{indexesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes~1{indexesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.indexes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/indexes/methods/get'
          - $ref: '#/components/x-stackQL-resources/indexes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/indexes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/indexes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/indexes/methods/delete'
    indexes_datapoints:
      id: google.aiplatform.indexes_datapoints
      name: indexes_datapoints
      title: Indexes_datapoints
      methods:
        remove_datapoints:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes~1{indexesId}:removeDatapoints/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/indexes_datapoints/methods/remove_datapoints
    metadata_stores:
      id: google.aiplatform.metadata_stores
      name: metadata_stores
      title: Metadata_stores
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.metadataStores
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metadata_stores/methods/get'
          - $ref: '#/components/x-stackQL-resources/metadata_stores/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/metadata_stores/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/metadata_stores/methods/delete'
    artifacts:
      id: google.aiplatform.artifacts
      name: artifacts
      title: Artifacts
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts~1{artifactsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts~1{artifactsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts~1{artifactsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.artifacts
        query_artifact_lineage_subgraph:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts~1{artifactsId}:queryArtifactLineageSubgraph/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/artifacts/methods/query_artifact_lineage_subgraph
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/delete'
    metadata_schemas:
      id: google.aiplatform.metadata_schemas
      name: metadata_schemas
      title: Metadata_schemas
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1metadataSchemas/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1metadataSchemas/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.metadataSchemas
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1metadataSchemas~1{metadataSchemasId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/get'
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/create'
        update: []
        replace: []
        delete: []
    contexts:
      id: google.aiplatform.contexts
      name: contexts
      title: Contexts
      methods:
        query_context_lineage_subgraph:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}:queryContextLineageSubgraph/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.contexts
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/contexts/methods/query_context_lineage_subgraph
          - $ref: '#/components/x-stackQL-resources/contexts/methods/get'
          - $ref: '#/components/x-stackQL-resources/contexts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/contexts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/contexts/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contexts/methods/delete'
    contexts_context_artifacts_and_executions:
      id: google.aiplatform.contexts_context_artifacts_and_executions
      name: contexts_context_artifacts_and_executions
      title: Contexts_context_artifacts_and_executions
      methods:
        add_context_artifacts_and_executions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}:addContextArtifactsAndExecutions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/contexts_context_artifacts_and_executions/methods/add_context_artifacts_and_executions
        update: []
        replace: []
        delete: []
    contexts_context_children:
      id: google.aiplatform.contexts_context_children
      name: contexts_context_children
      title: Contexts_context_children
      methods:
        remove_context_children:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}:removeContextChildren/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_context_children:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}:addContextChildren/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/contexts_context_children/methods/add_context_children
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/contexts_context_children/methods/remove_context_children
    executions:
      id: google.aiplatform.executions
      name: executions
      title: Executions
      methods:
        query_execution_inputs_and_outputs:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions~1{executionsId}:queryExecutionInputsAndOutputs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.executions
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions~1{executionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions~1{executionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions~1{executionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/executions/methods/query_execution_inputs_and_outputs
          - $ref: '#/components/x-stackQL-resources/executions/methods/get'
          - $ref: '#/components/x-stackQL-resources/executions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/executions/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/executions/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/executions/methods/delete'
    executions_execution_events:
      id: google.aiplatform.executions_execution_events
      name: executions_execution_events
      title: Executions_execution_events
      methods:
        add_execution_events:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions~1{executionsId}:addExecutionEvents/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/executions_execution_events/methods/add_execution_events
        update: []
        replace: []
        delete: []
    pipeline_jobs:
      id: google.aiplatform.pipeline_jobs
      name: pipeline_jobs
      title: Pipeline_jobs
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs~1{pipelineJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs~1{pipelineJobsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs~1{pipelineJobsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs:batchCancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.pipelineJobs
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs:batchDelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/delete'
          - $ref: >-
              #/components/x-stackQL-resources/pipeline_jobs/methods/batch_delete
    nas_jobs:
      id: google.aiplatform.nas_jobs
      name: nas_jobs
      title: Nas_jobs
      methods:
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nasJobs
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nas_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/nas_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/nas_jobs/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nas_jobs/methods/delete'
    nas_trial_details:
      id: google.aiplatform.nas_trial_details
      name: nas_trial_details
      title: Nas_trial_details
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}~1nasTrialDetails/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nasTrialDetails
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}~1nasTrialDetails~1{nasTrialDetailsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nas_trial_details/methods/get'
          - $ref: '#/components/x-stackQL-resources/nas_trial_details/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    models_iam_policies:
      id: google.aiplatform.models_iam_policies
      name: models_iam_policies
      title: Models_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/models_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/models_iam_policies/methods/set_iam_policy
        delete: []
    models_versions:
      id: google.aiplatform.models_versions
      name: models_versions
      title: Models_versions
      methods:
        list_versions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:listVersions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.models
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/models_versions/methods/list_versions
        insert: []
        update: []
        replace: []
        delete: []
    models_explanation_dataset:
      id: google.aiplatform.models_explanation_dataset
      name: models_explanation_dataset
      title: Models_explanation_dataset
      methods:
        update_explanation_dataset:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:updateExplanationDataset/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/models_explanation_dataset/methods/update_explanation_dataset
        replace: []
        delete: []
    models_version:
      id: google.aiplatform.models_version
      name: models_version
      title: Models_version
      methods:
        delete_version:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:deleteVersion/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/models_version/methods/delete_version
    slices:
      id: google.aiplatform.slices
      name: slices
      title: Slices
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations~1{evaluationsId}~1slices/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.modelEvaluationSlices
        batch_import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations~1{evaluationsId}~1slices~1{slicesId}:batchImport/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations~1{evaluationsId}~1slices~1{slicesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/slices/methods/get'
          - $ref: '#/components/x-stackQL-resources/slices/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    evaluations:
      id: google.aiplatform.evaluations
      name: evaluations
      title: Evaluations
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations~1{evaluationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.modelEvaluations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/get'
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    hyperparameter_tuning_jobs:
      id: google.aiplatform.hyperparameter_tuning_jobs
      name: hyperparameter_tuning_jobs
      title: Hyperparameter_tuning_jobs
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.hyperparameterTuningJobs
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/hyperparameter_tuning_jobs/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/hyperparameter_tuning_jobs/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/hyperparameter_tuning_jobs/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/hyperparameter_tuning_jobs/methods/delete
paths:
  /v1/publishers/{publishersId}/models/{modelsId}:countTokens:
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
    post:
      description: Perform a token counting.
      operationId: aiplatform.publishers.models.countTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CountTokensRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1CountTokensResponse
      parameters:
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/publishers/{publishersId}/models/{modelsId}:streamGenerateContent:
    parameters: *ref_1
    post:
      description: Generate content with multimodal inputs with streaming support.
      operationId: aiplatform.publishers.models.streamGenerateContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1GenerateContentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1GenerateContentResponse
      parameters:
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/publishers/{publishersId}/models/{modelsId}:
    parameters: *ref_1
    get:
      description: Gets a Model Garden publisher model.
      operationId: aiplatform.publishers.models.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModel'
      parameters:
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: huggingFaceToken
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: isHuggingFaceModel
          schema:
            type: boolean
  /v1/publishers/{publishersId}/models/{modelsId}:generateContent:
    parameters: *ref_1
    post:
      description: Generate content with multimodal inputs.
      operationId: aiplatform.publishers.models.generateContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1GenerateContentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1GenerateContentResponse
      parameters:
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/publishers/{publishersId}/models/{modelsId}:computeTokens:
    parameters: *ref_1
    post:
      description: Return a list of tokens based on the input text.
      operationId: aiplatform.publishers.models.computeTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ComputeTokensRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ComputeTokensResponse
      parameters:
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:evaluateInstances:
    parameters: *ref_1
    post:
      description: Evaluates instances based on a given metric.
      operationId: aiplatform.projects.locations.evaluateInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1EvaluateInstancesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1EvaluateInstancesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: aiplatform.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: aiplatform.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets:
    parameters: *ref_1
    post:
      description: Creates a Dataset.
      operationId: aiplatform.projects.locations.datasets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists Datasets in a Location.
      operationId: aiplatform.projects.locations.datasets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListDatasetsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:
    parameters: *ref_1
    get:
      description: Gets a Dataset.
      operationId: aiplatform.projects.locations.datasets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
    patch:
      description: Updates a Dataset.
      operationId: aiplatform.projects.locations.datasets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a Dataset.
      operationId: aiplatform.projects.locations.datasets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:import:
    parameters: *ref_1
    post:
      description: Imports data into a Dataset.
      operationId: aiplatform.projects.locations.datasets.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ImportDataRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:export:
    parameters: *ref_1
    post:
      description: Exports data from a Dataset.
      operationId: aiplatform.projects.locations.datasets.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportDataRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:searchDataItems:
    parameters: *ref_1
    get:
      description: Searches DataItems in a Dataset.
      operationId: aiplatform.projects.locations.datasets.searchDataItems
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1SearchDataItemsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: orderByAnnotation.orderBy
          schema:
            type: string
        - in: query
          name: dataItemFilter
          schema:
            type: string
        - in: query
          name: annotationsLimit
          schema:
            type: integer
            format: int32
        - in: query
          name: annotationFilters
          schema:
            type: string
        - in: query
          name: orderByDataItem
          schema:
            type: string
        - in: query
          name: savedQuery
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: annotationsFilter
          schema:
            type: string
        - in: query
          name: dataLabelingJob
          schema:
            type: string
        - in: query
          name: orderByAnnotation.savedQuery
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/datasetVersions/{datasetVersionsId}:
    parameters: *ref_1
    delete:
      description: Deletes a Dataset version.
      operationId: aiplatform.projects.locations.datasets.datasetVersions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetVersionsId
          required: true
          schema:
            type: string
    get:
      description: Gets a Dataset version.
      operationId: aiplatform.projects.locations.datasets.datasetVersions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1DatasetVersion'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetVersionsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
    patch:
      description: Updates a DatasetVersion.
      operationId: aiplatform.projects.locations.datasets.datasetVersions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DatasetVersion'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1DatasetVersion'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetVersionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/datasetVersions/{datasetVersionsId}:restore:
    parameters: *ref_1
    get:
      description: Restores a dataset version.
      operationId: aiplatform.projects.locations.datasets.datasetVersions.restore
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetVersionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/datasetVersions:
    parameters: *ref_1
    get:
      description: Lists DatasetVersions in a Dataset.
      operationId: aiplatform.projects.locations.datasets.datasetVersions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListDatasetVersionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Create a version from a Dataset.
      operationId: aiplatform.projects.locations.datasets.datasetVersions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DatasetVersion'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}:
    parameters: *ref_1
    get:
      description: Gets an AnnotationSpec.
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1AnnotationSpec'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations:
    parameters: *ref_1
    get:
      description: >-
        Lists Annotations belongs to a dataitem This RPC is only available in
        InternalDatasetService. It is only used for exporting conversation data
        to CCAI Insights.
      operationId: aiplatform.projects.locations.datasets.dataItems.annotations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListAnnotationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations/{annotationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.datasets.dataItems.annotations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        aiplatform.projects.locations.datasets.dataItems.annotations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations/{annotationsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: >-
        aiplatform.projects.locations.datasets.dataItems.annotations.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations/{annotationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.datasets.dataItems.annotations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations/{annotationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: >-
        aiplatform.projects.locations.datasets.dataItems.annotations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.datasets.dataItems.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.datasets.dataItems.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.datasets.dataItems.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.datasets.dataItems.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.datasets.dataItems.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems:
    parameters: *ref_1
    get:
      description: Lists DataItems in a Dataset.
      operationId: aiplatform.projects.locations.datasets.dataItems.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListDataItemsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.datasets.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.datasets.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.datasets.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.datasets.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.datasets.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries/{savedQueriesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.datasets.savedQueries.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.datasets.savedQueries.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries/{savedQueriesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.datasets.savedQueries.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries/{savedQueriesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.datasets.savedQueries.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries/{savedQueriesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.datasets.savedQueries.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries/{savedQueriesId}:
    parameters: *ref_1
    delete:
      description: Deletes a SavedQuery.
      operationId: aiplatform.projects.locations.datasets.savedQueries.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries:
    parameters: *ref_1
    get:
      description: Lists SavedQueries in a Dataset.
      operationId: aiplatform.projects.locations.datasets.savedQueries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListSavedQueriesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:streamGenerateContent:
    parameters: *ref_1
    post:
      description: Generate content with multimodal inputs with streaming support.
      operationId: aiplatform.projects.locations.publishers.models.streamGenerateContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1GenerateContentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1GenerateContentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:predict:
    parameters: *ref_1
    post:
      description: Perform an online prediction.
      operationId: aiplatform.projects.locations.publishers.models.predict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:generateContent:
    parameters: *ref_1
    post:
      description: Generate content with multimodal inputs.
      operationId: aiplatform.projects.locations.publishers.models.generateContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1GenerateContentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1GenerateContentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:computeTokens:
    parameters: *ref_1
    post:
      description: Return a list of tokens based on the input text.
      operationId: aiplatform.projects.locations.publishers.models.computeTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ComputeTokensRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ComputeTokensResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:countTokens:
    parameters: *ref_1
    post:
      description: Perform a token counting.
      operationId: aiplatform.projects.locations.publishers.models.countTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CountTokensRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1CountTokensResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:serverStreamingPredict:
    parameters: *ref_1
    post:
      description: >-
        Perform a server-side streaming online prediction request for Vertex LLM
        streaming.
      operationId: aiplatform.projects.locations.publishers.models.serverStreamingPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1StreamingPredictRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1StreamingPredictResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:rawPredict:
    parameters: *ref_1
    post:
      description: >-
        Perform an online prediction with an arbitrary HTTP payload. The
        response includes the following HTTP headers: *
        `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this
        prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's
        DeployedModel that served this prediction.
      operationId: aiplatform.projects.locations.publishers.models.rawPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1RawPredictRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:streamRawPredict:
    parameters: *ref_1
    post:
      description: Perform a streaming online prediction with an arbitrary HTTP payload.
      operationId: aiplatform.projects.locations.publishers.models.streamRawPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1StreamRawPredictRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.endpoints.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.endpoints.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.endpoints.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.endpoints.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.endpoints.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:generateContent:
    parameters: *ref_1
    post:
      description: Generate content with multimodal inputs.
      operationId: aiplatform.projects.locations.endpoints.generateContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1GenerateContentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1GenerateContentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:predict:
    parameters: *ref_1
    post:
      description: Perform an online prediction.
      operationId: aiplatform.projects.locations.endpoints.predict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints:
    parameters: *ref_1
    post:
      description: Creates an Endpoint.
      operationId: aiplatform.projects.locations.endpoints.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Endpoint'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: endpointId
          schema:
            type: string
    get:
      description: Lists Endpoints in a Location.
      operationId: aiplatform.projects.locations.endpoints.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListEndpointsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:countTokens:
    parameters: *ref_1
    post:
      description: Perform a token counting.
      operationId: aiplatform.projects.locations.endpoints.countTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CountTokensRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1CountTokensResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:rawPredict:
    parameters: *ref_1
    post:
      description: >-
        Perform an online prediction with an arbitrary HTTP payload. The
        response includes the following HTTP headers: *
        `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this
        prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's
        DeployedModel that served this prediction.
      operationId: aiplatform.projects.locations.endpoints.rawPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1RawPredictRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:
    parameters: *ref_1
    delete:
      description: Deletes an Endpoint.
      operationId: aiplatform.projects.locations.endpoints.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an Endpoint.
      operationId: aiplatform.projects.locations.endpoints.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Endpoint'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Endpoint'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets an Endpoint.
      operationId: aiplatform.projects.locations.endpoints.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Endpoint'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:serverStreamingPredict:
    parameters: *ref_1
    post:
      description: >-
        Perform a server-side streaming online prediction request for Vertex LLM
        streaming.
      operationId: aiplatform.projects.locations.endpoints.serverStreamingPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1StreamingPredictRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1StreamingPredictResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:undeployModel:
    parameters: *ref_1
    post:
      description: >-
        Undeploys a Model from an Endpoint, removing a DeployedModel from it,
        and freeing all resources it's using.
      operationId: aiplatform.projects.locations.endpoints.undeployModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1UndeployModelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:deployModel:
    parameters: *ref_1
    post:
      description: Deploys a Model into this Endpoint, creating a DeployedModel within it.
      operationId: aiplatform.projects.locations.endpoints.deployModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployModelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:explain:
    parameters: *ref_1
    post:
      description: >-
        Perform an online explanation. If deployed_model_id is specified, the
        corresponding DeployModel must have explanation_spec populated. If
        deployed_model_id is not specified, all DeployedModels must have
        explanation_spec populated.
      operationId: aiplatform.projects.locations.endpoints.explain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplainRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplainResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:mutateDeployedModel:
    parameters: *ref_1
    post:
      description: >-
        Updates an existing deployed model. Updatable fields include
        `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`,
        `disable_container_logging` (v1 only), and `enable_container_logging`
        (v1beta1 only).
      operationId: aiplatform.projects.locations.endpoints.mutateDeployedModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1MutateDeployedModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:streamRawPredict:
    parameters: *ref_1
    post:
      description: Perform a streaming online prediction with an arbitrary HTTP payload.
      operationId: aiplatform.projects.locations.endpoints.streamRawPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1StreamRawPredictRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:directPredict:
    parameters: *ref_1
    post:
      description: >-
        Perform an unary online prediction request to a gRPC model server for
        Vertex first-party products and frameworks.
      operationId: aiplatform.projects.locations.endpoints.directPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DirectPredictRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1DirectPredictResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:computeTokens:
    parameters: *ref_1
    post:
      description: Return a list of tokens based on the input text.
      operationId: aiplatform.projects.locations.endpoints.computeTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ComputeTokensRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ComputeTokensResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:streamGenerateContent:
    parameters: *ref_1
    post:
      description: Generate content with multimodal inputs with streaming support.
      operationId: aiplatform.projects.locations.endpoints.streamGenerateContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1GenerateContentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1GenerateContentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:directRawPredict:
    parameters: *ref_1
    post:
      description: >-
        Perform an unary online prediction request to a gRPC model server for
        custom containers.
      operationId: aiplatform.projects.locations.endpoints.directRawPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1DirectRawPredictRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1DirectRawPredictResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates an active or paused Schedule. When the Schedule is updated, new
        runs will be scheduled starting from the updated next execution time
        after the update time based on the time_specification in the updated
        Schedule. All unstarted runs before the update time will be skipped
        while already created runs will NOT be paused or canceled.
      operationId: aiplatform.projects.locations.schedules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a Schedule.
      operationId: aiplatform.projects.locations.schedules.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
    get:
      description: Gets a Schedule.
      operationId: aiplatform.projects.locations.schedules.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}:pause:
    parameters: *ref_1
    post:
      description: >-
        Pauses a Schedule. Will mark Schedule.state to 'PAUSED'. If the schedule
        is paused, no new runs will be created. Already created runs will NOT be
        paused or canceled.
      operationId: aiplatform.projects.locations.schedules.pause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PauseScheduleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/schedules:
    parameters: *ref_1
    post:
      description: Creates a Schedule.
      operationId: aiplatform.projects.locations.schedules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists Schedules in a Location.
      operationId: aiplatform.projects.locations.schedules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListSchedulesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}:resume:
    parameters: *ref_1
    post:
      description: >-
        Resumes a paused Schedule to start scheduling new runs. Will mark
        Schedule.state to 'ACTIVE'. Only paused Schedule can be resumed. When
        the Schedule is resumed, new runs will be scheduled starting from the
        next execution time after the current time based on the
        time_specification in the Schedule. If Schedule.catchUp is set up true,
        all missed runs will be scheduled for backfill first.
      operationId: aiplatform.projects.locations.schedules.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ResumeScheduleRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.schedules.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.schedules.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.schedules.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.schedules.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.schedules.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}:
    parameters: *ref_1
    get:
      description: Gets a SpecialistPool.
      operationId: aiplatform.projects.locations.specialistPools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1SpecialistPool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a SpecialistPool as well as all Specialists in the pool.
      operationId: aiplatform.projects.locations.specialistPools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    patch:
      description: Updates a SpecialistPool.
      operationId: aiplatform.projects.locations.specialistPools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1SpecialistPool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/specialistPools:
    parameters: *ref_1
    get:
      description: Lists SpecialistPools in a Location.
      operationId: aiplatform.projects.locations.specialistPools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListSpecialistPoolsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
    post:
      description: Creates a SpecialistPool.
      operationId: aiplatform.projects.locations.specialistPools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1SpecialistPool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.specialistPools.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.specialistPools.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.specialistPools.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.specialistPools.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.specialistPools.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookExecutionJobs/{notebookExecutionJobsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.notebookExecutionJobs.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookExecutionJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookExecutionJobs/{notebookExecutionJobsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.notebookExecutionJobs.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookExecutionJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/notebookExecutionJobs/{notebookExecutionJobsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.notebookExecutionJobs.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookExecutionJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.notebookExecutionJobs.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookExecutionJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookExecutionJobs/{notebookExecutionJobsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.notebookExecutionJobs.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookExecutionJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookExecutionJobs/{notebookExecutionJobsId}:
    parameters: *ref_1
    get:
      description: Gets a NotebookExecutionJob.
      operationId: aiplatform.projects.locations.notebookExecutionJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1NotebookExecutionJob
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookExecutionJobsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    delete:
      description: Deletes a NotebookExecutionJob.
      operationId: aiplatform.projects.locations.notebookExecutionJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookExecutionJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookExecutionJobs:
    parameters: *ref_1
    post:
      description: Creates a NotebookExecutionJob.
      operationId: aiplatform.projects.locations.notebookExecutionJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1NotebookExecutionJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: notebookExecutionJobId
          schema:
            type: string
    get:
      description: Lists NotebookExecutionJobs in a Location.
      operationId: aiplatform.projects.locations.notebookExecutionJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListNotebookExecutionJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureGroups:
    parameters: *ref_1
    post:
      description: Creates a new FeatureGroup in a given project and location.
      operationId: aiplatform.projects.locations.featureGroups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: featureGroupId
          schema:
            type: string
    get:
      description: Lists FeatureGroups in a given project and location.
      operationId: aiplatform.projects.locations.featureGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListFeatureGroupsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/featureGroups/{featureGroupsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single FeatureGroup.
      operationId: aiplatform.projects.locations.featureGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single FeatureGroup.
      operationId: aiplatform.projects.locations.featureGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single FeatureGroup.
      operationId: aiplatform.projects.locations.featureGroups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/featureGroups/{featureGroupsId}/features/{featuresId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.featureGroups.features.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.featureGroups.features.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureGroups/{featureGroupsId}/features/{featuresId}/operations/{operationsId}:wait:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.featureGroups.features.operations.listWait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.featureGroups.features.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/featureGroups/{featureGroupsId}/features/{featuresId}:
    parameters: *ref_1
    delete:
      description: Deletes a single Feature.
      operationId: aiplatform.projects.locations.featureGroups.features.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
    get:
      description: Gets details of a single Feature.
      operationId: aiplatform.projects.locations.featureGroups.features.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single Feature.
      operationId: aiplatform.projects.locations.featureGroups.features.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/featureGroups/{featureGroupsId}/features:
    parameters: *ref_1
    get:
      description: Lists Features in a given FeatureGroup.
      operationId: aiplatform.projects.locations.featureGroups.features.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListFeaturesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: latestStatsCount
          schema:
            type: integer
            format: int32
    post:
      description: Creates a new Feature in a given FeatureGroup.
      operationId: aiplatform.projects.locations.featureGroups.features.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: featureId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureGroups/{featureGroupsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.featureGroups.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.featureGroups.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureGroups/{featureGroupsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.featureGroups.operations.listWait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.featureGroups.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}:
    parameters: *ref_1
    get:
      description: Gets a ModelDeploymentMonitoringJob.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a ModelDeploymentMonitoringJob.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a ModelDeploymentMonitoringJob.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}:pause:
    parameters: *ref_1
    post:
      description: >-
        Pauses a ModelDeploymentMonitoringJob. If the job is running, the server
        makes a best effort to cancel the job. Will mark
        ModelDeploymentMonitoringJob.state to 'PAUSED'.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.pause
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs:
    parameters: *ref_1
    get:
      description: Lists ModelDeploymentMonitoringJobs in a Location.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
    post:
      description: >-
        Creates a ModelDeploymentMonitoringJob. It will run periodically on a
        configured interval.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}:resume:
    parameters: *ref_1
    post:
      description: >-
        Resumes a paused ModelDeploymentMonitoringJob. It will start to run from
        next scheduled time. A deleted ModelDeploymentMonitoringJob can't be
        resumed.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}:searchModelDeploymentMonitoringStatsAnomalies:
    parameters: *ref_1
    post:
      description: >-
        Searches Model Monitoring Statistics generated within a given time
        window.
      operationId: >-
        aiplatform.projects.locations.modelDeploymentMonitoringJobs.searchModelDeploymentMonitoringStatsAnomalies
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: >-
        aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: >-
        aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/operations/{operationsId}:wait:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.featureOnlineStores.operations.listWait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.featureOnlineStores.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.featureOnlineStores.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.featureOnlineStores.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}:
    parameters: *ref_1
    delete:
      description: Deletes a single FeatureView.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single FeatureView.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureView'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets details of a single FeatureView.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureView'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}:fetchFeatureValues:
    parameters: *ref_1
    post:
      description: Fetch feature values under a FeatureView.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.fetchFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1FetchFeatureValuesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1FetchFeatureValuesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}:searchNearestEntities:
    parameters: *ref_1
    post:
      description: >-
        Search the nearest entities under a FeatureView. Search only works for
        indexable feature view; if a feature view isn't indexable, returns
        Invalid argument response.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.searchNearestEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1SearchNearestEntitiesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1SearchNearestEntitiesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews:
    parameters: *ref_1
    post:
      description: Creates a new FeatureView in a given FeatureOnlineStore.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureView'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: query
          name: featureViewId
          schema:
            type: string
        - in: query
          name: runSyncImmediately
          schema:
            type: boolean
    get:
      description: Lists FeatureViews in a given FeatureOnlineStore.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListFeatureViewsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.testIamPermissions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
        - in: query
          name: permissions
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}:sync:
    parameters: *ref_1
    post:
      description: Triggers on-demand sync for the FeatureView.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.sync
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1SyncFeatureViewRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1SyncFeatureViewResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}/featureViewSyncs:
    parameters: *ref_1
    get:
      description: Lists FeatureViewSyncs in a given FeatureView.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.featureViewSyncs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListFeatureViewSyncsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}/featureViewSyncs/{featureViewSyncsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single FeatureViewSync.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.featureViewSyncs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureViewSync'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewSyncsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}/featureViews/{featureViewsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.operations.listWait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: >-
        aiplatform.projects.locations.featureOnlineStores.featureViews.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: path
          name: featureViewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single FeatureOnlineStore.
      operationId: aiplatform.projects.locations.featureOnlineStores.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets details of a single FeatureOnlineStore.
      operationId: aiplatform.projects.locations.featureOnlineStores.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a single FeatureOnlineStore. The FeatureOnlineStore must not
        contain any FeatureViews.
      operationId: aiplatform.projects.locations.featureOnlineStores.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores:
    parameters: *ref_1
    get:
      description: Lists FeatureOnlineStores in a given project and location.
      operationId: aiplatform.projects.locations.featureOnlineStores.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: Creates a new FeatureOnlineStore in a given project and location.
      operationId: aiplatform.projects.locations.featureOnlineStores.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: featureOnlineStoreId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: aiplatform.projects.locations.featureOnlineStores.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: aiplatform.projects.locations.featureOnlineStores.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featureOnlineStores/{featureOnlineStoresId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: aiplatform.projects.locations.featureOnlineStores.testIamPermissions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featureOnlineStoresId
          required: true
          schema:
            type: string
        - in: query
          name: permissions
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs/{batchPredictionJobsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Cancels a BatchPredictionJob. Starts asynchronous cancellation on the
        BatchPredictionJob. The server makes the best effort to cancel the job,
        but success is not guaranteed. Clients can use
        JobService.GetBatchPredictionJob or other methods to check whether the
        cancellation succeeded or whether the job completed despite
        cancellation. On a successful cancellation, the BatchPredictionJob is
        not deleted;instead its BatchPredictionJob.state is set to `CANCELLED`.
        Any files already outputted by the job are not deleted.
      operationId: aiplatform.projects.locations.batchPredictionJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1CancelBatchPredictionJobRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: batchPredictionJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs/{batchPredictionJobsId}:
    parameters: *ref_1
    get:
      description: Gets a BatchPredictionJob
      operationId: aiplatform.projects.locations.batchPredictionJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: batchPredictionJobsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a BatchPredictionJob. Can only be called on jobs that already
        finished.
      operationId: aiplatform.projects.locations.batchPredictionJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: batchPredictionJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs:
    parameters: *ref_1
    get:
      description: Lists BatchPredictionJobs in a Location.
      operationId: aiplatform.projects.locations.batchPredictionJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListBatchPredictionJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: >-
        Creates a BatchPredictionJob. A BatchPredictionJob once created will
        right away be attempted to start.
      operationId: aiplatform.projects.locations.batchPredictionJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features/{featuresId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.features.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features/{featuresId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.features.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.features.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features/{featuresId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.features.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features/{featuresId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.features.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features/{featuresId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single Feature.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets details of a single Feature.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single Feature.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features:batchCreate:
    parameters: *ref_1
    post:
      description: Creates a batch of Features in a given EntityType.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.features.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1BatchCreateFeaturesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features:
    parameters: *ref_1
    get:
      description: Lists Features in a given EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListFeaturesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: latestStatsCount
          schema:
            type: integer
            format: int32
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
    post:
      description: Creates a new Feature in a given EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: featureId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:importFeatureValues:
    parameters: *ref_1
    post:
      description: >-
        Imports Feature values into the Featurestore from a source storage. The
        progress of the import is tracked by the returned operation. The
        imported features are guaranteed to be visible to subsequent read
        operations after the operation is marked as successfully done. If an
        import operation fails, the Feature values returned from reads and
        exports may be inconsistent. If consistency is required, the caller must
        retry the same import request again and wait till the new operation
        returned is marked as successfully done. There are also scenarios where
        the caller can cause inconsistency. - Source data for import contains
        multiple distinct Feature values for the same entity ID and timestamp. -
        Source is modified during an import. This includes adding, updating, or
        removing source data and/or metadata. Examples of updating metadata
        include but are not limited to changing storage location, storage class,
        or retention policy. - Online serving cluster is under-provisioned.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.importFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ImportFeatureValuesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:streamingReadFeatureValues:
    parameters: *ref_1
    post:
      description: >-
        Reads Feature values for multiple entities. Depending on their size,
        data for different entities may be broken up across multiple responses.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.streamingReadFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes:
    parameters: *ref_1
    get:
      description: Lists EntityTypes in a given Featurestore.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListEntityTypesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
    post:
      description: Creates a new EntityType in a given Featurestore.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: entityTypeId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:deleteFeatureValues:
    parameters: *ref_1
    post:
      description: >-
        Delete Feature values from Featurestore. The progress of the deletion is
        tracked by the returned operation. The deleted feature values are
        guaranteed to be invisible to subsequent read operations after the
        operation is marked as successfully done. If a delete feature values
        operation fails, the feature values returned from reads and exports may
        be inconsistent. If consistency is required, the caller must retry the
        same delete request again and wait till the new operation returned is
        marked as successfully done.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.deleteFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:exportFeatureValues:
    parameters: *ref_1
    post:
      description: Exports Feature values from all the entities of a target EntityType.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.exportFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ExportFeatureValuesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.testIamPermissions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: permissions
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a single EntityType. The EntityType must not have any Features
        or `force` must be set to true for the request to succeed.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:readFeatureValues:
    parameters: *ref_1
    post:
      description: >-
        Reads Feature values of a specific entity of an EntityType. For reading
        feature values of multiple entities of an EntityType, please use
        StreamingReadFeatureValues.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.readFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:writeFeatureValues:
    parameters: *ref_1
    post:
      description: >-
        Writes Feature values of one or more entities of an EntityType. The
        Feature values are merged into existing entities if any. The Feature
        values to be written must have timestamp within the online storage
        retention.
      operationId: >-
        aiplatform.projects.locations.featurestores.entityTypes.writeFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1WriteFeatureValuesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1WriteFeatureValuesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.featurestores.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.featurestores.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.featurestores.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.featurestores.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.featurestores.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single Featurestore.
      operationId: aiplatform.projects.locations.featurestores.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Featurestore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a single Featurestore. The Featurestore must not contain any
        EntityTypes or `force` must be set to true for the request to succeed.
      operationId: aiplatform.projects.locations.featurestores.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    get:
      description: Gets details of a single Featurestore.
      operationId: aiplatform.projects.locations.featurestores.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Featurestore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}:batchReadFeatureValues:
    parameters: *ref_1
    post:
      description: >-
        Batch reads Feature values from a Featurestore. This API enables batch
        reading Feature values, where each read instance in the batch may read
        Feature values of entities from one or more EntityTypes. Point-in-time
        correctness is guaranteed for Feature values of each read instance as of
        each instance's read timestamp.
      operationId: aiplatform.projects.locations.featurestores.batchReadFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1BatchReadFeatureValuesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: aiplatform.projects.locations.featurestores.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores:
    parameters: *ref_1
    get:
      description: Lists Featurestores in a given project and location.
      operationId: aiplatform.projects.locations.featurestores.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListFeaturestoresResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: Creates a new Featurestore in a given project and location.
      operationId: aiplatform.projects.locations.featurestores.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Featurestore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: featurestoreId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: aiplatform.projects.locations.featurestores.testIamPermissions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: permissions
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: aiplatform.projects.locations.featurestores.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/featurestores:searchFeatures:
    parameters: *ref_1
    get:
      description: Searches Features matching a query in a given project.
      operationId: aiplatform.projects.locations.featurestores.searchFeatures
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1SearchFeaturesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:addTrialMeasurement:
    parameters: *ref_1
    post:
      description: >-
        Adds a measurement of the objective metrics to a Trial. This measurement
        is assumed to have been taken before the Trial is complete.
      operationId: aiplatform.projects.locations.studies.trials.addTrialMeasurement
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1AddTrialMeasurementRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:complete:
    parameters: *ref_1
    post:
      description: Marks a Trial as complete.
      operationId: aiplatform.projects.locations.studies.trials.complete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CompleteTrialRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials:suggest:
    parameters: *ref_1
    post:
      description: >-
        Adds one or more Trials to a Study, with parameter values suggested by
        Vertex AI Vizier. Returns a long-running operation associated with the
        generation of Trial suggestions. When this long-running operation
        succeeds, it will contain a SuggestTrialsResponse.
      operationId: aiplatform.projects.locations.studies.trials.suggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1SuggestTrialsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials:listOptimalTrials:
    parameters: *ref_1
    post:
      description: >-
        Lists the pareto-optimal Trials for multi-objective Study or the optimal
        Trials for single-objective Study. The definition of pareto-optimal can
        be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
      operationId: aiplatform.projects.locations.studies.trials.listOptimalTrials
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ListOptimalTrialsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListOptimalTrialsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials:
    parameters: *ref_1
    get:
      description: Lists the Trials associated with a Study.
      operationId: aiplatform.projects.locations.studies.trials.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListTrialsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Adds a user provided Trial to a Study.
      operationId: aiplatform.projects.locations.studies.trials.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:stop:
    parameters: *ref_1
    post:
      description: Stops a Trial.
      operationId: aiplatform.projects.locations.studies.trials.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1StopTrialRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:checkTrialEarlyStoppingState:
    parameters: *ref_1
    post:
      description: >-
        Checks whether a Trial should stop or not. Returns a long-running
        operation. When the operation is successful, it will contain a
        CheckTrialEarlyStoppingStateResponse.
      operationId: >-
        aiplatform.projects.locations.studies.trials.checkTrialEarlyStoppingState
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:
    parameters: *ref_1
    delete:
      description: Deletes a Trial.
      operationId: aiplatform.projects.locations.studies.trials.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
    get:
      description: Gets a Trial.
      operationId: aiplatform.projects.locations.studies.trials.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.studies.trials.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.studies.trials.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.studies.trials.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.studies.trials.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.studies.trials.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.studies.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.studies.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.studies.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.studies.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.studies.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}:
    parameters: *ref_1
    get:
      description: Gets a Study by name.
      operationId: aiplatform.projects.locations.studies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Study'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a Study.
      operationId: aiplatform.projects.locations.studies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies:
    parameters: *ref_1
    get:
      description: Lists all the studies in a region for an associated project.
      operationId: aiplatform.projects.locations.studies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListStudiesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates a Study. A resource name will be generated after creation of the
        Study.
      operationId: aiplatform.projects.locations.studies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Study'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Study'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/studies:lookup:
    parameters: *ref_1
    post:
      description: >-
        Looks a study up using the user-defined display_name field instead of
        the fully qualified resource name.
      operationId: aiplatform.projects.locations.studies.lookup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1LookupStudyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Study'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}:readSize:
    parameters: *ref_1
    get:
      description: Returns the storage size for a given TensorBoard instance.
      operationId: aiplatform.projects.locations.tensorboards.readSize
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ReadTensorboardSizeResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards:
    parameters: *ref_1
    post:
      description: Creates a Tensorboard.
      operationId: aiplatform.projects.locations.tensorboards.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensorboard'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists Tensorboards in a Location.
      operationId: aiplatform.projects.locations.tensorboards.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListTensorboardsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}:
    parameters: *ref_1
    delete:
      description: Deletes a Tensorboard.
      operationId: aiplatform.projects.locations.tensorboards.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a Tensorboard.
      operationId: aiplatform.projects.locations.tensorboards.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensorboard'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Tensorboard.
      operationId: aiplatform.projects.locations.tensorboards.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensorboard'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}:readUsage:
    parameters: *ref_1
    get:
      description: Returns a list of monthly active users for a given TensorBoard instance.
      operationId: aiplatform.projects.locations.tensorboards.readUsage
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ReadTensorboardUsageResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}:batchRead:
    parameters: *ref_1
    get:
      description: >-
        Reads multiple TensorboardTimeSeries' data. The data point number limit
        is 1000 for scalars, 100 for tensors and blob references. If the number
        of data points stored is less than the limit, all data is returned.
        Otherwise, the number limit of data points is randomly selected from
        this time series and returned.
      operationId: aiplatform.projects.locations.tensorboards.batchRead
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: query
          name: timeSeries
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries:
    parameters: *ref_1
    get:
      description: Lists TensorboardTimeSeries in a Location.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
    post:
      description: Creates a TensorboardTimeSeries.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: tensorboardTimeSeriesId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}:readBlobData:
    parameters: *ref_1
    get:
      description: >-
        Gets bytes of TensorboardBlobs. This is to allow reading blob data
        stored in consumer project's Cloud Storage bucket without users having
        to obtain Cloud Storage access permission.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.readBlobData
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: query
          name: blobIds
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}:
    parameters: *ref_1
    patch:
      description: Updates a TensorboardTimeSeries.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a TensorboardTimeSeries.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a TensorboardTimeSeries.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}:read:
    parameters: *ref_1
    get:
      description: >-
        Reads a TensorboardTimeSeries' data. By default, if the number of data
        points stored is less than 1000, all data is returned. Otherwise, 1000
        data points is randomly selected from this time series and returned.
        This value can be changed by changing max_data_points, which can't be
        greater than 10k.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.read
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: query
          name: maxDataPoints
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}:exportTensorboardTimeSeries:
    parameters: *ref_1
    post:
      description: >-
        Exports a TensorboardTimeSeries' data. Data is returned in paginated
        responses.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.exportTensorboardTimeSeries
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: >-
        aiplatform.projects.locations.tensorboards.experiments.runs.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}:write:
    parameters: *ref_1
    post:
      description: >-
        Write time series data points into multiple TensorboardTimeSeries under
        a TensorboardRun. If any data fail to be ingested, an error is returned.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1WriteTensorboardRunDataRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1WriteTensorboardRunDataResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}:
    parameters: *ref_1
    patch:
      description: Updates a TensorboardRun.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a TensorboardRun.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
    get:
      description: Gets a TensorboardRun.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs:batchCreate:
    parameters: *ref_1
    post:
      description: Batch create TensorboardRuns.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs:
    parameters: *ref_1
    post:
      description: Creates a TensorboardRun.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: query
          name: tensorboardRunId
          schema:
            type: string
    get:
      description: Lists TensorboardRuns in a Location.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListTensorboardRunsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.tensorboards.experiments.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.tensorboards.experiments.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.tensorboards.experiments.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.tensorboards.experiments.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.tensorboards.experiments.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}:write:
    parameters: *ref_1
    post:
      description: >-
        Write time series data points of multiple TensorboardTimeSeries in
        multiple TensorboardRun's. If any data fail to be ingested, an error is
        returned.
      operationId: aiplatform.projects.locations.tensorboards.experiments.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}:
    parameters: *ref_1
    patch:
      description: Updates a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}:batchCreate:
    parameters: *ref_1
    post:
      description: >-
        Batch create TensorboardTimeSeries that belong to a
        TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments:
    parameters: *ref_1
    post:
      description: Creates a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: query
          name: tensorboardExperimentId
          schema:
            type: string
    get:
      description: Lists TensorboardExperiments in a Location.
      operationId: aiplatform.projects.locations.tensorboards.experiments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListTensorboardExperimentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.tensorboards.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.tensorboards.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.tensorboards.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.tensorboards.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.tensorboards.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tuningJobs/{tuningJobsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.tuningJobs.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tuningJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tuningJobs/{tuningJobsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.tuningJobs.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tuningJobsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/tuningJobs/{tuningJobsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.tuningJobs.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tuningJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tuningJobs/{tuningJobsId}:
    parameters: *ref_1
    get:
      description: Gets a TuningJob.
      operationId: aiplatform.projects.locations.tuningJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TuningJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tuningJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tuningJobs/{tuningJobsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Cancels a TuningJob. Starts asynchronous cancellation on the TuningJob.
        The server makes a best effort to cancel the job, but success is not
        guaranteed. Clients can use GenAiTuningService.GetTuningJob or other
        methods to check whether the cancellation succeeded or whether the job
        completed despite cancellation. On successful cancellation, the
        TuningJob is not deleted; instead it becomes a job with a
        TuningJob.error value with a google.rpc.Status.code of 1, corresponding
        to `Code.CANCELLED`, and TuningJob.state is set to `CANCELLED`.
      operationId: aiplatform.projects.locations.tuningJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1CancelTuningJobRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tuningJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/tuningJobs:
    parameters: *ref_1
    post:
      description: >-
        Creates a TuningJob. A created TuningJob right away will be attempted to
        be run.
      operationId: aiplatform.projects.locations.tuningJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TuningJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TuningJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists TuningJobs in a Location.
      operationId: aiplatform.projects.locations.tuningJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListTuningJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimes:assign:
    parameters: *ref_1
    post:
      description: >-
        Assigns a NotebookRuntime to a user for a particular Notebook file. This
        method will either returns an existing assignment or generates a new
        one.
      operationId: aiplatform.projects.locations.notebookRuntimes.assign
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1AssignNotebookRuntimeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimes/{notebookRuntimesId}:start:
    parameters: *ref_1
    post:
      description: Starts a NotebookRuntime.
      operationId: aiplatform.projects.locations.notebookRuntimes.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1StartNotebookRuntimeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimes/{notebookRuntimesId}:upgrade:
    parameters: *ref_1
    post:
      description: Upgrades a NotebookRuntime.
      operationId: aiplatform.projects.locations.notebookRuntimes.upgrade
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimes:
    parameters: *ref_1
    get:
      description: Lists NotebookRuntimes in a Location.
      operationId: aiplatform.projects.locations.notebookRuntimes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListNotebookRuntimesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimes/{notebookRuntimesId}:
    parameters: *ref_1
    delete:
      description: Deletes a NotebookRuntime.
      operationId: aiplatform.projects.locations.notebookRuntimes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimesId
          required: true
          schema:
            type: string
    get:
      description: Gets a NotebookRuntime.
      operationId: aiplatform.projects.locations.notebookRuntimes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1NotebookRuntime'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimes/{notebookRuntimesId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.notebookRuntimes.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.notebookRuntimes.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimes/{notebookRuntimesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.notebookRuntimes.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimes/{notebookRuntimesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.notebookRuntimes.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimes/{notebookRuntimesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.notebookRuntimes.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/persistentResources/{persistentResourcesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.persistentResources.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: persistentResourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/persistentResources/{persistentResourcesId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.persistentResources.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: persistentResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.persistentResources.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: persistentResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/persistentResources/{persistentResourcesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.persistentResources.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: persistentResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/persistentResources/{persistentResourcesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.persistentResources.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: persistentResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/persistentResources/{persistentResourcesId}:
    parameters: *ref_1
    patch:
      description: Updates a PersistentResource.
      operationId: aiplatform.projects.locations.persistentResources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PersistentResource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: persistentResourcesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a PersistentResource.
      operationId: aiplatform.projects.locations.persistentResources.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: persistentResourcesId
          required: true
          schema:
            type: string
    get:
      description: Gets a PersistentResource.
      operationId: aiplatform.projects.locations.persistentResources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PersistentResource'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: persistentResourcesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/persistentResources/{persistentResourcesId}:reboot:
    parameters: *ref_1
    post:
      description: Reboots a PersistentResource.
      operationId: aiplatform.projects.locations.persistentResources.reboot
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1RebootPersistentResourceRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: persistentResourcesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/persistentResources:
    parameters: *ref_1
    post:
      description: Creates a PersistentResource.
      operationId: aiplatform.projects.locations.persistentResources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PersistentResource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: persistentResourceId
          schema:
            type: string
    get:
      description: Lists PersistentResources in a Location.
      operationId: aiplatform.projects.locations.persistentResources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListPersistentResourcesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/migratableResources/{migratableResourcesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.migratableResources.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migratableResourcesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/migratableResources/{migratableResourcesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.migratableResources.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migratableResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/migratableResources/{migratableResourcesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.migratableResources.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migratableResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.migratableResources.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migratableResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/migratableResources/{migratableResourcesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.migratableResources.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migratableResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/migratableResources:batchMigrate:
    parameters: *ref_1
    post:
      description: >-
        Batch migrates resources from ml.googleapis.com, automl.googleapis.com,
        and datalabeling.googleapis.com to Vertex AI.
      operationId: aiplatform.projects.locations.migratableResources.batchMigrate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1BatchMigrateResourcesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/migratableResources:search:
    parameters: *ref_1
    post:
      description: >-
        Searches all of the resources in automl.googleapis.com,
        datalabeling.googleapis.com and ml.googleapis.com that can be migrated
        to Vertex AI's given location.
      operationId: aiplatform.projects.locations.migratableResources.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1SearchMigratableResourcesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1SearchMigratableResourcesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimeTemplates/{notebookRuntimeTemplatesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimeTemplates:
    parameters: *ref_1
    get:
      description: Lists NotebookRuntimeTemplates in a Location.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a NotebookRuntimeTemplate.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1NotebookRuntimeTemplate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: notebookRuntimeTemplateId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimeTemplates/{notebookRuntimeTemplatesId}:
    parameters: *ref_1
    get:
      description: Gets a NotebookRuntimeTemplate.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1NotebookRuntimeTemplate
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a NotebookRuntimeTemplate.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1NotebookRuntimeTemplate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1NotebookRuntimeTemplate
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a NotebookRuntimeTemplate.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimeTemplates/{notebookRuntimeTemplatesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        aiplatform.projects.locations.notebookRuntimeTemplates.testIamPermissions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: permissions
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimeTemplates/{notebookRuntimeTemplatesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimeTemplates/{notebookRuntimeTemplatesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimeTemplates/{notebookRuntimeTemplatesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimeTemplates/{notebookRuntimeTemplatesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/notebookRuntimeTemplates/{notebookRuntimeTemplatesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: notebookRuntimeTemplatesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:undeployIndex:
    parameters: *ref_1
    post:
      description: >-
        Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from
        it, and freeing all resources it's using.
      operationId: aiplatform.projects.locations.indexEndpoints.undeployIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1UndeployIndexRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:deployIndex:
    parameters: *ref_1
    post:
      description: >-
        Deploys an Index into this IndexEndpoint, creating a DeployedIndex
        within it. Only non-empty Indexes can be deployed.
      operationId: aiplatform.projects.locations.indexEndpoints.deployIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployIndexRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:
    parameters: *ref_1
    delete:
      description: Deletes an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
    get:
      description: Gets an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:readIndexDatapoints:
    parameters: *ref_1
    post:
      description: >-
        Reads the datapoints/vectors of the given IDs. A maximum of 1000
        datapoints can be retrieved in a batch.
      operationId: aiplatform.projects.locations.indexEndpoints.readIndexDatapoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ReadIndexDatapointsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ReadIndexDatapointsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:mutateDeployedIndex:
    parameters: *ref_1
    post:
      description: Update an existing DeployedIndex under an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.mutateDeployedIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndex'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:findNeighbors:
    parameters: *ref_1
    post:
      description: Finds the nearest neighbors of each vector within the request.
      operationId: aiplatform.projects.locations.indexEndpoints.findNeighbors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1FindNeighborsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1FindNeighborsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints:
    parameters: *ref_1
    post:
      description: Creates an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists IndexEndpoints in a Location.
      operationId: aiplatform.projects.locations.indexEndpoints.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListIndexEndpointsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.indexEndpoints.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.indexEndpoints.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.indexEndpoints.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.indexEndpoints.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.indexEndpoints.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}:
    parameters: *ref_1
    delete:
      description: Deletes a DataLabelingJob.
      operationId: aiplatform.projects.locations.dataLabelingJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
    get:
      description: Gets a DataLabelingJob.
      operationId: aiplatform.projects.locations.dataLabelingJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancels a DataLabelingJob. Success of cancellation is not guaranteed.
      operationId: aiplatform.projects.locations.dataLabelingJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1CancelDataLabelingJobRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs:
    parameters: *ref_1
    get:
      description: Lists DataLabelingJobs in a Location.
      operationId: aiplatform.projects.locations.dataLabelingJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListDataLabelingJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a DataLabelingJob.
      operationId: aiplatform.projects.locations.dataLabelingJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.dataLabelingJobs.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.dataLabelingJobs.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.dataLabelingJobs.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.dataLabelingJobs.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.dataLabelingJobs.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.customJobs.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.customJobs.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.customJobs.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.customJobs.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.customJobs.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/customJobs:
    parameters: *ref_1
    post:
      description: >-
        Creates a CustomJob. A created CustomJob right away will be attempted to
        be run.
      operationId: aiplatform.projects.locations.customJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists CustomJobs in a Location.
      operationId: aiplatform.projects.locations.customJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListCustomJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}:
    parameters: *ref_1
    get:
      description: Gets a CustomJob.
      operationId: aiplatform.projects.locations.customJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a CustomJob.
      operationId: aiplatform.projects.locations.customJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Cancels a CustomJob. Starts asynchronous cancellation on the CustomJob.
        The server makes a best effort to cancel the job, but success is not
        guaranteed. Clients can use JobService.GetCustomJob or other methods to
        check whether the cancellation succeeded or whether the job completed
        despite cancellation. On successful cancellation, the CustomJob is not
        deleted; instead it becomes a job with a CustomJob.error value with a
        google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
        CustomJob.state is set to `CANCELLED`.
      operationId: aiplatform.projects.locations.customJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1CancelCustomJobRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.trainingPipelines.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.trainingPipelines.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.trainingPipelines.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.trainingPipelines.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.trainingPipelines.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines:
    parameters: *ref_1
    post:
      description: >-
        Creates a TrainingPipeline. A created TrainingPipeline right away will
        be attempted to be run.
      operationId: aiplatform.projects.locations.trainingPipelines.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists TrainingPipelines in a Location.
      operationId: aiplatform.projects.locations.trainingPipelines.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListTrainingPipelinesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}:
    parameters: *ref_1
    get:
      description: Gets a TrainingPipeline.
      operationId: aiplatform.projects.locations.trainingPipelines.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a TrainingPipeline.
      operationId: aiplatform.projects.locations.trainingPipelines.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Cancels a TrainingPipeline. Starts asynchronous cancellation on the
        TrainingPipeline. The server makes a best effort to cancel the pipeline,
        but success is not guaranteed. Clients can use
        PipelineService.GetTrainingPipeline or other methods to check whether
        the cancellation succeeded or whether the pipeline completed despite
        cancellation. On successful cancellation, the TrainingPipeline is not
        deleted; instead it becomes a pipeline with a TrainingPipeline.error
        value with a google.rpc.Status.code of 1, corresponding to
        `Code.CANCELLED`, and TrainingPipeline.state is set to `CANCELLED`.
      operationId: aiplatform.projects.locations.trainingPipelines.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1CancelTrainingPipelineRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools/{deploymentResourcePoolsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.deploymentResourcePools.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.deploymentResourcePools.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools/{deploymentResourcePoolsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.deploymentResourcePools.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools/{deploymentResourcePoolsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.deploymentResourcePools.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools/{deploymentResourcePoolsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.deploymentResourcePools.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools:
    parameters: *ref_1
    get:
      description: List DeploymentResourcePools in a location.
      operationId: aiplatform.projects.locations.deploymentResourcePools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Create a DeploymentResourcePool.
      operationId: aiplatform.projects.locations.deploymentResourcePools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools/{deploymentResourcePoolsId}:queryDeployedModels:
    parameters: *ref_1
    get:
      description: >-
        List DeployedModels that have been deployed on this
        DeploymentResourcePool.
      operationId: >-
        aiplatform.projects.locations.deploymentResourcePools.queryDeployedModels
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1QueryDeployedModelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools/{deploymentResourcePoolsId}:
    parameters: *ref_1
    delete:
      description: Delete a DeploymentResourcePool.
      operationId: aiplatform.projects.locations.deploymentResourcePools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
    patch:
      description: Update a DeploymentResourcePool.
      operationId: aiplatform.projects.locations.deploymentResourcePools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1DeploymentResourcePool
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Get a DeploymentResourcePool.
      operationId: aiplatform.projects.locations.deploymentResourcePools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1DeploymentResourcePool
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}:upsertDatapoints:
    parameters: *ref_1
    post:
      description: Add/update Datapoints into an Index.
      operationId: aiplatform.projects.locations.indexes.upsertDatapoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1UpsertDatapointsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1UpsertDatapointsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}:
    parameters: *ref_1
    patch:
      description: Updates an Index.
      operationId: aiplatform.projects.locations.indexes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Index'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes an Index. An Index can only be deleted when all its
        DeployedIndexes had been undeployed.
      operationId: aiplatform.projects.locations.indexes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
    get:
      description: Gets an Index.
      operationId: aiplatform.projects.locations.indexes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Index'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexes:
    parameters: *ref_1
    get:
      description: Lists Indexes in a Location.
      operationId: aiplatform.projects.locations.indexes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListIndexesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates an Index.
      operationId: aiplatform.projects.locations.indexes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Index'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}:removeDatapoints:
    parameters: *ref_1
    post:
      description: Remove Datapoints from an Index.
      operationId: aiplatform.projects.locations.indexes.removeDatapoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1RemoveDatapointsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1RemoveDatapointsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.indexes.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.indexes.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.indexes.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.indexes.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.indexes.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores:
    parameters: *ref_1
    get:
      description: Lists MetadataStores for a Location.
      operationId: aiplatform.projects.locations.metadataStores.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListMetadataStoresResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: Initializes a MetadataStore, including allocation of resources.
      operationId: aiplatform.projects.locations.metadataStores.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataStore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: metadataStoreId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}:
    parameters: *ref_1
    get:
      description: Retrieves a specific MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataStore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a single MetadataStore and all its child resources (Artifacts,
        Executions, and Contexts).
      operationId: aiplatform.projects.locations.metadataStores.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts/{artifactsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts/{artifactsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts/{artifactsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts/{artifactsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts/{artifactsId}:
    parameters: *ref_1
    delete:
      description: Deletes an Artifact.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
    patch:
      description: Updates a stored Artifact.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Retrieves a specific Artifact.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts:purge:
    parameters: *ref_1
    post:
      description: Purges Artifacts.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1PurgeArtifactsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts:
    parameters: *ref_1
    post:
      description: Creates an Artifact associated with a MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: artifactId
          schema:
            type: string
    get:
      description: Lists Artifacts in the MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListArtifactsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts/{artifactsId}:queryArtifactLineageSubgraph:
    parameters: *ref_1
    get:
      description: >-
        Retrieves lineage of an Artifact represented through Artifacts and
        Executions connected by Event edges and returned as a LineageSubgraph.
      operationId: >-
        aiplatform.projects.locations.metadataStores.artifacts.queryArtifactLineageSubgraph
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1LineageSubgraph'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: maxHops
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/metadataSchemas:
    parameters: *ref_1
    post:
      description: Creates a MetadataSchema.
      operationId: aiplatform.projects.locations.metadataStores.metadataSchemas.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataSchema'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataSchema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: metadataSchemaId
          schema:
            type: string
    get:
      description: Lists MetadataSchemas.
      operationId: aiplatform.projects.locations.metadataStores.metadataSchemas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListMetadataSchemasResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/metadataSchemas/{metadataSchemasId}:
    parameters: *ref_1
    get:
      description: Retrieves a specific MetadataSchema.
      operationId: aiplatform.projects.locations.metadataStores.metadataSchemas.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataSchema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: metadataSchemasId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.metadataStores.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.metadataStores.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.metadataStores.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.metadataStores.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.metadataStores.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.metadataStores.contexts.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.metadataStores.contexts.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.metadataStores.contexts.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.metadataStores.contexts.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.metadataStores.contexts.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}:queryContextLineageSubgraph:
    parameters: *ref_1
    get:
      description: >-
        Retrieves Artifacts and Executions within the specified Context,
        connected by Event edges and returned as a LineageSubgraph.
      operationId: >-
        aiplatform.projects.locations.metadataStores.contexts.queryContextLineageSubgraph
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1LineageSubgraph'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}:addContextArtifactsAndExecutions:
    parameters: *ref_1
    post:
      description: >-
        Adds a set of Artifacts and Executions to a Context. If any of the
        Artifacts or Executions have already been added to a Context, they are
        simply skipped.
      operationId: >-
        aiplatform.projects.locations.metadataStores.contexts.addContextArtifactsAndExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}:
    parameters: *ref_1
    get:
      description: Retrieves a specific Context.
      operationId: aiplatform.projects.locations.metadataStores.contexts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a stored Context.
      operationId: aiplatform.projects.locations.metadataStores.contexts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    patch:
      description: Updates a stored Context.
      operationId: aiplatform.projects.locations.metadataStores.contexts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}:removeContextChildren:
    parameters: *ref_1
    post:
      description: >-
        Remove a set of children contexts from a parent Context. If any of the
        child Contexts were NOT added to the parent Context, they are simply
        skipped.
      operationId: >-
        aiplatform.projects.locations.metadataStores.contexts.removeContextChildren
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1RemoveContextChildrenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1RemoveContextChildrenResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts:
    parameters: *ref_1
    get:
      description: Lists Contexts on the MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.contexts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListContextsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: Creates a Context associated with a MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.contexts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: contextId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts:purge:
    parameters: *ref_1
    post:
      description: Purges Contexts.
      operationId: aiplatform.projects.locations.metadataStores.contexts.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PurgeContextsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}:addContextChildren:
    parameters: *ref_1
    post:
      description: >-
        Adds a set of Contexts as children to a parent Context. If any of the
        child Contexts have already been added to the parent Context, they are
        simply skipped. If this call would create a cycle or cause any Context
        to have more than 10 parents, the request will fail with an
        INVALID_ARGUMENT error.
      operationId: aiplatform.projects.locations.metadataStores.contexts.addContextChildren
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1AddContextChildrenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1AddContextChildrenResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions/{executionsId}:queryExecutionInputsAndOutputs:
    parameters: *ref_1
    get:
      description: >-
        Obtains the set of input and output Artifacts for this Execution, in the
        form of LineageSubgraph that also contains the Execution and connecting
        Events.
      operationId: >-
        aiplatform.projects.locations.metadataStores.executions.queryExecutionInputsAndOutputs
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1LineageSubgraph'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions:
    parameters: *ref_1
    post:
      description: Creates an Execution associated with a MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.executions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: executionId
          schema:
            type: string
    get:
      description: Lists Executions in the MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.executions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListExecutionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions/{executionsId}:
    parameters: *ref_1
    patch:
      description: Updates a stored Execution.
      operationId: aiplatform.projects.locations.metadataStores.executions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: allowMissing
          schema:
            type: boolean
    get:
      description: Retrieves a specific Execution.
      operationId: aiplatform.projects.locations.metadataStores.executions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes an Execution.
      operationId: aiplatform.projects.locations.metadataStores.executions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions:purge:
    parameters: *ref_1
    post:
      description: Purges Executions.
      operationId: aiplatform.projects.locations.metadataStores.executions.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1PurgeExecutionsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions/{executionsId}:addExecutionEvents:
    parameters: *ref_1
    post:
      description: >-
        Adds Events to the specified Execution. An Event indicates whether an
        Artifact was used as an input or output for an Execution. If an Event
        already exists between the Execution and the Artifact, the Event is
        skipped.
      operationId: >-
        aiplatform.projects.locations.metadataStores.executions.addExecutionEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1AddExecutionEventsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1AddExecutionEventsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions/{executionsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.metadataStores.executions.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions/{executionsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.metadataStores.executions.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: >-
        aiplatform.projects.locations.metadataStores.executions.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions/{executionsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: >-
        aiplatform.projects.locations.metadataStores.executions.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions/{executionsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.metadataStores.executions.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.pipelineJobs.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.pipelineJobs.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.pipelineJobs.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.pipelineJobs.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.pipelineJobs.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}:
    parameters: *ref_1
    get:
      description: Gets a PipelineJob.
      operationId: aiplatform.projects.locations.pipelineJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a PipelineJob.
      operationId: aiplatform.projects.locations.pipelineJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Cancels a PipelineJob. Starts asynchronous cancellation on the
        PipelineJob. The server makes a best effort to cancel the pipeline, but
        success is not guaranteed. Clients can use
        PipelineService.GetPipelineJob or other methods to check whether the
        cancellation succeeded or whether the pipeline completed despite
        cancellation. On successful cancellation, the PipelineJob is not
        deleted; instead it becomes a pipeline with a PipelineJob.error value
        with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`,
        and PipelineJob.state is set to `CANCELLED`.
      operationId: aiplatform.projects.locations.pipelineJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1CancelPipelineJobRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs:batchCancel:
    parameters: *ref_1
    post:
      description: >-
        Batch cancel PipelineJobs. Firstly the server will check if all the jobs
        are in non-terminal states, and skip the jobs that are already
        terminated. If the operation failed, none of the pipeline jobs are
        cancelled. The server will poll the states of all the pipeline jobs
        periodically to check the cancellation status. This operation will
        return an LRO.
      operationId: aiplatform.projects.locations.pipelineJobs.batchCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs:
    parameters: *ref_1
    get:
      description: Lists PipelineJobs in a Location.
      operationId: aiplatform.projects.locations.pipelineJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListPipelineJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a PipelineJob. A PipelineJob will run immediately when created.
      operationId: aiplatform.projects.locations.pipelineJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pipelineJobId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs:batchDelete:
    parameters: *ref_1
    post:
      description: >-
        Batch deletes PipelineJobs The Operation is atomic. If it fails, none of
        the PipelineJobs are deleted. If it succeeds, all of the PipelineJobs
        are deleted.
      operationId: aiplatform.projects.locations.pipelineJobs.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/nasJobs/{nasJobsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Cancels a NasJob. Starts asynchronous cancellation on the NasJob. The
        server makes a best effort to cancel the job, but success is not
        guaranteed. Clients can use JobService.GetNasJob or other methods to
        check whether the cancellation succeeded or whether the job completed
        despite cancellation. On successful cancellation, the NasJob is not
        deleted; instead it becomes a job with a NasJob.error value with a
        google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
        NasJob.state is set to `CANCELLED`.
      operationId: aiplatform.projects.locations.nasJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CancelNasJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nasJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/nasJobs/{nasJobsId}:
    parameters: *ref_1
    get:
      description: Gets a NasJob
      operationId: aiplatform.projects.locations.nasJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nasJobsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a NasJob.
      operationId: aiplatform.projects.locations.nasJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nasJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/nasJobs:
    parameters: *ref_1
    get:
      description: Lists NasJobs in a Location.
      operationId: aiplatform.projects.locations.nasJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListNasJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a NasJob
      operationId: aiplatform.projects.locations.nasJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/nasJobs/{nasJobsId}/nasTrialDetails:
    parameters: *ref_1
    get:
      description: List top NasTrialDetails of a NasJob.
      operationId: aiplatform.projects.locations.nasJobs.nasTrialDetails.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListNasTrialDetailsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nasJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/nasJobs/{nasJobsId}/nasTrialDetails/{nasTrialDetailsId}:
    parameters: *ref_1
    get:
      description: Gets a NasTrialDetail.
      operationId: aiplatform.projects.locations.nasJobs.nasTrialDetails.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrialDetail'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nasJobsId
          required: true
          schema:
            type: string
        - in: path
          name: nasTrialDetailsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:
    parameters: *ref_1
    patch:
      description: Updates a Model.
      operationId: aiplatform.projects.locations.models.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a Model. A model cannot be deleted if any Endpoint resource has
        a DeployedModel based on the model in its deployed_models field.
      operationId: aiplatform.projects.locations.models.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
    get:
      description: Gets a Model.
      operationId: aiplatform.projects.locations.models.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models:
    parameters: *ref_1
    get:
      description: Lists Models in a Location.
      operationId: aiplatform.projects.locations.models.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:mergeVersionAliases:
    parameters: *ref_1
    post:
      description: Merges a set of aliases for a Model version.
      operationId: aiplatform.projects.locations.models.mergeVersionAliases
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1MergeVersionAliasesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: aiplatform.projects.locations.models.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: aiplatform.projects.locations.models.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models:upload:
    parameters: *ref_1
    post:
      description: Uploads a Model artifact into Vertex AI.
      operationId: aiplatform.projects.locations.models.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1UploadModelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:export:
    parameters: *ref_1
    post:
      description: >-
        Exports a trained, exportable Model to a location specified by the user.
        A Model is considered to be exportable if it has at least one supported
        export format.
      operationId: aiplatform.projects.locations.models.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportModelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:listVersions:
    parameters: *ref_1
    get:
      description: Lists versions of the specified model.
      operationId: aiplatform.projects.locations.models.listVersions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListModelVersionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:updateExplanationDataset:
    parameters: *ref_1
    post:
      description: Incrementally update the dataset used for an examples model.
      operationId: aiplatform.projects.locations.models.updateExplanationDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1UpdateExplanationDatasetRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: aiplatform.projects.locations.models.testIamPermissions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: permissions
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:deleteVersion:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a Model version. Model version can only be deleted if there are
        no DeployedModels created from it. Deleting the only version in the
        Model is not allowed. Use DeleteModel for deleting the Model instead.
      operationId: aiplatform.projects.locations.models.deleteVersion
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models:copy:
    parameters: *ref_1
    post:
      description: >-
        Copies an already existing Vertex AI Model into the specified Location.
        The source Model must exist in the same Project. When copying custom
        Models, the users themselves are responsible for Model.metadata content
        to be region-agnostic, as well as making sure that any resources (e.g.
        files) it depends on remain accessible.
      operationId: aiplatform.projects.locations.models.copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CopyModelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.models.evaluations.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.models.evaluations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.models.evaluations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.models.evaluations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.models.evaluations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/slices:
    parameters: *ref_1
    get:
      description: Lists ModelEvaluationSlices in a ModelEvaluation.
      operationId: aiplatform.projects.locations.models.evaluations.slices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/slices/{slicesId}:batchImport:
    parameters: *ref_1
    post:
      description: Imports a list of externally generated EvaluatedAnnotations.
      operationId: aiplatform.projects.locations.models.evaluations.slices.batchImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: slicesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/slices/{slicesId}:
    parameters: *ref_1
    get:
      description: Gets a ModelEvaluationSlice.
      operationId: aiplatform.projects.locations.models.evaluations.slices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSlice
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: slicesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}:
    parameters: *ref_1
    get:
      description: Gets a ModelEvaluation.
      operationId: aiplatform.projects.locations.models.evaluations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations:import:
    parameters: *ref_1
    post:
      description: Imports an externally generated ModelEvaluation.
      operationId: aiplatform.projects.locations.models.evaluations.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1ImportModelEvaluationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations:
    parameters: *ref_1
    get:
      description: Lists ModelEvaluations in a Model.
      operationId: aiplatform.projects.locations.models.evaluations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListModelEvaluationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.models.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.models.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.models.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.models.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.models.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}:
    parameters: *ref_1
    get:
      description: Gets a HyperparameterTuningJob
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a HyperparameterTuningJob.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Cancels a HyperparameterTuningJob. Starts asynchronous cancellation on
        the HyperparameterTuningJob. The server makes a best effort to cancel
        the job, but success is not guaranteed. Clients can use
        JobService.GetHyperparameterTuningJob or other methods to check whether
        the cancellation succeeded or whether the job completed despite
        cancellation. On successful cancellation, the HyperparameterTuningJob is
        not deleted; instead it becomes a job with a
        HyperparameterTuningJob.error value with a google.rpc.Status.code of 1,
        corresponding to `Code.CANCELLED`, and HyperparameterTuningJob.state is
        set to `CANCELLED`.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs:
    parameters: *ref_1
    get:
      description: Lists HyperparameterTuningJobs in a Location.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
    post:
      description: Creates a HyperparameterTuningJob
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}/operations/{operationsId}:wait:
    parameters: *ref_1
    post:
      description: >-
        Waits until the specified long-running operation is done or reaches at
        most a specified timeout, returning the latest state. If the operation
        is already done, the latest state is immediately returned. If the
        timeout specified is greater than the default HTTP/RPC timeout, the
        HTTP/RPC timeout is used. If the server does not support this method, it
        returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a
        best-effort basis. It may return the latest state before the specified
        timeout (including immediately), meaning even an immediate response is
        no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.operations.wait
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
            format: google-duration
  /v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/endpoints/{endpointsId}:computeTokens:
    parameters: *ref_1
    post:
      description: Return a list of tokens based on the input text.
      operationId: aiplatform.endpoints.computeTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ComputeTokensRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ComputeTokensResponse
      parameters:
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/endpoints/{endpointsId}:generateContent:
    parameters: *ref_1
    post:
      description: Generate content with multimodal inputs.
      operationId: aiplatform.endpoints.generateContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1GenerateContentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1GenerateContentResponse
      parameters:
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/endpoints/{endpointsId}:countTokens:
    parameters: *ref_1
    post:
      description: Perform a token counting.
      operationId: aiplatform.endpoints.countTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CountTokensRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1CountTokensResponse
      parameters:
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/endpoints/{endpointsId}:streamGenerateContent:
    parameters: *ref_1
    post:
      description: Generate content with multimodal inputs with streaming support.
      operationId: aiplatform.endpoints.streamGenerateContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudAiplatformV1GenerateContentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1GenerateContentResponse
      parameters:
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
  /v1/datasets/{datasetsId}/datasetVersions/{datasetVersionsId}:
    parameters: *ref_1
    delete:
      description: Deletes a Dataset version.
      operationId: aiplatform.datasets.datasetVersions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetVersionsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a DatasetVersion.
      operationId: aiplatform.datasets.datasetVersions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DatasetVersion'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1DatasetVersion'
      parameters:
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetVersionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Dataset version.
      operationId: aiplatform.datasets.datasetVersions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1DatasetVersion'
      parameters:
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetVersionsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
  /v1/datasets/{datasetsId}/datasetVersions/{datasetVersionsId}:restore:
    parameters: *ref_1
    get:
      description: Restores a dataset version.
      operationId: aiplatform.datasets.datasetVersions.restore
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetVersionsId
          required: true
          schema:
            type: string
  /v1/datasets/{datasetsId}/datasetVersions:
    parameters: *ref_1
    get:
      description: Lists DatasetVersions in a Dataset.
      operationId: aiplatform.datasets.datasetVersions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListDatasetVersionsResponse
      parameters:
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: Create a version from a Dataset.
      operationId: aiplatform.datasets.datasetVersions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DatasetVersion'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/datasets/{datasetsId}:
    parameters: *ref_1
    patch:
      description: Updates a Dataset.
      operationId: aiplatform.datasets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      parameters:
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Dataset.
      operationId: aiplatform.datasets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      parameters:
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a Dataset.
      operationId: aiplatform.datasets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/datasets:
    parameters: *ref_1
    get:
      description: Lists Datasets in a Location.
      operationId: aiplatform.datasets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudAiplatformV1ListDatasetsResponse
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: Creates a Dataset.
      operationId: aiplatform.datasets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: query
          name: parent
          schema:
            type: string
