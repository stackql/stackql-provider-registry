openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Vertex AI API
  description: Train high-quality custom machine learning models with minimal machine learning expertise and effort.
  version: v1
  x-discovery-doc-revision: '20230808'
  x-generated-date: '2023-08-10'
externalDocs:
  url: 'https://cloud.google.com/vertex-ai/'
servers:
  - url: 'https://aiplatform.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud services and see the email address of your Google Account
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudAiplatformV1MigrateResourceResponse:
      properties:
        model:
          description: Migrated Model's resource name.
          type: string
        migratableResource:
          description: 'Before migration, the identifier in ml.googleapis.com, automl.googleapis.com or datalabeling.googleapis.com.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigratableResource'
        dataset:
          type: string
          description: Migrated Dataset's resource name.
      description: Describes a successfully migrated resource.
      id: GoogleCloudAiplatformV1MigrateResourceResponse
      type: object
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig:
      type: object
      properties:
        value:
          description: 'A unique specific value for a given feature. Example: `{ "value": { "string_value": "12345" } }`'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue'
        allValues:
          description: 'If all_values is set to true, then all possible labels of the keyed feature will have another slice computed. Example: `{"all_values":{"value":true}}`'
          type: boolean
        range:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange'
          description: 'A range of values for a numerical feature. Example: `{"range":{"low":10000.0,"high":50000.0}}` will capture 12345 and 23334 in the slice.'
      description: 'Specification message containing the config for this SliceSpec. When `kind` is selected as `value` and/or `range`, only a single slice will be computed. When `all_values` is present, a separate slice will be computed for each possible label/value for the corresponding key in `config`. Examples, with feature zip_code with values 12345, 23334, 88888 and feature country with values "US", "Canada", "Mexico" in the dataset: Example 1: { "zip_code": { "value": { "float_value": 12345.0 } } } A single slice for any data with zip_code 12345 in the dataset. Example 2: { "zip_code": { "range": { "low": 12345, "high": 20000 } } } A single slice containing data where the zip_codes between 12345 and 20000 For this example, data with the zip_code of 12345 will be in this slice. Example 3: { "zip_code": { "range": { "low": 10000, "high": 20000 } }, "country": { "value": { "string_value": "US" } } } A single slice containing data where the zip_codes between 10000 and 20000 has the country "US". For this example, data with the zip_code of 12345 and country "US" will be in this slice. Example 4: { "country": {"all_values": { "value": true } } } Three slices are computed, one for each unique country in the dataset. Example 5: { "country": { "all_values": { "value": true } }, "zip_code": { "value": { "float_value": 12345.0 } } } Three slices are computed, one for each unique country in the dataset where the zip_code is also 12345. For this example, data with zip_code 12345 and country "US" will be in one slice, zip_code 12345 and country "Canada" in another slice, and zip_code 12345 and country "Mexico" in another slice, totaling 3 slices.'
      id: GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig
    GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo:
      description: Further describes the output of the ExportModel. Supplements ExportModelRequest.OutputConfig.
      properties:
        imageOutputUri:
          type: string
          description: Output only. If the Model image is being exported to Google Container Registry or Artifact Registry this is the full path of the image created.
          readOnly: true
        artifactOutputUri:
          type: string
          readOnly: true
          description: 'Output only. If the Model artifact is being exported to Google Cloud Storage this is the full path of the directory created, into which the Model files are being written to.'
      id: GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo
      type: object
    GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse:
      id: GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse
      description: Response message for TensorboardService.ExportTensorboardTimeSeriesData.
      type: object
      properties:
        timeSeriesDataPoints:
          type: array
          description: The returned time series data points.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TimeSeriesDataPoint'
        nextPageToken:
          type: string
          description: 'A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
    GoogleCloudAiplatformV1SchemaVideoActionRecognitionAnnotation:
      id: GoogleCloudAiplatformV1SchemaVideoActionRecognitionAnnotation
      properties:
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        annotationSpecId:
          type: string
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
        timeSegment:
          description: 'This Annotation applies to the time period represented by the TimeSegment. If it''s not set, the Annotation applies to the whole video.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSegment'
      description: Annotation details specific to video action recognition.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecasting:
      properties:
        metadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata'
          description: The metadata information.
        inputs:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs'
          description: The input parameters of this TrainingJob.
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecasting
      description: A TrainingJob that trains and uploads an AutoML Forecasting Model.
    GoogleCloudAiplatformV1UndeployIndexOperationMetadata:
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      description: Runtime operation information for IndexEndpointService.UndeployIndex.
      id: GoogleCloudAiplatformV1UndeployIndexOperationMetadata
      type: object
    GoogleCloudAiplatformV1DoubleArray:
      description: A list of double values.
      id: GoogleCloudAiplatformV1DoubleArray
      type: object
      properties:
        values:
          type: array
          description: A list of double values.
          items:
            type: number
            format: double
    GoogleCloudAiplatformV1PipelineTaskDetail:
      id: GoogleCloudAiplatformV1PipelineTaskDetail
      description: The runtime detail of a task execution.
      type: object
      properties:
        execution:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
          readOnly: true
          description: Output only. The execution metadata of the task.
        taskId:
          description: Output only. The system generated ID of the task.
          format: int64
          type: string
          readOnly: true
        pipelineTaskStatus:
          description: Output only. A list of task status. This field keeps a record of task status evolving over time.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus'
        endTime:
          readOnly: true
          type: string
          description: Output only. Task end time.
          format: google-datetime
        error:
          description: Output only. The error that occurred during task execution. Only populated when the task's state is FAILED or CANCELLED.
          $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        executorDetail:
          description: Output only. The detailed execution info.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineTaskExecutorDetail'
          readOnly: true
        inputs:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetailArtifactList'
          type: object
          description: Output only. The runtime input artifacts of the task.
          readOnly: true
        startTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Task start time.
        taskName:
          readOnly: true
          description: Output only. The user specified name of the task that is defined in pipeline_spec.
          type: string
        parentTaskId:
          format: int64
          readOnly: true
          description: Output only. The id of the parent task if the task is within a component scope. Empty if the task is at the root level.
          type: string
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Task create time.
        outputs:
          description: Output only. The runtime output artifacts of the task.
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetailArtifactList'
          type: object
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - CANCEL_PENDING
            - CANCELLING
            - CANCELLED
            - FAILED
            - SKIPPED
            - NOT_TRIGGERED
          description: Output only. State of the task.
          enumDescriptions:
            - Unspecified.
            - Specifies pending state for the task.
            - Specifies task is being executed.
            - Specifies task completed successfully.
            - Specifies Task cancel is in pending state.
            - Specifies task is being cancelled.
            - Specifies task was cancelled.
            - Specifies task failed.
            - Specifies task was skipped due to cache hit.
            - Specifies that the task was not triggered because the task's trigger policy is not satisfied. The trigger policy is specified in the `condition` field of PipelineJob.pipeline_spec.
          type: string
          readOnly: true
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec:
      type: object
      id: GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec
      properties:
        trainTrialJobSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
          description: Required. The spec of a train trial job. The same spec applies to all train trials.
        frequency:
          type: integer
          description: 'Required. Frequency of search trials to start train stage. Top N [TrainTrialSpec.max_parallel_trial_count] search trials will be trained for every M [TrainTrialSpec.frequency] trials searched.'
          format: int32
        maxParallelTrialCount:
          format: int32
          description: Required. The maximum number of trials to run in parallel.
          type: integer
      description: Represent spec for train trials.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetrics:
      type: object
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetrics
      properties:
        exactMatch:
          description: The rate at which the input predicted strings exactly match their references.
          format: float
          type: number
    GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec:
      id: GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec
      properties:
        defaultValue:
          type: number
          format: double
          description: A default value for a `DISCRETE` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. It automatically rounds to the nearest feasible discrete point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
        values:
          type: array
          description: 'Required. A list of possible values. The list should be in increasing order and at least 1e-10 apart. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.'
          items:
            format: double
            type: number
      type: object
      description: Value specification for a parameter in `DISCRETE` type.
    GoogleCloudAiplatformV1ListMetadataStoresResponse:
      properties:
        metadataStores:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataStore'
          type: array
          description: The MetadataStores found for the Location.
        nextPageToken:
          description: 'A token, which can be sent as ListMetadataStoresRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.'
          type: string
      description: Response message for MetadataService.ListMetadataStores.
      id: GoogleCloudAiplatformV1ListMetadataStoresResponse
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics:
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics
      type: object
      properties:
        bleu:
          type: number
          format: float
          description: BLEU (bilingual evaluation understudy) scores based on sacrebleu implementation.
        rougeLSum:
          format: float
          description: ROUGE-L (Longest Common Subsequence) scoring at summary level.
          type: number
    GoogleCloudAiplatformV1SmoothGradConfig:
      properties:
        noisySampleCount:
          type: integer
          format: int32
          description: 'The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.'
        featureNoiseSigma:
          description: 'This is similar to noise_sigma, but provides additional flexibility. A separate noise sigma can be provided for each feature, which is useful if their distributions are different. No noise is added to features that are not set. If this field is unset, noise_sigma will be used for all features.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureNoiseSigma'
        noiseSigma:
          type: number
          format: float
          description: 'This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.'
      id: GoogleCloudAiplatformV1SmoothGradConfig
      description: 'Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf'
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata:
      properties:
        costMilliNodeHours:
          description: 'The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.'
          type: string
          format: int64
        successfulStopReason:
          enumDescriptions:
            - Should not be set.
            - The inputs.budgetMilliNodeHours had been reached.
            - 'Further training of the Model ceased to increase its quality, since it already has converged.'
          enum:
            - SUCCESSFUL_STOP_REASON_UNSPECIFIED
            - BUDGET_REACHED
            - MODEL_CONVERGED
          type: string
          description: 'For successful job completions, this is the reason why the job has finished.'
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetrics:
      description: Metrics for image segmentation evaluation results.
      type: object
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetrics
      properties:
        confidenceMetricsEntries:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry'
          type: array
          description: 'Metrics for each confidenceThreshold in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 Precision-recall curve can be derived from it.'
    GoogleCloudAiplatformV1TFRecordDestination:
      id: GoogleCloudAiplatformV1TFRecordDestination
      type: object
      description: The storage details for TFRecord output content.
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: Required. Google Cloud Storage location.
    GoogleCloudAiplatformV1ListSpecialistPoolsResponse:
      description: Response message for SpecialistPoolService.ListSpecialistPools.
      id: GoogleCloudAiplatformV1ListSpecialistPoolsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        specialistPools:
          description: A list of SpecialistPools that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SpecialistPool'
    GoogleCloudAiplatformV1Value:
      description: Value is the value of the field.
      properties:
        stringValue:
          type: string
          description: A string value.
        intValue:
          description: An integer value.
          format: int64
          type: string
        doubleValue:
          description: A double value.
          type: number
          format: double
      id: GoogleCloudAiplatformV1Value
      type: object
    GoogleCloudAiplatformV1ReadTensorboardUsageResponse:
      type: object
      properties:
        monthlyUsageData:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData'
          description: Maps year-month (YYYYMM) string to per month usage data.
          type: object
      description: Response message for TensorboardService.ReadTensorboardUsage.
      id: GoogleCloudAiplatformV1ReadTensorboardUsageResponse
    GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec:
      type: object
      description: The decay curve automated stopping rule builds a Gaussian Process Regressor to predict the final objective value of a Trial based on the already completed Trials and the intermediate measurements of the current Trial. Early stopping is requested for the current Trial if there is very low probability to exceed the optimal value found so far.
      id: GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec
      properties:
        useElapsedDuration:
          description: 'True if Measurement.elapsed_duration is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.step_count will be used as the x-axis.'
          type: boolean
    GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable:
      id: GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable
      type: object
      properties:
        bigqueryTablePath:
          description: 'The created BigQuery table to store logs. Customer could do their own query & analysis. Format: `bq://.model_deployment_monitoring_._`'
          type: string
        logSource:
          type: string
          enumDescriptions:
            - Unspecified source.
            - Logs coming from Training dataset.
            - Logs coming from Serving traffic.
          description: The source of log.
          enum:
            - LOG_SOURCE_UNSPECIFIED
            - TRAINING
            - SERVING
        logType:
          enumDescriptions:
            - Unspecified type.
            - Predict logs.
            - Explain logs.
          description: The type of log.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - PREDICT
            - EXPLAIN
          type: string
      description: ModelDeploymentMonitoringBigQueryTable specifies the BigQuery table name as well as some information of the logs stored in this table.
    GoogleCloudAiplatformV1NasJob:
      type: object
      id: GoogleCloudAiplatformV1NasJob
      properties:
        endTime:
          format: google-datetime
          description: 'Output only. Time when the NasJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.'
          readOnly: true
          type: string
        nasJobSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJobSpec'
          description: Required. The specification of a NasJob.
        state:
          type: string
          description: Output only. The detailed state of the job.
          enumDescriptions:
            - The job state is unspecified.
            - The job has been just created or resumed and processing has not yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - 'The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.'
            - The job has been cancelled.
            - 'The job has been stopped, and can be resumed.'
            - The job has expired.
            - 'The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.'
            - 'The job is partially succeeded, some results may be missing due to errors.'
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          readOnly: true
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time when the NasJob was most recently updated.
        name:
          type: string
          description: Output only. Resource name of the NasJob.
          readOnly: true
        displayName:
          type: string
          description: Required. The display name of the NasJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        enableRestrictedImageTraining:
          deprecated: true
          description: Optional. Enable a separation of Custom model training and restricted image training for tenant project.
          type: boolean
        createTime:
          readOnly: true
          type: string
          description: Output only. Time when the NasJob was created.
          format: google-datetime
        error:
          description: Output only. Only populated when job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcStatus'
        labels:
          type: object
          description: 'The labels with user-defined metadata to organize NasJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
          additionalProperties:
            type: string
        nasJobOutput:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJobOutput'
          description: Output only. Output of the NasJob.
        encryptionSpec:
          description: 'Customer-managed encryption key options for a NasJob. If this is set, then all resources created by the NasJob will be encrypted with the provided encryption key.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        startTime:
          type: string
          description: Output only. Time when the NasJob for the first time entered the `JOB_STATE_RUNNING` state.
          format: google-datetime
          readOnly: true
      description: Represents a Neural Architecture Search (NAS) job.
    GoogleCloudAiplatformV1SchemaPredictInstanceTextExtractionPredictionInstance:
      description: Prediction input format for Text Extraction.
      id: GoogleCloudAiplatformV1SchemaPredictInstanceTextExtractionPredictionInstance
      properties:
        mimeType:
          description: The MIME type of the text snippet. The supported MIME types are listed below. - text/plain
          type: string
        content:
          description: The text snippet to make the predictions on.
          type: string
        key:
          type: string
          description: 'This field is only used for batch prediction. If a key is provided, the batch prediction result will by mapped to this key. If omitted, then the batch prediction result will contain the entire input instance. Vertex AI will not check if keys in the request are duplicates, so it is up to the caller to ensure the keys are unique.'
      type: object
    GoogleCloudAiplatformV1ThresholdConfig:
      type: object
      properties:
        value:
          format: double
          description: 'Specify a threshold value that can trigger the alert. If this threshold config is for feature distribution distance: 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature.'
          type: number
      description: The config for feature monitoring threshold.
      id: GoogleCloudAiplatformV1ThresholdConfig
    GoogleCloudAiplatformV1SchemaPredictInstanceVideoActionRecognitionPredictionInstance:
      properties:
        timeSegmentEnd:
          type: string
          description: 'The end, exclusive, of the video''s time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video.'
        content:
          type: string
          description: The Google Cloud Storage location of the video on which to perform the prediction.
        timeSegmentStart:
          description: 'The beginning, inclusive, of the video''s time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision.'
          type: string
        mimeType:
          type: string
          description: 'The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime'
      type: object
      id: GoogleCloudAiplatformV1SchemaPredictInstanceVideoActionRecognitionPredictionInstance
      description: Prediction input format for Video Action Recognition.
    GoogleCloudAiplatformV1ModelExplanation:
      id: GoogleCloudAiplatformV1ModelExplanation
      type: object
      description: Aggregated explanation metrics for a Model over a set of instances.
      properties:
        meanAttributions:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Attribution'
          type: array
          description: 'Output only. Aggregated attributions explaining the Model''s prediction outputs over the set of instances. The attributions are grouped by outputs. For Models that predict only one output, such as regression Models that predict only one score, there is only one attibution that explains the predicted output. For Models that predict multiple outputs, such as multiclass Models that predict multiple classes, each element explains one specific item. Attribution.output_index can be used to identify which output this attribution is explaining. The baselineOutputValue, instanceOutputValue and featureAttributions fields are averaged over the test data. NOTE: Currently AutoML tabular classification Models produce only one attribution, which averages attributions over all the classes it predicts. Attribution.approximation_error is not populated.'
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig:
      type: object
      id: GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig
      description: Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's Dataset.
      properties:
        datasetDisplayName:
          description: Optional. Display name of the Dataset in Vertex AI. System will pick a display name if unspecified.
          type: string
        dataset:
          description: 'Required. Full resource name of data labeling Dataset. Format: `projects/{project}/datasets/{dataset}`.'
          type: string
        migrateDataLabelingAnnotatedDatasetConfigs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig'
          description: Optional. Configs for migrating AnnotatedDataset in datalabeling.googleapis.com to Vertex AI's SavedQuery. The specified AnnotatedDatasets have to belong to the datalabeling Dataset.
    GoogleCloudAiplatformV1ListSavedQueriesResponse:
      id: GoogleCloudAiplatformV1ListSavedQueriesResponse
      description: Response message for DatasetService.ListSavedQueries.
      properties:
        savedQueries:
          description: A list of SavedQueries that match the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SavedQuery'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleApiHttpBody:
      id: GoogleApiHttpBody
      type: object
      properties:
        data:
          type: string
          description: The HTTP request/response body as raw binary.
          format: byte
        contentType:
          description: The HTTP Content-Type header value specifying the content type of the body.
          type: string
        extensions:
          type: array
          description: Application specific response metadata. Must be set in the first response for streaming APIs.
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
      description: 'Message that represents an arbitrary HTTP body. It should only be used for payload formats that can''t be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.'
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs
      properties:
        tunableParameter:
          description: Trainer type for Vision TrainRequest.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter'
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD_HIGH_ACCURACY_1
            - CLOUD_LOW_LATENCY_1
            - CLOUD_1
            - MOBILE_TF_LOW_LATENCY_1
            - MOBILE_TF_VERSATILE_1
            - MOBILE_TF_HIGH_ACCURACY_1
            - CLOUD_STREAMING_1
            - SPINENET
            - YOLO
          enumDescriptions:
            - Should not be set.
            - 'A model best tailored to be used within Google Cloud, and which cannot be exported. Expected to have a higher latency, but should also have a higher prediction quality than other cloud models.'
            - 'A model best tailored to be used within Google Cloud, and which cannot be exported. Expected to have a low latency, but may have lower prediction quality than other cloud models.'
            - 'A model best tailored to be used within Google Cloud, and which cannot be exported. Compared to the CLOUD_HIGH_ACCURACY_1 and CLOUD_LOW_LATENCY_1 models above, it is expected to have higher prediction quality and lower latency.'
            - 'A model that, in addition to being available within Google Cloud can also be exported (see ModelService.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. Expected to have low latency, but may have lower prediction quality than other mobile models.'
            - 'A model that, in addition to being available within Google Cloud can also be exported (see ModelService.ExportModel) and used on a mobile or edge device with TensorFlow afterwards.'
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. Expected to have a higher latency, but should also have a higher prediction quality than other mobile models.'
            - 'A model best tailored to be used within Google Cloud, and which cannot be exported. Expected to best support predictions in streaming with lower latency and lower prediction quality than other cloud models.'
            - 'SpineNet for Model Garden training with customizable hyperparameters. Best tailored to be used within Google Cloud, and cannot be exported externally.'
            - 'YOLO for Model Garden training with customizable hyperparameters. Best tailored to be used within Google Cloud, and cannot be exported externally.'
          type: string
        uptrainBaseModelId:
          description: 'The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType.'
          type: string
        budgetMilliNodeHours:
          format: int64
          description: 'The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000 which represents one day in wall time, considering 9 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.'
          type: string
        disableEarlyStopping:
          type: boolean
          description: 'Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Object Detection might stop training before the entire training budget has been used.'
    GoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult:
      id: GoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult
      properties:
        categoryMask:
          type: string
          description: 'A PNG image where each pixel in the mask represents the category in which the pixel in the original image was predicted to belong to. The size of this image will be the same as the original image. The mapping between the AnntoationSpec and the color can be found in model''s metadata. The model will choose the most likely category and if none of the categories reach the confidence threshold, the pixel will be marked as background.'
        confidenceMask:
          description: 'A one channel image which is encoded as an 8bit lossless PNG. The size of the image will be the same as the original image. For a specific pixel, darker color means less confidence in correctness of the cateogry in the categoryMask for the corresponding pixel. Black means no confidence and white means complete confidence.'
          type: string
      description: Prediction output format for Image Segmentation.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation:
      type: object
      properties:
        columnName:
          type: string
      description: 'Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value.'
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation
    GoogleCloudAiplatformV1UpdateSpecialistPoolOperationMetadata:
      id: GoogleCloudAiplatformV1UpdateSpecialistPoolOperationMetadata
      description: Runtime operation metadata for SpecialistPoolService.UpdateSpecialistPool.
      properties:
        specialistPool:
          readOnly: true
          type: string
          description: 'Output only. The name of the SpecialistPool to which the specialists are being added. Format: `projects/{project_id}/locations/{location_id}/specialistPools/{specialist_pool}`'
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1DeployedIndexRef:
      type: object
      description: Points to a DeployedIndex.
      id: GoogleCloudAiplatformV1DeployedIndexRef
      properties:
        deployedIndexId:
          description: Immutable. The ID of the DeployedIndex in the above IndexEndpoint.
          type: string
        indexEndpoint:
          description: Immutable. A resource name of the IndexEndpoint.
          type: string
    GoogleCloudLocationLocation:
      type: object
      description: A resource that represents a Google Cloud location.
      id: GoogleCloudLocationLocation
      properties:
        metadata:
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity:
      description: A duration of time expressed in time granularity units.
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity
      properties:
        quantity:
          description: 'The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1.'
          format: int64
          type: string
        unit:
          description: 'The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year"'
          type: string
    GoogleCloudAiplatformV1ListOptimalTrialsResponse:
      type: object
      id: GoogleCloudAiplatformV1ListOptimalTrialsResponse
      description: Response message for VizierService.ListOptimalTrials.
      properties:
        optimalTrials:
          description: 'The pareto-optimal Trials for multiple objective Study or the optimal trial for single objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency'
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
          type: array
    GoogleCloudAiplatformV1PredefinedSplit:
      type: object
      id: GoogleCloudAiplatformV1PredefinedSplit
      description: 'Assigns input data to training, validation, and test sets based on the value of a provided key. Supported only for tabular Datasets.'
      properties:
        key:
          type: string
          description: 'Required. The key is a name of one of the Dataset''s data columns. The value of the key (either the label''s value or value in the column) must be one of {`training`, `validation`, `test`}, and it defines to which set the given piece of data is assigned. If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline.'
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity:
      type: object
      properties:
        unit:
          description: 'The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year"'
          type: string
        quantity:
          description: 'The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1.'
          format: int64
          type: string
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity
      description: A duration of time expressed in time granularity units.
    GoogleCloudAiplatformV1TimestampSplit:
      properties:
        key:
          type: string
          description: 'Required. The key is a name of one of the Dataset''s data columns. The values of the key (the values in the column) must be in RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z). If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline.'
        trainingFraction:
          format: double
          type: number
          description: The fraction of the input data that is to be used to train the Model.
        validationFraction:
          format: double
          type: number
          description: The fraction of the input data that is to be used to validate the Model.
        testFraction:
          type: number
          format: double
          description: The fraction of the input data that is to be used to evaluate the Model.
      id: GoogleCloudAiplatformV1TimestampSplit
      type: object
      description: 'Assigns input data to training, validation, and test sets based on a provided timestamps. The youngest data pieces are assigned to training set, next to validation set, and the oldest to the test set. Supported only for tabular Datasets.'
    GoogleCloudAiplatformV1ReadIndexDatapointsResponse:
      description: The response message for MatchService.ReadIndexDatapoints.
      id: GoogleCloudAiplatformV1ReadIndexDatapointsResponse
      type: object
      properties:
        datapoints:
          description: The result list of datapoints.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint'
    GoogleCloudAiplatformV1BigQuerySource:
      properties:
        inputUri:
          type: string
          description: 'Required. BigQuery URI to a table, up to 2000 characters long. Accepted forms: * BigQuery path. For example: `bq://projectId.bqDatasetId.bqTableId`.'
      id: GoogleCloudAiplatformV1BigQuerySource
      description: The BigQuery location for the input content.
      type: object
    GoogleCloudAiplatformV1UserActionReference:
      type: object
      properties:
        dataLabelingJob:
          type: string
          description: 'For API calls that start a LabelingJob. Resource name of the LabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`'
        operation:
          type: string
          description: 'For API calls that return a long running operation. Resource name of the long running operation. Format: `projects/{project}/locations/{location}/operations/{operation}`'
        method:
          type: string
          description: 'The method name of the API RPC call. For example, "/google.cloud.aiplatform.{apiVersion}.DatasetService.CreateDataset"'
      id: GoogleCloudAiplatformV1UserActionReference
      description: References an API call. It contains more information about long running operation and Jobs that are triggered by the API call.
    GoogleCloudAiplatformV1SchemaVideoDataItem:
      properties:
        mimeType:
          readOnly: true
          description: 'Output only. The mime type of the content of the video. Only the videos in below listed mime types are supported. Supported mime_type: - video/mp4 - video/avi - video/quicktime'
          type: string
        gcsUri:
          description: Required. Google Cloud Storage URI points to the original video in user's bucket. The video is up to 50 GB in size and up to 3 hour in duration.
          type: string
      type: object
      description: Payload of Video DataItem.
      id: GoogleCloudAiplatformV1SchemaVideoDataItem
    GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec:
      description: Value specification for a parameter in `DOUBLE` type.
      id: GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec
      type: object
      properties:
        defaultValue:
          type: number
          format: double
          description: A default value for a `DOUBLE` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
        minValue:
          format: double
          type: number
          description: Required. Inclusive minimum value of the parameter.
        maxValue:
          type: number
          description: Required. Inclusive maximum value of the parameter.
          format: double
    GoogleCloudAiplatformV1BoolArray:
      type: object
      properties:
        values:
          description: A list of bool values.
          type: array
          items:
            type: boolean
      id: GoogleCloudAiplatformV1BoolArray
      description: A list of boolean values.
    GoogleCloudAiplatformV1SuggestTrialsResponse:
      properties:
        studyState:
          description: The state of the Study.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
            - COMPLETED
          type: string
          enumDescriptions:
            - The study state is unspecified.
            - The study is active.
            - The study is stopped due to an internal error.
            - The study is done when the service exhausts the parameter search space or max_trial_count is reached.
        trials:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
          description: A list of Trials.
          type: array
        startTime:
          description: The time at which the operation was started.
          format: google-datetime
          type: string
        endTime:
          format: google-datetime
          description: The time at which operation processing completed.
          type: string
      id: GoogleCloudAiplatformV1SuggestTrialsResponse
      description: Response message for VizierService.SuggestTrials.
      type: object
    GoogleCloudAiplatformV1DeployIndexResponse:
      type: object
      properties:
        deployedIndex:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndex'
          description: The DeployedIndex that had been deployed in the IndexEndpoint.
      id: GoogleCloudAiplatformV1DeployIndexResponse
      description: Response message for IndexEndpointService.DeployIndex.
    GoogleCloudAiplatformV1ListModelsResponse:
      type: object
      id: GoogleCloudAiplatformV1ListModelsResponse
      properties:
        nextPageToken:
          type: string
          description: A token to retrieve next page of results. Pass to ListModelsRequest.page_token to obtain that page.
        models:
          description: List of Models in the requested page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
      description: Response message for ModelService.ListModels
    GoogleCloudAiplatformV1DeleteFeatureValuesResponse:
      description: Response message for FeaturestoreService.DeleteFeatureValues.
      type: object
      properties:
        selectEntity:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity'
          description: Response for request specifying the entities to delete
        selectTimeRangeAndFeature:
          description: Response for request specifying time range and feature
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature'
      id: GoogleCloudAiplatformV1DeleteFeatureValuesResponse
    GoogleCloudAiplatformV1WriteFeatureValuesRequest:
      description: Request message for FeaturestoreOnlineServingService.WriteFeatureValues.
      properties:
        payloads:
          description: 'Required. The entities to be written. Up to 100,000 feature values can be written across all `payloads`.'
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1WriteFeatureValuesPayload'
          type: array
      type: object
      id: GoogleCloudAiplatformV1WriteFeatureValuesRequest
    GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec:
      properties:
        maxStepCount:
          type: string
          format: int64
          description: 'Steps used in predicting the final objective for early stopped trials. In general, it''s set to be the same as the defined steps in training / tuning. If not defined, it will learn it from the completed trials. When use_steps is false, this field is set to the maximum elapsed seconds.'
        minMeasurementCount:
          description: 'The minimal number of measurements in a Trial. Early-stopping checks will not trigger if less than min_measurement_count+1 completed trials or pending trials with less than min_measurement_count measurements. If not defined, the default value is 5.'
          type: string
          format: int64
        updateAllStoppedTrials:
          description: 'ConvexAutomatedStoppingSpec by default only updates the trials that needs to be early stopped using a newly trained auto-regressive model. When this flag is set to True, all stopped trials from the beginning are potentially updated in terms of their `final_measurement`. Also, note that the training logic of autoregressive models is different in this case. Enabling this option has shown better results and this may be the default option in the future.'
          type: boolean
        useElapsedDuration:
          description: 'This bool determines whether or not the rule is applied based on elapsed_secs or steps. If use_elapsed_duration==false, the early stopping decision is made according to the predicted objective values according to the target steps. If use_elapsed_duration==true, elapsed_secs is used instead of steps. Also, in this case, the parameters max_num_steps and min_num_steps are overloaded to contain max_elapsed_seconds and min_elapsed_seconds.'
          type: boolean
        learningRateParameterName:
          description: The hyper-parameter name used in the tuning job that stands for learning rate. Leave it blank if learning rate is not in a parameter in tuning. The learning_rate is used to estimate the objective value of the ongoing trial.
          type: string
        minStepCount:
          format: int64
          description: 'Minimum number of steps for a trial to complete. Trials which do not have a measurement with step_count > min_step_count won''t be considered for early stopping. It''s ok to set it to 0, and a trial can be early stopped at any stage. By default, min_step_count is set to be one-tenth of the max_step_count. When use_elapsed_duration is true, this field is set to the minimum elapsed seconds.'
          type: string
      description: 'Configuration for ConvexAutomatedStoppingSpec. When there are enough completed trials (configured by min_measurement_count), for pending trials with enough measurements and steps, the policy first computes an overestimate of the objective value at max_num_steps according to the slope of the incomplete objective value curve. No prediction can be made if the curve is completely flat. If the overestimation is worse than the best objective value of the completed trials, this pending trial will be early-stopped, but a last measurement will be added to the pending trial with max_num_steps and predicted objective value from the autoregression model.'
      type: object
      id: GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs:
      properties:
        budgetMilliNodeHours:
          type: string
          format: int64
          description: 'The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. Or actual_wall_clock_hours = train_budget_milli_node_hours / (number_of_nodes_involved * 1000) For modelType `cloud-high-accuracy-1`(default), the budget must be between 20,000 and 2,000,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time (1000 milli * 24 hours * 8 nodes).'
        modelType:
          type: string
          enumDescriptions:
            - Should not be set.
            - 'A model to be used via prediction calls to uCAIP API. Expected to have a higher latency, but should also have a higher prediction quality than other models.'
            - A model to be used via prediction calls to uCAIP API. Expected to have a lower latency but relatively lower prediction quality.
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow model and used on a mobile or edge device afterwards. Expected to have low latency, but may have lower prediction quality than other mobile models.'
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD_HIGH_ACCURACY_1
            - CLOUD_LOW_ACCURACY_1
            - MOBILE_TF_LOW_LATENCY_1
        baseModelId:
          type: string
          description: 'The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.'
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs
      type: object
    GoogleCloudAiplatformV1SampleConfig:
      properties:
        sampleStrategy:
          enum:
            - SAMPLE_STRATEGY_UNSPECIFIED
            - UNCERTAINTY
          enumDescriptions:
            - Default will be treated as UNCERTAINTY.
            - Sample the most uncertain data to label.
          description: Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.
          type: string
        initialBatchSamplePercentage:
          description: The percentage of data needed to be labeled in the first batch.
          format: int32
          type: integer
        followingBatchSamplePercentage:
          format: int32
          description: The percentage of data needed to be labeled in each following batch (except the first batch).
          type: integer
      type: object
      description: 'Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.'
      id: GoogleCloudAiplatformV1SampleConfig
    GoogleCloudAiplatformV1RemoveContextChildrenRequest:
      properties:
        childContexts:
          description: The resource names of the child Contexts.
          items:
            type: string
          type: array
      id: GoogleCloudAiplatformV1RemoveContextChildrenRequest
      description: Request message for MetadataService.DeleteContextChildrenRequest.
      type: object
    GoogleCloudAiplatformV1MutateDeployedIndexOperationMetadata:
      description: Runtime operation information for IndexEndpointService.MutateDeployedIndex.
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
        deployedIndexId:
          description: The unique index id specified by user
          type: string
      id: GoogleCloudAiplatformV1MutateDeployedIndexOperationMetadata
      type: object
    GoogleCloudAiplatformV1ExportDataOperationMetadata:
      type: object
      description: Runtime operation information for DatasetService.ExportData.
      id: GoogleCloudAiplatformV1ExportDataOperationMetadata
      properties:
        gcsOutputDirectory:
          type: string
          description: A Google Cloud Storage directory which path ends with '/'. The exported data is stored in the directory.
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField:
      id: GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField
      properties:
        fieldName:
          type: string
          description: Required. The name of the field in the CSV header or the name of the column in BigQuery table. The naming restriction is the same as Feature.name.
      type: object
      description: Describe pass-through fields in read_instance source.
    GoogleCloudAiplatformV1UndeployIndexResponse:
      properties: {}
      description: Response message for IndexEndpointService.UndeployIndex.
      type: object
      id: GoogleCloudAiplatformV1UndeployIndexResponse
    GoogleCloudAiplatformV1CopyModelRequest:
      properties:
        parentModel:
          description: 'Optional. Specify this field to copy source_model into this existing Model as a new version. Format: `projects/{project}/locations/{location}/models/{model}`'
          type: string
        sourceModel:
          description: 'Required. The resource name of the Model to copy. That Model must be in the same Project. Format: `projects/{project}/locations/{location}/models/{model}`'
          type: string
        modelId:
          description: 'Optional. Copy source_model into a new Model with this ID. The ID will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.'
          type: string
        encryptionSpec:
          description: 'Customer-managed encryption key options. If this is set, then the Model copy will be encrypted with the provided encryption key.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
      description: Request message for ModelService.CopyModel.
      id: GoogleCloudAiplatformV1CopyModelRequest
      type: object
    GoogleCloudAiplatformV1AnnotationSpec:
      description: Identifies a concept with which DataItems may be annotated with.
      id: GoogleCloudAiplatformV1AnnotationSpec
      type: object
      properties:
        etag:
          description: 'Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
          type: string
        createTime:
          readOnly: true
          description: Output only. Timestamp when this AnnotationSpec was created.
          type: string
          format: google-datetime
        name:
          readOnly: true
          type: string
          description: Output only. Resource name of the AnnotationSpec.
        updateTime:
          readOnly: true
          description: Output only. Timestamp when AnnotationSpec was last updated.
          format: google-datetime
          type: string
        displayName:
          type: string
          description: Required. The user-defined name of the AnnotationSpec. The name can be up to 128 characters long and can consist of any UTF-8 characters.
    GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors:
      description: Nearest neighbors for one query.
      properties:
        neighbors:
          type: array
          description: All its neighbors.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FindNeighborsResponseNeighbor'
        id:
          type: string
          description: The ID of the query datapoint.
      id: GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors
      type: object
    GoogleCloudAiplatformV1SchemaPredictionResultError:
      type: object
      properties:
        status:
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          enumDescriptions:
            - 'Not an error; returned on success. HTTP Mapping: 200 OK'
            - 'The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request'
            - 'Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error'
            - 'The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request'
            - 'The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout'
            - 'Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found'
            - 'The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict'
            - 'The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden'
            - 'The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized'
            - 'Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests'
            - 'The operation was rejected because the system is not in a state required for the operation''s execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an "rmdir" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request'
            - 'The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict'
            - 'The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request'
            - 'The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented'
            - 'Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error'
            - 'The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable'
            - 'Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error'
          description: Error status. This will be serialized into the enum name e.g. "NOT_FOUND".
          type: string
        message:
          type: string
          description: Error message with additional details.
      id: GoogleCloudAiplatformV1SchemaPredictionResultError
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsSummarizationEvaluationMetrics:
      properties:
        rougeLSum:
          type: number
          description: ROUGE-L (Longest Common Subsequence) scoring at summary level.
          format: float
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsSummarizationEvaluationMetrics
      type: object
    GoogleCloudAiplatformV1CopyModelOperationMetadata:
      type: object
      description: Details of ModelService.CopyModel operation.
      id: GoogleCloudAiplatformV1CopyModelOperationMetadata
      properties:
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation
      type: object
      description: 'Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.'
      properties:
        invalidValuesAllowed:
          description: 'If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.'
          type: boolean
        timeFormat:
          description: 'The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)'
          type: string
        columnName:
          type: string
    GoogleCloudAiplatformV1NasTrial:
      properties:
        state:
          description: Output only. The detailed state of the NasTrial.
          enumDescriptions:
            - The NasTrial state is unspecified.
            - 'Indicates that a specific NasTrial has been requested, but it has not yet been suggested by the service.'
            - Indicates that the NasTrial has been suggested.
            - Indicates that the NasTrial should stop according to the service.
            - Indicates that the NasTrial is completed successfully.
            - Indicates that the NasTrial should not be attempted again. The service will set a NasTrial to INFEASIBLE when it's done but missing the final_measurement.
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - REQUESTED
            - ACTIVE
            - STOPPING
            - SUCCEEDED
            - INFEASIBLE
        startTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Time when the NasTrial was started.
        id:
          type: string
          readOnly: true
          description: Output only. The identifier of the NasTrial assigned by the service.
        endTime:
          description: Output only. Time when the NasTrial's status changed to `SUCCEEDED` or `INFEASIBLE`.
          readOnly: true
          format: google-datetime
          type: string
        finalMeasurement:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Measurement'
          description: Output only. The final measurement containing the objective value.
          readOnly: true
      description: Represents a uCAIP NasJob trial.
      type: object
      id: GoogleCloudAiplatformV1NasTrial
    GoogleCloudAiplatformV1GcsDestination:
      type: object
      id: GoogleCloudAiplatformV1GcsDestination
      properties:
        outputUriPrefix:
          type: string
          description: 'Required. Google Cloud Storage URI to output directory. If the uri doesn''t end with ''/'', a ''/'' will be automatically appended. The directory is created if it doesn''t exist.'
      description: The Google Cloud Storage location where the output is to be written to.
    GoogleCloudAiplatformV1MutateDeployedModelRequest:
      properties:
        updateMask:
          description: Required. The update mask applies to the resource. See google.protobuf.FieldMask.
          format: google-fieldmask
          type: string
        deployedModel:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
          description: 'Required. The DeployedModel to be mutated within the Endpoint. Only the following fields can be mutated: * `min_replica_count` in either DedicatedResources or AutomaticResources * `max_replica_count` in either DedicatedResources or AutomaticResources * autoscaling_metric_specs * `disable_container_logging` (v1 only) * `enable_container_logging` (v1beta1 only)'
      description: Request message for EndpointService.MutateDeployedModel.
      type: object
      id: GoogleCloudAiplatformV1MutateDeployedModelRequest
    GoogleCloudAiplatformV1ExportModelResponse:
      properties: {}
      type: object
      description: Response message of ModelService.ExportModel operation.
      id: GoogleCloudAiplatformV1ExportModelResponse
    GoogleCloudAiplatformV1MetadataStore:
      description: Instance of a metadata store. Contains a set of metadata that can be queried.
      type: object
      properties:
        encryptionSpec:
          description: 'Customer-managed encryption key spec for a Metadata Store. If set, this Metadata Store and all sub-resources of this Metadata Store are secured using this key.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        name:
          readOnly: true
          description: Output only. The resource name of the MetadataStore instance.
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this MetadataStore was last updated.
          type: string
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Timestamp when this MetadataStore was created.
        state:
          description: Output only. State information of the MetadataStore.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataStoreMetadataStoreState'
          readOnly: true
        description:
          description: Description of the MetadataStore.
          type: string
      id: GoogleCloudAiplatformV1MetadataStore
    GoogleCloudAiplatformV1MergeVersionAliasesRequest:
      properties:
        versionAliases:
          type: array
          description: 'Required. The set of version aliases to merge. The alias should be at most 128 characters, and match `a-z{0,126}[a-z-0-9]`. Add the `-` prefix to an alias means removing that alias from the version. `-` is NOT counted in the 128 characters. Example: `-golden` means removing the `golden` alias from the version. There is NO ordering in aliases, which means 1) The aliases returned from GetModel API might not have the exactly same order from this MergeVersionAliases API. 2) Adding and deleting the same alias in the request is not recommended, and the 2 operations will be cancelled out.'
          items:
            type: string
      description: Request message for ModelService.MergeVersionAliases.
      type: object
      id: GoogleCloudAiplatformV1MergeVersionAliasesRequest
    GoogleCloudAiplatformV1ListEntityTypesResponse:
      id: GoogleCloudAiplatformV1ListEntityTypesResponse
      properties:
        nextPageToken:
          description: 'A token, which can be sent as ListEntityTypesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        entityTypes:
          description: The EntityTypes matching the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityType'
      description: Response message for FeaturestoreService.ListEntityTypes.
      type: object
    GoogleCloudAiplatformV1BatchPredictionJobOutputConfig:
      id: GoogleCloudAiplatformV1BatchPredictionJobOutputConfig
      properties:
        bigqueryDestination:
          description: 'The BigQuery project or dataset location where the output is to be written to. If project is provided, a new dataset is created with name `prediction__` where is made BigQuery-dataset-name compatible (for example, most special characters become underscores), and timestamp is in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601" format. In the dataset two tables will be created, `predictions`, and `errors`. If the Model has both instance and prediction schemata defined then the tables have columns as follows: The `predictions` table contains instances for which the prediction succeeded, it has columns as per a concatenation of the Model''s instance and prediction schemata. The `errors` table contains rows for which the prediction has failed, it has instance columns, as per the instance schema, followed by a single "errors" column, which as values has google.rpc.Status represented as a STRUCT, and containing only `code` and `message`.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination'
        predictionsFormat:
          description: 'Required. The format in which Vertex AI gives the predictions, must be one of the Model''s supported_output_storage_formats.'
          type: string
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: 'The Cloud Storage location of the directory where the output is to be written to. In the given directory a new directory is created. Its name is `prediction--`, where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. Inside of it files `predictions_0001.`, `predictions_0002.`, ..., `predictions_N.` are created where `` depends on chosen predictions_format, and N may equal 0001 and depends on the total number of successfully predicted instances. If the Model has both instance and prediction schemata defined then each such file contains predictions as per the predictions_format. If prediction for any instance failed (partially or completely), then an additional `errors_0001.`, `errors_0002.`,..., `errors_N.` files are created (N depends on total number of failed predictions). These files contain the failed instances, as per their schema, followed by an additional `error` field which as value has google.rpc.Status containing only `code` and `message` fields.'
      type: object
      description: 'Configures the output of BatchPredictionJob. See Model.supported_output_storage_formats for supported output formats, and how predictions are expressed via any of them.'
    GoogleCloudAiplatformV1MetadataSchema:
      id: GoogleCloudAiplatformV1MetadataSchema
      properties:
        schema:
          type: string
          description: 'Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)'
        description:
          type: string
          description: Description of the Metadata Schema
        schemaType:
          type: string
          enum:
            - METADATA_SCHEMA_TYPE_UNSPECIFIED
            - ARTIFACT_TYPE
            - EXECUTION_TYPE
            - CONTEXT_TYPE
          description: The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema.
          enumDescriptions:
            - Unspecified type for the MetadataSchema.
            - A type indicating that the MetadataSchema will be used by Artifacts.
            - A typee indicating that the MetadataSchema will be used by Executions.
            - A state indicating that the MetadataSchema will be used by Contexts.
        createTime:
          readOnly: true
          description: Output only. Timestamp when this MetadataSchema was created.
          type: string
          format: google-datetime
        name:
          type: string
          description: Output only. The resource name of the MetadataSchema.
          readOnly: true
        schemaVersion:
          description: 'The version of the MetadataSchema. The version''s format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc.'
          type: string
      type: object
      description: Instance of a general MetadataSchema.
    GoogleCloudAiplatformV1DeleteFeatureValuesRequest:
      id: GoogleCloudAiplatformV1DeleteFeatureValuesRequest
      description: Request message for FeaturestoreService.DeleteFeatureValues.
      properties:
        selectEntity:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity'
          description: Select feature values to be deleted by specifying entities.
        selectTimeRangeAndFeature:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature'
          description: Select feature values to be deleted by specifying time range and features.
      type: object
    GoogleCloudAiplatformV1NasTrialDetail:
      type: object
      description: 'Represents a NasTrial details along with its parameters. If there is a corresponding train NasTrial, the train NasTrial is also returned.'
      properties:
        name:
          type: string
          description: Output only. Resource name of the NasTrialDetail.
          readOnly: true
        trainTrial:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrial'
          description: The train NasTrial corresponding to search_trial. Only populated if search_trial is used for training.
        searchTrial:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrial'
          description: The requested search NasTrial.
        parameters:
          type: string
          description: The parameters for the NasJob NasTrial.
      id: GoogleCloudAiplatformV1NasTrialDetail
    GoogleCloudAiplatformV1CancelNasJobRequest:
      id: GoogleCloudAiplatformV1CancelNasJobRequest
      properties: {}
      type: object
      description: Request message for JobService.CancelNasJob.
    GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec:
      properties:
        settings:
          description: Per-Feature settings for the batch read.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DestinationFeatureSetting'
        featureSelector:
          description: Required. Selectors choosing which Feature values to read from the EntityType.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureSelector'
        entityTypeId:
          description: Required. ID of the EntityType to select Features. The EntityType id is the entity_type_id specified during EntityType creation.
          type: string
      description: Selects Features of an EntityType to read values of and specifies read settings.
      id: GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec
      type: object
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadata:
      id: GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadata
      type: object
      description: The metadata of Datasets that contain time series data.
      properties:
        timeColumn:
          description: The column name of the time column that identifies time order in the time series.
          type: string
        timeSeriesIdentifierColumn:
          type: string
          description: The column name of the time series identifier column that identifies the time series.
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig'
    GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail:
      type: object
      properties:
        failedMainJobs:
          items:
            type: string
          description: Output only. The names of the previously failed CustomJob for the main container executions. The list includes the all attempts in chronological order.
          readOnly: true
          type: array
        preCachingCheckJob:
          type: string
          readOnly: true
          description: Output only. The name of the CustomJob for the pre-caching-check container execution. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events.
        mainJob:
          readOnly: true
          description: Output only. The name of the CustomJob for the main container execution.
          type: string
        failedPreCachingCheckJobs:
          description: Output only. The names of the previously failed CustomJob for the pre-caching-check container executions. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events. The list includes the all attempts in chronological order.
          items:
            type: string
          type: array
          readOnly: true
      description: The detail of a container execution. It contains the job names of the lifecycle of a container execution.
      id: GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail
    GoogleCloudAiplatformV1ListModelEvaluationsResponse:
      description: Response message for ModelService.ListModelEvaluations.
      id: GoogleCloudAiplatformV1ListModelEvaluationsResponse
      type: object
      properties:
        modelEvaluations:
          description: List of ModelEvaluations in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation'
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListModelEvaluationsRequest.page_token to obtain that page.
          type: string
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation
      type: object
      properties:
        numeric:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation'
        categorical:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation'
        text:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation'
        timestamp:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation'
        repeatedCategorical:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation'
        repeatedNumeric:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation'
        auto:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation'
        repeatedText:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation'
    GoogleCloudAiplatformV1SchemaPredictInstanceImageObjectDetectionPredictionInstance:
      id: GoogleCloudAiplatformV1SchemaPredictInstanceImageObjectDetectionPredictionInstance
      properties:
        content:
          type: string
          description: The image bytes or Cloud Storage URI to make the prediction on.
        mimeType:
          type: string
          description: The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
      description: Prediction input format for Image Object Detection.
      type: object
    GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig:
      properties:
        scaling:
          description: Online serving scaling configuration. Only one of `fixed_node_count` and `scaling` can be set. Setting one will reset the other.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling'
        fixedNodeCount:
          type: integer
          description: 'The number of nodes for the online store. The number of nodes doesn''t scale automatically, but you can manually update the number of nodes. If set to 0, the featurestore will not have an online store and cannot be used for online serving.'
          format: int32
      description: OnlineServingConfig specifies the details for provisioning online serving resources.
      id: GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig
      type: object
    GoogleCloudAiplatformV1Model:
      description: A trained machine learning Model.
      type: object
      properties:
        pipelineJob:
          type: string
          description: Optional. This field is populated if the model is produced by a pipeline job.
        name:
          type: string
          description: The resource name of the Model.
        createTime:
          description: Output only. Timestamp when this Model was uploaded into Vertex AI.
          readOnly: true
          type: string
          format: google-datetime
        metadata:
          description: Immutable. An additional information about the Model; the schema of the metadata can be found in metadata_schema. Unset if the Model does not have any additional information.
          type: any
        containerSpec:
          description: 'Input only. The specification of the container that is to be used when deploying this Model. The specification is ingested upon ModelService.UploadModel, and all binaries it contains are copied and stored internally by Vertex AI. Not present for AutoML Models or Large Models.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelContainerSpec'
        updateTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when this Model was most recently updated.
          readOnly: true
        description:
          description: The description of the Model.
          type: string
        supportedInputStorageFormats:
          readOnly: true
          items:
            type: string
          description: 'Output only. The formats this Model supports in BatchPredictionJob.input_config. If PredictSchemata.instance_schema_uri exists, the instances should be given as per that schema. The possible formats are: * `jsonl` The JSON Lines format, where each instance is a single line. Uses GcsSource. * `csv` The CSV format, where each instance is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsSource. * `tf-record` The TFRecord format, where each instance is a single record in tfrecord syntax. Uses GcsSource. * `tf-record-gzip` Similar to `tf-record`, but the file is gzipped. Uses GcsSource. * `bigquery` Each instance is a single row in BigQuery. Uses BigQuerySource. * `file-list` Each line of the file is the location of an instance to process, uses `gcs_source` field of the InputConfig object. If this Model doesn''t support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.'
          type: array
        trainingPipeline:
          description: 'Output only. The resource name of the TrainingPipeline that uploaded this Model, if any.'
          readOnly: true
          type: string
        versionAliases:
          type: array
          description: 'User provided version aliases so that a model version can be referenced via alias (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_alias}` instead of auto-generated version id (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_id})`. The format is a-z{0,126}[a-z0-9] to distinguish from version_id. A default version alias will be created for the first version of the model, and there must be exactly one default version alias for a model.'
          items:
            type: string
        etag:
          type: string
          description: 'Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        supportedDeploymentResourcesTypes:
          readOnly: true
          type: array
          description: 'Output only. When this Model is deployed, its prediction resources are described by the `prediction_resources` field of the Endpoint.deployed_models object. Because not all Models support all resource configuration types, the configuration types this Model supports are listed here. If no configuration types are listed, the Model cannot be deployed to an Endpoint and does not support online predictions (PredictionService.Predict or PredictionService.Explain). Such a Model can serve predictions by using a BatchPredictionJob, if it has at least one entry each in supported_input_storage_formats and supported_output_storage_formats.'
          items:
            type: string
            enumDescriptions:
              - Should not be used.
              - 'Resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.'
              - 'Resources that to large degree are decided by Vertex AI, and require only a modest additional configuration.'
              - Resources that can be shared by multiple DeployedModels. A pre-configured DeploymentResourcePool is required.
            enum:
              - DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED
              - DEDICATED_RESOURCES
              - AUTOMATIC_RESOURCES
              - SHARED_RESOURCES
        supportedOutputStorageFormats:
          items:
            type: string
          description: 'Output only. The formats this Model supports in BatchPredictionJob.output_config. If both PredictSchemata.instance_schema_uri and PredictSchemata.prediction_schema_uri exist, the predictions are returned together with their instances. In other words, the prediction has the original instance data first, followed by the actual prediction content (as per the schema). The possible formats are: * `jsonl` The JSON Lines format, where each prediction is a single line. Uses GcsDestination. * `csv` The CSV format, where each prediction is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsDestination. * `bigquery` Each prediction is a single row in a BigQuery table, uses BigQueryDestination . If this Model doesn''t support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.'
          type: array
          readOnly: true
        deployedModels:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModelRef'
          readOnly: true
          type: array
          description: Output only. The pointers to DeployedModels created from this Model. Note that Model could have been deployed to Endpoints in different Locations.
        metadataArtifact:
          description: 'Output only. The resource name of the Artifact that was created in MetadataStore when creating the Model. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.'
          readOnly: true
          type: string
        explanationSpec:
          description: 'The default explanation specification for this Model. The Model can be used for requesting explanation after being deployed if it is populated. The Model can be used for batch explanation if it is populated. All fields of the explanation_spec can be overridden by explanation_spec of DeployModelRequest.deployed_model, or explanation_spec of BatchPredictionJob. If the default explanation specification is not set for this Model, this Model can still be used for requesting explanation by setting explanation_spec of DeployModelRequest.deployed_model and for batch explanation by setting explanation_spec of BatchPredictionJob.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec'
        versionId:
          readOnly: true
          description: Output only. Immutable. The version ID of the model. A new version is committed when a new model version is uploaded or trained under an existing model id. It is an auto-incrementing decimal number in string representation.
          type: string
        versionCreateTime:
          description: Output only. Timestamp when this version was created.
          type: string
          readOnly: true
          format: google-datetime
        displayName:
          type: string
          description: Required. The display name of the Model. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        predictSchemata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictSchemata'
          description: The schemata that describe formats of the Model's predictions and explanations as given and returned via PredictionService.Predict and PredictionService.Explain.
        supportedExportFormats:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelExportFormat'
          readOnly: true
          description: 'Output only. The formats in which this Model may be exported. If empty, this Model is not available for export.'
        artifactUri:
          description: Immutable. The path to the directory containing the Model artifact and any of its supporting files. Not present for AutoML Models or Large Models.
          type: string
        encryptionSpec:
          description: 'Customer-managed encryption key spec for a Model. If set, this Model and all sub-resources of this Model will be secured by this key.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        versionDescription:
          description: The description of this version.
          type: string
        modelSourceInfo:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelSourceInfo'
          description: 'Output only. Source of a model. It can either be automl training pipeline, custom training pipeline, BigQuery ML, or existing Vertex AI Model.'
        versionUpdateTime:
          description: Output only. Timestamp when this version was most recently updated.
          type: string
          readOnly: true
          format: google-datetime
        originalModelInfo:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelOriginalModelInfo'
          description: 'Output only. If this Model is a copy of another Model, this contains info about the original.'
          readOnly: true
        metadataSchemaUri:
          description: 'Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it. Unset if the Model does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no additional metadata is needed, this field is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.'
          type: string
        labels:
          description: 'The labels with user-defined metadata to organize your Models. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
          type: object
          additionalProperties:
            type: string
      id: GoogleCloudAiplatformV1Model
    GoogleCloudAiplatformV1UpdateModelDeploymentMonitoringJobOperationMetadata:
      id: GoogleCloudAiplatformV1UpdateModelDeploymentMonitoringJobOperationMetadata
      type: object
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      description: Runtime operation information for JobService.UpdateModelDeploymentMonitoringJob.
    GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse:
      id: GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse
      description: Response message for TensorboardService.BatchReadTensorboardTimeSeriesData.
      properties:
        timeSeriesData:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TimeSeriesData'
          description: The returned time series data.
          type: array
      type: object
    GoogleCloudAiplatformV1DataItem:
      type: object
      id: GoogleCloudAiplatformV1DataItem
      properties:
        payload:
          type: any
          description: 'Required. The data that the DataItem represents (for example, an image or a text snippet). The schema of the payload is stored in the parent Dataset''s metadata schema''s dataItemSchemaUri field.'
        updateTime:
          format: google-datetime
          description: Output only. Timestamp when this DataItem was last updated.
          type: string
          readOnly: true
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the DataItem.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this DataItem was created.
          type: string
        etag:
          description: 'Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
          type: string
        labels:
          description: 'Optional. The labels with user-defined metadata to organize your DataItems. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one DataItem(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.'
          additionalProperties:
            type: string
          type: object
      description: 'A piece of data in a Dataset. Could be an image, a video, a document or plain text.'
    GoogleCloudAiplatformV1PurgeExecutionsMetadata:
      type: object
      description: Details of operations that perform MetadataService.PurgeExecutions.
      id: GoogleCloudAiplatformV1PurgeExecutionsMetadata
      properties:
        genericMetadata:
          description: Operation metadata for purging Executions.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetrics:
      properties:
        evaluatedBoundingBoxCount:
          description: The total number of bounding boxes (i.e. summed over all images) the ground truth used to create this evaluation had.
          type: integer
          format: int32
        boundingBoxMetrics:
          description: 'The bounding boxes match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.'
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics'
          type: array
        boundingBoxMeanAveragePrecision:
          description: 'The single metric for bounding boxes evaluation: the `meanAveragePrecision` averaged over all `boundingBoxMetricsEntries`.'
          type: number
          format: float
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetrics
      type: object
      description: Metrics for image object detection evaluation results.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtraction:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtraction
      type: object
      description: A TrainingJob that trains and uploads an AutoML Text Extraction Model.
      properties:
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs'
    GoogleCloudAiplatformV1MeasurementMetric:
      description: A message representing a metric in the measurement.
      id: GoogleCloudAiplatformV1MeasurementMetric
      properties:
        value:
          description: Output only. The value for this metric.
          type: number
          format: double
          readOnly: true
        metricId:
          readOnly: true
          type: string
          description: Output only. The ID of the Metric. The Metric should be defined in StudySpec's Metrics.
      type: object
    GoogleIamV1Binding:
      id: GoogleIamV1Binding
      type: object
      properties:
        role:
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
          type: string
        condition:
          $ref: '#/components/schemas/GoogleTypeExpr'
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        members:
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          items:
            type: string
          type: array
      description: 'Associates `members`, or principals, with a `role`.'
    GoogleCloudAiplatformV1CreateDatasetOperationMetadata:
      type: object
      description: Runtime operation information for DatasetService.CreateDataset.
      id: GoogleCloudAiplatformV1CreateDatasetOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
    GoogleCloudAiplatformV1CreateFeaturestoreOperationMetadata:
      description: Details of operations that perform create Featurestore.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Featurestore.
      type: object
      id: GoogleCloudAiplatformV1CreateFeaturestoreOperationMetadata
    GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity:
      properties:
        entityIdSelector:
          description: Required. Selectors choosing feature values of which entity id to be deleted from the EntityType.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityIdSelector'
      id: GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity
      type: object
      description: 'Message to select entity. If an entity id is selected, all the feature values corresponding to the entity id will be deleted, including the entityId.'
    GoogleCloudAiplatformV1UndeployIndexRequest:
      properties:
        deployedIndexId:
          description: Required. The ID of the DeployedIndex to be undeployed from the IndexEndpoint.
          type: string
      description: Request message for IndexEndpointService.UndeployIndex.
      id: GoogleCloudAiplatformV1UndeployIndexRequest
      type: object
    GoogleCloudAiplatformV1Tensorboard:
      properties:
        createTime:
          description: Output only. Timestamp when this Tensorboard was created.
          format: google-datetime
          readOnly: true
          type: string
        encryptionSpec:
          description: 'Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        description:
          description: Description of this Tensorboard.
          type: string
        updateTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when this Tensorboard was last updated.
          readOnly: true
        displayName:
          type: string
          description: Required. User provided name of this Tensorboard.
        etag:
          type: string
          description: 'Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        runCount:
          type: integer
          description: Output only. The number of Runs stored in this Tensorboard.
          readOnly: true
          format: int32
        isDefault:
          description: Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.
          type: boolean
        name:
          readOnly: true
          description: 'Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`'
          type: string
        blobStoragePathPrefix:
          description: 'Output only. Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a ''/''.'
          type: string
          readOnly: true
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.'
      id: GoogleCloudAiplatformV1Tensorboard
      description: Tensorboard is a physical database that stores users' training metrics. A default Tensorboard is provided in each region of a Google Cloud project. If needed users can also create extra Tensorboards in their projects.
      type: object
    GoogleCloudAiplatformV1Port:
      properties:
        containerPort:
          type: integer
          format: int32
          description: 'The number of the port to expose on the pod''s IP address. Must be a valid port number, between 1 and 65535 inclusive.'
      description: Represents a network port in a container.
      id: GoogleCloudAiplatformV1Port
      type: object
    GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata:
      properties:
        runTime:
          type: string
          format: google-datetime
          description: The time that most recent monitoring pipelines that is related to this run.
        status:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The status of the most recent monitoring pipeline.
      id: GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata
      type: object
      description: All metadata of most recent monitoring pipelines.
    GoogleCloudAiplatformV1SchemaPredictInstanceVideoClassificationPredictionInstance:
      description: Prediction input format for Video Classification.
      type: object
      id: GoogleCloudAiplatformV1SchemaPredictInstanceVideoClassificationPredictionInstance
      properties:
        mimeType:
          description: 'The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime'
          type: string
        timeSegmentStart:
          description: 'The beginning, inclusive, of the video''s time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision.'
          type: string
        timeSegmentEnd:
          type: string
          description: 'The end, exclusive, of the video''s time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video.'
        content:
          description: The Google Cloud Storage location of the video on which to perform the prediction.
          type: string
    GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset:
      properties:
        dataLabelingAnnotatedDatasets:
          description: The migratable AnnotatedDataset in datalabeling.googleapis.com belongs to the data labeling Dataset.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset'
          type: array
        datasetDisplayName:
          type: string
          description: The Dataset's display name in datalabeling.googleapis.com.
        dataset:
          type: string
          description: 'Full resource name of data labeling Dataset. Format: `projects/{project}/datasets/{dataset}`.'
      type: object
      id: GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset
      description: Represents one Dataset in datalabeling.googleapis.com.
    GoogleCloudAiplatformV1ListCustomJobsResponse:
      id: GoogleCloudAiplatformV1ListCustomJobsResponse
      type: object
      description: Response message for JobService.ListCustomJobs
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListCustomJobsRequest.page_token to obtain that page.
          type: string
        customJobs:
          description: List of CustomJobs in the requested page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJob'
    GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport:
      properties:
        endTime:
          description: 'Exports Feature values as of this timestamp. If not set, retrieve values as of now. Timestamp, if present, must not have higher than millisecond precision.'
          format: google-datetime
          type: string
        startTime:
          type: string
          description: 'Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision.'
          format: google-datetime
      id: GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport
      type: object
      description: 'Describes exporting all historical Feature values of all entities of the EntityType between [start_time, end_time].'
    GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse:
      id: GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse
      properties:
        nextPageToken:
          type: string
          description: The page token that can be used by the next JobService.SearchModelDeploymentMonitoringStatsAnomalies call.
        monitoringStats:
          description: Stats retrieved for requested objectives. There are at most 1000 ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.prediction_stats in the response.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies'
          type: array
      description: Response message for JobService.SearchModelDeploymentMonitoringStatsAnomalies.
      type: object
    GoogleCloudAiplatformV1BatchPredictionJobInputConfig:
      type: object
      description: 'Configures the input to BatchPredictionJob. See Model.supported_input_storage_formats for Model''s supported input formats, and how instances should be expressed via any of them.'
      id: GoogleCloudAiplatformV1BatchPredictionJobInputConfig
      properties:
        instancesFormat:
          type: string
          description: 'Required. The format in which instances are given, must be one of the Model''s supported_input_storage_formats.'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
          description: The Cloud Storage location for the input instances.
        bigquerySource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQuerySource'
          description: 'The BigQuery location of the input table. The schema of the table should be in the format described by the given context OpenAPI Schema, if one is provided. The table may contain additional columns that are not described by the schema, and they will be ignored.'
    GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData'
          description: 'Each piece of data holds the k requested values for one requested Feature. If no values for the requested Feature exist, the corresponding cell will be empty. This has the same size and is in the same order as the features from the header ReadFeatureValuesResponse.header.'
        entityId:
          type: string
          description: ID of the requested entity.
      id: GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView
      description: Entity view with Feature values.
    GoogleCloudAiplatformV1CustomJobSpec:
      type: object
      id: GoogleCloudAiplatformV1CustomJobSpec
      properties:
        experiment:
          type: string
          description: 'Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`'
        enableWebAccess:
          description: 'Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).'
          type: boolean
        reservedIpRanges:
          items:
            type: string
          type: array
          description: 'Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: [''vertex-ai-ip-range''].'
        network:
          type: string
          description: 'Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network.'
        tensorboard:
          type: string
          description: 'Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`'
        workerPoolSpecs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1WorkerPoolSpec'
          description: Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.
          type: array
        scheduling:
          description: Scheduling options for a CustomJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Scheduling'
        baseOutputDirectory:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: 'The Cloud Storage location to store the output of this CustomJob or HyperparameterTuningJob. For HyperparameterTuningJob, the baseOutputDirectory of each child CustomJob backing a Trial is set to a subdirectory of name id under its parent HyperparameterTuningJob''s baseOutputDirectory. The following Vertex AI environment variables will be passed to containers or python modules when this field is set: For CustomJob: * AIP_MODEL_DIR = `/model/` * AIP_CHECKPOINT_DIR = `/checkpoints/` * AIP_TENSORBOARD_LOG_DIR = `/logs/` For CustomJob backing a Trial of HyperparameterTuningJob: * AIP_MODEL_DIR = `//model/` * AIP_CHECKPOINT_DIR = `//checkpoints/` * AIP_TENSORBOARD_LOG_DIR = `//logs/`'
        enableDashboardAccess:
          description: 'Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).'
          type: boolean
        serviceAccount:
          type: string
          description: 'Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob''s project is used.'
        experimentRun:
          type: string
          description: 'Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`'
      description: Represents the spec of a CustomJob.
    GoogleCloudAiplatformV1SchemaTextSentimentSavedQueryMetadata:
      properties:
        sentimentMax:
          description: The maximum sentiment of sentiment Anntoation in this SavedQuery.
          type: integer
          format: int32
      description: The metadata of SavedQuery contains TextSentiment Annotations.
      type: object
      id: GoogleCloudAiplatformV1SchemaTextSentimentSavedQueryMetadata
    GoogleCloudAiplatformV1TensorboardBlobSequence:
      properties:
        values:
          description: List of blobs contained within the sequence.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardBlob'
          type: array
      description: 'One point viewable on a blob metric plot, but mostly just a wrapper message to work around repeated fields can''t be used directly within `oneof` fields.'
      type: object
      id: GoogleCloudAiplatformV1TensorboardBlobSequence
    GoogleCloudAiplatformV1ListNasTrialDetailsResponse:
      properties:
        nasTrialDetails:
          description: List of top NasTrials in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrialDetail'
          type: array
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass to ListNasTrialDetailsRequest.page_token to obtain that page.
      id: GoogleCloudAiplatformV1ListNasTrialDetailsResponse
      description: Response message for JobService.ListNasTrialDetails
      type: object
    GoogleCloudAiplatformV1IndexDatapoint:
      type: object
      description: A datapoint of Index.
      id: GoogleCloudAiplatformV1IndexDatapoint
      properties:
        datapointId:
          description: Required. Unique identifier of the datapoint.
          type: string
        crowdingTag:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexDatapointCrowdingTag'
          description: 'Optional. CrowdingTag of the datapoint, the number of neighbors to return in each crowding can be configured during query.'
        restricts:
          type: array
          description: 'Optional. List of Restrict of the datapoint, used to perform "restricted searches" where boolean rule are used to filter the subset of the database eligible for matching. See: https://cloud.google.com/vertex-ai/docs/matching-engine/filtering'
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexDatapointRestriction'
        featureVector:
          type: array
          description: 'Required. Feature embedding vector. An array of numbers with the length of [NearestNeighborSearchConfig.dimensions].'
          items:
            type: number
            format: float
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
    GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion:
      id: GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion
      description: Represents one model Version in ml.googleapis.com.
      properties:
        endpoint:
          type: string
          description: 'The ml.googleapis.com endpoint that this model Version currently lives in. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com'
        version:
          description: 'Full resource name of ml engine model Version. Format: `projects/{project}/models/{model}/versions/{version}`.'
          type: string
      type: object
    GoogleCloudAiplatformV1ModelContainerSpec:
      properties:
        imageUri:
          type: string
          description: 'Required. Immutable. URI of the Docker image to be used as the custom container for serving predictions. This URI must identify an image in Artifact Registry or Container Registry. Learn more about the [container publishing requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#publishing), including permissions requirements for the Vertex AI Service Agent. The container image is ingested upon ModelService.UploadModel, stored internally, and this original path is afterwards not used. To learn about the requirements for the Docker image itself, see [Custom container requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#). You can use the URI to one of Vertex AI''s [pre-built container images for prediction](https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers) in this field.'
        command:
          items:
            type: string
          description: 'Immutable. Specifies the command that runs when the container starts. This overrides the container''s [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint). Specify this field as an array of executable and arguments, similar to a Docker `ENTRYPOINT`''s "exec" form, not its "shell" form. If you do not specify this field, then the container''s `ENTRYPOINT` runs, in conjunction with the args field or the container''s [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd), if either exists. If this field is not specified and the container does not have an `ENTRYPOINT`, then refer to the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). If you specify this field, then you can also specify the `args` field to provide additional arguments for this command. However, if you specify this field, then the container''s `CMD` is ignored. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container''s `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). In this field, you can reference [environment variables set by Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `command` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).'
          type: array
        healthRoute:
          type: string
          description: 'Immutable. HTTP path on the container to send health checks to. Vertex AI intermittently sends GET requests to this path on the container''s IP address and port to check that the container is healthy. Read more about [health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#health). For example, if you set this field to `/bar`, then Vertex AI intermittently sends a GET request to the `/bar` path on the port of your container specified by the first value of this `ModelContainerSpec`''s ports field. If you don''t specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/ DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)'
        predictRoute:
          type: string
          description: 'Immutable. HTTP path on the container to send prediction requests to. Vertex AI forwards requests sent using projects.locations.endpoints.predict to this path on the container''s IP address and port. Vertex AI then returns the container''s response in the API response. For example, if you set this field to `/foo`, then when Vertex AI receives a prediction request, it forwards the request body in a POST request to the `/foo` path on the port of your container specified by the first value of this `ModelContainerSpec`''s ports field. If you don''t specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)'
        env:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EnvVar'
          type: array
          description: 'Immutable. List of environment variables to set in the container. After the container starts running, code running in the container can read these environment variables. Additionally, the command and args fields can reference these variables. Later entries in this list can also reference earlier entries. For example, the following example sets the variable `VAR_2` to have the value `foo bar`: ```json [ { "name": "VAR_1", "value": "foo" }, { "name": "VAR_2", "value": "$(VAR_1) bar" } ] ``` If you switch the order of the variables in the example, then the expansion does not occur. This field corresponds to the `env` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).'
        args:
          items:
            type: string
          type: array
          description: 'Immutable. Specifies arguments for the command that runs when the container starts. This overrides the container''s [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd). Specify this field as an array of executable and arguments, similar to a Docker `CMD`''s "default parameters" form. If you don''t specify this field but do specify the command field, then the command from the `command` field runs without any additional arguments. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container''s `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). If you don''t specify this field and don''t specify the `command` field, then the container''s [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and `CMD` determine what runs based on their default behavior. See the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). In this field, you can reference [environment variables set by Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `args` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).'
        ports:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Port'
          description: 'Immutable. List of ports to expose from the container. Vertex AI sends any prediction requests that it receives to the first port on this list. Vertex AI also sends [liveness and health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#liveness) to this port. If you do not specify this field, it defaults to following value: ```json [ { "containerPort": 8080 } ] ``` Vertex AI does not use ports other than the first one listed. This field corresponds to the `ports` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).'
          type: array
      id: GoogleCloudAiplatformV1ModelContainerSpec
      type: object
      description: 'Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).'
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics:
      type: object
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics
      description: UNIMPLEMENTED. Track matching model metrics for a single track match threshold and multiple label match confidence thresholds.
      properties:
        meanMismatchRate:
          format: float
          type: number
          description: The mean mismatch rate over all confidence thresholds.
        iouThreshold:
          format: float
          type: number
          description: The intersection-over-union threshold value between bounding boxes across frames used to compute this metric entry.
        confidenceMetrics:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics'
          description: 'Metrics for each label-match `confidenceThreshold` from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them.'
          type: array
        meanTrackingAveragePrecision:
          format: float
          type: number
          description: The mean average precision over all confidence thresholds.
        meanBoundingBoxIou:
          type: number
          description: The mean bounding box iou over all confidence thresholds.
          format: float
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation
      properties:
        columnName:
          type: string
      description: 'Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.'
    GoogleCloudAiplatformV1UndeployModelRequest:
      type: object
      properties:
        trafficSplit:
          additionalProperties:
            format: int32
            type: integer
          description: 'If this field is provided, then the Endpoint''s traffic_split will be overwritten with it. If last DeployedModel is being undeployed from the Endpoint, the [Endpoint.traffic_split] will always end up empty when this call returns. A DeployedModel will be successfully undeployed only if it doesn''t have any traffic assigned to it when this method executes, or if this field unassigns any traffic to it.'
          type: object
        deployedModelId:
          type: string
          description: Required. The ID of the DeployedModel to be undeployed from the Endpoint.
      description: Request message for EndpointService.UndeployModel.
      id: GoogleCloudAiplatformV1UndeployModelRequest
    GoogleCloudAiplatformV1CancelPipelineJobRequest:
      type: object
      description: Request message for PipelineService.CancelPipelineJob.
      properties: {}
      id: GoogleCloudAiplatformV1CancelPipelineJobRequest
    GoogleCloudAiplatformV1DeleteMetadataStoreOperationMetadata:
      id: GoogleCloudAiplatformV1DeleteMetadataStoreOperationMetadata
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for deleting a MetadataStore.
      description: Details of operations that perform MetadataService.DeleteMetadataStore.
    GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData:
      description: Per month usage data
      type: object
      id: GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData
      properties:
        userUsageData:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData'
          description: Usage data for each user in the given month.
          type: array
    GoogleCloudAiplatformV1SchemaPredictParamsImageClassificationPredictionParams:
      description: Prediction model parameters for Image Classification.
      id: GoogleCloudAiplatformV1SchemaPredictParamsImageClassificationPredictionParams
      type: object
      properties:
        confidenceThreshold:
          type: number
          format: float
          description: The Model only returns predictions with at least this confidence score. Default value is 0.0
        maxPredictions:
          description: 'The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10.'
          type: integer
          format: int32
    GoogleCloudAiplatformV1PrivateEndpoints:
      properties:
        predictHttpUri:
          readOnly: true
          type: string
          description: Output only. Http(s) path to send prediction requests.
        healthHttpUri:
          readOnly: true
          type: string
          description: Output only. Http(s) path to send health check requests.
        serviceAttachment:
          type: string
          readOnly: true
          description: Output only. The name of the service attachment resource. Populated if private service connect is enabled.
        explainHttpUri:
          description: Output only. Http(s) path to send explain requests.
          readOnly: true
          type: string
      id: GoogleCloudAiplatformV1PrivateEndpoints
      type: object
      description: 'PrivateEndpoints proto is used to provide paths for users to send requests privately. To send request via private service access, use predict_http_uri, explain_http_uri or health_http_uri. To send request via private service connect, use service_attachment.'
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation:
      properties:
        columnName:
          type: string
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation
      type: object
      description: 'Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.'
    GoogleCloudAiplatformV1ExportModelRequestOutputConfig:
      description: Output configuration for the Model export.
      id: GoogleCloudAiplatformV1ExportModelRequestOutputConfig
      type: object
      properties:
        imageDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ContainerRegistryDestination'
          description: 'The Google Container Registry or Artifact Registry uri where the Model container image will be copied to. This field should only be set when the `exportableContent` field of the [Model.supported_export_formats] object contains `IMAGE`.'
        artifactDestination:
          description: 'The Cloud Storage location where the Model artifact is to be written to. Under the directory given as the destination a new one with name "`model-export--`", where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format, will be created. Inside, the Model and any of its supporting files will be written. This field should only be set when the `exportableContent` field of the [Model.supported_export_formats] object contains `ARTIFACT`.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
        exportFormatId:
          description: 'The ID of the format in which the Model must be exported. Each Model lists the export formats it supports. If no value is provided here, then the first from the list of the Model''s supported formats is used by default.'
          type: string
    GoogleCloudAiplatformV1SchemaVideoDatasetMetadata:
      description: The metadata of Datasets that contain Video DataItems.
      id: GoogleCloudAiplatformV1SchemaVideoDatasetMetadata
      properties:
        dataItemSchemaUri:
          description: Points to a YAML file stored on Google Cloud Storage describing payload of the Video DataItems that belong to this Dataset.
          type: string
        gcsBucket:
          description: Google Cloud Storage Bucket name that contains the blob data of this Dataset.
          type: string
      type: object
    GoogleCloudAiplatformV1CompleteTrialRequest:
      id: GoogleCloudAiplatformV1CompleteTrialRequest
      properties:
        trialInfeasible:
          type: boolean
          description: 'Optional. True if the Trial cannot be run with the given Parameter, and final_measurement will be ignored.'
        finalMeasurement:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Measurement'
          description: 'Optional. If provided, it will be used as the completed Trial''s final_measurement; Otherwise, the service will auto-select a previously reported measurement as the final-measurement'
        infeasibleReason:
          type: string
          description: Optional. A human readable reason why the trial was infeasible. This should only be provided if `trial_infeasible` is true.
      type: object
      description: Request message for VizierService.CompleteTrial.
    GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest:
      description: Request message for TensorboardService.CreateTensorboardTimeSeries.
      id: GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest
      properties:
        tensorboardTimeSeries:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
          description: Required. The TensorboardTimeSeries to create.
        parent:
          type: string
          description: 'Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`'
        tensorboardTimeSeriesId:
          description: 'Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries''s resource name. This value should match "a-z0-9{0, 127}"'
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureValue:
      id: GoogleCloudAiplatformV1FeatureValue
      properties:
        boolValue:
          type: boolean
          description: Bool type feature value.
        metadata:
          description: Metadata of feature value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValueMetadata'
        doubleValue:
          type: number
          format: double
          description: Double type feature value.
        int64Value:
          type: string
          format: int64
          description: Int64 feature value.
        stringValue:
          type: string
          description: String feature value.
        int64ArrayValue:
          description: A list of int64 type feature value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Int64Array'
        doubleArrayValue:
          description: A list of double type feature value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DoubleArray'
        boolArrayValue:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BoolArray'
          description: A list of bool type feature value.
        bytesValue:
          type: string
          format: byte
          description: Bytes feature value.
        stringArrayValue:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StringArray'
          description: A list of string type feature value.
      type: object
      description: Value for a feature.
    GoogleCloudAiplatformV1UpdateExplanationDatasetOperationMetadata:
      description: Runtime operation information for ModelService.UpdateExplanationDataset.
      type: object
      id: GoogleCloudAiplatformV1UpdateExplanationDatasetOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The common part of the operation metadata.
    GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest:
      description: Request message for TensorboardService.BatchCreateTensorboardRuns.
      type: object
      id: GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest
      properties:
        requests:
          description: Required. The request message specifying the TensorboardRuns to create. A maximum of 1000 TensorboardRuns can be created in a batch.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1CreateTensorboardRunRequest'
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics:
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics
      properties:
        precisionWindowLength:
          description: 'This VideoActionMetrics is calculated based on this prediction window length. If the predicted action''s timestamp is inside the time window whose center is the ground truth action''s timestamp with this specific length, the prediction result is treated as a true positive.'
          type: string
          format: google-duration
        meanAveragePrecision:
          format: float
          type: number
          description: The mean average precision.
        confidenceMetrics:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics'
          type: array
          description: 'Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99.'
      description: The Evaluation metrics given a specific precision_window_length.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs:
      type: object
      properties:
        sentimentMax:
          type: integer
          format: int32
          description: 'A sentiment is expressed as an integer ordinal, where higher value means a more positive sentiment. The range of sentiments that will be used is between 0 and sentimentMax (inclusive on both ends), and all the values in the range must be represented in the dataset before a model can be created. Only the Annotations with this sentimentMax will be used for training. sentimentMax value must be between 1 and 10 (inclusive).'
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata
      properties:
        costMilliNodeHours:
          type: string
          description: 'The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.'
          format: int64
        successfulStopReason:
          description: 'For successful job completions, this is the reason why the job has finished.'
          enumDescriptions:
            - Should not be set.
            - The inputs.budgetMilliNodeHours had been reached.
            - 'Further training of the Model ceased to increase its quality, since it already has converged.'
          enum:
            - SUCCESSFUL_STOP_REASON_UNSPECIFIED
            - BUDGET_REACHED
            - MODEL_CONVERGED
          type: string
    GoogleCloudAiplatformV1StringArray:
      type: object
      description: A list of string values.
      id: GoogleCloudAiplatformV1StringArray
      properties:
        values:
          items:
            type: string
          description: A list of string values.
          type: array
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig:
      description: Configuration for exporting test set predictions to a BigQuery table.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig
      properties:
        overrideExistingTable:
          type: boolean
          description: 'If true and an export destination is specified, then the contents of the destination are overwritten. Otherwise, if the export destination already exists, then the export operation fails.'
        destinationBigqueryUri:
          description: 'URI of desired destination BigQuery table. Expected format: `bq://{project_id}:{dataset_id}:{table}` If not specified, then results are exported to the following auto-created BigQuery table: `{project_id}:export_evaluated_examples_{model_name}_{yyyy_MM_dd''T''HH_mm_ss_SSS''Z''}.evaluated_examples`'
          type: string
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToActionDeploy:
      id: GoogleCloudAiplatformV1PublisherModelCallToActionDeploy
      type: object
      description: Model metadata that is needed for UploadModel or DeployModel/CreateEndpoint requests.
      properties:
        modelDisplayName:
          type: string
          description: Optional. Default model display name.
        automaticResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1AutomaticResources'
          description: 'A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration.'
        sharedResources:
          type: string
          description: 'The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`'
        title:
          type: string
          description: Required. The title of the regional resource reference.
        largeModelReference:
          description: 'Optional. Large model reference. When this is set, model_artifact_spec is not needed.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1LargeModelReference'
        artifactUri:
          description: Optional. The path to the directory containing the Model artifact and any of its supporting files.
          type: string
        containerSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelContainerSpec'
          description: Optional. The specification of the container that is to be used when deploying this Model in Vertex AI. Not present for Large Models.
        dedicatedResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DedicatedResources'
          description: 'A description of resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.'
    GoogleCloudAiplatformV1UpsertDatapointsResponse:
      properties: {}
      type: object
      description: Response message for IndexService.UpsertDatapoints
      id: GoogleCloudAiplatformV1UpsertDatapointsResponse
    GoogleCloudAiplatformV1ListOptimalTrialsRequest:
      properties: {}
      description: Request message for VizierService.ListOptimalTrials.
      id: GoogleCloudAiplatformV1ListOptimalTrialsRequest
      type: object
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue:
      properties:
        stringValue:
          type: string
          description: String type.
        floatValue:
          description: Float type.
          type: number
          format: float
      type: object
      description: Single value that supports strings and floats.
      id: GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig:
      id: GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig
      description: Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset.
      properties:
        dataset:
          type: string
          description: 'Required. Full resource name of automl Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`.'
        datasetDisplayName:
          description: Required. Display name of the Dataset in Vertex AI. System will pick a display name if unspecified.
          type: string
      type: object
    GoogleCloudAiplatformV1BatchDedicatedResources:
      properties:
        machineSpec:
          description: Required. Immutable. The specification of a single machine.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MachineSpec'
        startingReplicaCount:
          type: integer
          format: int32
          description: 'Immutable. The number of machine replicas used at the start of the batch operation. If not set, Vertex AI decides starting number, not greater than max_replica_count'
        maxReplicaCount:
          description: Immutable. The maximum number of machine replicas the batch operation may be scaled to. The default value is 10.
          type: integer
          format: int32
      type: object
      description: 'A description of resources that are used for performing batch operations, are dedicated to a Model, and need manual configuration.'
      id: GoogleCloudAiplatformV1BatchDedicatedResources
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking:
      description: A TrainingJob that trains and uploads an AutoML Video ObjectTracking Model.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking
      type: object
      properties:
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs'
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation:
      properties:
        invalidValuesAllowed:
          type: boolean
          description: 'If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.'
        columnName:
          type: string
      description: Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation
      type: object
    GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData:
      type: object
      description: 'Container to hold value(s), successive in time, for one Feature from the request.'
      properties:
        values:
          description: 'Feature values list if values, successive in time, are requested. If the requested number of values is greater than the number of existing Feature values, nonexistent values are omitted instead of being returned as empty.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValueList'
        value:
          description: Feature value if a single value is requested.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValue'
      id: GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData
    GoogleCloudAiplatformV1FeatureSelector:
      type: object
      properties:
        idMatcher:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IdMatcher'
          description: Required. Matches Features based on ID.
      id: GoogleCloudAiplatformV1FeatureSelector
      description: Selector for Features of an EntityType.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation
      properties:
        columnName:
          type: string
      description: 'Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (" ") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text.'
      type: object
    GoogleCloudAiplatformV1EntityType:
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.'
        offlineStorageTtlDays:
          type: integer
          format: int32
          description: 'Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.'
        name:
          type: string
          description: 'Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.'
        monitoringConfig:
          description: 'Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfig'
        etag:
          type: string
          description: 'Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this EntityType was most recently updated.
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this EntityType was created.
          type: string
        description:
          description: Optional. Description of the EntityType.
          type: string
      description: 'An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver.'
      id: GoogleCloudAiplatformV1EntityType
      type: object
    GoogleCloudAiplatformV1ListFeaturesResponse:
      id: GoogleCloudAiplatformV1ListFeaturesResponse
      description: Response message for FeaturestoreService.ListFeatures. Response message for FeatureRegistryService.ListFeatures.
      properties:
        features:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
          description: The Features matching the request.
          type: array
        nextPageToken:
          description: 'A token, which can be sent as ListFeaturesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
      type: object
    GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact:
      description: The type of an input artifact.
      type: object
      id: GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact
      properties:
        artifactId:
          description: 'Artifact resource id from MLMD. Which is the last portion of an artifact resource name: `projects/{project}/locations/{location}/metadataStores/default/artifacts/{artifact_id}`. The artifact must stay within the same project, location and default metadatastore as the pipeline.'
          type: string
    GoogleCloudAiplatformV1TensorboardTensor:
      type: object
      description: One point viewable on a tensor metric plot.
      properties:
        versionNumber:
          type: integer
          description: Optional. Version number of TensorProto used to serialize value.
          format: int32
        value:
          format: byte
          description: 'Required. Serialized form of https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/tensor.proto'
          type: string
      id: GoogleCloudAiplatformV1TensorboardTensor
    GoogleCloudAiplatformV1ExamplesRestrictionsNamespace:
      properties:
        deny:
          type: array
          description: The list of deny tags.
          items:
            type: string
        namespaceName:
          type: string
          description: The namespace name.
        allow:
          description: The list of allowed tags.
          type: array
          items:
            type: string
      description: Restrictions namespace for example-based explanations overrides.
      id: GoogleCloudAiplatformV1ExamplesRestrictionsNamespace
      type: object
    GoogleCloudAiplatformV1Examples:
      description: Example-based explainability that returns the nearest neighbors from the provided dataset.
      type: object
      properties:
        neighborCount:
          description: The number of neighbors to return when querying for examples.
          format: int32
          type: integer
        presets:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Presets'
          description: 'Simplified preset configuration, which automatically sets configuration values based on the desired query speed-precision trade-off and modality.'
        nearestNeighborSearchConfig:
          description: 'The full configuration for the generated index, the semantics are the same as metadata and should match [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).'
          type: any
        exampleGcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExamplesExampleGcsSource'
          description: The Cloud Storage input instances.
      id: GoogleCloudAiplatformV1Examples
    GoogleCloudAiplatformV1Tensor:
      type: object
      description: A tensor value type.
      id: GoogleCloudAiplatformV1Tensor
      properties:
        floatVal:
          description: FLOAT
          items:
            type: number
            format: float
          type: array
        dtype:
          enum:
            - DATA_TYPE_UNSPECIFIED
            - BOOL
            - STRING
            - FLOAT
            - DOUBLE
            - INT8
            - INT16
            - INT32
            - INT64
            - UINT8
            - UINT16
            - UINT32
            - UINT64
          description: The data type of tensor.
          type: string
          enumDescriptions:
            - Not a legal value for DataType. Used to indicate a DataType field has not been set.
            - Data types that all computation devices are expected to be capable to support.
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        int64Val:
          description: INT64
          type: array
          items:
            type: string
            format: int64
        intVal:
          items:
            type: integer
            format: int32
          type: array
          description: INT_8 INT_16 INT_32
        uint64Val:
          description: UINT64
          items:
            type: string
            format: uint64
          type: array
        stringVal:
          description: STRING
          items:
            type: string
          type: array
        tensorVal:
          type: string
          description: Serialized raw tensor content.
          format: byte
        boolVal:
          items:
            type: boolean
          description: Type specific representations that make it easy to create tensor protos in all languages. Only the representation corresponding to "dtype" can be set. The values hold the flattened representation of the tensor in row major order. BOOL
          type: array
        listVal:
          description: A list of tensor values.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          type: array
        doubleVal:
          type: array
          items:
            format: double
            type: number
          description: DOUBLE
        structVal:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          description: A map of string to tensor.
          type: object
        uintVal:
          description: UINT8 UINT16 UINT32
          items:
            type: integer
            format: uint32
          type: array
        shape:
          description: Shape of the tensor.
          type: array
          items:
            type: string
            format: int64
        bytesVal:
          description: STRING
          items:
            type: string
            format: byte
          type: array
    GoogleCloudAiplatformV1WriteTensorboardRunDataResponse:
      id: GoogleCloudAiplatformV1WriteTensorboardRunDataResponse
      description: Response message for TensorboardService.WriteTensorboardRunData.
      properties: {}
      type: object
    GoogleCloudAiplatformV1ImportFeatureValuesResponse:
      description: Response message for FeaturestoreService.ImportFeatureValues.
      properties:
        importedEntityCount:
          type: string
          format: int64
          description: Number of entities that have been imported by the operation.
        timestampOutsideRetentionRowsCount:
          format: int64
          description: The number rows that weren't ingested due to having feature timestamps outside the retention boundary.
          type: string
        importedFeatureValueCount:
          description: Number of Feature values that have been imported by the operation.
          type: string
          format: int64
        invalidRowCount:
          type: string
          format: int64
          description: The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources).
      type: object
      id: GoogleCloudAiplatformV1ImportFeatureValuesResponse
    GoogleCloudAiplatformV1PublisherModel:
      description: A Model Garden Publisher Model.
      id: GoogleCloudAiplatformV1PublisherModel
      properties:
        versionId:
          description: Output only. Immutable. The version ID of the PublisherModel. A new version is committed when a new model version is uploaded under an existing model id. It is an auto-incrementing decimal number in string representation.
          readOnly: true
          type: string
        launchStage:
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - EXPERIMENTAL
            - PRIVATE_PREVIEW
            - PUBLIC_PREVIEW
            - GA
          enumDescriptions:
            - The model launch stage is unspecified.
            - Used to indicate the PublisherModel is at Experimental launch stage.
            - Used to indicate the PublisherModel is at Private Preview launch stage.
            - Used to indicate the PublisherModel is at Public Preview launch stage.
            - Used to indicate the PublisherModel is at GA launch stage.
          description: Optional. Indicates the launch stage of the model.
          type: string
        publisherModelTemplate:
          description: Optional. Output only. Immutable. Used to indicate this model has a publisher model and provide the template of the publisher model resource name.
          type: string
          readOnly: true
        supportedActions:
          description: Optional. Supported call-to-action options.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToAction'
        frameworks:
          type: array
          items:
            type: string
          description: Optional. Additional information about the model's Frameworks.
        openSourceCategory:
          enum:
            - OPEN_SOURCE_CATEGORY_UNSPECIFIED
            - PROPRIETARY
            - GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT
            - THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT
            - GOOGLE_OWNED_OSS
            - THIRD_PARTY_OWNED_OSS
          enumDescriptions:
            - 'The open source category is unspecified, which should not be used.'
            - Used to indicate the PublisherModel is not open sourced.
            - Used to indicate the PublisherModel is a Google-owned open source model w/ Google checkpoint.
            - Used to indicate the PublisherModel is a 3p-owned open source model w/ Google checkpoint.
            - Used to indicate the PublisherModel is a Google-owned pure open source model.
            - Used to indicate the PublisherModel is a 3p-owned pure open source model.
          type: string
          description: Required. Indicates the open source category of the publisher model.
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the PublisherModel.
        predictSchemata:
          description: Optional. The schemata that describes formats of the PublisherModel's predictions and explanations as given and returned via PredictionService.Predict.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictSchemata'
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation:
      properties:
        columnName:
          type: string
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation
      type: object
      description: Training pipeline will infer the proper transformation based on the statistic of dataset.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation
      description: 'Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.'
      properties:
        columnName:
          type: string
    GoogleCloudAiplatformV1FeatureValueDestination:
      id: GoogleCloudAiplatformV1FeatureValueDestination
      description: A destination location for Feature values and format.
      properties:
        tfrecordDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TFRecordDestination'
          description: 'Output in TFRecord format. Below are the mapping from Feature value type in Featurestore to Feature value type in TFRecord: Value type in Featurestore | Value type in TFRecord DOUBLE, DOUBLE_ARRAY | FLOAT_LIST INT64, INT64_ARRAY | INT64_LIST STRING, STRING_ARRAY, BYTES | BYTES_LIST true -> byte_string("true"), false -> byte_string("false") BOOL, BOOL_ARRAY (true, false) | BYTES_LIST'
        bigqueryDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination'
          description: Output in BigQuery format. BigQueryDestination.output_uri in FeatureValueDestination.bigquery_destination must refer to a table.
        csvDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CsvDestination'
          description: Output in CSV format. Array Feature value types are not allowed in CSV format.
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics:
      description: Metrics for forecasting evaluation results.
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics
      type: object
      properties:
        rootMeanSquaredPercentageError:
          description: Root Mean Square Percentage Error. Square root of MSPE. Undefined/imaginary when MSPE is negative.
          format: float
          type: number
        rootMeanSquaredLogError:
          type: number
          description: Root mean squared log error. Undefined when there are negative ground truth values or predictions.
          format: float
        weightedAbsolutePercentageError:
          type: number
          format: float
          description: 'Weighted Absolute Percentage Error. Does not use weights, this is just what the metric is called. Undefined if actual values sum to zero. Will be very large if actual values sum to a very small number.'
        rSquared:
          format: float
          type: number
          description: Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.
        meanAbsolutePercentageError:
          format: float
          description: Mean absolute percentage error. Infinity when there are zeros in the ground truth.
          type: number
        quantileMetrics:
          type: array
          description: The quantile metrics entries for each quantile.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry'
        rootMeanSquaredError:
          format: float
          type: number
          description: Root Mean Squared Error (RMSE).
        meanAbsoluteError:
          description: Mean Absolute Error (MAE).
          format: float
          type: number
    GoogleCloudAiplatformV1Event:
      id: GoogleCloudAiplatformV1Event
      description: An edge describing the relationship between an Artifact and an Execution in a lineage graph.
      properties:
        eventTime:
          readOnly: true
          description: Output only. Time the Event occurred.
          format: google-datetime
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'The labels with user-defined metadata to annotate Events. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Event (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.'
          type: object
        execution:
          type: string
          readOnly: true
          description: Output only. The relative resource name of the Execution in the Event.
        artifact:
          type: string
          description: Required. The relative resource name of the Artifact in the Event.
        type:
          enumDescriptions:
            - Unspecified whether input or output of the Execution.
            - An input of the Execution.
            - An output of the Execution.
          description: Required. The type of the Event.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - INPUT
            - OUTPUT
      type: object
    GoogleCloudAiplatformV1PrivateServiceConnectConfig:
      id: GoogleCloudAiplatformV1PrivateServiceConnectConfig
      type: object
      properties:
        projectAllowlist:
          description: A list of Projects from which the forwarding rule will target the service attachment.
          type: array
          items:
            type: string
        enablePrivateServiceConnect:
          type: boolean
          description: 'Required. If true, expose the IndexEndpoint via private service connect.'
      description: Represents configuration for private service connect.
    GoogleCloudAiplatformV1CreateFeatureRequest:
      description: Request message for FeaturestoreService.CreateFeature and FeatureRegistryService.CreateFeature.
      type: object
      properties:
        feature:
          description: Required. The Feature to create.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
        parent:
          description: 'Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` `projects/{project}/locations/{location}/featureGroups/{feature_group}`'
          type: string
        featureId:
          description: 'Required. The ID to use for the Feature, which will become the final component of the Feature''s resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.'
          type: string
      id: GoogleCloudAiplatformV1CreateFeatureRequest
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange:
      description: 'A range of values for slice(s). `low` is inclusive, `high` is exclusive.'
      id: GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange
      type: object
      properties:
        high:
          type: number
          format: float
          description: Exclusive high value for the range.
        low:
          description: Inclusive low value for the range.
          format: float
          type: number
    GoogleCloudAiplatformV1PipelineTaskDetailArtifactList:
      description: A list of artifact metadata.
      id: GoogleCloudAiplatformV1PipelineTaskDetailArtifactList
      type: object
      properties:
        artifacts:
          type: array
          description: Output only. A list of artifact metadata.
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline:
      properties:
        bigquery:
          description: BigQuery location for BatchExplain output.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination'
        gcs:
          description: Cloud Storage location for BatchExplain output.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
        predictionFormat:
          description: The storage format of the predictions generated BatchPrediction job.
          type: string
          enum:
            - PREDICTION_FORMAT_UNSPECIFIED
            - JSONL
            - BIGQUERY
          enumDescriptions:
            - Should not be set.
            - Predictions are in JSONL files.
            - Predictions are in BigQuery.
      id: GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline
      description: 'Output from BatchPredictionJob for Model Monitoring baseline dataset, which can be used to generate baseline attribution scores.'
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry:
      properties:
        precision:
          description: Precision for the given confidence threshold.
          type: number
          format: float
        confidenceThreshold:
          description: Metrics are computed with an assumption that the model never returns predictions with score lower than this value.
          type: number
          format: float
        confusionMatrix:
          description: Confusion matrix for the given confidence threshold.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix'
        diceScoreCoefficient:
          format: float
          type: number
          description: 'DSC or the F1 score, The harmonic mean of recall and precision.'
        iouScore:
          description: The intersection-over-union score. The measure of overlap of the annotation's category mask with ground truth category mask on the DataItem.
          type: number
          format: float
        recall:
          format: float
          type: number
          description: Recall (True Positive Rate) for the given confidence threshold.
      type: object
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry
    GoogleCloudAiplatformV1SchemaPredictInstanceVideoObjectTrackingPredictionInstance:
      type: object
      description: Prediction input format for Video Object Tracking.
      id: GoogleCloudAiplatformV1SchemaPredictInstanceVideoObjectTrackingPredictionInstance
      properties:
        mimeType:
          description: 'The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime'
          type: string
        timeSegmentStart:
          description: 'The beginning, inclusive, of the video''s time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision.'
          type: string
        timeSegmentEnd:
          description: 'The end, exclusive, of the video''s time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video.'
          type: string
        content:
          type: string
          description: The Google Cloud Storage location of the video on which to perform the prediction.
    GoogleCloudAiplatformV1ExamplesExampleGcsSource:
      properties:
        dataFormat:
          type: string
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - JSONL
          enumDescriptions:
            - 'Format unspecified, used when unset.'
            - Examples are stored in JSONL files.
          description: 'The format in which instances are given, if not specified, assume it''s JSONL format. Currently only JSONL format is supported.'
        gcsSource:
          description: The Cloud Storage location for the input instances.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
      id: GoogleCloudAiplatformV1ExamplesExampleGcsSource
      description: The Cloud Storage input instances.
      type: object
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource:
      id: GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource
      properties:
        uri:
          type: string
          description: The URI of a BigQuery table.
      type: object
    GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig:
      properties:
        objectiveConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig'
          description: The objective config of for the modelmonitoring job of this deployed model.
        deployedModelId:
          description: The DeployedModel ID of the objective config.
          type: string
      description: ModelDeploymentMonitoringObjectiveConfig contains the pair of deployed_model_id to ModelMonitoringObjectiveConfig.
      id: GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig
      type: object
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig:
      type: object
      properties:
        attributionScoreDriftThresholds:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
          type: object
          description: Key is the feature name and value is the threshold. The threshold here is against attribution score distance between different time windows.
        defaultDriftThreshold:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
          description: 'Drift anomaly detection threshold used by all features. When the per-feature thresholds are not set, this field can be used to specify a threshold for all features.'
        driftThresholds:
          description: 'Key is the feature name and value is the threshold. If a feature needs to be monitored for drift, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between different time windws.'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
          type: object
      id: GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig
      description: The config for Prediction data drift detection.
    GoogleCloudAiplatformV1TrainingConfig:
      type: object
      id: GoogleCloudAiplatformV1TrainingConfig
      description: 'CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.'
      properties:
        timeoutTrainingMilliHours:
          format: int64
          type: string
          description: 'The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour.'
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs:
      properties:
        baseModelId:
          description: 'The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.'
          type: string
        uptrainBaseModelId:
          type: string
          description: 'The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType.'
        modelType:
          enumDescriptions:
            - Should not be set.
            - 'A Model best tailored to be used within Google Cloud, and which cannot be exported. Default.'
            - 'A model type best tailored to be used within Google Cloud, which cannot be exported externally. Compared to the CLOUD model above, it is expected to have higher prediction accuracy.'
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow or Core ML model and used on a mobile or edge device afterwards. Expected to have low latency, but may have lower prediction quality than other mobile models.'
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow or Core ML model and used on a mobile or edge device with afterwards.'
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow or Core ML model and used on a mobile or edge device afterwards. Expected to have a higher latency, but should also have a higher prediction quality than other mobile models.'
            - 'EfficientNet model for Model Garden training with customizable hyperparameters. Best tailored to be used within Google Cloud, and cannot be exported externally.'
            - 'MaxViT model for Model Garden training with customizable hyperparameters. Best tailored to be used within Google Cloud, and cannot be exported externally.'
            - 'ViT model for Model Garden training with customizable hyperparameters. Best tailored to be used within Google Cloud, and cannot be exported externally.'
            - 'CoCa model for Model Garden training with customizable hyperparameters. Best tailored to be used within Google Cloud, and cannot be exported externally.'
          type: string
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - CLOUD_1
            - MOBILE_TF_LOW_LATENCY_1
            - MOBILE_TF_VERSATILE_1
            - MOBILE_TF_HIGH_ACCURACY_1
            - EFFICIENTNET
            - MAXVIT
            - VIT
            - COCA
        disableEarlyStopping:
          type: boolean
          description: 'Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Classification might stop training before the entire training budget has been used.'
        tunableParameter:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter'
          description: Trainer type for Vision TrainRequest.
        multiLabel:
          description: 'If false, a single-label (multi-class) Model will be trained (i.e. assuming that for each image just up to one annotation may be applicable). If true, a multi-label Model will be trained (i.e. assuming that for each image multiple annotations may be applicable).'
          type: boolean
        budgetMilliNodeHours:
          description: 'The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 8,000 and 800,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time, considering 8 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1`, the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.'
          format: int64
          type: string
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata
      type: object
      properties:
        evaluatedDataItemsBigqueryUri:
          type: string
          description: BigQuery destination uri for exported evaluated examples.
        trainCostMilliNodeHours:
          format: int64
          type: string
          description: 'Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.'
      description: Model metadata specific to AutoML Forecasting.
    GoogleCloudAiplatformV1SchemaPredictPredictionTabularClassificationPredictionResult:
      id: GoogleCloudAiplatformV1SchemaPredictPredictionTabularClassificationPredictionResult
      properties:
        scores:
          items:
            format: float
            type: number
          description: 'The model''s confidence in each class being correct, higher value means higher confidence. The N-th score corresponds to the N-th class in classes.'
          type: array
        classes:
          type: array
          description: 'The name of the classes being classified, contains all possible values of the target column.'
          items:
            type: string
      type: object
      description: Prediction output format for Tabular Classification.
    GoogleCloudAiplatformV1SchemaPredictInstanceTextClassificationPredictionInstance:
      description: Prediction input format for Text Classification.
      properties:
        mimeType:
          type: string
          description: The MIME type of the text snippet. The supported MIME types are listed below. - text/plain
        content:
          type: string
          description: The text snippet to make the predictions on.
      type: object
      id: GoogleCloudAiplatformV1SchemaPredictInstanceTextClassificationPredictionInstance
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation:
      description: Represents a polyline in image.
      id: GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation
      properties:
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        vertexes:
          description: The vertexes are connected one by one and the last vertex in not connected to the first one.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaVertex'
          type: array
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs
      properties:
        validationOptions:
          type: string
          description: 'Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue'
        availableAtForecastColumns:
          items:
            type: string
          description: 'Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day.'
          type: array
        timeColumn:
          type: string
          description: The name of the column that identifies time order in the time series. This column must be available at forecast.
        forecastHorizon:
          format: int64
          description: The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field.
          type: string
        timeSeriesIdentifierColumn:
          description: The name of the column that identifies the time series.
          type: string
        holidayRegions:
          type: array
          description: 'The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option.'
          items:
            type: string
        additionalExperiments:
          items:
            type: string
          description: Additional experiment flags for the time series forcasting training.
          type: array
        quantiles:
          items:
            format: double
            type: number
          description: 'Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.'
          type: array
        unavailableAtForecastColumns:
          description: 'Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day.'
          items:
            type: string
          type: array
        optimizationObjective:
          description: 'Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error.'
          type: string
        trainBudgetMilliNodeHours:
          description: 'Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend''s discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won''t be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.'
          format: int64
          type: string
        dataGranularity:
          description: Expected difference in time granularity between rows in the data.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity'
        hierarchyConfig:
          description: Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig'
        windowConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig'
          description: Config containing strategy for generating sliding windows.
        weightColumn:
          description: 'Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. This column must be available at forecast.'
          type: string
        contextWindow:
          format: int64
          type: string
          description: The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field.
        exportEvaluatedDataItemsConfig:
          description: 'Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig'
        transformations:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation'
          description: 'Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.'
          type: array
        targetColumn:
          description: The name of the column that the Model is to predict values for. This column must be unavailable at forecast.
          type: string
        timeSeriesAttributeColumns:
          items:
            type: string
          description: 'Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color.'
          type: array
    GoogleCloudAiplatformV1SavedQuery:
      type: object
      properties:
        createTime:
          readOnly: true
          description: Output only. Timestamp when this SavedQuery was created.
          format: google-datetime
          type: string
        annotationFilter:
          readOnly: true
          type: string
          description: Output only. Filters on the Annotations in the dataset.
        metadata:
          description: Some additional information about the SavedQuery.
          type: any
        annotationSpecCount:
          type: integer
          readOnly: true
          description: Output only. Number of AnnotationSpecs in the context of the SavedQuery.
          format: int32
        updateTime:
          type: string
          description: Output only. Timestamp when SavedQuery was last updated.
          format: google-datetime
          readOnly: true
        problemType:
          description: 'Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING'
          type: string
        displayName:
          description: Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        name:
          readOnly: true
          description: Output only. Resource name of the SavedQuery.
          type: string
        supportAutomlTraining:
          type: boolean
          description: Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
          readOnly: true
        etag:
          type: string
          description: 'Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.'
      id: GoogleCloudAiplatformV1SavedQuery
      description: A SavedQuery is a view of the dataset. It references a subset of annotations by problem type and filters.
    GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity:
      description: Response message if the request uses the SelectEntity option.
      type: object
      properties:
        onlineStorageDeletedEntityCount:
          format: int64
          description: The count of deleted entities in the online storage. Each entity ID corresponds to one entity.
          type: string
        offlineStorageDeletedEntityRowCount:
          description: The count of deleted entity rows in the offline storage. Each row corresponds to the combination of an entity ID and a timestamp. One entity ID can have multiple rows in the offline storage.
          type: string
          format: int64
      id: GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity
    GoogleCloudAiplatformV1DeployedIndex:
      id: GoogleCloudAiplatformV1DeployedIndex
      properties:
        reservedIpRanges:
          type: array
          items:
            type: string
          description: 'Optional. A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex. If set, we will deploy the index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC network. The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: ''vertex-ai-ip-range''.'
        deploymentGroup:
          type: string
          description: 'Optional. The deployment group can be no longer than 64 characters (eg: ''test'', ''prod''). If not set, we will use the ''default'' deployment group. Creating `deployment_groups` with `reserved_ip_ranges` is a recommended practice when the peered network has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration. Also, one deployment_group (except ''default'') can only be used with the same reserved_ip_ranges which means if the deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. Note: we only support up to 5 deployment groups(not including ''default'').'
        automaticResources:
          description: 'Optional. A description of resources that the DeployedIndex uses, which to large degree are decided by Vertex AI, and optionally allows only a modest additional configuration. If min_replica_count is not set, the default value is 2 (we don''t provide SLA when min_replica_count=1). If max_replica_count is not set, the default value is min_replica_count. The max allowed replica count is 1000.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1AutomaticResources'
        index:
          type: string
          description: Required. The name of the Index this is the deployment of. We may refer to this Index as the DeployedIndex's "original" Index.
        deployedIndexAuthConfig:
          description: 'Optional. If set, the authentication is enabled for the private endpoint.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndexAuthConfig'
        enableAccessLogging:
          description: 'Optional. If true, private endpoint''s access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each MatchRequest. Note that logs may incur a cost, especially if the deployed index receives a high queries per second rate (QPS). Estimate your costs before enabling this option.'
          type: boolean
        createTime:
          description: Output only. Timestamp when the DeployedIndex was created.
          readOnly: true
          format: google-datetime
          type: string
        privateEndpoints:
          readOnly: true
          description: Output only. Provides paths for users to send requests directly to the deployed index services running on Cloud via private services access. This field is populated if network is configured.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexPrivateEndpoints'
        displayName:
          type: string
          description: 'The display name of the DeployedIndex. If not provided upon creation, the Index''s display_name is used.'
        indexSyncTime:
          format: google-datetime
          description: 'Output only. The DeployedIndex may depend on various data on its original Index. Additionally when certain changes to the original Index are being done (e.g. when what the Index contains is being changed) the DeployedIndex may be asynchronously updated in the background to reflect these changes. If this timestamp''s value is at least the Index.update_time of the original Index, it means that this DeployedIndex and the original Index are in sync. If this timestamp is older, then to see which updates this DeployedIndex already contains (and which it does not), one must list the operations that are running on the original Index. Only the successfully completed Operations with update_time equal or before this sync time are contained in this DeployedIndex.'
          type: string
          readOnly: true
        id:
          description: 'Required. The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.'
          type: string
        dedicatedResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DedicatedResources'
          description: 'Optional. A description of resources that are dedicated to the DeployedIndex, and that need a higher degree of manual configuration. If min_replica_count is not set, the default value is 2 (we don''t provide SLA when min_replica_count=1). If max_replica_count is not set, the default value is min_replica_count. The max allowed replica count is 1000. Available machine types for SMALL shard: e2-standard-2 and all machine types available for MEDIUM and LARGE shard. Available machine types for MEDIUM shard: e2-standard-16 and all machine types available for LARGE shard. Available machine types for LARGE shard: e2-highmem-16, n2d-standard-32. n1-standard-16 and n1-standard-32 are still available, but we recommend e2-standard-16 and e2-highmem-16 for cost efficiency.'
      type: object
      description: A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
    GoogleCloudAiplatformV1DeployModelOperationMetadata:
      id: GoogleCloudAiplatformV1DeployModelOperationMetadata
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
      description: Runtime operation information for EndpointService.DeployModel.
    GoogleCloudAiplatformV1ErrorAnalysisAnnotation:
      id: GoogleCloudAiplatformV1ErrorAnalysisAnnotation
      type: object
      description: Model error analysis for each annotation.
      properties:
        attributedItems:
          description: 'Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem'
        queryType:
          type: string
          enumDescriptions:
            - Unspecified query type for model error analysis.
            - Query similar samples across all classes in the dataset.
            - Query similar samples from the same class of the input sample.
            - Query dissimilar samples from the same class of the input sample.
          description: The query type used for finding the attributed items.
          enum:
            - QUERY_TYPE_UNSPECIFIED
            - ALL_SIMILAR
            - SAME_CLASS_SIMILAR
            - SAME_CLASS_DISSIMILAR
        outlierThreshold:
          type: number
          format: double
          description: The threshold used to determine if this annotation is an outlier or not.
        outlierScore:
          type: number
          format: double
          description: The outlier score of this annotated item. Usually defined as the min of all distances from attributed items.
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec:
      id: GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec
      properties:
        configs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig'
          description: 'Mapping configuration for this SliceSpec. The key is the name of the feature. By default, the key will be prefixed by "instance" as a dictionary prefix for Vertex Batch Predictions output format.'
      description: Specification for how the data should be sliced.
      type: object
    GoogleCloudAiplatformV1PredictRequest:
      properties:
        parameters:
          description: The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.
          type: any
        instances:
          description: 'Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint''s DeployedModels'' Model''s PredictSchemata''s instance_schema_uri.'
          type: array
          items:
            type: any
      type: object
      description: Request message for PredictionService.Predict.
      id: GoogleCloudAiplatformV1PredictRequest
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata:
      description: Model metadata specific to TFT Forecasting.
      properties:
        evaluatedDataItemsBigqueryUri:
          type: string
          description: BigQuery destination uri for exported evaluated examples.
        trainCostMilliNodeHours:
          description: 'Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.'
          type: string
          format: int64
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassification:
      description: A TrainingJob that trains and uploads an AutoML Text Classification Model.
      properties:
        inputs:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs'
          description: The input parameters of this TrainingJob.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassification
      type: object
    GoogleCloudAiplatformV1MigrateResourceRequest:
      description: 'Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to Vertex AI.'
      id: GoogleCloudAiplatformV1MigrateResourceRequest
      type: object
      properties:
        migrateDataLabelingDatasetConfig:
          description: Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's Dataset.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig'
        migrateMlEngineModelVersionConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig'
          description: Config for migrating Version in ml.googleapis.com to Vertex AI's Model.
        migrateAutomlDatasetConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig'
          description: Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset.
        migrateAutomlModelConfig:
          description: Config for migrating Model in automl.googleapis.com to Vertex AI's Model.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig'
    GoogleCloudAiplatformV1PublisherModelDocumentation:
      id: GoogleCloudAiplatformV1PublisherModelDocumentation
      type: object
      properties:
        content:
          type: string
          description: Required. Content of this piece of document (in Markdown format).
        title:
          description: 'Required. E.g., OVERVIEW, USE CASES, DOCUMENTATION, SDK & SAMPLES, JAVA, NODE.JS, etc..'
          type: string
      description: A named piece of documentation.
    GoogleCloudAiplatformV1CreateTensorboardOperationMetadata:
      properties:
        genericMetadata:
          description: Operation metadata for Tensorboard.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1CreateTensorboardOperationMetadata
      description: Details of operations that perform create Tensorboard.
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics:
      type: object
      description: Model evaluation metrics for text sentiment problems.
      properties:
        quadraticKappa:
          type: number
          description: 'Quadratic weighted kappa. Only set for ModelEvaluations, not for ModelEvaluationSlices.'
          format: float
        recall:
          format: float
          type: number
          description: Recall.
        linearKappa:
          type: number
          format: float
          description: 'Linear weighted kappa. Only set for ModelEvaluations, not for ModelEvaluationSlices.'
        f1Score:
          format: float
          type: number
          description: The harmonic mean of recall and precision.
        confusionMatrix:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix'
          description: 'Confusion matrix of the evaluation. Only set for ModelEvaluations, not for ModelEvaluationSlices.'
        meanAbsoluteError:
          format: float
          description: 'Mean absolute error. Only set for ModelEvaluations, not for ModelEvaluationSlices.'
          type: number
        precision:
          description: Precision.
          format: float
          type: number
        meanSquaredError:
          format: float
          type: number
          description: 'Mean squared error. Only set for ModelEvaluations, not for ModelEvaluationSlices.'
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics
    GoogleCloudAiplatformV1SchemaPredictPredictionTextExtractionPredictionResult:
      id: GoogleCloudAiplatformV1SchemaPredictPredictionTextExtractionPredictionResult
      properties:
        ids:
          type: array
          description: 'The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.'
          items:
            type: string
            format: int64
        confidences:
          items:
            format: float
            type: number
          type: array
          description: 'The Model''s confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.'
        textSegmentStartOffsets:
          description: 'The start offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet.'
          type: array
          items:
            type: string
            format: int64
        displayNames:
          type: array
          description: 'The display names of the AnnotationSpecs that had been identified, order matches the IDs.'
          items:
            type: string
        textSegmentEndOffsets:
          type: array
          items:
            type: string
            format: int64
          description: 'The end offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet.'
      type: object
      description: Prediction output format for Text Extraction.
    GoogleCloudAiplatformV1ContainerRegistryDestination:
      properties:
        outputUri:
          description: 'Required. Container Registry URI of a container image. Only Google Container Registry and Artifact Registry are supported now. Accepted forms: * Google Container Registry path. For example: `gcr.io/projectId/imageName:tag`. * Artifact Registry path. For example: `us-central1-docker.pkg.dev/projectId/repoName/imageName:tag`. If a tag is not specified, "latest" will be used as the default tag.'
          type: string
      type: object
      description: The Container Registry location for the container image.
      id: GoogleCloudAiplatformV1ContainerRegistryDestination
    GoogleCloudAiplatformV1SampledShapleyAttribution:
      properties:
        pathCount:
          format: int32
          description: 'Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.'
          type: integer
      description: An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.
      id: GoogleCloudAiplatformV1SampledShapleyAttribution
      type: object
    GoogleCloudAiplatformV1IndexPrivateEndpoints:
      id: GoogleCloudAiplatformV1IndexPrivateEndpoints
      description: 'IndexPrivateEndpoints proto is used to provide paths for users to send requests via private endpoints (e.g. private service access, private service connect). To send request via private service access, use match_grpc_address. To send request via private service connect, use service_attachment.'
      type: object
      properties:
        serviceAttachment:
          readOnly: true
          type: string
          description: Output only. The name of the service attachment resource. Populated if private service connect is enabled.
        matchGrpcAddress:
          readOnly: true
          description: Output only. The ip address used to send match gRPC requests.
          type: string
    GoogleCloudLocationListLocationsResponse:
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          type: array
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
      id: GoogleCloudLocationListLocationsResponse
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation
      description: 'Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed.'
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1MigratableResourceAutomlDataset:
      description: Represents one Dataset in automl.googleapis.com.
      type: object
      id: GoogleCloudAiplatformV1MigratableResourceAutomlDataset
      properties:
        dataset:
          type: string
          description: 'Full resource name of automl Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`.'
        datasetDisplayName:
          type: string
          description: The Dataset's display name in automl.googleapis.com.
    GoogleCloudAiplatformV1UpsertDatapointsRequest:
      id: GoogleCloudAiplatformV1UpsertDatapointsRequest
      description: Request message for IndexService.UpsertDatapoints
      properties:
        datapoints:
          description: A list of datapoints to be created/updated.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint'
      type: object
    GoogleCloudAiplatformV1AddExecutionEventsResponse:
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1AddExecutionEventsResponse
      description: Response message for MetadataService.AddExecutionEvents.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs:
      type: object
      properties:
        modelType:
          enumDescriptions:
            - Should not be set.
            - 'A model best tailored to be used within Google Cloud, and which c annot be exported. Default.'
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow Lite model and used on a mobile or edge device afterwards.'
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) to a Jetson device afterwards.'
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow Lite model and used on a Coral device afterwards.'
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - MOBILE_VERSATILE_1
            - MOBILE_JETSON_VERSATILE_1
            - MOBILE_CORAL_VERSATILE_1
          type: string
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs
    GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata:
      id: GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata
      description: Describes metadata for a TensorboardTimeSeries.
      type: object
      properties:
        maxStep:
          readOnly: true
          description: Output only. Max step index of all data points within a TensorboardTimeSeries.
          type: string
          format: int64
        maxWallTime:
          description: Output only. Max wall clock timestamp of all data points within a TensorboardTimeSeries.
          format: google-datetime
          type: string
          readOnly: true
        maxBlobSequenceLength:
          readOnly: true
          format: int64
          description: 'Output only. The largest blob sequence length (number of blobs) of all data points in this time series, if its ValueType is BLOB_SEQUENCE.'
          type: string
    GoogleCloudAiplatformV1CsvDestination:
      description: The storage details for CSV output content.
      id: GoogleCloudAiplatformV1CsvDestination
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: Required. Google Cloud Storage location.
      type: object
    GoogleCloudAiplatformV1UndeployModelResponse:
      id: GoogleCloudAiplatformV1UndeployModelResponse
      properties: {}
      type: object
      description: Response message for EndpointService.UndeployModel.
    GoogleCloudAiplatformV1ListTensorboardRunsResponse:
      properties:
        nextPageToken:
          description: 'A token, which can be sent as ListTensorboardRunsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        tensorboardRuns:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
          type: array
          description: The TensorboardRuns mathching the request.
      type: object
      description: Response message for TensorboardService.ListTensorboardRuns.
      id: GoogleCloudAiplatformV1ListTensorboardRunsResponse
    GoogleCloudAiplatformV1BatchMigrateResourcesResponse:
      id: GoogleCloudAiplatformV1BatchMigrateResourcesResponse
      description: Response message for MigrationService.BatchMigrateResources.
      type: object
      properties:
        migrateResourceResponses:
          description: Successfully migrated resources.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MigrateResourceResponse'
    GoogleCloudAiplatformV1ListArtifactsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as ListArtifactsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.'
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
          description: The Artifacts retrieved from the MetadataStore.
      type: object
      description: Response message for MetadataService.ListArtifacts.
      id: GoogleCloudAiplatformV1ListArtifactsResponse
    GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec:
      type: object
      properties:
        defaultValue:
          type: string
          description: A default value for an `INTEGER` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
          format: int64
        maxValue:
          format: int64
          description: Required. Inclusive maximum value of the parameter.
          type: string
        minValue:
          type: string
          description: Required. Inclusive minimum value of the parameter.
          format: int64
      description: Value specification for a parameter in `INTEGER` type.
      id: GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec
    GoogleCloudAiplatformV1ListModelVersionsResponse:
      id: GoogleCloudAiplatformV1ListModelVersionsResponse
      description: Response message for ModelService.ListModelVersions
      type: object
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListModelVersionsRequest.page_token to obtain that page.
          type: string
        models:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
          description: 'List of Model versions in the requested page. In the returned Model name field, version ID instead of regvision tag will be included.'
          type: array
    GoogleCloudAiplatformV1DeployIndexRequest:
      description: Request message for IndexEndpointService.DeployIndex.
      id: GoogleCloudAiplatformV1DeployIndexRequest
      type: object
      properties:
        deployedIndex:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndex'
          description: Required. The DeployedIndex to be created within the IndexEndpoint.
    GoogleCloudAiplatformV1SchemaAnnotationSpecColor:
      description: An entry of mapping between color and AnnotationSpec. The mapping is used in segmentation mask.
      id: GoogleCloudAiplatformV1SchemaAnnotationSpecColor
      type: object
      properties:
        color:
          $ref: '#/components/schemas/GoogleTypeColor'
          description: The color of the AnnotationSpec in a segmentation mask.
        displayName:
          description: The display name of the AnnotationSpec represented by the color in the segmentation mask.
          type: string
        id:
          type: string
          description: The ID of the AnnotationSpec represented by the color in the segmentation mask.
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig:
      type: object
      description: The config for Training & Prediction data skew detection. It specifies the training dataset sources and the skew detection parameters.
      id: GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig
      properties:
        skewThresholds:
          type: object
          description: 'Key is the feature name and value is the threshold. If a feature needs to be monitored for skew, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between the training and prediction feature.'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
        attributionScoreSkewThresholds:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
          type: object
          description: Key is the feature name and value is the threshold. The threshold here is against attribution score distance between the training and prediction feature.
        defaultSkewThreshold:
          description: 'Skew anomaly detection threshold used by all features. When the per-feature thresholds are not set, this field can be used to specify a threshold for all features.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
    GoogleCloudAiplatformV1ExportFeatureValuesRequest:
      id: GoogleCloudAiplatformV1ExportFeatureValuesRequest
      description: Request message for FeaturestoreService.ExportFeatureValues.
      type: object
      properties:
        settings:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DestinationFeatureSetting'
          type: array
          description: Per-Feature export settings.
        featureSelector:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureSelector'
          description: Required. Selects Features to export values of.
        fullExport:
          description: Exports all historical values of all entities of the EntityType within a time range
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport'
        destination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValueDestination'
          description: Required. Specifies destination location and format.
        snapshotExport:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport'
          description: Exports the latest Feature values of all entities of the EntityType within a time range.
    GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec:
      id: GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec
      description: Defines the Feature value(s) to import.
      properties:
        id:
          type: string
          description: 'Required. ID of the Feature to import values of. This Feature must exist in the target EntityType, or the request will fail.'
        sourceField:
          description: 'Source column to get the Feature values from. If not set, uses the column with the same name as the Feature ID.'
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaImageBoundingBoxAnnotation:
      description: Annotation details specific to image object detection.
      type: object
      properties:
        xMin:
          type: number
          description: The leftmost coordinate of the bounding box.
          format: double
        yMin:
          type: number
          format: double
          description: The topmost coordinate of the bounding box.
        xMax:
          type: number
          format: double
          description: The rightmost coordinate of the bounding box.
        annotationSpecId:
          type: string
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
        yMax:
          format: double
          type: number
          description: The bottommost coordinate of the bounding box.
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
      id: GoogleCloudAiplatformV1SchemaImageBoundingBoxAnnotation
    GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput:
      properties:
        trainTrials:
          description: Output only. List of NasTrials that were started as part of train stage.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrial'
          readOnly: true
        searchTrials:
          type: array
          description: Output only. List of NasTrials that were started as part of search stage.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrial'
          readOnly: true
      id: GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput
      type: object
      description: The output of a multi-trial Neural Architecture Search (NAS) jobs.
    GoogleCloudAiplatformV1ModelEvaluationSliceSlice:
      description: Definition of a slice.
      type: object
      properties:
        sliceSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec'
          readOnly: true
          description: Output only. Specification for how the data was sliced.
        value:
          description: Output only. The value of the dimension in this slice.
          type: string
          readOnly: true
        dimension:
          description: 'Output only. The dimension of the slice. Well-known dimensions are: * `annotationSpec`: This slice is on the test data that has either ground truth or prediction with AnnotationSpec.display_name equals to value. * `slice`: This slice is a user customized slice defined by its SliceSpec.'
          readOnly: true
          type: string
      id: GoogleCloudAiplatformV1ModelEvaluationSliceSlice
    GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata:
      id: GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata
      description: Runtime operation metadata with regard to Matching Engine Index.
      properties:
        dataBytesCount:
          format: int64
          type: string
          description: The ingested data size in bytes.
        contentValidationStats:
          description: 'The validation stats of the content (per file) to be inserted or updated on the Matching Engine Index resource. Populated if contentsDeltaUri is provided as part of Index.metadata. Please note that, currently for those files that are broken or has unsupported file format, we will not have the stats for those files.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats'
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation
      description: Training pipeline will infer the proper transformation based on the statistic of dataset.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1HyperparameterTuningJob:
      properties:
        updateTime:
          description: Output only. Time when the HyperparameterTuningJob was most recently updated.
          type: string
          format: google-datetime
          readOnly: true
        createTime:
          type: string
          description: Output only. Time when the HyperparameterTuningJob was created.
          readOnly: true
          format: google-datetime
        error:
          readOnly: true
          description: Output only. Only populated when job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.
          $ref: '#/components/schemas/GoogleRpcStatus'
        state:
          enumDescriptions:
            - The job state is unspecified.
            - The job has been just created or resumed and processing has not yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - 'The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.'
            - The job has been cancelled.
            - 'The job has been stopped, and can be resumed.'
            - The job has expired.
            - 'The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.'
            - 'The job is partially succeeded, some results may be missing due to errors.'
          type: string
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          readOnly: true
          description: Output only. The detailed state of the job.
        name:
          description: Output only. Resource name of the HyperparameterTuningJob.
          readOnly: true
          type: string
        studySpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpec'
          description: Required. Study configuration of the HyperparameterTuningJob.
        startTime:
          format: google-datetime
          readOnly: true
          description: Output only. Time when the HyperparameterTuningJob for the first time entered the `JOB_STATE_RUNNING` state.
          type: string
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: 'Customer-managed encryption key options for a HyperparameterTuningJob. If this is set, then all resources created by the HyperparameterTuningJob will be encrypted with the provided encryption key.'
        maxTrialCount:
          description: Required. The desired total number of Trials.
          type: integer
          format: int32
        maxFailedTrialCount:
          description: 'The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails.'
          format: int32
          type: integer
        endTime:
          format: google-datetime
          type: string
          description: 'Output only. Time when the HyperparameterTuningJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.'
          readOnly: true
        trialJobSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
          description: Required. The spec of a trial job. The same spec applies to the CustomJobs created in all the trials.
        labels:
          description: 'The labels with user-defined metadata to organize HyperparameterTuningJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
          type: object
          additionalProperties:
            type: string
        displayName:
          type: string
          description: Required. The display name of the HyperparameterTuningJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        trials:
          description: Output only. Trials of the HyperparameterTuningJob.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
          readOnly: true
        parallelTrialCount:
          description: Required. The desired number of Trials to run in parallel.
          type: integer
          format: int32
      id: GoogleCloudAiplatformV1HyperparameterTuningJob
      type: object
      description: Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a Study specification and multiple CustomJobs with identical CustomJob specification.
    GoogleCloudAiplatformV1Schedule:
      id: GoogleCloudAiplatformV1Schedule
      type: object
      properties:
        lastPauseTime:
          format: google-datetime
          description: Output only. Timestamp when this Schedule was last paused. Unset if never paused.
          type: string
          readOnly: true
        state:
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - The Schedule is active. Runs are being scheduled on the user-specified timespec.
            - The schedule is paused. No new runs will be created until the schedule is resumed. Already started runs will be allowed to complete.
            - The Schedule is completed. No new runs will be scheduled. Already started runs will be allowed to complete. Schedules in completed state cannot be paused or resumed.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
            - COMPLETED
          description: Output only. The state of this Schedule.
        endTime:
          format: google-datetime
          description: 'Optional. Timestamp after which no new runs can be scheduled. If specified, The schedule will be completed when either end_time is reached or when scheduled_run_count >= max_run_count. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified.'
          type: string
        allowQueueing:
          description: 'Optional. Whether new scheduled runs can be queued when max_concurrent_runs limit is reached. If set to true, new runs will be queued instead of skipped. Default to false.'
          type: boolean
        name:
          type: string
          description: Immutable. The resource name of the Schedule.
        catchUp:
          description: 'Output only. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. Default to false.'
          readOnly: true
          type: boolean
        displayName:
          type: string
          description: Required. User provided name of the Schedule. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        nextRunTime:
          type: string
          description: Output only. Timestamp when this Schedule should schedule the next run. Having a next_run_time in the past means the runs are being started behind schedule.
          readOnly: true
          format: google-datetime
        maxRunCount:
          type: string
          format: int64
          description: 'Optional. Maximum run count of the schedule. If specified, The schedule will be completed when either started_run_count >= max_run_count or when end_time is reached. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified.'
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when this Schedule was updated.
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Output only. Timestamp when this Schedule was created.
          readOnly: true
        startTime:
          type: string
          format: google-datetime
          description: Optional. Timestamp after which the first run can be scheduled. Default to Schedule create time if not specified.
        lastScheduledRunResponse:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ScheduleRunResponse'
          description: Output only. Response of the last scheduled run. This is the response for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable). Unset if no run has been scheduled yet.
          readOnly: true
        startedRunCount:
          readOnly: true
          format: int64
          type: string
          description: Output only. The number of runs started by this schedule.
        createPipelineJobRequest:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CreatePipelineJobRequest'
          description: 'Request for PipelineService.CreatePipelineJob. CreatePipelineJobRequest.parent field is required (format: projects/{project}/locations/{location}).'
        lastResumeTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when this Schedule was last resumed. Unset if never resumed from pause.
          readOnly: true
        maxConcurrentRunCount:
          format: int64
          description: Required. Maximum number of runs that can be started concurrently for this Schedule. This is the limit for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable).
          type: string
        cron:
          type: string
          description: 'Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *".'
      description: An instance of a Schedule periodically schedules runs to make API calls based on user specified time specification and API request type.
    GoogleCloudAiplatformV1AvroSource:
      description: The storage details for Avro input content.
      properties:
        gcsSource:
          description: Required. Google Cloud Storage location.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
      id: GoogleCloudAiplatformV1AvroSource
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassification:
      description: A TrainingJob that trains and uploads an AutoML Image Classification Model.
      properties:
        inputs:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs'
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata'
          description: The metadata information.
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassification
    GoogleCloudAiplatformV1EnvVar:
      description: Represents an environment variable present in a Container or Python Module.
      id: GoogleCloudAiplatformV1EnvVar
      properties:
        name:
          description: Required. Name of the environment variable. Must be a valid C identifier.
          type: string
        value:
          type: string
          description: 'Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.'
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetrics:
      description: Metrics for text extraction evaluation results.
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetrics
      properties:
        confidenceMetrics:
          description: Metrics that have confidence thresholds. Precision-recall curve can be derived from them.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics'
        confusionMatrix:
          description: 'Confusion matrix of the evaluation. Only set for Models where number of AnnotationSpecs is no more than 10. Only set for ModelEvaluations, not for ModelEvaluationSlices.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix'
      type: object
    GoogleCloudAiplatformV1Annotation:
      description: Used to assign specific AnnotationSpec to a particular area of a DataItem or the whole part of the DataItem.
      id: GoogleCloudAiplatformV1Annotation
      properties:
        createTime:
          format: google-datetime
          description: Output only. Timestamp when this Annotation was created.
          type: string
          readOnly: true
        updateTime:
          description: Output only. Timestamp when this Annotation was last updated.
          type: string
          format: google-datetime
          readOnly: true
        payload:
          description: Required. The schema of the payload can be found in payload_schema.
          type: any
        name:
          description: Output only. Resource name of the Annotation.
          readOnly: true
          type: string
        annotationSource:
          description: Output only. The source of the Annotation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1UserActionReference'
        labels:
          description: 'Optional. The labels with user-defined metadata to organize your Annotations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Annotation(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Annotation: * "aiplatform.googleapis.com/annotation_set_name": optional, name of the UI''s annotation set this Annotation belongs to. If not set, the Annotation is not visible in the UI. * "aiplatform.googleapis.com/payload_schema": output only, its value is the payload_schema''s title.'
          type: object
          additionalProperties:
            type: string
        etag:
          type: string
          description: 'Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        payloadSchemaUri:
          description: 'Required. Google Cloud Storage URI points to a YAML file describing payload. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with the parent Dataset''s metadata.'
          type: string
      type: object
    GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig:
      properties:
        userEmails:
          items:
            type: string
          type: array
          description: The email addresses to send the alert.
      description: The config for email alert.
      type: object
      id: GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource:
      properties:
        uri:
          description: 'Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.'
          type: array
          items:
            type: string
      id: GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource
      type: object
    GoogleTypeExpr:
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      properties:
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
      id: GoogleTypeExpr
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource:
      id: GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource
      type: object
      properties:
        uri:
          description: 'Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.'
          items:
            type: string
          type: array
    GoogleCloudAiplatformV1SchemaVideoObjectTrackingAnnotation:
      properties:
        xMax:
          type: number
          description: The rightmost coordinate of the bounding box.
          format: double
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        timeOffset:
          type: string
          format: google-duration
          description: A time (frame) of a video to which this annotation pertains. Represented as the duration since the video's start.
        xMin:
          format: double
          description: The leftmost coordinate of the bounding box.
          type: number
        yMax:
          description: The bottommost coordinate of the bounding box.
          type: number
          format: double
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        instanceId:
          format: int64
          type: string
          description: 'The instance of the object, expressed as a positive integer. Used to track the same object across different frames.'
        yMin:
          description: The topmost coordinate of the bounding box.
          format: double
          type: number
      description: Annotation details specific to video object tracking.
      id: GoogleCloudAiplatformV1SchemaVideoObjectTrackingAnnotation
      type: object
    GoogleCloudAiplatformV1UpdateIndexOperationMetadata:
      properties:
        nearestNeighborSearchOperationMetadata:
          description: The operation metadata with regard to Matching Engine Index operation.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata'
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
      id: GoogleCloudAiplatformV1UpdateIndexOperationMetadata
      type: object
      description: Runtime operation information for IndexService.UpdateIndex.
    GoogleCloudAiplatformV1BatchCreateFeaturesOperationMetadata:
      properties:
        genericMetadata:
          description: Operation metadata for Feature.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      type: object
      id: GoogleCloudAiplatformV1BatchCreateFeaturesOperationMetadata
      description: Details of operations that perform batch create Features.
    GoogleCloudAiplatformV1UploadModelResponse:
      description: Response message of ModelService.UploadModel operation.
      type: object
      id: GoogleCloudAiplatformV1UploadModelResponse
      properties:
        modelVersionId:
          readOnly: true
          description: Output only. The version ID of the model that is uploaded.
          type: string
        model:
          description: 'The name of the uploaded Model resource. Format: `projects/{project}/locations/{location}/models/{model}`'
          type: string
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetrics:
      type: object
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetrics
      description: Metrics for classification evaluation results.
      properties:
        auRoc:
          format: float
          type: number
          description: The Area Under Receiver Operating Characteristic curve metric. Micro-averaged for the overall evaluation.
        confidenceMetrics:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics'
          description: 'Metrics for each `confidenceThreshold` in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and `positionThreshold` = INT32_MAX_VALUE. ROC and precision-recall curves, and other aggregated metrics are derived from them. The confidence metrics entries may also be supplied for additional values of `positionThreshold`, but from these no aggregated metrics are computed.'
        confusionMatrix:
          description: Confusion matrix of the evaluation.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix'
        logLoss:
          description: The Log Loss metric.
          type: number
          format: float
        auPrc:
          description: The Area Under Precision-Recall Curve metric. Micro-averaged for the overall evaluation.
          format: float
          type: number
    GoogleCloudAiplatformV1UndeployModelOperationMetadata:
      type: object
      description: Runtime operation information for EndpointService.UndeployModel.
      id: GoogleCloudAiplatformV1UndeployModelOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
    GoogleCloudAiplatformV1SchemaPredictInstanceImageSegmentationPredictionInstance:
      properties:
        content:
          type: string
          description: The image bytes to make the predictions on.
        mimeType:
          description: The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/png
          type: string
      id: GoogleCloudAiplatformV1SchemaPredictInstanceImageSegmentationPredictionInstance
      description: Prediction input format for Image Segmentation.
      type: object
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig:
      description: Config for migrating AnnotatedDataset in datalabeling.googleapis.com to Vertex AI's SavedQuery.
      id: GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig
      properties:
        annotatedDataset:
          type: string
          description: 'Required. Full resource name of data labeling AnnotatedDataset. Format: `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`.'
      type: object
    GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig:
      description: Used in safe optimization to specify threshold levels and risk tolerance.
      type: object
      id: GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig
      properties:
        desiredMinSafeTrialsFraction:
          format: double
          type: number
          description: Desired minimum fraction of safe trials (over total number of trials) that should be targeted by the algorithm at any time during the study (best effort). This should be between 0.0 and 1.0 and a value of 0.0 means that there is no minimum and an algorithm proceeds without targeting any specific fraction. A value of 1.0 means that the algorithm attempts to only Suggest safe Trials.
        safetyThreshold:
          description: 'Safety threshold (boundary value between safe and unsafe). NOTE that if you leave SafetyMetricConfig unset, a default value of 0 will be used.'
          type: number
          format: double
    GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest:
      id: GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest
      description: Request message for TensorboardService.ExportTensorboardTimeSeriesData.
      type: object
      properties:
        filter:
          type: string
          description: Exports the TensorboardTimeSeries' data that match the filter expression.
        orderBy:
          type: string
          description: 'Field to use to sort the TensorboardTimeSeries'' data. By default, TensorboardTimeSeries'' data is returned in a pseudo random order.'
        pageSize:
          description: The maximum number of data points to return per page. The default page_size is 1000. Values must be between 1 and 10000. Values above 10000 are coerced to 10000.
          format: int32
          type: integer
        pageToken:
          description: 'A page token, received from a previous ExportTensorboardTimeSeriesData call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ExportTensorboardTimeSeriesData must match the call that provided the page token.'
          type: string
    GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest:
      type: object
      id: GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest
      description: Request message for VizierService.CheckTrialEarlyStoppingState.
      properties: {}
    GoogleCloudAiplatformV1PipelineJobRuntimeConfig:
      description: The runtime config of a PipelineJob.
      type: object
      properties:
        failurePolicy:
          type: string
          enum:
            - PIPELINE_FAILURE_POLICY_UNSPECIFIED
            - PIPELINE_FAILURE_POLICY_FAIL_SLOW
            - PIPELINE_FAILURE_POLICY_FAIL_FAST
          description: 'Represents the failure policy of a pipeline. Currently, the default of a pipeline is that the pipeline will continue to run until no more tasks can be executed, also known as PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a pipeline is set to PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop scheduling any new tasks when a task has failed. Any scheduled tasks will continue to completion.'
          enumDescriptions:
            - 'Default value, and follows fail slow behavior.'
            - Indicates that the pipeline should continue to run until all possible tasks have been scheduled and completed.
            - Indicates that the pipeline should stop scheduling new tasks after a task has failed.
        parameterValues:
          type: object
          additionalProperties:
            type: any
          description: 'The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.1.0, such as pipelines built using Kubeflow Pipelines SDK 1.9 or higher and the v2 DSL.'
        gcsOutputDirectory:
          type: string
          description: 'Required. A path in a Cloud Storage bucket, which will be treated as the root output directory of the pipeline. It is used by the system to generate the paths of output artifacts. The artifact paths are generated with a sub-path pattern `{job_id}/{task_id}/{output_key}` under the specified output directory. The service account specified in this pipeline must have the `storage.objects.get` and `storage.objects.create` permissions for this bucket.'
        inputArtifacts:
          description: The runtime artifacts of the PipelineJob. The key will be the input artifact name and the value would be one of the InputArtifact.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact'
          type: object
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Value'
          description: 'Deprecated. Use RuntimeConfig.parameter_values instead. The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.0.0 or lower, such as pipelines built using Kubeflow Pipelines SDK 1.8 or lower.'
          type: object
          deprecated: true
      id: GoogleCloudAiplatformV1PipelineJobRuntimeConfig
    GoogleCloudAiplatformV1IdMatcher:
      id: GoogleCloudAiplatformV1IdMatcher
      description: Matcher for Features of an EntityType by Feature ID.
      properties:
        ids:
          items:
            type: string
          description: 'Required. The following are accepted as `ids`: * A single-element list containing only `*`, which selects all Features in the target EntityType, or * A list containing only Feature IDs, which selects only Features with those IDs in the target EntityType.'
          type: array
      type: object
    GoogleCloudAiplatformV1DeleteFeatureValuesOperationMetadata:
      description: Details of operations that delete Feature values.
      type: object
      id: GoogleCloudAiplatformV1DeleteFeatureValuesOperationMetadata
      properties:
        genericMetadata:
          description: Operation metadata for Featurestore delete Features values.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1SchemaVertex:
      properties:
        'y':
          format: double
          type: number
          description: Y coordinate.
        x:
          format: double
          description: X coordinate.
          type: number
      id: GoogleCloudAiplatformV1SchemaVertex
      type: object
      description: 'A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.'
    GoogleCloudAiplatformV1MutateDeployedModelOperationMetadata:
      id: GoogleCloudAiplatformV1MutateDeployedModelOperationMetadata
      type: object
      description: Runtime operation information for EndpointService.MutateDeployedModel.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
    GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec:
      description: 'The median automated stopping rule stops a pending Trial if the Trial''s best objective_value is strictly below the median ''performance'' of all completed Trials reported up to the Trial''s last measurement. Currently, ''performance'' refers to the running average of the objective values reported by the Trial in each measurement.'
      id: GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec
      type: object
      properties:
        useElapsedDuration:
          type: boolean
          description: True if median automated stopping rule applies on Measurement.elapsed_duration. It means that elapsed_duration field of latest measurement of current Trial is used to compute median objective value for each completed Trials.
    GoogleCloudAiplatformV1FractionSplit:
      id: GoogleCloudAiplatformV1FractionSplit
      properties:
        validationFraction:
          description: The fraction of the input data that is to be used to validate the Model.
          format: double
          type: number
        testFraction:
          description: The fraction of the input data that is to be used to evaluate the Model.
          type: number
          format: double
        trainingFraction:
          description: The fraction of the input data that is to be used to train the Model.
          type: number
          format: double
      type: object
      description: 'Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test.'
    GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError:
      properties:
        embeddingId:
          type: string
          description: Empty if the embedding id is failed to parse.
        errorType:
          enumDescriptions:
            - 'Default, shall not be used.'
            - The record is empty.
            - Invalid json format.
            - Invalid csv format.
            - Invalid avro format.
            - The embedding id is not valid.
            - The size of the embedding vectors does not match with the specified dimension.
            - The `namespace` field is missing.
          enum:
            - ERROR_TYPE_UNSPECIFIED
            - EMPTY_LINE
            - INVALID_JSON_SYNTAX
            - INVALID_CSV_SYNTAX
            - INVALID_AVRO_SYNTAX
            - INVALID_EMBEDDING_ID
            - EMBEDDING_SIZE_MISMATCH
            - NAMESPACE_MISSING
          description: The error type of this record.
          type: string
        rawRecord:
          type: string
          description: The original content of this record.
        errorMessage:
          description: 'A human-readable message that is shown to the user to help them fix the error. Note that this message may change from time to time, your code should check against error_type as the source of truth.'
          type: string
        sourceGcsUri:
          type: string
          description: Cloud Storage URI pointing to the original file in user's bucket.
      id: GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError
      type: object
    GoogleCloudAiplatformV1TimeSeriesData:
      description: All the data stored in a TensorboardTimeSeries.
      properties:
        values:
          description: Required. Data points in this time series.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TimeSeriesDataPoint'
        tensorboardTimeSeriesId:
          description: 'Required. The ID of the TensorboardTimeSeries, which will become the final component of the TensorboardTimeSeries'' resource name'
          type: string
        valueType:
          enumDescriptions:
            - The value type is unspecified.
            - Used for TensorboardTimeSeries that is a list of scalars. E.g. accuracy of a model over epochs/time.
            - Used for TensorboardTimeSeries that is a list of tensors. E.g. histograms of weights of layer in a model over epoch/time.
            - Used for TensorboardTimeSeries that is a list of blob sequences. E.g. set of sample images with labels over epochs/time.
          type: string
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - SCALAR
            - TENSOR
            - BLOB_SEQUENCE
          description: Required. Immutable. The value type of this time series. All the values in this time series data must match this value type.
      type: object
      id: GoogleCloudAiplatformV1TimeSeriesData
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition:
      description: A TrainingJob that trains and uploads an AutoML Video Action Recognition Model.
      properties:
        inputs:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs'
          description: The input parameters of this TrainingJob.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition
      type: object
    GoogleCloudAiplatformV1SamplingStrategy:
      properties:
        randomSampleConfig:
          description: Random sample config. Will support more sampling strategies later.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig'
      type: object
      description: 'Sampling Strategy for logging, can be for both training and prediction dataset.'
      id: GoogleCloudAiplatformV1SamplingStrategy
    GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem:
      type: object
      id: GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem
      description: 'Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type.'
      properties:
        distance:
          description: The distance of this item to the annotation.
          type: number
          format: double
        annotationResourceName:
          type: string
          description: The unique ID for each annotation. Used by FE to allocate the annotation in DB.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata:
      properties:
        bestTrialBackingCustomJob:
          description: The resource name of the CustomJob that has been created to run the best Trial of this HyperparameterTuning task.
          type: string
        backingHyperparameterTuningJob:
          description: The resource name of the HyperparameterTuningJob that has been created to carry out this HyperparameterTuning task.
          type: string
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata
      type: object
    GoogleCloudAiplatformV1SchemaTextSegment:
      id: GoogleCloudAiplatformV1SchemaTextSegment
      properties:
        content:
          type: string
          description: The text content in the segment for output only.
        startOffset:
          format: uint64
          type: string
          description: Zero-based character index of the first character of the text segment (counting characters from the beginning of the text).
        endOffset:
          type: string
          description: Zero-based character index of the first character past the end of the text segment (counting character from the beginning of the text). The character at the end_offset is NOT included in the text segment.
          format: uint64
      type: object
      description: The text segment inside of DataItem.
    GoogleCloudAiplatformV1NasJobSpec:
      type: object
      properties:
        searchSpaceSpec:
          type: string
          description: It defines the search space for Neural Architecture Search (NAS).
        multiTrialAlgorithmSpec:
          description: The spec of multi-trial algorithms.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec'
        resumeNasJobId:
          description: The ID of the existing NasJob in the same Project and Location which will be used to resume search. search_space_spec and nas_algorithm_spec are obtained from previous NasJob hence should not provide them again for this NasJob.
          type: string
      description: Represents the spec of a NasJob.
      id: GoogleCloudAiplatformV1NasJobSpec
    GoogleCloudAiplatformV1Endpoint:
      id: GoogleCloudAiplatformV1Endpoint
      description: 'Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations.'
      type: object
      properties:
        predictRequestResponseLoggingConfig:
          description: Configures the request-response logging for online prediction.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig'
        etag:
          type: string
          description: 'Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: 'Customer-managed encryption key spec for an Endpoint. If set, this Endpoint and all sub-resources of this Endpoint will be secured by this key.'
        deployedModels:
          description: Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
        network:
          description: 'Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name.'
          type: string
        updateTime:
          readOnly: true
          description: Output only. Timestamp when this Endpoint was last updated.
          format: google-datetime
          type: string
        modelDeploymentMonitoringJob:
          type: string
          readOnly: true
          description: 'Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`'
        displayName:
          description: Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        name:
          description: Output only. The resource name of the Endpoint.
          readOnly: true
          type: string
        description:
          type: string
          description: The description of the Endpoint.
        trafficSplit:
          additionalProperties:
            format: int32
            type: integer
          description: 'A map from a DeployedModel''s ID to the percentage of this Endpoint''s traffic that should be forwarded to that DeployedModel. If a DeployedModel''s ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.'
          type: object
        createTime:
          description: Output only. Timestamp when this Endpoint was created.
          format: google-datetime
          readOnly: true
          type: string
        enablePrivateServiceConnect:
          type: boolean
          deprecated: true
          description: 'Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.'
        labels:
          additionalProperties:
            type: string
          description: 'The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
          type: object
    GoogleIamV1SetIamPolicyRequest:
      id: GoogleIamV1SetIamPolicyRequest
      type: object
      properties:
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/GoogleIamV1Policy'
      description: Request message for `SetIamPolicy` method.
    GoogleTypeInterval:
      id: GoogleTypeInterval
      description: 'Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.'
      type: object
      properties:
        startTime:
          type: string
          format: google-datetime
          description: 'Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.'
        endTime:
          type: string
          format: google-datetime
          description: 'Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.'
    GoogleCloudAiplatformV1Attribution:
      type: object
      properties:
        outputDisplayName:
          type: string
          readOnly: true
          description: 'Output only. The display name of the output identified by output_index. For example, the predicted class name by a multi-classification Model. This field is only populated iff the Model predicts display names as a separate field along with the explained output. The predicted display name must has the same shape of the explained output, and can be located using output_index.'
        approximationError:
          readOnly: true
          type: number
          description: 'Output only. Error of feature_attributions caused by approximation used in the explanation method. Lower value means more precise attributions. * For Sampled Shapley attribution, increasing path_count might reduce the error. * For Integrated Gradients attribution, increasing step_count might reduce the error. * For XRAI attribution, increasing step_count might reduce the error. See [this introduction](/vertex-ai/docs/explainable-ai/overview) for more information.'
          format: double
        instanceOutputValue:
          format: double
          readOnly: true
          type: number
          description: 'Output only. Model predicted output on the corresponding explanation instance. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model predicted output has multiple dimensions, this is the value in the output located by output_index.'
        baselineOutputValue:
          type: number
          readOnly: true
          format: double
          description: 'Output only. Model predicted output if the input instance is constructed from the baselines of all the features defined in ExplanationMetadata.inputs. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model''s predicted output has multiple dimensions (rank > 1), this is the value in the output located by output_index. If there are multiple baselines, their output values are averaged.'
        outputName:
          readOnly: true
          type: string
          description: Output only. Name of the explain output. Specified as the key in ExplanationMetadata.outputs.
        featureAttributions:
          description: 'Output only. Attributions of each explained feature. Features are extracted from the prediction instances according to explanation metadata for inputs. The value is a struct, whose keys are the name of the feature. The values are how much the feature in the instance contributed to the predicted result. The format of the value is determined by the feature''s input format: * If the feature is a scalar value, the attribution value is a floating number. * If the feature is an array of scalar values, the attribution value is an array. * If the feature is a struct, the attribution value is a struct. The keys in the attribution value struct are the same as the keys in the feature struct. The formats of the values in the attribution struct are determined by the formats of the values in the feature struct. The ExplanationMetadata.feature_attributions_schema_uri field, pointed to by the ExplanationSpec field of the Endpoint.deployed_models object, points to the schema file that describes the features and their attribution values (if it is populated).'
          readOnly: true
          type: any
        outputIndex:
          type: array
          description: 'Output only. The index that locates the explained prediction output. If the prediction output is a scalar value, output_index is not populated. If the prediction output has multiple dimensions, the length of the output_index list is the same as the number of dimensions of the output. The i-th element in output_index is the element index of the i-th dimension of the output vector. Indices start from 0.'
          readOnly: true
          items:
            type: integer
            format: int32
      description: Attribution that explains a particular prediction output.
      id: GoogleCloudAiplatformV1Attribution
    GoogleCloudAiplatformV1CancelTrainingPipelineRequest:
      type: object
      id: GoogleCloudAiplatformV1CancelTrainingPipelineRequest
      properties: {}
      description: Request message for PipelineService.CancelTrainingPipeline.
    GoogleCloudAiplatformV1BlurBaselineConfig:
      id: GoogleCloudAiplatformV1BlurBaselineConfig
      type: object
      description: 'Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383'
      properties:
        maxBlurSigma:
          format: float
          description: 'The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline.'
          type: number
    GoogleCloudAiplatformV1BatchReadFeatureValuesRequest:
      id: GoogleCloudAiplatformV1BatchReadFeatureValuesRequest
      properties:
        startTime:
          format: google-datetime
          type: string
          description: 'Optional. Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision.'
        entityTypeSpecs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec'
          description: Required. Specifies EntityType grouping Features to read values of and settings.
          type: array
        csvReadInstances:
          description: 'Each read instance consists of exactly one read timestamp and one or more entity IDs identifying entities of the corresponding EntityTypes whose Features are requested. Each output instance contains Feature values of requested entities concatenated together as of the read time. An example read instance may be `foo_entity_id, bar_entity_id, 2020-01-01T10:00:00.123Z`. An example output instance may be `foo_entity_id, bar_entity_id, 2020-01-01T10:00:00.123Z, foo_entity_feature1_value, bar_entity_feature2_value`. Timestamp in each read instance must be millisecond-aligned. `csv_read_instances` are read instances stored in a plain-text CSV file. The header should be: [ENTITY_TYPE_ID1], [ENTITY_TYPE_ID2], ..., timestamp The columns can be in any order. Values in the timestamp column must use the RFC 3339 format, e.g. `2012-07-30T10:43:17.123Z`.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CsvSource'
        destination:
          description: Required. Specifies output location and format.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValueDestination'
        bigqueryReadInstances:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQuerySource'
          description: 'Similar to csv_read_instances, but from BigQuery source.'
        passThroughFields:
          description: 'When not empty, the specified fields in the *_read_instances source will be joined as-is in the output, in addition to those fields from the Featurestore Entity. For BigQuery source, the type of the pass-through values will be automatically inferred. For CSV source, the pass-through values will be passed as opaque bytes.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField'
      type: object
      description: Request message for FeaturestoreService.BatchReadFeatureValues.
    GoogleCloudAiplatformV1ListExecutionsResponse:
      properties:
        executions:
          description: The Executions retrieved from the MetadataStore.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
          type: array
        nextPageToken:
          description: 'A token, which can be sent as ListExecutionsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.'
          type: string
      id: GoogleCloudAiplatformV1ListExecutionsResponse
      type: object
      description: Response message for MetadataService.ListExecutions.
    GoogleCloudAiplatformV1Feature:
      description: 'Feature Metadata information that describes an attribute of an entity type. For example, apple is an entity type, and color is a feature that describes apple.'
      properties:
        name:
          type: string
          description: 'Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.'
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.'
        versionLabels:
          additionalProperties:
            type: string
          type: object
          description: 'The labels with user-defined metadata to organize your versions. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
        valueType:
          description: Required. Immutable. Type of Feature value.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - BOOL
            - BOOL_ARRAY
            - DOUBLE
            - DOUBLE_ARRAY
            - INT64
            - INT64_ARRAY
            - STRING
            - STRING_ARRAY
            - BYTES
          enumDescriptions:
            - The value type is unspecified.
            - Used for Feature that is a boolean.
            - Used for Feature that is a list of boolean.
            - Used for Feature that is double.
            - Used for Feature that is a list of double.
            - Used for Feature that is INT64.
            - Used for Feature that is a list of INT64.
            - Used for Feature that is string.
            - Used for Feature that is a list of String.
            - Used for Feature that is bytes.
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: Output only. Timestamp when this EntityType was most recently updated.
          readOnly: true
        etag:
          description: 'Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
          type: string
        disableMonitoring:
          description: 'Optional. If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.'
          type: boolean
        description:
          description: Description of the Feature.
          type: string
        createTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when this EntityType was created.
          readOnly: true
        monitoringStatsAnomalies:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly'
          type: array
          readOnly: true
          description: Output only. The list of historical stats and anomalies with specified objectives.
      id: GoogleCloudAiplatformV1Feature
      type: object
    GoogleCloudAiplatformV1PurgeContextsMetadata:
      id: GoogleCloudAiplatformV1PurgeContextsMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for purging Contexts.
      type: object
      description: Details of operations that perform MetadataService.PurgeContexts.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation
      description: 'Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes.'
      properties:
        columnName:
          type: string
    GoogleCloudAiplatformV1TensorboardBlob:
      description: 'One blob (e.g, image, graph) viewable on a blob metric plot.'
      type: object
      properties:
        data:
          format: byte
          description: Optional. The bytes of the blob is not present unless it's returned by the ReadTensorboardBlobData endpoint.
          type: string
        id:
          type: string
          description: Output only. A URI safe key uniquely identifying a blob. Can be used to locate the blob stored in the Cloud Storage bucket of the consumer project.
          readOnly: true
      id: GoogleCloudAiplatformV1TensorboardBlob
    GoogleCloudAiplatformV1CreateEntityTypeOperationMetadata:
      id: GoogleCloudAiplatformV1CreateEntityTypeOperationMetadata
      type: object
      description: Details of operations that perform create EntityType.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for EntityType.
    GoogleIamV1TestIamPermissionsResponse:
      id: GoogleIamV1TestIamPermissionsResponse
      type: object
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
    GoogleCloudAiplatformV1ListTensorboardsResponse:
      type: object
      id: GoogleCloudAiplatformV1ListTensorboardsResponse
      properties:
        tensorboards:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensorboard'
          type: array
          description: The Tensorboards mathching the request.
        nextPageToken:
          type: string
          description: 'A token, which can be sent as ListTensorboardsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      description: Response message for TensorboardService.ListTensorboards.
    GoogleCloudAiplatformV1ModelEvaluation:
      type: object
      properties:
        modelExplanation:
          description: 'Aggregated explanation metrics for the Model''s prediction output over the data this ModelEvaluation uses. This field is populated only if the Model is evaluated with explanations, and only for AutoML tabular Models. '
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelExplanation'
        annotationSchemaUri:
          description: 'Points to a YAML file stored on Google Cloud Storage describing EvaluatedDataItemView.predictions, EvaluatedDataItemView.ground_truths, EvaluatedAnnotation.predictions, and EvaluatedAnnotation.ground_truths. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). This field is not populated if there are neither EvaluatedDataItemViews nor EvaluatedAnnotations under this ModelEvaluation.'
          type: string
        explanationSpecs:
          type: array
          description: Describes the values of ExplanationSpec that are used for explaining the predicted values on the evaluated data.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec'
        metadata:
          description: 'The metadata of the ModelEvaluation. For the ModelEvaluation uploaded from Managed Pipeline, metadata contains a structured value with keys of "pipeline_job_id", "evaluation_dataset_type", "evaluation_dataset_path".'
          type: any
        dataItemSchemaUri:
          type: string
          description: 'Points to a YAML file stored on Google Cloud Storage describing EvaluatedDataItemView.data_item_payload and EvaluatedAnnotation.data_item_payload. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). This field is not populated if there are neither EvaluatedDataItemViews nor EvaluatedAnnotations under this ModelEvaluation.'
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the ModelEvaluation.
        displayName:
          type: string
          description: The display name of the ModelEvaluation.
        metrics:
          type: any
          description: Evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri
        metricsSchemaUri:
          description: 'Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluation. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).'
          type: string
        createTime:
          description: Output only. Timestamp when this ModelEvaluation was created.
          readOnly: true
          format: google-datetime
          type: string
        sliceDimensions:
          type: array
          items:
            type: string
          description: 'All possible dimensions of ModelEvaluationSlices. The dimensions can be used as the filter of the ModelService.ListModelEvaluationSlices request, in the form of `slice.dimension = `.'
      id: GoogleCloudAiplatformV1ModelEvaluation
      description: A collection of metrics calculated by comparing Model's predictions on all of the test data against annotations from the test data.
    GoogleCloudAiplatformV1Measurement:
      properties:
        stepCount:
          type: string
          description: Output only. The number of steps the machine learning model has been trained for. Must be non-negative.
          readOnly: true
          format: int64
        metrics:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MeasurementMetric'
          description: Output only. A list of metrics got by evaluating the objective functions using suggested Parameter values.
          type: array
        elapsedDuration:
          type: string
          format: google-duration
          description: Output only. Time that the Trial has been running at the point of this Measurement.
          readOnly: true
      description: A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values.
      id: GoogleCloudAiplatformV1Measurement
      type: object
    GoogleCloudAiplatformV1SchemaImageDataItem:
      id: GoogleCloudAiplatformV1SchemaImageDataItem
      type: object
      description: Payload of Image DataItem.
      properties:
        mimeType:
          readOnly: true
          description: Output only. The mime type of the content of the image. Only the images in below listed mime types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
          type: string
        gcsUri:
          description: Required. Google Cloud Storage URI points to the original image in user's bucket. The image is up to 30MB in size.
          type: string
    GoogleCloudAiplatformV1CreatePipelineJobRequest:
      id: GoogleCloudAiplatformV1CreatePipelineJobRequest
      properties:
        pipelineJobId:
          description: 'The ID to use for the PipelineJob, which will become the final component of the PipelineJob name. If not provided, an ID will be automatically generated. This value should be less than 128 characters, and valid characters are /a-z-/.'
          type: string
        pipelineJob:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJob'
          description: Required. The PipelineJob to create.
        parent:
          description: 'Required. The resource name of the Location to create the PipelineJob in. Format: `projects/{project}/locations/{location}`'
          type: string
      description: Request message for PipelineService.CreatePipelineJob.
      type: object
    GoogleCloudAiplatformV1ListMetadataSchemasResponse:
      id: GoogleCloudAiplatformV1ListMetadataSchemasResponse
      properties:
        nextPageToken:
          description: 'A token, which can be sent as ListMetadataSchemasRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.'
          type: string
        metadataSchemas:
          description: The MetadataSchemas found for the MetadataStore.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataSchema'
          type: array
      type: object
      description: Response message for MetadataService.ListMetadataSchemas.
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig:
      description: 'The objective configuration for model monitoring, including the information needed to detect anomalies for one particular model.'
      type: object
      id: GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig
      properties:
        explanationConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig'
          description: The config for integrating with Vertex Explainable AI.
        trainingDataset:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset'
          description: Training dataset for models. This field has to be set only if TrainingPredictionSkewDetectionConfig is specified.
        predictionDriftDetectionConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig'
          description: The config for drift of prediction data.
        trainingPredictionSkewDetectionConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig'
          description: The config for skew between training data and prediction data.
    GoogleCloudAiplatformV1ExportDataResponse:
      properties:
        exportedFiles:
          type: array
          description: All of the files that are exported in this export operation.
          items:
            type: string
      type: object
      description: Response message for DatasetService.ExportData.
      id: GoogleCloudAiplatformV1ExportDataResponse
    GoogleCloudAiplatformV1ListEndpointsResponse:
      type: object
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListEndpointsRequest.page_token to obtain that page.
          type: string
        endpoints:
          description: List of Endpoints in the requested page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Endpoint'
      description: Response message for EndpointService.ListEndpoints.
      id: GoogleCloudAiplatformV1ListEndpointsResponse
    GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse:
      type: object
      id: GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse
      description: Response message for TensorboardService.WriteTensorboardExperimentData.
      properties: {}
    GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats:
      type: object
      id: GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats
      properties:
        invalidRecordCount:
          format: int64
          description: Number of records in this file we skipped due to validate errors.
          type: string
        sourceGcsUri:
          type: string
          description: Cloud Storage URI pointing to the original file in user's bucket.
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError'
          description: The detail information of the partial failures encountered for those invalid records that couldn't be parsed. Up to 50 partial errors will be reported.
        validRecordCount:
          type: string
          description: Number of records in this file that were successfully processed.
          format: int64
    GoogleCloudAiplatformV1Dataset:
      description: A collection of DataItems and Annotations on them.
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Timestamp when this Dataset was created.
        description:
          type: string
          description: The description of the Dataset.
        metadataSchemaUri:
          type: string
          description: 'Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.'
        metadataArtifact:
          readOnly: true
          type: string
          description: 'Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.'
        name:
          type: string
          description: Output only. The resource name of the Dataset.
          readOnly: true
        etag:
          type: string
          description: 'Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        encryptionSpec:
          description: 'Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        displayName:
          type: string
          description: Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        savedQueries:
          description: 'All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.'
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SavedQuery'
          type: array
        metadata:
          description: Required. Additional information about the Dataset.
          type: any
        dataItemCount:
          format: int64
          readOnly: true
          description: Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
          type: string
        updateTime:
          type: string
          description: Output only. Timestamp when this Dataset was last updated.
          format: google-datetime
          readOnly: true
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema''s title.'
      type: object
      id: GoogleCloudAiplatformV1Dataset
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation:
      properties:
        timeFormat:
          description: 'The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)'
          type: string
        columnName:
          type: string
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation
      type: object
      description: 'Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.'
    GoogleCloudAiplatformV1PurgeArtifactsMetadata:
      id: GoogleCloudAiplatformV1PurgeArtifactsMetadata
      description: Details of operations that perform MetadataService.PurgeArtifacts.
      type: object
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for purging Artifacts.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata
      type: object
      properties:
        successfulStopReason:
          enum:
            - SUCCESSFUL_STOP_REASON_UNSPECIFIED
            - BUDGET_REACHED
            - MODEL_CONVERGED
          enumDescriptions:
            - Should not be set.
            - The inputs.budgetMilliNodeHours had been reached.
            - 'Further training of the Model ceased to increase its quality, since it already has converged.'
          description: 'For successful job completions, this is the reason why the job has finished.'
          type: string
        costMilliNodeHours:
          format: int64
          type: string
          description: 'The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.'
    GoogleCloudAiplatformV1SearchDataItemsResponse:
      properties:
        dataItemViews:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DataItemView'
          description: The DataItemViews read.
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass to SearchDataItemsRequest.page_token to obtain that page.
          type: string
      description: Response message for DatasetService.SearchDataItems.
      id: GoogleCloudAiplatformV1SearchDataItemsResponse
      type: object
    GoogleCloudAiplatformV1UpdateTensorboardOperationMetadata:
      id: GoogleCloudAiplatformV1UpdateTensorboardOperationMetadata
      description: Details of operations that perform update Tensorboard.
      type: object
      properties:
        genericMetadata:
          description: Operation metadata for Tensorboard.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata:
      properties:
        backingCustomJob:
          description: The resource name of the CustomJob that has been created to carry out this custom task.
          type: string
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata
      type: object
    GoogleCloudAiplatformV1XraiAttribution:
      type: object
      id: GoogleCloudAiplatformV1XraiAttribution
      description: 'An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model''s fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models.'
      properties:
        blurBaselineConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BlurBaselineConfig'
          description: 'Config for XRAI with blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383'
        stepCount:
          type: integer
          format: int32
          description: 'Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range. Valid range of its value is [1, 100], inclusively.'
        smoothGradConfig:
          description: 'Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SmoothGradConfig'
    GoogleCloudAiplatformV1NasJobOutput:
      description: Represents a uCAIP NasJob output.
      type: object
      id: GoogleCloudAiplatformV1NasJobOutput
      properties:
        multiTrialJobOutput:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput'
          description: Output only. The output of this multi-trial Neural Architecture Search (NAS) job.
          readOnly: true
    GoogleCloudAiplatformV1GcsSource:
      description: The Google Cloud Storage location for the input content.
      properties:
        uris:
          items:
            type: string
          type: array
          description: 'Required. Google Cloud Storage URI(-s) to the input file(s). May contain wildcards. For more information on wildcards, see https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.'
      id: GoogleCloudAiplatformV1GcsSource
      type: object
    GoogleLongrunningOperation:
      properties:
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      id: GoogleLongrunningOperation
    GoogleCloudAiplatformV1PurgeArtifactsResponse:
      id: GoogleCloudAiplatformV1PurgeArtifactsResponse
      properties:
        purgeSample:
          type: array
          items:
            type: string
          description: A sample of the Artifact names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer).
        purgeCount:
          type: string
          format: int64
          description: 'The number of Artifacts that this request deleted (or, if `force` is false, the number of Artifacts that will be deleted). This can be an estimate.'
      type: object
      description: Response message for MetadataService.PurgeArtifacts.
    GoogleCloudAiplatformV1ModelExportFormat:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: 'Output only. The ID of the export format. The possible format IDs are: * `tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices. * `tf-saved-model` A tensorflow model in SavedModel format. * `tf-js` A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used in the browser and in Node.js using JavaScript. * `core-ml` Used for iOS mobile devices. * `custom-trained` A Model that was uploaded or trained by custom code.'
        exportableContents:
          items:
            enumDescriptions:
              - Should not be used.
              - Model artifact and any of its supported files. Will be exported to the location specified by the `artifactDestination` field of the ExportModelRequest.output_config object.
              - The container image that is to be used when deploying this Model. Will be exported to the location specified by the `imageDestination` field of the ExportModelRequest.output_config object.
            enum:
              - EXPORTABLE_CONTENT_UNSPECIFIED
              - ARTIFACT
              - IMAGE
            type: string
          description: Output only. The content of this Model that may be exported.
          readOnly: true
          type: array
      id: GoogleCloudAiplatformV1ModelExportFormat
      description: Represents export format supported by the Model. All formats export to Google Cloud Storage.
    GoogleCloudAiplatformV1ExplanationMetadata:
      description: Metadata describing the Model's input and output for explanation.
      type: object
      properties:
        outputs:
          description: 'Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata'
          type: object
        inputs:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataInputMetadata'
          description: 'Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.'
          type: object
        latentSpaceSource:
          type: string
          description: Name of the source to generate embeddings for example based explanations.
        featureAttributionsSchemaUri:
          description: 'Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.'
          type: string
      id: GoogleCloudAiplatformV1ExplanationMetadata
    GoogleCloudAiplatformV1FeatureStatsAnomaly:
      description: 'Stats and Anomaly generated at specific timestamp for specific Feature. The start_time and end_time are used to define the time range of the dataset that current stats belongs to, e.g. prediction traffic is bucketed into prediction datasets by time window. If the Dataset is not defined by time window, start_time = end_time. Timestamp of the stats and anomalies always refers to end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in the tensorflow defined protos. Field data_stats contains almost identical information with the raw stats in Vertex AI defined proto, for UI to display.'
      type: object
      id: GoogleCloudAiplatformV1FeatureStatsAnomaly
      properties:
        startTime:
          type: string
          format: google-datetime
          description: 'The start timestamp of window where stats were generated. For objectives where time window doesn''t make sense (e.g. Featurestore Snapshot Monitoring), start_time is only used to indicate the monitoring intervals, so it always equals to (end_time - monitoring_interval).'
        statsUri:
          type: string
          description: 'Path of the stats file for current feature values in Cloud Storage bucket. Format: gs:////stats. Example: gs://monitoring_bucket/feature_name/stats. Stats are stored as binary format with Protobuf message [tensorflow.metadata.v0.FeatureNameStatistics](https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/statistics.proto).'
        distributionDeviation:
          type: number
          format: double
          description: 'Deviation from the current stats to baseline stats. 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence.'
        endTime:
          description: 'The end timestamp of window where stats were generated. For objectives where time window doesn''t make sense (e.g. Featurestore Snapshot Monitoring), end_time indicates the timestamp of the data used to generate stats (e.g. timestamp we take snapshots for feature values).'
          type: string
          format: google-datetime
        score:
          type: number
          description: 'Feature importance score, only populated when cross-feature monitoring is enabled. For now only used to represent feature attribution score within range [0, 1] for ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT.'
          format: double
        anomalyDetectionThreshold:
          format: double
          type: number
          description: 'This is the threshold used when detecting anomalies. The threshold can be changed by user, so this one might be different from ThresholdConfig.value.'
        anomalyUri:
          type: string
          description: 'Path of the anomaly file for current feature values in Cloud Storage bucket. Format: gs:////anomalies. Example: gs://monitoring_bucket/feature_name/anomalies. Stats are stored as binary format with Protobuf message Anoamlies are stored as binary format with Protobuf message [tensorflow.metadata.v0.AnomalyInfo] (https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/anomalies.proto).'
    GoogleCloudAiplatformV1Presets:
      type: object
      properties:
        query:
          enumDescriptions:
            - More precise neighbors as a trade-off against slower response.
            - Faster response as a trade-off against less precise neighbors.
          enum:
            - PRECISE
            - FAST
          type: string
          description: 'Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`.'
        modality:
          enumDescriptions:
            - Should not be set. Added as a recommended best practice for enums
            - IMAGE modality
            - TEXT modality
            - TABULAR modality
          description: 'The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type.'
          type: string
          enum:
            - MODALITY_UNSPECIFIED
            - IMAGE
            - TEXT
            - TABULAR
      id: GoogleCloudAiplatformV1Presets
      description: Preset configuration for example-based explanations
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResult:
      properties:
        timeSegmentStart:
          description: 'The beginning, inclusive, of the video''s time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.'
          format: google-duration
          type: string
        frames:
          description: All of the frames of the video in which a single object instance has been detected. The bounding boxes in the frames identify the same object.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame'
          type: array
        timeSegmentEnd:
          type: string
          format: google-duration
          description: 'The end, inclusive, of the video''s time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.'
        confidence:
          format: float
          description: 'The Model''s confidence in correction of this prediction, higher value means higher confidence.'
          type: number
        id:
          description: The resource ID of the AnnotationSpec that had been identified.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that had been identified.
          type: string
      id: GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResult
      description: Prediction output format for Video Object Tracking.
      type: object
    GoogleCloudAiplatformV1GenericOperationMetadata:
      properties:
        updateTime:
          type: string
          description: 'Output only. Time when the operation was updated for the last time. If the operation has finished (successfully or not), this is the finish time.'
          format: google-datetime
          readOnly: true
        partialFailures:
          readOnly: true
          description: Output only. Partial failures encountered. E.g. single files that couldn't be read. This field should never exceed 20 entries. Status details field will contain standard Google Cloud error details.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        createTime:
          description: Output only. Time when the operation was created.
          readOnly: true
          type: string
          format: google-datetime
      type: object
      id: GoogleCloudAiplatformV1GenericOperationMetadata
      description: Generic Metadata shared by all operations.
    GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature:
      type: object
      description: Response message if the request uses the SelectTimeRangeAndFeature option.
      properties:
        offlineStorageModifiedEntityRowCount:
          format: int64
          description: 'The count of modified entity rows in the offline storage. Each row corresponds to the combination of an entity ID and a timestamp. One entity ID can have multiple rows in the offline storage. Within each row, only the features specified in the request are deleted.'
          type: string
        onlineStorageModifiedEntityCount:
          description: 'The count of modified entities in the online storage. Each entity ID corresponds to one entity. Within each entity, only the features specified in the request are deleted.'
          format: int64
          type: string
        impactedFeatureCount:
          description: The count of the features or columns impacted. This is the same as the feature count in the request.
          type: string
          format: int64
      id: GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature
    GoogleCloudAiplatformV1PurgeContextsResponse:
      description: Response message for MetadataService.PurgeContexts.
      properties:
        purgeSample:
          description: A sample of the Context names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer).
          items:
            type: string
          type: array
        purgeCount:
          format: int64
          description: 'The number of Contexts that this request deleted (or, if `force` is false, the number of Contexts that will be deleted). This can be an estimate.'
          type: string
      id: GoogleCloudAiplatformV1PurgeContextsResponse
      type: object
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis:
      description: Configuration of the Featurestore's ImportFeature Analysis Based Monitoring. This type of analysis generates statistics for values of each Feature imported by every ImportFeatureValues operation.
      properties:
        anomalyDetectionBaseline:
          enumDescriptions:
            - Should not be used.
            - 'Choose the later one statistics generated by either most recent snapshot analysis or previous import features analysis. If non of them exists, skip anomaly detection and only generate a statistics.'
            - Use the statistics generated by the most recent snapshot analysis if exists.
            - Use the statistics generated by the previous import features analysis if exists.
          description: The baseline used to do anomaly detection for the statistics generated by import features analysis.
          enum:
            - BASELINE_UNSPECIFIED
            - LATEST_STATS
            - MOST_RECENT_SNAPSHOT_STATS
            - PREVIOUS_IMPORT_FEATURES_STATS
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - DEFAULT
            - ENABLED
            - DISABLED
          type: string
          description: Whether to enable / disable / inherite default hebavior for import features analysis.
          enumDescriptions:
            - Should not be used.
            - 'The default behavior of whether to enable the monitoring. EntityType-level config: disabled. Feature-level config: inherited from the configuration of EntityType this Feature belongs to.'
            - 'Explicitly enables import features analysis. EntityType-level config: by default enables import features analysis for all Features under it. Feature-level config: enables import features analysis regardless of the EntityType-level config.'
            - 'Explicitly disables import features analysis. EntityType-level config: by default disables import features analysis for all Features under it. Feature-level config: disables import features analysis regardless of the EntityType-level config.'
      id: GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis
      type: object
    GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest:
      properties:
        pageSize:
          description: The standard list page size.
          format: int32
          type: integer
        endTime:
          description: 'The latest timestamp of stats being generated. If not set, indicates feching stats till the latest possible one.'
          format: google-datetime
          type: string
        startTime:
          description: 'The earliest timestamp of stats being generated. If not set, indicates fetching stats till the earliest possible one.'
          format: google-datetime
          type: string
        pageToken:
          type: string
          description: A page token received from a previous JobService.SearchModelDeploymentMonitoringStatsAnomalies call.
        deployedModelId:
          description: 'Required. The DeployedModel ID of the [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id].'
          type: string
        objectives:
          description: Required. Objectives of the stats to retrieve.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective'
          type: array
        featureDisplayName:
          type: string
          description: 'The feature display name. If specified, only return the stats belonging to this feature. Format: ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name, example: "user_destination".'
      type: object
      description: Request message for JobService.SearchModelDeploymentMonitoringStatsAnomalies.
      id: GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest
    GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata:
      type: object
      properties:
        indexDisplayNameMapping:
          description: 'Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It''s not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index.'
          type: any
        displayNameMappingKey:
          type: string
          description: 'Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.'
        outputTensorName:
          description: Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow.
          type: string
      description: Metadata of the prediction output to be explained.
      id: GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata
    GoogleCloudAiplatformV1SchemaVideoClassificationAnnotation:
      type: object
      description: Annotation details specific to video classification.
      properties:
        timeSegment:
          description: 'This Annotation applies to the time period represented by the TimeSegment. If it''s not set, the Annotation applies to the whole video.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSegment'
        annotationSpecId:
          type: string
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
      id: GoogleCloudAiplatformV1SchemaVideoClassificationAnnotation
    GoogleCloudAiplatformV1AutoscalingMetricSpec:
      type: object
      properties:
        target:
          type: integer
          format: int32
          description: 'The target resource utilization in percentage (1% - 100%) for the given metric; once the real usage deviates from the target by a certain percentage, the machine replicas change. The default value is 60 (representing 60%) if not provided.'
        metricName:
          description: 'Required. The resource metric name. Supported metrics: * For Online Prediction: * `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle` * `aiplatform.googleapis.com/prediction/online/cpu/utilization`'
          type: string
      id: GoogleCloudAiplatformV1AutoscalingMetricSpec
      description: 'The metric specification that defines the target resource utilization (CPU utilization, accelerator''s duty cycle, and so on) for calculating the desired replica count.'
    GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig:
      properties:
        keyField:
          description: 'The name of the field that is considered as a key. The values identified by the key field is not included in the transformed instances that is sent to the Model. This is similar to specifying this name of the field in excluded_fields. In addition, the batch prediction output will not include the instances. Instead the output will only include the value of the key field, in a field named `key` in the output: * For `jsonl` output format, the output will have a `key` field instead of the `instance` field. * For `csv`/`bigquery` output format, the output will have have a `key` column instead of the instance feature columns. The input must be JSONL with objects at each line, CSV, BigQuery or TfRecord.'
          type: string
        excludedFields:
          type: array
          description: 'Fields that will be excluded in the prediction instance that is sent to the Model. Excluded will be attached to the batch prediction output if key_field is not specified. When excluded_fields is populated, included_fields must be empty. The input must be JSONL with objects at each line, CSV, BigQuery or TfRecord.'
          items:
            type: string
        includedFields:
          description: 'Fields that will be included in the prediction instance that is sent to the Model. If instance_type is `array`, the order of field names in included_fields also determines the order of the values in the array. When included_fields is populated, excluded_fields must be empty. The input must be JSONL with objects at each line, CSV, BigQuery or TfRecord.'
          items:
            type: string
          type: array
        instanceType:
          description: 'The format of the instance that the Model accepts. Vertex AI will convert compatible batch prediction input instance formats to the specified format. Supported values are: * `object`: Each input is converted to JSON object format. * For `bigquery`, each row is converted to an object. * For `jsonl`, each line of the JSONL input must be an object. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. * `array`: Each input is converted to JSON array format. * For `bigquery`, each row is converted to an array. The order of columns is determined by the BigQuery column order, unless included_fields is populated. included_fields must be populated for specifying field orders. * For `jsonl`, if each line of the JSONL input is an object, included_fields must be populated for specifying field orders. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. If not specified, Vertex AI converts the batch prediction input as follows: * For `bigquery` and `csv`, the behavior is the same as `array`. The order of columns is the same as defined in the file or table, unless included_fields is populated. * For `jsonl`, the prediction instance format is determined by each line of the input. * For `tf-record`/`tf-record-gzip`, each record will be converted to an object in the format of `{"b64": }`, where `` is the Base64-encoded string of the content of the record. * For `file-list`, each file in the list will be converted to an object in the format of `{"b64": }`, where `` is the Base64-encoded string of the content of the file.'
          type: string
      type: object
      id: GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig
      description: Configuration defining how to transform batch prediction input instances to the instances that the Model accepts.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef:
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef
      type: object
      properties:
        id:
          description: ID of the AnnotationSpec.
          type: string
        displayName:
          type: string
          description: Display name of the AnnotationSpec.
    GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData:
      properties:
        username:
          type: string
          description: User's username
        viewCount:
          type: string
          description: Number of times the user has read data within the Tensorboard.
          format: int64
      type: object
      id: GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData
      description: Per user usage data.
    GoogleCloudAiplatformV1RemoveDatapointsResponse:
      description: Response message for IndexService.RemoveDatapoints
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1RemoveDatapointsResponse
    GoogleCloudAiplatformV1Index:
      properties:
        metadata:
          description: An additional information about the Index; the schema of the metadata can be found in metadata_schema.
          type: any
        displayName:
          description: Required. The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        deployedIndexes:
          type: array
          description: Output only. The pointers to DeployedIndexes created from this Index. An Index can be only deleted if all its DeployedIndexes had been undeployed first.
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndexRef'
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this Index was created.
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'The labels with user-defined metadata to organize your Indexes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
          type: object
        indexStats:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexStats'
          readOnly: true
          description: Output only. Stats of the index resource.
        name:
          type: string
          description: Output only. The resource name of the Index.
          readOnly: true
        etag:
          type: string
          description: 'Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: 'Output only. Timestamp when this Index was most recently updated. This also includes any update to the contents of the Index. Note that Operations working on this Index may have their Operations.metadata.generic_metadata.update_time a little after the value of this timestamp, yet that does not mean their results are not already reflected in the Index. Result of any successfully completed Operation on the Index is reflected in it.'
        indexUpdateMethod:
          type: string
          description: 'Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default.'
          enumDescriptions:
            - Should not be used.
            - 'BatchUpdate: user can call UpdateIndex with files on Cloud Storage of datapoints to update.'
            - 'StreamUpdate: user can call UpsertDatapoints/DeleteDatapoints to update the Index and the updates will be applied in corresponding DeployedIndexes in nearly real-time.'
          enum:
            - INDEX_UPDATE_METHOD_UNSPECIFIED
            - BATCH_UPDATE
            - STREAM_UPDATE
        description:
          description: The description of the Index.
          type: string
        metadataSchemaUri:
          description: 'Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Index, that is specific to it. Unset if the Index does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.'
          type: string
      type: object
      description: A representation of a collection of database items organized in a way that allows for approximate nearest neighbor (a.k.a ANN) algorithms search.
      id: GoogleCloudAiplatformV1Index
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig:
      properties:
        column:
          type: string
          description: 'Name of the column that should be used to generate sliding windows. The column should contain either booleans or string booleans; if the value of the row is True, generate a sliding window with the horizon starting at that row. The column will not be used as a feature in training.'
        strideLength:
          format: int64
          description: 'Stride length used to generate input examples. Within one time series, every {$STRIDE_LENGTH} rows will be used to generate a sliding window.'
          type: string
        maxCount:
          format: int64
          description: Maximum number of windows that should be generated across all time series.
          type: string
      type: object
      description: 'Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation.'
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig
    GoogleCloudAiplatformV1AddExecutionEventsRequest:
      properties:
        events:
          type: array
          description: The Events to create and add.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Event'
      id: GoogleCloudAiplatformV1AddExecutionEventsRequest
      type: object
      description: Request message for MetadataService.AddExecutionEvents.
    GoogleCloudAiplatformV1NfsMount:
      description: Represents a mount configuration for Network File System (NFS) to mount.
      id: GoogleCloudAiplatformV1NfsMount
      type: object
      properties:
        mountPoint:
          type: string
          description: Required. Destination mount path. The NFS will be mounted for the user under /mnt/nfs/
        server:
          type: string
          description: Required. IP address of the NFS server.
        path:
          description: 'Required. Source path exported from NFS server. Has to start with ''/'', and combined with the ip address, it indicates the source mount path in the form of `server:path`'
          type: string
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics:
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics
      type: object
      properties:
        maxPredictions:
          type: integer
          format: int32
          description: 'Metrics are computed with an assumption that the Model always returns at most this many predictions (ordered by their score, descendingly), but they all still need to meet the `confidenceThreshold`.'
        falsePositiveRate:
          format: float
          description: False Positive Rate for the given confidence threshold.
          type: number
        falseNegativeCount:
          format: int64
          description: The number of ground truth labels that are not matched by a Model created label.
          type: string
        falsePositiveCount:
          format: int64
          description: The number of Model created labels that do not match a ground truth label.
          type: string
        f1ScoreAt1:
          format: float
          description: The harmonic mean of recallAt1 and precisionAt1.
          type: number
        precisionAt1:
          type: number
          format: float
          description: The precision when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.
        precision:
          type: number
          description: Precision for the given confidence threshold.
          format: float
        recallAt1:
          description: The Recall (True Positive Rate) when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.
          type: number
          format: float
        falsePositiveRateAt1:
          description: The False Positive Rate when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.
          type: number
          format: float
        f1ScoreMicro:
          format: float
          description: Micro-averaged F1 Score.
          type: number
        f1ScoreMacro:
          description: Macro-averaged F1 Score.
          type: number
          format: float
        f1Score:
          format: float
          type: number
          description: 'The harmonic mean of recall and precision. For summary metrics, it computes the micro-averaged F1 score.'
        truePositiveCount:
          format: int64
          description: The number of Model created labels that match a ground truth label.
          type: string
        confidenceThreshold:
          type: number
          description: Metrics are computed with an assumption that the Model never returns predictions with score lower than this value.
          format: float
        recall:
          type: number
          description: Recall (True Positive Rate) for the given confidence threshold.
          format: float
        trueNegativeCount:
          description: 'The number of labels that were not created by the Model, but if they would, they would not match a ground truth label.'
          type: string
          format: int64
        confusionMatrix:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix'
          description: Confusion matrix of the evaluation for this confidence_threshold.
    GoogleCloudAiplatformV1PublisherModelResourceReference:
      id: GoogleCloudAiplatformV1PublisherModelResourceReference
      description: Reference to a resource.
      properties:
        resourceName:
          description: The resource name of the Google Cloud resource.
          type: string
        uri:
          description: The URI of the resource.
          type: string
      type: object
    GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature:
      id: GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature
      properties:
        skipOnlineStorageDelete:
          type: boolean
          description: 'If set, data will not be deleted from online storage. When time range is older than the data in online storage, setting this to be true will make the deletion have no impact on online serving.'
        featureSelector:
          description: Required. Selectors choosing which feature values to be deleted from the EntityType.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureSelector'
        timeRange:
          description: Required. Select feature generated within a half-inclusive time range. The time range is lower inclusive and upper exclusive.
          $ref: '#/components/schemas/GoogleTypeInterval'
      type: object
      description: 'Message to select time range and feature. Values of the selected feature generated within an inclusive time range will be deleted. Using this option permanently deletes the feature values from the specified feature IDs within the specified time range. This might include data from the online storage. If you want to retain any deleted historical data in the online storage, you must re-ingest it.'
    GoogleCloudAiplatformV1PredictResponse:
      type: object
      description: Response message for PredictionService.Predict.
      id: GoogleCloudAiplatformV1PredictResponse
      properties:
        deployedModelId:
          type: string
          description: ID of the Endpoint's DeployedModel that served this prediction.
        model:
          description: Output only. The resource name of the Model which is deployed as the DeployedModel that this prediction hits.
          readOnly: true
          type: string
        predictions:
          type: array
          items:
            type: any
          description: The predictions that are the output of the predictions call. The schema of any single prediction may be specified via Endpoint's DeployedModels' Model's PredictSchemata's prediction_schema_uri.
        modelVersionId:
          readOnly: true
          type: string
          description: Output only. The version ID of the Model which is deployed as the DeployedModel that this prediction hits.
        metadata:
          readOnly: true
          description: Output only. Request-level metadata returned by the model. The metadata type will be dependent upon the model implementation.
          type: any
        modelDisplayName:
          description: Output only. The display name of the Model which is deployed as the DeployedModel that this prediction hits.
          type: string
          readOnly: true
    GoogleCloudAiplatformV1BatchCreateFeaturesRequest:
      description: Request message for FeaturestoreService.BatchCreateFeatures.
      id: GoogleCloudAiplatformV1BatchCreateFeaturesRequest
      type: object
      properties:
        requests:
          description: 'Required. The request message specifying the Features to create. All Features must be created under the same parent EntityType. The `parent` field in each child request message can be omitted. If `parent` is set in a child request, then the value must match the `parent` value in this request message.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1CreateFeatureRequest'
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionRecognitionMetrics:
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionRecognitionMetrics
      description: Model evaluation metrics for video action recognition.
      type: object
      properties:
        evaluatedActionCount:
          format: int32
          type: integer
          description: The number of ground truth actions used to create this evaluation.
        videoActionMetrics:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics'
          description: 'The metric entries for precision window lengths: 1s,2s,3s.'
          type: array
    GoogleCloudAiplatformV1PurgeExecutionsRequest:
      type: object
      properties:
        filter:
          description: 'Required. A required filter matching the Executions to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.'
          type: string
        force:
          type: boolean
          description: 'Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Execution names that would be deleted.'
      id: GoogleCloudAiplatformV1PurgeExecutionsRequest
      description: Request message for MetadataService.PurgeExecutions.
    GoogleCloudAiplatformV1StudySpec:
      id: GoogleCloudAiplatformV1StudySpec
      properties:
        algorithm:
          enum:
            - ALGORITHM_UNSPECIFIED
            - GRID_SEARCH
            - RANDOM_SEARCH
          enumDescriptions:
            - 'The default algorithm used by Vertex AI for [hyperparameter tuning](https://cloud.google.com/vertex-ai/docs/training/hyperparameter-tuning-overview) and [Vertex AI Vizier](https://cloud.google.com/vertex-ai/docs/vizier).'
            - 'Simple grid search within the feasible space. To use grid search, all parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`.'
            - Simple random search within the feasible space.
          description: The search algorithm specified for the Study.
          type: string
        convexAutomatedStoppingSpec:
          description: The automated early stopping spec using convex stopping rule.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec'
        parameters:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpec'
          description: Required. The set of parameters to tune.
          type: array
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecMetricSpec'
          description: Required. Metric specs for the Study.
        decayCurveStoppingSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec'
          description: The automated early stopping spec using decay curve rule.
        observationNoise:
          enum:
            - OBSERVATION_NOISE_UNSPECIFIED
            - LOW
            - HIGH
          enumDescriptions:
            - The default noise level chosen by Vertex AI.
            - 'Vertex AI assumes that the objective function is (nearly) perfectly reproducible, and will never repeat the same Trial parameters.'
            - 'Vertex AI will estimate the amount of noise in metric evaluations, it may repeat the same Trial parameters more than once.'
          type: string
          description: The observation noise level of the study. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
        measurementSelectionType:
          description: Describe which measurement selection type will be used
          enum:
            - MEASUREMENT_SELECTION_TYPE_UNSPECIFIED
            - LAST_MEASUREMENT
            - BEST_MEASUREMENT
          enumDescriptions:
            - Will be treated as LAST_MEASUREMENT.
            - Use the last measurement reported.
            - Use the best measurement reported.
          type: string
        medianAutomatedStoppingSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec'
          description: The automated early stopping spec using median rule.
      description: Represents specification of a Study.
      type: object
    GoogleCloudAiplatformV1ExplanationMetadataOverride:
      properties:
        inputs:
          description: 'Required. Overrides the input metadata of the features. The key is the name of the feature to be overridden. The keys specified here must exist in the input metadata to be overridden. If a feature is not specified here, the corresponding feature''s input metadata is not overridden.'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride'
      type: object
      id: GoogleCloudAiplatformV1ExplanationMetadataOverride
      description: The ExplanationMetadata entries that can be overridden at online explanation time.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation
      properties:
        columnName:
          type: string
      type: object
      description: Training pipeline will infer the proper transformation based on the statistic of dataset.
    GoogleCloudAiplatformV1MutateDeployedModelResponse:
      properties:
        deployedModel:
          description: The DeployedModel that's being mutated.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
      id: GoogleCloudAiplatformV1MutateDeployedModelResponse
      description: Response message for EndpointService.MutateDeployedModel.
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsVideoActionRecognitionPredictionParams:
      properties:
        confidenceThreshold:
          format: float
          description: The Model only returns predictions with at least this confidence score. Default value is 0.0
          type: number
        maxPredictions:
          format: int32
          type: integer
          description: 'The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50.'
      id: GoogleCloudAiplatformV1SchemaPredictParamsVideoActionRecognitionPredictionParams
      description: Prediction model parameters for Video Action Recognition.
      type: object
    GoogleRpcStatus:
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningTask:
      description: A TrainingJob that tunes Hypererparameters of a custom code Model.
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningTask
      properties:
        inputs:
          description: The input parameters of this HyperparameterTuningTask.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec'
        metadata:
          description: The metadata information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata'
    GoogleCloudAiplatformV1IntegratedGradientsAttribution:
      type: object
      description: 'An attribution method that computes the Aumann-Shapley value taking advantage of the model''s fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365'
      id: GoogleCloudAiplatformV1IntegratedGradientsAttribution
      properties:
        stepCount:
          description: 'Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.'
          type: integer
          format: int32
        smoothGradConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SmoothGradConfig'
          description: 'Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf'
        blurBaselineConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BlurBaselineConfig'
          description: 'Config for IG with blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383'
    GoogleCloudAiplatformV1AutomaticResources:
      type: object
      properties:
        maxReplicaCount:
          description: 'Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though Vertex AI may be unable to scale beyond certain replica number.'
          type: integer
          format: int32
        minReplicaCount:
          type: integer
          description: 'Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.'
          format: int32
      description: 'A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.'
      id: GoogleCloudAiplatformV1AutomaticResources
    GoogleCloudAiplatformV1ExplanationParameters:
      type: object
      description: Parameters to configure explaining for Model's predictions.
      properties:
        integratedGradientsAttribution:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IntegratedGradientsAttribution'
          description: 'An attribution method that computes Aumann-Shapley values taking advantage of the model''s fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365'
        sampledShapleyAttribution:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SampledShapleyAttribution'
          description: 'An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features. Refer to this paper for model details: https://arxiv.org/abs/1306.4265.'
        topK:
          description: 'If populated, returns attributions for top K indices of outputs (defaults to 1). Only applies to Models that predicts more than one outputs (e,g, multi-class Models). When set to -1, returns explanations for all outputs.'
          type: integer
          format: int32
        outputIndices:
          items:
            type: any
          type: array
          description: 'If populated, only returns attributions that have output_index contained in output_indices. It must be an ndarray of integers, with the same shape of the output it''s explaining. If not populated, returns attributions for top_k indices of outputs. If neither top_k nor output_indices is populated, returns the argmax index of the outputs. Only applicable to Models that predict multiple outputs (e,g, multi-class Models that predict multiple classes).'
        examples:
          description: Example-based explanations that returns the nearest neighbors from the provided dataset.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Examples'
        xraiAttribution:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1XraiAttribution'
          description: 'An attribution method that redistributes Integrated Gradients attribution to segmented regions, taking advantage of the model''s fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 XRAI currently performs better on natural images, like a picture of a house or an animal. If the images are taken in artificial environments, like a lab or manufacturing line, or from diagnostic equipment, like x-rays or quality-control cameras, use Integrated Gradients instead.'
      id: GoogleCloudAiplatformV1ExplanationParameters
    GoogleCloudAiplatformV1ExplanationSpec:
      type: object
      description: Specification of Model explanation.
      properties:
        metadata:
          description: Optional. Metadata describing the Model's input and output for explanation.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadata'
        parameters:
          description: Required. Parameters that configure explaining of the Model's predictions.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationParameters'
      id: GoogleCloudAiplatformV1ExplanationSpec
    GoogleCloudAiplatformV1SchemaTextDatasetMetadata:
      id: GoogleCloudAiplatformV1SchemaTextDatasetMetadata
      description: The metadata of Datasets that contain Text DataItems.
      type: object
      properties:
        gcsBucket:
          type: string
          description: Google Cloud Storage Bucket name that contains the blob data of this Dataset.
        dataItemSchemaUri:
          description: Points to a YAML file stored on Google Cloud Storage describing payload of the Text DataItems that belong to this Dataset.
          type: string
    GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesResponse:
      type: object
      description: Response message for ModelService.BatchImportModelEvaluationSlices
      properties:
        importedModelEvaluationSlices:
          items:
            type: string
          description: Output only. List of imported ModelEvaluationSlice.name.
          type: array
          readOnly: true
      id: GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesResponse
    GoogleCloudAiplatformV1DataLabelingJob:
      description: 'DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:'
      id: GoogleCloudAiplatformV1DataLabelingJob
      properties:
        inputs:
          type: any
          description: Required. Input config parameters for the DataLabelingJob.
        state:
          readOnly: true
          type: string
          description: Output only. The detailed state of the job.
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          enumDescriptions:
            - The job state is unspecified.
            - The job has been just created or resumed and processing has not yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - 'The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.'
            - The job has been cancelled.
            - 'The job has been stopped, and can be resumed.'
            - The job has expired.
            - 'The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.'
            - 'The job is partially succeeded, some results may be missing due to errors.'
        updateTime:
          description: Output only. Timestamp when this DataLabelingJob was updated most recently.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          description: 'The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema''s title.'
          type: object
          additionalProperties:
            type: string
        labelingProgress:
          readOnly: true
          description: 'Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.'
          format: int32
          type: integer
        displayName:
          type: string
          description: Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
        name:
          type: string
          description: Output only. Resource name of the DataLabelingJob.
          readOnly: true
        createTime:
          description: Output only. Timestamp when this DataLabelingJob was created.
          type: string
          format: google-datetime
          readOnly: true
        error:
          description: Output only. DataLabelingJob errors. It is only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcStatus'
        activeLearningConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ActiveLearningConfig'
          description: 'Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.'
        instructionUri:
          description: 'Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.'
          type: string
        inputsSchemaUri:
          description: 'Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.'
          type: string
        annotationLabels:
          type: object
          additionalProperties:
            type: string
          description: 'Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.'
        labelerCount:
          type: integer
          description: Required. Number of labelers to work on each DataItem.
          format: int32
        specialistPools:
          description: The SpecialistPools' resource names associated with this job.
          items:
            type: string
          type: array
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: 'Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.'
        datasets:
          type: array
          description: 'Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`'
          items:
            type: string
        currentSpend:
          readOnly: true
          $ref: '#/components/schemas/GoogleTypeMoney'
          description: Output only. Estimated cost(in US dollars) that the DataLabelingJob has incurred to date.
      type: object
    GoogleCloudAiplatformV1BatchPredictionJobOutputInfo:
      type: object
      properties:
        gcsOutputDirectory:
          type: string
          readOnly: true
          description: 'Output only. The full path of the Cloud Storage directory created, into which the prediction output is written.'
        bigqueryOutputTable:
          description: 'Output only. The name of the BigQuery table created, in `predictions_` format, into which the prediction output is written. Can be used by UI to generate the BigQuery output path, for example.'
          type: string
          readOnly: true
        bigqueryOutputDataset:
          type: string
          readOnly: true
          description: 'Output only. The path of the BigQuery dataset created, in `bq://projectId.bqDatasetId` format, into which the prediction output is written.'
      id: GoogleCloudAiplatformV1BatchPredictionJobOutputInfo
      description: Further describes this job's output. Supplements output_config.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs:
      properties:
        optimizationObjectiveRecallValue:
          format: float
          type: number
          description: 'Required when optimization_objective is "maximize-precision-at-recall". Must be between 0 and 1, inclusive.'
        additionalExperiments:
          items:
            type: string
          description: Additional experiment flags for the Tables training pipeline.
          type: array
        optimizationObjective:
          type: string
          description: 'Objective function the model is optimizing towards. The training process creates a model that maximizes/minimizes the value of the objective function over the validation set. The supported optimization objectives depend on the prediction type. If the field is not set, a default objective function is used. classification (binary): "maximize-au-roc" (default) - Maximize the area under the receiver operating characteristic (ROC) curve. "minimize-log-loss" - Minimize log loss. "maximize-au-prc" - Maximize the area under the precision-recall curve. "maximize-precision-at-recall" - Maximize precision for a specified recall value. "maximize-recall-at-precision" - Maximize recall for a specified precision value. classification (multi-class): "minimize-log-loss" (default) - Minimize log loss. regression: "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). "minimize-mae" - Minimize mean-absolute error (MAE). "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE).'
        transformations:
          description: 'Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation'
        optimizationObjectivePrecisionValue:
          description: 'Required when optimization_objective is "maximize-recall-at-precision". Must be between 0 and 1, inclusive.'
          type: number
          format: float
        weightColumnName:
          type: string
          description: 'Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1.'
        disableEarlyStopping:
          description: 'Use the entire training budget. This disables the early stopping feature. By default, the early stopping feature is enabled, which means that AutoML Tables might stop training before the entire training budget has been used.'
          type: boolean
        targetColumn:
          description: The column name of the target column that the model is to predict.
          type: string
        trainBudgetMilliNodeHours:
          type: string
          description: 'Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend''s discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won''t be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.'
          format: int64
        exportEvaluatedDataItemsConfig:
          description: 'Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig'
        predictionType:
          description: 'The type of prediction the Model is to produce. "classification" - Predict one out of multiple target values is picked for each row. "regression" - Predict a value based on its relation to other values. This type is available only to columns that contain semantically numeric values, i.e. integers or floating point number, even if stored as e.g. strings.'
          type: string
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs
      type: object
    GoogleCloudAiplatformV1ManualBatchTuningParameters:
      id: GoogleCloudAiplatformV1ManualBatchTuningParameters
      properties:
        batchSize:
          description: 'Immutable. The number of the records (e.g. instances) of the operation given in each batch to a machine replica. Machine type, and size of a single record should be considered when setting this parameter, higher value speeds up the batch operation''s execution, but too high value will result in a whole batch not fitting in a machine''s memory, and the whole operation will fail. The default value is 64.'
          format: int32
          type: integer
      description: Manual batch tuning parameters.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation:
      type: object
      properties:
        invalidValuesAllowed:
          description: 'If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.'
          type: boolean
        columnName:
          type: string
      description: 'Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.'
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation
    GoogleCloudAiplatformV1BatchCreateFeaturesResponse:
      id: GoogleCloudAiplatformV1BatchCreateFeaturesResponse
      description: Response message for FeaturestoreService.BatchCreateFeatures.
      properties:
        features:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
          description: The Features created.
      type: object
    GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse:
      properties:
        modelEvaluationSlices:
          description: List of ModelEvaluations in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSlice'
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListModelEvaluationSlicesRequest.page_token to obtain that page.
          type: string
      id: GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse
      description: Response message for ModelService.ListModelEvaluationSlices.
      type: object
    GoogleCloudAiplatformV1BatchReadFeatureValuesResponse:
      description: Response message for FeaturestoreService.BatchReadFeatureValues.
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1BatchReadFeatureValuesResponse
    GoogleCloudAiplatformV1ImportDataRequest:
      properties:
        importConfigs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ImportDataConfig'
          description: Required. The desired input locations. The contents of all input locations will be imported in one batch.
      id: GoogleCloudAiplatformV1ImportDataRequest
      description: Request message for DatasetService.ImportData.
      type: object
    GoogleCloudAiplatformV1ListTrialsResponse:
      properties:
        trials:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
          description: The Trials associated with the Study.
          type: array
        nextPageToken:
          type: string
          description: 'Pass this token as the `page_token` field of the request for a subsequent call. If this field is omitted, there are no subsequent pages.'
      description: Response message for VizierService.ListTrials.
      id: GoogleCloudAiplatformV1ListTrialsResponse
      type: object
    GoogleCloudAiplatformV1PurgeExecutionsResponse:
      id: GoogleCloudAiplatformV1PurgeExecutionsResponse
      type: object
      description: Response message for MetadataService.PurgeExecutions.
      properties:
        purgeSample:
          description: A sample of the Execution names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer).
          items:
            type: string
          type: array
        purgeCount:
          format: int64
          description: 'The number of Executions that this request deleted (or, if `force` is false, the number of Executions that will be deleted). This can be an estimate.'
          type: string
    GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec:
      properties:
        explanationSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec'
          description: Explanation spec details.
        explanationType:
          description: 'Explanation type. For AutoML Image Classification models, possible values are: * `image-integrated-gradients` * `image-xrai`'
          type: string
      type: object
      id: GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec
    GoogleCloudAiplatformV1SchemaTimeSegment:
      properties:
        endTimeOffset:
          type: string
          description: 'End of the time segment (exclusive), represented as the duration since the start of the DataItem.'
          format: google-duration
        startTimeOffset:
          description: 'Start of the time segment (inclusive), represented as the duration since the start of the DataItem.'
          format: google-duration
          type: string
      description: A time period inside of a DataItem that has a time dimension (e.g. video).
      type: object
      id: GoogleCloudAiplatformV1SchemaTimeSegment
    GoogleCloudAiplatformV1ScheduleRunResponse:
      id: GoogleCloudAiplatformV1ScheduleRunResponse
      properties:
        scheduledRunTime:
          type: string
          description: The scheduled run time based on the user-specified schedule.
          format: google-datetime
        runResponse:
          type: string
          description: The response of the scheduled run.
      description: Status of a scheduled run.
      type: object
    GoogleCloudAiplatformV1IndexDatapointRestriction:
      description: Restriction of a datapoint which describe its attributes(tokens) from each of several attribute categories(namespaces).
      type: object
      properties:
        denyList:
          description: 'The attributes to deny in this namespace. eg: ''blue'''
          items:
            type: string
          type: array
        namespace:
          description: 'The namespace of this restriction. eg: color.'
          type: string
        allowList:
          description: 'The attributes to allow in this namespace. eg: ''red'''
          type: array
          items:
            type: string
      id: GoogleCloudAiplatformV1IndexDatapointRestriction
    GoogleCloudAiplatformV1ListTrainingPipelinesResponse:
      properties:
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass to ListTrainingPipelinesRequest.page_token to obtain that page.
        trainingPipelines:
          description: List of TrainingPipelines in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline'
          type: array
      type: object
      id: GoogleCloudAiplatformV1ListTrainingPipelinesResponse
      description: Response message for PipelineService.ListTrainingPipelines
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs
      type: object
      properties:
        modelType:
          enumDescriptions:
            - Should not be set.
            - 'A model best tailored to be used within Google Cloud, and which cannot be exported. Default.'
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow Lite model and used on a mobile or edge device afterwards.'
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) to a Jetson device afterwards.'
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - MOBILE_VERSATILE_1
            - MOBILE_JETSON_VERSATILE_1
          type: string
    GoogleCloudAiplatformV1ListFeaturestoresResponse:
      properties:
        featurestores:
          description: The Featurestores matching the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Featurestore'
        nextPageToken:
          type: string
          description: 'A token, which can be sent as ListFeaturestoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      id: GoogleCloudAiplatformV1ListFeaturestoresResponse
      description: Response message for FeaturestoreService.ListFeaturestores.
      type: object
    GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse:
      properties:
        blobs:
          type: array
          description: Blob messages containing blob bytes.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardBlob'
      id: GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse
      type: object
      description: Response message for TensorboardService.ReadTensorboardBlobData.
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition:
      type: object
      properties:
        values:
          items:
            type: number
            format: double
          description: Required. Matches values of the parent parameter of 'DISCRETE' type. All values must exist in `discrete_value_spec` of parent parameter. The Epsilon of the value matching is 1e-10.
          type: array
      description: Represents the spec to match discrete values from parent parameter.
      id: GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition
    GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest:
      type: object
      description: Request message for ModelService.BatchImportEvaluatedAnnotations
      properties:
        evaluatedAnnotations:
          description: Required. Evaluated annotations resource to be imported.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EvaluatedAnnotation'
      id: GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest
    GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi:
      description: Rest API docs.
      type: object
      id: GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi
      properties:
        title:
          type: string
          description: Required. The title of the view rest API.
        documentations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelDocumentation'
          description: Required.
    GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse:
      properties:
        modelDeploymentMonitoringJobs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob'
          description: A list of ModelDeploymentMonitoringJobs that matches the specified filter in the request.
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      id: GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse
      description: Response message for JobService.ListModelDeploymentMonitoringJobs.
      type: object
    GoogleCloudAiplatformV1LineageSubgraph:
      id: GoogleCloudAiplatformV1LineageSubgraph
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Event'
          description: The Event edges between Artifacts and Executions in the subgraph.
        executions:
          type: array
          description: The Execution nodes in the subgraph.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
        artifacts:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
          type: array
          description: The Artifact nodes in the subgraph.
      description: A subgraph of the overall lineage graph. Event edges connect Artifact and Execution nodes.
    GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective:
      id: GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective
      properties:
        type:
          enumDescriptions:
            - 'Default value, should not be set.'
            - Raw feature values' stats to detect skew between Training-Prediction datasets.
            - Raw feature values' stats to detect drift between Serving-Prediction datasets.
            - Feature attribution scores to detect skew between Training-Prediction datasets.
            - Feature attribution scores to detect skew between Prediction datasets collected within different time windows.
          enum:
            - MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED
            - RAW_FEATURE_SKEW
            - RAW_FEATURE_DRIFT
            - FEATURE_ATTRIBUTION_SKEW
            - FEATURE_ATTRIBUTION_DRIFT
          type: string
        topFeatureCount:
          type: integer
          format: int32
          description: 'If set, all attribution scores between SearchModelDeploymentMonitoringStatsAnomaliesRequest.start_time and SearchModelDeploymentMonitoringStatsAnomaliesRequest.end_time are fetched, and page token doesn''t take effect in this case. Only used to retrieve attribution score for the top Features which has the highest attribution score in the latest monitoring run.'
      type: object
      description: Stats requested for specific objective.
    GoogleCloudAiplatformV1SchemaPredictPredictionImageObjectDetectionPredictionResult:
      id: GoogleCloudAiplatformV1SchemaPredictPredictionImageObjectDetectionPredictionResult
      properties:
        confidences:
          items:
            format: float
            type: number
          description: 'The Model''s confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.'
          type: array
        displayNames:
          description: 'The display names of the AnnotationSpecs that had been identified, order matches the IDs.'
          type: array
          items:
            type: string
        ids:
          description: 'The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.'
          items:
            format: int64
            type: string
          type: array
        bboxes:
          description: 'Bounding boxes, i.e. the rectangles over the image, that pinpoint the found AnnotationSpecs. Given in order that matches the IDs. Each bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and `yMax`, which represent the extremal coordinates of the box. They are relative to the image size, and the point 0,0 is in the top left of the image.'
          items:
            items:
              type: any
            type: array
          type: array
      description: Prediction output format for Image Object Detection.
      type: object
    GoogleCloudAiplatformV1UnmanagedContainerModel:
      description: Contains model information necessary to perform batch prediction without requiring a full model import.
      properties:
        artifactUri:
          description: The path to the directory containing the Model artifact and any of its supporting files.
          type: string
        containerSpec:
          description: Input only. The specification of the container that is to be used when deploying this Model.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelContainerSpec'
        predictSchemata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictSchemata'
          description: Contains the schemata used in Model's predictions and explanations
      id: GoogleCloudAiplatformV1UnmanagedContainerModel
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation
      properties:
        columnName:
          type: string
        timeFormat:
          type: string
          description: 'The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)'
      type: object
      description: 'Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.'
    GoogleCloudAiplatformV1CancelBatchPredictionJobRequest:
      properties: {}
      description: Request message for JobService.CancelBatchPredictionJob.
      type: object
      id: GoogleCloudAiplatformV1CancelBatchPredictionJobRequest
    GoogleCloudAiplatformV1SchemaPredictParamsImageObjectDetectionPredictionParams:
      id: GoogleCloudAiplatformV1SchemaPredictParamsImageObjectDetectionPredictionParams
      type: object
      properties:
        maxPredictions:
          format: int32
          type: integer
          description: 'The Model only returns up to that many top, by confidence score, predictions per instance. Note that number of returned predictions is also limited by metadata''s predictionsLimit. Default value is 10.'
        confidenceThreshold:
          format: float
          type: number
          description: The Model only returns predictions with at least this confidence score. Default value is 0.0
      description: Prediction model parameters for Image Object Detection.
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig:
      properties:
        value:
          format: double
          description: 'Specify a threshold value that can trigger the alert. 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature.'
          type: number
      description: The config for Featurestore Monitoring threshold.
      type: object
      id: GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig
    GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest:
      description: Request message for JobService.PauseModelDeploymentMonitoringJob.
      id: GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest
      properties: {}
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec:
      type: object
      properties:
        defaultValue:
          description: A default value for a `CATEGORICAL` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
          type: string
        values:
          description: Required. The list of possible categories.
          type: array
          items:
            type: string
      description: Value specification for a parameter in `CATEGORICAL` type.
      id: GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec
    GoogleCloudAiplatformV1Featurestore:
      properties:
        state:
          type: string
          description: Output only. State of the featurestore.
          readOnly: true
          enumDescriptions:
            - Default value. This value is unused.
            - State when the featurestore configuration is not being updated and the fields reflect the current configuration of the featurestore. The featurestore is usable in this state.
            - 'The state of the featurestore configuration when it is being updated. During an update, the fields reflect either the original configuration or the updated configuration of the featurestore. For example, `online_serving_config.fixed_node_count` can take minutes to update. While the update is in progress, the featurestore is in the UPDATING state, and the value of `fixed_node_count` can be the original value or the updated value, depending on the progress of the operation. Until the update completes, the actual number of nodes can still be the original value of `fixed_node_count`. The featurestore is still usable in this state.'
          enum:
            - STATE_UNSPECIFIED
            - STABLE
            - UPDATING
        etag:
          description: 'Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
          type: string
        encryptionSpec:
          description: 'Optional. Customer-managed encryption key spec for data storage. If set, both of the online and offline data storage will be secured by this key.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        name:
          description: 'Output only. Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`'
          type: string
          readOnly: true
        createTime:
          description: Output only. Timestamp when this Featurestore was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Timestamp when this Featurestore was last updated.
          type: string
          readOnly: true
          format: google-datetime
        onlineServingConfig:
          description: 'Optional. Config for online storage resources. The field should not co-exist with the field of `OnlineStoreReplicationConfig`. If both of it and OnlineStoreReplicationConfig are unset, the feature store will not have an online store and cannot be used for online serving.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig'
        onlineStorageTtlDays:
          description: 'Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days'
          type: integer
          format: int32
        labels:
          description: 'Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.'
          type: object
          additionalProperties:
            type: string
      description: 'Vertex AI Feature Store provides a centralized repository for organizing, storing, and serving ML features. The Featurestore is a top-level container for your features and their values.'
      type: object
      id: GoogleCloudAiplatformV1Featurestore
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig:
      properties:
        bigquerySource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource'
      description: 'The tables Dataset''s data source. The Dataset doesn''t store the data directly, but only pointer(s) to its data.'
      type: object
      id: GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig
    GoogleCloudAiplatformV1SuggestTrialsMetadata:
      description: Details of operations that perform Trials suggestion.
      type: object
      properties:
        clientId:
          description: 'The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed.'
          type: string
        genericMetadata:
          description: Operation metadata for suggesting Trials.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1SuggestTrialsMetadata
    GoogleCloudAiplatformV1FindNeighborsResponseNeighbor:
      description: A neighbor of the query vector.
      type: object
      id: GoogleCloudAiplatformV1FindNeighborsResponseNeighbor
      properties:
        datapoint:
          description: 'The datapoint of the neighbor. Note that full datapoints are returned only when "return_full_datapoint" is set to true. Otherwise, only the "datapoint_id" and "crowding_tag" fields are populated.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint'
        distance:
          type: number
          description: The distance between the neighbor and the query vector.
          format: double
    GoogleCloudAiplatformV1ExportDataRequest:
      properties:
        exportConfig:
          description: Required. The desired output location.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportDataConfig'
      type: object
      description: Request message for DatasetService.ExportData.
      id: GoogleCloudAiplatformV1ExportDataRequest
    GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult:
      description: Prediction output format for Time Series Forecasting.
      id: GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult
      type: object
      properties:
        value:
          format: float
          description: The regression value.
          type: number
        quantilePredictions:
          description: 'Quantile predictions, in 1-1 correspondence with quantile_values.'
          type: array
          items:
            type: number
            format: float
        quantileValues:
          items:
            format: float
            type: number
          description: Quantile values.
          type: array
        tftFeatureImportance:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance'
          description: Only use these if TFt is enabled.
    GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the migration request in case of failure.
        request:
          description: It's the same as the value in MigrateResourceRequest.migrate_resource_requests.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequest'
        dataset:
          description: Migrated dataset resource name.
          type: string
        model:
          description: Migrated model resource name.
          type: string
      id: GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult
      description: Represents a partial result in batch migration operation for one MigrateResourceRequest.
    GoogleCloudAiplatformV1Int64Array:
      properties:
        values:
          type: array
          items:
            type: string
            format: int64
          description: A list of int64 values.
      type: object
      description: A list of int64 values.
      id: GoogleCloudAiplatformV1Int64Array
    GoogleCloudAiplatformV1SearchMigratableResourcesRequest:
      description: Request message for MigrationService.SearchMigratableResources.
      id: GoogleCloudAiplatformV1SearchMigratableResourcesRequest
      properties:
        pageSize:
          description: The standard page size. The default and maximum value is 100.
          format: int32
          type: integer
        pageToken:
          type: string
          description: The standard page token.
        filter:
          type: string
          description: 'A filter for your search. You can use the following types of filters: * Resource type filters. The following strings filter for a specific type of MigratableResource: * `ml_engine_model_version:*` * `automl_model:*` * `automl_dataset:*` * `data_labeling_dataset:*` * "Migrated or not" filters. The following strings filter for resources that either have or have not already been migrated: * `last_migrate_time:*` filters for migrated resources. * `NOT last_migrate_time:*` filters for not yet migrated resources.'
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceTextSentimentPredictionInstance:
      properties:
        content:
          type: string
          description: The text snippet to make the predictions on.
        mimeType:
          type: string
          description: The MIME type of the text snippet. The supported MIME types are listed below. - text/plain
      id: GoogleCloudAiplatformV1SchemaPredictInstanceTextSentimentPredictionInstance
      type: object
      description: Prediction input format for Text Sentiment.
    GoogleCloudAiplatformV1FeatureValueMetadata:
      id: GoogleCloudAiplatformV1FeatureValueMetadata
      description: Metadata of feature value.
      type: object
      properties:
        generateTime:
          type: string
          description: 'Feature generation timestamp. Typically, it is provided by user at feature ingestion time. If not, feature store will use the system timestamp when the data is ingested into feature store. For streaming ingestion, the time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future.'
          format: google-datetime
    GoogleCloudAiplatformV1PipelineJob:
      type: object
      description: An instance of a machine learning PipelineJob.
      id: GoogleCloudAiplatformV1PipelineJob
      properties:
        state:
          description: Output only. The detailed state of the job.
          enum:
            - PIPELINE_STATE_UNSPECIFIED
            - PIPELINE_STATE_QUEUED
            - PIPELINE_STATE_PENDING
            - PIPELINE_STATE_RUNNING
            - PIPELINE_STATE_SUCCEEDED
            - PIPELINE_STATE_FAILED
            - PIPELINE_STATE_CANCELLING
            - PIPELINE_STATE_CANCELLED
            - PIPELINE_STATE_PAUSED
          type: string
          enumDescriptions:
            - The pipeline state is unspecified.
            - 'The pipeline has been created or resumed, and processing has not yet begun.'
            - The service is preparing to run the pipeline.
            - The pipeline is in progress.
            - The pipeline completed successfully.
            - The pipeline failed.
            - 'The pipeline is being cancelled. From this state, the pipeline may only go to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED or PIPELINE_STATE_CANCELLED.'
            - The pipeline has been cancelled.
            - 'The pipeline has been stopped, and can be resumed.'
          readOnly: true
        encryptionSpec:
          description: 'Customer-managed encryption key spec for a pipelineJob. If set, this PipelineJob and all of its sub-resources will be secured by this key.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
        error:
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: Output only. The error that occurred during pipeline execution. Only populated when the pipeline's state is FAILED or CANCELLED.
        serviceAccount:
          description: 'The service account that the pipeline workload runs as. If not specified, the Compute Engine default service account in the project will be used. See https://cloud.google.com/compute/docs/access/service-accounts#default_service_account Users starting the pipeline must have the `iam.serviceAccounts.actAs` permission on this service account.'
          type: string
        runtimeConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJobRuntimeConfig'
          description: Runtime config of the pipeline.
        startTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Pipeline start time.
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the PipelineJob.
        network:
          description: 'The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Pipeline Job''s workload should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. Pipeline job will apply the network configuration to the Google Cloud resources being launched, if applied, such as Vertex AI Training or Dataflow job. If left unspecified, the workload is not peered with any network.'
          type: string
        displayName:
          description: The display name of the Pipeline. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        createTime:
          description: Output only. Pipeline creation time.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          format: google-datetime
          type: string
          description: Output only. Pipeline end time.
          readOnly: true
        reservedIpRanges:
          items:
            type: string
          description: 'A list of names for the reserved ip ranges under the VPC network that can be used for this Pipeline Job''s workload. If set, we will deploy the Pipeline Job''s workload within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: [''vertex-ai-ip-range''].'
          type: array
        pipelineSpec:
          description: The spec of the pipeline.
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
        templateUri:
          description: 'A template uri from where the PipelineJob.pipeline_spec, if empty, will be downloaded.'
          type: string
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when this PipelineJob was most recently updated.
        jobDetail:
          description: Output only. The details of pipeline run. Not available in the list view.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJobDetail'
          readOnly: true
        templateMetadata:
          description: Output only. Pipeline template metadata. Will fill up fields if PipelineJob.template_uri is from supported template registry.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineTemplateMetadata'
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'The labels with user-defined metadata to organize PipelineJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. Note there is some reserved label key for Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set value will get overrided.'
    GoogleCloudAiplatformV1SpecialistPool:
      id: GoogleCloudAiplatformV1SpecialistPool
      properties:
        specialistWorkerEmails:
          type: array
          description: The email addresses of workers in the SpecialistPool.
          items:
            type: string
        displayName:
          description: Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level.
          type: string
        specialistManagerEmails:
          type: array
          items:
            type: string
          description: The email addresses of the managers in the SpecialistPool.
        name:
          description: Required. The resource name of the SpecialistPool.
          type: string
        pendingDataLabelingJobs:
          readOnly: true
          type: array
          description: Output only. The resource name of the pending data labeling jobs.
          items:
            type: string
        specialistManagersCount:
          description: Output only. The number of managers in this SpecialistPool.
          readOnly: true
          type: integer
          format: int32
      description: 'SpecialistPool represents customers'' own workforce to work on their data labeling jobs. It includes a group of specialist managers and workers. Managers are responsible for managing the workers in this pool as well as customers'' data labeling jobs associated with this pool. Customers create specialist pool as well as start data labeling jobs on Cloud, managers and workers handle the jobs using CrowdCompute console.'
      type: object
    GoogleCloudAiplatformV1SearchMigratableResourcesResponse:
      properties:
        nextPageToken:
          description: The standard next-page token. The migratable_resources may not fill page_size in SearchMigratableResourcesRequest even when there are subsequent pages.
          type: string
        migratableResources:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MigratableResource'
          type: array
          description: All migratable resources that can be migrated to the location specified in the request.
      type: object
      description: Response message for MigrationService.SearchMigratableResources.
      id: GoogleCloudAiplatformV1SearchMigratableResourcesResponse
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec
      properties:
        maxTrialCount:
          description: The desired total number of Trials.
          format: int32
          type: integer
        parallelTrialCount:
          description: The desired number of Trials to run in parallel.
          type: integer
          format: int32
        trialJobSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
          description: The spec of a trial job. The same spec applies to the CustomJobs created in all the trials.
        studySpec:
          description: Study configuration of the HyperparameterTuningJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpec'
        maxFailedTrialCount:
          format: int32
          type: integer
          description: 'The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails.'
      type: object
    GoogleCloudAiplatformV1ListPipelineJobsResponse:
      properties:
        pipelineJobs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJob'
          description: List of PipelineJobs in the requested page.
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListPipelineJobsRequest.page_token to obtain that page.
          type: string
      description: Response message for PipelineService.ListPipelineJobs
      id: GoogleCloudAiplatformV1ListPipelineJobsResponse
      type: object
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig:
      id: GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig
      properties:
        enableFeatureAttributes:
          type: boolean
          description: 'If want to analyze the Vertex Explainable AI feature attribute scores or not. If set to true, Vertex AI will log the feature attributions from explain response and do the skew/drift detection for them.'
        explanationBaseline:
          description: Predictions generated by the BatchPredictionJob using baseline dataset.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline'
      description: The config for integrating with Vertex Explainable AI. Only applicable if the Model has explanation_spec populated.
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsImageSegmentationPredictionParams:
      id: GoogleCloudAiplatformV1SchemaPredictParamsImageSegmentationPredictionParams
      type: object
      description: Prediction model parameters for Image Segmentation.
      properties:
        confidenceThreshold:
          format: float
          type: number
          description: 'When the model predicts category of pixels of the image, it will only provide predictions for pixels that it is at least this much confident about. All other pixels will be classified as background. Default value is 0.5.'
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation:
      type: object
      description: Training pipeline will infer the proper transformation based on the statistic of dataset.
      properties:
        columnName:
          type: string
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation
    GoogleCloudAiplatformV1DeployedModelRef:
      type: object
      properties:
        endpoint:
          description: Immutable. A resource name of an Endpoint.
          type: string
        deployedModelId:
          type: string
          description: Immutable. An ID of a DeployedModel in the above Endpoint.
      id: GoogleCloudAiplatformV1DeployedModelRef
      description: Points to a DeployedModel.
    GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest:
      type: object
      properties:
        requests:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest'
          type: array
          description: Required. The request message specifying the TensorboardTimeSeries to create. A maximum of 1000 TensorboardTimeSeries can be created in a batch.
      description: Request message for TensorboardService.BatchCreateTensorboardTimeSeries.
      id: GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics:
      description: Metrics for a single confidence threshold.
      type: object
      properties:
        mismatchRate:
          description: 'Mismatch rate, which measures the tracking consistency, i.e. correctness of instance ID continuity.'
          format: float
          type: number
        trackingRecall:
          type: number
          format: float
          description: Tracking recall.
        boundingBoxIou:
          format: float
          type: number
          description: Bounding box intersection-over-union precision. Measures how well the bounding boxes overlap between each other (e.g. complete overlap or just barely above iou_threshold).
        trackingPrecision:
          format: float
          type: number
          description: Tracking precision.
        confidenceThreshold:
          description: The confidence threshold value used to compute the metrics.
          format: float
          type: number
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics
    GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader:
      description: Response header with metadata for the requested ReadFeatureValuesRequest.entity_type and Features.
      type: object
      properties:
        featureDescriptors:
          description: List of Feature metadata corresponding to each piece of ReadFeatureValuesResponse.EntityView.data.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor'
          type: array
        entityType:
          type: string
          description: 'The resource name of the EntityType from the ReadFeatureValuesRequest. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.'
      id: GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader
    GoogleCloudAiplatformV1CancelCustomJobRequest:
      properties: {}
      description: Request message for JobService.CancelCustomJob.
      id: GoogleCloudAiplatformV1CancelCustomJobRequest
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata
      description: Model metadata specific to AutoML Tables.
      properties:
        trainCostMilliNodeHours:
          description: 'Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.'
          type: string
          format: int64
        evaluatedDataItemsBigqueryUri:
          description: BigQuery destination uri for exported evaluated examples.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation
      type: object
      properties:
        categorical:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation'
        auto:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation'
        timestamp:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation'
        numeric:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation'
        text:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation'
    GoogleCloudAiplatformV1Explanation:
      description: Explanation of a prediction (provided in PredictResponse.predictions) produced by the Model on a given instance.
      id: GoogleCloudAiplatformV1Explanation
      type: object
      properties:
        attributions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Attribution'
          readOnly: true
          description: 'Output only. Feature attributions grouped by predicted outputs. For Models that predict only one output, such as regression Models that predict only one score, there is only one attibution that explains the predicted output. For Models that predict multiple outputs, such as multiclass Models that predict multiple classes, each element explains one specific item. Attribution.output_index can be used to identify which output this attribution is explaining. If users set ExplanationParameters.top_k, the attributions are sorted by instance_output_value in descending order. If ExplanationParameters.output_indices is specified, the attributions are stored by Attribution.output_index in the same order as they appear in the output_indices.'
        neighbors:
          description: 'Output only. List of the nearest neighbors for example-based explanations. For models deployed with the examples explanations feature enabled, the attributions field is empty and instead the neighbors field is populated.'
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Neighbor'
    GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadata:
      type: object
      properties:
        partialResults:
          description: Partial results that reflect the latest migration operation progress.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult'
          type: array
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The common part of the operation metadata.
      description: Runtime operation information for MigrationService.BatchMigrateResources.
      id: GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadata
    GoogleCloudAiplatformV1ExplainResponse:
      type: object
      id: GoogleCloudAiplatformV1ExplainResponse
      properties:
        predictions:
          description: The predictions that are the output of the predictions call. Same as PredictResponse.predictions.
          items:
            type: any
          type: array
        explanations:
          description: The explanations of the Model's PredictResponse.predictions. It has the same number of elements as instances to be explained.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Explanation'
        deployedModelId:
          description: ID of the Endpoint's DeployedModel that served this explanation.
          type: string
      description: Response message for PredictionService.Explain.
    GoogleCloudAiplatformV1ReadFeatureValuesRequest:
      id: GoogleCloudAiplatformV1ReadFeatureValuesRequest
      properties:
        featureSelector:
          description: Required. Selector choosing Features of the target EntityType.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureSelector'
        entityId:
          type: string
          description: 'Required. ID for a specific entity. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`.'
      description: Request message for FeaturestoreOnlineServingService.ReadFeatureValues.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter
      type: object
      properties:
        datasetConfig:
          type: object
          description: 'Customizable dataset settings, used in the `model_garden_trainer`.'
          additionalProperties:
            type: string
        trainerConfig:
          description: 'Customizable trainer settings, used in the `model_garden_trainer`.'
          type: object
          additionalProperties:
            type: string
        checkpointName:
          type: string
          description: 'Optional. An unique name of pretrained model checkpoint provided in model garden, it will be mapped to a GCS location internally.'
        trainerType:
          enumDescriptions:
            - Default value.
            - ''
            - ''
          type: string
          enum:
            - TRAINER_TYPE_UNSPECIFIED
            - AUTOML_TRAINER
            - MODEL_GARDEN_TRAINER
        studySpec:
          description: Optioinal. StudySpec of hyperparameter tuning job. Required for `model_garden_trainer`.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpec'
      description: A wrapper class which contains the tunable parameters in an AutoML Image training job.
    GoogleCloudAiplatformV1AddContextChildrenRequest:
      description: Request message for MetadataService.AddContextChildren.
      type: object
      properties:
        childContexts:
          description: The resource names of the child Contexts.
          items:
            type: string
          type: array
      id: GoogleCloudAiplatformV1AddContextChildrenRequest
    GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization:
      description: Visualization configurations for image explanation.
      properties:
        clipPercentLowerbound:
          type: number
          format: float
          description: 'Excludes attributions below the specified percentile, from the highlighted areas. Defaults to 62.'
        type:
          type: string
          description: 'Type of the image visualization. Only applicable to Integrated Gradients attribution. OUTLINES shows regions of attribution, while PIXELS shows per-pixel attribution. Defaults to OUTLINES.'
          enum:
            - TYPE_UNSPECIFIED
            - PIXELS
            - OUTLINES
          enumDescriptions:
            - Should not be used.
            - Shows which pixel contributed to the image prediction.
            - Shows which region contributed to the image prediction by outlining the region.
        overlayType:
          enum:
            - OVERLAY_TYPE_UNSPECIFIED
            - NONE
            - ORIGINAL
            - GRAYSCALE
            - MASK_BLACK
          type: string
          description: How the original image is displayed in the visualization. Adjusting the overlay can help increase visual clarity if the original image makes it difficult to view the visualization. Defaults to NONE.
          enumDescriptions:
            - Default value. This is the same as NONE.
            - No overlay.
            - The attributions are shown on top of the original image.
            - The attributions are shown on top of grayscaled version of the original image.
            - The attributions are used as a mask to reveal predictive parts of the image and hide the un-predictive parts.
        colorMap:
          description: 'The color scheme used for the highlighted areas. Defaults to PINK_GREEN for Integrated Gradients attribution, which shows positive attributions in green and negative in pink. Defaults to VIRIDIS for XRAI attribution, which highlights the most influential regions in yellow and the least influential in blue.'
          type: string
          enum:
            - COLOR_MAP_UNSPECIFIED
            - PINK_GREEN
            - VIRIDIS
            - RED
            - GREEN
            - RED_GREEN
            - PINK_WHITE_GREEN
          enumDescriptions:
            - Should not be used.
            - 'Positive: green. Negative: pink.'
            - 'Viridis color map: A perceptually uniform color mapping which is easier to see by those with colorblindness and progresses from yellow to green to blue. Positive: yellow. Negative: blue.'
            - 'Positive: red. Negative: red.'
            - 'Positive: green. Negative: green.'
            - 'Positive: green. Negative: red.'
            - PiYG palette.
        clipPercentUpperbound:
          type: number
          format: float
          description: Excludes attributions above the specified percentile from the highlighted areas. Using the clip_percent_upperbound and clip_percent_lowerbound together can be useful for filtering out noise and making it easier to see areas of strong attribution. Defaults to 99.9.
        polarity:
          type: string
          enumDescriptions:
            - Default value. This is the same as POSITIVE.
            - Highlights the pixels/outlines that were most influential to the model's prediction.
            - Setting polarity to negative highlights areas that does not lead to the models's current prediction.
            - Shows both positive and negative attributions.
          enum:
            - POLARITY_UNSPECIFIED
            - POSITIVE
            - NEGATIVE
            - BOTH
          description: 'Whether to only highlight pixels with positive contributions, negative or both. Defaults to POSITIVE.'
      id: GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization
      type: object
    GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling:
      type: object
      description: 'Online serving scaling configuration. If min_node_count and max_node_count are set to the same value, the cluster will be configured with the fixed number of node (no auto-scaling).'
      id: GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling
      properties:
        minNodeCount:
          type: integer
          format: int32
          description: Required. The minimum number of nodes to scale down to. Must be greater than or equal to 1.
        maxNodeCount:
          type: integer
          description: 'The maximum number of nodes to scale up to. Must be greater than min_node_count, and less than or equal to 10 times of ''min_node_count''.'
          format: int32
        cpuUtilizationTarget:
          description: 'Optional. The cpu utilization that the Autoscaler should be trying to achieve. This number is on a scale from 0 (no utilization) to 100 (total utilization), and is limited between 10 and 80. When a cluster''s CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set or set to 0, default to 50.'
          type: integer
          format: int32
    GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse:
      id: GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse
      properties:
        tensorboardTimeSeries:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
          description: The created TensorboardTimeSeries.
          type: array
      type: object
      description: Response message for TensorboardService.BatchCreateTensorboardTimeSeries.
    GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig:
      id: GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig
      properties:
        sampleRate:
          type: number
          format: double
          description: 'Sample rate (0, 1]'
      description: Requests are randomly selected.
      type: object
    GoogleCloudAiplatformV1ImportDataResponse:
      type: object
      description: Response message for DatasetService.ImportData.
      id: GoogleCloudAiplatformV1ImportDataResponse
      properties: {}
    GoogleCloudAiplatformV1ResourcesConsumed:
      id: GoogleCloudAiplatformV1ResourcesConsumed
      description: Statistics information about resource consumption.
      type: object
      properties:
        replicaHours:
          type: number
          readOnly: true
          description: 'Output only. The number of replica hours used. Note that many replicas may run in parallel, and additionally any given work may be queued for some time. Therefore this value is not strictly related to wall time.'
          format: double
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoClassificationPredictionResult:
      type: object
      id: GoogleCloudAiplatformV1SchemaPredictPredictionVideoClassificationPredictionResult
      description: Prediction output format for Video Classification.
      properties:
        timeSegmentStart:
          description: 'The beginning, inclusive, of the video''s time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. Note that for ''segment-classification'' prediction type, this equals the original ''timeSegmentStart'' from the input instance, for other types it is the start of a shot or a 1 second interval respectively.'
          format: google-duration
          type: string
        timeSegmentEnd:
          format: google-duration
          type: string
          description: 'The end, exclusive, of the video''s time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. Note that for ''segment-classification'' prediction type, this equals the original ''timeSegmentEnd'' from the input instance, for other types it is the end of a shot or a 1 second interval respectively.'
        type:
          description: The type of the prediction. The requested types can be configured via parameters. This will be one of - segment-classification - shot-classification - one-sec-interval-classification
          type: string
        confidence:
          format: float
          type: number
          description: 'The Model''s confidence in correction of this prediction, higher value means higher confidence.'
        id:
          description: The resource ID of the AnnotationSpec that had been identified.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that had been identified.
          type: string
    GoogleCloudAiplatformV1ListStudiesResponse:
      id: GoogleCloudAiplatformV1ListStudiesResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'Passes this token as the `page_token` field of the request for a subsequent call. If this field is omitted, there are no subsequent pages.'
        studies:
          description: The studies associated with the project.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Study'
      description: Response message for VizierService.ListStudies.
    GoogleCloudAiplatformV1BatchReadFeatureValuesOperationMetadata:
      id: GoogleCloudAiplatformV1BatchReadFeatureValuesOperationMetadata
      type: object
      description: Details of operations that batch reads Feature values.
      properties:
        genericMetadata:
          description: Operation metadata for Featurestore batch read Features values.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1ModelEvaluationSlice:
      properties:
        modelExplanation:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelExplanation'
          description: 'Output only. Aggregated explanation metrics for the Model''s prediction output over the data this ModelEvaluation uses. This field is populated only if the Model is evaluated with explanations, and only for tabular Models.'
        slice:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSlice'
          description: Output only. The slice of the test data that is used to evaluate the Model.
        metricsSchemaUri:
          description: 'Output only. Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluationSlice. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).'
          type: string
          readOnly: true
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Timestamp when this ModelEvaluationSlice was created.
        metrics:
          type: any
          readOnly: true
          description: Output only. Sliced evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the ModelEvaluationSlice.
      type: object
      id: GoogleCloudAiplatformV1ModelEvaluationSlice
      description: A collection of metrics calculated by comparing Model's predictions on a slice of the test data against ground truth annotations.
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec:
      description: Represents a metric to optimize.
      type: object
      properties:
        goal:
          description: Required. The optimization goal of the metric.
          enum:
            - GOAL_TYPE_UNSPECIFIED
            - MAXIMIZE
            - MINIMIZE
          enumDescriptions:
            - Goal Type will default to maximize.
            - Maximize the goal metric.
            - Minimize the goal metric.
          type: string
        metricId:
          type: string
          description: Required. The ID of the metric. Must not contain whitespaces.
      id: GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection:
      description: A TrainingJob that trains and uploads an AutoML Image Object Detection Model.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection
      type: object
      properties:
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs'
        metadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata'
          description: The metadata information
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig
      description: Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
      properties:
        temporalTotalWeight:
          type: number
          format: double
          description: The weight of the loss for predictions aggregated over the horizon for a single time series.
        groupColumns:
          type: array
          items:
            type: string
          description: 'A list of time series attribute column names that define the time series hierarchy. Only one level of hierarchy is supported, ex. ''region'' for a hierarchy of stores or ''department'' for a hierarchy of products. If multiple columns are specified, time series will be grouped by their combined values, ex. (''blue'', ''large'') for ''color'' and ''size'', up to 5 columns are accepted. If no group columns are specified, all time series are considered to be part of the same group.'
        groupTemporalTotalWeight:
          description: The weight of the loss for predictions aggregated over both the horizon and time series in the same hierarchy group.
          format: double
          type: number
        groupTotalWeight:
          format: double
          description: The weight of the loss for predictions aggregated over time series in the same group.
          type: number
      type: object
    GoogleCloudAiplatformV1PurgeArtifactsRequest:
      properties:
        force:
          description: 'Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Artifact names that would be deleted.'
          type: boolean
        filter:
          description: 'Required. A required filter matching the Artifacts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.'
          type: string
      type: object
      description: Request message for MetadataService.PurgeArtifacts.
      id: GoogleCloudAiplatformV1PurgeArtifactsRequest
    GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse:
      id: GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse
      type: object
      description: Response message for TensorboardService.BatchCreateTensorboardRuns.
      properties:
        tensorboardRuns:
          description: The created TensorboardRuns.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation:
      description: Represents a polygon in image.
      properties:
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        annotationSpecId:
          type: string
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
        vertexes:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaVertex'
          description: The vertexes are connected one by one and the last vertex is connected to the first one to represent a polygon.
          type: array
      id: GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation
      type: object
    GoogleCloudAiplatformV1UpdateExplanationDatasetResponse:
      id: GoogleCloudAiplatformV1UpdateExplanationDatasetResponse
      description: Response message of ModelService.UpdateExplanationDataset operation.
      properties: {}
      type: object
    GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest:
      description: Request message for JobService.CancelHyperparameterTuningJob.
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest
    GoogleCloudAiplatformV1IndexStats:
      id: GoogleCloudAiplatformV1IndexStats
      description: Stats of the Index.
      type: object
      properties:
        vectorsCount:
          format: int64
          description: Output only. The number of vectors in the Index.
          type: string
          readOnly: true
        shardsCount:
          description: Output only. The number of shards in the Index.
          readOnly: true
          format: int32
          type: integer
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis:
      properties:
        disabled:
          type: boolean
          description: 'The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoring_interval for Features under it. Feature-level config: disabled = true indicates disabled regardless of the EntityType-level config; unset monitoring_interval indicates going with EntityType-level config; otherwise run snapshot analysis monitoring with monitoring_interval regardless of the EntityType-level config. Explicitly Disable the snapshot analysis based monitoring.'
        monitoringIntervalDays:
          format: int32
          description: Configuration of the snapshot analysis based monitoring pipeline running interval. The value indicates number of days.
          type: integer
        stalenessDays:
          type: integer
          description: Customized export features time window for snapshot analysis. Unit is one day. Default value is 3 weeks. Minimum value is 1 day. Maximum value is 4000 days.
          format: int32
      description: Configuration of the Featurestore's Snapshot Analysis Based Monitoring. This type of analysis generates statistics for each Feature based on a snapshot of the latest feature value of each entities every monitoring_interval.
      id: GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis
      type: object
    GoogleTypeColor:
      type: object
      description: 'Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor''s `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn''t have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!(''alpha'' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join('',''); return [''rgba('', rgbParams, '','', alphaFrac, '')''].join(''''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = [''#'']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push(''0''); } resultBuilder.push(hexString); return resultBuilder.join(''''); }; // ...'
      properties:
        green:
          type: number
          format: float
          description: 'The amount of green in the color as a value in the interval [0, 1].'
        blue:
          format: float
          description: 'The amount of blue in the color as a value in the interval [0, 1].'
          type: number
        alpha:
          description: 'The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).'
          format: float
          type: number
        red:
          description: 'The amount of red in the color as a value in the interval [0, 1].'
          format: float
          type: number
      id: GoogleTypeColor
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation:
      properties:
        maskGcsUri:
          description: Google Cloud Storage URI that points to the mask image. The image must be in PNG format. It must have the same size as the DataItem's image. Each pixel in the image mask represents the AnnotationSpec which the pixel in the image DataItem belong to. Each color is mapped to one AnnotationSpec based on annotation_spec_colors.
          type: string
        annotationSpecColors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaAnnotationSpecColor'
          description: The mapping between color and AnnotationSpec for this Annotation.
      description: The mask based segmentation annotation.
      type: object
      id: GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation
    GoogleCloudAiplatformV1SearchFeaturesResponse:
      description: Response message for FeaturestoreService.SearchFeatures.
      properties:
        features:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
          description: 'The Features matching the request. Fields returned: * `name` * `description` * `labels` * `create_time` * `update_time`'
          type: array
        nextPageToken:
          type: string
          description: 'A token, which can be sent as SearchFeaturesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      type: object
      id: GoogleCloudAiplatformV1SearchFeaturesResponse
    GoogleIamV1Policy:
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        bindings:
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
          type: array
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
          type: string
        version:
          format: int32
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
      id: GoogleIamV1Policy
    GoogleCloudAiplatformV1PurgeContextsRequest:
      type: object
      properties:
        force:
          description: 'Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Context names that would be deleted.'
          type: boolean
        filter:
          description: 'Required. A required filter matching the Contexts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.'
          type: string
      id: GoogleCloudAiplatformV1PurgeContextsRequest
      description: Request message for MetadataService.PurgeContexts.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation:
      type: object
      description: 'Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.'
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation
      properties:
        columnName:
          type: string
    GoogleCloudAiplatformV1UpdateFeaturestoreOperationMetadata:
      description: Details of operations that perform update Featurestore.
      properties:
        genericMetadata:
          description: Operation metadata for Featurestore.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      type: object
      id: GoogleCloudAiplatformV1UpdateFeaturestoreOperationMetadata
    GoogleCloudAiplatformV1ReadTensorboardSizeResponse:
      properties:
        storageSizeByte:
          format: int64
          description: Payload storage size for the TensorBoard
          type: string
      description: Response message for TensorboardService.ReadTensorboardSize.
      id: GoogleCloudAiplatformV1ReadTensorboardSizeResponse
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition:
      description: Represents the spec to match integer values from parent parameter.
      type: object
      id: GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition
      properties:
        values:
          type: array
          description: Required. Matches values of the parent parameter of 'INTEGER' type. All values must lie in `integer_value_spec` of parent parameter.
          items:
            type: string
            format: int64
    GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest:
      properties:
        entityIds:
          type: array
          description: 'Required. IDs of entities to read Feature values of. The maximum number of IDs is 100. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`.'
          items:
            type: string
        featureSelector:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureSelector'
          description: Required. Selector choosing Features of the target EntityType. Feature IDs will be deduplicated.
      id: GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest
      type: object
      description: Request message for FeaturestoreOnlineServingService.StreamingFeatureValuesRead.
    GoogleTypeMoney:
      description: Represents an amount of money with its currency type.
      properties:
        currencyCode:
          type: string
          description: The three-letter currency code defined in ISO 4217.
        nanos:
          type: integer
          format: int32
          description: 'Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.'
        units:
          type: string
          description: 'The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.'
          format: int64
      id: GoogleTypeMoney
      type: object
    GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateResponse:
      description: Response message for VizierService.CheckTrialEarlyStoppingState.
      id: GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateResponse
      type: object
      properties:
        shouldStop:
          description: True if the Trial should stop.
          type: boolean
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecasting:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecasting
      description: A TrainingJob that trains and uploads an AutoML Forecasting Model.
      properties:
        inputs:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs'
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata'
          description: The metadata information.
    GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor:
      type: object
      id: GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor
      description: Metadata for requested Features.
      properties:
        id:
          type: string
          description: Feature ID.
    GoogleCloudAiplatformV1SchemaTextDataItem:
      properties:
        gcsUri:
          type: string
          description: Output only. Google Cloud Storage URI points to the original text in user's bucket. The text file is up to 10MB in size.
          readOnly: true
      id: GoogleCloudAiplatformV1SchemaTextDataItem
      type: object
      description: Payload of Text DataItem.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs
      properties:
        quantiles:
          type: array
          items:
            type: number
            format: double
          description: 'Quantiles to use for minimize-quantile-loss `optimization_objective`, or for probabilistic inference. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.'
        timeSeriesIdentifierColumn:
          description: The name of the column that identifies the time series.
          type: string
        hierarchyConfig:
          description: Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig'
        exportEvaluatedDataItemsConfig:
          description: 'Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig'
        optimizationObjective:
          type: string
          description: 'Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error.'
        holidayRegions:
          items:
            type: string
          description: 'The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option.'
          type: array
        additionalExperiments:
          type: array
          description: Additional experiment flags for the time series forcasting training.
          items:
            type: string
        validationOptions:
          description: 'Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue'
          type: string
        enableProbabilisticInference:
          description: 'If probabilistic inference is enabled, the model will fit a distribution that captures the uncertainty of a prediction. At inference time, the predictive distribution is used to make a point prediction that minimizes the optimization objective. For example, the mean of a predictive distribution is the point prediction that minimizes RMSE loss. If quantiles are specified, then the quantiles of the distribution are also returned. The optimization objective cannot be minimize-quantile-loss.'
          type: boolean
        windowConfig:
          description: Config containing strategy for generating sliding windows.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig'
        weightColumn:
          type: string
          description: 'Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1.'
        timeSeriesAttributeColumns:
          description: 'Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color.'
          items:
            type: string
          type: array
        trainBudgetMilliNodeHours:
          description: 'Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend''s discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won''t be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.'
          format: int64
          type: string
        unavailableAtForecastColumns:
          type: array
          items:
            type: string
          description: 'Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day.'
        dataGranularity:
          description: Expected difference in time granularity between rows in the data.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity'
        timeColumn:
          type: string
          description: The name of the column that identifies time order in the time series. This column must be available at forecast.
        forecastHorizon:
          description: The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field.
          format: int64
          type: string
        targetColumn:
          type: string
          description: The name of the column that the Model is to predict values for. This column must be unavailable at forecast.
        contextWindow:
          format: int64
          type: string
          description: The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field.
        availableAtForecastColumns:
          items:
            type: string
          description: 'Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day.'
          type: array
        transformations:
          description: 'Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation'
    GoogleCloudAiplatformV1ExportFractionSplit:
      type: object
      properties:
        trainingFraction:
          description: The fraction of the input data that is to be used to train the Model.
          type: number
          format: double
        validationFraction:
          format: double
          type: number
          description: The fraction of the input data that is to be used to validate the Model.
        testFraction:
          format: double
          description: The fraction of the input data that is to be used to evaluate the Model.
          type: number
      description: 'Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test.'
      id: GoogleCloudAiplatformV1ExportFractionSplit
    GoogleCloudAiplatformV1PipelineJobDetail:
      properties:
        pipelineRunContext:
          readOnly: true
          description: Output only. The context of the current pipeline run.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
        taskDetails:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetail'
          description: Output only. The runtime details of the tasks under the pipeline.
        pipelineContext:
          readOnly: true
          description: Output only. The context of the pipeline.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      type: object
      description: The runtime detail of PipelineJob.
      id: GoogleCloudAiplatformV1PipelineJobDetail
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame:
      description: 'The fields `xMin`, `xMax`, `yMin`, and `yMax` refer to a bounding box, i.e. the rectangle over the video frame pinpointing the found AnnotationSpec. The coordinates are relative to the frame size, and the point 0,0 is in the top left of the frame.'
      properties:
        yMax:
          format: float
          type: number
          description: The bottommost coordinate of the bounding box.
        yMin:
          format: float
          type: number
          description: The topmost coordinate of the bounding box.
        timeOffset:
          type: string
          description: 'A time (frame) of a video in which the object has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.'
          format: google-duration
        xMax:
          type: number
          format: float
          description: The rightmost coordinate of the bounding box.
        xMin:
          type: number
          description: The leftmost coordinate of the bounding box.
          format: float
      id: GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame
      type: object
    GoogleCloudAiplatformV1WriteTensorboardRunDataRequest:
      id: GoogleCloudAiplatformV1WriteTensorboardRunDataRequest
      properties:
        timeSeriesData:
          description: Required. The TensorboardTimeSeries data to write. Values with in a time series are indexed by their step value. Repeated writes to the same step will overwrite the existing value for that step. The upper limit of data points per write request is 5000.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TimeSeriesData'
          type: array
        tensorboardRun:
          description: 'Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`'
          type: string
      type: object
      description: Request message for TensorboardService.WriteTensorboardRunData.
    GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse:
      type: object
      properties:
        hyperparameterTuningJobs:
          type: array
          description: List of HyperparameterTuningJobs in the requested page. HyperparameterTuningJob.trials of the jobs will be not be returned.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob'
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass to ListHyperparameterTuningJobsRequest.page_token to obtain that page.
      id: GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse
      description: Response message for JobService.ListHyperparameterTuningJobs
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics:
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics
      properties:
        recall:
          description: Recall (True Positive Rate) for the given confidence threshold.
          type: number
          format: float
        confidenceThreshold:
          format: float
          description: Metrics are computed with an assumption that the Model never returns predictions with score lower than this value.
          type: number
        precision:
          description: Precision for the given confidence threshold.
          format: float
          type: number
        f1Score:
          format: float
          type: number
          description: The harmonic mean of recall and precision.
      type: object
    GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata:
      description: The metadata of Datasets that contain Text Prompt data.
      id: GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata
      properties:
        text:
          description: The content of the prompt dataset.
          type: string
        topK:
          format: int64
          description: Top K value set when the dataset was saved. This value determines how many candidates with highest probability from the vocab would be selected for each decoding step.
          type: string
        promptType:
          type: string
          description: Type of the prompt dataset.
        maxOutputTokens:
          format: int64
          description: Value of the maximum number of tokens generated set when the dataset was saved.
          type: string
        gcsUri:
          description: The Google Cloud Storage URI that stores the prompt data.
          type: string
        temperature:
          description: Temperature value used for sampling set when the dataset was saved. This value is used to tune the degree of randomness.
          type: number
          format: float
        topP:
          type: number
          format: float
          description: 'Top P value set when the dataset was saved. Given topK tokens for decoding, top candidates will be selected until the sum of their probabilities is topP.'
      type: object
    GoogleCloudAiplatformV1ExportFeatureValuesResponse:
      description: Response message for FeaturestoreService.ExportFeatureValues.
      id: GoogleCloudAiplatformV1ExportFeatureValuesResponse
      properties: {}
      type: object
    GoogleCloudAiplatformV1TensorboardRun:
      id: GoogleCloudAiplatformV1TensorboardRun
      description: 'TensorboardRun maps to a specific execution of a training job with a given set of hyperparameter values, model definition, dataset, etc'
      type: object
      properties:
        labels:
          description: 'The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.'
          additionalProperties:
            type: string
          type: object
        description:
          description: Description of this TensorboardRun.
          type: string
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Timestamp when this TensorboardRun was created.
        name:
          type: string
          readOnly: true
          description: 'Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`'
        etag:
          description: 'Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
          type: string
        displayName:
          type: string
          description: Required. User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment.
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp when this TensorboardRun was last updated.
    GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest:
      type: object
      properties: {}
      description: Request message for JobService.ResumeModelDeploymentMonitoringJob.
      id: GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec:
      id: GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec
      type: object
      properties:
        metric:
          description: Metric specs for the NAS job. Validation for this field is done at `multi_trial_algorithm_spec` field.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec'
        multiTrialAlgorithm:
          type: string
          enumDescriptions:
            - Defaults to `REINFORCEMENT_LEARNING`.
            - The Reinforcement Learning Algorithm for Multi-trial Neural Architecture Search (NAS).
            - The Grid Search Algorithm for Multi-trial Neural Architecture Search (NAS).
          enum:
            - MULTI_TRIAL_ALGORITHM_UNSPECIFIED
            - REINFORCEMENT_LEARNING
            - GRID_SEARCH
          description: The multi-trial Neural Architecture Search (NAS) algorithm type. Defaults to `REINFORCEMENT_LEARNING`.
        trainTrialSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec'
          description: 'Spec for train trials. Top N [TrainTrialSpec.max_parallel_trial_count] search trials will be trained for every M [TrainTrialSpec.frequency] trials searched.'
        searchTrialSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec'
          description: Required. Spec for search trials.
      description: The spec of multi-trial Neural Architecture Search (NAS).
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassification:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassification
      properties:
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs'
      type: object
      description: A TrainingJob that trains and uploads an AutoML Video Classification Model.
    GoogleCloudAiplatformV1PythonPackageSpec:
      id: GoogleCloudAiplatformV1PythonPackageSpec
      properties:
        args:
          items:
            type: string
          type: array
          description: Command line arguments to be passed to the Python task.
        env:
          type: array
          description: Environment variables to be passed to the python module. Maximum limit is 100.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EnvVar'
        packageUris:
          description: Required. The Google Cloud Storage location of the Python package files which are the training program and its dependent packages. The maximum number of package URIs is 100.
          items:
            type: string
          type: array
        pythonModule:
          description: Required. The Python module name to run after installing the packages.
          type: string
        executorImageUri:
          description: 'Required. The URI of a container image in Artifact Registry that will run the provided Python package. Vertex AI provides a wide range of executor images with pre-installed packages to meet users'' various use cases. See the list of [pre-built containers for training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). You must use an image from this list.'
          type: string
      description: The spec of a Python packaged code.
      type: object
    GoogleCloudAiplatformV1MachineSpec:
      type: object
      description: Specification of a single machine.
      properties:
        acceleratorCount:
          description: The number of accelerators to attach to the machine.
          format: int32
          type: integer
        acceleratorType:
          type: string
          enum:
            - ACCELERATOR_TYPE_UNSPECIFIED
            - NVIDIA_TESLA_K80
            - NVIDIA_TESLA_P100
            - NVIDIA_TESLA_V100
            - NVIDIA_TESLA_P4
            - NVIDIA_TESLA_T4
            - NVIDIA_TESLA_A100
            - NVIDIA_A100_80GB
            - NVIDIA_L4
            - TPU_V2
            - TPU_V3
            - TPU_V4_POD
          description: Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.
          enumDescriptions:
            - 'Unspecified accelerator type, which means no accelerator.'
            - Nvidia Tesla K80 GPU.
            - Nvidia Tesla P100 GPU.
            - Nvidia Tesla V100 GPU.
            - Nvidia Tesla P4 GPU.
            - Nvidia Tesla T4 GPU.
            - Nvidia Tesla A100 GPU.
            - Nvidia A100 80GB GPU.
            - Nvidia L4 GPU.
            - TPU v2.
            - TPU v3.
            - TPU v4.
        machineType:
          type: string
          description: 'Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.'
      id: GoogleCloudAiplatformV1MachineSpec
    GoogleCloudAiplatformV1IndexDatapointCrowdingTag:
      description: Crowding tag is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.
      properties:
        crowdingAttribute:
          type: string
          description: The attribute value used for crowding. The maximum number of neighbors to return per crowding attribute value (per_crowding_attribute_num_neighbors) is configured per-query. This field is ignored if per_crowding_attribute_num_neighbors is larger than the total number of neighbors to return for a given query.
      id: GoogleCloudAiplatformV1IndexDatapointCrowdingTag
      type: object
    GoogleCloudAiplatformV1ListIndexesResponse:
      description: Response message for IndexService.ListIndexes.
      type: object
      id: GoogleCloudAiplatformV1ListIndexesResponse
      properties:
        indexes:
          description: List of indexes in the requested page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Index'
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListIndexesRequest.page_token to obtain that page.
          type: string
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation:
      properties:
        polylineAnnotation:
          description: Polyline annotation.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation'
        polygonAnnotation:
          description: Polygon annotation.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation'
        maskAnnotation:
          description: Mask based segmentation annotation. Only one mask annotation can exist for one image.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation'
      type: object
      description: Annotation details specific to image segmentation.
      id: GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation
    GoogleCloudAiplatformV1StopTrialRequest:
      properties: {}
      type: object
      id: GoogleCloudAiplatformV1StopTrialRequest
      description: Request message for VizierService.StopTrial.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity
      properties:
        quantity:
          description: 'The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1.'
          format: int64
          type: string
        unit:
          type: string
          description: 'The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year"'
      description: A duration of time expressed in time granularity units.
    GoogleCloudAiplatformV1ExportDataConfig:
      id: GoogleCloudAiplatformV1ExportDataConfig
      type: object
      description: 'Describes what part of the Dataset is to be exported, the destination of the export and how to export.'
      properties:
        gcsDestination:
          description: 'The Google Cloud Storage location where the output is to be written to. In the given directory a new directory will be created with name: `export-data--` where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. All export output will be written into that directory. Inside that directory, annotations with the same schema will be grouped into sub directories which are named with the corresponding annotations'' schema title. Inside these sub directories, a schema.yaml will be created to describe the output format.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
        fractionSplit:
          description: Split based on fractions defining the size of each set.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportFractionSplit'
        annotationsFilter:
          description: An expression for filtering what part of the Dataset is to be exported. Only Annotations that match this filter will be exported. The filter syntax is the same as in ListAnnotations.
          type: string
    GoogleCloudAiplatformV1SchemaImageDatasetMetadata:
      id: GoogleCloudAiplatformV1SchemaImageDatasetMetadata
      description: The metadata of Datasets that contain Image DataItems.
      properties:
        gcsBucket:
          type: string
          description: Google Cloud Storage Bucket name that contains the blob data of this Dataset.
        dataItemSchemaUri:
          type: string
          description: Points to a YAML file stored on Google Cloud Storage describing payload of the Image DataItems that belong to this Dataset.
      type: object
    GoogleCloudAiplatformV1EntityIdSelector:
      id: GoogleCloudAiplatformV1EntityIdSelector
      properties:
        entityIdField:
          type: string
          description: 'Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id.'
        csvSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CsvSource'
          description: Source of Csv
      description: Selector for entityId. Getting ids from the given source.
      type: object
    GoogleCloudAiplatformV1TensorboardTimeSeries:
      description: TensorboardTimeSeries maps to times series produced in training runs
      id: GoogleCloudAiplatformV1TensorboardTimeSeries
      type: object
      properties:
        etag:
          description: 'Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
          type: string
        name:
          type: string
          description: Output only. Name of the TensorboardTimeSeries.
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp when this TensorboardTimeSeries was created.
        metadata:
          description: 'Output only. Scalar, Tensor, or Blob metadata for this TensorboardTimeSeries.'
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata'
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this TensorboardTimeSeries was last updated.
          type: string
        pluginName:
          type: string
          description: 'Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob'
        pluginData:
          format: byte
          type: string
          description: 'Data of the current plugin, with the size limited to 65KB.'
        displayName:
          type: string
          description: Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).
        description:
          description: Description of this TensorboardTimeSeries.
          type: string
        valueType:
          description: Required. Immutable. Type of TensorboardTimeSeries value.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - SCALAR
            - TENSOR
            - BLOB_SEQUENCE
          enumDescriptions:
            - The value type is unspecified.
            - Used for TensorboardTimeSeries that is a list of scalars. E.g. accuracy of a model over epochs/time.
            - Used for TensorboardTimeSeries that is a list of tensors. E.g. histograms of weights of layer in a model over epoch/time.
            - Used for TensorboardTimeSeries that is a list of blob sequences. E.g. set of sample images with labels over epochs/time.
          type: string
    GoogleCloudAiplatformV1ListIndexEndpointsResponse:
      description: Response message for IndexEndpointService.ListIndexEndpoints.
      type: object
      properties:
        indexEndpoints:
          description: List of IndexEndpoints in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint'
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListIndexEndpointsRequest.page_token to obtain that page.
          type: string
      id: GoogleCloudAiplatformV1ListIndexEndpointsResponse
    GoogleCloudAiplatformV1FilterSplit:
      id: GoogleCloudAiplatformV1FilterSplit
      description: 'Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as ''-'' (the minus sign). Supported only for unstructured Datasets. '
      type: object
      properties:
        trainingFilter:
          type: string
          description: 'Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.'
        validationFilter:
          description: 'Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.'
          type: string
        testFilter:
          description: 'Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.'
          type: string
    GoogleCloudAiplatformV1SchemaPredictInstanceImageClassificationPredictionInstance:
      id: GoogleCloudAiplatformV1SchemaPredictInstanceImageClassificationPredictionInstance
      properties:
        content:
          description: The image bytes or Cloud Storage URI to make the prediction on.
          type: string
        mimeType:
          type: string
          description: The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
      type: object
      description: Prediction input format for Image Classification.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics:
      description: Metrics for a single confidence threshold.
      properties:
        confidenceThreshold:
          description: The confidence threshold value used to compute the metrics.
          type: number
          format: float
        f1Score:
          type: number
          format: float
          description: The harmonic mean of recall and precision.
        precision:
          format: float
          description: Precision under the given confidence threshold.
          type: number
        recall:
          description: Recall under the given confidence threshold.
          type: number
          format: float
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation
      description: 'Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.'
      properties:
        timeFormat:
          type: string
          description: 'The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)'
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig:
      properties:
        monitorInterval:
          type: string
          format: google-duration
          description: Required. The model monitoring job scheduling interval. It will be rounded up to next full hour. This defines how often the monitoring jobs are triggered.
        monitorWindow:
          type: string
          format: google-duration
          description: 'The time window of the prediction data being included in each prediction dataset. This window specifies how long the data should be collected from historical model results for each run. If not set, ModelDeploymentMonitoringScheduleConfig.monitor_interval will be used. e.g. If currently the cutoff time is 2022-01-08 14:30:00 and the monitor_window is set to be 3600, then data from 2022-01-08 13:30:00 to 2022-01-08 14:30:00 will be retrieved and aggregated to calculate the monitoring statistics.'
      type: object
      description: The config for scheduling monitoring job.
      id: GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig
    GoogleCloudAiplatformV1BigQueryDestination:
      type: object
      id: GoogleCloudAiplatformV1BigQueryDestination
      properties:
        outputUri:
          description: 'Required. BigQuery URI to a project or table, up to 2000 characters long. When only the project is specified, the Dataset and Table is created. When the full table reference is specified, the Dataset must exist and table must not exist. Accepted forms: * BigQuery path. For example: `bq://projectId` or `bq://projectId.bqDatasetId` or `bq://projectId.bqDatasetId.bqTableId`.'
          type: string
      description: The BigQuery location for the output content.
    GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature:
      type: object
      description: Noise sigma for a single feature.
      id: GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature
      properties:
        name:
          type: string
          description: The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.
        sigma:
          type: number
          format: float
          description: This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.
    GoogleCloudAiplatformV1StudySpecMetricSpec:
      id: GoogleCloudAiplatformV1StudySpecMetricSpec
      type: object
      properties:
        metricId:
          type: string
          description: Required. The ID of the metric. Must not contain whitespaces and must be unique amongst all MetricSpecs.
        goal:
          enumDescriptions:
            - Goal Type will default to maximize.
            - Maximize the goal metric.
            - Minimize the goal metric.
          type: string
          description: Required. The optimization goal of the metric.
          enum:
            - GOAL_TYPE_UNSPECIFIED
            - MAXIMIZE
            - MINIMIZE
        safetyConfig:
          description: 'Used for safe search. In the case, the metric will be a safety metric. You must provide a separate metric for objective metric.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig'
      description: Represents a metric to optimize.
    GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateMetatdata:
      id: GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateMetatdata
      properties:
        study:
          description: The name of the Study that the Trial belongs to.
          type: string
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for suggesting Trials.
        trial:
          type: string
          description: The Trial name.
      type: object
      description: This message will be placed in the metadata field of a google.longrunning.Operation associated with a CheckTrialEarlyStoppingState request.
    GoogleCloudAiplatformV1RestoreDatasetVersionOperationMetadata:
      description: Runtime operation information for DatasetService.RestoreDatasetVersion.
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The common part of the operation metadata.
      id: GoogleCloudAiplatformV1RestoreDatasetVersionOperationMetadata
      type: object
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          type: array
    GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider:
      id: GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider
      description: 'Configuration for an authentication provider, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).'
      properties:
        allowedIssuers:
          description: 'A list of allowed JWT issuers. Each entry must be a valid Google service account, in the following format: `service-account-name@project-id.iam.gserviceaccount.com`'
          type: array
          items:
            type: string
        audiences:
          items:
            type: string
          description: 'The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted.'
          type: array
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition:
      properties:
        values:
          items:
            type: string
          type: array
          description: Required. Matches values of the parent parameter of 'CATEGORICAL' type. All values must exist in `categorical_value_spec` of parent parameter.
      type: object
      id: GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition
      description: Represents the spec to match categorical values from parent parameter.
    GoogleCloudAiplatformV1EncryptionSpec:
      id: GoogleCloudAiplatformV1EncryptionSpec
      properties:
        kmsKeyName:
          type: string
          description: 'Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.'
      description: Represents a customer-managed encryption key spec that can be applied to a top-level resource.
      type: object
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig:
      description: 'The time series Dataset''s data source. The Dataset doesn''t store the data directly, but only pointer(s) to its data.'
      id: GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig
      type: object
      properties:
        bigquerySource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource'
    GoogleCloudAiplatformV1SchemaTextSentimentAnnotation:
      id: GoogleCloudAiplatformV1SchemaTextSentimentAnnotation
      type: object
      properties:
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        sentiment:
          description: The sentiment score for text.
          type: integer
          format: int32
        sentimentMax:
          description: The sentiment max score for text.
          format: int32
          type: integer
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
      description: Annotation details specific to text sentiment.
    GoogleCloudAiplatformV1ListDatasetsResponse:
      description: Response message for DatasetService.ListDatasets.
      type: object
      id: GoogleCloudAiplatformV1ListDatasetsResponse
      properties:
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
          description: A list of Datasets that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
    GoogleCloudAiplatformV1EvaluatedAnnotationExplanation:
      description: Explanation result of the prediction produced by the Model.
      id: GoogleCloudAiplatformV1EvaluatedAnnotationExplanation
      properties:
        explanation:
          description: Explanation attribution response details.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Explanation'
        explanationType:
          description: 'Explanation type. For AutoML Image Classification models, possible values are: * `image-integrated-gradients` * `image-xrai`'
          type: string
      type: object
    GoogleCloudAiplatformV1ModelOriginalModelInfo:
      id: GoogleCloudAiplatformV1ModelOriginalModelInfo
      type: object
      properties:
        model:
          type: string
          description: 'Output only. The resource name of the Model this Model is a copy of, including the revision. Format: `projects/{project}/locations/{location}/models/{model_id}@{version_id}`'
          readOnly: true
      description: Contains information about the original Model if this Model is a copy.
    GoogleCloudAiplatformV1CreateFeatureOperationMetadata:
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Feature.
      id: GoogleCloudAiplatformV1CreateFeatureOperationMetadata
      description: Details of operations that perform create Feature.
      type: object
    GoogleCloudAiplatformV1StratifiedSplit:
      id: GoogleCloudAiplatformV1StratifiedSplit
      type: object
      properties:
        trainingFraction:
          type: number
          format: double
          description: The fraction of the input data that is to be used to train the Model.
        validationFraction:
          description: The fraction of the input data that is to be used to validate the Model.
          type: number
          format: double
        key:
          type: string
          description: Required. The key is a name of one of the Dataset's data columns. The key provided must be for a categorical column.
        testFraction:
          format: double
          description: The fraction of the input data that is to be used to evaluate the Model.
          type: number
      description: 'Assigns input data to the training, validation, and test sets so that the distribution of values found in the categorical column (as specified by the `key` field) is mirrored within each split. The fraction values determine the relative sizes of the splits. For example, if the specified column has three values, with 50% of the rows having value "A", 25% value "B", and 25% value "C", and the split fractions are specified as 80/10/10, then the training set will constitute 80% of the training data, with about 50% of the training set rows having the value "A" for the specified column, about 25% having the value "B", and about 25% having the value "C". Only the top 500 occurring values are used; any values not in the top 500 values are randomly assigned to a split. If less than three rows contain a specific value, those rows are randomly assigned. Supported only for tabular Datasets.'
    GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset:
      description: Represents one AnnotatedDataset in datalabeling.googleapis.com.
      properties:
        annotatedDatasetDisplayName:
          type: string
          description: The AnnotatedDataset's display name in datalabeling.googleapis.com.
        annotatedDataset:
          description: 'Full resource name of data labeling AnnotatedDataset. Format: `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`.'
          type: string
      id: GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset
      type: object
    GoogleCloudAiplatformV1ImportDataOperationMetadata:
      description: Runtime operation information for DatasetService.ImportData.
      id: GoogleCloudAiplatformV1ImportDataOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The common part of the operation metadata.
      type: object
    GoogleCloudAiplatformV1WriteFeatureValuesPayload:
      properties:
        featureValues:
          description: 'Required. Feature values to be written, mapping from Feature ID to value. Up to 100,000 `feature_values` entries may be written across all payloads. The feature generation time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future.'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValue'
        entityId:
          type: string
          description: Required. The ID of the entity.
      description: Contains Feature values to be written for a specific entity.
      type: object
      id: GoogleCloudAiplatformV1WriteFeatureValuesPayload
    GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesRequest:
      description: Request message for ModelService.BatchImportModelEvaluationSlices
      properties:
        modelEvaluationSlices:
          description: Required. Model evaluation slice resource to be imported.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSlice'
          type: array
      type: object
      id: GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesRequest
    GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies:
      type: object
      description: Statistics and anomalies generated by Model Monitoring.
      id: GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies
      properties:
        anomalyCount:
          description: Number of anomalies within all stats.
          type: integer
          format: int32
        featureStats:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies'
          type: array
          description: A list of historical Stats and Anomalies generated for all Features.
        objective:
          enumDescriptions:
            - 'Default value, should not be set.'
            - Raw feature values' stats to detect skew between Training-Prediction datasets.
            - Raw feature values' stats to detect drift between Serving-Prediction datasets.
            - Feature attribution scores to detect skew between Training-Prediction datasets.
            - Feature attribution scores to detect skew between Prediction datasets collected within different time windows.
          type: string
          description: Model Monitoring Objective those stats and anomalies belonging to.
          enum:
            - MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED
            - RAW_FEATURE_SKEW
            - RAW_FEATURE_DRIFT
            - FEATURE_ATTRIBUTION_SKEW
            - FEATURE_ATTRIBUTION_DRIFT
        deployedModelId:
          description: Deployed Model ID.
          type: string
    GoogleCloudAiplatformV1ExportModelOperationMetadata:
      id: GoogleCloudAiplatformV1ExportModelOperationMetadata
      properties:
        outputInfo:
          readOnly: true
          description: Output only. Information further describing the output of this Model export.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo'
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The common part of the operation metadata.
      type: object
      description: Details of ModelService.ExportModel operation.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs:
      properties:
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - MOBILE_VERSATILE_1
            - MOBILE_CORAL_VERSATILE_1
            - MOBILE_CORAL_LOW_LATENCY_1
            - MOBILE_JETSON_VERSATILE_1
            - MOBILE_JETSON_LOW_LATENCY_1
          type: string
          enumDescriptions:
            - Should not be set.
            - 'A model best tailored to be used within Google Cloud, and which c annot be exported. Default.'
            - 'A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow Lite model and used on a mobile or edge device afterwards.'
            - A versatile model that is meant to be exported (see ModelService.ExportModel) and used on a Google Coral device.
            - 'A model that trades off quality for low latency, to be exported (see ModelService.ExportModel) and used on a Google Coral device.'
            - A versatile model that is meant to be exported (see ModelService.ExportModel) and used on an NVIDIA Jetson device.
            - 'A model that trades off quality for low latency, to be exported (see ModelService.ExportModel) and used on an NVIDIA Jetson device.'
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs
    GoogleCloudAiplatformV1CustomJob:
      properties:
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: 'Customer-managed encryption key options for a CustomJob. If this is set, then all resources created by the CustomJob will be encrypted with the provided encryption key.'
        webAccessUris:
          description: 'Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node''s interactive shell.'
          readOnly: true
          additionalProperties:
            type: string
          type: object
        name:
          type: string
          readOnly: true
          description: Output only. Resource name of a CustomJob.
        labels:
          description: 'The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
          additionalProperties:
            type: string
          type: object
        endTime:
          format: google-datetime
          description: 'Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.'
          readOnly: true
          type: string
        error:
          readOnly: true
          description: Output only. Only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
          $ref: '#/components/schemas/GoogleRpcStatus'
        startTime:
          readOnly: true
          format: google-datetime
          description: Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state.
          type: string
        createTime:
          format: google-datetime
          type: string
          description: Output only. Time when the CustomJob was created.
          readOnly: true
        jobSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
          description: Required. Job spec.
        state:
          type: string
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          enumDescriptions:
            - The job state is unspecified.
            - The job has been just created or resumed and processing has not yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - 'The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.'
            - The job has been cancelled.
            - 'The job has been stopped, and can be resumed.'
            - The job has expired.
            - 'The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.'
            - 'The job is partially succeeded, some results may be missing due to errors.'
          description: Output only. The detailed state of the job.
          readOnly: true
        displayName:
          type: string
          description: Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        updateTime:
          readOnly: true
          description: Output only. Time when the CustomJob was most recently updated.
          type: string
          format: google-datetime
      id: GoogleCloudAiplatformV1CustomJob
      description: Represents a job that runs custom workloads such as a Docker container or a Python package. A CustomJob can have multiple worker pools and each worker pool can have its own machine and input spec. A CustomJob will be cleaned up once the job enters terminal state (failed or succeeded).
      type: object
    GoogleCloudAiplatformV1ResumeScheduleRequest:
      id: GoogleCloudAiplatformV1ResumeScheduleRequest
      description: Request message for ScheduleService.ResumeSchedule.
      properties:
        catchUp:
          description: 'Optional. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. This will also update Schedule.catch_up field. Default to false.'
          type: boolean
      type: object
    GoogleCloudAiplatformV1Execution:
      id: GoogleCloudAiplatformV1Execution
      description: Instance of a general execution.
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'The labels with user-defined metadata to organize your Executions. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Execution (System labels are excluded).'
        displayName:
          description: User provided display name of the Execution. May be up to 128 Unicode characters.
          type: string
        schemaVersion:
          description: The version of the schema in `schema_title` to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
          type: string
        schemaTitle:
          type: string
          description: The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
        state:
          type: string
          enumDescriptions:
            - Unspecified Execution state
            - The Execution is new
            - The Execution is running
            - The Execution has finished running
            - The Execution has failed
            - The Execution completed through Cache hit.
            - The Execution was cancelled.
          description: 'The state of this Execution. This is a property of the Execution, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines) and the system does not prescribe or check the validity of state transitions.'
          enum:
            - STATE_UNSPECIFIED
            - NEW
            - RUNNING
            - COMPLETE
            - FAILED
            - CACHED
            - CANCELLED
        updateTime:
          type: string
          readOnly: true
          description: Output only. Timestamp when this Execution was last updated.
          format: google-datetime
        etag:
          type: string
          description: 'An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        name:
          description: Output only. The resource name of the Execution.
          type: string
          readOnly: true
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: Properties of the Execution. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
          type: object
        createTime:
          description: Output only. Timestamp when this Execution was created.
          readOnly: true
          type: string
          format: google-datetime
        description:
          type: string
          description: Description of the Execution
      type: object
    GoogleCloudAiplatformV1MetadataStoreMetadataStoreState:
      properties:
        diskUtilizationBytes:
          type: string
          format: int64
          description: The disk utilization of the MetadataStore in bytes.
      description: Represents state information for a MetadataStore.
      id: GoogleCloudAiplatformV1MetadataStoreMetadataStoreState
      type: object
    GoogleCloudAiplatformV1SchemaTextExtractionAnnotation:
      properties:
        textSegment:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTextSegment'
          description: The segment of the text content.
        displayName:
          type: string
          description: The display name of the AnnotationSpec that this Annotation pertains to.
        annotationSpecId:
          type: string
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
      id: GoogleCloudAiplatformV1SchemaTextExtractionAnnotation
      type: object
      description: Annotation details specific to text extraction.
    GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse:
      type: object
      id: GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse
      description: Response message for TensorboardService.ListTensorboardTimeSeries.
      properties:
        tensorboardTimeSeries:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
          type: array
          description: The TensorboardTimeSeries mathching the request.
        nextPageToken:
          type: string
          description: 'A token, which can be sent as ListTensorboardTimeSeriesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
    GoogleCloudAiplatformV1TrialParameter:
      type: object
      properties:
        parameterId:
          type: string
          readOnly: true
          description: Output only. The ID of the parameter. The parameter should be defined in StudySpec's Parameters.
        value:
          description: 'Output only. The value of the parameter. `number_value` will be set if a parameter defined in StudySpec is in type ''INTEGER'', ''DOUBLE'' or ''DISCRETE''. `string_value` will be set if a parameter defined in StudySpec is in type ''CATEGORICAL''.'
          readOnly: true
          type: any
      id: GoogleCloudAiplatformV1TrialParameter
      description: A message representing a parameter to be tuned.
    GoogleCloudAiplatformV1ModelSourceInfo:
      properties:
        copy:
          description: If this Model is copy of another Model. If true then source_type pertains to the original.
          type: boolean
        sourceType:
          type: string
          enum:
            - MODEL_SOURCE_TYPE_UNSPECIFIED
            - AUTOML
            - CUSTOM
            - BQML
            - MODEL_GARDEN
            - GENIE
          enumDescriptions:
            - Should not be used.
            - The Model is uploaded by automl training pipeline.
            - The Model is uploaded by user or custom training pipeline.
            - The Model is registered and sync'ed from BigQuery ML.
            - The Model is saved or tuned from Model Garden.
            - The Model is saved or tuned from Genie.
          description: Type of the model source.
      id: GoogleCloudAiplatformV1ModelSourceInfo
      type: object
      description: Detail description of the source information of the model.
    GoogleCloudAiplatformV1FindNeighborsResponse:
      description: The response message for MatchService.FindNeighbors.
      properties:
        nearestNeighbors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors'
          description: The nearest neighbors of the query datapoints.
      type: object
      id: GoogleCloudAiplatformV1FindNeighborsResponse
    GoogleCloudAiplatformV1ExamplesOverride:
      description: Overrides for example-based explanations.
      properties:
        returnEmbeddings:
          type: boolean
          description: 'If true, return the embeddings instead of neighbors.'
        dataFormat:
          type: string
          enumDescriptions:
            - Unspecified format. Must not be used.
            - Provided data is a set of model inputs.
            - Provided data is a set of embeddings.
          description: The format of the data being provided with each call.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - INSTANCES
            - EMBEDDINGS
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ExamplesRestrictionsNamespace'
          description: Restrict the resulting nearest neighbors to respect these constraints.
        crowdingCount:
          description: The number of neighbors to return that have the same crowding tag.
          type: integer
          format: int32
        neighborCount:
          description: The number of neighbors to return.
          type: integer
          format: int32
      type: object
      id: GoogleCloudAiplatformV1ExamplesOverride
    GoogleCloudAiplatformV1ExportFeatureValuesOperationMetadata:
      id: GoogleCloudAiplatformV1ExportFeatureValuesOperationMetadata
      description: Details of operations that exports Features values.
      properties:
        genericMetadata:
          description: Operation metadata for Featurestore export Feature values.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      type: object
    GoogleCloudAiplatformV1DeployModelRequest:
      properties:
        trafficSplit:
          additionalProperties:
            format: int32
            type: integer
          type: object
          description: 'A map from a DeployedModel''s ID to the percentage of this Endpoint''s traffic that should be forwarded to that DeployedModel. If this field is non-empty, then the Endpoint''s traffic_split will be overwritten with it. To refer to the ID of the just being deployed Model, a "0" should be used, and the actual ID of the new DeployedModel will be filled in its place by this method. The traffic percentage values must add up to 100. If this field is empty, then the Endpoint''s traffic_split is not updated.'
        deployedModel:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
          description: 'Required. The DeployedModel to be created within the Endpoint. Note that Endpoint.traffic_split must be updated for the DeployedModel to start receiving traffic, either as part of this call, or via EndpointService.UpdateEndpoint.'
      type: object
      id: GoogleCloudAiplatformV1DeployModelRequest
      description: Request message for EndpointService.DeployModel.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation
      description: 'Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value.'
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureNoiseSigma:
      id: GoogleCloudAiplatformV1FeatureNoiseSigma
      description: Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.
      type: object
      properties:
        noiseSigma:
          type: array
          description: Noise sigma per feature. No noise is added to features that are not set.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature'
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentation:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentation
      properties:
        inputs:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs'
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata'
          description: The metadata information.
      description: A TrainingJob that trains and uploads an AutoML Image Segmentation Model.
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams:
      description: Prediction model parameters for Video Classification.
      properties:
        oneSecIntervalClassification:
          description: 'Set to true to request classification for a video at one-second intervals. Vertex AI returns labels and their confidence scores for each second of the entire time segment of the video that user specified in the input WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false'
          type: boolean
        shotClassification:
          type: boolean
          description: 'Set to true to request shot-level classification. Vertex AI determines the boundaries for each camera shot in the entire time segment of the video that user specified in the input instance. Vertex AI then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false'
        confidenceThreshold:
          format: float
          type: number
          description: The Model only returns predictions with at least this confidence score. Default value is 0.0
        segmentClassification:
          type: boolean
          description: Set to true to request segment-level classification. Vertex AI returns labels and their confidence scores for the entire time segment of the video that user specified in the input instance. Default value is true
        maxPredictions:
          description: 'The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10,000.'
          format: int32
          type: integer
      id: GoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams
      type: object
    GoogleCloudAiplatformV1DataItemView:
      description: A container for a single DataItem and Annotations on it.
      id: GoogleCloudAiplatformV1DataItemView
      properties:
        dataItem:
          description: The DataItem.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DataItem'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Annotation'
          description: 'The Annotations on the DataItem. If too many Annotations should be returned for the DataItem, this field will be truncated per annotations_limit in request. If it was, then the has_truncated_annotations will be set to true.'
        hasTruncatedAnnotations:
          type: boolean
          description: 'True if and only if the Annotations field has been truncated. It happens if more Annotations for this DataItem met the request''s annotation_filter than are allowed to be returned by annotations_limit. Note that if Annotations field is not being returned due to field mask, then this field will not be set to true no matter how many Annotations are there.'
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics:
      type: object
      description: Metrics for a single confidence threshold.
      properties:
        f1Score:
          description: Output only. The harmonic mean of recall and precision.
          type: number
          format: float
        precision:
          format: float
          type: number
          description: Output only. Precision for the given confidence threshold.
        confidenceThreshold:
          format: float
          type: number
          description: Output only. The confidence threshold value used to compute the metrics.
        recall:
          format: float
          type: number
          description: Output only. Recall for the given confidence threshold.
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics
    GoogleCloudAiplatformV1EvaluatedAnnotation:
      properties:
        explanations:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EvaluatedAnnotationExplanation'
          type: array
          description: 'Explanations of predictions. Each element of the explanations indicates the explanation for one explanation Method. The attributions list in the EvaluatedAnnotationExplanation.explanation object corresponds to the predictions list. For example, the second element in the attributions list explains the second element in the predictions list.'
        errorAnalysisAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ErrorAnalysisAnnotation'
          description: Annotations of model error analysis results.
        groundTruths:
          type: array
          items:
            type: any
          description: 'Output only. The ground truth Annotations, i.e. the Annotations that exist in the test data the Model is evaluated on. For true positive, there is one and only one ground truth annotation, which matches the only prediction in predictions. For false positive, there are zero or more ground truth annotations that are similar to the only prediction in predictions, but not enough for a match. For false negative, there is one and only one ground truth annotation, which doesn''t match any predictions created by the model. The schema of the ground truth is stored in ModelEvaluation.annotation_schema_uri'
          readOnly: true
        type:
          readOnly: true
          enum:
            - EVALUATED_ANNOTATION_TYPE_UNSPECIFIED
            - TRUE_POSITIVE
            - FALSE_POSITIVE
            - FALSE_NEGATIVE
          type: string
          enumDescriptions:
            - Invalid value.
            - The EvaluatedAnnotation is a true positive. It has a prediction created by the Model and a ground truth Annotation which the prediction matches.
            - The EvaluatedAnnotation is false positive. It has a prediction created by the Model which does not match any ground truth annotation.
            - The EvaluatedAnnotation is false negative. It has a ground truth annotation which is not matched by any of the model created predictions.
          description: Output only. Type of the EvaluatedAnnotation.
        evaluatedDataItemViewId:
          readOnly: true
          description: Output only. ID of the EvaluatedDataItemView under the same ancestor ModelEvaluation. The EvaluatedDataItemView consists of all ground truths and predictions on data_item_payload.
          type: string
        predictions:
          items:
            type: any
          description: 'Output only. The model predicted annotations. For true positive, there is one and only one prediction, which matches the only one ground truth annotation in ground_truths. For false positive, there is one and only one prediction, which doesn''t match any ground truth annotation of the corresponding data_item_view_id. For false negative, there are zero or more predictions which are similar to the only ground truth annotation in ground_truths but not enough for a match. The schema of the prediction is stored in ModelEvaluation.annotation_schema_uri'
          readOnly: true
          type: array
        dataItemPayload:
          description: Output only. The data item payload that the Model predicted this EvaluatedAnnotation on.
          type: any
          readOnly: true
      type: object
      description: 'True positive, false positive, or false negative. EvaluatedAnnotation is only available under ModelEvaluationSlice with slice of `annotationSpec` dimension.'
      id: GoogleCloudAiplatformV1EvaluatedAnnotation
    GoogleCloudAiplatformV1SchemaVisualInspectionMaskSavedQueryMetadata:
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1SchemaVisualInspectionMaskSavedQueryMetadata
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig:
      id: GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig
      properties:
        endpoint:
          description: 'Required. The ml.googleapis.com endpoint that this model version should be migrated from. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com'
          type: string
        modelDisplayName:
          type: string
          description: Required. Display name of the model in Vertex AI. System will pick a display name if unspecified.
        modelVersion:
          description: 'Required. Full resource name of ml engine model version. Format: `projects/{project}/models/{model}/versions/{version}`.'
          type: string
      type: object
      description: Config for migrating version in ml.googleapis.com to Vertex AI's Model.
    GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail:
      id: GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail
      description: The detailed info for a custom job executor.
      properties:
        failedJobs:
          description: Output only. The names of the previously failed CustomJob. The list includes the all attempts in chronological order.
          readOnly: true
          items:
            type: string
          type: array
        job:
          description: Output only. The name of the CustomJob.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1CancelDataLabelingJobRequest:
      properties: {}
      id: GoogleCloudAiplatformV1CancelDataLabelingJobRequest
      type: object
      description: Request message for JobService.CancelDataLabelingJob.
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoActionRecognitionPredictionResult:
      properties:
        id:
          type: string
          description: The resource ID of the AnnotationSpec that had been identified.
        displayName:
          description: The display name of the AnnotationSpec that had been identified.
          type: string
        timeSegmentStart:
          description: 'The beginning, inclusive, of the video''s time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.'
          type: string
          format: google-duration
        confidence:
          type: number
          format: float
          description: 'The Model''s confidence in correction of this prediction, higher value means higher confidence.'
        timeSegmentEnd:
          format: google-duration
          description: 'The end, exclusive, of the video''s time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.'
          type: string
      description: Prediction output format for Video Action Recognition.
      type: object
      id: GoogleCloudAiplatformV1SchemaPredictPredictionVideoActionRecognitionPredictionResult
    GoogleCloudAiplatformV1ActiveLearningConfig:
      type: object
      properties:
        maxDataItemCount:
          description: Max number of human labeled DataItems.
          format: int64
          type: string
        sampleConfig:
          description: 'Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SampleConfig'
        maxDataItemPercentage:
          format: int32
          type: integer
          description: Max percent of total DataItems for human labeling.
        trainingConfig:
          description: 'CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TrainingConfig'
      description: 'Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.'
      id: GoogleCloudAiplatformV1ActiveLearningConfig
    GoogleCloudAiplatformV1ListNasJobsResponse:
      type: object
      id: GoogleCloudAiplatformV1ListNasJobsResponse
      properties:
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass to ListNasJobsRequest.page_token to obtain that page.
        nasJobs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJob'
          description: List of NasJobs in the requested page. NasJob.nas_job_output of the jobs will not be returned.
      description: Response message for JobService.ListNasJobs
    GoogleCloudAiplatformV1BatchPredictionJob:
      description: 'A job that uses a Model to produce predictions on multiple input instances. If predictions for significant portion of the instances fail, the job may finish without attempting predictions for all remaining instances.'
      type: object
      properties:
        manualBatchTuningParameters:
          description: Immutable. Parameters configuring the batch behavior. Currently only applicable when dedicated_resources are used (in other cases Vertex AI does the tuning itself).
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ManualBatchTuningParameters'
        outputInfo:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobOutputInfo'
          description: Output only. Information further describing the output of this job.
        instanceConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig'
          description: Configuration for how to convert batch prediction input instances to the prediction instances that are sent to the Model.
        name:
          readOnly: true
          description: Output only. Resource name of the BatchPredictionJob.
          type: string
        completionStats:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CompletionStats'
          description: Output only. Statistics on completed and failed prediction instances.
        disableContainerLogging:
          type: boolean
          description: 'For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.'
        unmanagedContainerModel:
          description: Contains model information necessary to perform batch prediction without requiring uploading to model registry. Exactly one of model and unmanaged_container_model must be set.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1UnmanagedContainerModel'
        explanationSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec'
          description: 'Explanation configuration for this BatchPredictionJob. Can be specified only if generate_explanation is set to `true`. This value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of the explanation_spec object is not populated, the corresponding field of the Model.explanation_spec object is inherited.'
        model:
          description: 'The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`'
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Time when the BatchPredictionJob was most recently updated.
        outputConfig:
          description: Required. The Configuration specifying where output predictions should be written. The schema of any single prediction may be specified as a concatenation of Model's PredictSchemata's instance_schema_uri and prediction_schema_uri.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobOutputConfig'
        serviceAccount:
          type: string
          description: 'The service account that the DeployedModel''s container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.'
        startTime:
          type: string
          description: Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.
          format: google-datetime
          readOnly: true
        error:
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: Output only. Only populated when the job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.
        displayName:
          description: Required. The user-defined name of this BatchPredictionJob.
          type: string
        generateExplanation:
          type: boolean
          description: 'Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated.'
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobInputConfig'
          description: Required. Input configuration of the instances on which predictions are performed. The schema of any single instance may be specified via the Model's PredictSchemata's instance_schema_uri.
        dedicatedResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchDedicatedResources'
          description: 'The config of resources used by the Model during the batch prediction. If the Model supports DEDICATED_RESOURCES this config may be provided (and the job will use these resources), if the Model doesn''t support AUTOMATIC_RESOURCES, this config must be provided.'
        modelVersionId:
          description: Output only. The version ID of the Model that produces the predictions via this job.
          type: string
          readOnly: true
        partialFailures:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: 'Output only. Partial failures encountered. For example, single files that can''t be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details.'
          readOnly: true
          type: array
        modelParameters:
          type: any
          description: The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.
        endTime:
          description: 'Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.'
          readOnly: true
          type: string
          format: google-datetime
        state:
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          enumDescriptions:
            - The job state is unspecified.
            - The job has been just created or resumed and processing has not yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - 'The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.'
            - The job has been cancelled.
            - 'The job has been stopped, and can be resumed.'
            - The job has expired.
            - 'The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.'
            - 'The job is partially succeeded, some results may be missing due to errors.'
          readOnly: true
          description: Output only. The detailed state of the job.
          type: string
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: 'Customer-managed encryption key options for a BatchPredictionJob. If this is set, then all resources created by the BatchPredictionJob will be encrypted with the provided encryption key.'
        createTime:
          readOnly: true
          type: string
          description: Output only. Time when the BatchPredictionJob was created.
          format: google-datetime
        labels:
          description: 'The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
          type: object
          additionalProperties:
            type: string
        resourcesConsumed:
          readOnly: true
          description: 'Output only. Information about resources that had been consumed by this job. Provided in real time at best effort basis, as well as a final value once the job completes. Note: This field currently may be not populated for batch predictions that use AutoML Models.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ResourcesConsumed'
      id: GoogleCloudAiplatformV1BatchPredictionJob
    GoogleCloudAiplatformV1MigratableResourceAutomlModel:
      id: GoogleCloudAiplatformV1MigratableResourceAutomlModel
      properties:
        model:
          type: string
          description: 'Full resource name of automl Model. Format: `projects/{project}/locations/{location}/models/{model}`.'
        modelDisplayName:
          type: string
          description: The Model's display name in automl.googleapis.com.
      description: Represents one Model in automl.googleapis.com.
      type: object
    GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies:
      id: GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies
      properties:
        threshold:
          description: Threshold for anomaly detection.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig'
        predictionStats:
          description: A list of historical stats generated by different time window's Prediction Dataset.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureStatsAnomaly'
        trainingStats:
          description: Stats calculated for the Training Dataset.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureStatsAnomaly'
        featureDisplayName:
          type: string
          description: Display Name of the Feature.
      description: Historical Stats (and Anomalies) for a specific Feature.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentiment:
      type: object
      description: A TrainingJob that trains and uploads an AutoML Text Sentiment Model.
      properties:
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs'
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentiment
    GoogleCloudAiplatformV1Artifact:
      id: GoogleCloudAiplatformV1Artifact
      description: Instance of a general artifact.
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp when this Artifact was created.
        labels:
          additionalProperties:
            type: string
          description: 'The labels with user-defined metadata to organize your Artifacts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Artifact (System labels are excluded).'
          type: object
        description:
          type: string
          description: Description of the Artifact
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: Properties of the Artifact. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
        etag:
          type: string
          description: 'An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        uri:
          type: string
          description: The uniform resource identifier of the artifact file. May be empty if there is no actual artifact file.
        schemaVersion:
          type: string
          description: The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
        schemaTitle:
          type: string
          description: The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
        displayName:
          type: string
          description: User provided display name of the Artifact. May be up to 128 Unicode characters.
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the Artifact.
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - LIVE
          description: 'The state of this Artifact. This is a property of the Artifact, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines), and the system does not prescribe or check the validity of state transitions.'
          enumDescriptions:
            - Unspecified state for the Artifact.
            - A state used by systems like Vertex AI Pipelines to indicate that the underlying data item represented by this Artifact is being created.
            - 'A state indicating that the Artifact should exist, unless something external to the system deletes it.'
        updateTime:
          type: string
          format: google-datetime
          description: Output only. Timestamp when this Artifact was last updated.
          readOnly: true
      type: object
    GoogleCloudAiplatformV1Study:
      description: A message representing a Study.
      type: object
      properties:
        displayName:
          description: 'Required. Describes the Study, default value is empty string.'
          type: string
        name:
          type: string
          description: 'Output only. The name of a study. The study''s globally unique identifier. Format: `projects/{project}/locations/{location}/studies/{study}`'
          readOnly: true
        state:
          description: Output only. The detailed state of a Study.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
            - COMPLETED
          enumDescriptions:
            - The study state is unspecified.
            - The study is active.
            - The study is stopped due to an internal error.
            - The study is done when the service exhausts the parameter search space or max_trial_count is reached.
          type: string
          readOnly: true
        studySpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpec'
          description: Required. Configuration of the Study.
        createTime:
          description: Output only. Time at which the study was created.
          type: string
          format: google-datetime
          readOnly: true
        inactiveReason:
          description: Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.
          readOnly: true
          type: string
      id: GoogleCloudAiplatformV1Study
    GoogleCloudAiplatformV1IndexEndpoint:
      description: Indexes are deployed into it. An IndexEndpoint can have multiple DeployedIndexes.
      type: object
      id: GoogleCloudAiplatformV1IndexEndpoint
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: 'Output only. Timestamp when this IndexEndpoint was last updated. This timestamp is not updated when the endpoint''s DeployedIndexes are updated, e.g. due to updates of the original Indexes they are the deployments of.'
        privateServiceConnectConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PrivateServiceConnectConfig'
          description: Optional. Configuration for private service connect. network and private_service_connect_config are mutually exclusive.
        publicEndpointEnabled:
          description: 'Optional. If true, the deployed index will be accessible through public endpoint.'
          type: boolean
        labels:
          description: 'The labels with user-defined metadata to organize your IndexEndpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
          type: object
          additionalProperties:
            type: string
        enablePrivateServiceConnect:
          description: 'Optional. Deprecated: If true, expose the IndexEndpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.'
          deprecated: true
          type: boolean
        publicEndpointDomainName:
          readOnly: true
          description: 'Output only. If public_endpoint_enabled is true, this field will be populated with the domain name to use for this index endpoint.'
          type: string
        etag:
          description: 'Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
          type: string
        network:
          type: string
          description: 'Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the IndexEndpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. network and private_service_connect_config are mutually exclusive. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in ''12345'', and {network} is network name.'
        deployedIndexes:
          description: Output only. The indexes deployed in this endpoint.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndex'
          readOnly: true
        displayName:
          description: Required. The display name of the IndexEndpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        description:
          description: The description of the IndexEndpoint.
          type: string
        name:
          type: string
          description: Output only. The resource name of the IndexEndpoint.
          readOnly: true
        createTime:
          description: Output only. Timestamp when this IndexEndpoint was created.
          format: google-datetime
          type: string
          readOnly: true
    GoogleCloudAiplatformV1SchemaImageClassificationAnnotation:
      properties:
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        annotationSpecId:
          type: string
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
      type: object
      description: Annotation details specific to image classification.
      id: GoogleCloudAiplatformV1SchemaImageClassificationAnnotation
    GoogleCloudAiplatformV1ImportFeatureValuesRequest:
      type: object
      properties:
        disableOnlineServing:
          description: 'If set, data will not be imported for online serving. This is typically used for backfilling, where Feature generation timestamps are not in the timestamp range needed for online serving.'
          type: boolean
        featureTime:
          format: google-datetime
          description: Single Feature timestamp for all entities being imported. The timestamp must not have higher than millisecond precision.
          type: string
        csvSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CsvSource'
        avroSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1AvroSource'
        disableIngestionAnalysis:
          type: boolean
          description: 'If true, API doesn''t start ingestion analysis pipeline.'
        workerCount:
          format: int32
          description: 'Specifies the number of workers that are used to write data to the Featurestore. Consider the online serving capacity that you require to achieve the desired import throughput without interfering with online serving. The value must be positive, and less than or equal to 100. If not set, defaults to using 1 worker. The low count ensures minimal impact on online serving performance.'
          type: integer
        featureSpecs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec'
          description: 'Required. Specifications defining which Feature values to import from the entity. The request fails if no feature_specs are provided, and having multiple feature_specs for one Feature is not allowed.'
        bigquerySource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQuerySource'
        entityIdField:
          type: string
          description: 'Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id.'
        featureTimeField:
          type: string
          description: Source column that holds the Feature timestamp for all Feature values in each entity.
      description: Request message for FeaturestoreService.ImportFeatureValues.
      id: GoogleCloudAiplatformV1ImportFeatureValuesRequest
    GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse:
      properties:
        timeSeriesData:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TimeSeriesData'
          description: The returned time series data.
      type: object
      id: GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse
      description: Response message for TensorboardService.ReadTensorboardTimeSeriesData.
    GoogleCloudAiplatformV1CompletionStats:
      properties:
        incompleteCount:
          readOnly: true
          type: string
          format: int64
          description: 'Output only. In cases when enough errors are encountered a job, pipeline, or operation may be failed as a whole. Below is the number of entities for which the processing had not been finished (either in successful or failed state). Set to -1 if the number is unknown (for example, the operation failed before the total entity number could be collected).'
        failedCount:
          type: string
          format: int64
          readOnly: true
          description: Output only. The number of entities for which any error was encountered.
        successfulCount:
          description: Output only. The number of entities that had been processed successfully.
          format: int64
          type: string
          readOnly: true
        successfulForecastPointCount:
          type: string
          readOnly: true
          description: Output only. The number of the successful forecast points that are generated by the forecasting model. This is ONLY used by the forecasting batch prediction.
          format: int64
      type: object
      description: 'Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch.'
      id: GoogleCloudAiplatformV1CompletionStats
    GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride:
      properties:
        inputBaselines:
          items:
            type: any
          type: array
          description: 'Baseline inputs for this feature. This overrides the `input_baseline` field of the ExplanationMetadata.InputMetadata object of the corresponding feature''s input metadata. If it''s not specified, the original baselines are not overridden.'
      id: GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride
      description: The input metadata entries to be overridden.
      type: object
    GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain:
      description: 'Domain details of the input feature value. Provides numeric information about the feature, such as its range (min, max). If the feature has been pre-processed, for example with z-scoring, then it provides information about how to recover the original feature. For example, if the input feature is an image and it has been pre-processed to obtain 0-mean and stddev = 1 values, then original_mean, and original_stddev refer to the mean and stddev of the original feature (e.g. image tensor) from which input feature (with mean = 0 and stddev = 1) was obtained.'
      id: GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain
      type: object
      properties:
        originalMean:
          format: float
          type: number
          description: 'If this input feature has been normalized to a mean value of 0, the original_mean specifies the mean value of the domain prior to normalization.'
        maxValue:
          description: The maximum permissible value for this feature.
          type: number
          format: float
        minValue:
          format: float
          description: The minimum permissible value for this feature.
          type: number
        originalStddev:
          type: number
          format: float
          description: 'If this input feature has been normalized to a standard deviation of 1.0, the original_stddev specifies the standard deviation of the domain prior to normalization.'
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadata:
      description: The metadata of Datasets that contain tables data.
      type: object
      properties:
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig'
      id: GoogleCloudAiplatformV1SchemaTablesDatasetMetadata
    GoogleCloudAiplatformV1MigratableResource:
      id: GoogleCloudAiplatformV1MigratableResource
      type: object
      description: 'Represents one resource that exists in automl.googleapis.com, datalabeling.googleapis.com or ml.googleapis.com.'
      properties:
        automlModel:
          readOnly: true
          description: Output only. Represents one Model in automl.googleapis.com.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigratableResourceAutomlModel'
        lastUpdateTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when this MigratableResource was last updated.
          readOnly: true
        dataLabelingDataset:
          description: Output only. Represents one Dataset in datalabeling.googleapis.com.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset'
        automlDataset:
          readOnly: true
          description: Output only. Represents one Dataset in automl.googleapis.com.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigratableResourceAutomlDataset'
        mlEngineModelVersion:
          description: Output only. Represents one Version in ml.googleapis.com.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion'
          readOnly: true
        lastMigrateTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when the last migration attempt on this MigratableResource started. Will not be set if there's no migration attempt on this MigratableResource.
          readOnly: true
    GoogleCloudAiplatformV1ContainerSpec:
      type: object
      properties:
        command:
          type: array
          items:
            type: string
          description: The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided.
        env:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1EnvVar'
          description: Environment variables to be passed to the container. Maximum limit is 100.
          type: array
        args:
          description: The arguments to be passed when starting the container.
          items:
            type: string
          type: array
        imageUri:
          description: Required. The URI of a container image in the Container Registry that is to be run on each worker replica.
          type: string
      id: GoogleCloudAiplatformV1ContainerSpec
      description: The spec of a Container.
    GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences:
      properties:
        references:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelResourceReference'
          description: Required.
          type: object
        title:
          type: string
          description: Required. The title of the regional resource reference.
      type: object
      description: 'The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..'
      id: GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
    GoogleCloudAiplatformV1CreateIndexOperationMetadata:
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
        nearestNeighborSearchOperationMetadata:
          description: The operation metadata with regard to Matching Engine Index operation.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata'
      description: Runtime operation information for IndexService.CreateIndex.
      id: GoogleCloudAiplatformV1CreateIndexOperationMetadata
      type: object
    GoogleCloudAiplatformV1ImportFeatureValuesOperationMetadata:
      type: object
      properties:
        importedEntityCount:
          type: string
          format: int64
          description: Number of entities that have been imported by the operation.
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: Operation metadata for Featurestore import Feature values.
        importedFeatureValueCount:
          description: Number of Feature values that have been imported by the operation.
          type: string
          format: int64
        blockingOperationIds:
          items:
            type: string
            format: int64
          description: List of ImportFeatureValues operations running under a single EntityType that are blocking this operation.
          type: array
        timestampOutsideRetentionRowsCount:
          description: The number rows that weren't ingested due to having timestamps outside the retention boundary.
          format: int64
          type: string
        invalidRowCount:
          type: string
          description: The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources).
          format: int64
        sourceUris:
          description: The source URI from where Feature values are imported.
          type: array
          items:
            type: string
      id: GoogleCloudAiplatformV1ImportFeatureValuesOperationMetadata
      description: Details of operations that perform import Feature values.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics:
      description: Bounding box matching model metrics for a single intersection-over-union threshold and multiple label match confidence thresholds.
      type: object
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics
      properties:
        iouThreshold:
          description: The intersection-over-union threshold value used to compute this metrics entry.
          format: float
          type: number
        meanAveragePrecision:
          format: float
          description: 'The mean average precision, most often close to `auPrc`.'
          type: number
        confidenceMetrics:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics'
          description: 'Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them.'
          type: array
    GoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult:
      properties:
        ids:
          items:
            format: int64
            type: string
          description: The resource IDs of the AnnotationSpecs that had been identified.
          type: array
        displayNames:
          type: array
          items:
            type: string
          description: 'The display names of the AnnotationSpecs that had been identified, order matches the IDs.'
        confidences:
          items:
            type: number
            format: float
          description: 'The Model''s confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.'
          type: array
      description: Prediction output format for Image and Text Classification.
      id: GoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult
      type: object
    GoogleCloudAiplatformV1ListDataLabelingJobsResponse:
      description: Response message for JobService.ListDataLabelingJobs.
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        dataLabelingJobs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob'
          description: A list of DataLabelingJobs that matches the specified filter in the request.
      id: GoogleCloudAiplatformV1ListDataLabelingJobsResponse
    GoogleCloudAiplatformV1CopyModelResponse:
      properties:
        model:
          type: string
          description: 'The name of the copied Model resource. Format: `projects/{project}/locations/{location}/models/{model}`'
        modelVersionId:
          readOnly: true
          description: Output only. The version ID of the model that is copied.
          type: string
      id: GoogleCloudAiplatformV1CopyModelResponse
      type: object
      description: Response message of ModelService.CopyModel operation.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTables:
      properties:
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs'
        metadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata'
          description: The metadata information.
      description: A TrainingJob that trains and uploads an AutoML Tables Model.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTables
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoObjectTrackingMetrics:
      properties:
        evaluatedFrameCount:
          type: integer
          description: UNIMPLEMENTED. The number of video frames used to create this evaluation.
          format: int32
        evaluatedBoundingBoxCount:
          type: integer
          description: UNIMPLEMENTED. The total number of bounding boxes (i.e. summed over all frames) the ground truth used to create this evaluation had.
          format: int32
        boundingBoxMetrics:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics'
          description: 'The bounding boxes match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.'
        trackMeanMismatchRate:
          description: 'UNIMPLEMENTED. The single metric for tracking consistency evaluation: the `meanMismatchRate` averaged over all `trackMetrics`.'
          type: number
          format: float
        trackMetrics:
          type: array
          description: 'UNIMPLEMENTED. The tracks match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.'
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics'
        evaluatedTrackCount:
          format: int32
          description: UNIMPLEMENTED. The total number of tracks (i.e. as seen across all frames) the ground truth used to create this evaluation had.
          type: integer
        trackMeanAveragePrecision:
          type: number
          format: float
          description: 'UNIMPLEMENTED. The single metric for tracks accuracy evaluation: the `meanAveragePrecision` averaged over all `trackMetrics`.'
        trackMeanBoundingBoxIou:
          format: float
          description: 'UNIMPLEMENTED. The single metric for tracks bounding box iou evaluation: the `meanBoundingBoxIou` averaged over all `trackMetrics`.'
          type: number
        boundingBoxMeanAveragePrecision:
          type: number
          format: float
          description: 'The single metric for bounding boxes evaluation: the `meanAveragePrecision` averaged over all `boundingBoxMetrics`.'
      description: Model evaluation metrics for video object tracking problems. Evaluates prediction quality of both labeled bounding boxes and labeled tracks (i.e. series of bounding boxes sharing same label and instance ID).
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoObjectTrackingMetrics
      type: object
    GoogleCloudAiplatformV1WriteFeatureValuesResponse:
      properties: {}
      description: Response message for FeaturestoreOnlineServingService.WriteFeatureValues.
      type: object
      id: GoogleCloudAiplatformV1WriteFeatureValuesResponse
    GoogleCloudAiplatformV1ReadFeatureValuesResponse:
      description: Response message for FeaturestoreOnlineServingService.ReadFeatureValues.
      type: object
      id: GoogleCloudAiplatformV1ReadFeatureValuesResponse
      properties:
        header:
          description: Response header.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader'
        entityView:
          description: 'Entity view with Feature values. This may be the entity in the Featurestore if values for all Features were requested, or a projection of the entity in the Featurestore if values for only some Features were requested.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView'
    GoogleCloudAiplatformV1ListBatchPredictionJobsResponse:
      type: object
      id: GoogleCloudAiplatformV1ListBatchPredictionJobsResponse
      description: Response message for JobService.ListBatchPredictionJobs
      properties:
        batchPredictionJobs:
          description: List of BatchPredictionJobs in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob'
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListBatchPredictionJobsRequest.page_token to obtain that page.
          type: string
    GoogleCloudAiplatformV1UploadModelOperationMetadata:
      description: Details of ModelService.UploadModel operation.
      type: object
      id: GoogleCloudAiplatformV1UploadModelOperationMetadata
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The common part of the operation metadata.
    GoogleCloudAiplatformV1SchemaPredictParamsVideoObjectTrackingPredictionParams:
      description: Prediction model parameters for Video Object Tracking.
      type: object
      id: GoogleCloudAiplatformV1SchemaPredictParamsVideoObjectTrackingPredictionParams
      properties:
        confidenceThreshold:
          type: number
          format: float
          description: The Model only returns predictions with at least this confidence score. Default value is 0.0
        minBoundingBoxSize:
          description: Only bounding boxes with shortest edge at least that long as a relative value of video frame size are returned. Default value is 0.0.
          type: number
          format: float
        maxPredictions:
          description: 'The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50.'
          type: integer
          format: int32
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec:
      type: object
      description: Represent spec for search trials.
      id: GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec
      properties:
        maxFailedTrialCount:
          format: int32
          description: 'The number of failed trials that need to be seen before failing the NasJob. If set to 0, Vertex AI decides how many trials must fail before the whole job fails.'
          type: integer
        maxTrialCount:
          description: Required. The maximum number of Neural Architecture Search (NAS) trials to run.
          format: int32
          type: integer
        searchTrialJobSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
          description: Required. The spec of a search trial job. The same spec applies to all search trials.
        maxParallelTrialCount:
          description: Required. The maximum number of trials to run in parallel.
          type: integer
          format: int32
    GoogleCloudAiplatformV1Context:
      description: Instance of a general context.
      id: GoogleCloudAiplatformV1Context
      type: object
      properties:
        schemaVersion:
          description: The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
          type: string
        displayName:
          type: string
          description: User provided display name of the Context. May be up to 128 Unicode characters.
        etag:
          type: string
          description: 'An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        labels:
          type: object
          description: 'The labels with user-defined metadata to organize your Contexts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Context (System labels are excluded).'
          additionalProperties:
            type: string
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: Properties of the Context. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
          type: object
        createTime:
          description: Output only. Timestamp when this Context was created.
          readOnly: true
          format: google-datetime
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp when this Context was last updated.
        description:
          type: string
          description: Description of the Context
        schemaTitle:
          type: string
          description: The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
        name:
          type: string
          description: Immutable. The resource name of the Context.
        parentContexts:
          items:
            type: string
          description: Output only. A list of resource names of Contexts that are parents of this Context. A Context may have at most 10 parent_contexts.
          readOnly: true
          type: array
    GoogleCloudAiplatformV1AddTrialMeasurementRequest:
      description: Request message for VizierService.AddTrialMeasurement.
      properties:
        measurement:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Measurement'
          description: Required. The measurement to be added to a Trial.
      id: GoogleCloudAiplatformV1AddTrialMeasurementRequest
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs:
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs
    GoogleCloudAiplatformV1CreateSpecialistPoolOperationMetadata:
      type: object
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      description: Runtime operation information for SpecialistPoolService.CreateSpecialistPool.
      id: GoogleCloudAiplatformV1CreateSpecialistPoolOperationMetadata
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry:
      description: Entry for the Quantiles loss type optimization objective.
      type: object
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry
      properties:
        scaledPinballLoss:
          type: number
          description: The scaled pinball loss of this quantile.
          format: float
        observedQuantile:
          description: 'This is a custom metric that calculates the percentage of true values that were less than the predicted value for that quantile. Only populated when optimization_objective is minimize-quantile-loss and each entry corresponds to an entry in quantiles The percent value can be used to compare with the quantile value, which is the target value.'
          type: number
          format: double
        quantile:
          type: number
          format: double
          description: The quantile for this entry.
    GoogleCloudAiplatformV1BatchMigrateResourcesRequest:
      id: GoogleCloudAiplatformV1BatchMigrateResourcesRequest
      description: Request message for MigrationService.BatchMigrateResources.
      properties:
        migrateResourceRequests:
          description: Required. The request messages specifying the resources to migrate. They must be in the same location as the destination. Up to 50 resources can be migrated in one batch.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequest'
          type: array
      type: object
    GoogleCloudAiplatformV1TensorboardExperiment:
      id: GoogleCloudAiplatformV1TensorboardExperiment
      properties:
        etag:
          type: string
          description: 'Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.'
        description:
          type: string
          description: Description of this TensorboardExperiment.
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when this TensorboardExperiment was last updated.
          type: string
        name:
          readOnly: true
          type: string
          description: 'Output only. Name of the TensorboardExperiment. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`'
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'The labels with user-defined metadata to organize your TensorboardExperiment. Label keys and values cannot be longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `aiplatform.googleapis.com/` and are immutable. The following system labels exist for each Dataset: * `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value is the metadata_schema''s title.'
        createTime:
          format: google-datetime
          description: Output only. Timestamp when this TensorboardExperiment was created.
          readOnly: true
          type: string
        source:
          type: string
          description: 'Immutable. Source of the TensorboardExperiment. Example: a custom training job.'
        displayName:
          type: string
          description: User provided name of this TensorboardExperiment.
      description: 'A TensorboardExperiment is a group of TensorboardRuns, that are typically the results of a training job run, in a Tensorboard.'
      type: object
    GoogleCloudAiplatformV1UploadModelRequest:
      type: object
      id: GoogleCloudAiplatformV1UploadModelRequest
      properties:
        parentModel:
          type: string
          description: Optional. The resource name of the model into which to upload the version. Only specify this field when uploading a new version.
        model:
          description: Required. The Model to create.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
        serviceAccount:
          type: string
          description: 'Optional. The user-provided custom service account to use to do the model upload. If empty, [Vertex AI Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) will be used. Users uploading the Model must have the `iam.serviceAccounts.actAs` permission on this service account. Also, this account must belong to the project specified in the `parent` field and have all necessary read permissions.'
        modelId:
          type: string
          description: 'Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.'
      description: Request message for ModelService.UploadModel.
    GoogleCloudAiplatformV1CsvSource:
      type: object
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
          description: Required. Google Cloud Storage location.
      description: The storage details for CSV input content.
      id: GoogleCloudAiplatformV1CsvSource
    GoogleCloudAiplatformV1Scheduling:
      description: All parameters related to queuing and scheduling of custom jobs.
      type: object
      properties:
        timeout:
          description: The maximum job running time. The default is 7 days.
          type: string
          format: google-duration
        restartJobOnWorkerRestart:
          description: Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.
          type: boolean
      id: GoogleCloudAiplatformV1Scheduling
    GoogleCloudAiplatformV1Neighbor:
      description: Neighbors for example-based explanations.
      properties:
        neighborId:
          type: string
          description: Output only. The neighbor id.
          readOnly: true
        neighborDistance:
          readOnly: true
          description: Output only. The neighbor distance.
          format: double
          type: number
      id: GoogleCloudAiplatformV1Neighbor
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToAction:
      properties:
        openGenerationAiStudio:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences'
          description: Optional. Open in Generation AI Studio.
        viewRestApi:
          description: Optional. To view Rest API docs.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi'
        openFineTuningPipeline:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences'
          description: Optional. Open fine-tuning pipeline of the PublisherModel.
        createApplication:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences'
          description: Optional. Create application using the PublisherModel.
        openGenie:
          description: Optional. Open Genie / Playground.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences'
        deploy:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionDeploy'
          description: Optional. Deploy the PublisherModel to Vertex Endpoint.
        openNotebook:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences'
          description: Optional. Open notebook of the PublisherModel.
        openPromptTuningPipeline:
          description: Optional. Open prompt-tuning pipeline of the PublisherModel.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences'
        requestAccess:
          description: Optional. Request for access.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences'
      description: Actions could take on this Publisher Model.
      id: GoogleCloudAiplatformV1PublisherModelCallToAction
      type: object
    GoogleCloudAiplatformV1StreamingPredictRequest:
      properties:
        inputs:
          description: The prediction input.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          type: array
        parameters:
          description: The parameters that govern the prediction.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
      id: GoogleCloudAiplatformV1StreamingPredictRequest
      description: Request message for PredictionService.StreamingPredict. The first message must contain endpoint field and optionally input. The subsequent messages must contain input.
      type: object
    GoogleCloudAiplatformV1RawPredictRequest:
      type: object
      description: Request message for PredictionService.RawPredict.
      id: GoogleCloudAiplatformV1RawPredictRequest
      properties:
        httpBody:
          $ref: '#/components/schemas/GoogleApiHttpBody'
          description: 'The prediction input. Supports HTTP headers and arbitrary data payload. A DeployedModel may have an upper limit on the number of instances it supports per request. When this limit it is exceeded for an AutoML model, the RawPredict method returns an error. When this limit is exceeded for a custom-trained model, the behavior varies depending on the model. You can specify the schema for each instance in the predict_schemata.instance_schema_uri field when you create a Model. This schema applies when you deploy the `Model` as a `DeployedModel` to an Endpoint and use the `RawPredict` method.'
    GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig:
      description: Configuration for logging request-response to a BigQuery table.
      properties:
        bigqueryDestination:
          description: 'BigQuery table for logging. If only given a project, a new dataset will be created with name `logging__` where will be made BigQuery-dataset-name compatible (e.g. most special characters will become underscores). If no table name is given, a new table will be created with name `request_response_logging`'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination'
        samplingRate:
          format: double
          description: 'Percentage of requests to be logged, expressed as a fraction in range(0,1].'
          type: number
        enabled:
          description: If logging is enabled or not.
          type: boolean
      type: object
      id: GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig
    GoogleCloudAiplatformV1DiskSpec:
      type: object
      properties:
        bootDiskType:
          type: string
          description: 'Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk Drive).'
        bootDiskSizeGb:
          format: int32
          description: Size in GB of the boot disk (default is 100GB).
          type: integer
      id: GoogleCloudAiplatformV1DiskSpec
      description: Represents the spec of disk options.
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig:
      id: GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig
      type: object
      properties:
        modelDisplayName:
          type: string
          description: Optional. Display name of the model in Vertex AI. System will pick a display name if unspecified.
        model:
          description: 'Required. Full resource name of automl Model. Format: `projects/{project}/locations/{location}/models/{model}`.'
          type: string
      description: Config for migrating Model in automl.googleapis.com to Vertex AI's Model.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation
      properties:
        columnName:
          type: string
      description: 'Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.'
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset:
      id: GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset
      description: Training Dataset information.
      properties:
        loggingSamplingStrategy:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SamplingStrategy'
          description: 'Strategy to sample data from Training Dataset. If not set, we process the whole dataset.'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
          description: The Google Cloud Storage uri of the unmanaged Dataset used to train this Model.
        dataFormat:
          description: 'Data format of the dataset, only applicable if the input is from Google Cloud Storage. The possible formats are: "tf-record" The source file is a TFRecord file. "csv" The source file is a CSV file. "jsonl" The source file is a JSONL file.'
          type: string
        bigquerySource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQuerySource'
          description: The BigQuery table of the unmanaged Dataset used to train this Model.
        dataset:
          description: The resource name of the Dataset used to train this Model.
          type: string
        targetField:
          description: The target field name the model is to predict. This field will be excluded when doing Predict and (or) Explain for the training data.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomTask:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomTask
      description: A TrainingJob that trains a custom code Model.
      properties:
        metadata:
          description: The metadata information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata'
        inputs:
          description: The input parameters of this CustomTask.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec'
    GoogleCloudAiplatformV1UpdateExplanationDatasetRequest:
      properties:
        examples:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Examples'
          description: The example config containing the location of the dataset.
      id: GoogleCloudAiplatformV1UpdateExplanationDatasetRequest
      type: object
      description: Request message for ModelService.UpdateExplanationDataset.
    GoogleCloudAiplatformV1DeleteOperationMetadata:
      id: GoogleCloudAiplatformV1DeleteOperationMetadata
      description: Details of operations that perform deletes of any entities.
      properties:
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      type: object
    GoogleCloudAiplatformV1CreateIndexEndpointOperationMetadata:
      description: Runtime operation information for IndexEndpointService.CreateIndexEndpoint.
      type: object
      properties:
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1CreateIndexEndpointOperationMetadata
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation:
      properties:
        text:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation'
        auto:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation'
        timestamp:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation'
        numeric:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation'
        categorical:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation'
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation
      type: object
    GoogleCloudAiplatformV1SchemaVisualInspectionClassificationLabelSavedQueryMetadata:
      properties:
        multiLabel:
          description: Whether or not the classification label is multi_label.
          type: boolean
      id: GoogleCloudAiplatformV1SchemaVisualInspectionClassificationLabelSavedQueryMetadata
      type: object
    GoogleCloudAiplatformV1DeployedModel:
      description: A deployment of a Model. Endpoints contain one or more DeployedModels.
      type: object
      id: GoogleCloudAiplatformV1DeployedModel
      properties:
        serviceAccount:
          description: 'The service account that the DeployedModel''s container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn''t have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.'
          type: string
        dedicatedResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DedicatedResources'
          description: 'A description of resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.'
        createTime:
          description: Output only. Timestamp when the DeployedModel was created.
          type: string
          format: google-datetime
          readOnly: true
        automaticResources:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1AutomaticResources'
          description: 'A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration.'
        displayName:
          description: 'The display name of the DeployedModel. If not provided upon creation, the Model''s display_name is used.'
          type: string
        modelVersionId:
          description: Output only. The version ID of the model that is deployed.
          type: string
          readOnly: true
        privateEndpoints:
          description: Output only. Provide paths for users to send predict/explain/health requests directly to the deployed model services running on Cloud via private services access. This field is populated if network is configured.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PrivateEndpoints'
          readOnly: true
        enableAccessLogging:
          description: 'If true, online prediction access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.'
          type: boolean
        disableContainerLogging:
          description: 'For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.'
          type: boolean
        explanationSpec:
          description: 'Explanation configuration for this DeployedModel. When deploying a Model using EndpointService.DeployModel, this value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of explanation_spec is not populated, the value of the same field of Model.explanation_spec is inherited. If the corresponding Model.explanation_spec is not populated, all fields of the explanation_spec will be used for the explanation configuration.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec'
        id:
          type: string
          description: 'Immutable. The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are /[0-9]/.'
        model:
          type: string
          description: 'Required. The resource name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel''s Endpoint. The resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed.'
    GoogleCloudAiplatformV1RemoveContextChildrenResponse:
      description: Response message for MetadataService.RemoveContextChildren.
      id: GoogleCloudAiplatformV1RemoveContextChildrenResponse
      properties: {}
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs
      properties:
        multiLabel:
          type: boolean
      type: object
    GoogleCloudAiplatformV1ExplanationMetadataInputMetadata:
      properties:
        modality:
          type: string
          description: 'Modality of the feature. Valid values are: numeric, image. Defaults to numeric.'
        denseShapeTensorName:
          type: string
          description: 'Specifies the shape of the values of the input if the input is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.'
        indicesTensorName:
          description: 'Specifies the index of the values of the input tensor. Required when the input tensor is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.'
          type: string
        encodedBaselines:
          items:
            type: any
          description: 'A list of baselines for the encoded tensor. The shape of each baseline should match the shape of the encoded tensor. If a scalar is provided, Vertex AI broadcasts to the same shape as the encoded tensor.'
          type: array
        encodedTensorName:
          description: Encoded tensor is a transformation of the input tensor. Must be provided if choosing Integrated Gradients attribution or XRAI attribution and the input tensor is not differentiable. An encoded tensor is generated if the input tensor is encoded by a lookup table.
          type: string
        inputBaselines:
          description: 'Baseline inputs for this feature. If no baseline is specified, Vertex AI chooses the baseline for this feature. If multiple baselines are specified, Vertex AI returns the average attributions across them in Attribution.feature_attributions. For Vertex AI-provided Tensorflow images (both 1.x and 2.x), the shape of each baseline must match the shape of the input tensor. If a scalar is provided, we broadcast to the same shape as the input tensor. For custom images, the element of the baselines must be in the same format as the feature''s input in the instance[]. The schema of any single instance may be specified via Endpoint''s DeployedModels'' Model''s PredictSchemata''s instance_schema_uri.'
          type: array
          items:
            type: any
        groupName:
          type: string
          description: 'Name of the group that the input belongs to. Features with the same group name will be treated as one feature when computing attributions. Features grouped together can have different shapes in value. If provided, there will be one single attribution generated in Attribution.feature_attributions, keyed by the group name.'
        visualization:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization'
          description: Visualization configurations for image explanation.
        inputTensorName:
          type: string
          description: Name of the input tensor for this feature. Required and is only applicable to Vertex AI-provided images for Tensorflow.
        indexFeatureMapping:
          type: array
          description: 'A list of feature names for each index in the input tensor. Required when the input InputMetadata.encoding is BAG_OF_FEATURES, BAG_OF_FEATURES_SPARSE, INDICATOR.'
          items:
            type: string
        featureValueDomain:
          description: 'The domain details of the input feature value. Like min/max, original mean or standard deviation if normalized.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain'
        encoding:
          enumDescriptions:
            - Default value. This is the same as IDENTITY.
            - The tensor represents one feature.
            - 'The tensor represents a bag of features where each index maps to a feature. InputMetadata.index_feature_mapping must be provided for this encoding. For example: ``` input = [27, 6.0, 150] index_feature_mapping = ["age", "height", "weight"] ```'
            - 'The tensor represents a bag of features where each index maps to a feature. Zero values in the tensor indicates feature being non-existent. InputMetadata.index_feature_mapping must be provided for this encoding. For example: ``` input = [2, 0, 5, 0, 1] index_feature_mapping = ["a", "b", "c", "d", "e"] ```'
            - 'The tensor is a list of binaries representing whether a feature exists or not (1 indicates existence). InputMetadata.index_feature_mapping must be provided for this encoding. For example: ``` input = [1, 0, 1, 0, 1] index_feature_mapping = ["a", "b", "c", "d", "e"] ```'
            - 'The tensor is encoded into a 1-dimensional array represented by an encoded tensor. InputMetadata.encoded_tensor_name must be provided for this encoding. For example: ``` input = ["This", "is", "a", "test", "."] encoded = [0.1, 0.2, 0.3, 0.4, 0.5] ```'
            - 'Select this encoding when the input tensor is encoded into a 2-dimensional array represented by an encoded tensor. InputMetadata.encoded_tensor_name must be provided for this encoding. The first dimension of the encoded tensor''s shape is the same as the input tensor''s shape. For example: ``` input = ["This", "is", "a", "test", "."] encoded = [[0.1, 0.2, 0.3, 0.4, 0.5], [0.2, 0.1, 0.4, 0.3, 0.5], [0.5, 0.1, 0.3, 0.5, 0.4], [0.5, 0.3, 0.1, 0.2, 0.4], [0.4, 0.3, 0.2, 0.5, 0.1]] ```'
          description: Defines how the feature is encoded into the input tensor. Defaults to IDENTITY.
          enum:
            - ENCODING_UNSPECIFIED
            - IDENTITY
            - BAG_OF_FEATURES
            - BAG_OF_FEATURES_SPARSE
            - INDICATOR
            - COMBINED_EMBEDDING
            - CONCAT_EMBEDDING
          type: string
      id: GoogleCloudAiplatformV1ExplanationMetadataInputMetadata
      description: Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow.
      type: object
    GoogleCloudAiplatformV1LookupStudyRequest:
      type: object
      properties:
        displayName:
          description: Required. The user-defined display name of the Study
          type: string
      id: GoogleCloudAiplatformV1LookupStudyRequest
      description: Request message for VizierService.LookupStudy.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecasting:
      properties:
        inputs:
          description: The input parameters of this TrainingJob.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs'
        metadata:
          description: The metadata information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata'
      type: object
      description: A TrainingJob that trains and uploads an AutoML Forecasting Model.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecasting
    GoogleCloudAiplatformV1FindNeighborsRequest:
      id: GoogleCloudAiplatformV1FindNeighborsRequest
      properties:
        returnFullDatapoint:
          type: boolean
          description: 'If set to true, the full datapoints (including all vector values and restricts) of the nearest neighbors are returned. Note that returning full datapoint will significantly increase the latency and cost of the query.'
        queries:
          description: The list of queries.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FindNeighborsRequestQuery'
          type: array
        deployedIndexId:
          description: 'The ID of the DeployedIndex that will serve the request. This request is sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index has a DeployedIndex.id field. The value of the field below must equal one of the DeployedIndex.id fields of the IndexEndpoint that is being called for this request.'
          type: string
      type: object
      description: The request message for MatchService.FindNeighbors.
    GoogleCloudAiplatformV1StudySpecParameterSpec:
      description: Represents a single parameter to optimize.
      id: GoogleCloudAiplatformV1StudySpecParameterSpec
      type: object
      properties:
        scaleType:
          type: string
          description: How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters.
          enum:
            - SCALE_TYPE_UNSPECIFIED
            - UNIT_LINEAR_SCALE
            - UNIT_LOG_SCALE
            - UNIT_REVERSE_LOG_SCALE
          enumDescriptions:
            - 'By default, no scaling is applied.'
            - 'Scales the feasible space to (0, 1) linearly.'
            - 'Scales the feasible space logarithmically to (0, 1). The entire feasible space must be strictly positive.'
            - 'Scales the feasible space "reverse" logarithmically to (0, 1). The result is that values close to the top of the feasible space are spread out more than points near the bottom. The entire feasible space must be strictly positive.'
        conditionalParameterSpecs:
          description: 'A conditional parameter node is active if the parameter''s value matches the conditional node''s parent_value_condition. If two items in conditional_parameter_specs have the same name, they must have disjoint parent_value_condition.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec'
        doubleValueSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec'
          description: The value spec for a 'DOUBLE' parameter.
        parameterId:
          description: Required. The ID of the parameter. Must not contain whitespaces and must be unique amongst all ParameterSpecs.
          type: string
        categoricalValueSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec'
          description: The value spec for a 'CATEGORICAL' parameter.
        discreteValueSpec:
          description: The value spec for a 'DISCRETE' parameter.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec'
        integerValueSpec:
          description: The value spec for an 'INTEGER' parameter.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec'
    GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult:
      description: Prediction output format for Text Sentiment
      id: GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult
      type: object
      properties:
        sentiment:
          format: int32
          type: integer
          description: 'The integer sentiment labels between 0 (inclusive) and sentimentMax label (inclusive), while 0 maps to the least positive sentiment and sentimentMax maps to the most positive one. The higher the score is, the more positive the sentiment in the text snippet is. Note: sentimentMax is an integer value between 1 (inclusive) and 10 (inclusive).'
    GoogleCloudAiplatformV1StreamingPredictResponse:
      description: Response message for PredictionService.StreamingPredict.
      properties:
        parameters:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          description: The parameters that govern the prediction.
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensor'
          description: The prediction output.
      type: object
      id: GoogleCloudAiplatformV1StreamingPredictResponse
    GoogleCloudAiplatformV1DedicatedResources:
      id: GoogleCloudAiplatformV1DedicatedResources
      type: object
      properties:
        maxReplicaCount:
          format: int32
          description: 'Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, will use min_replica_count as the default value. The value of this field impacts the charge against Vertex CPU and GPU quotas. Specifically, you will be charged for (max_replica_count * number of cores in the selected machine type) and (max_replica_count * number of GPUs per replica in the selected machine type).'
          type: integer
        machineSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MachineSpec'
          description: Required. Immutable. The specification of a single machine used by the prediction.
        minReplicaCount:
          type: integer
          format: int32
          description: 'Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1. If traffic against the DeployedModel increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed.'
        autoscalingMetricSpecs:
          type: array
          description: 'Immutable. The metric specifications that overrides a resource utilization metric (CPU utilization, accelerator''s duty cycle, and so on) target value (default to 60 if not set). At most one entry is allowed per metric. If machine_spec.accelerator_count is above 0, the autoscaling will be based on both CPU utilization and accelerator''s duty cycle metrics and scale up when either metrics exceeds its target value while scale down if both metrics are under their target value. The default target value is 60 for both metrics. If machine_spec.accelerator_count is 0, the autoscaling will be based on CPU utilization metric only with default target value 60 if not explicitly set. For example, in the case of Online Prediction, if you want to override target CPU utilization to 80, you should set autoscaling_metric_specs.metric_name to `aiplatform.googleapis.com/prediction/online/cpu/utilization` and autoscaling_metric_specs.target to `80`.'
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1AutoscalingMetricSpec'
      description: 'A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.'
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfig:
      properties:
        snapshotAnalysis:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis'
          description: The config for Snapshot Analysis Based Feature Monitoring.
        categoricalThresholdConfig:
          description: Threshold for categorical features of anomaly detection. This is shared by all types of Featurestore Monitoring for categorical features (i.e. Features with type (Feature.ValueType) BOOL or STRING).
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig'
        importFeaturesAnalysis:
          description: The config for ImportFeatures Analysis Based Feature Monitoring.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis'
        numericalThresholdConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig'
          description: Threshold for numerical features of anomaly detection. This is shared by all objectives of Featurestore Monitoring for numerical features (i.e. Features with type (Feature.ValueType) DOUBLE or INT64).
      description: Configuration of how features in Featurestore are monitored.
      type: object
      id: GoogleCloudAiplatformV1FeaturestoreMonitoringConfig
    GoogleCloudAiplatformV1AddContextChildrenResponse:
      description: Response message for MetadataService.AddContextChildren.
      type: object
      properties: {}
      id: GoogleCloudAiplatformV1AddContextChildrenResponse
    GoogleCloudAiplatformV1SuggestTrialsRequest:
      properties:
        suggestionCount:
          description: Required. The number of suggestions requested. It must be positive.
          type: integer
          format: int32
        clientId:
          type: string
          description: 'Required. The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed.'
      type: object
      description: Request message for VizierService.SuggestTrials.
      id: GoogleCloudAiplatformV1SuggestTrialsRequest
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix:
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
      properties:
        rows:
          type: array
          items:
            items:
              type: any
            type: array
          description: 'Rows in the confusion matrix. The number of rows is equal to the size of `annotationSpecs`. `rowsi` is the number of DataItems that have ground truth of the `annotationSpecs[i]` and are predicted as `annotationSpecs[j]` by the Model being evaluated. For Text Extraction, when `annotationSpecs[i]` is the last element in `annotationSpecs`, i.e. the special negative AnnotationSpec, `rowsi` is the number of predicted entities of `annoatationSpec[j]` that are not labeled as any of the ground truth AnnotationSpec. When annotationSpecs[j] is the special negative AnnotationSpec, `rowsi` is the number of entities have ground truth of `annotationSpec[i]` that are not predicted as an entity by the Model. The value of the last cell, i.e. `rowi` where i == j and `annotationSpec[i]` is the special negative AnnotationSpec, is always 0.'
        annotationSpecs:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef'
          type: array
          description: 'AnnotationSpecs used in the confusion matrix. For AutoML Text Extraction, a special negative AnnotationSpec with empty `id` and `displayName` of "NULL" will be added as the last element.'
      type: object
    GoogleCloudAiplatformV1SchemaTextClassificationAnnotation:
      properties:
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        annotationSpecId:
          type: string
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
      description: Annotation details specific to text classification.
      type: object
      id: GoogleCloudAiplatformV1SchemaTextClassificationAnnotation
    GoogleCloudAiplatformV1TimeSeriesDataPoint:
      type: object
      id: GoogleCloudAiplatformV1TimeSeriesDataPoint
      properties:
        tensor:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTensor'
          description: A tensor value.
        blobs:
          description: A blob sequence value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardBlobSequence'
        wallTime:
          type: string
          format: google-datetime
          description: Wall clock timestamp when this data point is generated by the end user.
        step:
          description: Step index of this data point within the run.
          format: int64
          type: string
        scalar:
          description: A scalar value.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Scalar'
      description: A TensorboardTimeSeries data point.
    GoogleCloudAiplatformV1DeployedIndexAuthConfig:
      type: object
      properties:
        authProvider:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider'
          description: Defines the authentication provider that the DeployedIndex uses.
      description: Used to set up the auth on the DeployedIndex's private endpoint.
      id: GoogleCloudAiplatformV1DeployedIndexAuthConfig
    GoogleCloudAiplatformV1TrainingPipeline:
      description: 'The TrainingPipeline orchestrates tasks associated with training a Model. It always executes the training task, and optionally may also export data from Vertex AI''s Dataset which becomes the training input, upload the Model to Vertex AI, and evaluate the Model.'
      id: GoogleCloudAiplatformV1TrainingPipeline
      type: object
      properties:
        trainingTaskInputs:
          type: any
          description: 'Required. The training task''s parameter(s), as specified in the training_task_definition''s `inputs`.'
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Time when the TrainingPipeline was created.
        updateTime:
          type: string
          description: Output only. Time when the TrainingPipeline was most recently updated.
          format: google-datetime
          readOnly: true
        modelId:
          description: 'Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.'
          type: string
        trainingTaskMetadata:
          type: any
          description: Output only. The metadata information as specified in the training_task_definition's `metadata`. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline's training_task_definition contains `metadata` object.
          readOnly: true
        parentModel:
          description: 'Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model, instead, it will become a new version of this `parent_model`.'
          type: string
        state:
          type: string
          readOnly: true
          enumDescriptions:
            - The pipeline state is unspecified.
            - 'The pipeline has been created or resumed, and processing has not yet begun.'
            - The service is preparing to run the pipeline.
            - The pipeline is in progress.
            - The pipeline completed successfully.
            - The pipeline failed.
            - 'The pipeline is being cancelled. From this state, the pipeline may only go to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED or PIPELINE_STATE_CANCELLED.'
            - The pipeline has been cancelled.
            - 'The pipeline has been stopped, and can be resumed.'
          enum:
            - PIPELINE_STATE_UNSPECIFIED
            - PIPELINE_STATE_QUEUED
            - PIPELINE_STATE_PENDING
            - PIPELINE_STATE_RUNNING
            - PIPELINE_STATE_SUCCEEDED
            - PIPELINE_STATE_FAILED
            - PIPELINE_STATE_CANCELLING
            - PIPELINE_STATE_CANCELLED
            - PIPELINE_STATE_PAUSED
          description: Output only. The detailed state of the pipeline.
        error:
          description: Output only. Only populated when the pipeline's state is `PIPELINE_STATE_FAILED` or `PIPELINE_STATE_CANCELLED`.
          $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        inputDataConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1InputDataConfig'
          description: 'Specifies Vertex AI owned input data that may be used for training the Model. The TrainingPipeline''s training_task_definition should make clear whether this config is used and if there are any special requirements on how it should be filled. If nothing about this config is mentioned in the training_task_definition, then it should be assumed that the TrainingPipeline does not depend on this configuration.'
        modelToUpload:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
          description: 'Describes the Model that may be uploaded (via ModelService.UploadModel) by this TrainingPipeline. The TrainingPipeline''s training_task_definition should make clear whether this Model description should be populated, and if there are any special requirements regarding how it should be filled. If nothing is mentioned in the training_task_definition, then it should be assumed that this field should not be filled and the training task either uploads the Model without a need of this information, or that training task does not support uploading a Model as part of the pipeline. When the Pipeline''s state becomes `PIPELINE_STATE_SUCCEEDED` and the trained Model had been uploaded into Vertex AI, then the model_to_upload''s resource name is populated. The Model is always uploaded into the Project and Location in which this pipeline is.'
        endTime:
          readOnly: true
          format: google-datetime
          description: 'Output only. Time when the TrainingPipeline entered any of the following states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.'
          type: string
        name:
          description: Output only. Resource name of the TrainingPipeline.
          type: string
          readOnly: true
        trainingTaskDefinition:
          description: 'Required. A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.'
          type: string
        labels:
          description: 'The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
          type: object
          additionalProperties:
            type: string
        startTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time when the TrainingPipeline for the first time entered the `PIPELINE_STATE_RUNNING` state.
        encryptionSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
          description: 'Customer-managed encryption key spec for a TrainingPipeline. If set, this TrainingPipeline will be secured by this key. Note: Model trained by this TrainingPipeline is also secured by this key if model_to_upload is not set separately.'
        displayName:
          description: Required. The user-defined name of this TrainingPipeline.
          type: string
    GoogleCloudAiplatformV1LargeModelReference:
      id: GoogleCloudAiplatformV1LargeModelReference
      description: Contains information about the Large Model.
      properties:
        name:
          type: string
          description: 'Required. The unique name of the large Foundation or pre-built model. Like "chat-bison", "text-bison". Or model name with version ID, like "chat-bison@001", "text-bison@005", etc.'
      type: object
    GoogleCloudAiplatformV1DeployIndexOperationMetadata:
      type: object
      description: Runtime operation information for IndexEndpointService.DeployIndex.
      properties:
        deployedIndexId:
          description: The unique index id specified by user
          type: string
        genericMetadata:
          description: The operation generic information.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      id: GoogleCloudAiplatformV1DeployIndexOperationMetadata
    GoogleCloudAiplatformV1DeployModelResponse:
      id: GoogleCloudAiplatformV1DeployModelResponse
      type: object
      properties:
        deployedModel:
          description: The DeployedModel that had been deployed in the Endpoint.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedModel'
      description: Response message for EndpointService.DeployModel.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata:
      description: Model metadata specific to Seq2Seq Plus Forecasting.
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata
      properties:
        evaluatedDataItemsBigqueryUri:
          description: BigQuery destination uri for exported evaluated examples.
          type: string
        trainCostMilliNodeHours:
          type: string
          description: 'Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.'
          format: int64
      type: object
    GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest:
      type: object
      properties:
        executions:
          description: 'The resource names of the Executions to associate with the Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`'
          type: array
          items:
            type: string
        artifacts:
          type: array
          description: 'The resource names of the Artifacts to attribute to the Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`'
          items:
            type: string
      description: Request message for MetadataService.AddContextArtifactsAndExecutions.
      id: GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation:
      type: object
      description: 'Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.'
      properties:
        columnName:
          type: string
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation
    GoogleCloudAiplatformV1SchemaPredictPredictionTabularRegressionPredictionResult:
      description: Prediction output format for Tabular Regression.
      type: object
      id: GoogleCloudAiplatformV1SchemaPredictPredictionTabularRegressionPredictionResult
      properties:
        upperBound:
          description: The upper bound of the prediction interval.
          format: float
          type: number
        lowerBound:
          format: float
          type: number
          description: The lower bound of the prediction interval.
        value:
          description: The regression value.
          type: number
          format: float
        quantilePredictions:
          type: array
          items:
            format: float
            type: number
          description: 'Quantile predictions, in 1-1 correspondence with quantile_values.'
        quantileValues:
          description: Quantile values.
          items:
            type: number
            format: float
          type: array
    GoogleCloudAiplatformV1ExplanationSpecOverride:
      properties:
        parameters:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationParameters'
          description: 'The parameters to be overridden. Note that the attribution method cannot be changed. If not specified, no parameter is overridden.'
        metadata:
          description: 'The metadata to be overridden. If not specified, no metadata is overridden.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataOverride'
        examplesOverride:
          description: The example-based explanations parameter overrides.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExamplesOverride'
      id: GoogleCloudAiplatformV1ExplanationSpecOverride
      type: object
      description: The ExplanationSpec entries that can be overridden at online explanation time.
    GoogleCloudAiplatformV1DestinationFeatureSetting:
      properties:
        destinationField:
          type: string
          description: 'Specify the field name in the export destination. If not specified, Feature ID is used.'
        featureId:
          description: Required. The ID of the Feature to apply the setting to.
          type: string
      id: GoogleCloudAiplatformV1DestinationFeatureSetting
      type: object
    GoogleCloudAiplatformV1PredictSchemata:
      description: 'Contains the schemata used in Model''s predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.'
      properties:
        predictionSchemaUri:
          description: 'Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single prediction produced by this Model, which are returned via PredictResponse.predictions, ExplainResponse.explanations, and BatchPredictionJob.output_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.'
          type: string
        instanceSchemaUri:
          description: 'Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single instance, which are used in PredictRequest.instances, ExplainRequest.instances and BatchPredictionJob.input_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.'
          type: string
        parametersSchemaUri:
          description: 'Immutable. Points to a YAML file stored on Google Cloud Storage describing the parameters of prediction and explanation via PredictRequest.parameters, ExplainRequest.parameters and BatchPredictionJob.model_parameters. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no parameters are supported, then it is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.'
          type: string
      id: GoogleCloudAiplatformV1PredictSchemata
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation:
      type: object
      properties:
        columnName:
          type: string
      description: 'Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.'
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation
    GoogleCloudAiplatformV1InputDataConfig:
      description: 'Specifies Vertex AI owned input data to be used for training, and possibly evaluating, the Model.'
      id: GoogleCloudAiplatformV1InputDataConfig
      type: object
      properties:
        datasetId:
          description: 'Required. The ID of the Dataset in the same Project and Location which data will be used to train the Model. The Dataset must use schema compatible with Model being trained, and what is compatible should be described in the used TrainingPipeline''s training_task_definition. For tabular Datasets, all their data is exported to training, to pick and choose from.'
          type: string
        bigqueryDestination:
          description: 'Only applicable to custom training with tabular Dataset with BigQuery source. The BigQuery project location where the training data is to be written to. In the given project a new dataset is created with name `dataset___` where timestamp is in YYYY_MM_DDThh_mm_ss_sssZ format. All training input data is written into that dataset. In the dataset three tables are created, `training`, `validation` and `test`. * AIP_DATA_FORMAT = "bigquery". * AIP_TRAINING_DATA_URI = "bigquery_destination.dataset___.training" * AIP_VALIDATION_DATA_URI = "bigquery_destination.dataset___.validation" * AIP_TEST_DATA_URI = "bigquery_destination.dataset___.test"'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination'
        filterSplit:
          description: Split based on the provided filters for each set.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FilterSplit'
        stratifiedSplit:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StratifiedSplit'
          description: Supported only for tabular Datasets. Split based on the distribution of the specified column.
        savedQueryId:
          description: 'Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (annotation set) under the Dataset specified by dataset_id used for filtering Annotations for training. Only Annotations that are associated with this SavedQuery are used in respectively training. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both saved_query_id and annotations_filter. Only one of saved_query_id and annotation_schema_uri should be specified as both of them represent the same thing: problem type.'
          type: string
        predefinedSplit:
          description: Supported only for tabular Datasets. Split based on a predefined key.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PredefinedSplit'
        annotationsFilter:
          type: string
          description: 'Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on (for the auto-assigned that role is decided by Vertex AI). A filter with same syntax as the one used in ListAnnotations may be used, but note here it filters across all Annotations of the Dataset, and not just within a single DataItem.'
        fractionSplit:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FractionSplit'
          description: Split based on fractions defining the size of each set.
        persistMlUseAssignment:
          description: Whether to persist the ML use assignment to data item system labels.
          type: boolean
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
          description: 'The Cloud Storage location where the training data is to be written to. In the given directory a new directory is created with name: `dataset---` where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. All training input data is written into that directory. The Vertex AI environment variables representing Cloud Storage data URIs are represented in the Cloud Storage wildcard format to support sharded data. e.g.: "gs://.../training-*.jsonl" * AIP_DATA_FORMAT = "jsonl" for non-tabular data, "csv" for tabular data * AIP_TRAINING_DATA_URI = "gcs_destination/dataset---/training-*.${AIP_DATA_FORMAT}" * AIP_VALIDATION_DATA_URI = "gcs_destination/dataset---/validation-*.${AIP_DATA_FORMAT}" * AIP_TEST_DATA_URI = "gcs_destination/dataset---/test-*.${AIP_DATA_FORMAT}"'
        timestampSplit:
          description: Supported only for tabular Datasets. Split based on the timestamp of the input data pieces.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TimestampSplit'
        annotationSchemaUri:
          description: 'Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri.'
          type: string
    GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly:
      type: object
      description: 'A list of historical SnapshotAnalysis or ImportFeaturesAnalysis stats requested by user, sorted by FeatureStatsAnomaly.start_time descending.'
      properties:
        objective:
          type: string
          description: Output only. The objective for each stats.
          enumDescriptions:
            - 'If it''s OBJECTIVE_UNSPECIFIED, monitoring_stats will be empty.'
            - Stats are generated by Import Feature Analysis.
            - Stats are generated by Snapshot Analysis.
          readOnly: true
          enum:
            - OBJECTIVE_UNSPECIFIED
            - IMPORT_FEATURE_ANALYSIS
            - SNAPSHOT_ANALYSIS
        featureStatsAnomaly:
          readOnly: true
          description: Output only. The stats and anomalies generated at specific timestamp.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureStatsAnomaly'
      id: GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly
    GoogleCloudAiplatformV1FindNeighborsRequestQuery:
      properties:
        neighborCount:
          type: integer
          description: 'The number of nearest neighbors to be retrieved from database for each query. If not set, will use the default from the service configuration (https://cloud.google.com/vertex-ai/docs/matching-engine/configuring-indexes#nearest-neighbor-search-config).'
          format: int32
        fractionLeafNodesToSearchOverride:
          type: number
          format: double
          description: 'The fraction of the number of leaves to search, set at query time allows user to tune search performance. This value increase result in both search accuracy and latency increase. The value should be between 0.0 and 1.0. If not set or set to 0.0, query uses the default value specified in NearestNeighborSearchConfig.TreeAHConfig.fraction_leaf_nodes_to_search.'
        approximateNeighborCount:
          type: integer
          format: int32
          description: 'The number of neighbors to find via approximate search before exact reordering is performed. If not set, the default value from scam config is used; if set, this value must be > 0.'
        datapoint:
          description: Required. The datapoint/vector whose nearest neighbors should be searched for.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint'
        perCrowdingAttributeNeighborCount:
          description: Crowding is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. It's used for improving result diversity. This field is the maximum number of matches with the same crowding tag.
          format: int32
          type: integer
      description: A query to find a number of the nearest neighbors (most similar vectors) of a vector.
      type: object
      id: GoogleCloudAiplatformV1FindNeighborsRequestQuery
    GoogleCloudAiplatformV1CreateDatasetVersionOperationMetadata:
      id: GoogleCloudAiplatformV1CreateDatasetVersionOperationMetadata
      type: object
      description: Runtime operation information for DatasetService.CreateDatasetVersion.
      properties:
        genericMetadata:
          description: The common part of the operation metadata.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
    GoogleCloudAiplatformV1PauseScheduleRequest:
      properties: {}
      type: object
      id: GoogleCloudAiplatformV1PauseScheduleRequest
      description: Request message for ScheduleService.PauseSchedule.
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics:
      id: GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics
      properties:
        rSquared:
          description: Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.
          type: number
          format: float
        rootMeanSquaredError:
          format: float
          type: number
          description: Root Mean Squared Error (RMSE).
        rootMeanSquaredLogError:
          format: float
          description: Root mean squared log error. Undefined when there are negative ground truth values or predictions.
          type: number
        meanAbsoluteError:
          type: number
          description: Mean Absolute Error (MAE).
          format: float
        meanAbsolutePercentageError:
          type: number
          format: float
          description: Mean absolute percentage error. Infinity when there are zeros in the ground truth.
      type: object
      description: Metrics for regression evaluation results.
    GoogleCloudAiplatformV1ModelMonitoringAlertConfig:
      type: object
      properties:
        emailAlertConfig:
          description: Email alert config.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig'
        enableLogging:
          description: Dump the anomalies to Cloud Logging. The anomalies will be put to json payload encoded from proto google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry. This can be further sinked to Pub/Sub or any other services supported by Cloud Logging.
          type: boolean
      id: GoogleCloudAiplatformV1ModelMonitoringAlertConfig
    GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport:
      properties:
        startTime:
          description: 'Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision.'
          type: string
          format: google-datetime
        snapshotTime:
          type: string
          format: google-datetime
          description: 'Exports Feature values as of this timestamp. If not set, retrieve values as of now. Timestamp, if present, must not have higher than millisecond precision.'
      type: object
      id: GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport
      description: 'Describes exporting the latest Feature values of all entities of the EntityType between [start_time, snapshot_time].'
    GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest:
      properties:
        writeRunDataRequests:
          type: array
          description: Required. Requests containing per-run TensorboardTimeSeries data to write.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1WriteTensorboardRunDataRequest'
      id: GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest
      type: object
      description: Request message for TensorboardService.WriteTensorboardExperimentData.
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource:
      type: object
      id: GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource
      properties:
        uri:
          description: 'The URI of a BigQuery table. e.g. bq://projectId.bqDatasetId.bqTableId'
          type: string
    GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse:
      id: GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse
      type: object
      description: Response message for ModelService.BatchImportEvaluatedAnnotations
      properties:
        importedEvaluatedAnnotationsCount:
          type: integer
          description: Output only. Number of EvaluatedAnnotations imported.
          readOnly: true
          format: int32
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs:
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs
      properties:
        exportEvaluatedDataItemsConfig:
          description: 'Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig'
        forecastHorizon:
          format: int64
          type: string
          description: The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field.
        availableAtForecastColumns:
          type: array
          description: 'Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day.'
          items:
            type: string
        hierarchyConfig:
          description: Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig'
        unavailableAtForecastColumns:
          items:
            type: string
          description: 'Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day.'
          type: array
        additionalExperiments:
          items:
            type: string
          description: Additional experiment flags for the time series forcasting training.
          type: array
        weightColumn:
          description: 'Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. This column must be available at forecast.'
          type: string
        optimizationObjective:
          description: 'Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error.'
          type: string
        validationOptions:
          description: 'Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue'
          type: string
        quantiles:
          items:
            type: number
            format: double
          description: 'Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.'
          type: array
        trainBudgetMilliNodeHours:
          format: int64
          type: string
          description: 'Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend''s discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won''t be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.'
        windowConfig:
          description: Config containing strategy for generating sliding windows.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig'
        dataGranularity:
          description: Expected difference in time granularity between rows in the data.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity'
        holidayRegions:
          description: 'The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option.'
          type: array
          items:
            type: string
        transformations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation'
          description: 'Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.'
        timeSeriesIdentifierColumn:
          type: string
          description: The name of the column that identifies the time series.
        timeSeriesAttributeColumns:
          items:
            type: string
          description: 'Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color.'
          type: array
        targetColumn:
          description: The name of the column that the Model is to predict values for. This column must be unavailable at forecast.
          type: string
        timeColumn:
          type: string
          description: The name of the column that identifies time order in the time series. This column must be available at forecast.
        contextWindow:
          format: int64
          type: string
          description: The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field.
      type: object
    GoogleCloudAiplatformV1Scalar:
      description: One point viewable on a scalar metric plot.
      properties:
        value:
          type: number
          format: double
          description: Value of the point at this step / timestamp.
      type: object
      id: GoogleCloudAiplatformV1Scalar
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation:
      type: object
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation
      properties:
        categorical:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation'
        timestamp:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation'
        auto:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation'
        numeric:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation'
        text:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation'
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec:
      id: GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec
      description: Represents a parameter spec with condition from its parent parameter.
      properties:
        parentIntValues:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition'
          description: The spec for matching values from a parent parameter of `INTEGER` type.
        parentDiscreteValues:
          description: The spec for matching values from a parent parameter of `DISCRETE` type.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition'
        parameterSpec:
          description: Required. The spec for a conditional parameter.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpec'
        parentCategoricalValues:
          description: The spec for matching values from a parent parameter of `CATEGORICAL` type.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition'
      type: object
    GoogleCloudAiplatformV1FeatureValueList:
      id: GoogleCloudAiplatformV1FeatureValueList
      type: object
      properties:
        values:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1FeatureValue'
          description: A list of feature values. All of them should be the same data type.
          type: array
      description: Container for list of values.
    GoogleCloudAiplatformV1SchemaPredictionResult:
      description: Represents a line of JSONL in the batch prediction output file.
      type: object
      id: GoogleCloudAiplatformV1SchemaPredictionResult
      properties:
        key:
          description: Optional user-provided key from the input instance.
          type: string
        instance:
          description: User's input instance. Struct is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON.
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
        prediction:
          type: any
          description: The prediction result. Value is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON and so we can represent array of objects. Do not set error if this is set.
        error:
          description: The error result. Do not set prediction if this is set.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SchemaPredictionResultError'
    GoogleCloudAiplatformV1ExplainRequest:
      type: object
      properties:
        explanationSpecOverride:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplanationSpecOverride'
          description: 'If specified, overrides the explanation_spec of the DeployedModel. Can be used for explaining prediction results with different configurations, such as: - Explaining top-5 predictions results as opposed to top-1; - Increasing path count or step count of the attribution methods to reduce approximate errors; - Using different baselines for explaining the prediction results.'
        parameters:
          description: The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.
          type: any
        instances:
          description: 'Required. The instances that are the input to the explanation call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the explanation call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint''s DeployedModels'' Model''s PredictSchemata''s instance_schema_uri.'
          items:
            type: any
          type: array
        deployedModelId:
          type: string
          description: 'If specified, this ExplainRequest will be served by the chosen DeployedModel, overriding Endpoint.traffic_split.'
      id: GoogleCloudAiplatformV1ExplainRequest
      description: Request message for PredictionService.Explain.
    GoogleCloudAiplatformV1ListSchedulesResponse:
      type: object
      description: Response message for ScheduleService.ListSchedules
      id: GoogleCloudAiplatformV1ListSchedulesResponse
      properties:
        schedules:
          type: array
          description: List of Schedules in the requested page.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass to ListSchedulesRequest.page_token to obtain that page.
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation:
      type: object
      properties:
        columnName:
          type: string
      description: 'Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.'
      id: GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation
    GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance:
      id: GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance
      type: object
      properties:
        contextColumns:
          type: array
          items:
            type: string
        horizonColumns:
          items:
            type: string
          type: array
        contextWeights:
          type: array
          description: 'TFT feature importance values. Each pair for {context/horizon/attribute} should have the same shape since the weight corresponds to the column names.'
          items:
            format: float
            type: number
        attributeColumns:
          type: array
          items:
            type: string
        attributeWeights:
          type: array
          items:
            format: float
            type: number
        horizonWeights:
          type: array
          items:
            type: number
            format: float
    GoogleCloudAiplatformV1ListDataItemsResponse:
      properties:
        dataItems:
          description: A list of DataItems that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1DataItem'
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: Response message for DatasetService.ListDataItems.
      id: GoogleCloudAiplatformV1ListDataItemsResponse
      type: object
    GoogleCloudAiplatformV1ExportModelRequest:
      description: Request message for ModelService.ExportModel.
      id: GoogleCloudAiplatformV1ExportModelRequest
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportModelRequestOutputConfig'
          description: Required. The desired output location and configuration.
      type: object
    GoogleCloudAiplatformV1RemoveDatapointsRequest:
      description: Request message for IndexService.RemoveDatapoints
      type: object
      id: GoogleCloudAiplatformV1RemoveDatapointsRequest
      properties:
        datapointIds:
          description: A list of datapoint ids to be deleted.
          type: array
          items:
            type: string
    GoogleCloudAiplatformV1PipelineTemplateMetadata:
      properties:
        version:
          description: 'The version_name in artifact registry. Will always be presented in output if the PipelineJob.template_uri is from supported template registry. Format is "sha256:abcdef123456...".'
          type: string
      id: GoogleCloudAiplatformV1PipelineTemplateMetadata
      type: object
      description: 'Pipeline template metadata if PipelineJob.template_uri is from supported template registry. Currently, the only supported registry is Artifact Registry.'
    GoogleCloudAiplatformV1ListContextsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as ListContextsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.'
        contexts:
          type: array
          description: The Contexts retrieved from the MetadataStore.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      id: GoogleCloudAiplatformV1ListContextsResponse
      type: object
      description: Response message for MetadataService.ListContexts.
    GoogleCloudAiplatformV1ImportModelEvaluationRequest:
      description: Request message for ModelService.ImportModelEvaluation
      properties:
        modelEvaluation:
          description: Required. Model evaluation resource to be imported.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation'
      id: GoogleCloudAiplatformV1ImportModelEvaluationRequest
      type: object
    GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus:
      type: object
      properties:
        updateTime:
          description: Output only. Update time of this status.
          type: string
          format: google-datetime
          readOnly: true
        state:
          type: string
          enumDescriptions:
            - Unspecified.
            - Specifies pending state for the task.
            - Specifies task is being executed.
            - Specifies task completed successfully.
            - Specifies Task cancel is in pending state.
            - Specifies task is being cancelled.
            - Specifies task was cancelled.
            - Specifies task failed.
            - Specifies task was skipped due to cache hit.
            - Specifies that the task was not triggered because the task's trigger policy is not satisfied. The trigger policy is specified in the `condition` field of PipelineJob.pipeline_spec.
          readOnly: true
          description: Output only. The state of the task.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - CANCEL_PENDING
            - CANCELLING
            - CANCELLED
            - FAILED
            - SKIPPED
            - NOT_TRIGGERED
        error:
          description: 'Output only. The error that occurred during the state. May be set when the state is any of the non-final state (PENDING/RUNNING/CANCELLING) or FAILED state. If the state is FAILED, the error here is final and not going to be retried. If the state is a non-final state, the error indicates a system-error being retried.'
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcStatus'
      id: GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus
      description: A single record of the task status.
    GoogleCloudAiplatformV1ImportDataConfig:
      properties:
        annotationLabels:
          additionalProperties:
            type: string
          description: 'Labels that will be applied to newly imported Annotations. If two Annotations are identical, one of them will be deduped. Two Annotations are considered identical if their payload, payload_schema_uri and all of their labels are the same. These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.'
          type: object
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsSource'
          description: The Google Cloud Storage location for the input content.
        dataItemLabels:
          additionalProperties:
            type: string
          type: object
          description: 'Labels that will be applied to newly imported DataItems. If an identical DataItem as one being imported already exists in the Dataset, then these labels will be appended to these of the already existing one, and if labels with identical key is imported before, the old label value will be overwritten. If two DataItems are identical in the same import data operation, the labels will be combined and if key collision happens in this case, one of the values will be picked randomly. Two DataItems are considered identical if their content bytes are identical (e.g. image bytes or pdf bytes). These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.'
        importSchemaUri:
          type: string
          description: 'Required. Points to a YAML file stored on Google Cloud Storage describing the import format. Validation will be done against the schema. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).'
      type: object
      description: 'Describes the location from where we import data into a Dataset, together with the labels that will be applied to the DataItems and the Annotations.'
      id: GoogleCloudAiplatformV1ImportDataConfig
    GoogleCloudAiplatformV1PipelineTaskExecutorDetail:
      type: object
      properties:
        customJobDetail:
          description: Output only. The detailed info for a custom job executor.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail'
          readOnly: true
        containerDetail:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail'
          description: Output only. The detailed info for a container executor.
      id: GoogleCloudAiplatformV1PipelineTaskExecutorDetail
      description: The runtime detail of a pipeline executor.
    GoogleCloudAiplatformV1ReadIndexDatapointsRequest:
      id: GoogleCloudAiplatformV1ReadIndexDatapointsRequest
      type: object
      description: The request message for MatchService.ReadIndexDatapoints.
      properties:
        ids:
          description: IDs of the datapoints to be searched for.
          items:
            type: string
          type: array
        deployedIndexId:
          type: string
          description: The ID of the DeployedIndex that will serve the request.
    GoogleCloudAiplatformV1ListAnnotationsResponse:
      id: GoogleCloudAiplatformV1ListAnnotationsResponse
      description: Response message for DatasetService.ListAnnotations.
      properties:
        annotations:
          description: A list of Annotations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Annotation'
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
    GoogleCloudAiplatformV1ModelDeploymentMonitoringJob:
      description: Represents a job that runs periodically to monitor the deployed models in an endpoint. It will analyze the logged training & prediction data to detect any abnormal behaviors.
      type: object
      id: GoogleCloudAiplatformV1ModelDeploymentMonitoringJob
      properties:
        modelDeploymentMonitoringObjectiveConfigs:
          description: Required. The config for monitoring objectives. This is a per DeployedModel config. Each DeployedModel needs to be configured separately.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig'
          type: array
        displayName:
          type: string
          description: Required. The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob.
        modelDeploymentMonitoringScheduleConfig:
          description: Required. Schedule config for running the monitoring job.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig'
        modelMonitoringAlertConfig:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringAlertConfig'
          description: Alert config for model monitoring.
        nextScheduleTime:
          description: Output only. Timestamp when this monitoring pipeline will be scheduled to run for the next round.
          format: google-datetime
          readOnly: true
          type: string
        predictInstanceSchemaUri:
          type: string
          description: 'YAML schema file uri describing the format of a single instance, which are given to format this Endpoint''s prediction (and explanation). If not set, we will generate predict schema from collected predict requests.'
        samplePredictInstance:
          type: any
          description: 'Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests.'
        scheduleState:
          readOnly: true
          enumDescriptions:
            - Unspecified state.
            - The pipeline is picked up and wait to run.
            - The pipeline is offline and will be scheduled for next run.
            - The pipeline is running.
          enum:
            - MONITORING_SCHEDULE_STATE_UNSPECIFIED
            - PENDING
            - OFFLINE
            - RUNNING
          type: string
          description: Output only. Schedule state when the monitoring job is in Running state.
        enableMonitoringPipelineLogs:
          type: boolean
          description: 'If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing).'
        statsAnomaliesBaseDirectory:
          description: Stats anomalies base folder path.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GcsDestination'
        logTtl:
          type: string
          format: google-duration
          description: 'The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl = 1 day.'
        latestMonitoringPipelineMetadata:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata'
          description: Output only. Latest triggered monitoring pipeline metadata.
        loggingSamplingStrategy:
          description: Required. Sample Strategy for logging.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1SamplingStrategy'
        labels:
          type: object
          description: 'The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.'
          additionalProperties:
            type: string
        state:
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          type: string
          readOnly: true
          description: 'Output only. The detailed state of the monitoring job. When the job is still creating, the state will be ''PENDING''. Once the job is successfully created, the state will be ''RUNNING''. Pause the job, the state will be ''PAUSED''. Resume the job, the state will return to ''RUNNING''.'
          enumDescriptions:
            - The job state is unspecified.
            - The job has been just created or resumed and processing has not yet begun.
            - The service is preparing to run the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed.
            - 'The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.'
            - The job has been cancelled.
            - 'The job has been stopped, and can be resumed.'
            - The job has expired.
            - 'The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.'
            - 'The job is partially succeeded, some results may be missing due to errors.'
        name:
          readOnly: true
          type: string
          description: Output only. Resource name of a ModelDeploymentMonitoringJob.
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when this ModelDeploymentMonitoringJob was updated most recently.
        createTime:
          description: Output only. Timestamp when this ModelDeploymentMonitoringJob was created.
          type: string
          readOnly: true
          format: google-datetime
        error:
          description: Output only. Only populated when the job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcStatus'
        endpoint:
          description: 'Required. Endpoint resource name. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`'
          type: string
        analysisInstanceSchemaUri:
          description: 'YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.'
          type: string
        bigqueryTables:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable'
          readOnly: true
          type: array
          description: 'Output only. The created bigquery tables for the job under customer project. Customer could do their own query & analysis. There could be 4 log tables in maximum: 1. Training data logging predict request/response 2. Serving data logging predict request/response'
        encryptionSpec:
          description: 'Customer-managed encryption key spec for a ModelDeploymentMonitoringJob. If set, this ModelDeploymentMonitoringJob and all sub-resources of this ModelDeploymentMonitoringJob will be secured by this key.'
          $ref: '#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec'
    GoogleCloudAiplatformV1WorkerPoolSpec:
      description: Represents the spec of a worker pool in a job.
      properties:
        nfsMounts:
          description: Optional. List of NFS mount spec.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1NfsMount'
        diskSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DiskSpec'
          description: Disk spec.
        pythonPackageSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1PythonPackageSpec'
          description: The Python packaged task.
        replicaCount:
          format: int64
          description: Optional. The number of worker replicas to use for this worker pool.
          type: string
        containerSpec:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1ContainerSpec'
          description: The custom container task.
        machineSpec:
          description: Optional. Immutable. The specification of a single machine.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1MachineSpec'
      type: object
      id: GoogleCloudAiplatformV1WorkerPoolSpec
    GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse:
      id: GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse
      description: Response message for MetadataService.AddContextArtifactsAndExecutions.
      type: object
      properties: {}
    GoogleCloudAiplatformV1MutateDeployedIndexResponse:
      properties:
        deployedIndex:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndex'
          description: The DeployedIndex that had been updated in the IndexEndpoint.
      description: Response message for IndexEndpointService.MutateDeployedIndex.
      type: object
      id: GoogleCloudAiplatformV1MutateDeployedIndexResponse
    GoogleCloudAiplatformV1ListTensorboardExperimentsResponse:
      description: Response message for TensorboardService.ListTensorboardExperiments.
      type: object
      properties:
        nextPageToken:
          description: 'A token, which can be sent as ListTensorboardExperimentsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        tensorboardExperiments:
          description: The TensorboardExperiments mathching the request.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment'
          type: array
      id: GoogleCloudAiplatformV1ListTensorboardExperimentsResponse
    GoogleCloudAiplatformV1CreateMetadataStoreOperationMetadata:
      id: GoogleCloudAiplatformV1CreateMetadataStoreOperationMetadata
      properties:
        genericMetadata:
          description: Operation metadata for creating a MetadataStore.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
      type: object
      description: Details of operations that perform MetadataService.CreateMetadataStore.
    GoogleCloudAiplatformV1CreateEndpointOperationMetadata:
      properties:
        genericMetadata:
          $ref: '#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata'
          description: The operation generic information.
      type: object
      id: GoogleCloudAiplatformV1CreateEndpointOperationMetadata
      description: Runtime operation information for EndpointService.CreateEndpoint.
    GoogleCloudAiplatformV1Trial:
      id: GoogleCloudAiplatformV1Trial
      description: 'A message representing a Trial. A Trial contains a unique set of Parameters that has been or will be evaluated, along with the objective metrics got by running the Trial.'
      type: object
      properties:
        startTime:
          readOnly: true
          description: Output only. Time when the Trial was started.
          format: google-datetime
          type: string
        infeasibleReason:
          readOnly: true
          description: Output only. A human readable string describing why the Trial is infeasible. This is set only if Trial state is `INFEASIBLE`.
          type: string
        clientId:
          description: 'Output only. The identifier of the client that originally requested this Trial. Each client is identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the same Trial will be returned. Multiple clients with different client_ids can ask for suggestions simultaneously, each of them will get their own Trial.'
          readOnly: true
          type: string
        webAccessUris:
          description: 'Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a HyperparameterTuningJob and the job''s trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node''s interactive shell.'
          additionalProperties:
            type: string
          readOnly: true
          type: object
        finalMeasurement:
          description: Output only. The final measurement containing the objective value.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudAiplatformV1Measurement'
        endTime:
          type: string
          description: Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.
          format: google-datetime
          readOnly: true
        name:
          type: string
          description: Output only. Resource name of the Trial assigned by the service.
          readOnly: true
        parameters:
          description: Output only. The parameters of the Trial.
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1TrialParameter'
          readOnly: true
          type: array
        state:
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - REQUESTED
            - ACTIVE
            - STOPPING
            - SUCCEEDED
            - INFEASIBLE
          enumDescriptions:
            - The Trial state is unspecified.
            - 'Indicates that a specific Trial has been requested, but it has not yet been suggested by the service.'
            - Indicates that the Trial has been suggested.
            - Indicates that the Trial should stop according to the service.
            - Indicates that the Trial is completed successfully.
            - Indicates that the Trial should not be attempted again. The service will set a Trial to INFEASIBLE when it's done but missing the final_measurement.
          description: Output only. The detailed state of the Trial.
        measurements:
          items:
            $ref: '#/components/schemas/GoogleCloudAiplatformV1Measurement'
          type: array
          description: 'Output only. A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_duration). These are used for early stopping computations.'
          readOnly: true
        id:
          description: Output only. The identifier of the Trial assigned by the service.
          type: string
          readOnly: true
        customJob:
          type: string
          description: Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's Trial.
          readOnly: true
    GoogleCloudAiplatformV1CreateTensorboardRunRequest:
      properties:
        tensorboardRun:
          description: Required. The TensorboardRun to create.
          $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
        parent:
          description: 'Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`'
          type: string
        tensorboardRunId:
          description: 'Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run''s resource name. This value should be 1-128 characters, and valid characters are /a-z-/.'
          type: string
      id: GoogleCloudAiplatformV1CreateTensorboardRunRequest
      description: Request message for TensorboardService.CreateTensorboardRun.
      type: object
  parameters:
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    models:
      id: google.aiplatform.models
      name: models
      title: Models
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        server_streaming_predict:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:serverStreamingPredict/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        raw_predict:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:rawPredict/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        predict:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1publishers~1{publishersId}~1models~1{modelsId}:predict/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        copy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models:copy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models:upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        merge_version_aliases:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:mergeVersionAliases/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.models
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/models/methods/get'
          - $ref: '#/components/x-stackQL-resources/models/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/models/methods/delete'
    index_endpoints:
      id: google.aiplatform.index_endpoints
      name: index_endpoints
      title: Index Endpoints
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.indexEndpoints
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mutate_deployed_index:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}:mutateDeployedIndex/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy_index:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}:deployIndex/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_index_datapoints:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}:readIndexDatapoints/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy_index:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}:undeployIndex/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        find_neighbors:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexEndpoints~1{indexEndpointsId}:findNeighbors/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/index_endpoints/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/index_endpoints/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/index_endpoints/methods/delete'
    operations:
      id: google.aiplatform.operations
      name: operations
      title: Operations
      methods:
        wait:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}~1operations~1{operationsId}:wait/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    pipeline_jobs:
      id: google.aiplatform.pipeline_jobs
      name: pipeline_jobs
      title: Pipeline Jobs
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs~1{pipelineJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs~1{pipelineJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.pipelineJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelineJobs~1{pipelineJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/delete'
    featurestores:
      id: google.aiplatform.featurestores
      name: featurestores
      title: Featurestores
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.featurestores
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_features:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores:searchFeatures/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_read_feature_values:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}:batchReadFeatureValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/featurestores/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/featurestores/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/featurestores/methods/delete'
    featurestores_iam_policies:
      id: google.aiplatform.featurestores_iam_policies
      name: featurestores_iam_policies
      title: Featurestores Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/featurestores_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    features:
      id: google.aiplatform.features
      name: features
      title: Features
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features~1{featuresId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features~1{featuresId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features~1{featuresId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.features
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}~1features:batchCreate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/features/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/features/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/features/methods/delete'
    entity_types:
      id: google.aiplatform.entity_types
      name: entity_types
      title: Entity Types
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_feature_values:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:exportFeatureValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.entityTypes
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        write_feature_values:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:writeFeatureValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_feature_values:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:readFeatureValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import_feature_values:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:importFeatureValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        streaming_read_feature_values:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:streamingReadFeatureValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entity_types/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/entity_types/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/entity_types/methods/delete'
    entity_types_iam_policies:
      id: google.aiplatform.entity_types_iam_policies
      name: entity_types_iam_policies
      title: Entity Types Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entity_types_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    entity_types_feature_values:
      id: google.aiplatform.entity_types_feature_values
      name: entity_types_feature_values
      title: Entity Types Feature Values
      methods:
        delete_feature_values:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1featurestores~1{featurestoresId}~1entityTypes~1{entityTypesId}:deleteFeatureValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    metadata_stores:
      id: google.aiplatform.metadata_stores
      name: metadata_stores
      title: Metadata Stores
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.metadataStores
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metadata_stores/methods/get'
          - $ref: '#/components/x-stackQL-resources/metadata_stores/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/metadata_stores/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/metadata_stores/methods/delete'
    executions_execution_events:
      id: google.aiplatform.executions_execution_events
      name: executions_execution_events
      title: Executions Execution Events
      methods:
        add_execution_events:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions~1{executionsId}:addExecutionEvents/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    executions:
      id: google.aiplatform.executions
      name: executions
      title: Executions
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions~1{executionsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions~1{executionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions~1{executionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        purge:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions:purge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.executions
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_execution_inputs_and_outputs:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1executions~1{executionsId}:queryExecutionInputsAndOutputs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/executions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/executions/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/executions/methods/delete'
    artifacts:
      id: google.aiplatform.artifacts
      name: artifacts
      title: Artifacts
      methods:
        query_artifact_lineage_subgraph:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts~1{artifactsId}:queryArtifactLineageSubgraph/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts~1{artifactsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts~1{artifactsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts~1{artifactsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        purge:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts:purge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.artifacts
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1artifacts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/delete'
    contexts:
      id: google.aiplatform.contexts
      name: contexts
      title: Contexts
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.contexts
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        purge:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts:purge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_context_lineage_subgraph:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}:queryContextLineageSubgraph/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contexts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/contexts/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contexts/methods/delete'
    contexts_context_artifacts_and_executions:
      id: google.aiplatform.contexts_context_artifacts_and_executions
      name: contexts_context_artifacts_and_executions
      title: Contexts Context Artifacts And Executions
      methods:
        add_context_artifacts_and_executions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}:addContextArtifactsAndExecutions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    contexts_context_children:
      id: google.aiplatform.contexts_context_children
      name: contexts_context_children
      title: Contexts Context Children
      methods:
        remove_context_children:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}:removeContextChildren/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_context_children:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1contexts~1{contextsId}:addContextChildren/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    metadata_schemas:
      id: google.aiplatform.metadata_schemas
      name: metadata_schemas
      title: Metadata Schemas
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1metadataSchemas/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1metadataSchemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.metadataSchemas
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1metadataSchemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataStores~1{metadataStoresId}~1metadataSchemas~1{metadataSchemasId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/list'
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/create'
        update: []
        delete: []
    indexes:
      id: google.aiplatform.indexes
      name: indexes
      title: Indexes
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.indexes
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes~1{indexesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes~1{indexesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes~1{indexesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upsert_datapoints:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes~1{indexesId}:upsertDatapoints/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/indexes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/indexes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/indexes/methods/delete'
    indexes_datapoints:
      id: google.aiplatform.indexes_datapoints
      name: indexes_datapoints
      title: Indexes Datapoints
      methods:
        remove_datapoints:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1indexes~1{indexesId}:removeDatapoints/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    experiments:
      id: google.aiplatform.experiments
      name: experiments
      title: Experiments
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tensorboardExperiments
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        write:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}:write/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/delete'
    time_series:
      id: google.aiplatform.time_series
      name: time_series
      title: Time Series
      methods:
        export_tensorboard_time_series:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}:exportTensorboardTimeSeries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tensorboardTimeSeries
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}:read/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_read:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries:batchRead/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries:batchCreate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_blob_data:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}~1timeSeries~1{timeSeriesId}:readBlobData/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/time_series/methods/list'
          - $ref: '#/components/x-stackQL-resources/time_series/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/time_series/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/time_series/methods/delete'
    runs:
      id: google.aiplatform.runs
      name: runs
      title: Runs
      methods:
        write:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}:write/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tensorboardRuns
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs~1{runsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}~1experiments~1{experimentsId}~1runs:batchCreate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/runs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/runs/methods/delete'
    tensorboards:
      id: google.aiplatform.tensorboards
      name: tensorboards
      title: Tensorboards
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tensorboards
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_usage:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}:readUsage/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        read_size:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1tensorboards~1{tensorboardsId}:readSize/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tensorboards/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tensorboards/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tensorboards/methods/delete'
    studies:
      id: google.aiplatform.studies
      name: studies
      title: Studies
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.studies
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lookup:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies:lookup/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/studies/methods/list'
          - $ref: '#/components/x-stackQL-resources/studies/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/studies/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/studies/methods/delete'
    trials:
      id: google.aiplatform.trials
      name: trials
      title: Trials
      methods:
        suggest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials:suggest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.trials
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_trial_early_stopping_state:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}:checkTrialEarlyStoppingState/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        complete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}:complete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/trials/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/trials/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/trials/methods/delete'
    trials_optimal_trials:
      id: google.aiplatform.trials_optimal_trials
      name: trials_optimal_trials
      title: Trials Optimal Trials
      methods:
        list_optimal_trials:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials:listOptimalTrials/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    trials_trial_measurement:
      id: google.aiplatform.trials_trial_measurement
      name: trials_trial_measurement
      title: Trials Trial Measurement
      methods:
        add_trial_measurement:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1studies~1{studiesId}~1trials~1{trialsId}:addTrialMeasurement/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    custom_jobs:
      id: google.aiplatform.custom_jobs
      name: custom_jobs
      title: Custom Jobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.customJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs~1{customJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs~1{customJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customJobs~1{customJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/custom_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/custom_jobs/methods/delete'
    migratable_resources:
      id: google.aiplatform.migratable_resources
      name: migratable_resources
      title: Migratable Resources
      methods:
        batch_migrate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migratableResources:batchMigrate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1migratableResources:search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    hyperparameter_tuning_jobs:
      id: google.aiplatform.hyperparameter_tuning_jobs
      name: hyperparameter_tuning_jobs
      title: Hyperparameter Tuning Jobs
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs~1{hyperparameterTuningJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.hyperparameterTuningJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hyperparameterTuningJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperparameter_tuning_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/hyperparameter_tuning_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hyperparameter_tuning_jobs/methods/delete'
    schedules:
      id: google.aiplatform.schedules
      name: schedules
      title: Schedules
      methods:
        resume:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}:resume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pause:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}:pause/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schedules
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/schedules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/delete'
    batch_prediction_jobs:
      id: google.aiplatform.batch_prediction_jobs
      name: batch_prediction_jobs
      title: Batch Prediction Jobs
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs~1{batchPredictionJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs~1{batchPredictionJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs~1{batchPredictionJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.batchPredictionJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1batchPredictionJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/batch_prediction_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/batch_prediction_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/batch_prediction_jobs/methods/delete'
    nas_jobs:
      id: google.aiplatform.nas_jobs
      name: nas_jobs
      title: Nas Jobs
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nasJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nas_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/nas_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nas_jobs/methods/delete'
    nas_trial_details:
      id: google.aiplatform.nas_trial_details
      name: nas_trial_details
      title: Nas Trial Details
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}~1nasTrialDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nasTrialDetails
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}~1nasTrialDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nasJobs~1{nasJobsId}~1nasTrialDetails~1{nasTrialDetailsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nas_trial_details/methods/list'
          - $ref: '#/components/x-stackQL-resources/nas_trial_details/methods/get'
        insert: []
        update: []
        delete: []
    data_labeling_jobs:
      id: google.aiplatform.data_labeling_jobs
      name: data_labeling_jobs
      title: Data Labeling Jobs
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs~1{dataLabelingJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs~1{dataLabelingJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs~1{dataLabelingJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataLabelingJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataLabelingJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_labeling_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_labeling_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_labeling_jobs/methods/delete'
    models_explanation_dataset:
      id: google.aiplatform.models_explanation_dataset
      name: models_explanation_dataset
      title: Models Explanation Dataset
      methods:
        update_explanation_dataset:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:updateExplanationDataset/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    models_versions:
      id: google.aiplatform.models_versions
      name: models_versions
      title: Models Versions
      methods:
        list_versions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:listVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.models
        _list_versions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:listVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/models_versions/methods/list_versions'
        insert: []
        update: []
        delete: []
    models_version:
      id: google.aiplatform.models_version
      name: models_version
      title: Models Version
      methods:
        delete_version:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}:deleteVersion/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/models_version/methods/delete_version'
    evaluations:
      id: google.aiplatform.evaluations
      name: evaluations
      title: Evaluations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.modelEvaluations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations~1{evaluationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/list'
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/get'
        insert: []
        update: []
        delete: []
    slices:
      id: google.aiplatform.slices
      name: slices
      title: Slices
      methods:
        batch_import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations~1{evaluationsId}~1slices~1{slicesId}:batchImport/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations~1{evaluationsId}~1slices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.modelEvaluationSlices
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations~1{evaluationsId}~1slices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}~1evaluations~1{evaluationsId}~1slices~1{slicesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/slices/methods/list'
          - $ref: '#/components/x-stackQL-resources/slices/methods/get'
        insert: []
        update: []
        delete: []
    training_pipelines:
      id: google.aiplatform.training_pipelines
      name: training_pipelines
      title: Training Pipelines
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines~1{trainingPipelinesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines~1{trainingPipelinesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.trainingPipelines
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1trainingPipelines~1{trainingPipelinesId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/training_pipelines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/training_pipelines/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/training_pipelines/methods/delete'
    model_deployment_monitoring_jobs:
      id: google.aiplatform.model_deployment_monitoring_jobs
      name: model_deployment_monitoring_jobs
      title: Model Deployment Monitoring Jobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.modelDeploymentMonitoringJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_model_deployment_monitoring_stats_anomalies:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}:searchModelDeploymentMonitoringStatsAnomalies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pause:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}:pause/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resume:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1modelDeploymentMonitoringJobs~1{modelDeploymentMonitoringJobsId}:resume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/model_deployment_monitoring_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/model_deployment_monitoring_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/model_deployment_monitoring_jobs/methods/delete'
    datasets:
      id: google.aiplatform.datasets
      name: datasets
      title: Datasets
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.datasets
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_data_items:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:searchDataItems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/delete'
    saved_queries:
      id: google.aiplatform.saved_queries
      name: saved_queries
      title: Saved Queries
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1savedQueries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.savedQueries
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1savedQueries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1savedQueries~1{savedQueriesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/saved_queries/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/saved_queries/methods/delete'
    data_items:
      id: google.aiplatform.data_items
      name: data_items
      title: Data Items
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1dataItems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataItems
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1dataItems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_items/methods/list'
        insert: []
        update: []
        delete: []
    annotations:
      id: google.aiplatform.annotations
      name: annotations
      title: Annotations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1dataItems~1{dataItemsId}~1annotations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.annotations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1dataItems~1{dataItemsId}~1annotations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/annotations/methods/list'
        insert: []
        update: []
        delete: []
    annotation_specs:
      id: google.aiplatform.annotation_specs
      name: annotation_specs
      title: Annotation Specs
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1annotationSpecs~1{annotationSpecsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/annotation_specs/methods/get'
        insert: []
        update: []
        delete: []
    endpoints:
      id: google.aiplatform.endpoints
      name: endpoints
      title: Endpoints
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.endpoints
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        explain:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:explain/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        predict:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:predict/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy_model:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:deployModel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        server_streaming_predict:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:serverStreamingPredict/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        raw_predict:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:rawPredict/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy_model:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:undeployModel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mutate_deployed_model:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1endpoints~1{endpointsId}:mutateDeployedModel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/delete'
    specialist_pools:
      id: google.aiplatform.specialist_pools
      name: specialist_pools
      title: Specialist Pools
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.specialistPools
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1specialistPools~1{specialistPoolsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/specialist_pools/methods/list'
          - $ref: '#/components/x-stackQL-resources/specialist_pools/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/specialist_pools/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/specialist_pools/methods/delete'
    locations:
      id: google.aiplatform.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/publishers/{publishersId}/models/{modelsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets a Model Garden publisher model.
      operationId: aiplatform.publishers.models.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PublisherModel'
      parameters:
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}':
    parameters: *ref_1
    get:
      description: Gets an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: index_endpoints
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: index_endpoints
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: index_endpoints
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints':
    parameters: *ref_1
    post:
      description: Creates an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: index_endpoints
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists IndexEndpoints in a Location.
      operationId: aiplatform.projects.locations.indexEndpoints.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListIndexEndpointsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: index_endpoints
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.indexEndpoints
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:mutateDeployedIndex':
    parameters: *ref_1
    post:
      description: Update an existing DeployedIndex under an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.mutateDeployedIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployedIndex'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: index_endpoints
      x-stackQL-method: mutate_deployed_index
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:deployIndex':
    parameters: *ref_1
    post:
      description: 'Deploys an Index into this IndexEndpoint, creating a DeployedIndex within it. Only non-empty Indexes can be deployed.'
      operationId: aiplatform.projects.locations.indexEndpoints.deployIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployIndexRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: index_endpoints
      x-stackQL-method: deploy_index
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:readIndexDatapoints':
    parameters: *ref_1
    post:
      description: Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints can be retrieved in a batch.
      operationId: aiplatform.projects.locations.indexEndpoints.readIndexDatapoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadIndexDatapointsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadIndexDatapointsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: index_endpoints
      x-stackQL-method: read_index_datapoints
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:undeployIndex':
    parameters: *ref_1
    post:
      description: 'Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it, and freeing all resources it''s using.'
      operationId: aiplatform.projects.locations.indexEndpoints.undeployIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1UndeployIndexRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: index_endpoints
      x-stackQL-method: undeploy_index
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}:findNeighbors':
    parameters: *ref_1
    post:
      description: Finds the nearest neighbors of each vector within the request.
      operationId: aiplatform.projects.locations.indexEndpoints.findNeighbors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1FindNeighborsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1FindNeighborsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: index_endpoints
      x-stackQL-method: find_neighbors
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.indexEndpoints.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.indexEndpoints.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.indexEndpoints.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.indexEndpoints.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/indexEndpoints/{indexEndpointsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.indexEndpoints.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexEndpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:serverStreamingPredict':
    parameters: *ref_1
    post:
      description: Perform a server-side streaming online prediction request for Vertex LLM streaming.
      operationId: aiplatform.projects.locations.publishers.models.serverStreamingPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1StreamingPredictRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1StreamingPredictResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: server_streaming_predict
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:rawPredict':
    parameters: *ref_1
    post:
      description: 'Perform an online prediction with an arbitrary HTTP payload. The response includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint''s DeployedModel that served this prediction.'
      operationId: aiplatform.projects.locations.publishers.models.rawPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1RawPredictRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: raw_predict
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/publishers/{publishersId}/models/{modelsId}:predict':
    parameters: *ref_1
    post:
      description: Perform an online prediction.
      operationId: aiplatform.projects.locations.publishers.models.predict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: publishersId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: predict
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}':
    parameters: *ref_1
    delete:
      description: Deletes a PipelineJob.
      operationId: aiplatform.projects.locations.pipelineJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipeline_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a PipelineJob.
      operationId: aiplatform.projects.locations.pipelineJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipeline_jobs
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs':
    parameters: *ref_1
    get:
      description: Lists PipelineJobs in a Location.
      operationId: aiplatform.projects.locations.pipelineJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListPipelineJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: pipeline_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.pipelineJobs
    post:
      description: Creates a PipelineJob. A PipelineJob will run immediately when created.
      operationId: aiplatform.projects.locations.pipelineJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PipelineJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pipelineJobId
          schema:
            type: string
      x-stackQL-resource: pipeline_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Cancels a PipelineJob. Starts asynchronous cancellation on the PipelineJob. The server makes a best effort to cancel the pipeline, but success is not guaranteed. Clients can use PipelineService.GetPipelineJob or other methods to check whether the cancellation succeeded or whether the pipeline completed despite cancellation. On successful cancellation, the PipelineJob is not deleted; instead it becomes a pipeline with a PipelineJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and PipelineJob.state is set to `CANCELLED`.'
      operationId: aiplatform.projects.locations.pipelineJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CancelPipelineJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipeline_jobs
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.pipelineJobs.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.pipelineJobs.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.pipelineJobs.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.pipelineJobs.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelineJobs/{pipelineJobsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.pipelineJobs.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelineJobsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single Featurestore.
      operationId: aiplatform.projects.locations.featurestores.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Featurestore'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: featurestores
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Featurestore.
      operationId: aiplatform.projects.locations.featurestores.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Featurestore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: featurestores
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Featurestore. The Featurestore must not contain any EntityTypes or `force` must be set to true for the request to succeed.
      operationId: aiplatform.projects.locations.featurestores.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: featurestores
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores':
    parameters: *ref_1
    get:
      description: Lists Featurestores in a given project and location.
      operationId: aiplatform.projects.locations.featurestores.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListFeaturestoresResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: featurestores
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.featurestores
    post:
      description: Creates a new Featurestore in a given project and location.
      operationId: aiplatform.projects.locations.featurestores.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Featurestore'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: featurestoreId
          schema:
            type: string
      x-stackQL-resource: featurestores
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: aiplatform.projects.locations.featurestores.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: featurestores_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores:searchFeatures':
    parameters: *ref_1
    get:
      description: Searches Features matching a query in a given project.
      operationId: aiplatform.projects.locations.featurestores.searchFeatures
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1SearchFeaturesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: featurestores
      x-stackQL-method: search_features
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: aiplatform.projects.locations.featurestores.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: featurestores_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: aiplatform.projects.locations.featurestores.testIamPermissions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: permissions
          schema:
            type: string
      x-stackQL-resource: featurestores_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}:batchReadFeatureValues':
    parameters: *ref_1
    post:
      description: 'Batch reads Feature values from a Featurestore. This API enables batch reading Feature values, where each read instance in the batch may read Feature values of entities from one or more EntityTypes. Point-in-time correctness is guaranteed for Feature values of each read instance as of each instance''s read timestamp.'
      operationId: aiplatform.projects.locations.featurestores.batchReadFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchReadFeatureValuesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: featurestores
      x-stackQL-method: batch_read_feature_values
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features/{featuresId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features/{featuresId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features/{featuresId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features/{featuresId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features/{featuresId}':
    parameters: *ref_1
    delete:
      description: Deletes a single Feature.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single Feature.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates the parameters of a single Feature.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features':
    parameters: *ref_1
    post:
      description: Creates a new Feature in a given EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Feature'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: featureId
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Features in a given EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListFeaturesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: latestStatsCount
          schema:
            type: integer
      x-stackQL-resource: features
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.features
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/features:batchCreate':
    parameters: *ref_1
    post:
      description: Creates a batch of Features in a given EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchCreateFeaturesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: batch_create
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}':
    parameters: *ref_1
    get:
      description: Gets details of a single EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entity_types
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates the parameters of a single EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityType'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: entity_types
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single EntityType. The EntityType must not have any Features or `force` must be set to true for the request to succeed.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: entity_types
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:exportFeatureValues':
    parameters: *ref_1
    post:
      description: Exports Feature values from all the entities of a target EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.exportFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportFeatureValuesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entity_types
      x-stackQL-method: export_feature_values
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.testIamPermissions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: permissions
          schema:
            type: string
      x-stackQL-resource: entity_types_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes':
    parameters: *ref_1
    post:
      description: Creates a new EntityType in a given Featurestore.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1EntityType'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: entityTypeId
          schema:
            type: string
      x-stackQL-resource: entity_types
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists EntityTypes in a given Featurestore.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListEntityTypesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: entity_types
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.entityTypes
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:writeFeatureValues':
    parameters: *ref_1
    post:
      description: Writes Feature values of one or more entities of an EntityType. The Feature values are merged into existing entities if any. The Feature values to be written must have timestamp within the online storage retention.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.writeFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1WriteFeatureValuesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1WriteFeatureValuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entity_types
      x-stackQL-method: write_feature_values
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:readFeatureValues':
    parameters: *ref_1
    post:
      description: 'Reads Feature values of a specific entity of an EntityType. For reading feature values of multiple entities of an EntityType, please use StreamingReadFeatureValues.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.readFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entity_types
      x-stackQL-method: read_feature_values
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entity_types_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:importFeatureValues':
    parameters: *ref_1
    post:
      description: 'Imports Feature values into the Featurestore from a source storage. The progress of the import is tracked by the returned operation. The imported features are guaranteed to be visible to subsequent read operations after the operation is marked as successfully done. If an import operation fails, the Feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same import request again and wait till the new operation returned is marked as successfully done. There are also scenarios where the caller can cause inconsistency. - Source data for import contains multiple distinct Feature values for the same entity ID and timestamp. - Source is modified during an import. This includes adding, updating, or removing source data and/or metadata. Examples of updating metadata include but are not limited to changing storage location, storage class, or retention policy. - Online serving cluster is under-provisioned.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.importFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ImportFeatureValuesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entity_types
      x-stackQL-method: import_feature_values
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:deleteFeatureValues':
    parameters: *ref_1
    post:
      description: 'Delete Feature values from Featurestore. The progress of the deletion is tracked by the returned operation. The deleted feature values are guaranteed to be invisible to subsequent read operations after the operation is marked as successfully done. If a delete feature values operation fails, the feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same delete request again and wait till the new operation returned is marked as successfully done.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.deleteFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entity_types_feature_values
      x-stackQL-method: delete_feature_values
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:streamingReadFeatureValues':
    parameters: *ref_1
    post:
      description: 'Reads Feature values for multiple entities. Depending on their size, data for different entities may be broken up across multiple responses.'
      operationId: aiplatform.projects.locations.featurestores.entityTypes.streamingReadFeatureValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entity_types
      x-stackQL-method: streaming_read_feature_values
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/entityTypes/{entityTypesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: entity_types_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.featurestores.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.featurestores.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.featurestores.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.featurestores.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/featurestores/{featurestoresId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.featurestores.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featurestoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a single MetadataStore and all its child resources (Artifacts, Executions, and Contexts).'
      operationId: aiplatform.projects.locations.metadataStores.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: metadata_stores
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Retrieves a specific MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataStore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: metadata_stores
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores':
    parameters: *ref_1
    post:
      description: 'Initializes a MetadataStore, including allocation of resources.'
      operationId: aiplatform.projects.locations.metadataStores.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataStore'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: metadataStoreId
          schema:
            type: string
      x-stackQL-resource: metadata_stores
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists MetadataStores for a Location.
      operationId: aiplatform.projects.locations.metadataStores.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListMetadataStoresResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: metadata_stores
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.metadataStores
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions/{executionsId}:addExecutionEvents':
    parameters: *ref_1
    post:
      description: 'Adds Events to the specified Execution. An Event indicates whether an Artifact was used as an input or output for an Execution. If an Event already exists between the Execution and the Artifact, the Event is skipped.'
      operationId: aiplatform.projects.locations.metadataStores.executions.addExecutionEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1AddExecutionEventsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1AddExecutionEventsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions_execution_events
      x-stackQL-method: add_execution_events
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions/{executionsId}':
    parameters: *ref_1
    patch:
      description: Updates a stored Execution.
      operationId: aiplatform.projects.locations.metadataStores.executions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Retrieves a specific Execution.
      operationId: aiplatform.projects.locations.metadataStores.executions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes an Execution.
      operationId: aiplatform.projects.locations.metadataStores.executions.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions:purge':
    parameters: *ref_1
    post:
      description: Purges Executions.
      operationId: aiplatform.projects.locations.metadataStores.executions.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PurgeExecutionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: purge
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions':
    parameters: *ref_1
    get:
      description: Lists Executions in the MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.executions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListExecutionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.executions
    post:
      description: Creates an Execution associated with a MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.executions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: executionId
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/executions/{executionsId}:queryExecutionInputsAndOutputs':
    parameters: *ref_1
    get:
      description: 'Obtains the set of input and output Artifacts for this Execution, in the form of LineageSubgraph that also contains the Execution and connecting Events.'
      operationId: aiplatform.projects.locations.metadataStores.executions.queryExecutionInputsAndOutputs
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1LineageSubgraph'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: query_execution_inputs_and_outputs
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts/{artifactsId}:queryArtifactLineageSubgraph':
    parameters: *ref_1
    get:
      description: Retrieves lineage of an Artifact represented through Artifacts and Executions connected by Event edges and returned as a LineageSubgraph.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.queryArtifactLineageSubgraph
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1LineageSubgraph'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: maxHops
          schema:
            type: integer
      x-stackQL-resource: artifacts
      x-stackQL-method: query_artifact_lineage_subgraph
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts/{artifactsId}':
    parameters: *ref_1
    delete:
      description: Deletes an Artifact.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: artifacts
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a stored Artifact.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: artifacts
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Retrieves a specific Artifact.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: artifactsId
          required: true
          schema:
            type: string
      x-stackQL-resource: artifacts
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts:purge':
    parameters: *ref_1
    post:
      description: Purges Artifacts.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PurgeArtifactsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: artifacts
      x-stackQL-method: purge
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/artifacts':
    parameters: *ref_1
    get:
      description: Lists Artifacts in the MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListArtifactsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: artifacts
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.artifacts
    post:
      description: Creates an Artifact associated with a MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Artifact'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: artifactId
          schema:
            type: string
      x-stackQL-resource: artifacts
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts':
    parameters: *ref_1
    post:
      description: Creates a Context associated with a MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.contexts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: contextId
          schema:
            type: string
      x-stackQL-resource: contexts
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Contexts on the MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.contexts.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListContextsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: contexts
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.contexts
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts:purge':
    parameters: *ref_1
    post:
      description: Purges Contexts.
      operationId: aiplatform.projects.locations.metadataStores.contexts.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PurgeContextsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: contexts
      x-stackQL-method: purge
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}':
    parameters: *ref_1
    get:
      description: Retrieves a specific Context.
      operationId: aiplatform.projects.locations.metadataStores.contexts.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contexts
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates a stored Context.
      operationId: aiplatform.projects.locations.metadataStores.contexts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Context'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: contexts
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a stored Context.
      operationId: aiplatform.projects.locations.metadataStores.contexts.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: contexts
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}:queryContextLineageSubgraph':
    parameters: *ref_1
    get:
      description: 'Retrieves Artifacts and Executions within the specified Context, connected by Event edges and returned as a LineageSubgraph.'
      operationId: aiplatform.projects.locations.metadataStores.contexts.queryContextLineageSubgraph
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1LineageSubgraph'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contexts
      x-stackQL-method: query_context_lineage_subgraph
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}:addContextArtifactsAndExecutions':
    parameters: *ref_1
    post:
      description: 'Adds a set of Artifacts and Executions to a Context. If any of the Artifacts or Executions have already been added to a Context, they are simply skipped.'
      operationId: aiplatform.projects.locations.metadataStores.contexts.addContextArtifactsAndExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contexts_context_artifacts_and_executions
      x-stackQL-method: add_context_artifacts_and_executions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}:removeContextChildren':
    parameters: *ref_1
    post:
      description: 'Remove a set of children contexts from a parent Context. If any of the child Contexts were NOT added to the parent Context, they are simply skipped.'
      operationId: aiplatform.projects.locations.metadataStores.contexts.removeContextChildren
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1RemoveContextChildrenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1RemoveContextChildrenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contexts_context_children
      x-stackQL-method: remove_context_children
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/contexts/{contextsId}:addContextChildren':
    parameters: *ref_1
    post:
      description: 'Adds a set of Contexts as children to a parent Context. If any of the child Contexts have already been added to the parent Context, they are simply skipped. If this call would create a cycle or cause any Context to have more than 10 parents, the request will fail with an INVALID_ARGUMENT error.'
      operationId: aiplatform.projects.locations.metadataStores.contexts.addContextChildren
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1AddContextChildrenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1AddContextChildrenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: contextsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contexts_context_children
      x-stackQL-method: add_context_children
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/metadataSchemas':
    parameters: *ref_1
    post:
      description: Creates a MetadataSchema.
      operationId: aiplatform.projects.locations.metadataStores.metadataSchemas.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataSchema'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataSchema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: metadataSchemaId
          schema:
            type: string
      x-stackQL-resource: metadata_schemas
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists MetadataSchemas.
      operationId: aiplatform.projects.locations.metadataStores.metadataSchemas.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListMetadataSchemasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: metadata_schemas
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.metadataSchemas
  '/v1/projects/{projectsId}/locations/{locationsId}/metadataStores/{metadataStoresId}/metadataSchemas/{metadataSchemasId}':
    parameters: *ref_1
    get:
      description: Retrieves a specific MetadataSchema.
      operationId: aiplatform.projects.locations.metadataStores.metadataSchemas.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1MetadataSchema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: metadataSchemasId
          required: true
          schema:
            type: string
      x-stackQL-resource: metadata_schemas
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/indexes':
    parameters: *ref_1
    get:
      description: Lists Indexes in a Location.
      operationId: aiplatform.projects.locations.indexes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListIndexesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: indexes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.indexes
    post:
      description: Creates an Index.
      operationId: aiplatform.projects.locations.indexes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Index'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: indexes
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}':
    parameters: *ref_1
    patch:
      description: Updates an Index.
      operationId: aiplatform.projects.locations.indexes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Index'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: indexes
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets an Index.
      operationId: aiplatform.projects.locations.indexes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Index'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
      x-stackQL-resource: indexes
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes an Index. An Index can only be deleted when all its DeployedIndexes had been undeployed.
      operationId: aiplatform.projects.locations.indexes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
      x-stackQL-resource: indexes
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}:removeDatapoints':
    parameters: *ref_1
    post:
      description: Remove Datapoints from an Index.
      operationId: aiplatform.projects.locations.indexes.removeDatapoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1RemoveDatapointsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1RemoveDatapointsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
      x-stackQL-resource: indexes_datapoints
      x-stackQL-method: remove_datapoints
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}:upsertDatapoints':
    parameters: *ref_1
    post:
      description: Add/update Datapoints into an Index.
      operationId: aiplatform.projects.locations.indexes.upsertDatapoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1UpsertDatapointsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1UpsertDatapointsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
      x-stackQL-resource: indexes
      x-stackQL-method: upsert_datapoints
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.indexes.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.indexes.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.indexes.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.indexes.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/indexes/{indexesId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.indexes.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments':
    parameters: *ref_1
    get:
      description: Lists TensorboardExperiments in a Location.
      operationId: aiplatform.projects.locations.tensorboards.experiments.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListTensorboardExperimentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tensorboardExperiments
    post:
      description: Creates a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: query
          name: tensorboardExperimentId
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}:write':
    parameters: *ref_1
    post:
      description: 'Write time series data points of multiple TensorboardTimeSeries in multiple TensorboardRun''s. If any data fail to be ingested, an error is returned.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-method: write
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}':
    parameters: *ref_1
    patch:
      description: Updates a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}:exportTensorboardTimeSeries':
    parameters: *ref_1
    post:
      description: Exports a TensorboardTimeSeries' data. Data is returned in paginated responses.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.exportTensorboardTimeSeries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-method: export_tensorboard_time_series
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries':
    parameters: *ref_1
    get:
      description: Lists TensorboardTimeSeries in a Location.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tensorboardTimeSeries
    post:
      description: Creates a TensorboardTimeSeries.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: tensorboardTimeSeriesId
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}:read':
    parameters: *ref_1
    get:
      description: 'Reads a TensorboardTimeSeries'' data. By default, if the number of data points stored is less than 1000, all data is returned. Otherwise, 1000 data points is randomly selected from this time series and returned. This value can be changed by changing max_data_points, which can''t be greater than 10k.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.read
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: query
          name: maxDataPoints
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-method: read
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}':
    parameters: *ref_1
    patch:
      description: Updates a TensorboardTimeSeries.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a TensorboardTimeSeries.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a TensorboardTimeSeries.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries:batchRead':
    parameters: *ref_1
    get:
      description: 'Reads multiple TensorboardTimeSeries'' data. The data point number limit is 1000 for scalars, 100 for tensors and blob references. If the number of data points stored is less than the limit, all data is returned. Otherwise, the number limit of data points is randomly selected from this time series and returned.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.batchRead
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: timeSeries
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-method: batch_read
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries:batchCreate':
    parameters: *ref_1
    post:
      description: Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-method: batch_create
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}:readBlobData':
    parameters: *ref_1
    get:
      description: Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in consumer project's Cloud Storage bucket without users having to obtain Cloud Storage access permission.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.readBlobData
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: query
          name: blobIds
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-method: read_blob_data
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}/timeSeries/{timeSeriesId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: timeSeriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}:write':
    parameters: *ref_1
    post:
      description: 'Write time series data points into multiple TensorboardTimeSeries under a TensorboardRun. If any data fail to be ingested, an error is returned.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1WriteTensorboardRunDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1WriteTensorboardRunDataResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: write
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs':
    parameters: *ref_1
    post:
      description: Creates a TensorboardRun.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: query
          name: tensorboardRunId
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists TensorboardRuns in a Location.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListTensorboardRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tensorboardRuns
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs/{runsId}':
    parameters: *ref_1
    patch:
      description: Updates a TensorboardRun.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a TensorboardRun.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a TensorboardRun.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TensorboardRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/runs:batchCreate':
    parameters: *ref_1
    post:
      description: Batch create TensorboardRuns.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: batch_create
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.tensorboards.experiments.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/experiments/{experimentsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.tensorboards.experiments.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.tensorboards.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.tensorboards.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.tensorboards.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.tensorboards.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.tensorboards.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}':
    parameters: *ref_1
    patch:
      description: Updates a Tensorboard.
      operationId: aiplatform.projects.locations.tensorboards.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensorboard'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tensorboards
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a Tensorboard.
      operationId: aiplatform.projects.locations.tensorboards.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensorboard'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tensorboards
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a Tensorboard.
      operationId: aiplatform.projects.locations.tensorboards.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tensorboards
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards':
    parameters: *ref_1
    post:
      description: Creates a Tensorboard.
      operationId: aiplatform.projects.locations.tensorboards.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Tensorboard'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tensorboards
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Tensorboards in a Location.
      operationId: aiplatform.projects.locations.tensorboards.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListTensorboardsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: tensorboards
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tensorboards
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}:readUsage':
    parameters: *ref_1
    get:
      description: Returns a list of monthly active users for a given TensorBoard instance.
      operationId: aiplatform.projects.locations.tensorboards.readUsage
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardUsageResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tensorboards
      x-stackQL-method: read_usage
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/tensorboards/{tensorboardsId}:readSize':
    parameters: *ref_1
    get:
      description: Returns the storage size for a given TensorBoard instance.
      operationId: aiplatform.projects.locations.tensorboards.readSize
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardSizeResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tensorboardsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tensorboards
      x-stackQL-method: read_size
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies':
    parameters: *ref_1
    get:
      description: Lists all the studies in a region for an associated project.
      operationId: aiplatform.projects.locations.studies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListStudiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: studies
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.studies
    post:
      description: Creates a Study. A resource name will be generated after creation of the Study.
      operationId: aiplatform.projects.locations.studies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Study'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Study'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: studies
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/studies:lookup':
    parameters: *ref_1
    post:
      description: Looks a study up using the user-defined display_name field instead of the fully qualified resource name.
      operationId: aiplatform.projects.locations.studies.lookup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1LookupStudyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Study'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: studies
      x-stackQL-method: lookup
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}':
    parameters: *ref_1
    get:
      description: Gets a Study by name.
      operationId: aiplatform.projects.locations.studies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Study'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: studies
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a Study.
      operationId: aiplatform.projects.locations.studies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: studies
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.studies.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.studies.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.studies.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.studies.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.studies.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.studies.trials.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.studies.trials.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.studies.trials.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.studies.trials.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.studies.trials.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials:suggest':
    parameters: *ref_1
    post:
      description: 'Adds one or more Trials to a Study, with parameter values suggested by Vertex AI Vizier. Returns a long-running operation associated with the generation of Trial suggestions. When this long-running operation succeeds, it will contain a SuggestTrialsResponse.'
      operationId: aiplatform.projects.locations.studies.trials.suggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1SuggestTrialsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: trials
      x-stackQL-method: suggest
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}':
    parameters: *ref_1
    delete:
      description: Deletes a Trial.
      operationId: aiplatform.projects.locations.studies.trials.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
      x-stackQL-resource: trials
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a Trial.
      operationId: aiplatform.projects.locations.studies.trials.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
      x-stackQL-resource: trials
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials:listOptimalTrials':
    parameters: *ref_1
    post:
      description: 'Lists the pareto-optimal Trials for multi-objective Study or the optimal Trials for single-objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency'
      operationId: aiplatform.projects.locations.studies.trials.listOptimalTrials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ListOptimalTrialsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListOptimalTrialsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: trials_optimal_trials
      x-stackQL-method: list_optimal_trials
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials':
    parameters: *ref_1
    post:
      description: Adds a user provided Trial to a Study.
      operationId: aiplatform.projects.locations.studies.trials.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: trials
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists the Trials associated with a Study.
      operationId: aiplatform.projects.locations.studies.trials.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListTrialsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: trials
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.trials
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:addTrialMeasurement':
    parameters: *ref_1
    post:
      description: Adds a measurement of the objective metrics to a Trial. This measurement is assumed to have been taken before the Trial is complete.
      operationId: aiplatform.projects.locations.studies.trials.addTrialMeasurement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1AddTrialMeasurementRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
      x-stackQL-resource: trials_trial_measurement
      x-stackQL-method: add_trial_measurement
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:checkTrialEarlyStoppingState':
    parameters: *ref_1
    post:
      description: 'Checks whether a Trial should stop or not. Returns a long-running operation. When the operation is successful, it will contain a CheckTrialEarlyStoppingStateResponse.'
      operationId: aiplatform.projects.locations.studies.trials.checkTrialEarlyStoppingState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
      x-stackQL-resource: trials
      x-stackQL-method: check_trial_early_stopping_state
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:stop':
    parameters: *ref_1
    post:
      description: Stops a Trial.
      operationId: aiplatform.projects.locations.studies.trials.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1StopTrialRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
      x-stackQL-resource: trials
      x-stackQL-method: stop
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/studies/{studiesId}/trials/{trialsId}:complete':
    parameters: *ref_1
    post:
      description: Marks a Trial as complete.
      operationId: aiplatform.projects.locations.studies.trials.complete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CompleteTrialRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Trial'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: studiesId
          required: true
          schema:
            type: string
        - in: path
          name: trialsId
          required: true
          schema:
            type: string
      x-stackQL-resource: trials
      x-stackQL-method: complete
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.customJobs.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.customJobs.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.customJobs.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.customJobs.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.customJobs.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/customJobs':
    parameters: *ref_1
    get:
      description: Lists CustomJobs in a Location.
      operationId: aiplatform.projects.locations.customJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListCustomJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: custom_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.customJobs
    post:
      description: Creates a CustomJob. A created CustomJob right away will be attempted to be run.
      operationId: aiplatform.projects.locations.customJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Cancels a CustomJob. Starts asynchronous cancellation on the CustomJob. The server makes a best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetCustomJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On successful cancellation, the CustomJob is not deleted; instead it becomes a job with a CustomJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and CustomJob.state is set to `CANCELLED`.'
      operationId: aiplatform.projects.locations.customJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CancelCustomJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_jobs
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}':
    parameters: *ref_1
    get:
      description: Gets a CustomJob.
      operationId: aiplatform.projects.locations.customJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1CustomJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_jobs
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a CustomJob.
      operationId: aiplatform.projects.locations.customJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools/{deploymentResourcePoolsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.deploymentResourcePools.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools/{deploymentResourcePoolsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.deploymentResourcePools.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.deploymentResourcePools.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools/{deploymentResourcePoolsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.deploymentResourcePools.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/deploymentResourcePools/{deploymentResourcePoolsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.deploymentResourcePools.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentResourcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migratableResources:batchMigrate':
    parameters: *ref_1
    post:
      description: 'Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and datalabeling.googleapis.com to Vertex AI.'
      operationId: aiplatform.projects.locations.migratableResources.batchMigrate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchMigrateResourcesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migratable_resources
      x-stackQL-method: batch_migrate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migratableResources:search':
    parameters: *ref_1
    post:
      description: 'Searches all of the resources in automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com that can be migrated to Vertex AI''s given location.'
      operationId: aiplatform.projects.locations.migratableResources.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1SearchMigratableResourcesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1SearchMigratableResourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migratable_resources
      x-stackQL-method: search
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migratableResources/{migratableResourcesId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.migratableResources.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migratableResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migratableResources/{migratableResourcesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.migratableResources.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migratableResourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/migratableResources/{migratableResourcesId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.migratableResources.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migratableResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/migratableResources/{migratableResourcesId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.migratableResources.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migratableResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.migratableResources.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migratableResourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}':
    parameters: *ref_1
    get:
      description: Gets a HyperparameterTuningJob
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: hyperparameter_tuning_jobs
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a HyperparameterTuningJob.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: hyperparameter_tuning_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Cancels a HyperparameterTuningJob. Starts asynchronous cancellation on the HyperparameterTuningJob. The server makes a best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetHyperparameterTuningJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On successful cancellation, the HyperparameterTuningJob is not deleted; instead it becomes a job with a HyperparameterTuningJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and HyperparameterTuningJob.state is set to `CANCELLED`.'
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hyperparameterTuningJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: hyperparameter_tuning_jobs
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs':
    parameters: *ref_1
    post:
      description: Creates a HyperparameterTuningJob
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: hyperparameter_tuning_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists HyperparameterTuningJobs in a Location.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: hyperparameter_tuning_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.hyperparameterTuningJobs
  '/v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}:resume':
    parameters: *ref_1
    post:
      description: 'Resumes a paused Schedule to start scheduling new runs. Will mark Schedule.state to ''ACTIVE''. Only paused Schedule can be resumed. When the Schedule is resumed, new runs will be scheduled starting from the next execution time after the current time based on the time_specification in the Schedule. If Schedule.catchUp is set up true, all missed runs will be scheduled for backfill first.'
      operationId: aiplatform.projects.locations.schedules.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ResumeScheduleRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-method: resume
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}':
    parameters: *ref_1
    delete:
      description: Deletes a Schedule.
      operationId: aiplatform.projects.locations.schedules.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a Schedule.
      operationId: aiplatform.projects.locations.schedules.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: 'Updates an active or paused Schedule. When the Schedule is updated, new runs will be scheduled starting from the updated next execution time after the update time based on the time_specification in the updated Schedule. All unstarted runs before the update time will be skipped while already created runs will NOT be paused or canceled.'
      operationId: aiplatform.projects.locations.schedules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}:pause':
    parameters: *ref_1
    post:
      description: 'Pauses a Schedule. Will mark Schedule.state to ''PAUSED''. If the schedule is paused, no new runs will be created. Already created runs will NOT be paused or canceled.'
      operationId: aiplatform.projects.locations.schedules.pause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PauseScheduleRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-method: pause
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/schedules':
    parameters: *ref_1
    post:
      description: Creates a Schedule.
      operationId: aiplatform.projects.locations.schedules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Schedule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Schedules in a Location.
      operationId: aiplatform.projects.locations.schedules.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListSchedulesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.schedules
  '/v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.schedules.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.schedules.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.schedules.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.schedules.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.schedules.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs/{batchPredictionJobsId}':
    parameters: *ref_1
    get:
      description: Gets a BatchPredictionJob
      operationId: aiplatform.projects.locations.batchPredictionJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: batchPredictionJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: batch_prediction_jobs
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a BatchPredictionJob. Can only be called on jobs that already finished.
      operationId: aiplatform.projects.locations.batchPredictionJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: batchPredictionJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: batch_prediction_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs/{batchPredictionJobsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Cancels a BatchPredictionJob. Starts asynchronous cancellation on the BatchPredictionJob. The server makes the best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetBatchPredictionJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On a successful cancellation, the BatchPredictionJob is not deleted;instead its BatchPredictionJob.state is set to `CANCELLED`. Any files already outputted by the job are not deleted.'
      operationId: aiplatform.projects.locations.batchPredictionJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CancelBatchPredictionJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: batchPredictionJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: batch_prediction_jobs
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs':
    parameters: *ref_1
    get:
      description: Lists BatchPredictionJobs in a Location.
      operationId: aiplatform.projects.locations.batchPredictionJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListBatchPredictionJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: batch_prediction_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.batchPredictionJobs
    post:
      description: Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to start.
      operationId: aiplatform.projects.locations.batchPredictionJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: batch_prediction_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/nasJobs/{nasJobsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Cancels a NasJob. Starts asynchronous cancellation on the NasJob. The server makes a best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetNasJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On successful cancellation, the NasJob is not deleted; instead it becomes a job with a NasJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and NasJob.state is set to `CANCELLED`.'
      operationId: aiplatform.projects.locations.nasJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CancelNasJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nasJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: nas_jobs
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/nasJobs/{nasJobsId}':
    parameters: *ref_1
    delete:
      description: Deletes a NasJob.
      operationId: aiplatform.projects.locations.nasJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nasJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: nas_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a NasJob
      operationId: aiplatform.projects.locations.nasJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nasJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: nas_jobs
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/nasJobs':
    parameters: *ref_1
    get:
      description: Lists NasJobs in a Location.
      operationId: aiplatform.projects.locations.nasJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListNasJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: nas_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.nasJobs
    post:
      description: Creates a NasJob
      operationId: aiplatform.projects.locations.nasJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1NasJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: nas_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/nasJobs/{nasJobsId}/nasTrialDetails':
    parameters: *ref_1
    get:
      description: List top NasTrialDetails of a NasJob.
      operationId: aiplatform.projects.locations.nasJobs.nasTrialDetails.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListNasTrialDetailsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nasJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: nas_trial_details
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.nasTrialDetails
  '/v1/projects/{projectsId}/locations/{locationsId}/nasJobs/{nasJobsId}/nasTrialDetails/{nasTrialDetailsId}':
    parameters: *ref_1
    get:
      description: Gets a NasTrialDetail.
      operationId: aiplatform.projects.locations.nasJobs.nasTrialDetails.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1NasTrialDetail'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nasJobsId
          required: true
          schema:
            type: string
        - in: path
          name: nasTrialDetailsId
          required: true
          schema:
            type: string
      x-stackQL-resource: nas_trial_details
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}':
    parameters: *ref_1
    get:
      description: Gets a DataLabelingJob.
      operationId: aiplatform.projects.locations.dataLabelingJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_labeling_jobs
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a DataLabelingJob.
      operationId: aiplatform.projects.locations.dataLabelingJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_labeling_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}:cancel':
    parameters: *ref_1
    post:
      description: Cancels a DataLabelingJob. Success of cancellation is not guaranteed.
      operationId: aiplatform.projects.locations.dataLabelingJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CancelDataLabelingJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_labeling_jobs
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs':
    parameters: *ref_1
    get:
      description: Lists DataLabelingJobs in a Location.
      operationId: aiplatform.projects.locations.dataLabelingJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListDataLabelingJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: data_labeling_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.dataLabelingJobs
    post:
      description: Creates a DataLabelingJob.
      operationId: aiplatform.projects.locations.dataLabelingJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_labeling_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.dataLabelingJobs.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.dataLabelingJobs.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.dataLabelingJobs.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.dataLabelingJobs.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.dataLabelingJobs.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataLabelingJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}':
    parameters: *ref_1
    delete:
      description: Deletes a Model. A model cannot be deleted if any Endpoint resource has a DeployedModel based on the model in its deployed_models field.
      operationId: aiplatform.projects.locations.models.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a Model.
      operationId: aiplatform.projects.locations.models.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a Model.
      operationId: aiplatform.projects.locations.models.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:updateExplanationDataset':
    parameters: *ref_1
    post:
      description: Incrementally update the dataset used for an examples model.
      operationId: aiplatform.projects.locations.models.updateExplanationDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1UpdateExplanationDatasetRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models_explanation_dataset
      x-stackQL-method: update_explanation_dataset
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models:copy':
    parameters: *ref_1
    post:
      description: 'Copies an already existing Vertex AI Model into the specified Location. The source Model must exist in the same Project. When copying custom Models, the users themselves are responsible for Model.metadata content to be region-agnostic, as well as making sure that any resources (e.g. files) it depends on remain accessible.'
      operationId: aiplatform.projects.locations.models.copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CopyModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: copy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models:upload':
    parameters: *ref_1
    post:
      description: Uploads a Model artifact into Vertex AI.
      operationId: aiplatform.projects.locations.models.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1UploadModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: upload
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:export':
    parameters: *ref_1
    post:
      description: 'Exports a trained, exportable Model to a location specified by the user. A Model is considered to be exportable if it has at least one supported export format.'
      operationId: aiplatform.projects.locations.models.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:mergeVersionAliases':
    parameters: *ref_1
    post:
      description: Merges a set of aliases for a Model version.
      operationId: aiplatform.projects.locations.models.mergeVersionAliases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1MergeVersionAliasesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Model'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: merge_version_aliases
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:listVersions':
    parameters: *ref_1
    get:
      description: Lists versions of the specified model.
      operationId: aiplatform.projects.locations.models.listVersions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListModelVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: models_versions
      x-stackQL-method: list_versions
      x-stackQL-verb: select
      x-stackQL-objectKey: $.models
  '/v1/projects/{projectsId}/locations/{locationsId}/models':
    parameters: *ref_1
    get:
      description: Lists Models in a Location.
      operationId: aiplatform.projects.locations.models.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.models
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:deleteVersion':
    parameters: *ref_1
    delete:
      description: Deletes a Model version. Model version can only be deleted if there are no DeployedModels created from it. Deleting the only version in the Model is not allowed. Use DeleteModel for deleting the Model instead.
      operationId: aiplatform.projects.locations.models.deleteVersion
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models_version
      x-stackQL-method: delete_version
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations':
    parameters: *ref_1
    get:
      description: Lists ModelEvaluations in a Model.
      operationId: aiplatform.projects.locations.models.evaluations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListModelEvaluationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: evaluations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.modelEvaluations
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}':
    parameters: *ref_1
    get:
      description: Gets a ModelEvaluation.
      operationId: aiplatform.projects.locations.models.evaluations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: evaluations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations:import':
    parameters: *ref_1
    post:
      description: Imports an externally generated ModelEvaluation.
      operationId: aiplatform.projects.locations.models.evaluations.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ImportModelEvaluationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: evaluations
      x-stackQL-method: import
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/slices/{slicesId}:batchImport':
    parameters: *ref_1
    post:
      description: Imports a list of externally generated EvaluatedAnnotations.
      operationId: aiplatform.projects.locations.models.evaluations.slices.batchImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: slicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: slices
      x-stackQL-method: batch_import
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/slices':
    parameters: *ref_1
    get:
      description: Lists ModelEvaluationSlices in a ModelEvaluation.
      operationId: aiplatform.projects.locations.models.evaluations.slices.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: slices
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.modelEvaluationSlices
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/slices/{slicesId}':
    parameters: *ref_1
    get:
      description: Gets a ModelEvaluationSlice.
      operationId: aiplatform.projects.locations.models.evaluations.slices.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSlice'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: slicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: slices
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.models.evaluations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.models.evaluations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.models.evaluations.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.models.evaluations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.models.evaluations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.models.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.models.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.models.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.models.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.models.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}':
    parameters: *ref_1
    get:
      description: Gets a TrainingPipeline.
      operationId: aiplatform.projects.locations.trainingPipelines.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: training_pipelines
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a TrainingPipeline.
      operationId: aiplatform.projects.locations.trainingPipelines.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: training_pipelines
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines':
    parameters: *ref_1
    post:
      description: Creates a TrainingPipeline. A created TrainingPipeline right away will be attempted to be run.
      operationId: aiplatform.projects.locations.trainingPipelines.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: training_pipelines
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists TrainingPipelines in a Location.
      operationId: aiplatform.projects.locations.trainingPipelines.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListTrainingPipelinesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: training_pipelines
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.trainingPipelines
  '/v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}:cancel':
    parameters: *ref_1
    post:
      description: 'Cancels a TrainingPipeline. Starts asynchronous cancellation on the TrainingPipeline. The server makes a best effort to cancel the pipeline, but success is not guaranteed. Clients can use PipelineService.GetTrainingPipeline or other methods to check whether the cancellation succeeded or whether the pipeline completed despite cancellation. On successful cancellation, the TrainingPipeline is not deleted; instead it becomes a pipeline with a TrainingPipeline.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and TrainingPipeline.state is set to `CANCELLED`.'
      operationId: aiplatform.projects.locations.trainingPipelines.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1CancelTrainingPipelineRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: training_pipelines
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.trainingPipelines.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.trainingPipelines.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.trainingPipelines.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.trainingPipelines.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.trainingPipelines.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: trainingPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs':
    parameters: *ref_1
    get:
      description: Lists ModelDeploymentMonitoringJobs in a Location.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: model_deployment_monitoring_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.modelDeploymentMonitoringJobs
    post:
      description: Creates a ModelDeploymentMonitoringJob. It will run periodically on a configured interval.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: model_deployment_monitoring_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}:searchModelDeploymentMonitoringStatsAnomalies':
    parameters: *ref_1
    post:
      description: Searches Model Monitoring Statistics generated within a given time window.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.searchModelDeploymentMonitoringStatsAnomalies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: model_deployment_monitoring_jobs
      x-stackQL-method: search_model_deployment_monitoring_stats_anomalies
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}':
    parameters: *ref_1
    delete:
      description: Deletes a ModelDeploymentMonitoringJob.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: model_deployment_monitoring_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a ModelDeploymentMonitoringJob.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: model_deployment_monitoring_jobs
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a ModelDeploymentMonitoringJob.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: model_deployment_monitoring_jobs
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}:pause':
    parameters: *ref_1
    post:
      description: 'Pauses a ModelDeploymentMonitoringJob. If the job is running, the server makes a best effort to cancel the job. Will mark ModelDeploymentMonitoringJob.state to ''PAUSED''.'
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.pause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: model_deployment_monitoring_jobs
      x-stackQL-method: pause
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}:resume':
    parameters: *ref_1
    post:
      description: Resumes a paused ModelDeploymentMonitoringJob. It will start to run from next scheduled time. A deleted ModelDeploymentMonitoringJob can't be resumed.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: model_deployment_monitoring_jobs
      x-stackQL-method: resume
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/modelDeploymentMonitoringJobs/{modelDeploymentMonitoringJobsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelDeploymentMonitoringJobsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets':
    parameters: *ref_1
    post:
      description: Creates a Dataset.
      operationId: aiplatform.projects.locations.datasets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Datasets in a Location.
      operationId: aiplatform.projects.locations.datasets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListDatasetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.datasets
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:searchDataItems':
    parameters: *ref_1
    get:
      description: Searches DataItems in a Dataset.
      operationId: aiplatform.projects.locations.datasets.searchDataItems
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1SearchDataItemsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: annotationsLimit
          schema:
            type: integer
        - in: query
          name: annotationFilters
          schema:
            type: string
        - in: query
          name: orderByAnnotation.savedQuery
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderByDataItem
          schema:
            type: string
        - in: query
          name: dataItemFilter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: savedQuery
          schema:
            type: string
        - in: query
          name: orderByAnnotation.orderBy
          schema:
            type: string
        - in: query
          name: dataLabelingJob
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
        - in: query
          name: annotationsFilter
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: search_data_items
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}':
    parameters: *ref_1
    patch:
      description: Updates a Dataset.
      operationId: aiplatform.projects.locations.datasets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a Dataset.
      operationId: aiplatform.projects.locations.datasets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Dataset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a Dataset.
      operationId: aiplatform.projects.locations.datasets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:import':
    parameters: *ref_1
    post:
      description: Imports data into a Dataset.
      operationId: aiplatform.projects.locations.datasets.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ImportDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: import
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:export':
    parameters: *ref_1
    post:
      description: Exports data from a Dataset.
      operationId: aiplatform.projects.locations.datasets.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ExportDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries/{savedQueriesId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.datasets.savedQueries.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries/{savedQueriesId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.datasets.savedQueries.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.datasets.savedQueries.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries/{savedQueriesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.datasets.savedQueries.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries/{savedQueriesId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.datasets.savedQueries.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries':
    parameters: *ref_1
    get:
      description: Lists SavedQueries in a Dataset.
      operationId: aiplatform.projects.locations.datasets.savedQueries.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListSavedQueriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: saved_queries
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.savedQueries
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/savedQueries/{savedQueriesId}':
    parameters: *ref_1
    delete:
      description: Deletes a SavedQuery.
      operationId: aiplatform.projects.locations.datasets.savedQueries.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: saved_queries
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems':
    parameters: *ref_1
    get:
      description: Lists DataItems in a Dataset.
      operationId: aiplatform.projects.locations.datasets.dataItems.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListDataItemsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: data_items
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.dataItems
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.datasets.dataItems.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.datasets.dataItems.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.datasets.dataItems.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.datasets.dataItems.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.datasets.dataItems.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations':
    parameters: *ref_1
    get:
      description: Lists Annotations belongs to a dataitem
      operationId: aiplatform.projects.locations.datasets.dataItems.annotations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListAnnotationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.annotations
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations/{annotationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.datasets.dataItems.annotations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.datasets.dataItems.annotations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations/{annotationsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.datasets.dataItems.annotations.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations/{annotationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.datasets.dataItems.annotations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations/{annotationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.datasets.dataItems.annotations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: dataItemsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.datasets.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.datasets.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.datasets.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.datasets.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.datasets.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}':
    parameters: *ref_1
    get:
      description: Gets an AnnotationSpec.
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1AnnotationSpec'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: annotation_specs
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.datasets.annotationSpecs.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: annotationSpecsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints':
    parameters: *ref_1
    post:
      description: Creates an Endpoint.
      operationId: aiplatform.projects.locations.endpoints.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Endpoint'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: endpointId
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Endpoints in a Location.
      operationId: aiplatform.projects.locations.endpoints.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListEndpointsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.endpoints
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:explain':
    parameters: *ref_1
    post:
      description: 'Perform an online explanation. If deployed_model_id is specified, the corresponding DeployModel must have explanation_spec populated. If deployed_model_id is not specified, all DeployedModels must have explanation_spec populated.'
      operationId: aiplatform.projects.locations.endpoints.explain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplainRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ExplainResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: explain
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}':
    parameters: *ref_1
    patch:
      description: Updates an Endpoint.
      operationId: aiplatform.projects.locations.endpoints.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1Endpoint'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Endpoint'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets an Endpoint.
      operationId: aiplatform.projects.locations.endpoints.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1Endpoint'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes an Endpoint.
      operationId: aiplatform.projects.locations.endpoints.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:predict':
    parameters: *ref_1
    post:
      description: Perform an online prediction.
      operationId: aiplatform.projects.locations.endpoints.predict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1PredictResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: predict
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:deployModel':
    parameters: *ref_1
    post:
      description: 'Deploys a Model into this Endpoint, creating a DeployedModel within it.'
      operationId: aiplatform.projects.locations.endpoints.deployModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1DeployModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: deploy_model
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:serverStreamingPredict':
    parameters: *ref_1
    post:
      description: Perform a server-side streaming online prediction request for Vertex LLM streaming.
      operationId: aiplatform.projects.locations.endpoints.serverStreamingPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1StreamingPredictRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1StreamingPredictResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: server_streaming_predict
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:rawPredict':
    parameters: *ref_1
    post:
      description: 'Perform an online prediction with an arbitrary HTTP payload. The response includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint''s DeployedModel that served this prediction.'
      operationId: aiplatform.projects.locations.endpoints.rawPredict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1RawPredictRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: raw_predict
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:undeployModel':
    parameters: *ref_1
    post:
      description: 'Undeploys a Model from an Endpoint, removing a DeployedModel from it, and freeing all resources it''s using.'
      operationId: aiplatform.projects.locations.endpoints.undeployModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1UndeployModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: undeploy_model
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:mutateDeployedModel':
    parameters: *ref_1
    post:
      description: 'Updates an existing deployed model. Updatable fields include `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`, `disable_container_logging` (v1 only), and `enable_container_logging` (v1beta1 only).'
      operationId: aiplatform.projects.locations.endpoints.mutateDeployedModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1MutateDeployedModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-method: mutate_deployed_model
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.endpoints.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.endpoints.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.endpoints.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.endpoints.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.endpoints.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.specialistPools.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: aiplatform.projects.locations.specialistPools.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: aiplatform.projects.locations.specialistPools.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: aiplatform.projects.locations.specialistPools.operations.wait
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: timeout
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: aiplatform.projects.locations.specialistPools.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/specialistPools':
    parameters: *ref_1
    get:
      description: Lists SpecialistPools in a Location.
      operationId: aiplatform.projects.locations.specialistPools.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1ListSpecialistPoolsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: specialist_pools
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.specialistPools
    post:
      description: Creates a SpecialistPool.
      operationId: aiplatform.projects.locations.specialistPools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1SpecialistPool'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: specialist_pools
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}':
    parameters: *ref_1
    get:
      description: Gets a SpecialistPool.
      operationId: aiplatform.projects.locations.specialistPools.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudAiplatformV1SpecialistPool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: specialist_pools
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a SpecialistPool as well as all Specialists in the pool.
      operationId: aiplatform.projects.locations.specialistPools.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: specialist_pools
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a SpecialistPool.
      operationId: aiplatform.projects.locations.specialistPools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudAiplatformV1SpecialistPool'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: specialistPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: specialist_pools
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: aiplatform.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: aiplatform.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
