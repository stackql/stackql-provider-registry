openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: KMS Inventory API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230812'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://cloud.google.com/kms/'
servers:
  - url: 'https://kmsinventory.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudKmsV1ExternalProtectionLevelOptions:
      description: ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
      id: GoogleCloudKmsV1ExternalProtectionLevelOptions
      type: object
      properties:
        externalKeyUri:
          type: string
          description: The URI for an external resource that this CryptoKeyVersion represents.
        ekmConnectionKeyPath:
          description: 'The path to the external key material on the EKM when using EkmConnection e.g., "v0/my/key". Set this field instead of external_key_uri when using an EkmConnection.'
          type: string
    GoogleCloudKmsInventoryV1ProtectedResourcesSummary:
      properties:
        resourceCount:
          format: int64
          type: string
          description: The total number of protected resources in the same Cloud organization as the key.
        resourceTypes:
          type: object
          additionalProperties:
            format: int64
            type: string
          description: The number of resources protected by the key grouped by resource type.
        locations:
          description: The number of resources protected by the key grouped by region.
          additionalProperties:
            type: string
            format: int64
          type: object
        name:
          description: 'The full name of the ProtectedResourcesSummary resource. Example: projects/test-project/locations/us/keyRings/test-keyring/cryptoKeys/test-key/protectedResourcesSummary'
          type: string
        cloudProducts:
          type: object
          additionalProperties:
            format: int64
            type: string
          description: The number of resources protected by the key grouped by Cloud product.
        projectCount:
          format: int32
          description: The number of distinct Cloud projects in the same Cloud organization as the key that have resources protected by the key.
          type: integer
      description: Aggregate information about the resources protected by a Cloud KMS key in the same Cloud organization as the key.
      id: GoogleCloudKmsInventoryV1ProtectedResourcesSummary
      type: object
    GoogleCloudKmsV1CryptoKeyVersionTemplate:
      description: 'A CryptoKeyVersionTemplate specifies the properties to use when creating a new CryptoKeyVersion, either manually with CreateCryptoKeyVersion or automatically as a result of auto-rotation.'
      type: object
      properties:
        protectionLevel:
          enumDescriptions:
            - Not specified.
            - Crypto operations are performed in software.
            - Crypto operations are performed in a Hardware Security Module.
            - Crypto operations are performed by an external key manager.
            - Crypto operations are performed in an EKM-over-VPC backend.
          enum:
            - PROTECTION_LEVEL_UNSPECIFIED
            - SOFTWARE
            - HSM
            - EXTERNAL
            - EXTERNAL_VPC
          description: ProtectionLevel to use when creating a CryptoKeyVersion based on this template. Immutable. Defaults to SOFTWARE.
          type: string
        algorithm:
          description: 'Required. Algorithm to use when creating a CryptoKeyVersion based on this template. For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both this field is omitted and CryptoKey.purpose is ENCRYPT_DECRYPT.'
          enumDescriptions:
            - Not specified.
            - Creates symmetric encryption keys.
            - AES-GCM (Galois Counter Mode) using 128-bit keys.
            - AES-GCM (Galois Counter Mode) using 256-bit keys.
            - AES-CBC (Cipher Block Chaining Mode) using 128-bit keys.
            - AES-CBC (Cipher Block Chaining Mode) using 256-bit keys.
            - AES-CTR (Counter Mode) using 128-bit keys.
            - AES-CTR (Counter Mode) using 256-bit keys.
            - RSASSA-PSS 2048 bit key with a SHA256 digest.
            - RSASSA-PSS 3072 bit key with a SHA256 digest.
            - RSASSA-PSS 4096 bit key with a SHA256 digest.
            - RSASSA-PSS 4096 bit key with a SHA512 digest.
            - RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.
            - 'RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key.'
            - 'RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key.'
            - 'RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key.'
            - RSAES-OAEP 2048 bit key with a SHA256 digest.
            - RSAES-OAEP 3072 bit key with a SHA256 digest.
            - RSAES-OAEP 4096 bit key with a SHA256 digest.
            - RSAES-OAEP 4096 bit key with a SHA512 digest.
            - RSAES-OAEP 2048 bit key with a SHA1 digest.
            - RSAES-OAEP 3072 bit key with a SHA1 digest.
            - RSAES-OAEP 4096 bit key with a SHA1 digest.
            - 'ECDSA on the NIST P-256 curve with a SHA256 digest. Other hash functions can also be used: https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms'
            - 'ECDSA on the NIST P-384 curve with a SHA384 digest. Other hash functions can also be used: https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms'
            - 'ECDSA on the non-NIST secp256k1 curve. This curve is only supported for HSM protection level. Other hash functions can also be used: https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms'
            - HMAC-SHA256 signing with a 256 bit key.
            - HMAC-SHA1 signing with a 160 bit key.
            - HMAC-SHA384 signing with a 384 bit key.
            - HMAC-SHA512 signing with a 512 bit key.
            - HMAC-SHA224 signing with a 224 bit key.
            - Algorithm representing symmetric encryption by an external key manager.
          type: string
          enum:
            - CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED
            - GOOGLE_SYMMETRIC_ENCRYPTION
            - AES_128_GCM
            - AES_256_GCM
            - AES_128_CBC
            - AES_256_CBC
            - AES_128_CTR
            - AES_256_CTR
            - RSA_SIGN_PSS_2048_SHA256
            - RSA_SIGN_PSS_3072_SHA256
            - RSA_SIGN_PSS_4096_SHA256
            - RSA_SIGN_PSS_4096_SHA512
            - RSA_SIGN_PKCS1_2048_SHA256
            - RSA_SIGN_PKCS1_3072_SHA256
            - RSA_SIGN_PKCS1_4096_SHA256
            - RSA_SIGN_PKCS1_4096_SHA512
            - RSA_SIGN_RAW_PKCS1_2048
            - RSA_SIGN_RAW_PKCS1_3072
            - RSA_SIGN_RAW_PKCS1_4096
            - RSA_DECRYPT_OAEP_2048_SHA256
            - RSA_DECRYPT_OAEP_3072_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA512
            - RSA_DECRYPT_OAEP_2048_SHA1
            - RSA_DECRYPT_OAEP_3072_SHA1
            - RSA_DECRYPT_OAEP_4096_SHA1
            - EC_SIGN_P256_SHA256
            - EC_SIGN_P384_SHA384
            - EC_SIGN_SECP256K1_SHA256
            - HMAC_SHA256
            - HMAC_SHA1
            - HMAC_SHA384
            - HMAC_SHA512
            - HMAC_SHA224
            - EXTERNAL_SYMMETRIC_ENCRYPTION
      id: GoogleCloudKmsV1CryptoKeyVersionTemplate
    GoogleCloudKmsV1KeyOperationAttestationCertificateChains:
      id: GoogleCloudKmsV1KeyOperationAttestationCertificateChains
      type: object
      description: 'Certificate chains needed to verify the attestation. Certificates in chains are PEM-encoded and are ordered based on https://tools.ietf.org/html/rfc5246#section-7.4.2.'
      properties:
        caviumCerts:
          type: array
          items:
            type: string
          description: Cavium certificate chain corresponding to the attestation.
        googleCardCerts:
          items:
            type: string
          description: Google card certificate chain corresponding to the attestation.
          type: array
        googlePartitionCerts:
          description: Google partition certificate chain corresponding to the attestation.
          type: array
          items:
            type: string
    GoogleCloudKmsV1CryptoKey:
      type: object
      description: 'A CryptoKey represents a logical key that can be used for cryptographic operations. A CryptoKey is made up of zero or more versions, which represent the actual key material used in cryptographic operations.'
      properties:
        versionTemplate:
          $ref: '#/components/schemas/GoogleCloudKmsV1CryptoKeyVersionTemplate'
          description: A template describing settings for new CryptoKeyVersion instances. The properties of new CryptoKeyVersion instances created by either CreateCryptoKeyVersion or auto-rotation are controlled by this template.
        destroyScheduledDuration:
          format: google-duration
          type: string
          description: 'Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If not specified at creation time, the default duration is 24 hours.'
        primary:
          description: 'Output only. A copy of the "primary" CryptoKeyVersion that will be used by Encrypt when this CryptoKey is given in EncryptRequest.name. The CryptoKey''s primary version can be updated via UpdateCryptoKeyPrimaryVersion. Keys with purpose ENCRYPT_DECRYPT may have a primary. For other keys, this field will be omitted.'
          $ref: '#/components/schemas/GoogleCloudKmsV1CryptoKeyVersion'
          readOnly: true
        name:
          readOnly: true
          type: string
          description: Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
        cryptoKeyBackend:
          description: 'Immutable. The resource name of the backend environment where the key material for all CryptoKeyVersions associated with this CryptoKey reside and where all related cryptographic operations are performed. Only applicable if CryptoKeyVersions have a ProtectionLevel of EXTERNAL_VPC, with the resource name in the format `projects/*/locations/*/ekmConnections/*`. Note, this list is non-exhaustive and may apply to additional ProtectionLevels in the future.'
          type: string
        rotationPeriod:
          type: string
          format: google-duration
          description: 'next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.'
        labels:
          additionalProperties:
            type: string
          description: 'Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).'
          type: object
        importOnly:
          type: boolean
          description: Immutable. Whether this key may contain imported versions only.
        createTime:
          readOnly: true
          description: Output only. The time at which this CryptoKey was created.
          type: string
          format: google-datetime
        nextRotationTime:
          description: 'At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.'
          type: string
          format: google-datetime
        purpose:
          enumDescriptions:
            - Not specified.
            - CryptoKeys with this purpose may be used with Encrypt and Decrypt.
            - CryptoKeys with this purpose may be used with AsymmetricSign and GetPublicKey.
            - CryptoKeys with this purpose may be used with AsymmetricDecrypt and GetPublicKey.
            - CryptoKeys with this purpose may be used with RawEncrypt and RawDecrypt. This purpose is meant to be used for interoperable symmetric encryption and does not support automatic CryptoKey rotation.
            - CryptoKeys with this purpose may be used with MacSign.
          enum:
            - CRYPTO_KEY_PURPOSE_UNSPECIFIED
            - ENCRYPT_DECRYPT
            - ASYMMETRIC_SIGN
            - ASYMMETRIC_DECRYPT
            - RAW_ENCRYPT_DECRYPT
            - MAC
          type: string
          description: Immutable. The immutable purpose of this CryptoKey.
      id: GoogleCloudKmsV1CryptoKey
    GoogleCloudKmsInventoryV1ListCryptoKeysResponse:
      description: Response message for KeyDashboardService.ListCryptoKeys.
      type: object
      properties:
        nextPageToken:
          description: The page token returned from the previous response if the next page is desired.
          type: string
        cryptoKeys:
          items:
            $ref: '#/components/schemas/GoogleCloudKmsV1CryptoKey'
          description: The list of CryptoKeys.
          type: array
      id: GoogleCloudKmsInventoryV1ListCryptoKeysResponse
    GoogleCloudKmsInventoryV1ProtectedResource:
      properties:
        projectId:
          type: string
          description: The ID of the project that owns the resource.
        cryptoKeyVersion:
          type: string
          description: 'The name of the Cloud KMS [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions?hl=en) used to protect this resource via CMEK. This field is empty if the Google Cloud product owning the resource does not provide key version data to Asset Inventory. If there are multiple key versions protecting the resource, then this is same value as the first element of crypto_key_versions.'
        name:
          description: 'The full resource name of the resource. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.'
          type: string
        resourceType:
          description: 'Example: `compute.googleapis.com/Disk`'
          type: string
        createTime:
          description: Output only. The time at which this resource was created. The granularity is in seconds. Timestamp.nanos will always be 0.
          readOnly: true
          type: string
          format: google-datetime
        cloudProduct:
          type: string
          description: 'The Cloud product that owns the resource. Example: `compute`'
        location:
          type: string
          description: 'Location can be `global`, regional like `us-east1`, or zonal like `us-west1-b`.'
        labels:
          additionalProperties:
            type: string
          description: A key-value pair of the resource's labels (v1) to their values.
          type: object
        cryptoKeyVersions:
          type: array
          items:
            type: string
          description: 'The names of the Cloud KMS [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions?hl=en) used to protect this resource via CMEK. This field is empty if the Google Cloud product owning the resource does not provide key versions data to Asset Inventory. The first element of this field is stored in crypto_key_version.'
        project:
          type: string
          description: 'Format: `projects/{PROJECT_NUMBER}`.'
      type: object
      description: Metadata about a resource protected by a Cloud KMS key.
      id: GoogleCloudKmsInventoryV1ProtectedResource
    GoogleCloudKmsV1CryptoKeyVersion:
      id: GoogleCloudKmsV1CryptoKeyVersion
      description: 'A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.'
      properties:
        importJob:
          description: Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.
          type: string
          readOnly: true
        generationFailureReason:
          readOnly: true
          type: string
          description: Output only. The root cause of the most recent generation failure. Only present if state is GENERATION_FAILED.
        reimportEligible:
          readOnly: true
          type: boolean
          description: 'Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.'
        importFailureReason:
          type: string
          readOnly: true
          description: Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.
        name:
          readOnly: true
          description: Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
          type: string
        destroyTime:
          readOnly: true
          type: string
          description: Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.
          format: google-datetime
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time at which this CryptoKeyVersion was created.
        externalProtectionLevelOptions:
          $ref: '#/components/schemas/GoogleCloudKmsV1ExternalProtectionLevelOptions'
          description: ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
        protectionLevel:
          type: string
          readOnly: true
          description: Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
          enumDescriptions:
            - Not specified.
            - Crypto operations are performed in software.
            - Crypto operations are performed in a Hardware Security Module.
            - Crypto operations are performed by an external key manager.
            - Crypto operations are performed in an EKM-over-VPC backend.
          enum:
            - PROTECTION_LEVEL_UNSPECIFIED
            - SOFTWARE
            - HSM
            - EXTERNAL
            - EXTERNAL_VPC
        attestation:
          description: 'Output only. Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google. Only provided for key versions with protection_level HSM.'
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudKmsV1KeyOperationAttestation'
        generateTime:
          format: google-datetime
          type: string
          description: Output only. The time this CryptoKeyVersion's key material was generated.
          readOnly: true
        importTime:
          type: string
          format: google-datetime
          description: Output only. The time at which this CryptoKeyVersion's key material was most recently imported.
          readOnly: true
        destroyEventTime:
          readOnly: true
          type: string
          description: Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.
          format: google-datetime
        algorithm:
          enum:
            - CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED
            - GOOGLE_SYMMETRIC_ENCRYPTION
            - AES_128_GCM
            - AES_256_GCM
            - AES_128_CBC
            - AES_256_CBC
            - AES_128_CTR
            - AES_256_CTR
            - RSA_SIGN_PSS_2048_SHA256
            - RSA_SIGN_PSS_3072_SHA256
            - RSA_SIGN_PSS_4096_SHA256
            - RSA_SIGN_PSS_4096_SHA512
            - RSA_SIGN_PKCS1_2048_SHA256
            - RSA_SIGN_PKCS1_3072_SHA256
            - RSA_SIGN_PKCS1_4096_SHA256
            - RSA_SIGN_PKCS1_4096_SHA512
            - RSA_SIGN_RAW_PKCS1_2048
            - RSA_SIGN_RAW_PKCS1_3072
            - RSA_SIGN_RAW_PKCS1_4096
            - RSA_DECRYPT_OAEP_2048_SHA256
            - RSA_DECRYPT_OAEP_3072_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA512
            - RSA_DECRYPT_OAEP_2048_SHA1
            - RSA_DECRYPT_OAEP_3072_SHA1
            - RSA_DECRYPT_OAEP_4096_SHA1
            - EC_SIGN_P256_SHA256
            - EC_SIGN_P384_SHA384
            - EC_SIGN_SECP256K1_SHA256
            - HMAC_SHA256
            - HMAC_SHA1
            - HMAC_SHA384
            - HMAC_SHA512
            - HMAC_SHA224
            - EXTERNAL_SYMMETRIC_ENCRYPTION
          readOnly: true
          description: Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
          enumDescriptions:
            - Not specified.
            - Creates symmetric encryption keys.
            - AES-GCM (Galois Counter Mode) using 128-bit keys.
            - AES-GCM (Galois Counter Mode) using 256-bit keys.
            - AES-CBC (Cipher Block Chaining Mode) using 128-bit keys.
            - AES-CBC (Cipher Block Chaining Mode) using 256-bit keys.
            - AES-CTR (Counter Mode) using 128-bit keys.
            - AES-CTR (Counter Mode) using 256-bit keys.
            - RSASSA-PSS 2048 bit key with a SHA256 digest.
            - RSASSA-PSS 3072 bit key with a SHA256 digest.
            - RSASSA-PSS 4096 bit key with a SHA256 digest.
            - RSASSA-PSS 4096 bit key with a SHA512 digest.
            - RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.
            - 'RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key.'
            - 'RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key.'
            - 'RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key.'
            - RSAES-OAEP 2048 bit key with a SHA256 digest.
            - RSAES-OAEP 3072 bit key with a SHA256 digest.
            - RSAES-OAEP 4096 bit key with a SHA256 digest.
            - RSAES-OAEP 4096 bit key with a SHA512 digest.
            - RSAES-OAEP 2048 bit key with a SHA1 digest.
            - RSAES-OAEP 3072 bit key with a SHA1 digest.
            - RSAES-OAEP 4096 bit key with a SHA1 digest.
            - 'ECDSA on the NIST P-256 curve with a SHA256 digest. Other hash functions can also be used: https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms'
            - 'ECDSA on the NIST P-384 curve with a SHA384 digest. Other hash functions can also be used: https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms'
            - 'ECDSA on the non-NIST secp256k1 curve. This curve is only supported for HSM protection level. Other hash functions can also be used: https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms'
            - HMAC-SHA256 signing with a 256 bit key.
            - HMAC-SHA1 signing with a 160 bit key.
            - HMAC-SHA384 signing with a 384 bit key.
            - HMAC-SHA512 signing with a 512 bit key.
            - HMAC-SHA224 signing with a 224 bit key.
            - Algorithm representing symmetric encryption by an external key manager.
          type: string
        externalDestructionFailureReason:
          readOnly: true
          type: string
          description: Output only. The root cause of the most recent external destruction failure. Only present if state is EXTERNAL_DESTRUCTION_FAILED.
        state:
          enum:
            - CRYPTO_KEY_VERSION_STATE_UNSPECIFIED
            - PENDING_GENERATION
            - ENABLED
            - DISABLED
            - DESTROYED
            - DESTROY_SCHEDULED
            - PENDING_IMPORT
            - IMPORT_FAILED
            - GENERATION_FAILED
            - PENDING_EXTERNAL_DESTRUCTION
            - EXTERNAL_DESTRUCTION_FAILED
          type: string
          description: The current state of the CryptoKeyVersion.
          enumDescriptions:
            - Not specified.
            - 'This version is still being generated. It may not be used, enabled, disabled, or destroyed yet. Cloud KMS will automatically mark this version ENABLED as soon as the version is ready.'
            - This version may be used for cryptographic operations.
            - 'This version may not be used, but the key material is still available, and the version can be placed back into the ENABLED state.'
            - 'This version is destroyed, and the key material is no longer stored. This version may only become ENABLED again if this version is reimport_eligible and the original key material is reimported with a call to KeyManagementService.ImportCryptoKeyVersion.'
            - 'This version is scheduled for destruction, and will be destroyed soon. Call RestoreCryptoKeyVersion to put it back into the DISABLED state.'
            - 'This version is still being imported. It may not be used, enabled, disabled, or destroyed yet. Cloud KMS will automatically mark this version ENABLED as soon as the version is ready.'
            - 'This version was not imported successfully. It may not be used, enabled, disabled, or destroyed. The submitted key material has been discarded. Additional details can be found in CryptoKeyVersion.import_failure_reason.'
            - 'This version was not generated successfully. It may not be used, enabled, disabled, or destroyed. Additional details can be found in CryptoKeyVersion.generation_failure_reason.'
            - 'This version was destroyed, and it may not be used or enabled again. Cloud KMS is waiting for the corresponding key material residing in an external key manager to be destroyed.'
            - 'This version was destroyed, and it may not be used or enabled again. However, Cloud KMS could not confirm that the corresponding key material residing in an external key manager was destroyed. Additional details can be found in CryptoKeyVersion.external_destruction_failure_reason.'
      type: object
    GoogleCloudKmsV1KeyOperationAttestation:
      properties:
        certChains:
          $ref: '#/components/schemas/GoogleCloudKmsV1KeyOperationAttestationCertificateChains'
          readOnly: true
          description: Output only. The certificate chains needed to validate the attestation
        format:
          enumDescriptions:
            - Not specified.
            - 'Cavium HSM attestation compressed with gzip. Note that this format is defined by Cavium and subject to change at any time. See https://www.marvell.com/products/security-solutions/nitrox-hs-adapters/software-key-attestation.html.'
            - Cavium HSM attestation V2 compressed with gzip. This is a new format introduced in Cavium's version 3.2-08.
          readOnly: true
          description: Output only. The format of the attestation data.
          enum:
            - ATTESTATION_FORMAT_UNSPECIFIED
            - CAVIUM_V1_COMPRESSED
            - CAVIUM_V2_COMPRESSED
          type: string
        content:
          type: string
          description: Output only. The attestation data provided by the HSM when the key operation was performed.
          readOnly: true
          format: byte
      id: GoogleCloudKmsV1KeyOperationAttestation
      description: 'Contains an HSM-generated attestation about a key operation. For more information, see [Verifying attestations] (https://cloud.google.com/kms/docs/attest-key).'
      type: object
    GoogleCloudKmsInventoryV1SearchProtectedResourcesResponse:
      description: Response message for KeyTrackingService.SearchProtectedResources.
      type: object
      properties:
        nextPageToken:
          description: 'A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        protectedResources:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudKmsInventoryV1ProtectedResource'
          description: Protected resources for this page.
      id: GoogleCloudKmsInventoryV1SearchProtectedResourcesResponse
  parameters:
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    crypto_keys_protected_resources_summary:
      id: google.kmsinventory.crypto_keys_protected_resources_summary
      name: crypto_keys_protected_resources_summary
      title: Crypto Keys Protected Resources Summary
      methods:
        get_protected_resources_summary:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1keyRings~1{keyRingsId}~1cryptoKeys~1{cryptoKeysId}~1protectedResourcesSummary/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/crypto_keys_protected_resources_summary/methods/get_protected_resources_summary'
        insert: []
        update: []
        delete: []
    crypto_keys:
      id: google.kmsinventory.crypto_keys
      name: crypto_keys
      title: Crypto Keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1cryptoKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.cryptoKeys
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1cryptoKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/crypto_keys/methods/list'
        insert: []
        update: []
        delete: []
    protected_resources:
      id: google.kmsinventory.protected_resources
      name: protected_resources
      title: Protected Resources
      methods:
        search:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1protectedResources:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/protectedResourcesSummary':
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: Returns aggregate information about the resources protected by the given Cloud KMS CryptoKey. Only resources within the same Cloud organization as the key will be returned. The project that holds the key must be part of an organization in order for this call to succeed.
      operationId: kmsinventory.projects.locations.keyRings.cryptoKeys.getProtectedResourcesSummary
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudKmsInventoryV1ProtectedResourcesSummary'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: keyRingsId
          required: true
          schema:
            type: string
        - in: path
          name: cryptoKeysId
          required: true
          schema:
            type: string
      x-stackQL-resource: crypto_keys_protected_resources_summary
      x-stackQL-method: get_protected_resources_summary
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/cryptoKeys':
    parameters: *ref_1
    get:
      description: 'Returns cryptographic keys managed by Cloud KMS in a given Cloud project. Note that this data is sourced from snapshots, meaning it may not completely reflect the actual state of key metadata at call time.'
      operationId: kmsinventory.projects.cryptoKeys.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudKmsInventoryV1ListCryptoKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: crypto_keys
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.cryptoKeys
  '/v1/organizations/{organizationsId}/protectedResources:search':
    parameters: *ref_1
    get:
      description: Returns metadata about the resources protected by the given Cloud KMS CryptoKey in the given Cloud organization.
      operationId: kmsinventory.organizations.protectedResources.search
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudKmsInventoryV1SearchProtectedResourcesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: cryptoKey
          schema:
            type: string
        - in: query
          name: resourceTypes
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: protected_resources
      x-stackQL-method: search
      x-stackQL-verb: exec
