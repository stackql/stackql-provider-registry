openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: KMS Inventory API
  description: ''
  version: v1
  x-discovery-doc-revision: '20250824'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/kms/
servers:
  - url: https://kmsinventory.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudKmsInventoryV1ListCryptoKeysResponse:
      id: GoogleCloudKmsInventoryV1ListCryptoKeysResponse
      description: Response message for KeyDashboardService.ListCryptoKeys.
      type: object
      properties:
        cryptoKeys:
          description: The list of CryptoKeys.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudKmsV1CryptoKey'
        nextPageToken:
          description: >-
            The page token returned from the previous response if the next page
            is desired.
          type: string
    GoogleCloudKmsV1CryptoKey:
      id: GoogleCloudKmsV1CryptoKey
      description: >-
        A CryptoKey represents a logical key that can be used for cryptographic
        operations. A CryptoKey is made up of zero or more versions, which
        represent the actual key material used in cryptographic operations.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name for this CryptoKey in the format
            `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
          readOnly: true
          type: string
        primary:
          description: >-
            Output only. A copy of the "primary" CryptoKeyVersion that will be
            used by Encrypt when this CryptoKey is given in EncryptRequest.name.
            The CryptoKey's primary version can be updated via
            UpdateCryptoKeyPrimaryVersion. Keys with purpose ENCRYPT_DECRYPT may
            have a primary. For other keys, this field will be omitted.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudKmsV1CryptoKeyVersion'
        purpose:
          description: Immutable. The immutable purpose of this CryptoKey.
          type: string
          enumDescriptions:
            - Not specified.
            - CryptoKeys with this purpose may be used with Encrypt and Decrypt.
            - >-
              CryptoKeys with this purpose may be used with AsymmetricSign and
              GetPublicKey.
            - >-
              CryptoKeys with this purpose may be used with AsymmetricDecrypt
              and GetPublicKey.
            - >-
              CryptoKeys with this purpose may be used with RawEncrypt and
              RawDecrypt. This purpose is meant to be used for interoperable
              symmetric encryption and does not support automatic CryptoKey
              rotation.
            - CryptoKeys with this purpose may be used with MacSign.
            - >-
              CryptoKeys with this purpose may be used with GetPublicKey and
              Decapsulate.
          enum:
            - CRYPTO_KEY_PURPOSE_UNSPECIFIED
            - ENCRYPT_DECRYPT
            - ASYMMETRIC_SIGN
            - ASYMMETRIC_DECRYPT
            - RAW_ENCRYPT_DECRYPT
            - MAC
            - KEY_ENCAPSULATION
        createTime:
          description: Output only. The time at which this CryptoKey was created.
          readOnly: true
          type: string
          format: google-datetime
        nextRotationTime:
          description: >-
            At next_rotation_time, the Key Management Service will
            automatically: 1. Create a new version of this CryptoKey. 2. Mark
            the new version as primary. Key rotations performed manually via
            CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not
            affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support
            automatic rotation. For other keys, this field must be omitted.
          type: string
          format: google-datetime
        rotationPeriod:
          description: >-
            next_rotation_time will be advanced by this period when the service
            automatically rotates a key. Must be at least 24 hours and at most
            876,000 hours. If rotation_period is set, next_rotation_time must
            also be set. Keys with purpose ENCRYPT_DECRYPT support automatic
            rotation. For other keys, this field must be omitted.
          type: string
          format: google-duration
        versionTemplate:
          description: >-
            A template describing settings for new CryptoKeyVersion instances.
            The properties of new CryptoKeyVersion instances created by either
            CreateCryptoKeyVersion or auto-rotation are controlled by this
            template.
          $ref: '#/components/schemas/GoogleCloudKmsV1CryptoKeyVersionTemplate'
        labels:
          description: >-
            Labels with user-defined metadata. For more information, see
            [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).
          type: object
          additionalProperties:
            type: string
        importOnly:
          description: Immutable. Whether this key may contain imported versions only.
          type: boolean
        destroyScheduledDuration:
          description: >-
            Immutable. The period of time that versions of this key spend in the
            DESTROY_SCHEDULED state before transitioning to DESTROYED. If not
            specified at creation time, the default duration is 30 days.
          type: string
          format: google-duration
        cryptoKeyBackend:
          description: >-
            Immutable. The resource name of the backend environment where the
            key material for all CryptoKeyVersions associated with this
            CryptoKey reside and where all related cryptographic operations are
            performed. Only applicable if CryptoKeyVersions have a
            ProtectionLevel of EXTERNAL_VPC, with the resource name in the
            format `projects/*/locations/*/ekmConnections/*`. Note, this list is
            non-exhaustive and may apply to additional ProtectionLevels in the
            future.
          type: string
        keyAccessJustificationsPolicy:
          description: >-
            Optional. The policy used for Key Access Justifications Policy
            Enforcement. If this field is present and this key is enrolled in
            Key Access Justifications Policy Enforcement, the policy will be
            evaluated in encrypt, decrypt, and sign operations, and the
            operation will fail if rejected by the policy. The policy is defined
            by specifying zero or more allowed justification codes.
            https://cloud.google.com/assured-workloads/key-access-justifications/docs/justification-codes
            By default, this field is absent, and all justification codes are
            allowed.
          $ref: '#/components/schemas/GoogleCloudKmsV1KeyAccessJustificationsPolicy'
    GoogleCloudKmsV1CryptoKeyVersion:
      id: GoogleCloudKmsV1CryptoKeyVersion
      description: >-
        A CryptoKeyVersion represents an individual cryptographic key, and the
        associated key material. An ENABLED version can be used for
        cryptographic operations. For security reasons, the raw cryptographic
        key material represented by a CryptoKeyVersion can never be viewed or
        exported. It can only be used to encrypt, decrypt, or sign data when an
        authorized user or application invokes Cloud KMS.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name for this CryptoKeyVersion in the
            format
            `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
          readOnly: true
          type: string
        state:
          description: The current state of the CryptoKeyVersion.
          type: string
          enumDescriptions:
            - Not specified.
            - >-
              This version is still being generated. It may not be used,
              enabled, disabled, or destroyed yet. Cloud KMS will automatically
              mark this version ENABLED as soon as the version is ready.
            - This version may be used for cryptographic operations.
            - >-
              This version may not be used, but the key material is still
              available, and the version can be placed back into the ENABLED
              state.
            - >-
              The key material of this version is destroyed and no longer
              stored. This version may only become ENABLED again if this version
              is reimport_eligible and the original key material is reimported
              with a call to KeyManagementService.ImportCryptoKeyVersion.
            - >-
              This version is scheduled for destruction, and will be destroyed
              soon. Call RestoreCryptoKeyVersion to put it back into the
              DISABLED state.
            - >-
              This version is still being imported. It may not be used, enabled,
              disabled, or destroyed yet. Cloud KMS will automatically mark this
              version ENABLED as soon as the version is ready.
            - >-
              This version was not imported successfully. It may not be used,
              enabled, disabled, or destroyed. The submitted key material has
              been discarded. Additional details can be found in
              CryptoKeyVersion.import_failure_reason.
            - >-
              This version was not generated successfully. It may not be used,
              enabled, disabled, or destroyed. Additional details can be found
              in CryptoKeyVersion.generation_failure_reason.
            - >-
              This version was destroyed, and it may not be used or enabled
              again. Cloud KMS is waiting for the corresponding key material
              residing in an external key manager to be destroyed.
            - >-
              This version was destroyed, and it may not be used or enabled
              again. However, Cloud KMS could not confirm that the corresponding
              key material residing in an external key manager was destroyed.
              Additional details can be found in
              CryptoKeyVersion.external_destruction_failure_reason.
          enum:
            - CRYPTO_KEY_VERSION_STATE_UNSPECIFIED
            - PENDING_GENERATION
            - ENABLED
            - DISABLED
            - DESTROYED
            - DESTROY_SCHEDULED
            - PENDING_IMPORT
            - IMPORT_FAILED
            - GENERATION_FAILED
            - PENDING_EXTERNAL_DESTRUCTION
            - EXTERNAL_DESTRUCTION_FAILED
        protectionLevel:
          description: >-
            Output only. The ProtectionLevel describing how crypto operations
            are performed with this CryptoKeyVersion.
          readOnly: true
          type: string
          enumDescriptions:
            - Not specified.
            - Crypto operations are performed in software.
            - Crypto operations are performed in a Hardware Security Module.
            - Crypto operations are performed by an external key manager.
            - Crypto operations are performed in an EKM-over-VPC backend.
          enum:
            - PROTECTION_LEVEL_UNSPECIFIED
            - SOFTWARE
            - HSM
            - EXTERNAL
            - EXTERNAL_VPC
        algorithm:
          description: >-
            Output only. The CryptoKeyVersionAlgorithm that this
            CryptoKeyVersion supports.
          readOnly: true
          type: string
          enumDescriptions:
            - Not specified.
            - Creates symmetric encryption keys.
            - AES-GCM (Galois Counter Mode) using 128-bit keys.
            - AES-GCM (Galois Counter Mode) using 256-bit keys.
            - AES-CBC (Cipher Block Chaining Mode) using 128-bit keys.
            - AES-CBC (Cipher Block Chaining Mode) using 256-bit keys.
            - AES-CTR (Counter Mode) using 128-bit keys.
            - AES-CTR (Counter Mode) using 256-bit keys.
            - RSASSA-PSS 2048 bit key with a SHA256 digest.
            - RSASSA-PSS 3072 bit key with a SHA256 digest.
            - RSASSA-PSS 4096 bit key with a SHA256 digest.
            - RSASSA-PSS 4096 bit key with a SHA512 digest.
            - RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.
            - RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key.
            - RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key.
            - RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key.
            - RSAES-OAEP 2048 bit key with a SHA256 digest.
            - RSAES-OAEP 3072 bit key with a SHA256 digest.
            - RSAES-OAEP 4096 bit key with a SHA256 digest.
            - RSAES-OAEP 4096 bit key with a SHA512 digest.
            - RSAES-OAEP 2048 bit key with a SHA1 digest.
            - RSAES-OAEP 3072 bit key with a SHA1 digest.
            - RSAES-OAEP 4096 bit key with a SHA1 digest.
            - >-
              ECDSA on the NIST P-256 curve with a SHA256 digest. Other hash
              functions can also be used:
              https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
            - >-
              ECDSA on the NIST P-384 curve with a SHA384 digest. Other hash
              functions can also be used:
              https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
            - >-
              ECDSA on the non-NIST secp256k1 curve. This curve is only
              supported for HSM protection level. Other hash functions can also
              be used:
              https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
            - EdDSA on the Curve25519 in pure mode (taking data as input).
            - HMAC-SHA256 signing with a 256 bit key.
            - HMAC-SHA1 signing with a 160 bit key.
            - HMAC-SHA384 signing with a 384 bit key.
            - HMAC-SHA512 signing with a 512 bit key.
            - HMAC-SHA224 signing with a 224 bit key.
            - >-
              Algorithm representing symmetric encryption by an external key
              manager.
            - ML-KEM-768 (FIPS 203)
            - ML-KEM-1024 (FIPS 203)
            - >-
              X-Wing hybrid KEM combining ML-KEM-768 with X25519 following
              datatracker.ietf.org/doc/draft-connolly-cfrg-xwing-kem/.
            - >-
              The post-quantum Module-Lattice-Based Digital Signature Algorithm,
              at security level 3. Randomized version.
            - >-
              The post-quantum stateless hash-based digital signature algorithm,
              at security level 1. Randomized version.
            - >-
              The post-quantum stateless hash-based digital signature algorithm,
              at security level 1. Randomized pre-hash version supporting SHA256
              digests.
          enum:
            - CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED
            - GOOGLE_SYMMETRIC_ENCRYPTION
            - AES_128_GCM
            - AES_256_GCM
            - AES_128_CBC
            - AES_256_CBC
            - AES_128_CTR
            - AES_256_CTR
            - RSA_SIGN_PSS_2048_SHA256
            - RSA_SIGN_PSS_3072_SHA256
            - RSA_SIGN_PSS_4096_SHA256
            - RSA_SIGN_PSS_4096_SHA512
            - RSA_SIGN_PKCS1_2048_SHA256
            - RSA_SIGN_PKCS1_3072_SHA256
            - RSA_SIGN_PKCS1_4096_SHA256
            - RSA_SIGN_PKCS1_4096_SHA512
            - RSA_SIGN_RAW_PKCS1_2048
            - RSA_SIGN_RAW_PKCS1_3072
            - RSA_SIGN_RAW_PKCS1_4096
            - RSA_DECRYPT_OAEP_2048_SHA256
            - RSA_DECRYPT_OAEP_3072_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA512
            - RSA_DECRYPT_OAEP_2048_SHA1
            - RSA_DECRYPT_OAEP_3072_SHA1
            - RSA_DECRYPT_OAEP_4096_SHA1
            - EC_SIGN_P256_SHA256
            - EC_SIGN_P384_SHA384
            - EC_SIGN_SECP256K1_SHA256
            - EC_SIGN_ED25519
            - HMAC_SHA256
            - HMAC_SHA1
            - HMAC_SHA384
            - HMAC_SHA512
            - HMAC_SHA224
            - EXTERNAL_SYMMETRIC_ENCRYPTION
            - ML_KEM_768
            - ML_KEM_1024
            - KEM_XWING
            - PQ_SIGN_ML_DSA_65
            - PQ_SIGN_SLH_DSA_SHA2_128S
            - PQ_SIGN_HASH_SLH_DSA_SHA2_128S_SHA256
        attestation:
          description: >-
            Output only. Statement that was generated and signed by the HSM at
            key creation time. Use this statement to verify attributes of the
            key as stored on the HSM, independently of Google. Only provided for
            key versions with protection_level HSM.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudKmsV1KeyOperationAttestation'
        createTime:
          description: Output only. The time at which this CryptoKeyVersion was created.
          readOnly: true
          type: string
          format: google-datetime
        generateTime:
          description: >-
            Output only. The time this CryptoKeyVersion's key material was
            generated.
          readOnly: true
          type: string
          format: google-datetime
        destroyTime:
          description: >-
            Output only. The time this CryptoKeyVersion's key material is
            scheduled for destruction. Only present if state is
            DESTROY_SCHEDULED.
          readOnly: true
          type: string
          format: google-datetime
        destroyEventTime:
          description: >-
            Output only. The time this CryptoKeyVersion's key material was
            destroyed. Only present if state is DESTROYED.
          readOnly: true
          type: string
          format: google-datetime
        importJob:
          description: >-
            Output only. The name of the ImportJob used in the most recent
            import of this CryptoKeyVersion. Only present if the underlying key
            material was imported.
          readOnly: true
          type: string
        importTime:
          description: >-
            Output only. The time at which this CryptoKeyVersion's key material
            was most recently imported.
          readOnly: true
          type: string
          format: google-datetime
        importFailureReason:
          description: >-
            Output only. The root cause of the most recent import failure. Only
            present if state is IMPORT_FAILED.
          readOnly: true
          type: string
        generationFailureReason:
          description: >-
            Output only. The root cause of the most recent generation failure.
            Only present if state is GENERATION_FAILED.
          readOnly: true
          type: string
        externalDestructionFailureReason:
          description: >-
            Output only. The root cause of the most recent external destruction
            failure. Only present if state is EXTERNAL_DESTRUCTION_FAILED.
          readOnly: true
          type: string
        externalProtectionLevelOptions:
          description: >-
            ExternalProtectionLevelOptions stores a group of additional fields
            for configuring a CryptoKeyVersion that are specific to the EXTERNAL
            protection level and EXTERNAL_VPC protection levels.
          $ref: '#/components/schemas/GoogleCloudKmsV1ExternalProtectionLevelOptions'
        reimportEligible:
          description: >-
            Output only. Whether or not this key version is eligible for
            reimport, by being specified as a target in
            ImportCryptoKeyVersionRequest.crypto_key_version.
          readOnly: true
          type: boolean
    GoogleCloudKmsV1KeyOperationAttestation:
      id: GoogleCloudKmsV1KeyOperationAttestation
      description: >-
        Contains an HSM-generated attestation about a key operation. For more
        information, see [Verifying attestations]
        (https://cloud.google.com/kms/docs/attest-key).
      type: object
      properties:
        format:
          description: Output only. The format of the attestation data.
          readOnly: true
          type: string
          enumDescriptions:
            - Not specified.
            - >-
              Cavium HSM attestation compressed with gzip. Note that this format
              is defined by Cavium and subject to change at any time. See
              https://www.marvell.com/products/security-solutions/nitrox-hs-adapters/software-key-attestation.html.
            - >-
              Cavium HSM attestation V2 compressed with gzip. This is a new
              format introduced in Cavium's version 3.2-08.
          enum:
            - ATTESTATION_FORMAT_UNSPECIFIED
            - CAVIUM_V1_COMPRESSED
            - CAVIUM_V2_COMPRESSED
        content:
          description: >-
            Output only. The attestation data provided by the HSM when the key
            operation was performed.
          readOnly: true
          type: string
          format: byte
        certChains:
          description: >-
            Output only. The certificate chains needed to validate the
            attestation
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudKmsV1KeyOperationAttestationCertificateChains
    GoogleCloudKmsV1KeyOperationAttestationCertificateChains:
      id: GoogleCloudKmsV1KeyOperationAttestationCertificateChains
      description: >-
        Certificate chains needed to verify the attestation. Certificates in
        chains are PEM-encoded and are ordered based on
        https://tools.ietf.org/html/rfc5246#section-7.4.2.
      type: object
      properties:
        caviumCerts:
          description: Cavium certificate chain corresponding to the attestation.
          type: array
          items:
            type: string
        googleCardCerts:
          description: Google card certificate chain corresponding to the attestation.
          type: array
          items:
            type: string
        googlePartitionCerts:
          description: Google partition certificate chain corresponding to the attestation.
          type: array
          items:
            type: string
    GoogleCloudKmsV1ExternalProtectionLevelOptions:
      id: GoogleCloudKmsV1ExternalProtectionLevelOptions
      description: >-
        ExternalProtectionLevelOptions stores a group of additional fields for
        configuring a CryptoKeyVersion that are specific to the EXTERNAL
        protection level and EXTERNAL_VPC protection levels.
      type: object
      properties:
        externalKeyUri:
          description: >-
            The URI for an external resource that this CryptoKeyVersion
            represents.
          type: string
        ekmConnectionKeyPath:
          description: >-
            The path to the external key material on the EKM when using
            EkmConnection e.g., "v0/my/key". Set this field instead of
            external_key_uri when using an EkmConnection.
          type: string
    GoogleCloudKmsV1CryptoKeyVersionTemplate:
      id: GoogleCloudKmsV1CryptoKeyVersionTemplate
      description: >-
        A CryptoKeyVersionTemplate specifies the properties to use when creating
        a new CryptoKeyVersion, either manually with CreateCryptoKeyVersion or
        automatically as a result of auto-rotation.
      type: object
      properties:
        protectionLevel:
          description: >-
            ProtectionLevel to use when creating a CryptoKeyVersion based on
            this template. Immutable. Defaults to SOFTWARE.
          type: string
          enumDescriptions:
            - Not specified.
            - Crypto operations are performed in software.
            - Crypto operations are performed in a Hardware Security Module.
            - Crypto operations are performed by an external key manager.
            - Crypto operations are performed in an EKM-over-VPC backend.
          enum:
            - PROTECTION_LEVEL_UNSPECIFIED
            - SOFTWARE
            - HSM
            - EXTERNAL
            - EXTERNAL_VPC
        algorithm:
          description: >-
            Required. Algorithm to use when creating a CryptoKeyVersion based on
            this template. For backwards compatibility,
            GOOGLE_SYMMETRIC_ENCRYPTION is implied if both this field is omitted
            and CryptoKey.purpose is ENCRYPT_DECRYPT.
          type: string
          enumDescriptions:
            - Not specified.
            - Creates symmetric encryption keys.
            - AES-GCM (Galois Counter Mode) using 128-bit keys.
            - AES-GCM (Galois Counter Mode) using 256-bit keys.
            - AES-CBC (Cipher Block Chaining Mode) using 128-bit keys.
            - AES-CBC (Cipher Block Chaining Mode) using 256-bit keys.
            - AES-CTR (Counter Mode) using 128-bit keys.
            - AES-CTR (Counter Mode) using 256-bit keys.
            - RSASSA-PSS 2048 bit key with a SHA256 digest.
            - RSASSA-PSS 3072 bit key with a SHA256 digest.
            - RSASSA-PSS 4096 bit key with a SHA256 digest.
            - RSASSA-PSS 4096 bit key with a SHA512 digest.
            - RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.
            - RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key.
            - RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key.
            - RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key.
            - RSAES-OAEP 2048 bit key with a SHA256 digest.
            - RSAES-OAEP 3072 bit key with a SHA256 digest.
            - RSAES-OAEP 4096 bit key with a SHA256 digest.
            - RSAES-OAEP 4096 bit key with a SHA512 digest.
            - RSAES-OAEP 2048 bit key with a SHA1 digest.
            - RSAES-OAEP 3072 bit key with a SHA1 digest.
            - RSAES-OAEP 4096 bit key with a SHA1 digest.
            - >-
              ECDSA on the NIST P-256 curve with a SHA256 digest. Other hash
              functions can also be used:
              https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
            - >-
              ECDSA on the NIST P-384 curve with a SHA384 digest. Other hash
              functions can also be used:
              https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
            - >-
              ECDSA on the non-NIST secp256k1 curve. This curve is only
              supported for HSM protection level. Other hash functions can also
              be used:
              https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
            - EdDSA on the Curve25519 in pure mode (taking data as input).
            - HMAC-SHA256 signing with a 256 bit key.
            - HMAC-SHA1 signing with a 160 bit key.
            - HMAC-SHA384 signing with a 384 bit key.
            - HMAC-SHA512 signing with a 512 bit key.
            - HMAC-SHA224 signing with a 224 bit key.
            - >-
              Algorithm representing symmetric encryption by an external key
              manager.
            - ML-KEM-768 (FIPS 203)
            - ML-KEM-1024 (FIPS 203)
            - >-
              X-Wing hybrid KEM combining ML-KEM-768 with X25519 following
              datatracker.ietf.org/doc/draft-connolly-cfrg-xwing-kem/.
            - >-
              The post-quantum Module-Lattice-Based Digital Signature Algorithm,
              at security level 3. Randomized version.
            - >-
              The post-quantum stateless hash-based digital signature algorithm,
              at security level 1. Randomized version.
            - >-
              The post-quantum stateless hash-based digital signature algorithm,
              at security level 1. Randomized pre-hash version supporting SHA256
              digests.
          enum:
            - CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED
            - GOOGLE_SYMMETRIC_ENCRYPTION
            - AES_128_GCM
            - AES_256_GCM
            - AES_128_CBC
            - AES_256_CBC
            - AES_128_CTR
            - AES_256_CTR
            - RSA_SIGN_PSS_2048_SHA256
            - RSA_SIGN_PSS_3072_SHA256
            - RSA_SIGN_PSS_4096_SHA256
            - RSA_SIGN_PSS_4096_SHA512
            - RSA_SIGN_PKCS1_2048_SHA256
            - RSA_SIGN_PKCS1_3072_SHA256
            - RSA_SIGN_PKCS1_4096_SHA256
            - RSA_SIGN_PKCS1_4096_SHA512
            - RSA_SIGN_RAW_PKCS1_2048
            - RSA_SIGN_RAW_PKCS1_3072
            - RSA_SIGN_RAW_PKCS1_4096
            - RSA_DECRYPT_OAEP_2048_SHA256
            - RSA_DECRYPT_OAEP_3072_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA512
            - RSA_DECRYPT_OAEP_2048_SHA1
            - RSA_DECRYPT_OAEP_3072_SHA1
            - RSA_DECRYPT_OAEP_4096_SHA1
            - EC_SIGN_P256_SHA256
            - EC_SIGN_P384_SHA384
            - EC_SIGN_SECP256K1_SHA256
            - EC_SIGN_ED25519
            - HMAC_SHA256
            - HMAC_SHA1
            - HMAC_SHA384
            - HMAC_SHA512
            - HMAC_SHA224
            - EXTERNAL_SYMMETRIC_ENCRYPTION
            - ML_KEM_768
            - ML_KEM_1024
            - KEM_XWING
            - PQ_SIGN_ML_DSA_65
            - PQ_SIGN_SLH_DSA_SHA2_128S
            - PQ_SIGN_HASH_SLH_DSA_SHA2_128S_SHA256
    GoogleCloudKmsV1KeyAccessJustificationsPolicy:
      id: GoogleCloudKmsV1KeyAccessJustificationsPolicy
      description: >-
        A KeyAccessJustificationsPolicy specifies zero or more allowed
        AccessReason values for encrypt, decrypt, and sign operations on a
        CryptoKey.
      type: object
      properties:
        allowedAccessReasons:
          description: >-
            The list of allowed reasons for access to a CryptoKey. Zero allowed
            access reasons means all encrypt, decrypt, and sign operations for
            the CryptoKey associated with this policy will fail.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified access reason.
              - Customer-initiated support.
              - >-
                Google-initiated access for system management and
                troubleshooting.
              - >-
                Google-initiated access in response to a legal request or legal
                process.
              - >-
                Google-initiated access for security, fraud, abuse, or
                compliance purposes.
              - >-
                Customer uses their account to perform any access to their own
                data which their IAM policy authorizes.
              - >-
                Google systems access customer data to help optimize the
                structure of the data or quality for future uses by the
                customer.
              - No reason is expected for this key request.
              - >-
                Customer uses their account to perform any access to their own
                data which their IAM policy authorizes, and one of the following
                is true: * A Google administrator has reset the root-access
                account associated with the user's organization within the past
                7 days. * A Google-initiated emergency access operation has
                interacted with a resource in the same project or folder as the
                currently accessed resource within the past 7 days.
              - >-
                Google systems access customer data to help optimize the
                structure of the data or quality for future uses by the
                customer, and one of the following is true: * A Google
                administrator has reset the root-access account associated with
                the user's organization within the past 7 days. * A
                Google-initiated emergency access operation has interacted with
                a resource in the same project or folder as the currently
                accessed resource within the past 7 days.
              - Google-initiated access to maintain system reliability.
              - >-
                One of the following operations is being executed while
                simultaneously encountering an internal technical issue which
                prevented a more precise justification code from being
                generated: * Your account has been used to perform any access to
                your own data which your IAM policy authorizes. * An automated
                Google system operates on encrypted customer data which your IAM
                policy authorizes. * Customer-initiated Google support access. *
                Google-initiated support access to protect system reliability.
            enum:
              - REASON_UNSPECIFIED
              - CUSTOMER_INITIATED_SUPPORT
              - GOOGLE_INITIATED_SERVICE
              - THIRD_PARTY_DATA_REQUEST
              - GOOGLE_INITIATED_REVIEW
              - CUSTOMER_INITIATED_ACCESS
              - GOOGLE_INITIATED_SYSTEM_OPERATION
              - REASON_NOT_EXPECTED
              - MODIFIED_CUSTOMER_INITIATED_ACCESS
              - MODIFIED_GOOGLE_INITIATED_SYSTEM_OPERATION
              - GOOGLE_RESPONSE_TO_PRODUCTION_ALERT
              - CUSTOMER_AUTHORIZED_WORKFLOW_SERVICING
    GoogleCloudKmsInventoryV1ProtectedResourcesSummary:
      id: GoogleCloudKmsInventoryV1ProtectedResourcesSummary
      description: >-
        Aggregate information about the resources protected by a Cloud KMS key
        in the same Cloud organization as the key.
      type: object
      properties:
        name:
          description: >-
            The full name of the ProtectedResourcesSummary resource. Example:
            projects/test-project/locations/us/keyRings/test-keyring/cryptoKeys/test-key/protectedResourcesSummary
          type: string
        resourceCount:
          description: >-
            The total number of protected resources in the same Cloud
            organization as the key.
          type: string
          format: int64
        projectCount:
          description: >-
            The number of distinct Cloud projects in the same Cloud organization
            as the key that have resources protected by the key.
          type: integer
          format: int32
        resourceTypes:
          description: >-
            The number of resources protected by the key grouped by resource
            type.
          type: object
          additionalProperties:
            type: string
            format: int64
        cloudProducts:
          description: >-
            The number of resources protected by the key grouped by Cloud
            product.
          type: object
          additionalProperties:
            type: string
            format: int64
        locations:
          description: The number of resources protected by the key grouped by region.
          type: object
          additionalProperties:
            type: string
            format: int64
    GoogleCloudKmsInventoryV1SearchProtectedResourcesResponse:
      id: GoogleCloudKmsInventoryV1SearchProtectedResourcesResponse
      description: Response message for KeyTrackingService.SearchProtectedResources.
      type: object
      properties:
        protectedResources:
          description: Protected resources for this page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudKmsInventoryV1ProtectedResource'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudKmsInventoryV1ProtectedResource:
      id: GoogleCloudKmsInventoryV1ProtectedResource
      description: Metadata about a resource protected by a Cloud KMS key.
      type: object
      properties:
        name:
          description: >-
            The full resource name of the resource. Example:
            `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.
          type: string
        project:
          description: 'Format: `projects/{PROJECT_NUMBER}`.'
          type: string
        projectId:
          description: The ID of the project that owns the resource.
          type: string
        cloudProduct:
          description: 'The Cloud product that owns the resource. Example: `compute`'
          type: string
        resourceType:
          description: 'Example: `compute.googleapis.com/Disk`'
          type: string
        location:
          description: >-
            Location can be `global`, regional like `us-east1`, or zonal like
            `us-west1-b`.
          type: string
        labels:
          description: A key-value pair of the resource's labels (v1) to their values.
          type: object
          additionalProperties:
            type: string
        cryptoKeyVersion:
          description: >-
            The name of the Cloud KMS
            [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions?hl=en)
            used to protect this resource via CMEK. This field is empty if the
            Google Cloud product owning the resource does not provide key
            version data to Asset Inventory. If there are multiple key versions
            protecting the resource, then this is same value as the first
            element of crypto_key_versions.
          type: string
        cryptoKeyVersions:
          description: >-
            The names of the Cloud KMS
            [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions?hl=en)
            used to protect this resource via CMEK. This field is empty if the
            Google Cloud product owning the resource does not provide key
            versions data to Asset Inventory. The first element of this field is
            stored in crypto_key_version.
          type: array
          items:
            type: string
        createTime:
          description: >-
            Output only. The time at which this resource was created. The
            granularity is in seconds. Timestamp.nanos will always be 0.
          readOnly: true
          type: string
          format: google-datetime
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    crypto_keys:
      id: google.kmsinventory.crypto_keys
      name: crypto_keys
      title: Crypto_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1cryptoKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.cryptoKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/crypto_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    crypto_keys_protected_resources_summary:
      id: google.kmsinventory.crypto_keys_protected_resources_summary
      name: crypto_keys_protected_resources_summary
      title: Crypto_keys_protected_resources_summary
      methods:
        get_protected_resources_summary:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1keyRings~1{keyRingsId}~1cryptoKeys~1{cryptoKeysId}~1protectedResourcesSummary/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/crypto_keys_protected_resources_summary/methods/get_protected_resources_summary
        insert: []
        update: []
        replace: []
        delete: []
    protected_resources:
      id: google.kmsinventory.protected_resources
      name: protected_resources
      title: Protected_resources
      methods:
        search:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1protectedResources:search/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/cryptoKeys:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Returns cryptographic keys managed by Cloud KMS in a given Cloud
        project. Note that this data is sourced from snapshots, meaning it may
        not completely reflect the actual state of key metadata at call time.
      operationId: kmsinventory.projects.cryptoKeys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudKmsInventoryV1ListCryptoKeysResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/protectedResourcesSummary:
    parameters: *ref_1
    get:
      description: >-
        Returns aggregate information about the resources protected by the given
        Cloud KMS CryptoKey. Only resources within the same Cloud organization
        as the key will be returned. The project that holds the key must be part
        of an organization in order for this call to succeed.
      operationId: >-
        kmsinventory.projects.locations.keyRings.cryptoKeys.getProtectedResourcesSummary
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudKmsInventoryV1ProtectedResourcesSummary
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: keyRingsId
          required: true
          schema:
            type: string
        - in: path
          name: cryptoKeysId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/protectedResources:search:
    parameters: *ref_1
    get:
      description: >-
        Returns metadata about the resources protected by the given Cloud KMS
        CryptoKey in the given Cloud organization.
      operationId: kmsinventory.organizations.protectedResources.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudKmsInventoryV1SearchProtectedResourcesResponse
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: cryptoKey
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: resourceTypes
          schema:
            type: string
