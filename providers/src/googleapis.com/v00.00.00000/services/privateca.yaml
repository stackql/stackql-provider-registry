openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Certificate Authority API
  description: >-
    The Certificate Authority Service API is a highly-available, scalable
    service that enables you to simplify and automate the management of private
    certificate authorities (CAs) while staying in control of your private
    keys. 
  version: v1
  x-discovery-doc-revision: '20240515'
  x-generated-date: '2024-06-03'
externalDocs:
  url: https://cloud.google.com/
servers:
  - url: https://privateca.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    Certificate:
      id: Certificate
      description: >-
        A Certificate corresponds to a signed X.509 certificate issued by a
        CertificateAuthority.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name for this Certificate in the format
            `projects/*/locations/*/caPools/*/certificates/*`.
          readOnly: true
          type: string
        pemCsr:
          description: Immutable. A pem-encoded X.509 certificate signing request (CSR).
          type: string
        config:
          description: >-
            Immutable. A description of the certificate and key that does not
            require X.509 or ASN.1.
          $ref: '#/components/schemas/CertificateConfig'
        issuerCertificateAuthority:
          description: >-
            Output only. The resource name of the issuing CertificateAuthority
            in the format
            `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          readOnly: true
          type: string
        lifetime:
          description: >-
            Required. Immutable. The desired lifetime of a certificate. Used to
            create the "not_before_time" and "not_after_time" fields inside an
            X.509 certificate. Note that the lifetime may be truncated if it
            would extend past the life of any certificate authority in the
            issuing chain.
          type: string
          format: google-duration
        certificateTemplate:
          description: >-
            Immutable. The resource name for a CertificateTemplate used to issue
            this certificate, in the format
            `projects/*/locations/*/certificateTemplates/*`. If this is
            specified, the caller must have the necessary permission to use this
            template. If this is omitted, no template will be used. This
            template must be in the same location as the Certificate.
          type: string
        subjectMode:
          description: >-
            Immutable. Specifies how the Certificate's identity fields are to be
            decided. If this is omitted, the `DEFAULT` subject mode will be
            used.
          type: string
          enumDescriptions:
            - Not specified.
            - >-
              The default mode used in most cases. Indicates that the
              certificate's Subject and/or SubjectAltNames are specified in the
              certificate request. This mode requires the caller to have the
              `privateca.certificates.create` permission.
            - >-
              A mode reserved for special cases. Indicates that the certificate
              should have one SPIFFE SubjectAltNames set by the service based on
              the caller's identity. This mode will ignore any explicitly
              specified Subject and/or SubjectAltNames in the certificate
              request. This mode requires the caller to have the
              `privateca.certificates.createForSelf` permission.
          enum:
            - SUBJECT_REQUEST_MODE_UNSPECIFIED
            - DEFAULT
            - REFLECTED_SPIFFE
        revocationDetails:
          description: >-
            Output only. Details regarding the revocation of this Certificate.
            This Certificate is considered revoked if and only if this field is
            present.
          readOnly: true
          $ref: '#/components/schemas/RevocationDetails'
        pemCertificate:
          description: Output only. The pem-encoded, signed X.509 certificate.
          readOnly: true
          type: string
        certificateDescription:
          description: >-
            Output only. A structured description of the issued X.509
            certificate.
          readOnly: true
          $ref: '#/components/schemas/CertificateDescription'
        pemCertificateChain:
          description: >-
            Output only. The chain that may be used to verify the X.509
            certificate. Expected to be in issuer-to-root order according to RFC
            5246.
          readOnly: true
          type: array
          items:
            type: string
        createTime:
          description: Output only. The time at which this Certificate was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which this Certificate was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels with user-defined metadata.
          type: object
          additionalProperties:
            type: string
    CertificateConfig:
      id: CertificateConfig
      description: >-
        A CertificateConfig describes an X.509 certificate or CSR that is to be
        created, as an alternative to using ASN.1.
      type: object
      properties:
        subjectConfig:
          description: >-
            Required. Specifies some of the values in a certificate that are
            related to the subject.
          $ref: '#/components/schemas/SubjectConfig'
        x509Config:
          description: >-
            Required. Describes how some of the technical X.509 fields in a
            certificate should be populated.
          $ref: '#/components/schemas/X509Parameters'
        publicKey:
          description: >-
            Optional. The public key that corresponds to this config. This is,
            for example, used when issuing Certificates, but not when creating a
            self-signed CertificateAuthority or CertificateAuthority CSR.
          $ref: '#/components/schemas/PublicKey'
        subjectKeyId:
          description: >-
            Optional. When specified this provides a custom SKI to be used in
            the certificate. This should only be used to maintain a SKI of an
            existing CA originally created outside CA service, which was not
            generated using method (1) described in RFC 5280 section 4.2.1.2.
          $ref: '#/components/schemas/CertificateConfigKeyId'
    SubjectConfig:
      id: SubjectConfig
      description: >-
        These values are used to create the distinguished name and subject
        alternative name fields in an X.509 certificate.
      type: object
      properties:
        subject:
          description: >-
            Optional. Contains distinguished name fields such as the common
            name, location and organization.
          $ref: '#/components/schemas/Subject'
        subjectAltName:
          description: Optional. The subject alternative name fields.
          $ref: '#/components/schemas/SubjectAltNames'
    Subject:
      id: Subject
      description: >-
        Subject describes parts of a distinguished name that, in turn, describes
        the subject of the certificate.
      type: object
      properties:
        commonName:
          description: The "common name" of the subject.
          type: string
        countryCode:
          description: The country code of the subject.
          type: string
        organization:
          description: The organization of the subject.
          type: string
        organizationalUnit:
          description: The organizational_unit of the subject.
          type: string
        locality:
          description: The locality or city of the subject.
          type: string
        province:
          description: The province, territory, or regional state of the subject.
          type: string
        streetAddress:
          description: The street address of the subject.
          type: string
        postalCode:
          description: The postal code of the subject.
          type: string
    SubjectAltNames:
      id: SubjectAltNames
      description: >-
        SubjectAltNames corresponds to a more modern way of listing what the
        asserted identity is in a certificate (i.e., compared to the "common
        name" in the distinguished name).
      type: object
      properties:
        dnsNames:
          description: Contains only valid, fully-qualified host names.
          type: array
          items:
            type: string
        uris:
          description: Contains only valid RFC 3986 URIs.
          type: array
          items:
            type: string
        emailAddresses:
          description: Contains only valid RFC 2822 E-mail addresses.
          type: array
          items:
            type: string
        ipAddresses:
          description: >-
            Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6
            addresses.
          type: array
          items:
            type: string
        customSans:
          description: >-
            Contains additional subject alternative name values. For each
            custom_san, the `value` field must contain an ASN.1 encoded
            UTF8String.
          type: array
          items:
            $ref: '#/components/schemas/X509Extension'
    X509Extension:
      id: X509Extension
      description: >-
        An X509Extension specifies an X.509 extension, which may be used in
        different parts of X.509 objects like certificates, CSRs, and CRLs.
      type: object
      properties:
        objectId:
          description: Required. The OID for this X.509 extension.
          $ref: '#/components/schemas/ObjectId'
        critical:
          description: >-
            Optional. Indicates whether or not this extension is critical (i.e.,
            if the client does not know how to handle this extension, the client
            should consider this to be an error).
          type: boolean
        value:
          description: Required. The value of this X.509 extension.
          type: string
          format: byte
    ObjectId:
      id: ObjectId
      description: >-
        An ObjectId specifies an object identifier (OID). These provide context
        and describe types in ASN.1 messages.
      type: object
      properties:
        objectIdPath:
          description: >-
            Required. The parts of an OID path. The most significant parts of
            the path come first.
          type: array
          items:
            type: integer
            format: int32
    X509Parameters:
      id: X509Parameters
      description: >-
        An X509Parameters is used to describe certain fields of an X.509
        certificate, such as the key usage fields, fields specific to CA
        certificates, certificate policy extensions and custom extensions.
      type: object
      properties:
        keyUsage:
          description: >-
            Optional. Indicates the intended use for keys that correspond to a
            certificate.
          $ref: '#/components/schemas/KeyUsage'
        caOptions:
          description: >-
            Optional. Describes options in this X509Parameters that are relevant
            in a CA certificate.
          $ref: '#/components/schemas/CaOptions'
        policyIds:
          description: >-
            Optional. Describes the X.509 certificate policy object identifiers,
            per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
          type: array
          items:
            $ref: '#/components/schemas/ObjectId'
        aiaOcspServers:
          description: >-
            Optional. Describes Online Certificate Status Protocol (OCSP)
            endpoint addresses that appear in the "Authority Information Access"
            extension in the certificate.
          type: array
          items:
            type: string
        nameConstraints:
          description: Optional. Describes the X.509 name constraints extension.
          $ref: '#/components/schemas/NameConstraints'
        additionalExtensions:
          description: Optional. Describes custom X.509 extensions.
          type: array
          items:
            $ref: '#/components/schemas/X509Extension'
    KeyUsage:
      id: KeyUsage
      description: >-
        A KeyUsage describes key usage values that may appear in an X.509
        certificate.
      type: object
      properties:
        baseKeyUsage:
          description: Describes high-level ways in which a key may be used.
          $ref: '#/components/schemas/KeyUsageOptions'
        extendedKeyUsage:
          description: Detailed scenarios in which a key may be used.
          $ref: '#/components/schemas/ExtendedKeyUsageOptions'
        unknownExtendedKeyUsages:
          description: >-
            Used to describe extended key usages that are not listed in the
            KeyUsage.ExtendedKeyUsageOptions message.
          type: array
          items:
            $ref: '#/components/schemas/ObjectId'
    KeyUsageOptions:
      id: KeyUsageOptions
      description: >-
        KeyUsage.KeyUsageOptions corresponds to the key usage values described
        in https://tools.ietf.org/html/rfc5280#section-4.2.1.3.
      type: object
      properties:
        digitalSignature:
          description: The key may be used for digital signatures.
          type: boolean
        contentCommitment:
          description: >-
            The key may be used for cryptographic commitments. Note that this
            may also be referred to as "non-repudiation".
          type: boolean
        keyEncipherment:
          description: The key may be used to encipher other keys.
          type: boolean
        dataEncipherment:
          description: The key may be used to encipher data.
          type: boolean
        keyAgreement:
          description: The key may be used in a key agreement protocol.
          type: boolean
        certSign:
          description: The key may be used to sign certificates.
          type: boolean
        crlSign:
          description: The key may be used sign certificate revocation lists.
          type: boolean
        encipherOnly:
          description: The key may be used to encipher only.
          type: boolean
        decipherOnly:
          description: The key may be used to decipher only.
          type: boolean
    ExtendedKeyUsageOptions:
      id: ExtendedKeyUsageOptions
      description: >-
        KeyUsage.ExtendedKeyUsageOptions has fields that correspond to certain
        common OIDs that could be specified as an extended key usage value.
      type: object
      properties:
        serverAuth:
          description: >-
            Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS
            WWW server authentication", though regularly used for non-WWW TLS.
          type: boolean
        clientAuth:
          description: >-
            Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS
            WWW client authentication", though regularly used for non-WWW TLS.
          type: boolean
        codeSigning:
          description: >-
            Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as
            "Signing of downloadable executable code client authentication".
          type: boolean
        emailProtection:
          description: >-
            Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email
            protection".
          type: boolean
        timeStamping:
          description: >-
            Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as
            "Binding the hash of an object to a time".
          type: boolean
        ocspSigning:
          description: >-
            Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as
            "Signing OCSP responses".
          type: boolean
    CaOptions:
      id: CaOptions
      description: Describes values that are relevant in a CA certificate.
      type: object
      properties:
        isCa:
          description: >-
            Optional. Refers to the "CA" X.509 extension, which is a boolean
            value. When this value is missing, the extension will be omitted
            from the CA certificate.
          type: boolean
        maxIssuerPathLength:
          description: >-
            Optional. Refers to the path length restriction X.509 extension. For
            a CA certificate, this value describes the depth of subordinate CA
            certificates that are allowed. If this value is less than 0, the
            request will fail. If this value is missing, the max path length
            will be omitted from the CA certificate.
          type: integer
          format: int32
    NameConstraints:
      id: NameConstraints
      description: >-
        Describes the X.509 name constraints extension, per
        https://tools.ietf.org/html/rfc5280#section-4.2.1.10
      type: object
      properties:
        critical:
          description: Indicates whether or not the name constraints are marked critical.
          type: boolean
        permittedDnsNames:
          description: >-
            Contains permitted DNS names. Any DNS name that can be constructed
            by simply adding zero or more labels to the left-hand side of the
            name satisfies the name constraint. For example, `example.com`,
            `www.example.com`, `www.sub.example.com` would satisfy `example.com`
            while `example1.com` does not.
          type: array
          items:
            type: string
        excludedDnsNames:
          description: >-
            Contains excluded DNS names. Any DNS name that can be constructed by
            simply adding zero or more labels to the left-hand side of the name
            satisfies the name constraint. For example, `example.com`,
            `www.example.com`, `www.sub.example.com` would satisfy `example.com`
            while `example1.com` does not.
          type: array
          items:
            type: string
        permittedIpRanges:
          description: >-
            Contains the permitted IP ranges. For IPv4 addresses, the ranges are
            expressed using CIDR notation as specified in RFC 4632. For IPv6
            addresses, the ranges are expressed in similar encoding as IPv4
            addresses.
          type: array
          items:
            type: string
        excludedIpRanges:
          description: >-
            Contains the excluded IP ranges. For IPv4 addresses, the ranges are
            expressed using CIDR notation as specified in RFC 4632. For IPv6
            addresses, the ranges are expressed in similar encoding as IPv4
            addresses.
          type: array
          items:
            type: string
        permittedEmailAddresses:
          description: >-
            Contains the permitted email addresses. The value can be a
            particular email address, a hostname to indicate all email addresses
            on that host or a domain with a leading period (e.g. `.example.com`)
            to indicate all email addresses in that domain.
          type: array
          items:
            type: string
        excludedEmailAddresses:
          description: >-
            Contains the excluded email addresses. The value can be a particular
            email address, a hostname to indicate all email addresses on that
            host or a domain with a leading period (e.g. `.example.com`) to
            indicate all email addresses in that domain.
          type: array
          items:
            type: string
        permittedUris:
          description: >-
            Contains the permitted URIs that apply to the host part of the name.
            The value can be a hostname or a domain with a leading period (like
            `.example.com`)
          type: array
          items:
            type: string
        excludedUris:
          description: >-
            Contains the excluded URIs that apply to the host part of the name.
            The value can be a hostname or a domain with a leading period (like
            `.example.com`)
          type: array
          items:
            type: string
    PublicKey:
      id: PublicKey
      description: A PublicKey describes a public key.
      type: object
      properties:
        key:
          description: >-
            Required. A public key. The padding and encoding must match with the
            `KeyFormat` value specified for the `format` field.
          type: string
          format: byte
        format:
          description: Required. The format of the public key.
          type: string
          enumDescriptions:
            - Default unspecified value.
            - >-
              The key is PEM-encoded as defined in [RFC
              7468](https://tools.ietf.org/html/rfc7468). It can be any of the
              following: a PEM-encoded PKCS#1/RFC 3447 RSAPublicKey structure,
              an RFC 5280
              [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1)
              or a PEM-encoded X.509 certificate signing request (CSR). If a
              [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1)
              is specified, it can contain a A PEM-encoded PKCS#1/RFC 3447
              RSAPublicKey or a NIST P-256/secp256r1/prime256v1 or P-384 key. If
              a CSR is specified, it will used solely for the purpose of
              extracting the public key. When generated by the service, it will
              always be an RFC 5280
              [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1)
              structure containing an algorithm identifier and a key.
          enum:
            - KEY_FORMAT_UNSPECIFIED
            - PEM
    CertificateConfigKeyId:
      id: CertificateConfigKeyId
      description: >-
        A KeyId identifies a specific public key, usually by hashing the public
        key.
      type: object
      properties:
        keyId:
          description: >-
            Required. The value of this KeyId encoded in lowercase hexadecimal.
            This is most likely the 160 bit SHA-1 hash of the public key.
          type: string
    RevocationDetails:
      id: RevocationDetails
      description: Describes fields that are relavent to the revocation of a Certificate.
      type: object
      properties:
        revocationState:
          description: Indicates why a Certificate was revoked.
          type: string
          enumDescriptions:
            - >-
              Default unspecified value. This value does indicate that a
              Certificate has been revoked, but that a reason has not been
              recorded.
            - Key material for this Certificate may have leaked.
            - >-
              The key material for a certificate authority in the issuing path
              may have leaked.
            - The subject or other attributes in this Certificate have changed.
            - This Certificate has been superseded.
            - >-
              This Certificate or entities in the issuing path have ceased to
              operate.
            - >-
              This Certificate should not be considered valid, it is expected
              that it may become valid in the future.
            - >-
              This Certificate no longer has permission to assert the listed
              attributes.
            - >-
              The authority which determines appropriate attributes for a
              Certificate may have been compromised.
          enum:
            - REVOCATION_REASON_UNSPECIFIED
            - KEY_COMPROMISE
            - CERTIFICATE_AUTHORITY_COMPROMISE
            - AFFILIATION_CHANGED
            - SUPERSEDED
            - CESSATION_OF_OPERATION
            - CERTIFICATE_HOLD
            - PRIVILEGE_WITHDRAWN
            - ATTRIBUTE_AUTHORITY_COMPROMISE
        revocationTime:
          description: The time at which this Certificate was revoked.
          type: string
          format: google-datetime
    CertificateDescription:
      id: CertificateDescription
      description: >-
        A CertificateDescription describes an X.509 certificate or CSR that has
        been issued, as an alternative to using ASN.1 / X.509.
      type: object
      properties:
        subjectDescription:
          description: >-
            Describes some of the values in a certificate that are related to
            the subject and lifetime.
          $ref: '#/components/schemas/SubjectDescription'
        x509Description:
          description: Describes some of the technical X.509 fields in a certificate.
          $ref: '#/components/schemas/X509Parameters'
        publicKey:
          description: The public key that corresponds to an issued certificate.
          $ref: '#/components/schemas/PublicKey'
        subjectKeyId:
          description: >-
            Provides a means of identifiying certificates that contain a
            particular public key, per
            https://tools.ietf.org/html/rfc5280#section-4.2.1.2.
          $ref: '#/components/schemas/KeyId'
        authorityKeyId:
          description: >-
            Identifies the subject_key_id of the parent certificate, per
            https://tools.ietf.org/html/rfc5280#section-4.2.1.1
          $ref: '#/components/schemas/KeyId'
        crlDistributionPoints:
          description: >-
            Describes a list of locations to obtain CRL information, i.e. the
            DistributionPoint.fullName described by
            https://tools.ietf.org/html/rfc5280#section-4.2.1.13
          type: array
          items:
            type: string
        aiaIssuingCertificateUrls:
          description: >-
            Describes lists of issuer CA certificate URLs that appear in the
            "Authority Information Access" extension in the certificate.
          type: array
          items:
            type: string
        certFingerprint:
          description: The hash of the x.509 certificate.
          $ref: '#/components/schemas/CertificateFingerprint'
    SubjectDescription:
      id: SubjectDescription
      description: >-
        These values describe fields in an issued X.509 certificate such as the
        distinguished name, subject alternative names, serial number, and
        lifetime.
      type: object
      properties:
        subject:
          description: >-
            Contains distinguished name fields such as the common name, location
            and / organization.
          $ref: '#/components/schemas/Subject'
        subjectAltName:
          description: The subject alternative name fields.
          $ref: '#/components/schemas/SubjectAltNames'
        hexSerialNumber:
          description: The serial number encoded in lowercase hexadecimal.
          type: string
        lifetime:
          description: For convenience, the actual lifetime of an issued certificate.
          type: string
          format: google-duration
        notBeforeTime:
          description: The time at which the certificate becomes valid.
          type: string
          format: google-datetime
        notAfterTime:
          description: >-
            The time after which the certificate is expired. Per RFC 5280, the
            validity period for a certificate is the period of time from
            not_before_time through not_after_time, inclusive. Corresponds to
            'not_before_time' + 'lifetime' - 1 second.
          type: string
          format: google-datetime
    KeyId:
      id: KeyId
      description: >-
        A KeyId identifies a specific public key, usually by hashing the public
        key.
      type: object
      properties:
        keyId:
          description: >-
            Optional. The value of this KeyId encoded in lowercase hexadecimal.
            This is most likely the 160 bit SHA-1 hash of the public key.
          type: string
    CertificateFingerprint:
      id: CertificateFingerprint
      description: A group of fingerprints for the x509 certificate.
      type: object
      properties:
        sha256Hash:
          description: >-
            The SHA 256 hash, encoded in hexadecimal, of the DER x509
            certificate.
          type: string
    ListCertificatesResponse:
      id: ListCertificatesResponse
      description: Response message for CertificateAuthorityService.ListCertificates.
      type: object
      properties:
        certificates:
          description: The list of Certificates.
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass this value in
            ListCertificatesRequest.next_page_token to retrieve the next page of
            results.
          type: string
        unreachable:
          description: A list of locations (e.g. "us-west1") that could not be reached.
          type: array
          items:
            type: string
    RevokeCertificateRequest:
      id: RevokeCertificateRequest
      description: Request message for CertificateAuthorityService.RevokeCertificate.
      type: object
      properties:
        reason:
          description: Required. The RevocationReason for revoking this certificate.
          type: string
          enumDescriptions:
            - >-
              Default unspecified value. This value does indicate that a
              Certificate has been revoked, but that a reason has not been
              recorded.
            - Key material for this Certificate may have leaked.
            - >-
              The key material for a certificate authority in the issuing path
              may have leaked.
            - The subject or other attributes in this Certificate have changed.
            - This Certificate has been superseded.
            - >-
              This Certificate or entities in the issuing path have ceased to
              operate.
            - >-
              This Certificate should not be considered valid, it is expected
              that it may become valid in the future.
            - >-
              This Certificate no longer has permission to assert the listed
              attributes.
            - >-
              The authority which determines appropriate attributes for a
              Certificate may have been compromised.
          enum:
            - REVOCATION_REASON_UNSPECIFIED
            - KEY_COMPROMISE
            - CERTIFICATE_AUTHORITY_COMPROMISE
            - AFFILIATION_CHANGED
            - SUPERSEDED
            - CESSATION_OF_OPERATION
            - CERTIFICATE_HOLD
            - PRIVILEGE_WITHDRAWN
            - ATTRIBUTE_AUTHORITY_COMPROMISE
        requestId:
          description: >-
            Optional. An ID to identify requests. Specify a unique request ID so
            that if you must retry your request, the server will know to ignore
            the request if it has already been completed. The server will
            guarantee that for at least 60 minutes since the first request. For
            example, consider a situation where you make an initial request and
            the request times out. If you make the request again with the same
            request ID, the server can check if original operation with the same
            request ID was received, and if so, will ignore the second request.
            This prevents clients from accidentally creating duplicate
            commitments. The request ID must be a valid UUID with the exception
            that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    ActivateCertificateAuthorityRequest:
      id: ActivateCertificateAuthorityRequest
      description: >-
        Request message for
        CertificateAuthorityService.ActivateCertificateAuthority.
      type: object
      properties:
        pemCaCertificate:
          description: >-
            Required. The signed CA certificate issued from
            FetchCertificateAuthorityCsrResponse.pem_csr.
          type: string
        subordinateConfig:
          description: >-
            Required. Must include information about the issuer of
            'pem_ca_certificate', and any further issuers until the self-signed
            CA.
          $ref: '#/components/schemas/SubordinateConfig'
        requestId:
          description: >-
            Optional. An ID to identify requests. Specify a unique request ID so
            that if you must retry your request, the server will know to ignore
            the request if it has already been completed. The server will
            guarantee that for at least 60 minutes since the first request. For
            example, consider a situation where you make an initial request and
            the request times out. If you make the request again with the same
            request ID, the server can check if original operation with the same
            request ID was received, and if so, will ignore the second request.
            This prevents clients from accidentally creating duplicate
            commitments. The request ID must be a valid UUID with the exception
            that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    SubordinateConfig:
      id: SubordinateConfig
      description: >-
        Describes a subordinate CA's issuers. This is either a resource name to
        a known issuing CertificateAuthority, or a PEM issuer certificate chain.
      type: object
      properties:
        certificateAuthority:
          description: >-
            Required. This can refer to a CertificateAuthority that was used to
            create a subordinate CertificateAuthority. This field is used for
            information and usability purposes only. The resource name is in the
            format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          type: string
        pemIssuerChain:
          description: >-
            Required. Contains the PEM certificate chain for the issuers of this
            CertificateAuthority, but not pem certificate for this CA itself.
          $ref: '#/components/schemas/SubordinateConfigChain'
    SubordinateConfigChain:
      id: SubordinateConfigChain
      description: >-
        This message describes a subordinate CA's issuer certificate chain. This
        wrapper exists for compatibility reasons.
      type: object
      properties:
        pemCertificates:
          description: >-
            Required. Expected to be in leaf-to-root order according to RFC
            5246.
          type: array
          items:
            type: string
    CertificateAuthority:
      id: CertificateAuthority
      description: >-
        A CertificateAuthority represents an individual Certificate Authority. A
        CertificateAuthority can be used to create Certificates.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name for this CertificateAuthority in the
            format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          readOnly: true
          type: string
        type:
          description: Required. Immutable. The Type of this CertificateAuthority.
          type: string
          enumDescriptions:
            - Not specified.
            - Self-signed CA.
            - >-
              Subordinate CA. Could be issued by a Private CA
              CertificateAuthority or an unmanaged CA.
          enum:
            - TYPE_UNSPECIFIED
            - SELF_SIGNED
            - SUBORDINATE
        config:
          description: >-
            Required. Immutable. The config used to create a self-signed X.509
            certificate or CSR.
          $ref: '#/components/schemas/CertificateConfig'
        lifetime:
          description: >-
            Required. Immutable. The desired lifetime of the CA certificate.
            Used to create the "not_before_time" and "not_after_time" fields
            inside an X.509 certificate.
          type: string
          format: google-duration
        keySpec:
          description: >-
            Required. Immutable. Used when issuing certificates for this
            CertificateAuthority. If this CertificateAuthority is a self-signed
            CertificateAuthority, this key is also used to sign the self-signed
            CA certificate. Otherwise, it is used to sign a CSR.
          $ref: '#/components/schemas/KeyVersionSpec'
        subordinateConfig:
          description: >-
            Optional. If this is a subordinate CertificateAuthority, this field
            will be set with the subordinate configuration, which describes its
            issuers. This may be updated, but this CertificateAuthority must
            continue to validate.
          $ref: '#/components/schemas/SubordinateConfig'
        tier:
          description: >-
            Output only. The CaPool.Tier of the CaPool that includes this
            CertificateAuthority.
          readOnly: true
          type: string
          enumDescriptions:
            - Not specified.
            - Enterprise tier.
            - DevOps tier.
          enum:
            - TIER_UNSPECIFIED
            - ENTERPRISE
            - DEVOPS
        state:
          description: Output only. The State for this CertificateAuthority.
          readOnly: true
          type: string
          enumDescriptions:
            - Not specified.
            - >-
              Certificates can be issued from this CA. CRLs will be generated
              for this CA. The CA will be part of the CaPool's trust anchor, and
              will be used to issue certificates from the CaPool.
            - >-
              Certificates cannot be issued from this CA. CRLs will still be
              generated. The CA will be part of the CaPool's trust anchor, but
              will not be used to issue certificates from the CaPool.
            - >-
              Certificates can be issued from this CA. CRLs will be generated
              for this CA. The CA will be part of the CaPool's trust anchor, but
              will not be used to issue certificates from the CaPool.
            - >-
              Certificates cannot be issued from this CA. CRLs will not be
              generated. The CA will not be part of the CaPool's trust anchor,
              and will not be used to issue certificates from the CaPool.
            - >-
              Certificates cannot be issued from this CA. CRLs will not be
              generated. The CA may still be recovered by calling
              CertificateAuthorityService.UndeleteCertificateAuthority before
              expire_time. The CA will not be part of the CaPool's trust anchor,
              and will not be used to issue certificates from the CaPool.
          enum:
            - STATE_UNSPECIFIED
            - ENABLED
            - DISABLED
            - STAGED
            - AWAITING_USER_ACTIVATION
            - DELETED
        pemCaCertificates:
          description: >-
            Output only. This CertificateAuthority's certificate chain,
            including the current CertificateAuthority's certificate. Ordered
            such that the root issuer is the final element (consistent with RFC
            5246). For a self-signed CA, this will only list the current
            CertificateAuthority's certificate.
          readOnly: true
          type: array
          items:
            type: string
        caCertificateDescriptions:
          description: >-
            Output only. A structured description of this CertificateAuthority's
            CA certificate and its issuers. Ordered as self-to-root.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CertificateDescription'
        gcsBucket:
          description: >-
            Immutable. The name of a Cloud Storage bucket where this
            CertificateAuthority will publish content, such as the CA
            certificate and CRLs. This must be a bucket name, without any
            prefixes (such as `gs://`) or suffixes (such as `.googleapis.com`).
            For example, to use a bucket named `my-bucket`, you would simply
            specify `my-bucket`. If not specified, a managed bucket will be
            created.
          type: string
        accessUrls:
          description: >-
            Output only. URLs for accessing content published by this CA, such
            as the CA certificate and CRLs.
          readOnly: true
          $ref: '#/components/schemas/AccessUrls'
        createTime:
          description: >-
            Output only. The time at which this CertificateAuthority was
            created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The time at which this CertificateAuthority was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: >-
            Output only. The time at which this CertificateAuthority was soft
            deleted, if it is in the DELETED state.
          readOnly: true
          type: string
          format: google-datetime
        expireTime:
          description: >-
            Output only. The time at which this CertificateAuthority will be
            permanently purged, if it is in the DELETED state.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels with user-defined metadata.
          type: object
          additionalProperties:
            type: string
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
    KeyVersionSpec:
      id: KeyVersionSpec
      description: A Cloud KMS key configuration that a CertificateAuthority will use.
      type: object
      properties:
        cloudKmsKeyVersion:
          description: >-
            The resource name for an existing Cloud KMS CryptoKeyVersion in the
            format
            `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
            This option enables full flexibility in the key's capabilities and
            properties.
          type: string
        algorithm:
          description: >-
            The algorithm to use for creating a managed Cloud KMS key for a for
            a simplified experience. All managed keys will be have their
            ProtectionLevel as `HSM`.
          type: string
          enumDescriptions:
            - Not specified.
            - maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_2048_SHA256
            - maps to CryptoKeyVersionAlgorithm. RSA_SIGN_PSS_3072_SHA256
            - maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_4096_SHA256
            - maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_2048_SHA256
            - maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_3072_SHA256
            - maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_4096_SHA256
            - maps to CryptoKeyVersionAlgorithm.EC_SIGN_P256_SHA256
            - maps to CryptoKeyVersionAlgorithm.EC_SIGN_P384_SHA384
          enum:
            - SIGN_HASH_ALGORITHM_UNSPECIFIED
            - RSA_PSS_2048_SHA256
            - RSA_PSS_3072_SHA256
            - RSA_PSS_4096_SHA256
            - RSA_PKCS1_2048_SHA256
            - RSA_PKCS1_3072_SHA256
            - RSA_PKCS1_4096_SHA256
            - EC_P256_SHA256
            - EC_P384_SHA384
    AccessUrls:
      id: AccessUrls
      description: URLs where a CertificateAuthority will publish content.
      type: object
      properties:
        caCertificateAccessUrl:
          description: >-
            The URL where this CertificateAuthority's CA certificate is
            published. This will only be set for CAs that have been activated.
          type: string
        crlAccessUrls:
          description: >-
            The URLs where this CertificateAuthority's CRLs are published. This
            will only be set for CAs that have been activated.
          type: array
          items:
            type: string
    DisableCertificateAuthorityRequest:
      id: DisableCertificateAuthorityRequest
      description: >-
        Request message for
        CertificateAuthorityService.DisableCertificateAuthority.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An ID to identify requests. Specify a unique request ID so
            that if you must retry your request, the server will know to ignore
            the request if it has already been completed. The server will
            guarantee that for at least 60 minutes since the first request. For
            example, consider a situation where you make an initial request and
            the request times out. If you make the request again with the same
            request ID, the server can check if original operation with the same
            request ID was received, and if so, will ignore the second request.
            This prevents clients from accidentally creating duplicate
            commitments. The request ID must be a valid UUID with the exception
            that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        ignoreDependentResources:
          description: >-
            Optional. This field allows this CA to be disabled even if it's
            being depended on by another resource. However, doing so may result
            in unintended and unrecoverable effects on any dependent resources
            since the CA will no longer be able to issue certificates.
          type: boolean
    EnableCertificateAuthorityRequest:
      id: EnableCertificateAuthorityRequest
      description: >-
        Request message for
        CertificateAuthorityService.EnableCertificateAuthority.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An ID to identify requests. Specify a unique request ID so
            that if you must retry your request, the server will know to ignore
            the request if it has already been completed. The server will
            guarantee that for at least 60 minutes since the first request. For
            example, consider a situation where you make an initial request and
            the request times out. If you make the request again with the same
            request ID, the server can check if original operation with the same
            request ID was received, and if so, will ignore the second request.
            This prevents clients from accidentally creating duplicate
            commitments. The request ID must be a valid UUID with the exception
            that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    FetchCertificateAuthorityCsrResponse:
      id: FetchCertificateAuthorityCsrResponse
      description: >-
        Response message for
        CertificateAuthorityService.FetchCertificateAuthorityCsr.
      type: object
      properties:
        pemCsr:
          description: >-
            Output only. The PEM-encoded signed certificate signing request
            (CSR).
          readOnly: true
          type: string
    ListCertificateAuthoritiesResponse:
      id: ListCertificateAuthoritiesResponse
      description: >-
        Response message for
        CertificateAuthorityService.ListCertificateAuthorities.
      type: object
      properties:
        certificateAuthorities:
          description: The list of CertificateAuthorities.
          type: array
          items:
            $ref: '#/components/schemas/CertificateAuthority'
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass this value in
            ListCertificateAuthoritiesRequest.next_page_token to retrieve the
            next page of results.
          type: string
        unreachable:
          description: A list of locations (e.g. "us-west1") that could not be reached.
          type: array
          items:
            type: string
    UndeleteCertificateAuthorityRequest:
      id: UndeleteCertificateAuthorityRequest
      description: >-
        Request message for
        CertificateAuthorityService.UndeleteCertificateAuthority.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An ID to identify requests. Specify a unique request ID so
            that if you must retry your request, the server will know to ignore
            the request if it has already been completed. The server will
            guarantee that for at least 60 minutes since the first request. For
            example, consider a situation where you make an initial request and
            the request times out. If you make the request again with the same
            request ID, the server can check if original operation with the same
            request ID was received, and if so, will ignore the second request.
            This prevents clients from accidentally creating duplicate
            commitments. The request ID must be a valid UUID with the exception
            that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    CaPool:
      id: CaPool
      description: >-
        A CaPool represents a group of CertificateAuthorities that form a trust
        anchor. A CaPool can be used to manage issuance policies for one or more
        CertificateAuthority resources and to rotate CA certificates in and out
        of the trust anchor.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name for this CaPool in the format
            `projects/*/locations/*/caPools/*`.
          readOnly: true
          type: string
        tier:
          description: Required. Immutable. The Tier of this CaPool.
          type: string
          enumDescriptions:
            - Not specified.
            - Enterprise tier.
            - DevOps tier.
          enum:
            - TIER_UNSPECIFIED
            - ENTERPRISE
            - DEVOPS
        issuancePolicy:
          description: >-
            Optional. The IssuancePolicy to control how Certificates will be
            issued from this CaPool.
          $ref: '#/components/schemas/IssuancePolicy'
        publishingOptions:
          description: >-
            Optional. The PublishingOptions to follow when issuing Certificates
            from any CertificateAuthority in this CaPool.
          $ref: '#/components/schemas/PublishingOptions'
        labels:
          description: Optional. Labels with user-defined metadata.
          type: object
          additionalProperties:
            type: string
    IssuancePolicy:
      id: IssuancePolicy
      description: Defines controls over all certificate issuance within a CaPool.
      type: object
      properties:
        allowedKeyTypes:
          description: >-
            Optional. If any AllowedKeyType is specified, then the certificate
            request's public key must match one of the key types listed here.
            Otherwise, any key may be used.
          type: array
          items:
            $ref: '#/components/schemas/AllowedKeyType'
        maximumLifetime:
          description: >-
            Optional. The maximum lifetime allowed for issued Certificates. Note
            that if the issuing CertificateAuthority expires before a
            Certificate resource's requested maximum_lifetime, the effective
            lifetime will be explicitly truncated to match it.
          type: string
          format: google-duration
        allowedIssuanceModes:
          description: >-
            Optional. If specified, then only methods allowed in the
            IssuanceModes may be used to issue Certificates.
          $ref: '#/components/schemas/IssuanceModes'
        baselineValues:
          description: >-
            Optional. A set of X.509 values that will be applied to all
            certificates issued through this CaPool. If a certificate request
            includes conflicting values for the same properties, they will be
            overwritten by the values defined here. If a certificate request
            uses a CertificateTemplate that defines conflicting
            predefined_values for the same properties, the certificate issuance
            request will fail.
          $ref: '#/components/schemas/X509Parameters'
        identityConstraints:
          description: >-
            Optional. Describes constraints on identities that may appear in
            Certificates issued through this CaPool. If this is omitted, then
            this CaPool will not add restrictions on a certificate's identity.
          $ref: '#/components/schemas/CertificateIdentityConstraints'
        passthroughExtensions:
          description: >-
            Optional. Describes the set of X.509 extensions that may appear in a
            Certificate issued through this CaPool. If a certificate request
            sets extensions that don't appear in the passthrough_extensions,
            those extensions will be dropped. If a certificate request uses a
            CertificateTemplate with predefined_values that don't appear here,
            the certificate issuance request will fail. If this is omitted, then
            this CaPool will not add restrictions on a certificate's X.509
            extensions. These constraints do not apply to X.509 extensions set
            in this CaPool's baseline_values.
          $ref: '#/components/schemas/CertificateExtensionConstraints'
    AllowedKeyType:
      id: AllowedKeyType
      description: >-
        Describes a "type" of key that may be used in a Certificate issued from
        a CaPool. Note that a single AllowedKeyType may refer to either a
        fully-qualified key algorithm, such as RSA 4096, or a family of key
        algorithms, such as any RSA key.
      type: object
      properties:
        rsa:
          description: Represents an allowed RSA key type.
          $ref: '#/components/schemas/RsaKeyType'
        ellipticCurve:
          description: Represents an allowed Elliptic Curve key type.
          $ref: '#/components/schemas/EcKeyType'
    RsaKeyType:
      id: RsaKeyType
      description: >-
        Describes an RSA key that may be used in a Certificate issued from a
        CaPool.
      type: object
      properties:
        minModulusSize:
          description: >-
            Optional. The minimum allowed RSA modulus size (inclusive), in bits.
            If this is not set, or if set to zero, the service-level min RSA
            modulus size will continue to apply.
          type: string
          format: int64
        maxModulusSize:
          description: >-
            Optional. The maximum allowed RSA modulus size (inclusive), in bits.
            If this is not set, or if set to zero, the service will not enforce
            an explicit upper bound on RSA modulus sizes.
          type: string
          format: int64
    EcKeyType:
      id: EcKeyType
      description: >-
        Describes an Elliptic Curve key that may be used in a Certificate issued
        from a CaPool.
      type: object
      properties:
        signatureAlgorithm:
          description: >-
            Optional. A signature algorithm that must be used. If this is
            omitted, any EC-based signature algorithm will be allowed.
          type: string
          enumDescriptions:
            - Not specified. Signifies that any signature algorithm may be used.
            - >-
              Refers to the Elliptic Curve Digital Signature Algorithm over the
              NIST P-256 curve.
            - >-
              Refers to the Elliptic Curve Digital Signature Algorithm over the
              NIST P-384 curve.
            - >-
              Refers to the Edwards-curve Digital Signature Algorithm over curve
              25519, as described in RFC 8410.
          enum:
            - EC_SIGNATURE_ALGORITHM_UNSPECIFIED
            - ECDSA_P256
            - ECDSA_P384
            - EDDSA_25519
    IssuanceModes:
      id: IssuanceModes
      description: >-
        IssuanceModes specifies the allowed ways in which Certificates may be
        requested from this CaPool.
      type: object
      properties:
        allowCsrBasedIssuance:
          description: >-
            Optional. When true, allows callers to create Certificates by
            specifying a CSR.
          type: boolean
        allowConfigBasedIssuance:
          description: >-
            Optional. When true, allows callers to create Certificates by
            specifying a CertificateConfig.
          type: boolean
    CertificateIdentityConstraints:
      id: CertificateIdentityConstraints
      description: Describes constraints on a Certificate's Subject and SubjectAltNames.
      type: object
      properties:
        celExpression:
          description: >-
            Optional. A CEL expression that may be used to validate the resolved
            X.509 Subject and/or Subject Alternative Name before a certificate
            is signed. To see the full allowed syntax and some examples, see
            https://cloud.google.com/certificate-authority-service/docs/using-cel
          $ref: '#/components/schemas/Expr'
        allowSubjectPassthrough:
          description: >-
            Required. If this is true, the Subject field may be copied from a
            certificate request into the signed certificate. Otherwise, the
            requested Subject will be discarded.
          type: boolean
        allowSubjectAltNamesPassthrough:
          description: >-
            Required. If this is true, the SubjectAltNames extension may be
            copied from a certificate request into the signed certificate.
            Otherwise, the requested SubjectAltNames will be discarded.
          type: boolean
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    CertificateExtensionConstraints:
      id: CertificateExtensionConstraints
      description: >-
        Describes a set of X.509 extensions that may be part of some certificate
        issuance controls.
      type: object
      properties:
        knownExtensions:
          description: >-
            Optional. A set of named X.509 extensions. Will be combined with
            additional_extensions to determine the full set of X.509 extensions.
          type: array
          items:
            type: string
            enumDescriptions:
              - Not specified.
              - >-
                Refers to a certificate's Key Usage extension, as described in
                [RFC 5280 section
                4.2.1.3](https://tools.ietf.org/html/rfc5280#section-4.2.1.3).
                This corresponds to the KeyUsage.base_key_usage field.
              - >-
                Refers to a certificate's Extended Key Usage extension, as
                described in [RFC 5280 section
                4.2.1.12](https://tools.ietf.org/html/rfc5280#section-4.2.1.12).
                This corresponds to the KeyUsage.extended_key_usage message.
              - >-
                Refers to a certificate's Basic Constraints extension, as
                described in [RFC 5280 section
                4.2.1.9](https://tools.ietf.org/html/rfc5280#section-4.2.1.9).
                This corresponds to the X509Parameters.ca_options field.
              - >-
                Refers to a certificate's Policy object identifiers, as
                described in [RFC 5280 section
                4.2.1.4](https://tools.ietf.org/html/rfc5280#section-4.2.1.4).
                This corresponds to the X509Parameters.policy_ids field.
              - >-
                Refers to OCSP servers in a certificate's Authority Information
                Access extension, as described in [RFC 5280 section
                4.2.2.1](https://tools.ietf.org/html/rfc5280#section-4.2.2.1),
                This corresponds to the X509Parameters.aia_ocsp_servers field.
              - >-
                Refers to Name Constraints extension as described in [RFC 5280
                section
                4.2.1.10](https://tools.ietf.org/html/rfc5280#section-4.2.1.10)
            enum:
              - KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED
              - BASE_KEY_USAGE
              - EXTENDED_KEY_USAGE
              - CA_OPTIONS
              - POLICY_IDS
              - AIA_OCSP_SERVERS
              - NAME_CONSTRAINTS
        additionalExtensions:
          description: >-
            Optional. A set of ObjectIds identifying custom X.509 extensions.
            Will be combined with known_extensions to determine the full set of
            X.509 extensions.
          type: array
          items:
            $ref: '#/components/schemas/ObjectId'
    PublishingOptions:
      id: PublishingOptions
      description: >-
        Options relating to the publication of each CertificateAuthority's CA
        certificate and CRLs and their inclusion as extensions in issued
        Certificates. The options set here apply to certificates issued by any
        CertificateAuthority in the CaPool.
      type: object
      properties:
        publishCaCert:
          description: >-
            Optional. When true, publishes each CertificateAuthority's CA
            certificate and includes its URL in the "Authority Information
            Access" X.509 extension in all issued Certificates. If this is
            false, the CA certificate will not be published and the
            corresponding X.509 extension will not be written in issued
            certificates.
          type: boolean
        publishCrl:
          description: >-
            Optional. When true, publishes each CertificateAuthority's CRL and
            includes its URL in the "CRL Distribution Points" X.509 extension in
            all issued Certificates. If this is false, CRLs will not be
            published and the corresponding X.509 extension will not be written
            in issued certificates. CRLs will expire 7 days from their creation.
            However, we will rebuild daily. CRLs are also rebuilt shortly after
            a certificate is revoked.
          type: boolean
        encodingFormat:
          description: >-
            Optional. Specifies the encoding format of each CertificateAuthority
            resource's CA certificate and CRLs. If this is omitted, CA
            certificates and CRLs will be published in PEM.
          type: string
          enumDescriptions:
            - Not specified. By default, PEM format will be used.
            - >-
              The CertificateAuthority's CA certificate and CRLs will be
              published in PEM format.
            - >-
              The CertificateAuthority's CA certificate and CRLs will be
              published in DER format.
          enum:
            - ENCODING_FORMAT_UNSPECIFIED
            - PEM
            - DER
    ListCaPoolsResponse:
      id: ListCaPoolsResponse
      description: Response message for CertificateAuthorityService.ListCaPools.
      type: object
      properties:
        caPools:
          description: The list of CaPools.
          type: array
          items:
            $ref: '#/components/schemas/CaPool'
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass this value in
            ListCertificateAuthoritiesRequest.next_page_token to retrieve the
            next page of results.
          type: string
        unreachable:
          description: A list of locations (e.g. "us-west1") that could not be reached.
          type: array
          items:
            type: string
    FetchCaCertsRequest:
      id: FetchCaCertsRequest
      description: Request message for CertificateAuthorityService.FetchCaCerts.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An ID to identify requests. Specify a unique request ID so
            that if you must retry your request, the server will know to ignore
            the request if it has already been completed. The server will
            guarantee that for at least 60 minutes since the first request. For
            example, consider a situation where you make an initial request and
            the request times out. If you make the request again with the same
            request ID, the server can check if original operation with the same
            request ID was received, and if so, will ignore the second request.
            This prevents clients from accidentally creating duplicate
            commitments. The request ID must be a valid UUID with the exception
            that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    FetchCaCertsResponse:
      id: FetchCaCertsResponse
      description: Response message for CertificateAuthorityService.FetchCaCerts.
      type: object
      properties:
        caCerts:
          description: >-
            The PEM encoded CA certificate chains of all certificate authorities
            in this CaPool in the ENABLED, DISABLED, or STAGED states.
          type: array
          items:
            $ref: '#/components/schemas/CertChain'
    CertChain:
      id: CertChain
      type: object
      properties:
        certificates:
          description: The certificates that form the CA chain, from leaf to root order.
          type: array
          items:
            type: string
    CertificateRevocationList:
      id: CertificateRevocationList
      description: >-
        A CertificateRevocationList corresponds to a signed X.509 certificate
        Revocation List (CRL). A CRL contains the serial numbers of certificates
        that should no longer be trusted.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name for this CertificateRevocationList in
            the format
            `projects/*/locations/*/caPools/*certificateAuthorities/*/
            certificateRevocationLists/*`.
          readOnly: true
          type: string
        sequenceNumber:
          description: Output only. The CRL sequence number that appears in pem_crl.
          readOnly: true
          type: string
          format: int64
        revokedCertificates:
          description: Output only. The revoked serial numbers that appear in pem_crl.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RevokedCertificate'
        pemCrl:
          description: Output only. The PEM-encoded X.509 CRL.
          readOnly: true
          type: string
        accessUrl:
          description: Output only. The location where 'pem_crl' can be accessed.
          readOnly: true
          type: string
        state:
          description: Output only. The State for this CertificateRevocationList.
          readOnly: true
          type: string
          enumDescriptions:
            - Not specified.
            - The CertificateRevocationList is up to date.
            - The CertificateRevocationList is no longer current.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - SUPERSEDED
        createTime:
          description: >-
            Output only. The time at which this CertificateRevocationList was
            created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The time at which this CertificateRevocationList was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        revisionId:
          description: >-
            Output only. The revision ID of this CertificateRevocationList. A
            new revision is committed whenever a new CRL is published. The
            format is an 8-character hexadecimal string.
          readOnly: true
          type: string
        labels:
          description: Optional. Labels with user-defined metadata.
          type: object
          additionalProperties:
            type: string
    RevokedCertificate:
      id: RevokedCertificate
      description: Describes a revoked Certificate.
      type: object
      properties:
        certificate:
          description: >-
            The resource name for the Certificate in the format
            `projects/*/locations/*/caPools/*/certificates/*`.
          type: string
        hexSerialNumber:
          description: The serial number of the Certificate.
          type: string
        revocationReason:
          description: The reason the Certificate was revoked.
          type: string
          enumDescriptions:
            - >-
              Default unspecified value. This value does indicate that a
              Certificate has been revoked, but that a reason has not been
              recorded.
            - Key material for this Certificate may have leaked.
            - >-
              The key material for a certificate authority in the issuing path
              may have leaked.
            - The subject or other attributes in this Certificate have changed.
            - This Certificate has been superseded.
            - >-
              This Certificate or entities in the issuing path have ceased to
              operate.
            - >-
              This Certificate should not be considered valid, it is expected
              that it may become valid in the future.
            - >-
              This Certificate no longer has permission to assert the listed
              attributes.
            - >-
              The authority which determines appropriate attributes for a
              Certificate may have been compromised.
          enum:
            - REVOCATION_REASON_UNSPECIFIED
            - KEY_COMPROMISE
            - CERTIFICATE_AUTHORITY_COMPROMISE
            - AFFILIATION_CHANGED
            - SUPERSEDED
            - CESSATION_OF_OPERATION
            - CERTIFICATE_HOLD
            - PRIVILEGE_WITHDRAWN
            - ATTRIBUTE_AUTHORITY_COMPROMISE
    ListCertificateRevocationListsResponse:
      id: ListCertificateRevocationListsResponse
      description: >-
        Response message for
        CertificateAuthorityService.ListCertificateRevocationLists.
      type: object
      properties:
        certificateRevocationLists:
          description: The list of CertificateRevocationLists.
          type: array
          items:
            $ref: '#/components/schemas/CertificateRevocationList'
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass this value in
            ListCertificateRevocationListsRequest.next_page_token to retrieve
            the next page of results.
          type: string
        unreachable:
          description: A list of locations (e.g. "us-west1") that could not be reached.
          type: array
          items:
            type: string
    CertificateTemplate:
      id: CertificateTemplate
      description: >-
        A CertificateTemplate refers to a managed template for certificate
        issuance.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name for this CertificateTemplate in the
            format `projects/*/locations/*/certificateTemplates/*`.
          readOnly: true
          type: string
        maximumLifetime:
          description: >-
            Optional. The maximum lifetime allowed for issued Certificates that
            use this template. If the issuing CaPool resource's IssuancePolicy
            specifies a maximum_lifetime the minimum of the two durations will
            be the maximum lifetime for issued Certificates. Note that if the
            issuing CertificateAuthority expires before a Certificate's
            requested maximum_lifetime, the effective lifetime will be
            explicitly truncated to match it.
          type: string
          format: google-duration
        predefinedValues:
          description: >-
            Optional. A set of X.509 values that will be applied to all issued
            certificates that use this template. If the certificate request
            includes conflicting values for the same properties, they will be
            overwritten by the values defined here. If the issuing CaPool's
            IssuancePolicy defines conflicting baseline_values for the same
            properties, the certificate issuance request will fail.
          $ref: '#/components/schemas/X509Parameters'
        identityConstraints:
          description: >-
            Optional. Describes constraints on identities that may be appear in
            Certificates issued using this template. If this is omitted, then
            this template will not add restrictions on a certificate's identity.
          $ref: '#/components/schemas/CertificateIdentityConstraints'
        passthroughExtensions:
          description: >-
            Optional. Describes the set of X.509 extensions that may appear in a
            Certificate issued using this CertificateTemplate. If a certificate
            request sets extensions that don't appear in the
            passthrough_extensions, those extensions will be dropped. If the
            issuing CaPool's IssuancePolicy defines baseline_values that don't
            appear here, the certificate issuance request will fail. If this is
            omitted, then this template will not add restrictions on a
            certificate's X.509 extensions. These constraints do not apply to
            X.509 extensions set in this CertificateTemplate's
            predefined_values.
          $ref: '#/components/schemas/CertificateExtensionConstraints'
        description:
          description: >-
            Optional. A human-readable description of scenarios this template is
            intended for.
          type: string
        createTime:
          description: Output only. The time at which this CertificateTemplate was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which this CertificateTemplate was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels with user-defined metadata.
          type: object
          additionalProperties:
            type: string
    ListCertificateTemplatesResponse:
      id: ListCertificateTemplatesResponse
      description: >-
        Response message for
        CertificateAuthorityService.ListCertificateTemplates.
      type: object
      properties:
        certificateTemplates:
          description: The list of CertificateTemplates.
          type: array
          items:
            $ref: '#/components/schemas/CertificateTemplate'
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass this value in
            ListCertificateTemplatesRequest.next_page_token to retrieve the next
            page of results.
          type: string
        unreachable:
          description: A list of locations (e.g. "us-west1") that could not be reached.
          type: array
          items:
            type: string
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    ReconciliationOperationMetadata:
      id: ReconciliationOperationMetadata
      description: >-
        Operation metadata returned by the CLH during resource state
        reconciliation.
      type: object
      properties:
        deleteResource:
          description: DEPRECATED. Use exclusive_action instead.
          deprecated: true
          type: boolean
        exclusiveAction:
          description: Excluisive action returned by the CLH.
          type: string
          enumDescriptions:
            - Unknown repair action.
            - >-
              The resource has to be deleted. When using this bit, the CLH
              should fail the operation. DEPRECATED. Instead use DELETE_RESOURCE
              OperationSignal in SideChannel.
            - >-
              This resource could not be repaired but the repair should be tried
              again at a later time. This can happen if there is a dependency
              that needs to be resolved first- e.g. if a parent resource must be
              repaired before a child resource.
          enumDeprecated:
            - false
            - true
            - false
          enum:
            - UNKNOWN_REPAIR_ACTION
            - DELETE
            - RETRY
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.privateca.locations
      name: locations
      title: Locations
      methods:
        _list:
          operation: &ref_1
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        list:
          operation: *ref_1
          response: *ref_2
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.privateca.operations
      name: operations
      title: Operations
      methods:
        _list:
          operation: &ref_3
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        list:
          operation: *ref_3
          response: *ref_4
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    ca_pools:
      id: google.privateca.ca_pools
      name: ca_pools
      title: Ca_pools
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.caPools
        list:
          operation: *ref_5
          response: *ref_6
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ca_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/ca_pools/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/ca_pools/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/ca_pools/methods/patch'
        delete:
          - $ref: '#/components/x-stackQL-resources/ca_pools/methods/delete'
    ca_pools_ca_certs:
      id: google.privateca.ca_pools_ca_certs
      name: ca_pools_ca_certs
      title: Ca_pools_ca_certs
      methods:
        fetch_ca_certs:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}:fetchCaCerts/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    ca_pools_iam_policies:
      id: google.privateca.ca_pools_iam_policies
      name: ca_pools_iam_policies
      title: Ca_pools_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _get_iam_policy:
          operation: &ref_7
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}:getIamPolicy/get
          response: &ref_8
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        get_iam_policy:
          operation: *ref_7
          response: *ref_8
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/ca_pools_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        delete: []
    certificates:
      id: google.privateca.certificates
      name: certificates
      title: Certificates
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificates/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_9
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificates/get
          response: &ref_10
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificates
        list:
          operation: *ref_9
          response: *ref_10
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificates~1{certificatesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificates~1{certificatesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificates~1{certificatesId}:revoke/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/certificates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/patch'
        delete: []
    certificate_authorities:
      id: google.privateca.certificate_authorities
      name: certificate_authorities
      title: Certificate_authorities
      methods:
        activate:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}:activate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_11
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities/get
          response: &ref_12
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificateAuthorities
        list:
          operation: *ref_11
          response: *ref_12
        disable:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}:disable/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}:enable/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        fetch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}:fetch/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_authorities/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/certificate_authorities/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_authorities/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_authorities/methods/patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_authorities/methods/delete
    certificate_revocation_lists:
      id: google.privateca.certificate_revocation_lists
      name: certificate_revocation_lists
      title: Certificate_revocation_lists
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}~1certificateRevocationLists~1{certificateRevocationListsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}~1certificateRevocationLists~1{certificateRevocationListsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_13
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}~1certificateRevocationLists/get
          response: &ref_14
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificateRevocationLists
        list:
          operation: *ref_13
          response: *ref_14
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_revocation_lists/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/certificate_revocation_lists/methods/list
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_revocation_lists/methods/patch
        delete: []
    certificate_revocation_lists_iam_policies:
      id: google.privateca.certificate_revocation_lists_iam_policies
      name: certificate_revocation_lists_iam_policies
      title: Certificate_revocation_lists_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}~1certificateRevocationLists~1{certificateRevocationListsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _get_iam_policy:
          operation: &ref_15
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}~1certificateRevocationLists~1{certificateRevocationListsId}:getIamPolicy/get
          response: &ref_16
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        get_iam_policy:
          operation: *ref_15
          response: *ref_16
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1caPools~1{caPoolsId}~1certificateAuthorities~1{certificateAuthoritiesId}~1certificateRevocationLists~1{certificateRevocationListsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_revocation_lists_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        delete: []
    certificate_templates:
      id: google.privateca.certificate_templates
      name: certificate_templates
      title: Certificate_templates
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateTemplates/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_17
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateTemplates/get
          response: &ref_18
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.certificateTemplates
        list:
          operation: *ref_17
          response: *ref_18
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateTemplates~1{certificateTemplatesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateTemplates~1{certificateTemplatesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateTemplates~1{certificateTemplatesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificate_templates/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/certificate_templates/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_templates/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_templates/methods/patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_templates/methods/delete
    certificate_templates_iam_policies:
      id: google.privateca.certificate_templates_iam_policies
      name: certificate_templates_iam_policies
      title: Certificate_templates_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateTemplates~1{certificateTemplatesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _get_iam_policy:
          operation: &ref_19
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateTemplates~1{certificateTemplatesId}:getIamPolicy/get
          response: &ref_20
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        get_iam_policy:
          operation: *ref_19
          response: *ref_20
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1certificateTemplates~1{certificateTemplatesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/certificate_templates_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_21
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: privateca.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_21
    get:
      description: Gets information about a location.
      operationId: privateca.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_21
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: privateca.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_21
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: privateca.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: privateca.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_21
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: privateca.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools:
    parameters: *ref_21
    post:
      description: Create a CaPool.
      operationId: privateca.projects.locations.caPools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaPool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: caPoolId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists CaPools.
      operationId: privateca.projects.locations.caPools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCaPoolsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}:
    parameters: *ref_21
    patch:
      description: Update a CaPool.
      operationId: privateca.projects.locations.caPools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaPool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Returns a CaPool.
      operationId: privateca.projects.locations.caPools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaPool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
    delete:
      description: Delete a CaPool.
      operationId: privateca.projects.locations.caPools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: ignoreDependentResources
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}:fetchCaCerts:
    parameters: *ref_21
    post:
      description: >-
        FetchCaCerts returns the current trust anchor for the CaPool. This will
        include CA certificate chains for all certificate authorities in the
        ENABLED, DISABLED, or STAGED states.
      operationId: privateca.projects.locations.caPools.fetchCaCerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchCaCertsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchCaCertsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}:setIamPolicy:
    parameters: *ref_21
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: privateca.projects.locations.caPools.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}:getIamPolicy:
    parameters: *ref_21
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: privateca.projects.locations.caPools.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}:testIamPermissions:
    parameters: *ref_21
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: privateca.projects.locations.caPools.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificates:
    parameters: *ref_21
    post:
      description: >-
        Create a new Certificate in a given Project, Location from a particular
        CaPool.
      operationId: privateca.projects.locations.caPools.certificates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: issuingCertificateAuthorityId
          schema:
            type: string
    get:
      description: Lists Certificates.
      operationId: privateca.projects.locations.caPools.certificates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificates/{certificatesId}:
    parameters: *ref_21
    get:
      description: Returns a Certificate.
      operationId: privateca.projects.locations.caPools.certificates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update a Certificate. Currently, the only field you can update is the
        labels field.
      operationId: privateca.projects.locations.caPools.certificates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificates/{certificatesId}:revoke:
    parameters: *ref_21
    post:
      description: Revoke a Certificate.
      operationId: privateca.projects.locations.caPools.certificates.revoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeCertificateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificatesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}:activate:
    parameters: *ref_21
    post:
      description: >-
        Activate a CertificateAuthority that is in state
        AWAITING_USER_ACTIVATION and is of type SUBORDINATE. After the parent
        Certificate Authority signs a certificate signing request from
        FetchCertificateAuthorityCsr, this method can complete the activation
        process.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.activate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateCertificateAuthorityRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities:
    parameters: *ref_21
    post:
      description: Create a new CertificateAuthority in a given Project and Location.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateAuthority'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateAuthorityId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists CertificateAuthorities.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateAuthoritiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}:disable:
    parameters: *ref_21
    post:
      description: Disable a CertificateAuthority.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableCertificateAuthorityRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}:enable:
    parameters: *ref_21
    post:
      description: Enable a CertificateAuthority.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.enable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableCertificateAuthorityRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}:fetch:
    parameters: *ref_21
    get:
      description: >-
        Fetch a certificate signing request (CSR) from a CertificateAuthority
        that is in state AWAITING_USER_ACTIVATION and is of type SUBORDINATE.
        The CSR must then be signed by the desired parent Certificate Authority,
        which could be another CertificateAuthority resource, or could be an
        on-prem certificate authority. See also ActivateCertificateAuthority.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.fetch
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchCertificateAuthorityCsrResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}:
    parameters: *ref_21
    get:
      description: Returns a CertificateAuthority.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAuthority'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
    delete:
      description: Delete a CertificateAuthority.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: ignoreActiveCertificates
          schema:
            type: boolean
        - in: query
          name: skipGracePeriod
          schema:
            type: boolean
        - in: query
          name: ignoreDependentResources
          schema:
            type: boolean
    patch:
      description: Update a CertificateAuthority.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateAuthority'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}:undelete:
    parameters: *ref_21
    post:
      description: Undelete a CertificateAuthority that has been deleted.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteCertificateAuthorityRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}:
    parameters: *ref_21
    get:
      description: Returns a CertificateRevocationList.
      operationId: >-
        privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateRevocationList'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
        - in: path
          name: certificateRevocationListsId
          required: true
          schema:
            type: string
    patch:
      description: Update a CertificateRevocationList.
      operationId: >-
        privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRevocationList'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
        - in: path
          name: certificateRevocationListsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists:
    parameters: *ref_21
    get:
      description: Lists CertificateRevocationLists.
      operationId: >-
        privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateRevocationListsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}:setIamPolicy:
    parameters: *ref_21
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
        - in: path
          name: certificateRevocationListsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}:getIamPolicy:
    parameters: *ref_21
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
        - in: path
          name: certificateRevocationListsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/caPools/{caPoolsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}:testIamPermissions:
    parameters: *ref_21
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: caPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateAuthoritiesId
          required: true
          schema:
            type: string
        - in: path
          name: certificateRevocationListsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificateTemplates:
    parameters: *ref_21
    post:
      description: Create a new CertificateTemplate in a given Project and Location.
      operationId: privateca.projects.locations.certificateTemplates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateTemplate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: certificateTemplateId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists CertificateTemplates.
      operationId: privateca.projects.locations.certificateTemplates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateTemplatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificateTemplates/{certificateTemplatesId}:
    parameters: *ref_21
    delete:
      description: DeleteCertificateTemplate deletes a CertificateTemplate.
      operationId: privateca.projects.locations.certificateTemplates.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Returns a CertificateTemplate.
      operationId: privateca.projects.locations.certificateTemplates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateTemplatesId
          required: true
          schema:
            type: string
    patch:
      description: Update a CertificateTemplate.
      operationId: privateca.projects.locations.certificateTemplates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateTemplate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificateTemplates/{certificateTemplatesId}:setIamPolicy:
    parameters: *ref_21
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: privateca.projects.locations.certificateTemplates.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateTemplatesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/certificateTemplates/{certificateTemplatesId}:getIamPolicy:
    parameters: *ref_21
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: privateca.projects.locations.certificateTemplates.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/certificateTemplates/{certificateTemplatesId}:testIamPermissions:
    parameters: *ref_21
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: privateca.projects.locations.certificateTemplates.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: certificateTemplatesId
          required: true
          schema:
            type: string
