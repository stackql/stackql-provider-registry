openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Profiler API
  description: Manages continuous profiling information.
  version: v2
  x-discovery-doc-revision: '20230821'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/profiler/'
servers:
  - url: 'https://cloudprofiler.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/monitoring.write': Publish metric data to your Google Cloud projects
            'https://www.googleapis.com/auth/monitoring': View and write monitoring data for all of your Google and third-party Cloud and API projects
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    Deployment:
      properties:
        labels:
          description: 'Labels identify the deployment within the user universe and same target. Validation regex for label names: `^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$`. Value for an individual label must be <= 512 bytes, the total size of all label names and values must be <= 1024 bytes. Label named "language" can be used to record the programming language of the profiled deployment. The standard choices for the value include "java", "go", "python", "ruby", "nodejs", "php", "dotnet". For deployments running on Google Cloud Platform, "zone" or "region" label should be present describing the deployment location. An example of a zone is "us-central1-a", an example of a region is "us-central1" or "us-central".'
          additionalProperties:
            type: string
          type: object
        projectId:
          description: 'Project ID is the ID of a cloud project. Validation regex: `^a-z{4,61}[a-z0-9]$`.'
          type: string
        target:
          type: string
          description: 'Target is the service name used to group related deployments: * Service name for App Engine Flex / Standard. * Cluster and container name for GKE. * User-specified string for direct Compute Engine profiling (e.g. Java). * Job name for Dataflow. Validation regex: `^[a-z0-9]([-a-z0-9_.]{0,253}[a-z0-9])?$`.'
      description: Deployment contains the deployment identification information.
      type: object
      id: Deployment
    Profile:
      type: object
      description: Profile resource.
      id: Profile
      properties:
        profileBytes:
          description: 'Input only. Profile bytes, as a gzip compressed serialized proto, the format is https://github.com/google/pprof/blob/master/proto/profile.proto.'
          type: string
          format: byte
        profileType:
          description: 'Type of profile. For offline mode, this must be specified when creating the profile. For online mode it is assigned and returned by the server.'
          enum:
            - PROFILE_TYPE_UNSPECIFIED
            - CPU
            - WALL
            - HEAP
            - THREADS
            - CONTENTION
            - PEAK_HEAP
            - HEAP_ALLOC
          type: string
          enumDescriptions:
            - Unspecified profile type.
            - Thread CPU time sampling.
            - Wallclock time sampling. More expensive as stops all threads.
            - In-use heap profile. Represents a snapshot of the allocations that are live at the time of the profiling.
            - Single-shot collection of all thread stacks.
            - Synchronization contention profile.
            - Peak heap profile.
            - 'Heap allocation profile. It represents the aggregation of all allocations made over the duration of the profile. All allocations are included, including those that might have been freed by the end of the profiling interval. The profile is in particular useful for garbage collecting languages to understand which parts of the code create most of the garbage collection pressure to see if those can be optimized.'
        labels:
          type: object
          additionalProperties:
            type: string
          description: Input only. Labels associated to this specific profile. These labels will get merged with the deployment labels for the final data set. See documentation on deployment labels for validation rules and limits.
        deployment:
          $ref: '#/components/schemas/Deployment'
          description: Deployment this profile corresponds to.
        duration:
          description: 'Duration of the profiling session. Input (for the offline mode) or output (for the online mode). The field represents requested profiling duration. It may slightly differ from the effective profiling duration, which is recorded in the profile data, in case the profiling can''t be stopped immediately (e.g. in case stopping the profiling is handled asynchronously).'
          type: string
          format: google-duration
        name:
          type: string
          readOnly: true
          description: 'Output only. Opaque, server-assigned, unique ID for this profile.'
    CreateProfileRequest:
      id: CreateProfileRequest
      properties:
        deployment:
          $ref: '#/components/schemas/Deployment'
          description: Deployment details.
        profileType:
          type: array
          items:
            enumDescriptions:
              - Unspecified profile type.
              - Thread CPU time sampling.
              - Wallclock time sampling. More expensive as stops all threads.
              - In-use heap profile. Represents a snapshot of the allocations that are live at the time of the profiling.
              - Single-shot collection of all thread stacks.
              - Synchronization contention profile.
              - Peak heap profile.
              - 'Heap allocation profile. It represents the aggregation of all allocations made over the duration of the profile. All allocations are included, including those that might have been freed by the end of the profiling interval. The profile is in particular useful for garbage collecting languages to understand which parts of the code create most of the garbage collection pressure to see if those can be optimized.'
            type: string
            enum:
              - PROFILE_TYPE_UNSPECIFIED
              - CPU
              - WALL
              - HEAP
              - THREADS
              - CONTENTION
              - PEAK_HEAP
              - HEAP_ALLOC
          description: One or more profile types that the agent is capable of providing.
      type: object
      description: 'CreateProfileRequest describes a profile resource online creation request. The deployment field must be populated. The profile_type specifies the list of profile types supported by the agent. The creation call will hang until a profile of one of these types needs to be collected. '
  parameters:
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  x-stackQL-resources:
    profiles:
      id: google.cloudprofiler.profiles
      name: profiles
      title: Profiles
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1profiles~1{profilesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1profiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/create'
        update: []
        delete: []
    profiles_offline:
      id: google.cloudprofiler.profiles_offline
      name: profiles_offline
      title: Profiles Offline
      methods:
        create_offline:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1profiles:createOffline/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/profiles_offline/methods/create_offline'
        update: []
        delete: []
paths:
  '/v2/projects/{projectsId}/profiles/{profilesId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
    patch:
      description: 'UpdateProfile updates the profile bytes and labels on the profile resource created in the online mode. Updating the bytes for profiles created in the offline mode is currently not supported: the profile content must be provided at the time of the profile creation.'
      operationId: cloudprofiler.projects.profiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/monitoring'
          Oauth2c:
            - 'https://www.googleapis.com/auth/monitoring'
        - Oauth2:
            - 'https://www.googleapis.com/auth/monitoring.write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/monitoring.write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: profilesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: profiles
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/profiles':
    parameters: *ref_1
    post:
      description: 'CreateProfile creates a new profile resource in the online mode. The server ensures that the new profiles are created at a constant rate per deployment, so the creation request may hang for some time until the next profile session is available. The request may fail with ABORTED error if the creation is not available within ~1m, the response will indicate the duration of the backoff the client should take before attempting creating a profile again. The backoff duration is returned in google.rpc.RetryInfo extension on the response status. To a gRPC client, the extension will be return as a binary-serialized proto in the trailing metadata item named "google.rpc.retryinfo-bin". '
      operationId: cloudprofiler.projects.profiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/monitoring'
          Oauth2c:
            - 'https://www.googleapis.com/auth/monitoring'
        - Oauth2:
            - 'https://www.googleapis.com/auth/monitoring.write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/monitoring.write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: profiles
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v2/projects/{projectsId}/profiles:createOffline':
    parameters: *ref_1
    post:
      description: 'CreateOfflineProfile creates a new profile resource in the offline mode. The client provides the profile to create along with the profile bytes, the server records it.'
      operationId: cloudprofiler.projects.profiles.createOffline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/monitoring'
          Oauth2c:
            - 'https://www.googleapis.com/auth/monitoring'
        - Oauth2:
            - 'https://www.googleapis.com/auth/monitoring.write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/monitoring.write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: profiles_offline
      x-stackQL-method: create_offline
      x-stackQL-verb: insert
