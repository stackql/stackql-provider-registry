openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Migrate to Virtual Machines API
  description: 'Use the Migrate to Virtual Machines API to programmatically migrate workloads. '
  version: v1
  x-discovery-doc-revision: '20221213'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/migrate/virtual-machines
servers:
  - url: https://vmmigration.googleapis.com
components:
  schemas:
    ListSourcesResponse:
      properties:
        nextPageToken:
          description: Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
          readOnly: true
        unreachable:
          type: array
          description: Output only. Locations that could not be reached.
          readOnly: true
          items:
            type: string
        sources:
          description: Output only. The list of sources response.
          type: array
          items:
            $ref: '#/components/schemas/Source'
          readOnly: true
      type: object
      id: ListSourcesResponse
      description: Response message for 'ListSources' request.
    VmUtilizationInfo:
      id: VmUtilizationInfo
      description: Utilization information of a single VM.
      type: object
      properties:
        vmwareVmDetails:
          description: The description of the VM in a Source of type Vmware.
          $ref: '#/components/schemas/VmwareVmDetails'
        utilization:
          description: Utilization metrics for this VM.
          $ref: '#/components/schemas/VmUtilizationMetrics'
        vmId:
          type: string
          description: The VM's ID in the source.
    LocalizedMessage:
      id: LocalizedMessage
      description: Provides a localized error message that is safe to return to the user which can be attached to an RPC error.
      type: object
      properties:
        message:
          description: The localized error message in the above locale.
          type: string
        locale:
          description: 'The locale used following the specification defined at https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: "en-US", "fr-CH", "es-MX"'
          type: string
    ComputeScheduling:
      properties:
        restartType:
          description: Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user). This configuration is identical to `automaticRestart` field in Compute Engine create instance under scheduling. It was changed to an enum (instead of a boolean) to match the default value in Compute Engine which is automatic restart.
          enum:
            - RESTART_TYPE_UNSPECIFIED
            - AUTOMATIC_RESTART
            - NO_AUTOMATIC_RESTART
          enumDescriptions:
            - Unspecified behavior. This will use the default.
            - The Instance should be automatically restarted whenever it is terminated by Compute Engine.
            - The Instance isn't automatically restarted whenever it is terminated by Compute Engine.
          type: string
        nodeAffinities:
          items:
            $ref: '#/components/schemas/SchedulingNodeAffinity'
          type: array
          description: A set of node affinity and anti-affinity configurations for sole tenant nodes.
        onHostMaintenance:
          type: string
          description: How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance.
          enum:
            - ON_HOST_MAINTENANCE_UNSPECIFIED
            - TERMINATE
            - MIGRATE
          enumDescriptions:
            - An unknown, unexpected behavior.
            - Terminate the instance when the host machine undergoes maintenance.
            - Migrate the instance when the host machine undergoes maintenance.
        minNodeCpus:
          type: integer
          format: int32
          description: The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node. Ignored if no node_affinites are configured.
      type: object
      id: ComputeScheduling
      description: Scheduling information for VM on maintenance/restart behaviour and node allocation in sole tenant nodes.
    Operation:
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
    Link:
      properties:
        url:
          type: string
          description: The URL of the link.
        description:
          description: Describes what the link offers.
          type: string
      id: Link
      type: object
      description: Describes a URL link.
    StartMigrationRequest:
      description: Request message for 'StartMigrationRequest' request.
      id: StartMigrationRequest
      properties: {}
      type: object
    RemoveGroupMigrationRequest:
      id: RemoveGroupMigrationRequest
      type: object
      description: Request message for 'RemoveMigration' request.
      properties:
        migratingVm:
          type: string
          description: The MigratingVm to remove.
    VmUtilizationMetrics:
      id: VmUtilizationMetrics
      type: object
      properties:
        cpuAveragePercent:
          format: int32
          type: integer
          description: Average CPU usage, percent.
        networkThroughputAverageKbps:
          format: int64
          description: Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
          type: string
        memoryMaxPercent:
          type: integer
          description: Max memory usage, percent.
          format: int32
        memoryAveragePercent:
          description: Average memory usage, percent.
          type: integer
          format: int32
        diskIoRateAverageKbps:
          description: Average disk IO rate, in kilobytes per second.
          type: string
          format: int64
        cpuMaxPercent:
          description: Max CPU usage, percent.
          format: int32
          type: integer
        networkThroughputMaxKbps:
          description: Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
          format: int64
          type: string
        diskIoRateMaxKbps:
          type: string
          format: int64
          description: Max disk IO rate, in kilobytes per second.
      description: Utilization metrics values for a single VM.
    AddGroupMigrationRequest:
      description: Request message for 'AddGroupMigration' request.
      id: AddGroupMigrationRequest
      type: object
      properties:
        migratingVm:
          type: string
          description: The full path name of the MigratingVm to add.
    ReplicatingStep:
      description: ReplicatingStep contains specific step details.
      type: object
      properties:
        lastThirtyMinutesAverageBytesPerSecond:
          format: int64
          description: The source disks replication rate for the last 30 minutes in bytes per second.
          type: string
        replicatedBytes:
          description: Replicated bytes in the step.
          format: int64
          type: string
        lastTwoMinutesAverageBytesPerSecond:
          description: The source disks replication rate for the last 2 minutes in bytes per second.
          type: string
          format: int64
        totalBytes:
          type: string
          description: Total bytes to be handled in the step.
          format: int64
      id: ReplicatingStep
    ListUtilizationReportsResponse:
      description: Response message for 'ListUtilizationReports' request.
      id: ListUtilizationReportsResponse
      type: object
      properties:
        nextPageToken:
          readOnly: true
          description: Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        utilizationReports:
          description: Output only. The list of reports.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/UtilizationReport'
        unreachable:
          items:
            type: string
          description: Output only. Locations that could not be reached.
          type: array
          readOnly: true
    FinalizeMigrationRequest:
      description: Request message for 'FinalizeMigration' request.
      type: object
      id: FinalizeMigrationRequest
      properties: {}
    ListCutoverJobsResponse:
      properties:
        cutoverJobs:
          readOnly: true
          description: Output only. The list of cutover jobs response.
          items:
            $ref: '#/components/schemas/CutoverJob'
          type: array
        nextPageToken:
          description: Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          readOnly: true
          type: string
        unreachable:
          readOnly: true
          description: Output only. Locations that could not be reached.
          type: array
          items:
            type: string
      type: object
      id: ListCutoverJobsResponse
      description: Response message for 'ListCutoverJobs' request.
    TargetProject:
      type: object
      description: TargetProject message represents a target Compute Engine project for a migration or a clone.
      id: TargetProject
      properties:
        createTime:
          type: string
          description: Output only. The time this target project resource was created (not related to when the Compute Engine project it points to was created).
          format: google-datetime
          readOnly: true
        description:
          description: The target project's description.
          type: string
        name:
          type: string
          description: Output only. The name of the target project.
          readOnly: true
        updateTime:
          format: google-datetime
          description: Output only. The last time the target project resource was updated.
          type: string
          readOnly: true
        project:
          description: The target project ID (number) or project name.
          type: string
    ResumeMigrationRequest:
      properties: {}
      id: ResumeMigrationRequest
      type: object
      description: Request message for 'ResumeMigration' request.
    Source:
      id: Source
      description: Source message describes a specific vm migration Source resource. It contains the source environment information.
      properties:
        labels:
          type: object
          description: The labels of the source.
          additionalProperties:
            type: string
        vmware:
          $ref: '#/components/schemas/VmwareSourceDetails'
          description: Vmware type source details.
        name:
          description: Output only. The Source name.
          type: string
          readOnly: true
        description:
          description: User-provided description of the source.
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The create time timestamp.
          type: string
        updateTime:
          description: Output only. The update time timestamp.
          readOnly: true
          type: string
          format: google-datetime
      type: object
    ShuttingDownSourceVMStep:
      description: ShuttingDownSourceVMStep contains specific step details.
      properties: {}
      type: object
      id: ShuttingDownSourceVMStep
    FetchInventoryResponse:
      properties:
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The timestamp when the source was last queried (if the result is from the cache).
        vmwareVms:
          description: The description of the VMs in a Source of type Vmware.
          $ref: '#/components/schemas/VmwareVmsDetails'
        nextPageToken:
          readOnly: true
          description: Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      description: Response message for fetchInventory.
      type: object
      id: FetchInventoryResponse
    ReplicationSync:
      type: object
      properties:
        lastSyncTime:
          type: string
          description: The most updated snapshot created time in the source that finished replication.
          format: google-datetime
      id: ReplicationSync
      description: ReplicationSync contain information about the last replica sync to the cloud.
    ComputeEngineTargetDefaults:
      type: object
      description: ComputeEngineTargetDefaults is a collection of details for creating a VM in a target Compute Engine project.
      properties:
        secureBoot:
          type: boolean
          description: Defines whether the instance has Secure Boot enabled. This can be set to true only if the vm boot option is EFI.
        targetProject:
          description: The full path of the resource of type TargetProject which represents the Compute Engine project in which to create this VM.
          type: string
        vmName:
          type: string
          description: The name of the VM to create.
        labels:
          description: A map of labels to associate with the VM.
          type: object
          additionalProperties:
            type: string
        networkTags:
          items:
            type: string
          description: A map of network tags to associate with the VM.
          type: array
        machineType:
          description: The machine type to create the VM with.
          type: string
        licenseType:
          type: string
          enumDescriptions:
            - The license type is the default for the OS.
            - The license type is Pay As You Go license type.
            - The license type is Bring Your Own License type.
          enum:
            - COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT
            - COMPUTE_ENGINE_LICENSE_TYPE_PAYG
            - COMPUTE_ENGINE_LICENSE_TYPE_BYOL
          description: The license type to use in OS adaptation.
        diskType:
          type: string
          description: The disk type to use in the VM.
          enum:
            - COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED
            - COMPUTE_ENGINE_DISK_TYPE_STANDARD
            - COMPUTE_ENGINE_DISK_TYPE_SSD
            - COMPUTE_ENGINE_DISK_TYPE_BALANCED
          enumDescriptions:
            - An unspecified disk type. Will be used as STANDARD.
            - A Standard disk type.
            - SSD hard disk type.
            - An alternative to SSD persistent disks that balance performance and cost.
        hostname:
          type: string
          description: The hostname to assign to the VM.
        networkInterfaces:
          items:
            $ref: '#/components/schemas/NetworkInterface'
          description: List of NICs connected to this VM.
          type: array
        metadata:
          additionalProperties:
            type: string
          type: object
          description: The metadata key/value pairs to assign to the VM.
        computeScheduling:
          description: Compute instance scheduling information (if empty default is used).
          $ref: '#/components/schemas/ComputeScheduling'
        bootOption:
          readOnly: true
          type: string
          enum:
            - COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED
            - COMPUTE_ENGINE_BOOT_OPTION_EFI
            - COMPUTE_ENGINE_BOOT_OPTION_BIOS
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is EFI.
            - The boot option is BIOS.
          description: Output only. The VM Boot Option, as set in the source vm.
        appliedLicense:
          $ref: '#/components/schemas/AppliedLicense'
          readOnly: true
          description: Output only. The OS license returned from the adaptation module report.
        serviceAccount:
          description: The service account to associate the VM with.
          type: string
        zone:
          description: The zone in which to create the VM.
          type: string
        machineTypeSeries:
          description: The machine type series to create the VM with.
          type: string
        additionalLicenses:
          type: array
          description: Additional licenses to assign to the VM.
          items:
            type: string
      id: ComputeEngineTargetDefaults
    InstantiatingMigratedVMStep:
      properties: {}
      description: InstantiatingMigratedVMStep contains specific step details.
      id: InstantiatingMigratedVMStep
      type: object
    CloneStep:
      properties:
        endTime:
          format: google-datetime
          description: The time the step has ended.
          type: string
        instantiatingMigratedVm:
          $ref: '#/components/schemas/InstantiatingMigratedVMStep'
          description: Instantiating migrated VM step.
        preparingVmDisks:
          description: Preparing VM disks step.
          $ref: '#/components/schemas/PreparingVMDisksStep'
        adaptingOs:
          description: Adapting OS step.
          $ref: '#/components/schemas/AdaptingOSStep'
        startTime:
          description: The time the step has started.
          format: google-datetime
          type: string
      id: CloneStep
      type: object
      description: CloneStep holds information about the clone step progress.
    AppliedLicense:
      type: object
      id: AppliedLicense
      properties:
        osLicense:
          description: The OS license returned from the adaptation module's report.
          type: string
        type:
          description: The license type that was used in OS adaptation.
          enum:
            - TYPE_UNSPECIFIED
            - NONE
            - PAYG
            - BYOL
          type: string
          enumDescriptions:
            - Unspecified license for the OS.
            - No license available for the OS.
            - The license type is Pay As You Go license type.
            - The license type is Bring Your Own License type.
      description: AppliedLicense holds the license data returned by adaptation module report.
    InitializingReplicationStep:
      description: InitializingReplicationStep contains specific step details.
      type: object
      properties: {}
      id: InitializingReplicationStep
    NetworkInterface:
      type: object
      id: NetworkInterface
      properties:
        internalIp:
          description: 'The internal IP to define in the NIC. The formats accepted are: `ephemeral` \ ipv4 address \ a named address resource full path.'
          type: string
        subnetwork:
          description: The subnetwork to connect the NIC to.
          type: string
        network:
          description: The network to connect the NIC to.
          type: string
        externalIp:
          type: string
          description: The external IP to define in the NIC.
      description: NetworkInterface represents a NIC of a VM.
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: ListOperationsResponse
      type: object
    MigrationError:
      id: MigrationError
      properties:
        code:
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is not used.
            - Migrate for Compute encountered an unknown error.
            - Migrate for Compute encountered an error while validating replication source health.
            - Migrate for Compute encountered an error during source data operation.
            - Migrate for Compute encountered an error during target data operation.
            - Migrate for Compute encountered an error during OS adaptation.
            - Migrate for Compute encountered an error in clone operation.
            - Migrate for Compute encountered an error in cutover operation.
            - Migrate for Compute encountered an error during utilization report creation.
            - Migrate for Compute encountered an error during appliance upgrade.
          description: Output only. The error code.
          enum:
            - ERROR_CODE_UNSPECIFIED
            - UNKNOWN_ERROR
            - SOURCE_VALIDATION_ERROR
            - SOURCE_REPLICATION_ERROR
            - TARGET_REPLICATION_ERROR
            - OS_ADAPTATION_ERROR
            - CLONE_ERROR
            - CUTOVER_ERROR
            - UTILIZATION_REPORT_ERROR
            - APPLIANCE_UPGRADE_ERROR
        errorMessage:
          description: Output only. The localized error message.
          $ref: '#/components/schemas/LocalizedMessage'
          readOnly: true
        helpLinks:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: Output only. URL(s) pointing to additional information on handling the current error.
        errorTime:
          description: Output only. The time the error occurred.
          type: string
          format: google-datetime
          readOnly: true
        actionItem:
          $ref: '#/components/schemas/LocalizedMessage'
          readOnly: true
          description: Output only. Suggested action for solving the error.
      description: Represents migration resource error information that can be used with google.rpc.Status message. MigrationError is used to present the user with error information in migration operations.
      type: object
    Status:
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      type: object
    PostProcessingStep:
      description: PostProcessingStep contains specific step details.
      type: object
      properties: {}
      id: PostProcessingStep
    ComputeEngineTargetDetails:
      type: object
      properties:
        bootOption:
          type: string
          enum:
            - COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED
            - COMPUTE_ENGINE_BOOT_OPTION_EFI
            - COMPUTE_ENGINE_BOOT_OPTION_BIOS
          description: The VM Boot Option, as set in the source vm.
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is EFI.
            - The boot option is BIOS.
        licenseType:
          type: string
          enumDescriptions:
            - The license type is the default for the OS.
            - The license type is Pay As You Go license type.
            - The license type is Bring Your Own License type.
          enum:
            - COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT
            - COMPUTE_ENGINE_LICENSE_TYPE_PAYG
            - COMPUTE_ENGINE_LICENSE_TYPE_BYOL
          description: The license type to use in OS adaptation.
        networkInterfaces:
          description: List of NICs connected to this VM.
          items:
            $ref: '#/components/schemas/NetworkInterface'
          type: array
        diskType:
          type: string
          enumDescriptions:
            - An unspecified disk type. Will be used as STANDARD.
            - A Standard disk type.
            - SSD hard disk type.
            - An alternative to SSD persistent disks that balance performance and cost.
          enum:
            - COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED
            - COMPUTE_ENGINE_DISK_TYPE_STANDARD
            - COMPUTE_ENGINE_DISK_TYPE_SSD
            - COMPUTE_ENGINE_DISK_TYPE_BALANCED
          description: The disk type to use in the VM.
        zone:
          description: The zone in which to create the VM.
          type: string
        project:
          description: The Google Cloud target project ID or project name.
          type: string
        serviceAccount:
          type: string
          description: The service account to associate the VM with.
        labels:
          type: object
          additionalProperties:
            type: string
          description: A map of labels to associate with the VM.
        vmName:
          description: The name of the VM to create.
          type: string
        metadata:
          description: The metadata key/value pairs to assign to the VM.
          type: object
          additionalProperties:
            type: string
        secureBoot:
          description: Defines whether the instance has Secure Boot enabled. This can be set to true only if the vm boot option is EFI.
          type: boolean
        hostname:
          type: string
          description: The hostname to assign to the VM.
        machineTypeSeries:
          type: string
          description: The machine type series to create the VM with.
        machineType:
          type: string
          description: The machine type to create the VM with.
        networkTags:
          description: A map of network tags to associate with the VM.
          items:
            type: string
          type: array
        computeScheduling:
          description: Compute instance scheduling information (if empty default is used).
          $ref: '#/components/schemas/ComputeScheduling'
        additionalLicenses:
          items:
            type: string
          description: Additional licenses to assign to the VM.
          type: array
        appliedLicense:
          $ref: '#/components/schemas/AppliedLicense'
          description: The OS license returned from the adaptation module report.
      description: ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.
      id: ComputeEngineTargetDetails
    ListMigratingVmsResponse:
      id: ListMigratingVmsResponse
      description: Response message for 'ListMigratingVms' request.
      type: object
      properties:
        migratingVms:
          readOnly: true
          description: Output only. The list of Migrating VMs response.
          type: array
          items:
            $ref: '#/components/schemas/MigratingVm'
        unreachable:
          items:
            type: string
          description: Output only. Locations that could not be reached.
          type: array
          readOnly: true
        nextPageToken:
          type: string
          readOnly: true
          description: Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
    ApplianceVersion:
      id: ApplianceVersion
      type: object
      description: Describes an appliance version.
      properties:
        releaseNotesUri:
          type: string
          description: Link to a page that contains the version release notes.
        uri:
          description: A link for downloading the version.
          type: string
        version:
          description: The appliance version.
          type: string
        critical:
          type: boolean
          description: Determine whether it's critical to upgrade the appliance to this version.
    UtilizationReport:
      description: Utilization report details the utilization (CPU, memory, etc.) of selected source VMs.
      properties:
        timeFrame:
          enumDescriptions:
            - The time frame was not specified and will default to WEEK.
            - One week.
            - One month.
            - One year.
          type: string
          enum:
            - TIME_FRAME_UNSPECIFIED
            - WEEK
            - MONTH
            - YEAR
          description: Time frame of the report.
        vmCount:
          type: integer
          description: Output only. Total number of VMs included in the report.
          format: int32
          readOnly: true
        error:
          $ref: '#/components/schemas/Status'
          description: Output only. Provides details on the state of the report in case of an error.
          readOnly: true
        displayName:
          description: The report display name, as assigned by the user.
          type: string
        vms:
          description: List of utilization information per VM. When sent as part of the request, the "vm_id" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.
          items:
            $ref: '#/components/schemas/VmUtilizationInfo'
          type: array
        state:
          enumDescriptions:
            - The state is unknown. This value is not in use.
            - The report is in the making.
            - Report creation completed successfully.
            - Report creation failed.
          readOnly: true
          description: Output only. Current state of the report.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - SUCCEEDED
            - FAILED
        stateTime:
          readOnly: true
          description: Output only. The time the state was last set.
          format: google-datetime
          type: string
        frameEndTime:
          type: string
          readOnly: true
          description: Output only. The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the "frame_end_time" value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.
          format: google-datetime
        name:
          type: string
          readOnly: true
          description: Output only. The report unique name.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the report was created (this refers to the time of the request, not the time the report creation completed).
      type: object
      id: UtilizationReport
    ListGroupsResponse:
      id: ListGroupsResponse
      description: Response message for 'ListGroups' request.
      type: object
      properties:
        unreachable:
          type: array
          description: Output only. Locations that could not be reached.
          items:
            type: string
          readOnly: true
        nextPageToken:
          type: string
          readOnly: true
          description: Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        groups:
          description: Output only. The list of groups response.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Group'
    ListTargetProjectsResponse:
      description: Response message for 'ListTargetProjects' call.
      properties:
        nextPageToken:
          readOnly: true
          type: string
          description: Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        unreachable:
          type: array
          readOnly: true
          items:
            type: string
          description: Output only. Locations that could not be reached.
        targetProjects:
          readOnly: true
          type: array
          description: Output only. The list of target response.
          items:
            $ref: '#/components/schemas/TargetProject'
      id: ListTargetProjectsResponse
      type: object
    VmwareVmDetails:
      type: object
      properties:
        uuid:
          type: string
          description: The unique identifier of the VM in vCenter.
        vmId:
          type: string
          description: The VM's id in the source (note that this is not the MigratingVm's id). This is the moref id of the VM.
        datacenterId:
          description: The id of the vCenter's datacenter this VM is contained in.
          type: string
        powerState:
          type: string
          description: The power state of the VM at the moment list was taken.
          enumDescriptions:
            - Power state is not specified.
            - The VM is turned ON.
            - The VM is turned OFF.
            - The VM is suspended. This is similar to hibernation or sleep mode.
          enum:
            - POWER_STATE_UNSPECIFIED
            - 'ON'
            - 'OFF'
            - SUSPENDED
        datacenterDescription:
          type: string
          description: The descriptive name of the vCenter's datacenter this VM is contained in.
        bootOption:
          description: Output only. The VM Boot Option.
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is EFI.
            - The boot option is BIOS.
          enum:
            - BOOT_OPTION_UNSPECIFIED
            - EFI
            - BIOS
          readOnly: true
          type: string
        diskCount:
          description: The number of disks the VM has.
          type: integer
          format: int32
        committedStorageMb:
          format: int64
          type: string
          description: The total size of the storage allocated to the VM in MB.
        memoryMb:
          format: int32
          type: integer
          description: The size of the memory of the VM in MB.
        guestDescription:
          type: string
          description: The VM's OS. See for example https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html for types of strings this might hold.
        displayName:
          type: string
          description: The display name of the VM. Note that this is not necessarily unique.
        cpuCount:
          description: The number of cpus in the VM.
          type: integer
          format: int32
      description: VmwareVmDetails describes a VM in vCenter.
      id: VmwareVmDetails
    ListDatacenterConnectorsResponse:
      description: Response message for 'ListDatacenterConnectors' request.
      type: object
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Output only. Locations that could not be reached.
          readOnly: true
        nextPageToken:
          description: Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          readOnly: true
          type: string
        datacenterConnectors:
          items:
            $ref: '#/components/schemas/DatacenterConnector'
          readOnly: true
          type: array
          description: Output only. The list of sources response.
      id: ListDatacenterConnectorsResponse
    UpgradeApplianceRequest:
      type: object
      description: Request message for 'UpgradeAppliance' request.
      properties:
        requestId:
          type: string
          description: A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
      id: UpgradeApplianceRequest
    PreparingVMDisksStep:
      type: object
      description: PreparingVMDisksStep contains specific step details.
      properties: {}
      id: PreparingVMDisksStep
    SchedulePolicy:
      id: SchedulePolicy
      type: object
      properties:
        idleDuration:
          description: The idle duration between replication stages.
          format: google-duration
          type: string
        skipOsAdaptation:
          type: boolean
          description: A flag to indicate whether to skip OS adaptation during the replication sync. OS adaptation is a process where the VM's operating system undergoes changes and adaptations to fully function on Compute Engine.
      description: A policy for scheduling replications.
    CancelCloneJobRequest:
      properties: {}
      description: Request message for 'CancelCloneJob' request.
      id: CancelCloneJobRequest
      type: object
    Empty:
      properties: {}
      id: Empty
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    MigratingVm:
      id: MigratingVm
      type: object
      description: MigratingVm describes the VM that will be migrated from a Source environment and its replication state.
      properties:
        computeEngineTargetDefaults:
          $ref: '#/components/schemas/ComputeEngineTargetDefaults'
          description: Details of the target VM in Compute Engine.
        currentSyncInfo:
          $ref: '#/components/schemas/ReplicationCycle'
          description: Output only. The percentage progress of the current running replication cycle.
          readOnly: true
        error:
          readOnly: true
          description: Output only. Provides details on the state of the Migrating VM in case of an error in replication.
          $ref: '#/components/schemas/Status'
        sourceVmId:
          description: The unique ID of the VM in the source. The VM's name in vSphere can be changed, so this is not the VM's name but rather its moRef id. This id is of the form vm-.
          type: string
        recentCutoverJobs:
          type: array
          description: 'Output only. The recent cutover jobs performed on the migrating VM. This field holds the vm''s last completed cutover job and the vm''s running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the "view" parameter of the Get/List request.'
          readOnly: true
          items:
            $ref: '#/components/schemas/CutoverJob'
        lastSync:
          readOnly: true
          $ref: '#/components/schemas/ReplicationSync'
          description: Output only. The most updated snapshot created time in the source that finished replication.
        state:
          type: string
          enumDescriptions:
            - The state was not sampled by the health checks yet.
            - The VM in the source is being verified.
            - The source VM was verified, and it's ready to start replication.
            - Migration is going through the first sync cycle.
            - The replication is active, and it's running or scheduled to run.
            - The source VM is being turned off, and a final replication is currently running.
            - The source VM was stopped and replicated. The replication is currently paused.
            - A cutover job is active and replication cycle is running the final sync.
            - The replication was paused by the user and no cycles are scheduled to run.
            - The migrating VM is being finalized and migration resources are being removed.
            - The replication process is done. The migrating VM is finalized and no longer consumes billable resources.
            - The replication process encountered an unrecoverable error and was aborted.
          description: Output only. State of the MigratingVm.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - READY
            - FIRST_SYNC
            - ACTIVE
            - CUTTING_OVER
            - CUTOVER
            - FINAL_SYNC
            - PAUSED
            - FINALIZING
            - FINALIZED
            - ERROR
          readOnly: true
        recentCloneJobs:
          type: array
          items:
            $ref: '#/components/schemas/CloneJob'
          readOnly: true
          description: 'Output only. The recent clone jobs performed on the migrating VM. This field holds the vm''s last completed clone job and the vm''s running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the "view" parameter of the Get/List request.'
        name:
          readOnly: true
          description: Output only. The identifier of the MigratingVm.
          type: string
        createTime:
          readOnly: true
          description: Output only. The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).
          format: google-datetime
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: The labels of the migrating VM.
        stateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The last time the migrating VM state was updated.
        updateTime:
          description: Output only. The last time the migrating VM resource was updated.
          readOnly: true
          type: string
          format: google-datetime
        group:
          type: string
          description: Output only. The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.
          readOnly: true
        displayName:
          description: The display name attached to the MigratingVm by the user.
          type: string
        policy:
          $ref: '#/components/schemas/SchedulePolicy'
          description: The replication schedule policy.
        description:
          type: string
          description: The description attached to the migrating VM by the user.
    CancelCutoverJobRequest:
      description: Request message for 'CancelCutoverJob' request.
      properties: {}
      type: object
      id: CancelCutoverJobRequest
    Group:
      id: Group
      description: Describes message for 'Group' resource. The Group is a collections of several MigratingVms.
      type: object
      properties:
        displayName:
          type: string
          description: Display name is a user defined name for this group which can be updated.
        createTime:
          type: string
          format: google-datetime
          description: Output only. The create time timestamp.
          readOnly: true
        name:
          type: string
          readOnly: true
          description: Output only. The Group name.
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The update time timestamp.
        description:
          description: User-provided description of the group.
          type: string
    CloneJob:
      properties:
        computeEngineTargetDetails:
          readOnly: true
          description: Output only. Details of the target VM in Compute Engine.
          $ref: '#/components/schemas/ComputeEngineTargetDetails'
        createTime:
          description: Output only. The time the clone job was created (as an API call, not when it was actually created in the target).
          type: string
          readOnly: true
          format: google-datetime
        stateTime:
          description: Output only. The time the state was last updated.
          readOnly: true
          type: string
          format: google-datetime
        error:
          description: Output only. Provides details for the errors that led to the Clone Job's state.
          readOnly: true
          $ref: '#/components/schemas/Status'
        state:
          type: string
          readOnly: true
          description: Output only. State of the clone job.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
            - FAILED
            - SUCCEEDED
            - CANCELLED
            - CANCELLING
            - ADAPTING_OS
          enumDescriptions:
            - The state is unknown. This is used for API compatibility only and is not used by the system.
            - The clone job has not yet started.
            - The clone job is active and running.
            - The clone job finished with errors.
            - The clone job finished successfully.
            - The clone job was cancelled.
            - The clone job is being cancelled.
            - OS adaptation is running as part of the clone job to generate license.
        endTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the clone job was ended.
        steps:
          readOnly: true
          items:
            $ref: '#/components/schemas/CloneStep'
          type: array
          description: Output only. The clone steps list representing its progress.
        name:
          type: string
          readOnly: true
          description: Output only. The name of the clone.
      description: CloneJob describes the process of creating a clone of a MigratingVM to the requested target based on the latest successful uploaded snapshots. While the migration cycles of a MigratingVm take place, it is possible to verify the uploaded VM can be started in the cloud, by creating a clone. The clone can be created without any downtime, and it is created using the latest snapshots which are already in the cloud. The cloneJob is only responsible for its work, not its products, which means once it is finished, it will never touch the instance it created. It will only delete it in case of the CloneJob being cancelled or upon failure to clone.
      type: object
      id: CloneJob
    SchedulingNodeAffinity:
      type: object
      description: 'Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled. Based on https://cloud.google.com/compute/docs/reference/rest/v1/instances/setScheduling'
      id: SchedulingNodeAffinity
      properties:
        operator:
          description: The operator to use for the node resources specified in the `values` parameter.
          enumDescriptions:
            - An unknown, unexpected behavior.
            - The node resource group should be in these resources affinity.
            - The node resource group should not be in these resources affinity.
          enum:
            - OPERATOR_UNSPECIFIED
            - IN
            - NOT_IN
          type: string
        values:
          items:
            type: string
          description: Corresponds to the label values of Node resource.
          type: array
        key:
          type: string
          description: The label key of Node resource to reference.
    CycleStep:
      properties:
        replicating:
          $ref: '#/components/schemas/ReplicatingStep'
          description: Replicating step.
        initializingReplication:
          description: Initializing replication step.
          $ref: '#/components/schemas/InitializingReplicationStep'
        endTime:
          format: google-datetime
          type: string
          description: The time the cycle step has ended.
        startTime:
          type: string
          description: The time the cycle step has started.
          format: google-datetime
        postProcessing:
          $ref: '#/components/schemas/PostProcessingStep'
          description: Post processing step.
      id: CycleStep
      type: object
      description: CycleStep holds information about a step progress.
    VmwareVmsDetails:
      id: VmwareVmsDetails
      properties:
        details:
          items:
            $ref: '#/components/schemas/VmwareVmDetails'
          description: The details of the vmware VMs.
          type: array
      type: object
      description: VmwareVmsDetails describes VMs in vCenter.
    ReplicationCycle:
      description: ReplicationCycle contains information about the current replication cycle status.
      id: ReplicationCycle
      properties:
        totalPauseDuration:
          description: The accumulated duration the replication cycle was paused.
          format: google-duration
          type: string
        progressPercent:
          description: The current progress in percentage of this cycle. Was replaced by 'steps' field, which breaks down the cycle progression more accurately.
          format: int32
          type: integer
        endTime:
          type: string
          description: The time the replication cycle has ended.
          format: google-datetime
        state:
          type: string
          enumDescriptions:
            - The state is unknown. This is used for API compatibility only and is not used by the system.
            - The replication cycle is running.
            - The replication cycle is paused.
            - The replication cycle finished with errors.
            - The replication cycle finished successfully.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - PAUSED
            - FAILED
            - SUCCEEDED
          description: State of the ReplicationCycle.
        cycleNumber:
          description: The cycle's ordinal number.
          format: int32
          type: integer
        steps:
          description: The cycle's steps list representing its progress.
          items:
            $ref: '#/components/schemas/CycleStep'
          type: array
        name:
          description: The identifier of the ReplicationCycle.
          type: string
        startTime:
          description: The time the replication cycle has started.
          format: google-datetime
          type: string
        error:
          description: Provides details on the state of the cycle in case of an error.
          $ref: '#/components/schemas/Status'
      type: object
    OperationMetadata:
      type: object
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
      properties:
        statusMessage:
          readOnly: true
          description: Output only. Human-readable status of the operation, if any.
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
          readOnly: true
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        target:
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
    Location:
      type: object
      id: Location
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        labels:
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
    ListCloneJobsResponse:
      type: object
      description: Response message for 'ListCloneJobs' request.
      properties:
        nextPageToken:
          description: Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
          readOnly: true
        cloneJobs:
          description: Output only. The list of clone jobs response.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CloneJob'
        unreachable:
          items:
            type: string
          readOnly: true
          type: array
          description: Output only. Locations that could not be reached.
      id: ListCloneJobsResponse
    ListLocationsResponse:
      id: ListLocationsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
      description: The response message for Locations.ListLocations.
    CutoverStep:
      id: CutoverStep
      description: CutoverStep holds information about the cutover step progress.
      type: object
      properties:
        instantiatingMigratedVm:
          description: Instantiating migrated VM step.
          $ref: '#/components/schemas/InstantiatingMigratedVMStep'
        shuttingDownSourceVm:
          $ref: '#/components/schemas/ShuttingDownSourceVMStep'
          description: Shutting down VM step.
        finalSync:
          $ref: '#/components/schemas/ReplicationCycle'
          description: Final sync step.
        endTime:
          format: google-datetime
          description: The time the step has ended.
          type: string
        preparingVmDisks:
          description: Preparing VM disks step.
          $ref: '#/components/schemas/PreparingVMDisksStep'
        previousReplicationCycle:
          description: A replication cycle prior cutover step.
          $ref: '#/components/schemas/ReplicationCycle'
        startTime:
          type: string
          description: The time the step has started.
          format: google-datetime
    PauseMigrationRequest:
      type: object
      description: Request message for 'PauseMigration' request.
      id: PauseMigrationRequest
      properties: {}
    AdaptingOSStep:
      type: object
      id: AdaptingOSStep
      description: AdaptingOSStep contains specific step details.
      properties: {}
    AvailableUpdates:
      properties:
        inPlaceUpdate:
          $ref: '#/components/schemas/ApplianceVersion'
          description: The latest version for in place update. The current appliance can be updated to this version using the API or m4c CLI.
        newDeployableAppliance:
          $ref: '#/components/schemas/ApplianceVersion'
          description: The newest deployable version of the appliance. The current appliance can't be updated into this version, and the owner must manually deploy this OVA to a new appliance.
      id: AvailableUpdates
      type: object
      description: Holds informatiom about the available versions for upgrade.
    UpgradeStatus:
      description: UpgradeStatus contains information about upgradeAppliance operation.
      id: UpgradeStatus
      type: object
      properties:
        previousVersion:
          description: The version from which we upgraded.
          type: string
        error:
          description: Provides details on the state of the upgrade operation in case of an error.
          $ref: '#/components/schemas/Status'
        version:
          type: string
          description: The version to upgrade to.
        startTime:
          description: The time the operation was started.
          format: google-datetime
          type: string
        state:
          type: string
          description: The state of the upgradeAppliance operation.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - FAILED
            - SUCCEEDED
          enumDescriptions:
            - The state was not sampled by the health checks yet.
            - The upgrade has started.
            - The upgrade failed.
            - The upgrade finished successfully.
    ListReplicationCyclesResponse:
      properties:
        replicationCycles:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ReplicationCycle'
          description: Output only. The list of replication cycles response.
        nextPageToken:
          description: Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
          readOnly: true
        unreachable:
          items:
            type: string
          readOnly: true
          type: array
          description: Output only. Locations that could not be reached.
      description: Response message for 'ListReplicationCycles' request.
      type: object
      id: ListReplicationCyclesResponse
    VmwareSourceDetails:
      id: VmwareSourceDetails
      description: VmwareSourceDetails message describes a specific source details for the vmware source type.
      properties:
        password:
          description: Input only. The credentials password. This is write only and can not be read in a GET operation.
          type: string
        vcenterIp:
          description: The ip address of the vcenter this Source represents.
          type: string
        thumbprint:
          description: The thumbprint representing the certificate for the vcenter.
          type: string
        username:
          description: The credentials username.
          type: string
      type: object
    CancelOperationRequest:
      type: object
      properties: {}
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
    CutoverJob:
      properties:
        name:
          description: Output only. The name of the cutover job.
          readOnly: true
          type: string
        steps:
          description: Output only. The cutover steps list representing its progress.
          items:
            $ref: '#/components/schemas/CutoverStep'
          type: array
          readOnly: true
        endTime:
          format: google-datetime
          description: Output only. The time the cutover job had finished.
          readOnly: true
          type: string
        stateTime:
          readOnly: true
          description: Output only. The time the state was last updated.
          format: google-datetime
          type: string
        computeEngineTargetDetails:
          $ref: '#/components/schemas/ComputeEngineTargetDetails'
          description: Output only. Details of the target VM in Compute Engine.
          readOnly: true
        error:
          readOnly: true
          $ref: '#/components/schemas/Status'
          description: Output only. Provides details for the errors that led to the Cutover Job's state.
        progressPercent:
          description: Output only. The current progress in percentage of the cutover job.
          format: int32
          type: integer
          readOnly: true
        stateMessage:
          type: string
          description: Output only. A message providing possible extra details about the current state.
          readOnly: true
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the cutover job was created (as an API call, not when it was actually created in the target).
        state:
          enumDescriptions:
            - The state is unknown. This is used for API compatibility only and is not used by the system.
            - The cutover job has not yet started.
            - The cutover job finished with errors.
            - The cutover job finished successfully.
            - The cutover job was cancelled.
            - The cutover job is being cancelled.
            - The cutover job is active and running.
            - OS adaptation is running as part of the cutover job to generate license.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - FAILED
            - SUCCEEDED
            - CANCELLED
            - CANCELLING
            - ACTIVE
            - ADAPTING_OS
          description: Output only. State of the cutover job.
          readOnly: true
      description: CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot.
      id: CutoverJob
      type: object
    DatacenterConnector:
      type: object
      id: DatacenterConnector
      description: DatacenterConnector message describes a connector between the Source and Google Cloud, which is installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to Google Cloud and support vm migration data transfer.
      properties:
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the connector was created (as an API call, not when it was actually installed).
          format: google-datetime
        applianceInfrastructureVersion:
          description: Output only. Appliance OVA version. This is the OVA which is manually installed by the user and contains the infrastructure for the automatically updatable components on the appliance.
          readOnly: true
          type: string
        applianceSoftwareVersion:
          description: Output only. Appliance last installed update bundle version. This is the version of the automatically updatable components on the appliance.
          readOnly: true
          type: string
        serviceAccount:
          description: The service account to use in the connector when communicating with the cloud.
          type: string
        state:
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - OFFLINE
            - FAILED
            - ACTIVE
          description: Output only. State of the DatacenterConnector, as determined by the health checks.
          enumDescriptions:
            - The state is unknown. This is used for API compatibility only and is not used by the system.
            - The state was not sampled by the health checks yet.
            - The source was sampled by health checks and is not available.
            - The source is available but might not be usable yet due to unvalidated credentials or another reason. The credentials referred to are the ones to the Source. The error message will contain further details.
            - The source exists and its credentials were verified.
          type: string
        error:
          readOnly: true
          description: Output only. Provides details on the state of the Datacenter Connector in case of an error.
          $ref: '#/components/schemas/Status'
        name:
          description: Output only. The connector's name.
          readOnly: true
          type: string
        bucket:
          type: string
          description: Output only. The communication channel between the datacenter connector and Google Cloud.
          readOnly: true
        registrationId:
          type: string
          description: Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.
        version:
          type: string
          description: The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.
        availableVersions:
          $ref: '#/components/schemas/AvailableUpdates'
          readOnly: true
          description: Output only. The available versions for updating this appliance.
        stateTime:
          description: Output only. The time the state was last set.
          format: google-datetime
          readOnly: true
          type: string
        upgradeStatus:
          readOnly: true
          description: Output only. The status of the current / last upgradeAppliance operation.
          $ref: '#/components/schemas/UpgradeStatus'
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The last time the connector was updated with an API call.
  parameters:
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations:
      id: google.vmmigration.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    groups:
      id: google.vmmigration.groups
      name: groups
      title: Groups
      methods:
        projects_locations_groups_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_groups_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_groups_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_groups_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_groups_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/projects_locations_groups_get'
          - $ref: '#/components/x-stackQL-resources/groups/methods/projects_locations_groups_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/projects_locations_groups_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/projects_locations_groups_delete'
    groups__group_migration:
      id: google.vmmigration.groups__group_migration
      name: groups__group_migration
      title: Groups__group_migration
      methods:
        projects_locations_groups_addGroupMigration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:addGroupMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_groups_removeGroupMigration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:removeGroupMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/groups__group_migration/methods/projects_locations_groups_addGroupMigration'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups__group_migration/methods/projects_locations_groups_removeGroupMigration'
    target_projects:
      id: google.vmmigration.target_projects
      name: target_projects
      title: Target_projects
      methods:
        projects_locations_targetProjects_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects~1{targetProjectsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_targetProjects_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects~1{targetProjectsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_targetProjects_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects~1{targetProjectsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_targetProjects_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_targetProjects_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/target_projects/methods/projects_locations_targetProjects_get'
          - $ref: '#/components/x-stackQL-resources/target_projects/methods/projects_locations_targetProjects_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/target_projects/methods/projects_locations_targetProjects_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/target_projects/methods/projects_locations_targetProjects_delete'
    operations:
      id: google.vmmigration.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    utilization_reports:
      id: google.vmmigration.utilization_reports
      name: utilization_reports
      title: Utilization_reports
      methods:
        projects_locations_sources_utilizationReports_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1utilizationReports~1{utilizationReportsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_utilizationReports_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1utilizationReports~1{utilizationReportsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_utilizationReports_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1utilizationReports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_utilizationReports_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1utilizationReports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/utilization_reports/methods/projects_locations_sources_utilizationReports_get'
          - $ref: '#/components/x-stackQL-resources/utilization_reports/methods/projects_locations_sources_utilizationReports_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/utilization_reports/methods/projects_locations_sources_utilizationReports_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/utilization_reports/methods/projects_locations_sources_utilizationReports_delete'
    cutover_jobs:
      id: google.vmmigration.cutover_jobs
      name: cutover_jobs
      title: Cutover_jobs
      methods:
        projects_locations_sources_migratingVms_cutoverJobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cutoverJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_cutoverJobs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cutoverJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_cutoverJobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cutoverJobs~1{cutoverJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_cutoverJobs_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cutoverJobs~1{cutoverJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cutover_jobs/methods/projects_locations_sources_migratingVms_cutoverJobs_get'
          - $ref: '#/components/x-stackQL-resources/cutover_jobs/methods/projects_locations_sources_migratingVms_cutoverJobs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/cutover_jobs/methods/projects_locations_sources_migratingVms_cutoverJobs_create'
        update: []
        delete: []
    clone_jobs:
      id: google.vmmigration.clone_jobs
      name: clone_jobs
      title: Clone_jobs
      methods:
        projects_locations_sources_migratingVms_cloneJobs_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cloneJobs~1{cloneJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_cloneJobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cloneJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_cloneJobs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cloneJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_cloneJobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cloneJobs~1{cloneJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clone_jobs/methods/projects_locations_sources_migratingVms_cloneJobs_get'
          - $ref: '#/components/x-stackQL-resources/clone_jobs/methods/projects_locations_sources_migratingVms_cloneJobs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clone_jobs/methods/projects_locations_sources_migratingVms_cloneJobs_create'
        update: []
        delete: []
    replication_cycles:
      id: google.vmmigration.replication_cycles
      name: replication_cycles
      title: Replication_cycles
      methods:
        projects_locations_sources_migratingVms_replicationCycles_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1replicationCycles~1{replicationCyclesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_replicationCycles_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1replicationCycles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replication_cycles/methods/projects_locations_sources_migratingVms_replicationCycles_get'
          - $ref: '#/components/x-stackQL-resources/replication_cycles/methods/projects_locations_sources_migratingVms_replicationCycles_list'
        insert: []
        update: []
        delete: []
    migrating_vms:
      id: google.vmmigration.migrating_vms
      name: migrating_vms
      title: Migrating_vms
      methods:
        projects_locations_sources_migratingVms_startMigration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}:startMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_resumeMigration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}:resumeMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_finalizeMigration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}:finalizeMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_pauseMigration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}:pauseMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_migratingVms_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/migrating_vms/methods/projects_locations_sources_migratingVms_get'
          - $ref: '#/components/x-stackQL-resources/migrating_vms/methods/projects_locations_sources_migratingVms_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/migrating_vms/methods/projects_locations_sources_migratingVms_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/migrating_vms/methods/projects_locations_sources_migratingVms_delete'
    datacenter_connectors:
      id: google.vmmigration.datacenter_connectors
      name: datacenter_connectors
      title: Datacenter_connectors
      methods:
        projects_locations_sources_datacenterConnectors_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_datacenterConnectors_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_datacenterConnectors_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors~1{datacenterConnectorsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_datacenterConnectors_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors~1{datacenterConnectorsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_datacenterConnectors_upgradeAppliance:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors~1{datacenterConnectorsId}:upgradeAppliance/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datacenter_connectors/methods/projects_locations_sources_datacenterConnectors_get'
          - $ref: '#/components/x-stackQL-resources/datacenter_connectors/methods/projects_locations_sources_datacenterConnectors_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/datacenter_connectors/methods/projects_locations_sources_datacenterConnectors_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datacenter_connectors/methods/projects_locations_sources_datacenterConnectors_delete'
    sources:
      id: google.vmmigration.sources
      name: sources
      title: Sources
      methods:
        projects_locations_sources_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_sources_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sources/methods/projects_locations_sources_get'
          - $ref: '#/components/x-stackQL-resources/sources/methods/projects_locations_sources_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sources/methods/projects_locations_sources_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sources/methods/projects_locations_sources_delete'
    sources__inventory:
      id: google.vmmigration.sources__inventory
      name: sources__inventory
      title: Sources__inventory
      methods:
        projects_locations_sources_fetchInventory:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}:fetchInventory/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sources__inventory/methods/projects_locations_sources_fetchInventory'
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
    get:
      description: Lists information about the supported locations for this service.
      operationId: vmmigration.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: vmmigration.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Group.
      operationId: vmmigration.projects.locations.groups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single Group.
      operationId: vmmigration.projects.locations.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Group.
      operationId: vmmigration.projects.locations.groups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/groups:
    parameters: *ref_1
    post:
      description: Creates a new Group in a given project and location.
      operationId: vmmigration.projects.locations.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: insert
    get:
      description: Lists Groups in a given project and location.
      operationId: vmmigration.projects.locations.groups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addGroupMigration:
    parameters: *ref_1
    post:
      description: Adds a MigratingVm to a Group.
      operationId: vmmigration.projects.locations.groups.addGroupMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups__group_migration
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeGroupMigration:
    parameters: *ref_1
    post:
      description: Removes a MigratingVm from a Group.
      operationId: vmmigration.projects.locations.groups.removeGroupMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveGroupMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups__group_migration
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}:
    parameters: *ref_1
    patch:
      description: 'Updates the parameters of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.'
      operationId: vmmigration.projects.locations.targetProjects.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetProject'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetProjectsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.'
      operationId: vmmigration.projects.locations.targetProjects.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetProjectsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-verb: delete
    get:
      description: 'Gets details of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.'
      operationId: vmmigration.projects.locations.targetProjects.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetProject'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetProjectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/targetProjects:
    parameters: *ref_1
    get:
      description: 'Lists TargetProjects in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.'
      operationId: vmmigration.projects.locations.targetProjects.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetProjectsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-verb: select
    post:
      description: 'Creates a new TargetProject in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.'
      operationId: vmmigration.projects.locations.targetProjects.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetProject'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: targetProjectId
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: vmmigration.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vmmigration.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: vmmigration.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: vmmigration.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}:
    parameters: *ref_1
    get:
      description: Gets a single Utilization Report.
      operationId: vmmigration.projects.locations.sources.utilizationReports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilizationReport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: utilizationReportsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-verb: select
    delete:
      description: Deletes a single Utilization Report.
      operationId: vmmigration.projects.locations.sources.utilizationReports.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: utilizationReportsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports:
    parameters: *ref_1
    post:
      description: Creates a new UtilizationReport.
      operationId: vmmigration.projects.locations.sources.utilizationReports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilizationReport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: utilizationReportId
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-verb: insert
    get:
      description: Lists Utilization Reports of the given Source.
      operationId: vmmigration.projects.locations.sources.utilizationReports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUtilizationReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs:
    parameters: *ref_1
    get:
      description: Lists CutoverJobs of a given migrating VM.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCutoverJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: cutover_jobs
      x-stackQL-verb: select
    post:
      description: Initiates a Cutover of a specific migrating VM. The returned LRO is completed when the cutover job resource is created and the job is initiated.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CutoverJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: cutoverJobId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: cutover_jobs
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single CutoverJob.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutoverJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cutoverJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: cutover_jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}:cancel:
    parameters: *ref_1
    post:
      description: Initiates the cancellation of a running cutover job.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelCutoverJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cutoverJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: cutover_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}:cancel:
    parameters: *ref_1
    post:
      description: Initiates the cancellation of a running clone job.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelCloneJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cloneJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs:
    parameters: *ref_1
    get:
      description: Lists CloneJobs of a given migrating VM.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCloneJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-verb: select
    post:
      description: Initiates a Clone of a specific migrating VM.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: cloneJobId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single CloneJob.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloneJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cloneJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles/{replicationCyclesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ReplicationCycle.
      operationId: vmmigration.projects.locations.sources.migratingVms.replicationCycles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationCycle'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: replicationCyclesId
          required: true
          schema:
            type: string
      x-stackQL-resource: replication_cycles
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles:
    parameters: *ref_1
    get:
      description: Lists ReplicationCycles in a given MigratingVM.
      operationId: vmmigration.projects.locations.sources.migratingVms.replicationCycles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReplicationCyclesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: replication_cycles
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:startMigration:
    parameters: *ref_1
    post:
      description: Starts migration for a VM. Starts the process of uploading data and creating snapshots, in replication cycles scheduled by the policy.
      operationId: vmmigration.projects.locations.sources.migratingVms.startMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:resumeMigration:
    parameters: *ref_1
    post:
      description: Resumes a migration for a VM. When called on a paused migration, will start the process of uploading data and creating snapshots; when called on a completed cut-over migration, will update the migration to active state and start the process of uploading data and creating snapshots.
      operationId: vmmigration.projects.locations.sources.migratingVms.resumeMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:finalizeMigration:
    parameters: *ref_1
    post:
      description: Marks a migration as completed, deleting migration resources that are no longer being used. Only applicable after cutover is done.
      operationId: vmmigration.projects.locations.sources.migratingVms.finalizeMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinalizeMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:pauseMigration:
    parameters: *ref_1
    post:
      description: Pauses a migration for a VM. If cycle tasks are running they will be cancelled, preserving source task data. Further replication cycles will not be triggered while the VM is paused.
      operationId: vmmigration.projects.locations.sources.migratingVms.pauseMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single MigratingVm.
      operationId: vmmigration.projects.locations.sources.migratingVms.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigratingVm'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: exec
    delete:
      description: Deletes a single MigratingVm.
      operationId: vmmigration.projects.locations.sources.migratingVms.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: delete
    get:
      description: Gets details of a single MigratingVm.
      operationId: vmmigration.projects.locations.sources.migratingVms.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigratingVm'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms:
    parameters: *ref_1
    post:
      description: Creates a new MigratingVm in a given Source.
      operationId: vmmigration.projects.locations.sources.migratingVms.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigratingVm'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: migratingVmId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: insert
    get:
      description: Lists MigratingVms in a given Source.
      operationId: vmmigration.projects.locations.sources.migratingVms.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMigratingVmsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors:
    parameters: *ref_1
    post:
      description: Creates a new DatacenterConnector in a given Source.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatacenterConnector'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: datacenterConnectorId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-verb: insert
    get:
      description: Lists DatacenterConnectors in a given Source.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatacenterConnectorsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single DatacenterConnector.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacenterConnector'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: datacenterConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-verb: select
    delete:
      description: Deletes a single DatacenterConnector.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: datacenterConnectorsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}:upgradeAppliance:
    parameters: *ref_1
    post:
      description: Upgrades the appliance relate to this DatacenterConnector to the in-place updateable version.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.upgradeAppliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeApplianceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: datacenterConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources:
    parameters: *ref_1
    get:
      description: Lists Sources in a given project and location.
      operationId: vmmigration.projects.locations.sources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: sources
      x-stackQL-verb: select
    post:
      description: Creates a new Source in a given project and location.
      operationId: vmmigration.projects.locations.sources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: sourceId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}:fetchInventory:
    parameters: *ref_1
    get:
      description: List remote source's inventory of VMs. The remote source is the onprem vCenter (remote in the sense it's not in Compute Engine). The inventory describes the list of existing VMs in that source. Note that this operation lists the VMs on the remote source, as opposed to listing the MigratingVms resources in the vmmigration service.
      operationId: vmmigration.projects.locations.sources.fetchInventory
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchInventoryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: forceRefresh
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: sources__inventory
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single Source.
      operationId: vmmigration.projects.locations.sources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Source.
      operationId: vmmigration.projects.locations.sources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: select
    delete:
      description: Deletes a single Source.
      operationId: vmmigration.projects.locations.sources.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: delete
