openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: VM Migration API
  description: 'Use the Migrate to Virtual Machines API to programmatically migrate workloads. '
  version: v1
  x-discovery-doc-revision: '20230817'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/migrate/virtual-machines'
servers:
  - url: 'https://vmmigration.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    VmwareVmDetails:
      properties:
        committedStorageMb:
          description: The total size of the storage allocated to the VM in MB.
          type: string
          format: int64
        memoryMb:
          type: integer
          description: The size of the memory of the VM in MB.
          format: int32
        uuid:
          type: string
          description: The unique identifier of the VM in vCenter.
        vmId:
          description: The VM's id in the source (note that this is not the MigratingVm's id). This is the moref id of the VM.
          type: string
        diskCount:
          type: integer
          format: int32
          description: The number of disks the VM has.
        cpuCount:
          description: The number of cpus in the VM.
          format: int32
          type: integer
        bootOption:
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is EFI.
            - The boot option is BIOS.
          description: Output only. The VM Boot Option.
          readOnly: true
          enum:
            - BOOT_OPTION_UNSPECIFIED
            - EFI
            - BIOS
          type: string
        datacenterId:
          description: The id of the vCenter's datacenter this VM is contained in.
          type: string
        powerState:
          description: The power state of the VM at the moment list was taken.
          enumDescriptions:
            - Power state is not specified.
            - The VM is turned ON.
            - The VM is turned OFF.
            - The VM is suspended. This is similar to hibernation or sleep mode.
          type: string
          enum:
            - POWER_STATE_UNSPECIFIED
            - 'ON'
            - 'OFF'
            - SUSPENDED
        datacenterDescription:
          type: string
          description: The descriptive name of the vCenter's datacenter this VM is contained in.
        guestDescription:
          description: 'The VM''s OS. See for example https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html for types of strings this might hold.'
          type: string
        displayName:
          type: string
          description: The display name of the VM. Note that this is not necessarily unique.
      description: VmwareVmDetails describes a VM in vCenter.
      id: VmwareVmDetails
      type: object
    ListDatacenterConnectorsResponse:
      id: ListDatacenterConnectorsResponse
      properties:
        nextPageToken:
          type: string
          description: 'Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          readOnly: true
        unreachable:
          type: array
          description: Output only. Locations that could not be reached.
          items:
            type: string
          readOnly: true
        datacenterConnectors:
          description: Output only. The list of sources response.
          items:
            $ref: '#/components/schemas/DatacenterConnector'
          readOnly: true
          type: array
      description: Response message for 'ListDatacenterConnectors' request.
      type: object
    VmwareVmsDetails:
      type: object
      description: VmwareVmsDetails describes VMs in vCenter.
      properties:
        details:
          items:
            $ref: '#/components/schemas/VmwareVmDetails'
          type: array
          description: The details of the vmware VMs.
      id: VmwareVmsDetails
    SchedulingNodeAffinity:
      properties:
        values:
          description: Corresponds to the label values of Node resource.
          type: array
          items:
            type: string
        key:
          description: The label key of Node resource to reference.
          type: string
        operator:
          enumDescriptions:
            - 'An unknown, unexpected behavior.'
            - The node resource group should be in these resources affinity.
            - The node resource group should not be in these resources affinity.
          description: The operator to use for the node resources specified in the `values` parameter.
          enum:
            - OPERATOR_UNSPECIFIED
            - IN
            - NOT_IN
          type: string
      id: SchedulingNodeAffinity
      type: object
      description: 'Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled. Based on https://cloud.google.com/compute/docs/reference/rest/v1/instances/setScheduling'
    ListSourcesResponse:
      properties:
        sources:
          readOnly: true
          items:
            $ref: '#/components/schemas/Source'
          type: array
          description: Output only. The list of sources response.
        nextPageToken:
          type: string
          description: 'Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          readOnly: true
        unreachable:
          type: array
          description: Output only. Locations that could not be reached.
          items:
            type: string
          readOnly: true
      type: object
      id: ListSourcesResponse
      description: Response message for 'ListSources' request.
    StartMigrationRequest:
      description: Request message for 'StartMigrationRequest' request.
      properties: {}
      type: object
      id: StartMigrationRequest
    AdaptingOSStep:
      type: object
      description: AdaptingOSStep contains specific step details.
      properties: {}
      id: AdaptingOSStep
    AwsVmDetails:
      description: AwsVmDetails describes a VM in AWS.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags of the VM.
        architecture:
          enumDescriptions:
            - The architecture is unknown.
            - The architecture is I386.
            - The architecture is X86_64.
            - The architecture is ARM64.
            - The architecture is X86_64_MAC.
          description: The CPU architecture.
          enum:
            - VM_ARCHITECTURE_UNSPECIFIED
            - I386
            - X86_64
            - ARM64
            - X86_64_MAC
          type: string
        committedStorageMb:
          description: The total size of the storage allocated to the VM in MB.
          type: string
          format: int64
        vmId:
          description: The VM ID in AWS.
          type: string
        zone:
          type: string
          description: The AWS zone of the VM.
        osDescription:
          description: The VM's OS.
          type: string
        securityGroups:
          description: The security groups the VM belongs to.
          type: array
          items:
            $ref: '#/components/schemas/AwsSecurityGroup'
        cpuCount:
          type: integer
          description: The number of cpus the VM has.
          format: int32
        memoryMb:
          format: int32
          type: integer
          description: The memory size of the VM in MB.
        sourceDescription:
          description: The descriptive name of the AWS's source this VM is connected to.
          type: string
        bootOption:
          enum:
            - BOOT_OPTION_UNSPECIFIED
            - EFI
            - BIOS
          description: The VM Boot Option.
          type: string
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is UEFI.
            - The boot option is LEGACY-BIOS.
        powerState:
          enumDescriptions:
            - Power state is not specified.
            - The VM is turned on.
            - The VM is turned off.
            - The VM is suspended. This is similar to hibernation or sleep mode.
            - The VM is starting.
          readOnly: true
          enum:
            - POWER_STATE_UNSPECIFIED
            - 'ON'
            - 'OFF'
            - SUSPENDED
            - PENDING
          description: Output only. The power state of the VM at the moment list was taken.
          type: string
        instanceType:
          type: string
          description: The instance type of the VM.
        vpcId:
          description: The VPC ID the VM belongs to.
          type: string
        sourceId:
          type: string
          description: The id of the AWS's source this VM is connected to.
        virtualizationType:
          type: string
          enumDescriptions:
            - The virtualization type is unknown.
            - The virtualziation type is HVM.
            - The virtualziation type is PARAVIRTUAL.
          enum:
            - VM_VIRTUALIZATION_TYPE_UNSPECIFIED
            - HVM
            - PARAVIRTUAL
          description: The virtualization type.
        displayName:
          description: The display name of the VM. Note that this value is not necessarily unique.
          type: string
        diskCount:
          format: int32
          type: integer
          description: The number of disks the VM has.
      type: object
      id: AwsVmDetails
    PersistentDisk:
      properties:
        diskUri:
          description: The URI of the Persistent Disk.
          type: string
        sourceDiskNumber:
          description: The ordinal number of the source VM disk.
          type: integer
          format: int32
      type: object
      id: PersistentDisk
      description: Details of a created Persistent Disk.
    ResumeMigrationRequest:
      type: object
      properties: {}
      id: ResumeMigrationRequest
      description: Request message for 'ResumeMigration' request.
    ListLocationsResponse:
      type: object
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          type: array
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    AwsVmsDetails:
      properties:
        details:
          items:
            $ref: '#/components/schemas/AwsVmDetails'
          description: The details of the AWS VMs.
          type: array
      type: object
      id: AwsVmsDetails
      description: AWSVmsDetails describes VMs in AWS.
    UtilizationReport:
      type: object
      id: UtilizationReport
      properties:
        state:
          enumDescriptions:
            - The state is unknown. This value is not in use.
            - The report is in the making.
            - Report creation completed successfully.
            - Report creation failed.
          readOnly: true
          description: Output only. Current state of the report.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - SUCCEEDED
            - FAILED
        displayName:
          type: string
          description: 'The report display name, as assigned by the user.'
        name:
          type: string
          readOnly: true
          description: Output only. The report unique name.
        stateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the state was last set.
        timeFrame:
          enum:
            - TIME_FRAME_UNSPECIFIED
            - WEEK
            - MONTH
            - YEAR
          enumDescriptions:
            - The time frame was not specified and will default to WEEK.
            - One week.
            - One month.
            - One year.
          description: Time frame of the report.
          type: string
        error:
          readOnly: true
          $ref: '#/components/schemas/Status'
          description: Output only. Provides details on the state of the report in case of an error.
        createTime:
          readOnly: true
          type: string
          description: 'Output only. The time the report was created (this refers to the time of the request, not the time the report creation completed).'
          format: google-datetime
        vms:
          items:
            $ref: '#/components/schemas/VmUtilizationInfo'
          type: array
          description: 'List of utilization information per VM. When sent as part of the request, the "vm_id" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.'
        frameEndTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the "frame_end_time" value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.
        vmCount:
          description: Output only. Total number of VMs included in the report.
          format: int32
          readOnly: true
          type: integer
      description: 'Utilization report details the utilization (CPU, memory, etc.) of selected source VMs.'
    FinalizeMigrationRequest:
      properties: {}
      description: Request message for 'FinalizeMigration' request.
      type: object
      id: FinalizeMigrationRequest
    AwsSourceDetails:
      id: AwsSourceDetails
      type: object
      description: AwsSourceDetails message describes a specific source details for the AWS source type.
      properties:
        accessKeyCreds:
          $ref: '#/components/schemas/AccessKeyCredentials'
          description: AWS Credentials using access key id and secret.
        inventorySecurityGroupNames:
          description: AWS security group names to limit the scope of the source inventory.
          type: array
          items:
            type: string
        awsRegion:
          type: string
          description: Immutable. The AWS region that the source VMs will be migrated from.
        publicIp:
          description: Output only. The source's public IP. All communication initiated by this source will originate from this IP.
          readOnly: true
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - FAILED
            - ACTIVE
          enumDescriptions:
            - The state is unknown. This is used for API compatibility only and is not used by the system.
            - The state was not sampled by the health checks yet.
            - The source is available but might not be usable yet due to invalid credentials or another reason. The error message will contain further details.
            - The source exists and its credentials were verified.
          type: string
          description: Output only. State of the source as determined by the health check.
          readOnly: true
        error:
          description: Output only. Provides details on the state of the Source in case of an error.
          readOnly: true
          $ref: '#/components/schemas/Status'
        inventoryTagList:
          description: AWS resource tags to limit the scope of the source inventory.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        migrationResourcesUserTags:
          type: object
          description: User specified tags to add to every M2VM generated resource in AWS. These tags will be set in addition to the default tags that are set as part of the migration process. The tags must not begin with the reserved prefix `m2vm`.
          additionalProperties:
            type: string
    ReplicationCycle:
      id: ReplicationCycle
      description: ReplicationCycle contains information about the current replication cycle status.
      type: object
      properties:
        progressPercent:
          deprecated: true
          type: integer
          description: 'The current progress in percentage of this cycle. Was replaced by ''steps'' field, which breaks down the cycle progression more accurately.'
          format: int32
        steps:
          type: array
          description: The cycle's steps list representing its progress.
          items:
            $ref: '#/components/schemas/CycleStep'
        startTime:
          description: The time the replication cycle has started.
          format: google-datetime
          type: string
        totalPauseDuration:
          type: string
          description: The accumulated duration the replication cycle was paused.
          format: google-duration
        cycleNumber:
          type: integer
          description: The cycle's ordinal number.
          format: int32
        endTime:
          description: The time the replication cycle has ended.
          format: google-datetime
          type: string
        warnings:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MigrationWarning'
          description: Output only. Warnings that occurred during the cycle.
        error:
          description: Provides details on the state of the cycle in case of an error.
          $ref: '#/components/schemas/Status'
        name:
          description: The identifier of the ReplicationCycle.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - PAUSED
            - FAILED
            - SUCCEEDED
          enumDescriptions:
            - The state is unknown. This is used for API compatibility only and is not used by the system.
            - The replication cycle is running.
            - The replication cycle is paused.
            - The replication cycle finished with errors.
            - The replication cycle finished successfully.
          description: State of the ReplicationCycle.
          type: string
    ComputeEngineTargetDefaults:
      description: ComputeEngineTargetDefaults is a collection of details for creating a VM in a target Compute Engine project.
      properties:
        secureBoot:
          description: Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.
          type: boolean
        hostname:
          description: The hostname to assign to the VM.
          type: string
        additionalLicenses:
          items:
            type: string
          type: array
          description: Additional licenses to assign to the VM.
        labels:
          description: A map of labels to associate with the VM.
          type: object
          additionalProperties:
            type: string
        serviceAccount:
          type: string
          description: The service account to associate the VM with.
        networkTags:
          description: A list of network tags to associate with the VM.
          items:
            type: string
          type: array
        targetProject:
          type: string
          description: The full path of the resource of type TargetProject which represents the Compute Engine project in which to create this VM.
        machineType:
          description: The machine type to create the VM with.
          type: string
        vmName:
          type: string
          description: The name of the VM to create.
        diskType:
          enumDescriptions:
            - An unspecified disk type. Will be used as STANDARD.
            - A Standard disk type.
            - SSD hard disk type.
            - An alternative to SSD persistent disks that balance performance and cost.
          enum:
            - COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED
            - COMPUTE_ENGINE_DISK_TYPE_STANDARD
            - COMPUTE_ENGINE_DISK_TYPE_SSD
            - COMPUTE_ENGINE_DISK_TYPE_BALANCED
          type: string
          description: The disk type to use in the VM.
        zone:
          description: The zone in which to create the VM.
          type: string
        computeScheduling:
          description: Compute instance scheduling information (if empty default is used).
          $ref: '#/components/schemas/ComputeScheduling'
        machineTypeSeries:
          description: The machine type series to create the VM with.
          type: string
        networkInterfaces:
          description: List of NICs connected to this VM.
          items:
            $ref: '#/components/schemas/NetworkInterface'
          type: array
        bootOption:
          enum:
            - COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED
            - COMPUTE_ENGINE_BOOT_OPTION_EFI
            - COMPUTE_ENGINE_BOOT_OPTION_BIOS
          readOnly: true
          description: 'Output only. The VM Boot Option, as set in the source VM.'
          type: string
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is EFI.
            - The boot option is BIOS.
        appliedLicense:
          $ref: '#/components/schemas/AppliedLicense'
          description: Output only. The OS license returned from the adaptation module report.
          readOnly: true
        licenseType:
          description: The license type to use in OS adaptation.
          enumDescriptions:
            - The license type is the default for the OS.
            - The license type is Pay As You Go license type.
            - The license type is Bring Your Own License type.
          type: string
          enum:
            - COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT
            - COMPUTE_ENGINE_LICENSE_TYPE_PAYG
            - COMPUTE_ENGINE_LICENSE_TYPE_BYOL
        metadata:
          description: The metadata key/value pairs to assign to the VM.
          additionalProperties:
            type: string
          type: object
      id: ComputeEngineTargetDefaults
      type: object
    VmwareSourceDetails:
      id: VmwareSourceDetails
      type: object
      properties:
        vcenterIp:
          description: The ip address of the vcenter this Source represents.
          type: string
        password:
          type: string
          description: Input only. The credentials password. This is write only and can not be read in a GET operation.
        thumbprint:
          description: The thumbprint representing the certificate for the vcenter.
          type: string
        resolvedVcenterHost:
          type: string
          description: The hostname of the vcenter.
        username:
          description: The credentials username.
          type: string
      description: VmwareSourceDetails message describes a specific source details for the vmware source type.
    DatacenterConnector:
      properties:
        registrationId:
          description: Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.
          type: string
        bucket:
          description: Output only. The communication channel between the datacenter connector and Google Cloud.
          readOnly: true
          type: string
        availableVersions:
          description: Output only. The available versions for updating this appliance.
          readOnly: true
          $ref: '#/components/schemas/AvailableUpdates'
        applianceInfrastructureVersion:
          readOnly: true
          type: string
          description: Output only. Appliance OVA version. This is the OVA which is manually installed by the user and contains the infrastructure for the automatically updatable components on the appliance.
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The last time the connector was updated with an API call.
          type: string
        stateTime:
          type: string
          format: google-datetime
          description: Output only. The time the state was last set.
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - OFFLINE
            - FAILED
            - ACTIVE
          type: string
          description: 'Output only. State of the DatacenterConnector, as determined by the health checks.'
          readOnly: true
          enumDescriptions:
            - The state is unknown. This is used for API compatibility only and is not used by the system.
            - The state was not sampled by the health checks yet.
            - The source was sampled by health checks and is not available.
            - The source is available but might not be usable yet due to unvalidated credentials or another reason. The credentials referred to are the ones to the Source. The error message will contain further details.
            - The source exists and its credentials were verified.
        error:
          description: Output only. Provides details on the state of the Datacenter Connector in case of an error.
          $ref: '#/components/schemas/Status'
          readOnly: true
        name:
          description: Output only. The connector's name.
          readOnly: true
          type: string
        upgradeStatus:
          $ref: '#/components/schemas/UpgradeStatus'
          readOnly: true
          description: Output only. The status of the current / last upgradeAppliance operation.
        serviceAccount:
          type: string
          description: The service account to use in the connector when communicating with the cloud.
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: 'Output only. The time the connector was created (as an API call, not when it was actually installed).'
        version:
          type: string
          description: The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.
        applianceSoftwareVersion:
          readOnly: true
          type: string
          description: Output only. Appliance last installed update bundle version. This is the version of the automatically updatable components on the appliance.
      description: 'DatacenterConnector message describes a connector between the Source and Google Cloud, which is installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to Google Cloud and support vm migration data transfer.'
      type: object
      id: DatacenterConnector
    PersistentDiskDefaults:
      description: Details for creation of a Persistent Disk.
      id: PersistentDiskDefaults
      properties:
        diskName:
          description: Optional. The name of the Persistent Disk to create.
          type: string
        additionalLabels:
          type: object
          additionalProperties:
            type: string
          description: A map of labels to associate with the Persistent Disk.
        sourceDiskNumber:
          type: integer
          format: int32
          description: Required. The ordinal number of the source VM disk.
        diskType:
          description: The disk type to use.
          type: string
          enumDescriptions:
            - An unspecified disk type. Will be used as STANDARD.
            - A Standard disk type.
            - SSD hard disk type.
            - An alternative to SSD persistent disks that balance performance and cost.
          enum:
            - COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED
            - COMPUTE_ENGINE_DISK_TYPE_STANDARD
            - COMPUTE_ENGINE_DISK_TYPE_SSD
            - COMPUTE_ENGINE_DISK_TYPE_BALANCED
      type: object
    MigrationError:
      type: object
      description: Represents migration resource error information that can be used with google.rpc.Status message. MigrationError is used to present the user with error information in migration operations.
      properties:
        code:
          enumDescriptions:
            - Default value. This value is not used.
            - Migrate for Compute encountered an unknown error.
            - Migrate for Compute encountered an error while validating replication source health.
            - Migrate for Compute encountered an error during source data operation.
            - Migrate for Compute encountered an error during target data operation.
            - Migrate for Compute encountered an error during OS adaptation.
            - Migrate for Compute encountered an error in clone operation.
            - Migrate for Compute encountered an error in cutover operation.
            - Migrate for Compute encountered an error during utilization report creation.
            - Migrate for Compute encountered an error during appliance upgrade.
          description: Output only. The error code.
          readOnly: true
          type: string
          enum:
            - ERROR_CODE_UNSPECIFIED
            - UNKNOWN_ERROR
            - SOURCE_VALIDATION_ERROR
            - SOURCE_REPLICATION_ERROR
            - TARGET_REPLICATION_ERROR
            - OS_ADAPTATION_ERROR
            - CLONE_ERROR
            - CUTOVER_ERROR
            - UTILIZATION_REPORT_ERROR
            - APPLIANCE_UPGRADE_ERROR
        helpLinks:
          items:
            $ref: '#/components/schemas/Link'
          readOnly: true
          type: array
          description: Output only. URL(s) pointing to additional information on handling the current error.
        errorMessage:
          readOnly: true
          description: Output only. The localized error message.
          $ref: '#/components/schemas/LocalizedMessage'
        actionItem:
          description: Output only. Suggested action for solving the error.
          $ref: '#/components/schemas/LocalizedMessage'
          readOnly: true
        errorTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the error occurred.
          type: string
      id: MigrationError
    ListTargetProjectsResponse:
      properties:
        targetProjects:
          description: Output only. The list of target response.
          readOnly: true
          items:
            $ref: '#/components/schemas/TargetProject'
          type: array
        unreachable:
          readOnly: true
          items:
            type: string
          type: array
          description: Output only. Locations that could not be reached.
        nextPageToken:
          type: string
          readOnly: true
          description: 'Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      id: ListTargetProjectsResponse
      type: object
      description: Response message for 'ListTargetProjects' call.
    MigrationWarning:
      type: object
      description: Represents migration resource warning information that can be used with google.rpc.Status message. MigrationWarning is used to present the user with warning information in migration operations.
      id: MigrationWarning
      properties:
        warningMessage:
          description: The localized warning message.
          $ref: '#/components/schemas/LocalizedMessage'
        warningTime:
          format: google-datetime
          description: The time the warning occurred.
          type: string
        actionItem:
          description: Suggested action for solving the warning.
          $ref: '#/components/schemas/LocalizedMessage'
        helpLinks:
          type: array
          description: URL(s) pointing to additional information on handling the current warning.
          items:
            $ref: '#/components/schemas/Link'
        code:
          type: string
          enumDescriptions:
            - Default value. This value is not used.
            - A warning originated from OS Adaptation.
          enum:
            - WARNING_CODE_UNSPECIFIED
            - ADAPTATION_WARNING
          description: The warning code.
    Source:
      properties:
        aws:
          description: AWS type source details.
          $ref: '#/components/schemas/AwsSourceDetails'
        name:
          description: Output only. The Source name.
          readOnly: true
          type: string
        labels:
          description: The labels of the source.
          additionalProperties:
            type: string
          type: object
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The update time timestamp.
        description:
          description: User-provided description of the source.
          type: string
        vmware:
          $ref: '#/components/schemas/VmwareSourceDetails'
          description: Vmware type source details.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The create time timestamp.
      description: Source message describes a specific vm migration Source resource. It contains the source environment information.
      type: object
      id: Source
    ReplicatingStep:
      description: ReplicatingStep contains specific step details.
      properties:
        lastThirtyMinutesAverageBytesPerSecond:
          description: The source disks replication rate for the last 30 minutes in bytes per second.
          format: int64
          type: string
        lastTwoMinutesAverageBytesPerSecond:
          description: The source disks replication rate for the last 2 minutes in bytes per second.
          format: int64
          type: string
        replicatedBytes:
          type: string
          format: int64
          description: Replicated bytes in the step.
        totalBytes:
          type: string
          description: Total bytes to be handled in the step.
          format: int64
      id: ReplicatingStep
      type: object
    NetworkInterface:
      type: object
      properties:
        subnetwork:
          type: string
          description: The subnetwork to connect the NIC to.
        network:
          type: string
          description: The network to connect the NIC to.
        externalIp:
          description: The external IP to define in the NIC.
          type: string
        internalIp:
          description: 'The internal IP to define in the NIC. The formats accepted are: `ephemeral` \ ipv4 address \ a named address resource full path.'
          type: string
      description: NetworkInterface represents a NIC of a VM.
      id: NetworkInterface
    VmUtilizationMetrics:
      properties:
        networkThroughputMaxKbps:
          description: 'Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.'
          type: string
          format: int64
        cpuMaxPercent:
          format: int32
          type: integer
          description: 'Max CPU usage, percent.'
        diskIoRateMaxKbps:
          description: 'Max disk IO rate, in kilobytes per second.'
          format: int64
          type: string
        memoryAveragePercent:
          description: 'Average memory usage, percent.'
          type: integer
          format: int32
        memoryMaxPercent:
          format: int32
          description: 'Max memory usage, percent.'
          type: integer
        networkThroughputAverageKbps:
          description: 'Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.'
          format: int64
          type: string
        diskIoRateAverageKbps:
          format: int64
          type: string
          description: 'Average disk IO rate, in kilobytes per second.'
        cpuAveragePercent:
          format: int32
          type: integer
          description: 'Average CPU usage, percent.'
      id: VmUtilizationMetrics
      description: Utilization metrics values for a single VM.
      type: object
    CutoverStep:
      properties:
        finalSync:
          $ref: '#/components/schemas/ReplicationCycle'
          description: Final sync step.
        previousReplicationCycle:
          description: A replication cycle prior cutover step.
          $ref: '#/components/schemas/ReplicationCycle'
        instantiatingMigratedVm:
          $ref: '#/components/schemas/InstantiatingMigratedVMStep'
          description: Instantiating migrated VM step.
        preparingVmDisks:
          description: Preparing VM disks step.
          $ref: '#/components/schemas/PreparingVMDisksStep'
        endTime:
          format: google-datetime
          type: string
          description: The time the step has ended.
        startTime:
          description: The time the step has started.
          format: google-datetime
          type: string
        shuttingDownSourceVm:
          description: Shutting down VM step.
          $ref: '#/components/schemas/ShuttingDownSourceVMStep'
      id: CutoverStep
      description: CutoverStep holds information about the cutover step progress.
      type: object
    ReplicationSync:
      id: ReplicationSync
      description: ReplicationSync contain information about the last replica sync to the cloud.
      type: object
      properties:
        lastSyncTime:
          description: The most updated snapshot created time in the source that finished replication.
          format: google-datetime
          type: string
    Tag:
      description: Tag is an AWS tag representation.
      properties:
        value:
          description: Value of tag.
          type: string
        key:
          description: Key of tag.
          type: string
      type: object
      id: Tag
    CancelCutoverJobRequest:
      properties: {}
      id: CancelCutoverJobRequest
      type: object
      description: Request message for 'CancelCutoverJob' request.
    ListCloneJobsResponse:
      description: Response message for 'ListCloneJobs' request.
      type: object
      properties:
        cloneJobs:
          items:
            $ref: '#/components/schemas/CloneJob'
          readOnly: true
          description: Output only. The list of clone jobs response.
          type: array
        unreachable:
          type: array
          items:
            type: string
          readOnly: true
          description: Output only. Locations that could not be reached.
        nextPageToken:
          description: 'Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          readOnly: true
          type: string
      id: ListCloneJobsResponse
    ListReplicationCyclesResponse:
      id: ListReplicationCyclesResponse
      properties:
        nextPageToken:
          readOnly: true
          type: string
          description: 'Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        unreachable:
          type: array
          items:
            type: string
          readOnly: true
          description: Output only. Locations that could not be reached.
        replicationCycles:
          items:
            $ref: '#/components/schemas/ReplicationCycle'
          readOnly: true
          description: Output only. The list of replication cycles response.
          type: array
      type: object
      description: Response message for 'ListReplicationCycles' request.
    ComputeEngineTargetDetails:
      properties:
        networkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          description: List of NICs connected to this VM.
        computeScheduling:
          $ref: '#/components/schemas/ComputeScheduling'
          description: Compute instance scheduling information (if empty default is used).
        diskType:
          enum:
            - COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED
            - COMPUTE_ENGINE_DISK_TYPE_STANDARD
            - COMPUTE_ENGINE_DISK_TYPE_SSD
            - COMPUTE_ENGINE_DISK_TYPE_BALANCED
          type: string
          description: The disk type to use in the VM.
          enumDescriptions:
            - An unspecified disk type. Will be used as STANDARD.
            - A Standard disk type.
            - SSD hard disk type.
            - An alternative to SSD persistent disks that balance performance and cost.
        machineType:
          type: string
          description: The machine type to create the VM with.
        zone:
          type: string
          description: The zone in which to create the VM.
        serviceAccount:
          type: string
          description: The service account to associate the VM with.
        licenseType:
          enumDescriptions:
            - The license type is the default for the OS.
            - The license type is Pay As You Go license type.
            - The license type is Bring Your Own License type.
          type: string
          description: The license type to use in OS adaptation.
          enum:
            - COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT
            - COMPUTE_ENGINE_LICENSE_TYPE_PAYG
            - COMPUTE_ENGINE_LICENSE_TYPE_BYOL
        vmName:
          type: string
          description: The name of the VM to create.
        bootOption:
          type: string
          description: 'The VM Boot Option, as set in the source VM.'
          enum:
            - COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED
            - COMPUTE_ENGINE_BOOT_OPTION_EFI
            - COMPUTE_ENGINE_BOOT_OPTION_BIOS
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is EFI.
            - The boot option is BIOS.
        hostname:
          description: The hostname to assign to the VM.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: The metadata key/value pairs to assign to the VM.
          type: object
        machineTypeSeries:
          type: string
          description: The machine type series to create the VM with.
        appliedLicense:
          description: The OS license returned from the adaptation module report.
          $ref: '#/components/schemas/AppliedLicense'
        additionalLicenses:
          description: Additional licenses to assign to the VM.
          type: array
          items:
            type: string
        labels:
          description: A map of labels to associate with the VM.
          type: object
          additionalProperties:
            type: string
        secureBoot:
          type: boolean
          description: Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.
        project:
          description: The Google Cloud target project ID or project name.
          type: string
        networkTags:
          type: array
          description: A list of network tags to associate with the VM.
          items:
            type: string
      type: object
      id: ComputeEngineTargetDetails
      description: ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.
    VmwareDiskDetails:
      type: object
      description: The details of a Vmware VM disk.
      properties:
        sizeGb:
          format: int64
          type: string
          description: Size in GB.
        diskNumber:
          description: The ordinal number of the disk.
          format: int32
          type: integer
        label:
          description: The disk label.
          type: string
      id: VmwareDiskDetails
    CycleStep:
      id: CycleStep
      properties:
        postProcessing:
          $ref: '#/components/schemas/PostProcessingStep'
          description: Post processing step.
        replicating:
          description: Replicating step.
          $ref: '#/components/schemas/ReplicatingStep'
        startTime:
          description: The time the cycle step has started.
          format: google-datetime
          type: string
        initializingReplication:
          $ref: '#/components/schemas/InitializingReplicationStep'
          description: Initializing replication step.
        endTime:
          type: string
          description: The time the cycle step has ended.
          format: google-datetime
      type: object
      description: CycleStep holds information about a step progress.
    SchedulePolicy:
      type: object
      description: A policy for scheduling replications.
      id: SchedulePolicy
      properties:
        idleDuration:
          description: The idle duration between replication stages.
          format: google-duration
          type: string
        skipOsAdaptation:
          type: boolean
          description: A flag to indicate whether to skip OS adaptation during the replication sync. OS adaptation is a process where the VM's operating system undergoes changes and adaptations to fully function on Compute Engine.
    TargetProject:
      id: TargetProject
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time this target project resource was created (not related to when the Compute Engine project it points to was created).
        project:
          type: string
          description: The target project ID (number) or project name.
        description:
          description: The target project's description.
          type: string
        name:
          readOnly: true
          description: Output only. The name of the target project.
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The last time the target project resource was updated.
          readOnly: true
      type: object
      description: TargetProject message represents a target Compute Engine project for a migration or a clone.
    VmUtilizationInfo:
      id: VmUtilizationInfo
      description: Utilization information of a single VM.
      properties:
        utilization:
          $ref: '#/components/schemas/VmUtilizationMetrics'
          description: Utilization metrics for this VM.
        vmId:
          description: The VM's ID in the source.
          type: string
        vmwareVmDetails:
          $ref: '#/components/schemas/VmwareVmDetails'
          description: The description of the VM in a Source of type Vmware.
      type: object
    ListOperationsResponse:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Operations.ListOperations.
      type: object
      id: ListOperationsResponse
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
      type: object
    LocalizedMessage:
      properties:
        locale:
          description: 'The locale used following the specification defined at https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: "en-US", "fr-CH", "es-MX"'
          type: string
        message:
          type: string
          description: The localized error message in the above locale.
      description: Provides a localized error message that is safe to return to the user which can be attached to an RPC error.
      id: LocalizedMessage
      type: object
    Operation:
      id: Operation
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        response:
          type: object
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
    UpgradeApplianceRequest:
      id: UpgradeApplianceRequest
      description: Request message for 'UpgradeAppliance' request.
      properties:
        requestId:
          type: string
          description: 'A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
      type: object
    Group:
      type: object
      id: Group
      properties:
        migrationTargetType:
          enum:
            - MIGRATION_TARGET_TYPE_UNSPECIFIED
            - MIGRATION_TARGET_TYPE_GCE
            - MIGRATION_TARGET_TYPE_DISKS
          type: string
          enumDescriptions:
            - Group type is not specified. This defaults to Compute Engine targets.
            - All MigratingVMs in the group must have Compute Engine targets.
            - All MigratingVMs in the group must have Compute Engine Disks targets.
          description: Immutable. The target type of this group.
        displayName:
          type: string
          description: Display name is a user defined name for this group which can be updated.
        createTime:
          description: Output only. The create time timestamp.
          type: string
          format: google-datetime
          readOnly: true
        updateTime:
          format: google-datetime
          description: Output only. The update time timestamp.
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
          description: Output only. The Group name.
        description:
          type: string
          description: User-provided description of the group.
      description: Describes message for 'Group' resource. The Group is a collections of several MigratingVms.
    ComputeEngineDisksTargetDetails:
      description: ComputeEngineDisksTargetDetails is a collection of created Persistent Disks details.
      id: ComputeEngineDisksTargetDetails
      properties:
        disks:
          description: The details of each created Persistent Disk.
          items:
            $ref: '#/components/schemas/PersistentDisk'
          type: array
      type: object
    CloneStep:
      properties:
        preparingVmDisks:
          $ref: '#/components/schemas/PreparingVMDisksStep'
          description: Preparing VM disks step.
        endTime:
          description: The time the step has ended.
          format: google-datetime
          type: string
        startTime:
          format: google-datetime
          description: The time the step has started.
          type: string
        adaptingOs:
          description: Adapting OS step.
          $ref: '#/components/schemas/AdaptingOSStep'
        instantiatingMigratedVm:
          description: Instantiating migrated VM step.
          $ref: '#/components/schemas/InstantiatingMigratedVMStep'
      id: CloneStep
      type: object
      description: CloneStep holds information about the clone step progress.
    AwsSourceVmDetails:
      type: object
      description: Represent the source AWS VM details.
      id: AwsSourceVmDetails
      properties:
        firmware:
          enumDescriptions:
            - The firmware is unknown.
            - The firmware is EFI.
            - The firmware is BIOS.
          description: The firmware type of the source VM.
          enum:
            - FIRMWARE_UNSPECIFIED
            - EFI
            - BIOS
          type: string
        disks:
          type: array
          items:
            $ref: '#/components/schemas/AwsDiskDetails'
          description: The disks attached to the source VM.
        committedStorageBytes:
          description: The total size of the disks being migrated in bytes.
          format: int64
          type: string
    PauseMigrationRequest:
      type: object
      properties: {}
      description: Request message for 'PauseMigration' request.
      id: PauseMigrationRequest
    AddGroupMigrationRequest:
      id: AddGroupMigrationRequest
      description: Request message for 'AddGroupMigration' request.
      type: object
      properties:
        migratingVm:
          description: The full path name of the MigratingVm to add.
          type: string
    CloneJob:
      type: object
      description: 'CloneJob describes the process of creating a clone of a MigratingVM to the requested target based on the latest successful uploaded snapshots. While the migration cycles of a MigratingVm take place, it is possible to verify the uploaded VM can be started in the cloud, by creating a clone. The clone can be created without any downtime, and it is created using the latest snapshots which are already in the cloud. The cloneJob is only responsible for its work, not its products, which means once it is finished, it will never touch the instance it created. It will only delete it in case of the CloneJob being cancelled or upon failure to clone.'
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: Output only. Provides details for the errors that led to the Clone Job's state.
          readOnly: true
        computeEngineTargetDetails:
          $ref: '#/components/schemas/ComputeEngineTargetDetails'
          readOnly: true
          description: Output only. Details of the target VM in Compute Engine.
        name:
          type: string
          description: Output only. The name of the clone.
          readOnly: true
        state:
          type: string
          enumDescriptions:
            - The state is unknown. This is used for API compatibility only and is not used by the system.
            - The clone job has not yet started.
            - The clone job is active and running.
            - The clone job finished with errors.
            - The clone job finished successfully.
            - The clone job was cancelled.
            - The clone job is being cancelled.
            - OS adaptation is running as part of the clone job to generate license.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
            - FAILED
            - SUCCEEDED
            - CANCELLED
            - CANCELLING
            - ADAPTING_OS
          readOnly: true
          description: Output only. State of the clone job.
        createTime:
          readOnly: true
          description: 'Output only. The time the clone job was created (as an API call, not when it was actually created in the target).'
          format: google-datetime
          type: string
        computeEngineDisksTargetDetails:
          $ref: '#/components/schemas/ComputeEngineDisksTargetDetails'
          readOnly: true
          description: Output only. Details of the target Persistent Disks in Compute Engine.
        stateTime:
          readOnly: true
          description: Output only. The time the state was last updated.
          format: google-datetime
          type: string
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the clone job was ended.
          type: string
        steps:
          items:
            $ref: '#/components/schemas/CloneStep'
          readOnly: true
          type: array
          description: Output only. The clone steps list representing its progress.
      id: CloneJob
    CutoverForecast:
      properties:
        estimatedCutoverJobDuration:
          readOnly: true
          format: google-duration
          type: string
          description: Output only. Estimation of the CutoverJob duration.
      description: CutoverForecast holds information about future CutoverJobs of a MigratingVm.
      type: object
      id: CutoverForecast
    PreparingVMDisksStep:
      type: object
      description: PreparingVMDisksStep contains specific step details.
      id: PreparingVMDisksStep
      properties: {}
    OperationMetadata:
      type: object
      description: Represents the metadata of the long-running operation.
      properties:
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
          readOnly: true
        requestedCancellation:
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          readOnly: true
          type: boolean
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        statusMessage:
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
      id: OperationMetadata
    ComputeScheduling:
      id: ComputeScheduling
      description: Scheduling information for VM on maintenance/restart behaviour and node allocation in sole tenant nodes.
      properties:
        onHostMaintenance:
          enumDescriptions:
            - 'An unknown, unexpected behavior.'
            - Terminate the instance when the host machine undergoes maintenance.
            - Migrate the instance when the host machine undergoes maintenance.
          description: How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance.
          enum:
            - ON_HOST_MAINTENANCE_UNSPECIFIED
            - TERMINATE
            - MIGRATE
          type: string
        nodeAffinities:
          description: A set of node affinity and anti-affinity configurations for sole tenant nodes.
          type: array
          items:
            $ref: '#/components/schemas/SchedulingNodeAffinity'
        restartType:
          enum:
            - RESTART_TYPE_UNSPECIFIED
            - AUTOMATIC_RESTART
            - NO_AUTOMATIC_RESTART
          description: Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user). This configuration is identical to `automaticRestart` field in Compute Engine create instance under scheduling. It was changed to an enum (instead of a boolean) to match the default value in Compute Engine which is automatic restart.
          enumDescriptions:
            - Unspecified behavior. This will use the default.
            - The Instance should be automatically restarted whenever it is terminated by Compute Engine.
            - The Instance isn't automatically restarted whenever it is terminated by Compute Engine.
          type: string
        minNodeCpus:
          type: integer
          format: int32
          description: The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node. Ignored if no node_affinites are configured.
      type: object
    CutoverJob:
      id: CutoverJob
      description: 'CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot.'
      properties:
        computeEngineDisksTargetDetails:
          description: Output only. Details of the target Persistent Disks in Compute Engine.
          readOnly: true
          $ref: '#/components/schemas/ComputeEngineDisksTargetDetails'
        error:
          readOnly: true
          description: Output only. Provides details for the errors that led to the Cutover Job's state.
          $ref: '#/components/schemas/Status'
        name:
          type: string
          readOnly: true
          description: Output only. The name of the cutover job.
        endTime:
          type: string
          description: Output only. The time the cutover job had finished.
          readOnly: true
          format: google-datetime
        state:
          type: string
          readOnly: true
          description: Output only. State of the cutover job.
          enumDescriptions:
            - The state is unknown. This is used for API compatibility only and is not used by the system.
            - The cutover job has not yet started.
            - The cutover job finished with errors.
            - The cutover job finished successfully.
            - The cutover job was cancelled.
            - The cutover job is being cancelled.
            - The cutover job is active and running.
            - OS adaptation is running as part of the cutover job to generate license.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - FAILED
            - SUCCEEDED
            - CANCELLED
            - CANCELLING
            - ACTIVE
            - ADAPTING_OS
        stateTime:
          type: string
          format: google-datetime
          description: Output only. The time the state was last updated.
          readOnly: true
        progressPercent:
          format: int32
          description: Output only. The current progress in percentage of the cutover job.
          readOnly: true
          type: integer
        computeEngineTargetDetails:
          readOnly: true
          description: Output only. Details of the target VM in Compute Engine.
          $ref: '#/components/schemas/ComputeEngineTargetDetails'
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: 'Output only. The time the cutover job was created (as an API call, not when it was actually created in the target).'
        stateMessage:
          type: string
          readOnly: true
          description: Output only. A message providing possible extra details about the current state.
        steps:
          description: Output only. The cutover steps list representing its progress.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CutoverStep'
      type: object
    AwsDiskDetails:
      properties:
        sizeGb:
          type: string
          format: int64
          description: Size in GB.
        diskNumber:
          format: int32
          description: The ordinal number of the disk.
          type: integer
        volumeId:
          description: AWS volume ID.
          type: string
      type: object
      id: AwsDiskDetails
      description: The details of an AWS instance disk.
    MigratingVm:
      type: object
      id: MigratingVm
      properties:
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The last time the migrating VM resource was updated.
          type: string
        policy:
          description: The replication schedule policy.
          $ref: '#/components/schemas/SchedulePolicy'
        description:
          description: The description attached to the migrating VM by the user.
          type: string
        cutoverForecast:
          readOnly: true
          $ref: '#/components/schemas/CutoverForecast'
          description: Output only. Provides details of future CutoverJobs of a MigratingVm. Set to empty when cutover forecast is unavailable.
        stateTime:
          format: google-datetime
          description: Output only. The last time the migrating VM state was updated.
          type: string
          readOnly: true
        recentCutoverJobs:
          description: 'Output only. The recent cutover jobs performed on the migrating VM. This field holds the vm''s last completed cutover job and the vm''s running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the "view" parameter of the Get/List request.'
          items:
            $ref: '#/components/schemas/CutoverJob'
          type: array
          readOnly: true
        lastReplicationCycle:
          description: Output only. Details of the last replication cycle. This will be updated whenever a replication cycle is finished and is not to be confused with last_sync which is only updated on successful replication cycles.
          $ref: '#/components/schemas/ReplicationCycle'
          readOnly: true
        awsSourceVmDetails:
          description: Output only. Details of the VM from an AWS source.
          readOnly: true
          $ref: '#/components/schemas/AwsSourceVmDetails'
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - READY
            - FIRST_SYNC
            - ACTIVE
            - CUTTING_OVER
            - CUTOVER
            - FINAL_SYNC
            - PAUSED
            - FINALIZING
            - FINALIZED
            - ERROR
          readOnly: true
          type: string
          enumDescriptions:
            - The state was not sampled by the health checks yet.
            - The VM in the source is being verified.
            - 'The source VM was verified, and it''s ready to start replication.'
            - Migration is going through the first sync cycle.
            - 'The replication is active, and it''s running or scheduled to run.'
            - 'The source VM is being turned off, and a final replication is currently running.'
            - The source VM was stopped and replicated. The replication is currently paused.
            - A cutover job is active and replication cycle is running the final sync.
            - The replication was paused by the user and no cycles are scheduled to run.
            - The migrating VM is being finalized and migration resources are being removed.
            - The replication process is done. The migrating VM is finalized and no longer consumes billable resources.
            - The replication process encountered an unrecoverable error and was aborted.
          description: Output only. State of the MigratingVm.
        currentSyncInfo:
          readOnly: true
          $ref: '#/components/schemas/ReplicationCycle'
          description: Output only. Details of the current running replication cycle.
        sourceVmId:
          description: 'The unique ID of the VM in the source. The VM''s name in vSphere can be changed, so this is not the VM''s name but rather its moRef id. This id is of the form vm-.'
          type: string
        computeEngineDisksTargetDefaults:
          $ref: '#/components/schemas/ComputeEngineDisksTargetDefaults'
          description: Details of the target Persistent Disks in Compute Engine.
        lastSync:
          description: Output only. The most updated snapshot created time in the source that finished replication.
          readOnly: true
          $ref: '#/components/schemas/ReplicationSync'
        createTime:
          readOnly: true
          description: Output only. The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).
          type: string
          format: google-datetime
        displayName:
          type: string
          description: The display name attached to the MigratingVm by the user.
        vmwareSourceVmDetails:
          description: Output only. Details of the VM from a Vmware source.
          $ref: '#/components/schemas/VmwareSourceVmDetails'
          readOnly: true
        labels:
          type: object
          additionalProperties:
            type: string
          description: The labels of the migrating VM.
        error:
          $ref: '#/components/schemas/Status'
          readOnly: true
          description: Output only. Provides details on the state of the Migrating VM in case of an error in replication.
        recentCloneJobs:
          items:
            $ref: '#/components/schemas/CloneJob'
          type: array
          description: 'Output only. The recent clone jobs performed on the migrating VM. This field holds the vm''s last completed clone job and the vm''s running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the "view" parameter of the Get/List request.'
          readOnly: true
        computeEngineTargetDefaults:
          description: Details of the target VM in Compute Engine.
          $ref: '#/components/schemas/ComputeEngineTargetDefaults'
        name:
          type: string
          readOnly: true
          description: Output only. The identifier of the MigratingVm.
        group:
          readOnly: true
          type: string
          description: 'Output only. The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.'
      description: MigratingVm describes the VM that will be migrated from a Source environment and its replication state.
    ListUtilizationReportsResponse:
      type: object
      properties:
        utilizationReports:
          description: Output only. The list of reports.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UtilizationReport'
        nextPageToken:
          readOnly: true
          type: string
          description: 'Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        unreachable:
          readOnly: true
          description: Output only. Locations that could not be reached.
          type: array
          items:
            type: string
      description: Response message for 'ListUtilizationReports' request.
      id: ListUtilizationReportsResponse
    RemoveGroupMigrationRequest:
      id: RemoveGroupMigrationRequest
      description: Request message for 'RemoveMigration' request.
      type: object
      properties:
        migratingVm:
          description: The MigratingVm to remove.
          type: string
    Empty:
      properties: {}
      id: Empty
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    AppliedLicense:
      type: object
      description: AppliedLicense holds the license data returned by adaptation module report.
      id: AppliedLicense
      properties:
        type:
          description: The license type that was used in OS adaptation.
          enum:
            - TYPE_UNSPECIFIED
            - NONE
            - PAYG
            - BYOL
          enumDescriptions:
            - Unspecified license for the OS.
            - No license available for the OS.
            - The license type is Pay As You Go license type.
            - The license type is Bring Your Own License type.
          type: string
        osLicense:
          description: The OS license returned from the adaptation module's report.
          type: string
    ComputeEngineDisksTargetDefaults:
      type: object
      id: ComputeEngineDisksTargetDefaults
      properties:
        zone:
          description: The zone in which to create the Persistent Disks.
          type: string
        targetProject:
          description: The full path of the resource of type TargetProject which represents the Compute Engine project in which to create the Persistent Disks.
          type: string
        disks:
          description: The details of each Persistent Disk to create.
          type: array
          items:
            $ref: '#/components/schemas/PersistentDiskDefaults'
      description: ComputeEngineDisksTargetDefaults is a collection of details for creating Persistent Disks in a target Compute Engine project.
    FetchInventoryResponse:
      description: Response message for fetchInventory.
      type: object
      properties:
        updateTime:
          readOnly: true
          description: Output only. The timestamp when the source was last queried (if the result is from the cache).
          type: string
          format: google-datetime
        awsVms:
          description: The description of the VMs in a Source of type AWS.
          $ref: '#/components/schemas/AwsVmsDetails'
        vmwareVms:
          $ref: '#/components/schemas/VmwareVmsDetails'
          description: The description of the VMs in a Source of type Vmware.
        nextPageToken:
          type: string
          readOnly: true
          description: 'Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      id: FetchInventoryResponse
    ShuttingDownSourceVMStep:
      description: ShuttingDownSourceVMStep contains specific step details.
      properties: {}
      type: object
      id: ShuttingDownSourceVMStep
    AwsSecurityGroup:
      type: object
      id: AwsSecurityGroup
      properties:
        name:
          description: The AWS security group name.
          type: string
        id:
          description: The AWS security group id.
          type: string
      description: AwsSecurityGroup describes a security group of an AWS VM.
    AccessKeyCredentials:
      description: Message describing AWS Credentials using access key id and secret.
      id: AccessKeyCredentials
      properties:
        secretAccessKey:
          description: Input only. AWS secret access key.
          type: string
        sessionToken:
          description: Input only. AWS session token. Used only when AWS security token service (STS) is responsible for creating the temporary credentials.
          type: string
        accessKeyId:
          description: AWS access key ID.
          type: string
      type: object
    Status:
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
      id: Status
    CancelOperationRequest:
      type: object
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
      properties: {}
    ListGroupsResponse:
      description: Response message for 'ListGroups' request.
      properties:
        nextPageToken:
          type: string
          readOnly: true
          description: 'Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        groups:
          type: array
          readOnly: true
          description: Output only. The list of groups response.
          items:
            $ref: '#/components/schemas/Group'
        unreachable:
          description: Output only. Locations that could not be reached.
          readOnly: true
          type: array
          items:
            type: string
      type: object
      id: ListGroupsResponse
    ListCutoverJobsResponse:
      type: object
      description: Response message for 'ListCutoverJobs' request.
      id: ListCutoverJobsResponse
      properties:
        nextPageToken:
          type: string
          readOnly: true
          description: 'Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        cutoverJobs:
          description: Output only. The list of cutover jobs response.
          items:
            $ref: '#/components/schemas/CutoverJob'
          readOnly: true
          type: array
        unreachable:
          readOnly: true
          type: array
          items:
            type: string
          description: Output only. Locations that could not be reached.
    ApplianceVersion:
      id: ApplianceVersion
      type: object
      properties:
        version:
          description: The appliance version.
          type: string
        uri:
          description: A link for downloading the version.
          type: string
        critical:
          type: boolean
          description: Determine whether it's critical to upgrade the appliance to this version.
        releaseNotesUri:
          description: Link to a page that contains the version release notes.
          type: string
      description: Describes an appliance version.
    InitializingReplicationStep:
      description: InitializingReplicationStep contains specific step details.
      id: InitializingReplicationStep
      type: object
      properties: {}
    ListMigratingVmsResponse:
      description: Response message for 'ListMigratingVms' request.
      type: object
      id: ListMigratingVmsResponse
      properties:
        unreachable:
          readOnly: true
          type: array
          description: Output only. Locations that could not be reached.
          items:
            type: string
        migratingVms:
          description: Output only. The list of Migrating VMs response.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MigratingVm'
        nextPageToken:
          description: 'Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          readOnly: true
          type: string
    UpgradeStatus:
      id: UpgradeStatus
      type: object
      description: UpgradeStatus contains information about upgradeAppliance operation.
      properties:
        previousVersion:
          description: The version from which we upgraded.
          type: string
        error:
          $ref: '#/components/schemas/Status'
          description: Provides details on the state of the upgrade operation in case of an error.
        version:
          description: The version to upgrade to.
          type: string
        startTime:
          format: google-datetime
          description: The time the operation was started.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - FAILED
            - SUCCEEDED
          enumDescriptions:
            - The state was not sampled by the health checks yet.
            - The upgrade has started.
            - The upgrade failed.
            - The upgrade finished successfully.
          description: The state of the upgradeAppliance operation.
          type: string
    Link:
      properties:
        description:
          description: Describes what the link offers.
          type: string
        url:
          type: string
          description: The URL of the link.
      id: Link
      type: object
      description: Describes a URL link.
    PostProcessingStep:
      properties: {}
      description: PostProcessingStep contains specific step details.
      id: PostProcessingStep
      type: object
    CancelCloneJobRequest:
      properties: {}
      id: CancelCloneJobRequest
      description: Request message for 'CancelCloneJob' request.
      type: object
    InstantiatingMigratedVMStep:
      id: InstantiatingMigratedVMStep
      type: object
      description: InstantiatingMigratedVMStep contains specific step details.
      properties: {}
    AvailableUpdates:
      id: AvailableUpdates
      description: Holds informatiom about the available versions for upgrade.
      properties:
        inPlaceUpdate:
          description: The latest version for in place update. The current appliance can be updated to this version using the API or m4c CLI.
          $ref: '#/components/schemas/ApplianceVersion'
        newDeployableAppliance:
          description: 'The newest deployable version of the appliance. The current appliance can''t be updated into this version, and the owner must manually deploy this OVA to a new appliance.'
          $ref: '#/components/schemas/ApplianceVersion'
      type: object
    VmwareSourceVmDetails:
      properties:
        committedStorageBytes:
          format: int64
          description: The total size of the disks being migrated in bytes.
          type: string
        firmware:
          description: The firmware type of the source VM.
          enumDescriptions:
            - The firmware is unknown.
            - The firmware is EFI.
            - The firmware is BIOS.
          enum:
            - FIRMWARE_UNSPECIFIED
            - EFI
            - BIOS
          type: string
        disks:
          items:
            $ref: '#/components/schemas/VmwareDiskDetails'
          description: The disks attached to the source VM.
          type: array
      description: Represent the source Vmware VM details.
      id: VmwareSourceVmDetails
      type: object
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
  x-stackQL-resources:
    groups:
      id: google.vmmigration.groups
      name: groups
      title: Groups
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.groups
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
    groups_group_migration:
      id: google.vmmigration.groups_group_migration
      name: groups_group_migration
      title: Groups Group Migration
      methods:
        remove_group_migration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:removeGroupMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_group_migration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:addGroupMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    target_projects:
      id: google.vmmigration.target_projects
      name: target_projects
      title: Target Projects
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.targetProjects
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects~1{targetProjectsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects~1{targetProjectsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1targetProjects~1{targetProjectsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/target_projects/methods/get'
          - $ref: '#/components/x-stackQL-resources/target_projects/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/target_projects/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/target_projects/methods/delete'
    operations:
      id: google.vmmigration.operations
      name: operations
      title: Operations
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    datacenter_connectors:
      id: google.vmmigration.datacenter_connectors
      name: datacenter_connectors
      title: Datacenter Connectors
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors~1{datacenterConnectorsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors~1{datacenterConnectorsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.datacenterConnectors
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade_appliance:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1datacenterConnectors~1{datacenterConnectorsId}:upgradeAppliance/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datacenter_connectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/datacenter_connectors/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/datacenter_connectors/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datacenter_connectors/methods/delete'
    utilization_reports:
      id: google.vmmigration.utilization_reports
      name: utilization_reports
      title: Utilization Reports
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1utilizationReports~1{utilizationReportsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1utilizationReports~1{utilizationReportsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1utilizationReports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1utilizationReports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.utilizationReports
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1utilizationReports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/utilization_reports/methods/get'
          - $ref: '#/components/x-stackQL-resources/utilization_reports/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/utilization_reports/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/utilization_reports/methods/delete'
    clone_jobs:
      id: google.vmmigration.clone_jobs
      name: clone_jobs
      title: Clone Jobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cloneJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.cloneJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cloneJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cloneJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cloneJobs~1{cloneJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cloneJobs~1{cloneJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clone_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/clone_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clone_jobs/methods/create'
        update: []
        delete: []
    cutover_jobs:
      id: google.vmmigration.cutover_jobs
      name: cutover_jobs
      title: Cutover Jobs
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cutoverJobs~1{cutoverJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cutoverJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.cutoverJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cutoverJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cutoverJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1cutoverJobs~1{cutoverJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cutover_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/cutover_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/cutover_jobs/methods/create'
        update: []
        delete: []
    replication_cycles:
      id: google.vmmigration.replication_cycles
      name: replication_cycles
      title: Replication Cycles
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1replicationCycles~1{replicationCyclesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1replicationCycles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.replicationCycles
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}~1replicationCycles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replication_cycles/methods/get'
          - $ref: '#/components/x-stackQL-resources/replication_cycles/methods/list'
        insert: []
        update: []
        delete: []
    migrating_vms:
      id: google.vmmigration.migrating_vms
      name: migrating_vms
      title: Migrating Vms
      methods:
        resume_migration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}:resumeMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_migration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}:startMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.migratingVms
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        finalize_migration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}:finalizeMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pause_migration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1migratingVms~1{migratingVmsId}:pauseMigration/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/migrating_vms/methods/get'
          - $ref: '#/components/x-stackQL-resources/migrating_vms/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/migrating_vms/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/migrating_vms/methods/delete'
    sources:
      id: google.vmmigration.sources
      name: sources
      title: Sources
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sources
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sources/methods/get'
          - $ref: '#/components/x-stackQL-resources/sources/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sources/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sources/methods/delete'
    sources_inventory:
      id: google.vmmigration.sources_inventory
      name: sources_inventory
      title: Sources Inventory
      methods:
        fetch_inventory:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}:fetchInventory/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    locations:
      id: google.vmmigration.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/groups':
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Lists Groups in a given project and location.
      operationId: vmmigration.projects.locations.groups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: groups
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.groups
    post:
      description: Creates a new Group in a given project and location.
      operationId: vmmigration.projects.locations.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single Group.
      operationId: vmmigration.projects.locations.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Group.
      operationId: vmmigration.projects.locations.groups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a single Group.
      operationId: vmmigration.projects.locations.groups.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeGroupMigration':
    parameters: *ref_1
    post:
      description: Removes a MigratingVm from a Group.
      operationId: vmmigration.projects.locations.groups.removeGroupMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveGroupMigrationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_group_migration
      x-stackQL-method: remove_group_migration
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addGroupMigration':
    parameters: *ref_1
    post:
      description: Adds a MigratingVm to a Group.
      operationId: vmmigration.projects.locations.groups.addGroupMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupMigrationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_group_migration
      x-stackQL-method: add_group_migration
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/targetProjects':
    parameters: *ref_1
    get:
      description: 'Lists TargetProjects in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.'
      operationId: vmmigration.projects.locations.targetProjects.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetProjectsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.targetProjects
    post:
      description: 'Creates a new TargetProject in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.'
      operationId: vmmigration.projects.locations.targetProjects.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetProject'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: targetProjectId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}':
    parameters: *ref_1
    patch:
      description: 'Updates the parameters of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.'
      operationId: vmmigration.projects.locations.targetProjects.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetProject'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetProjectsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: 'Gets details of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.'
      operationId: vmmigration.projects.locations.targetProjects.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetProject'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetProjectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: 'Deletes a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.'
      operationId: vmmigration.projects.locations.targetProjects.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetProjectsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: vmmigration.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vmmigration.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: vmmigration.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: vmmigration.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single DatacenterConnector.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacenterConnector'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: datacenterConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a single DatacenterConnector.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: datacenterConnectorsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors':
    parameters: *ref_1
    post:
      description: Creates a new DatacenterConnector in a given Source.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatacenterConnector'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: datacenterConnectorId
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists DatacenterConnectors in a given Source.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatacenterConnectorsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.datacenterConnectors
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}:upgradeAppliance':
    parameters: *ref_1
    post:
      description: Upgrades the appliance relate to this DatacenterConnector to the in-place updateable version.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.upgradeAppliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeApplianceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: datacenterConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-method: upgrade_appliance
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}':
    parameters: *ref_1
    get:
      description: Gets a single Utilization Report.
      operationId: vmmigration.projects.locations.sources.utilizationReports.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilizationReport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: utilizationReportsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a single Utilization Report.
      operationId: vmmigration.projects.locations.sources.utilizationReports.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: utilizationReportsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports':
    parameters: *ref_1
    post:
      description: Creates a new UtilizationReport.
      operationId: vmmigration.projects.locations.sources.utilizationReports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilizationReport'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: utilizationReportId
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Utilization Reports of the given Source.
      operationId: vmmigration.projects.locations.sources.utilizationReports.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUtilizationReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: utilization_reports
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.utilizationReports
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs':
    parameters: *ref_1
    get:
      description: Lists CloneJobs of a given migrating VM.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCloneJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.cloneJobs
    post:
      description: Initiates a Clone of a specific migrating VM.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: cloneJobId
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single CloneJob.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloneJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cloneJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}:cancel':
    parameters: *ref_1
    post:
      description: Initiates the cancellation of a running clone job.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelCloneJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cloneJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single CutoverJob.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutoverJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cutoverJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: cutover_jobs
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs':
    parameters: *ref_1
    get:
      description: Lists CutoverJobs of a given migrating VM.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCutoverJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: cutover_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.cutoverJobs
    post:
      description: Initiates a Cutover of a specific migrating VM. The returned LRO is completed when the cutover job resource is created and the job is initiated.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CutoverJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: cutoverJobId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: cutover_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}:cancel':
    parameters: *ref_1
    post:
      description: Initiates the cancellation of a running cutover job.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelCutoverJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cutoverJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: cutover_jobs
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles/{replicationCyclesId}':
    parameters: *ref_1
    get:
      description: Gets details of a single ReplicationCycle.
      operationId: vmmigration.projects.locations.sources.migratingVms.replicationCycles.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationCycle'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: replicationCyclesId
          required: true
          schema:
            type: string
      x-stackQL-resource: replication_cycles
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles':
    parameters: *ref_1
    get:
      description: Lists ReplicationCycles in a given MigratingVM.
      operationId: vmmigration.projects.locations.sources.migratingVms.replicationCycles.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReplicationCyclesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: replication_cycles
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.replicationCycles
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:resumeMigration':
    parameters: *ref_1
    post:
      description: 'Resumes a migration for a VM. When called on a paused migration, will start the process of uploading data and creating snapshots; when called on a completed cut-over migration, will update the migration to active state and start the process of uploading data and creating snapshots.'
      operationId: vmmigration.projects.locations.sources.migratingVms.resumeMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeMigrationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-method: resume_migration
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single MigratingVm.
      operationId: vmmigration.projects.locations.sources.migratingVms.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigratingVm'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single MigratingVm.
      operationId: vmmigration.projects.locations.sources.migratingVms.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single MigratingVm.
      operationId: vmmigration.projects.locations.sources.migratingVms.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigratingVm'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:startMigration':
    parameters: *ref_1
    post:
      description: 'Starts migration for a VM. Starts the process of uploading data and creating snapshots, in replication cycles scheduled by the policy.'
      operationId: vmmigration.projects.locations.sources.migratingVms.startMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMigrationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-method: start_migration
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms':
    parameters: *ref_1
    get:
      description: Lists MigratingVms in a given Source.
      operationId: vmmigration.projects.locations.sources.migratingVms.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMigratingVmsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: migrating_vms
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.migratingVms
    post:
      description: Creates a new MigratingVm in a given Source.
      operationId: vmmigration.projects.locations.sources.migratingVms.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigratingVm'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: migratingVmId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:finalizeMigration':
    parameters: *ref_1
    post:
      description: 'Marks a migration as completed, deleting migration resources that are no longer being used. Only applicable after cutover is done.'
      operationId: vmmigration.projects.locations.sources.migratingVms.finalizeMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinalizeMigrationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-method: finalize_migration
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:pauseMigration':
    parameters: *ref_1
    post:
      description: 'Pauses a migration for a VM. If cycle tasks are running they will be cancelled, preserving source task data. Further replication cycles will not be triggered while the VM is paused.'
      operationId: vmmigration.projects.locations.sources.migratingVms.pauseMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseMigrationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-method: pause_migration
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sources':
    parameters: *ref_1
    post:
      description: Creates a new Source in a given project and location.
      operationId: vmmigration.projects.locations.sources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sourceId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Sources in a given project and location.
      operationId: vmmigration.projects.locations.sources.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.sources
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}:fetchInventory':
    parameters: *ref_1
    get:
      description: 'List remote source''s inventory of VMs. The remote source is the onprem vCenter (remote in the sense it''s not in Compute Engine). The inventory describes the list of existing VMs in that source. Note that this operation lists the VMs on the remote source, as opposed to listing the MigratingVms resources in the vmmigration service.'
      operationId: vmmigration.projects.locations.sources.fetchInventory
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchInventoryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: forceRefresh
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: sources_inventory
      x-stackQL-method: fetch_inventory
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}':
    parameters: *ref_1
    delete:
      description: Deletes a single Source.
      operationId: vmmigration.projects.locations.sources.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single Source.
      operationId: vmmigration.projects.locations.sources.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single Source.
      operationId: vmmigration.projects.locations.sources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: vmmigration.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: vmmigration.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
