openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Analytics Hub API
  description: Exchange data and analytics assets securely and efficiently.
  version: v1
  x-discovery-doc-revision: '20230808'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://cloud.google.com/bigquery/docs/analytics-hub-introduction'
servers:
  - url: 'https://analyticshub.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/bigquery': View and manage your data in Google BigQuery and see the email address for your Google Account
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ListSharedResourceSubscriptionsResponse:
      type: object
      description: Message for response to the listing of shared resource subscriptions.
      id: ListSharedResourceSubscriptionsResponse
      properties:
        nextPageToken:
          description: Next page token.
          type: string
        sharedResourceSubscriptions:
          description: The list of subscriptions.
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
    SubscribeListingRequest:
      type: object
      properties:
        destinationDataset:
          description: BigQuery destination dataset to create for the subscriber.
          $ref: '#/components/schemas/DestinationDataset'
      description: Message for subscribing to a listing.
      id: SubscribeListingRequest
    DataExchange:
      properties:
        documentation:
          type: string
          description: Optional. Documentation describing the data exchange.
        icon:
          description: 'Optional. Base64 encoded image representing the data exchange. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the content of the fields are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire.'
          format: byte
          type: string
        name:
          type: string
          description: Output only. The resource name of the data exchange. e.g. `projects/myproject/locations/US/dataExchanges/123`.
          readOnly: true
        description:
          description: 'Optional. Description of the data exchange. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes.'
          type: string
        sharingEnvironmentConfig:
          description: Required. Configurable data sharing environment option for a data exchange.
          $ref: '#/components/schemas/SharingEnvironmentConfig'
        displayName:
          description: 'Required. Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&) and must not start or end with spaces. Default value is an empty string. Max length: 63 bytes.'
          type: string
        primaryContact:
          description: 'Optional. Email or URL of the primary point of contact of the data exchange. Max Length: 1000 bytes.'
          type: string
        listingCount:
          readOnly: true
          type: integer
          description: Output only. Number of listings contained in the data exchange.
          format: int32
      description: 'A data exchange is a container that lets you share data. Along with the descriptive information about the data exchange, it contains listings that reference shared datasets.'
      id: DataExchange
      type: object
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      id: AuditConfig
      type: object
      properties:
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
          type: array
    SubscribeDataExchangeResponse:
      id: SubscribeDataExchangeResponse
      properties:
        subscription:
          description: Subscription object created from this subscribe action.
          $ref: '#/components/schemas/Subscription'
      type: object
      description: Message for response when you subscribe to a Data Exchange.
    Empty:
      type: object
      properties: {}
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      type: object
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          items:
            type: string
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          type: array
    SubscribeDataExchangeRequest:
      id: SubscribeDataExchangeRequest
      description: Message for subscribing to a Data Exchange.
      properties:
        subscriberContact:
          description: Email of the subscriber.
          type: string
        destination:
          type: string
          description: Required. The parent resource path of the Subscription. e.g. `projects/subscriberproject/locations/US`
        subscription:
          type: string
          description: Required. Name of the subscription to create. e.g. `subscription1`
      type: object
    ListListingsResponse:
      type: object
      description: Message for response to the list of Listings.
      id: ListListingsResponse
      properties:
        listings:
          type: array
          items:
            $ref: '#/components/schemas/Listing'
          description: The list of Listing.
        nextPageToken:
          description: A token to request the next page of results.
          type: string
    BigQueryDatasetSource:
      id: BigQueryDatasetSource
      properties:
        dataset:
          type: string
          description: Resource name of the dataset source for this listing. e.g. `projects/myproject/datasets/123`
      description: 'A reference to a shared dataset. It is an existing BigQuery dataset with a collection of objects such as tables and views that you want to share with subscribers. When subscriber''s subscribe to a listing, Analytics Hub creates a linked dataset in the subscriber''s project. A Linked dataset is an opaque, read-only BigQuery dataset that serves as a _symbolic link_ to a shared dataset.'
      type: object
    SharingEnvironmentConfig:
      id: SharingEnvironmentConfig
      properties:
        defaultExchangeConfig:
          $ref: '#/components/schemas/DefaultExchangeConfig'
          description: 'Default Analytics Hub data exchange, used for secured data sharing.'
        dcrExchangeConfig:
          $ref: '#/components/schemas/DcrExchangeConfig'
          description: 'Data Clean Room (DCR), used for privacy-safe and secured data sharing.'
      description: Sharing environment is a behavior model for sharing data within a data exchange. This option is configurable for a data exchange.
      type: object
    ListSubscriptionsResponse:
      type: object
      description: Message for response to the listing of subscriptions.
      id: ListSubscriptionsResponse
      properties:
        subscriptions:
          description: The list of subscriptions.
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
        nextPageToken:
          description: Next page token.
          type: string
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      properties:
        updateMask:
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      type: object
      id: GetPolicyOptions
      properties:
        requestedPolicyVersion:
          type: integer
          format: int32
          description: 'Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
    RevokeSubscriptionRequest:
      properties: {}
      type: object
      description: Message for revoking a subscription.
      id: RevokeSubscriptionRequest
    DestinationDatasetReference:
      properties:
        projectId:
          description: Required. The ID of the project containing this dataset.
          type: string
        datasetId:
          type: string
          description: 'Required. A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.'
      id: DestinationDatasetReference
      type: object
      description: Contains the reference that identifies a destination bigquery dataset.
    DestinationDataset:
      type: object
      description: Defines the destination bigquery dataset.
      id: DestinationDataset
      properties:
        labels:
          additionalProperties:
            type: string
          description: 'Optional. The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See https://cloud.google.com/resource-manager/docs/creating-managing-labels for more information.'
          type: object
        description:
          description: Optional. A user-friendly description of the dataset.
          type: string
        location:
          description: 'Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations.'
          type: string
        datasetReference:
          description: Required. A reference that identifies the destination dataset.
          $ref: '#/components/schemas/DestinationDatasetReference'
        friendlyName:
          description: Optional. A descriptive name for the dataset.
          type: string
    Policy:
      properties:
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
        version:
          format: int32
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
        etag:
          type: string
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      id: Policy
      type: object
    ListDataExchangesResponse:
      properties:
        nextPageToken:
          description: A token to request the next page of results.
          type: string
        dataExchanges:
          description: The list of data exchanges.
          type: array
          items:
            $ref: '#/components/schemas/DataExchange'
      type: object
      id: ListDataExchangesResponse
      description: Message for response to the list of data exchanges.
    RefreshSubscriptionResponse:
      type: object
      description: Message for response when you refresh a subscription.
      id: RefreshSubscriptionResponse
      properties:
        subscription:
          $ref: '#/components/schemas/Subscription'
          description: The refreshed subscription resource.
    ListOrgDataExchangesResponse:
      description: Message for response to listing data exchanges in an organization and location.
      id: ListOrgDataExchangesResponse
      type: object
      properties:
        nextPageToken:
          description: A token to request the next page of results.
          type: string
        dataExchanges:
          items:
            $ref: '#/components/schemas/DataExchange'
          description: The list of data exchanges.
          type: array
    LinkedResource:
      properties:
        linkedDataset:
          description: 'Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linked_dataset'
          readOnly: true
          type: string
      id: LinkedResource
      description: Reference to a linked resource tracked by this Subscription.
      type: object
    GetIamPolicyRequest:
      type: object
      id: GetIamPolicyRequest
      properties:
        options:
          $ref: '#/components/schemas/GetPolicyOptions'
          description: 'OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.'
      description: Request message for `GetIamPolicy` method.
    DcrExchangeConfig:
      properties: {}
      type: object
      description: 'Data Clean Room (DCR), used for privacy-safe and secured data sharing.'
      id: DcrExchangeConfig
    DefaultExchangeConfig:
      description: 'Default Analytics Hub data exchange, used for secured data sharing.'
      properties: {}
      id: DefaultExchangeConfig
      type: object
    RestrictedExportConfig:
      properties:
        restrictDirectTableAccess:
          readOnly: true
          description: 'Output only. If true, restrict direct table access(read api/tabledata.list) on linked table.'
          type: boolean
        enabled:
          description: 'Optional. If true, enable restricted export.'
          type: boolean
        restrictQueryResult:
          description: 'Optional. If true, restrict export of query result derived from restricted linked dataset table.'
          type: boolean
      description: 'Restricted export config, used to configure restricted export on linked dataset.'
      id: RestrictedExportConfig
      type: object
    Status:
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
          format: int32
      id: Status
    Operation:
      id: Operation
      type: object
      properties:
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      description: This resource represents a long-running operation that is the result of a network API call.
    RevokeSubscriptionResponse:
      type: object
      id: RevokeSubscriptionResponse
      properties: {}
      description: Message for response when you revoke a subscription.
    Expr:
      id: Expr
      properties:
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
    RefreshSubscriptionRequest:
      description: Message for refreshing a subscription.
      type: object
      properties: {}
      id: RefreshSubscriptionRequest
    Listing:
      type: object
      properties:
        restrictedExportConfig:
          $ref: '#/components/schemas/RestrictedExportConfig'
          description: 'Optional. If set, restricted export configuration will be propagated and enforced on the linked dataset.'
        bigqueryDataset:
          $ref: '#/components/schemas/BigQueryDatasetSource'
          description: Required. Shared dataset i.e. BigQuery dataset source.
        description:
          type: string
          description: 'Optional. Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes.'
        dataProvider:
          description: Optional. Details of the data provider who owns the source data.
          $ref: '#/components/schemas/DataProvider'
        state:
          description: Output only. Current state of the listing.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
          enumDescriptions:
            - Default value. This value is unused.
            - Subscribable state. Users with dataexchange.listings.subscribe permission can subscribe to this listing.
          type: string
        icon:
          format: byte
          type: string
          description: 'Optional. Base64 encoded image representing the listing. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the contents of the field are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire.'
        publisher:
          $ref: '#/components/schemas/Publisher'
          description: Optional. Details of the publisher who owns the listing and who can share the source data.
        categories:
          description: Optional. Categories of the listing. Up to two categories are allowed.
          type: array
          items:
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
            enum:
              - CATEGORY_UNSPECIFIED
              - CATEGORY_OTHERS
              - CATEGORY_ADVERTISING_AND_MARKETING
              - CATEGORY_COMMERCE
              - CATEGORY_CLIMATE_AND_ENVIRONMENT
              - CATEGORY_DEMOGRAPHICS
              - CATEGORY_ECONOMICS
              - CATEGORY_EDUCATION
              - CATEGORY_ENERGY
              - CATEGORY_FINANCIAL
              - CATEGORY_GAMING
              - CATEGORY_GEOSPATIAL
              - CATEGORY_HEALTHCARE_AND_LIFE_SCIENCE
              - CATEGORY_MEDIA
              - CATEGORY_PUBLIC_SECTOR
              - CATEGORY_RETAIL
              - CATEGORY_SPORTS
              - CATEGORY_SCIENCE_AND_RESEARCH
              - CATEGORY_TRANSPORTATION_AND_LOGISTICS
              - CATEGORY_TRAVEL_AND_TOURISM
        primaryContact:
          type: string
          description: 'Optional. Email or URL of the primary point of contact of the listing. Max Length: 1000 bytes.'
        documentation:
          type: string
          description: Optional. Documentation describing the listing.
        requestAccess:
          type: string
          description: 'Optional. Email or URL of the request access of the listing. Subscribers can use this reference to request access. Max Length: 1000 bytes.'
        name:
          readOnly: true
          description: Output only. The resource name of the listing. e.g. `projects/myproject/locations/US/dataExchanges/123/listings/456`
          type: string
        displayName:
          description: 'Required. Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&) and can''t start or end with spaces. Default value is an empty string. Max length: 63 bytes.'
          type: string
      id: Listing
      description: A listing is what gets published into a data exchange that a subscriber can subscribe to. It contains a reference to the data source along with descriptive information that will help subscribers find and subscribe the data.
    OperationMetadata:
      id: OperationMetadata
      properties:
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
        cancelRequested:
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          type: boolean
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        statusDetail:
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
      type: object
      description: Represents the metadata of the long-running operation.
    Binding:
      id: Binding
      type: object
      description: 'Associates `members`, or principals, with a `role`.'
      properties:
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
        members:
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          type: array
          items:
            type: string
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
    TestIamPermissionsResponse:
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          type: array
          items:
            type: string
      description: Response message for `TestIamPermissions` method.
      type: object
      id: TestIamPermissionsResponse
    Publisher:
      id: Publisher
      description: Contains details of the listing publisher.
      properties:
        name:
          description: Optional. Name of the listing publisher.
          type: string
        primaryContact:
          description: 'Optional. Email or URL of the listing publisher. Max Length: 1000 bytes.'
          type: string
      type: object
    Subscription:
      properties:
        name:
          description: Output only. The resource name of the subscription. e.g. `projects/myproject/locations/US/subscriptions/123`.
          readOnly: true
          type: string
        creationTime:
          type: string
          format: google-datetime
          description: Output only. Timestamp when the subscription was created.
          readOnly: true
        listing:
          description: Output only. Resource name of the source Listing. e.g. projects/123/locations/US/dataExchanges/456/listings/789
          readOnly: true
          type: string
        dataExchange:
          type: string
          description: Output only. Resource name of the source Data Exchange. e.g. projects/123/locations/US/dataExchanges/456
          readOnly: true
        lastModifyTime:
          type: string
          description: Output only. Timestamp when the subscription was last modified.
          readOnly: true
          format: google-datetime
        linkedDatasetMap:
          additionalProperties:
            $ref: '#/components/schemas/LinkedResource'
          description: 'Output only. Map of listing resource names to associated linked resource, e.g. projects/123/locations/US/dataExchanges/456/listings/789 -> projects/123/datasets/my_dataset For listing-level subscriptions, this is a map of size 1. Only contains values if state == STATE_ACTIVE.'
          readOnly: true
          type: object
        state:
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - This subscription is active and the data is accessible.
            - The data referenced by this subscription is out of date and should be refreshed. This can happen when a data provider adds or removes datasets.
            - This subscription has been cancelled or revoked and the data is no longer accessible.
          enum:
            - STATE_UNSPECIFIED
            - STATE_ACTIVE
            - STATE_STALE
            - STATE_INACTIVE
          description: Output only. Current state of the subscription.
          readOnly: true
        organizationId:
          description: Output only. Organization of the project this subscription belongs to.
          type: string
          readOnly: true
        organizationDisplayName:
          type: string
          description: Output only. Display name of the project of this subscription.
          readOnly: true
        subscriberContact:
          description: Output only. Email of the subscriber.
          readOnly: true
          type: string
      description: 'A subscription represents a subscribers'' access to a particular set of published data. It contains references to associated listings, data exchanges, and linked datasets. TODO(b/267528977) Consider port the new resource to v1beta1 and dataexchange APIs.'
      id: Subscription
      type: object
    SubscribeListingResponse:
      id: SubscribeListingResponse
      properties:
        subscription:
          $ref: '#/components/schemas/Subscription'
          description: Subscription object created from this subscribe action.
      description: Message for response when you subscribe to a listing.
      type: object
    DataProvider:
      description: Contains details of the data provider.
      type: object
      id: DataProvider
      properties:
        primaryContact:
          type: string
          description: 'Optional. Email or URL of the data provider. Max Length: 1000 bytes.'
        name:
          type: string
          description: Optional. Name of the data provider.
    AuditLogConfig:
      type: object
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
        logType:
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          description: The log type that this config enables.
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      id: AuditLogConfig
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  x-stackQL-resources:
    subscriptions:
      id: google.analyticshub.subscriptions
      name: subscriptions
      title: Subscriptions
      methods:
        projects_locations_subscriptions_revoke:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}:revoke/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.subscriptions
        _projects_locations_subscriptions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_refresh:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}:refresh/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/projects_locations_subscriptions_list'
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/projects_locations_subscriptions_get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/projects_locations_subscriptions_delete'
    data_exchanges:
      id: google.analyticshub.data_exchanges
      name: data_exchanges
      title: Data Exchanges
      methods:
        projects_locations_data_exchanges_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataExchanges
        _projects_locations_data_exchanges_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_subscribe:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:subscribe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_data_exchanges_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1dataExchanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataExchanges
        _organizations_locations_data_exchanges_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1dataExchanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_get'
          - $ref: '#/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_list'
          - $ref: '#/components/x-stackQL-resources/data_exchanges/methods/organizations_locations_data_exchanges_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_delete'
    data_exchanges_iam_policies:
      id: google.analyticshub.data_exchanges_iam_policies
      name: data_exchanges_iam_policies
      title: Data Exchanges Iam Policies
      methods:
        projects_locations_data_exchanges_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_exchanges_iam_policies/methods/projects_locations_data_exchanges_get_iam_policy'
        insert: []
        update: []
        delete: []
    data_exchanges_subscriptions:
      id: google.analyticshub.data_exchanges_subscriptions
      name: data_exchanges_subscriptions
      title: Data Exchanges Subscriptions
      methods:
        projects_locations_data_exchanges_list_subscriptions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:listSubscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sharedResourceSubscriptions
        _projects_locations_data_exchanges_list_subscriptions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:listSubscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_exchanges_subscriptions/methods/projects_locations_data_exchanges_list_subscriptions'
        insert: []
        update: []
        delete: []
    listings:
      id: google.analyticshub.listings
      name: listings
      title: Listings
      methods:
        projects_locations_data_exchanges_listings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.listings
        _projects_locations_data_exchanges_listings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_subscribe:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:subscribe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_list'
          - $ref: '#/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_delete'
    listings_subscriptions:
      id: google.analyticshub.listings_subscriptions
      name: listings_subscriptions
      title: Listings Subscriptions
      methods:
        projects_locations_data_exchanges_listings_list_subscriptions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:listSubscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sharedResourceSubscriptions
        _projects_locations_data_exchanges_listings_list_subscriptions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:listSubscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/listings_subscriptions/methods/projects_locations_data_exchanges_listings_list_subscriptions'
        insert: []
        update: []
        delete: []
    listings_iam_policies:
      id: google.analyticshub.listings_iam_policies
      name: listings_iam_policies
      title: Listings Iam Policies
      methods:
        projects_locations_data_exchanges_listings_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/listings_iam_policies/methods/projects_locations_data_exchanges_listings_get_iam_policy'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:revoke':
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
    post:
      description: Revokes a given subscription.
      operationId: analyticshub.projects.locations.subscriptions.revoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSubscriptionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeSubscriptionResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: projects_locations_subscriptions_revoke
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/subscriptions':
    parameters: *ref_1
    get:
      description: Lists all subscriptions in a given project and location.
      operationId: analyticshub.projects.locations.subscriptions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: projects_locations_subscriptions_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.subscriptions
  '/v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}':
    parameters: *ref_1
    delete:
      description: Deletes a subscription.
      operationId: analyticshub.projects.locations.subscriptions.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: projects_locations_subscriptions_delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a Subscription.
      operationId: analyticshub.projects.locations.subscriptions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: projects_locations_subscriptions_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:refresh':
    parameters: *ref_1
    post:
      description: Refreshes a Subscription to a Data Exchange. A Data Exchange can become stale when a publisher adds or removes data. This is a long-running operation as it may create many linked datasets.
      operationId: analyticshub.projects.locations.subscriptions.refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshSubscriptionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: projects_locations_subscriptions_refresh
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}':
    parameters: *ref_1
    patch:
      description: Updates an existing data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataExchange'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExchange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_patch
      x-stackQL-verb: exec
    get:
      description: Gets the details of a data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExchange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_get
      x-stackQL-verb: select
    delete:
      description: Deletes an existing data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges':
    parameters: *ref_1
    get:
      description: Lists all data exchanges in a given project and location.
      operationId: analyticshub.projects.locations.dataExchanges.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataExchangesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.dataExchanges
    post:
      description: Creates a new data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataExchange'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExchange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataExchangeId
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:listSubscriptions':
    parameters: *ref_1
    get:
      description: Lists all subscriptions on a given Data Exchange or Listing.
      operationId: analyticshub.projects.locations.dataExchanges.listSubscriptions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSharedResourceSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: includeDeletedSubscriptions
          schema:
            type: boolean
      x-stackQL-resource: data_exchanges_subscriptions
      x-stackQL-method: projects_locations_data_exchanges_list_subscriptions
      x-stackQL-verb: select
      x-stackQL-objectKey: $.sharedResourceSubscriptions
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:subscribe':
    parameters: *ref_1
    post:
      description: Creates a Subscription to a Data Exchange. This is a long-running operation as it will create one or more linked datasets.
      operationId: analyticshub.projects.locations.dataExchanges.subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeDataExchangeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_subscribe
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: Returns the permissions that a caller has.
      operationId: analyticshub.projects.locations.dataExchanges.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings':
    parameters: *ref_1
    get:
      description: Lists all listings in a given project and location.
      operationId: analyticshub.projects.locations.dataExchanges.listings.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListListingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.listings
    post:
      description: Creates a new listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: listingId
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}':
    parameters: *ref_1
    get:
      description: Gets the details of a listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_get
      x-stackQL-verb: select
    delete:
      description: Deletes a listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_delete
      x-stackQL-verb: delete
    patch:
      description: Updates an existing listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:listSubscriptions':
    parameters: *ref_1
    get:
      description: Lists all subscriptions on a given Data Exchange or Listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.listSubscriptions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSharedResourceSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: includeDeletedSubscriptions
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: listings_subscriptions
      x-stackQL-method: projects_locations_data_exchanges_listings_list_subscriptions
      x-stackQL-verb: select
      x-stackQL-objectKey: $.sharedResourceSubscriptions
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:subscribe':
    parameters: *ref_1
    post:
      description: 'Subscribes to a listing. Currently, with Analytics Hub, you can create listings that reference only BigQuery datasets. Upon subscription to a listing for a BigQuery dataset, Analytics Hub creates a linked dataset in the subscriber''s project.'
      operationId: analyticshub.projects.locations.dataExchanges.listings.subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeListingRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeListingResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_subscribe
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.listings.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_listings_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.listings.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_listings_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: Returns the permissions that a caller has.
      operationId: analyticshub.projects.locations.dataExchanges.listings.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_listings_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/dataExchanges':
    parameters: *ref_1
    get:
      description: Lists all data exchanges from projects in a given organization and location.
      operationId: analyticshub.organizations.locations.dataExchanges.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrgDataExchangesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: organizations_locations_data_exchanges_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.dataExchanges
