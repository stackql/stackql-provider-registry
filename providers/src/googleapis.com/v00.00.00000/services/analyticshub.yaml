openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Analytics Hub API
  description: Exchange data and analytics assets securely and efficiently.
  version: v1
  x-discovery-doc-revision: '20240826'
  x-generated-date: '2024-09-13'
externalDocs:
  url: https://cloud.google.com/bigquery/docs/analytics-hub-introduction
servers:
  - url: https://analyticshub.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/bigquery: >-
              View and manage your data in Google BigQuery and see the email
              address for your Google Account
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListDataExchangesResponse:
      id: ListDataExchangesResponse
      description: Message for response to the list of data exchanges.
      type: object
      properties:
        dataExchanges:
          description: The list of data exchanges.
          type: array
          items:
            $ref: '#/components/schemas/DataExchange'
        nextPageToken:
          description: A token to request the next page of results.
          type: string
    DataExchange:
      id: DataExchange
      description: >-
        A data exchange is a container that lets you share data. Along with the
        descriptive information about the data exchange, it contains listings
        that reference shared datasets.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the data exchange. e.g.
            `projects/myproject/locations/US/dataExchanges/123`.
          readOnly: true
          type: string
        displayName:
          description: >-
            Required. Human-readable display name of the data exchange. The
            display name must contain only Unicode letters, numbers (0-9),
            underscores (_), dashes (-), spaces ( ), ampersands (&) and must not
            start or end with spaces. Default value is an empty string. Max
            length: 63 bytes.
          type: string
        description:
          description: >-
            Optional. Description of the data exchange. The description must not
            contain Unicode non-characters as well as C0 and C1 control codes
            except tabs (HT), new lines (LF), carriage returns (CR), and page
            breaks (FF). Default value is an empty string. Max length: 2000
            bytes.
          type: string
        primaryContact:
          description: >-
            Optional. Email or URL of the primary point of contact of the data
            exchange. Max Length: 1000 bytes.
          type: string
        documentation:
          description: Optional. Documentation describing the data exchange.
          type: string
        listingCount:
          description: Output only. Number of listings contained in the data exchange.
          readOnly: true
          type: integer
          format: int32
        icon:
          description: >-
            Optional. Base64 encoded image representing the data exchange. Max
            Size: 3.0MiB Expected image dimensions are 512x512 pixels, however
            the API only performs validation on size of the encoded data. Note:
            For byte fields, the content of the fields are base64-encoded (which
            increases the size of the data by 33-36%) when using JSON on the
            wire.
          type: string
          format: byte
        sharingEnvironmentConfig:
          description: >-
            Optional. Configurable data sharing environment option for a data
            exchange.
          $ref: '#/components/schemas/SharingEnvironmentConfig'
        discoveryType:
          description: >-
            Optional. Type of discovery on the discovery page for all the
            listings under this exchange. Updating this field also updates
            (overwrites) the discovery_type field for all the listings under
            this exchange.
          type: string
          enumDescriptions:
            - Unspecified. Defaults to DISCOVERY_TYPE_PRIVATE.
            - >-
              The Data exchange/listing can be discovered in the 'Private'
              results list.
            - >-
              The Data exchange/listing can be discovered in the 'Public'
              results list.
          enum:
            - DISCOVERY_TYPE_UNSPECIFIED
            - DISCOVERY_TYPE_PRIVATE
            - DISCOVERY_TYPE_PUBLIC
    SharingEnvironmentConfig:
      id: SharingEnvironmentConfig
      description: >-
        Sharing environment is a behavior model for sharing data within a data
        exchange. This option is configurable for a data exchange.
      type: object
      properties:
        defaultExchangeConfig:
          description: Default Analytics Hub data exchange, used for secured data sharing.
          $ref: '#/components/schemas/DefaultExchangeConfig'
        dcrExchangeConfig:
          description: >-
            Data Clean Room (DCR), used for privacy-safe and secured data
            sharing.
          $ref: '#/components/schemas/DcrExchangeConfig'
    DefaultExchangeConfig:
      id: DefaultExchangeConfig
      description: Default Analytics Hub data exchange, used for secured data sharing.
      type: object
      properties: {}
    DcrExchangeConfig:
      id: DcrExchangeConfig
      description: Data Clean Room (DCR), used for privacy-safe and secured data sharing.
      type: object
      properties:
        singleSelectedResourceSharingRestriction:
          description: >-
            Output only. If True, this DCR restricts the contributors to sharing
            only a single resource in a Listing. And no two resources should
            have the same IDs. So if a contributor adds a view with a
            conflicting name, the CreateListing API will reject the request. if
            False, the data contributor can publish an entire dataset (as
            before). This is not configurable, and by default, all new DCRs will
            have the restriction set to True.
          readOnly: true
          type: boolean
        singleLinkedDatasetPerCleanroom:
          description: >-
            Output only. If True, when subscribing to this DCR, it will create
            only one linked dataset containing all resources shared within the
            cleanroom. If False, when subscribing to this DCR, it will create 1
            linked dataset per listing. This is not configurable, and by
            default, all new DCRs will have the restriction set to True.
          readOnly: true
          type: boolean
    ListOrgDataExchangesResponse:
      id: ListOrgDataExchangesResponse
      description: >-
        Message for response to listing data exchanges in an organization and
        location.
      type: object
      properties:
        dataExchanges:
          description: The list of data exchanges.
          type: array
          items:
            $ref: '#/components/schemas/DataExchange'
        nextPageToken:
          description: A token to request the next page of results.
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    ListListingsResponse:
      id: ListListingsResponse
      description: Message for response to the list of Listings.
      type: object
      properties:
        listings:
          description: The list of Listing.
          type: array
          items:
            $ref: '#/components/schemas/Listing'
        nextPageToken:
          description: A token to request the next page of results.
          type: string
    Listing:
      id: Listing
      description: >-
        A listing is what gets published into a data exchange that a subscriber
        can subscribe to. It contains a reference to the data source along with
        descriptive information that will help subscribers find and subscribe
        the data.
      type: object
      properties:
        bigqueryDataset:
          description: Required. Shared dataset i.e. BigQuery dataset source.
          $ref: '#/components/schemas/BigQueryDatasetSource'
        pubsubTopic:
          description: Required. Pub/Sub topic source.
          $ref: '#/components/schemas/PubSubTopicSource'
        name:
          description: >-
            Output only. The resource name of the listing. e.g.
            `projects/myproject/locations/US/dataExchanges/123/listings/456`
          readOnly: true
          type: string
        displayName:
          description: >-
            Required. Human-readable display name of the listing. The display
            name must contain only Unicode letters, numbers (0-9), underscores
            (_), dashes (-), spaces ( ), ampersands (&) and can't start or end
            with spaces. Default value is an empty string. Max length: 63 bytes.
          type: string
        description:
          description: >-
            Optional. Short description of the listing. The description must not
            contain Unicode non-characters and C0 and C1 control codes except
            tabs (HT), new lines (LF), carriage returns (CR), and page breaks
            (FF). Default value is an empty string. Max length: 2000 bytes.
          type: string
        primaryContact:
          description: >-
            Optional. Email or URL of the primary point of contact of the
            listing. Max Length: 1000 bytes.
          type: string
        documentation:
          description: Optional. Documentation describing the listing.
          type: string
        state:
          description: Output only. Current state of the listing.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              Subscribable state. Users with dataexchange.listings.subscribe
              permission can subscribe to this listing.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
        icon:
          description: >-
            Optional. Base64 encoded image representing the listing. Max Size:
            3.0MiB Expected image dimensions are 512x512 pixels, however the API
            only performs validation on size of the encoded data. Note: For byte
            fields, the contents of the field are base64-encoded (which
            increases the size of the data by 33-36%) when using JSON on the
            wire.
          type: string
          format: byte
        dataProvider:
          description: Optional. Details of the data provider who owns the source data.
          $ref: '#/components/schemas/DataProvider'
        categories:
          description: >-
            Optional. Categories of the listing. Up to two categories are
            allowed.
          type: array
          items:
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
            enum:
              - CATEGORY_UNSPECIFIED
              - CATEGORY_OTHERS
              - CATEGORY_ADVERTISING_AND_MARKETING
              - CATEGORY_COMMERCE
              - CATEGORY_CLIMATE_AND_ENVIRONMENT
              - CATEGORY_DEMOGRAPHICS
              - CATEGORY_ECONOMICS
              - CATEGORY_EDUCATION
              - CATEGORY_ENERGY
              - CATEGORY_FINANCIAL
              - CATEGORY_GAMING
              - CATEGORY_GEOSPATIAL
              - CATEGORY_HEALTHCARE_AND_LIFE_SCIENCE
              - CATEGORY_MEDIA
              - CATEGORY_PUBLIC_SECTOR
              - CATEGORY_RETAIL
              - CATEGORY_SPORTS
              - CATEGORY_SCIENCE_AND_RESEARCH
              - CATEGORY_TRANSPORTATION_AND_LOGISTICS
              - CATEGORY_TRAVEL_AND_TOURISM
        publisher:
          description: >-
            Optional. Details of the publisher who owns the listing and who can
            share the source data.
          $ref: '#/components/schemas/Publisher'
        requestAccess:
          description: >-
            Optional. Email or URL of the request access of the listing.
            Subscribers can use this reference to request access. Max Length:
            1000 bytes.
          type: string
        restrictedExportConfig:
          description: >-
            Optional. If set, restricted export configuration will be propagated
            and enforced on the linked dataset.
          $ref: '#/components/schemas/RestrictedExportConfig'
        discoveryType:
          description: Optional. Type of discovery of the listing on the discovery page.
          type: string
          enumDescriptions:
            - Unspecified. Defaults to DISCOVERY_TYPE_PRIVATE.
            - >-
              The Data exchange/listing can be discovered in the 'Private'
              results list.
            - >-
              The Data exchange/listing can be discovered in the 'Public'
              results list.
          enum:
            - DISCOVERY_TYPE_UNSPECIFIED
            - DISCOVERY_TYPE_PRIVATE
            - DISCOVERY_TYPE_PUBLIC
        resourceType:
          description: Output only. Listing shared asset type.
          readOnly: true
          type: string
          enumDescriptions:
            - Not specified.
            - BigQuery Dataset Asset.
            - Pub/Sub Topic Asset.
          enum:
            - SHARED_RESOURCE_TYPE_UNSPECIFIED
            - BIGQUERY_DATASET
            - PUBSUB_TOPIC
    BigQueryDatasetSource:
      id: BigQueryDatasetSource
      description: >-
        A reference to a shared dataset. It is an existing BigQuery dataset with
        a collection of objects such as tables and views that you want to share
        with subscribers. When subscriber's subscribe to a listing, Analytics
        Hub creates a linked dataset in the subscriber's project. A Linked
        dataset is an opaque, read-only BigQuery dataset that serves as a
        _symbolic link_ to a shared dataset.
      type: object
      properties:
        dataset:
          description: >-
            Resource name of the dataset source for this listing. e.g.
            `projects/myproject/datasets/123`
          type: string
        selectedResources:
          description: >-
            Optional. Resource in this dataset that is selectively shared. This
            field is required for data clean room exchanges.
          type: array
          items:
            $ref: '#/components/schemas/SelectedResource'
        restrictedExportPolicy:
          description: >-
            Optional. If set, restricted export policy will be propagated and
            enforced on the linked dataset.
          $ref: '#/components/schemas/RestrictedExportPolicy'
    SelectedResource:
      id: SelectedResource
      description: Resource in this dataset that is selectively shared.
      type: object
      properties:
        table:
          description: >-
            Optional. Format: For table:
            `projects/{projectId}/datasets/{datasetId}/tables/{tableId}`
            Example:"projects/test_project/datasets/test_dataset/tables/test_table"
          type: string
    RestrictedExportPolicy:
      id: RestrictedExportPolicy
      description: >-
        Restricted export policy used to configure restricted export on linked
        dataset.
      type: object
      properties:
        enabled:
          description: Optional. If true, enable restricted export.
          type: boolean
        restrictDirectTableAccess:
          description: >-
            Optional. If true, restrict direct table access (read
            api/tabledata.list) on linked table.
          type: boolean
        restrictQueryResult:
          description: >-
            Optional. If true, restrict export of query result derived from
            restricted linked dataset table.
          type: boolean
    PubSubTopicSource:
      id: PubSubTopicSource
      description: Pub/Sub topic source.
      type: object
      properties:
        topic:
          description: >-
            Required. Resource name of the Pub/Sub topic source for this
            listing. e.g. projects/myproject/topics/topicId
          type: string
        dataAffinityRegions:
          description: >-
            Optional. Region hint on where the data might be published. Data
            affinity regions are modifiable. See go/regions for full listing of
            possible Cloud regions.
          type: array
          items:
            type: string
    DataProvider:
      id: DataProvider
      description: Contains details of the data provider.
      type: object
      properties:
        name:
          description: Optional. Name of the data provider.
          type: string
        primaryContact:
          description: 'Optional. Email or URL of the data provider. Max Length: 1000 bytes.'
          type: string
    Publisher:
      id: Publisher
      description: Contains details of the listing publisher.
      type: object
      properties:
        name:
          description: Optional. Name of the listing publisher.
          type: string
        primaryContact:
          description: >-
            Optional. Email or URL of the listing publisher. Max Length: 1000
            bytes.
          type: string
    RestrictedExportConfig:
      id: RestrictedExportConfig
      description: >-
        Restricted export config, used to configure restricted export on linked
        dataset.
      type: object
      properties:
        enabled:
          description: Optional. If true, enable restricted export.
          type: boolean
        restrictDirectTableAccess:
          description: >-
            Output only. If true, restrict direct table access(read
            api/tabledata.list) on linked table.
          readOnly: true
          type: boolean
        restrictQueryResult:
          description: >-
            Optional. If true, restrict export of query result derived from
            restricted linked dataset table.
          type: boolean
    SubscribeListingRequest:
      id: SubscribeListingRequest
      description: Message for subscribing to a listing.
      type: object
      properties:
        destinationDataset:
          description: >-
            Input only. BigQuery destination dataset to create for the
            subscriber.
          $ref: '#/components/schemas/DestinationDataset'
        destinationPubsubSubscription:
          description: >-
            Required. Input only. Destination Pub/Sub subscription to create for
            the subscriber.
          $ref: '#/components/schemas/DestinationPubSubSubscription'
    DestinationDataset:
      id: DestinationDataset
      description: Defines the destination bigquery dataset.
      type: object
      properties:
        datasetReference:
          description: Required. A reference that identifies the destination dataset.
          $ref: '#/components/schemas/DestinationDatasetReference'
        friendlyName:
          description: Optional. A descriptive name for the dataset.
          type: string
        description:
          description: Optional. A user-friendly description of the dataset.
          type: string
        labels:
          description: >-
            Optional. The labels associated with this dataset. You can use these
            to organize and group your datasets. You can set this property when
            inserting or updating a dataset. See
            https://cloud.google.com/resource-manager/docs/creating-managing-labels
            for more information.
          type: object
          additionalProperties:
            type: string
        location:
          description: >-
            Required. The geographic location where the dataset should reside.
            See https://cloud.google.com/bigquery/docs/locations for supported
            locations.
          type: string
    DestinationDatasetReference:
      id: DestinationDatasetReference
      description: Contains the reference that identifies a destination bigquery dataset.
      type: object
      properties:
        datasetId:
          description: >-
            Required. A unique ID for this dataset, without the project name.
            The ID must contain only letters (a-z, A-Z), numbers (0-9), or
            underscores (_). The maximum length is 1,024 characters.
          type: string
        projectId:
          description: Required. The ID of the project containing this dataset.
          type: string
    DestinationPubSubSubscription:
      id: DestinationPubSubSubscription
      description: Defines the destination Pub/Sub subscription.
      type: object
      properties:
        pubsubSubscription:
          description: Required. Destination Pub/Sub subscription resource.
          $ref: '#/components/schemas/GooglePubsubV1Subscription'
    GooglePubsubV1Subscription:
      id: GooglePubsubV1Subscription
      description: >-
        A subscription resource. If none of `push_config`, `bigquery_config`, or
        `cloud_storage_config` is set, then the subscriber will pull and ack
        messages using API methods. At most one of these fields may be set.
      type: object
      properties:
        name:
          description: >-
            Required. Name of the subscription. Format is
            `projects/{project}/subscriptions/{sub}`.
          type: string
        pushConfig:
          description: >-
            Optional. If push delivery is used with this subscription, this
            field is used to configure it.
          $ref: '#/components/schemas/PushConfig'
        bigqueryConfig:
          description: >-
            Optional. If delivery to BigQuery is used with this subscription,
            this field is used to configure it.
          $ref: '#/components/schemas/BigQueryConfig'
        cloudStorageConfig:
          description: >-
            Optional. If delivery to Google Cloud Storage is used with this
            subscription, this field is used to configure it.
          $ref: '#/components/schemas/CloudStorageConfig'
        ackDeadlineSeconds:
          description: >-
            Optional. The approximate amount of time (on a best-effort basis)
            Pub/Sub waits for the subscriber to acknowledge receipt before
            resending the message. In the interval after the message is
            delivered and before it is acknowledged, it is considered to be
            _outstanding_. During that time period, the message will not be
            redelivered (on a best-effort basis). For pull subscriptions, this
            value is used as the initial value for the ack deadline. To override
            this value for a given message, call `ModifyAckDeadline` with the
            corresponding `ack_id` if using non-streaming pull or send the
            `ack_id` in a `StreamingModifyAckDeadlineRequest` if using streaming
            pull. The minimum custom deadline you can specify is 10 seconds. The
            maximum custom deadline you can specify is 600 seconds (10 minutes).
            If this parameter is 0, a default value of 10 seconds is used. For
            push delivery, this value is also used to set the request timeout
            for the call to the push endpoint. If the subscriber never
            acknowledges the message, the Pub/Sub system will eventually
            redeliver the message.
          type: integer
          format: int32
        retainAckedMessages:
          description: >-
            Optional. Indicates whether to retain acknowledged messages. If
            true, then messages are not expunged from the subscription's
            backlog, even if they are acknowledged, until they fall out of the
            `message_retention_duration` window. This must be true if you would
            like to [`Seek` to a timestamp]
            (https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time)
            in the past to replay previously-acknowledged messages.
          type: boolean
        messageRetentionDuration:
          description: >-
            Optional. How long to retain unacknowledged messages in the
            subscription's backlog, from the moment a message is published. If
            `retain_acked_messages` is true, then this also configures the
            retention of acknowledged messages, and thus configures how far back
            in time a `Seek` can be done. Defaults to 7 days. Cannot be more
            than 7 days or less than 10 minutes.
          type: string
          format: google-duration
        labels:
          description: >-
            Optional. See [Creating and managing
            labels](https://cloud.google.com/pubsub/docs/labels).
          type: object
          additionalProperties:
            type: string
        enableMessageOrdering:
          description: >-
            Optional. If true, messages published with the same `ordering_key`
            in `PubsubMessage` will be delivered to the subscribers in the order
            in which they are received by the Pub/Sub system. Otherwise, they
            may be delivered in any order.
          type: boolean
        expirationPolicy:
          description: >-
            Optional. A policy that specifies the conditions for this
            subscription's expiration. A subscription is considered active as
            long as any connected subscriber is successfully consuming messages
            from the subscription or is issuing operations on the subscription.
            If `expiration_policy` is not set, a *default policy* with `ttl` of
            31 days will be used. The minimum allowed value for
            `expiration_policy.ttl` is 1 day. If `expiration_policy` is set, but
            `expiration_policy.ttl` is not set, the subscription never expires.
          $ref: '#/components/schemas/ExpirationPolicy'
        filter:
          description: >-
            Optional. An expression written in the Pub/Sub [filter
            language](https://cloud.google.com/pubsub/docs/filtering). If
            non-empty, then only `PubsubMessage`s whose `attributes` field
            matches the filter are delivered on this subscription. If empty,
            then no messages are filtered out.
          type: string
        deadLetterPolicy:
          description: >-
            Optional. A policy that specifies the conditions for dead lettering
            messages in this subscription. If dead_letter_policy is not set,
            dead lettering is disabled. The Pub/Sub service account associated
            with this subscriptions's parent project (i.e.,
            service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must
            have permission to Acknowledge() messages on this subscription.
          $ref: '#/components/schemas/DeadLetterPolicy'
        retryPolicy:
          description: >-
            Optional. A policy that specifies how Pub/Sub retries message
            delivery for this subscription. If not set, the default retry policy
            is applied. This generally implies that messages will be retried as
            soon as possible for healthy subscribers. RetryPolicy will be
            triggered on NACKs or acknowledgement deadline exceeded events for a
            given message.
          $ref: '#/components/schemas/RetryPolicy'
        detached:
          description: >-
            Optional. Indicates whether the subscription is detached from its
            topic. Detached subscriptions don't receive messages from their
            topic and don't retain any backlog. `Pull` and `StreamingPull`
            requests will return FAILED_PRECONDITION. If the subscription is a
            push subscription, pushes to the endpoint will not be made.
          type: boolean
        enableExactlyOnceDelivery:
          description: >-
            Optional. If true, Pub/Sub provides the following guarantees for the
            delivery of a message with a given value of `message_id` on this
            subscription: * The message sent to a subscriber is guaranteed not
            to be resent before the message's acknowledgement deadline expires.
            * An acknowledged message will not be resent to a subscriber. Note
            that subscribers may still receive multiple copies of a message when
            `enable_exactly_once_delivery` is true if the message was published
            multiple times by a publisher client. These copies are considered
            distinct by Pub/Sub and have distinct `message_id` values.
          type: boolean
        topicMessageRetentionDuration:
          description: >-
            Output only. Indicates the minimum duration for which a message is
            retained after it is published to the subscription's topic. If this
            field is set, messages published to the subscription's topic in the
            last `topic_message_retention_duration` are always available to
            subscribers. See the `message_retention_duration` field in `Topic`.
            This field is set only in responses from the server; it is ignored
            if it is set in any requests.
          readOnly: true
          type: string
          format: google-duration
        state:
          description: >-
            Output only. An output-only field indicating whether or not the
            subscription can receive messages.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The subscription can actively receive messages
            - >-
              The subscription cannot receive messages because of an error with
              the resource to which it pushes messages. See the more detailed
              error state in the corresponding configuration.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - RESOURCE_ERROR
        analyticsHubSubscriptionInfo:
          description: >-
            Output only. Information about the associated Analytics Hub
            subscription. Only set if the subscritpion is created by Analytics
            Hub.
          readOnly: true
          $ref: '#/components/schemas/AnalyticsHubSubscriptionInfo'
    PushConfig:
      id: PushConfig
      description: Configuration for a push delivery endpoint.
      type: object
      properties:
        pushEndpoint:
          description: >-
            Optional. A URL locating the endpoint to which messages should be
            pushed. For example, a Webhook endpoint might use
            `https://example.com/push`.
          type: string
        attributes:
          description: >-
            Optional. Endpoint configuration attributes that can be used to
            control different aspects of the message delivery. The only
            currently supported attribute is `x-goog-version`, which you can use
            to change the format of the pushed message. This attribute indicates
            the version of the data expected by the endpoint. This controls the
            shape of the pushed message (i.e., its fields and metadata). If not
            present during the `CreateSubscription` call, it will default to the
            version of the Pub/Sub API used to make such call. If not present in
            a `ModifyPushConfig` call, its value will not be changed.
            `GetSubscription` calls will always return a valid version, even if
            the subscription was created without this attribute. The only
            supported values for the `x-goog-version` attribute are: *
            `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.
            * `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub
            API. For example: `attributes { "x-goog-version": "v1" }`
          type: object
          additionalProperties:
            type: string
        oidcToken:
          description: >-
            Optional. If specified, Pub/Sub will generate and attach an OIDC JWT
            token as an `Authorization` header in the HTTP request for every
            pushed message.
          $ref: '#/components/schemas/OidcToken'
        pubsubWrapper:
          description: >-
            Optional. When set, the payload to the push endpoint is in the form
            of the JSON representation of a PubsubMessage
            (https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#pubsubmessage).
          $ref: '#/components/schemas/PubsubWrapper'
        noWrapper:
          description: Optional. When set, the payload to the push endpoint is not wrapped.
          $ref: '#/components/schemas/NoWrapper'
    OidcToken:
      id: OidcToken
      description: >-
        Contains information needed for generating an [OpenID Connect
        token](https://developers.google.com/identity/protocols/OpenIDConnect).
      type: object
      properties:
        serviceAccountEmail:
          description: >-
            Optional. [Service account
            email](https://cloud.google.com/iam/docs/service-accounts) used for
            generating the OIDC token. For more information on setting up
            authentication, see [Push
            subscriptions](https://cloud.google.com/pubsub/docs/push).
          type: string
        audience:
          description: >-
            Optional. Audience to be used when generating OIDC token. The
            audience claim identifies the recipients that the JWT is intended
            for. The audience value is a single case-sensitive string. Having
            multiple values (array) for the audience field is not supported.
            More info about the OIDC JWT token audience here:
            https://tools.ietf.org/html/rfc7519#section-4.1.3 Note: if not
            specified, the Push endpoint URL will be used.
          type: string
    PubsubWrapper:
      id: PubsubWrapper
      description: >-
        The payload to the push endpoint is in the form of the JSON
        representation of a PubsubMessage
        (https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#pubsubmessage).
      type: object
      properties: {}
    NoWrapper:
      id: NoWrapper
      description: Sets the `data` field as the HTTP body for delivery.
      type: object
      properties:
        writeMetadata:
          description: >-
            Optional. When true, writes the Pub/Sub message metadata to
            `x-goog-pubsub-:` headers of the HTTP request. Writes the Pub/Sub
            message attributes to `:` headers of the HTTP request.
          type: boolean
    BigQueryConfig:
      id: BigQueryConfig
      description: Configuration for a BigQuery subscription.
      type: object
      properties:
        table:
          description: >-
            Optional. The name of the table to which to write data, of the form
            {projectId}.{datasetId}.{tableId}
          type: string
        useTopicSchema:
          description: >-
            Optional. When true, use the topic's schema as the columns to write
            to in BigQuery, if it exists. `use_topic_schema` and
            `use_table_schema` cannot be enabled at the same time.
          type: boolean
        writeMetadata:
          description: >-
            Optional. When true, write the subscription name, message_id,
            publish_time, attributes, and ordering_key to additional columns in
            the table. The subscription name, message_id, and publish_time
            fields are put in their own columns while all other message
            properties (other than data) are written to a JSON object in the
            attributes column.
          type: boolean
        dropUnknownFields:
          description: >-
            Optional. When true and use_topic_schema is true, any fields that
            are a part of the topic schema that are not part of the BigQuery
            table schema are dropped when writing to BigQuery. Otherwise, the
            schemas must be kept in sync and any messages with extra fields are
            not written and remain in the subscription's backlog.
          type: boolean
        state:
          description: >-
            Output only. An output-only field that indicates whether or not the
            subscription can receive messages.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The subscription can actively send messages to BigQuery
            - >-
              Cannot write to the BigQuery table because of permission denied
              errors. This can happen if - Pub/Sub SA has not been granted the
              [appropriate BigQuery IAM
              permissions](https://cloud.google.com/pubsub/docs/create-subscription#assign_bigquery_service_account)
              - bigquery.googleapis.com API is not enabled for the project
              ([instructions](https://cloud.google.com/service-usage/docs/enable-disable))
            - Cannot write to the BigQuery table because it does not exist.
            - Cannot write to the BigQuery table due to a schema mismatch.
            - >-
              Cannot write to the destination because enforce_in_transit is set
              to true and the destination locations are not in the allowed
              regions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PERMISSION_DENIED
            - NOT_FOUND
            - SCHEMA_MISMATCH
            - IN_TRANSIT_LOCATION_RESTRICTION
        useTableSchema:
          description: >-
            Optional. When true, use the BigQuery table's schema as the columns
            to write to in BigQuery. `use_table_schema` and `use_topic_schema`
            cannot be enabled at the same time.
          type: boolean
        serviceAccountEmail:
          description: >-
            Optional. The service account to use to write to BigQuery. The
            subscription creator or updater that specifies this field must have
            `iam.serviceAccounts.actAs` permission on the service account. If
            not specified, the Pub/Sub [service
            agent](https://cloud.google.com/iam/docs/service-agents),
            service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com, is
            used.
          type: string
    CloudStorageConfig:
      id: CloudStorageConfig
      description: Configuration for a Cloud Storage subscription.
      type: object
      properties:
        bucket:
          description: >-
            Required. User-provided name for the Cloud Storage bucket. The
            bucket must be created by the user. The bucket name must be without
            any prefix like "gs://". See the [bucket naming requirements]
            (https://cloud.google.com/storage/docs/buckets#naming).
          type: string
        filenamePrefix:
          description: >-
            Optional. User-provided prefix for Cloud Storage filename. See the
            [object naming
            requirements](https://cloud.google.com/storage/docs/objects#naming).
          type: string
        filenameSuffix:
          description: >-
            Optional. User-provided suffix for Cloud Storage filename. See the
            [object naming
            requirements](https://cloud.google.com/storage/docs/objects#naming).
            Must not end in "/".
          type: string
        filenameDatetimeFormat:
          description: >-
            Optional. User-provided format string specifying how to represent
            datetimes in Cloud Storage filenames. See the [datetime format
            guidance](https://cloud.google.com/pubsub/docs/create-cloudstorage-subscription#file_names).
          type: string
        textConfig:
          description: >-
            Optional. If set, message data will be written to Cloud Storage in
            text format.
          $ref: '#/components/schemas/TextConfig'
        avroConfig:
          description: >-
            Optional. If set, message data will be written to Cloud Storage in
            Avro format.
          $ref: '#/components/schemas/AvroConfig'
        maxDuration:
          description: >-
            Optional. The maximum duration that can elapse before a new Cloud
            Storage file is created. Min 1 minute, max 10 minutes, default 5
            minutes. May not exceed the subscription's acknowledgement deadline.
          type: string
          format: google-duration
        maxBytes:
          description: >-
            Optional. The maximum bytes that can be written to a Cloud Storage
            file before a new file is created. Min 1 KB, max 10 GiB. The
            max_bytes limit may be exceeded in cases where messages are larger
            than the limit.
          type: string
          format: int64
        maxMessages:
          description: >-
            Optional. The maximum number of messages that can be written to a
            Cloud Storage file before a new file is created. Min 1000 messages.
          type: string
          format: int64
        state:
          description: >-
            Output only. An output-only field that indicates whether or not the
            subscription can receive messages.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The subscription can actively send messages to Cloud Storage.
            - >-
              Cannot write to the Cloud Storage bucket because of permission
              denied errors.
            - >-
              Cannot write to the Cloud Storage bucket because it does not
              exist.
            - >-
              Cannot write to the destination because enforce_in_transit is set
              to true and the destination locations are not in the allowed
              regions.
            - >-
              Cannot write to the Cloud Storage bucket due to an incompatibility
              between the topic schema and subscription settings.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PERMISSION_DENIED
            - NOT_FOUND
            - IN_TRANSIT_LOCATION_RESTRICTION
            - SCHEMA_MISMATCH
        serviceAccountEmail:
          description: >-
            Optional. The service account to use to write to Cloud Storage. The
            subscription creator or updater that specifies this field must have
            `iam.serviceAccounts.actAs` permission on the service account. If
            not specified, the Pub/Sub [service
            agent](https://cloud.google.com/iam/docs/service-agents),
            service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com, is
            used.
          type: string
    TextConfig:
      id: TextConfig
      description: >-
        Configuration for writing message data in text format. Message payloads
        will be written to files as raw text, separated by a newline.
      type: object
      properties: {}
    AvroConfig:
      id: AvroConfig
      description: >-
        Configuration for writing message data in Avro format. Message payloads
        and metadata will be written to files as an Avro binary.
      type: object
      properties:
        writeMetadata:
          description: >-
            Optional. When true, write the subscription name, message_id,
            publish_time, attributes, and ordering_key as additional fields in
            the output. The subscription name, message_id, and publish_time
            fields are put in their own fields while all other message
            properties other than data (for example, an ordering_key, if
            present) are added as entries in the attributes map.
          type: boolean
        useTopicSchema:
          description: >-
            Optional. When true, the output Cloud Storage file will be
            serialized using the topic schema, if it exists.
          type: boolean
    ExpirationPolicy:
      id: ExpirationPolicy
      description: >-
        A policy that specifies the conditions for resource expiration (i.e.,
        automatic resource deletion).
      type: object
      properties:
        ttl:
          description: >-
            Optional. Specifies the "time-to-live" duration for an associated
            resource. The resource expires if it is not active for a period of
            `ttl`. The definition of "activity" depends on the type of the
            associated resource. The minimum and maximum allowed values for
            `ttl` depend on the type of the associated resource, as well. If
            `ttl` is not set, the associated resource never expires.
          type: string
          format: google-duration
    DeadLetterPolicy:
      id: DeadLetterPolicy
      description: >-
        Dead lettering is done on a best effort basis. The same message might be
        dead lettered multiple times. If validation on any of the fields fails
        at subscription creation/updation, the create/update subscription
        request will fail.
      type: object
      properties:
        deadLetterTopic:
          description: >-
            Optional. The name of the topic to which dead letter messages should
            be published. Format is `projects/{project}/topics/{topic}`.The
            Pub/Sub service account associated with the enclosing subscription's
            parent project (i.e.,
            service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must
            have permission to Publish() to this topic. The operation will fail
            if the topic does not exist. Users should ensure that there is a
            subscription attached to this topic since messages published to a
            topic with no subscriptions are lost.
          type: string
        maxDeliveryAttempts:
          description: >-
            Optional. The maximum number of delivery attempts for any message.
            The value must be between 5 and 100. The number of delivery attempts
            is defined as 1 + (the sum of number of NACKs and number of times
            the acknowledgement deadline has been exceeded for the message). A
            NACK is any call to ModifyAckDeadline with a 0 deadline. Note that
            client libraries may automatically extend ack_deadlines. This field
            will be honored on a best effort basis. If this parameter is 0, a
            default value of 5 is used.
          type: integer
          format: int32
    RetryPolicy:
      id: RetryPolicy
      description: >-
        A policy that specifies how Pub/Sub retries message delivery. Retry
        delay will be exponential based on provided minimum and maximum
        backoffs. https://en.wikipedia.org/wiki/Exponential_backoff. RetryPolicy
        will be triggered on NACKs or acknowledgement deadline exceeded events
        for a given message. Retry Policy is implemented on a best effort basis.
        At times, the delay between consecutive deliveries may not match the
        configuration. That is, delay can be more or less than configured
        backoff.
      type: object
      properties:
        minimumBackoff:
          description: >-
            Optional. The minimum delay between consecutive deliveries of a
            given message. Value should be between 0 and 600 seconds. Defaults
            to 10 seconds.
          type: string
          format: google-duration
        maximumBackoff:
          description: >-
            Optional. The maximum delay between consecutive deliveries of a
            given message. Value should be between 0 and 600 seconds. Defaults
            to 600 seconds.
          type: string
          format: google-duration
    AnalyticsHubSubscriptionInfo:
      id: AnalyticsHubSubscriptionInfo
      description: >-
        Information about an associated Analytics Hub subscription
        (https://cloud.google.com/bigquery/docs/analytics-hub-manage-subscriptions).
      type: object
      properties:
        listing:
          description: >-
            Optional. The name of the associated Analytics Hub listing resource.
            Pattern:
            "projects/{project}/locations/{location}/dataExchanges/{data_exchange}/listings/{listing}"
          type: string
        subscription:
          description: >-
            Optional. The name of the associated Analytics Hub subscription
            resource. Pattern:
            "projects/{project}/locations/{location}/subscriptions/{subscription}"
          type: string
    SubscribeListingResponse:
      id: SubscribeListingResponse
      description: Message for response when you subscribe to a listing.
      type: object
      properties:
        subscription:
          description: Subscription object created from this subscribe action.
          $ref: '#/components/schemas/Subscription'
    Subscription:
      id: Subscription
      description: >-
        A subscription represents a subscribers' access to a particular set of
        published data. It contains references to associated listings, data
        exchanges, and linked datasets.
      type: object
      properties:
        listing:
          description: >-
            Output only. Resource name of the source Listing. e.g.
            projects/123/locations/US/dataExchanges/456/listings/789
          readOnly: true
          type: string
        dataExchange:
          description: >-
            Output only. Resource name of the source Data Exchange. e.g.
            projects/123/locations/US/dataExchanges/456
          readOnly: true
          type: string
        name:
          description: >-
            Output only. The resource name of the subscription. e.g.
            `projects/myproject/locations/US/subscriptions/123`.
          readOnly: true
          type: string
        creationTime:
          description: Output only. Timestamp when the subscription was created.
          readOnly: true
          type: string
          format: google-datetime
        lastModifyTime:
          description: Output only. Timestamp when the subscription was last modified.
          readOnly: true
          type: string
          format: google-datetime
        organizationId:
          description: >-
            Output only. Organization of the project this subscription belongs
            to.
          readOnly: true
          type: string
        organizationDisplayName:
          description: Output only. Display name of the project of this subscription.
          readOnly: true
          type: string
        state:
          description: Output only. Current state of the subscription.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - This subscription is active and the data is accessible.
            - >-
              The data referenced by this subscription is out of date and should
              be refreshed. This can happen when a data provider adds or removes
              datasets.
            - >-
              This subscription has been cancelled or revoked and the data is no
              longer accessible.
          enum:
            - STATE_UNSPECIFIED
            - STATE_ACTIVE
            - STATE_STALE
            - STATE_INACTIVE
        linkedDatasetMap:
          description: >-
            Output only. Map of listing resource names to associated linked
            resource, e.g.
            projects/123/locations/US/dataExchanges/456/listings/789 ->
            projects/123/datasets/my_dataset For listing-level subscriptions,
            this is a map of size 1. Only contains values if state ==
            STATE_ACTIVE.
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinkedResource'
        subscriberContact:
          description: Output only. Email of the subscriber.
          readOnly: true
          type: string
        linkedResources:
          description: >-
            Output only. Linked resources created in the subscription. Only
            contains values if state = STATE_ACTIVE.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/LinkedResource'
        resourceType:
          description: Output only. Listing shared asset type.
          readOnly: true
          type: string
          enumDescriptions:
            - Not specified.
            - BigQuery Dataset Asset.
            - Pub/Sub Topic Asset.
          enum:
            - SHARED_RESOURCE_TYPE_UNSPECIFIED
            - BIGQUERY_DATASET
            - PUBSUB_TOPIC
    LinkedResource:
      id: LinkedResource
      description: Reference to a linked resource tracked by this Subscription.
      type: object
      properties:
        linkedDataset:
          description: >-
            Output only. Name of the linked dataset, e.g.
            projects/subscriberproject/datasets/linked_dataset
          readOnly: true
          type: string
        linkedPubsubSubscription:
          description: >-
            Output only. Name of the Pub/Sub subscription, e.g.
            projects/subscriberproject/subscriptions/subscriptions/sub_id
          readOnly: true
          type: string
        listing:
          description: Output only. Listing for which linked resource is created.
          readOnly: true
          type: string
    SubscribeDataExchangeRequest:
      id: SubscribeDataExchangeRequest
      description: Message for subscribing to a Data Exchange.
      type: object
      properties:
        destination:
          description: >-
            Required. The parent resource path of the Subscription. e.g.
            `projects/subscriberproject/locations/US`
          type: string
        subscription:
          description: Required. Name of the subscription to create. e.g. `subscription1`
          type: string
        subscriberContact:
          description: Email of the subscriber.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    RefreshSubscriptionRequest:
      id: RefreshSubscriptionRequest
      description: Message for refreshing a subscription.
      type: object
      properties: {}
    ListSubscriptionsResponse:
      id: ListSubscriptionsResponse
      description: Message for response to the listing of subscriptions.
      type: object
      properties:
        subscriptions:
          description: The list of subscriptions.
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        nextPageToken:
          description: Next page token.
          type: string
    ListSharedResourceSubscriptionsResponse:
      id: ListSharedResourceSubscriptionsResponse
      description: Message for response to the listing of shared resource subscriptions.
      type: object
      properties:
        sharedResourceSubscriptions:
          description: The list of subscriptions.
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        nextPageToken:
          description: Next page token.
          type: string
    RevokeSubscriptionRequest:
      id: RevokeSubscriptionRequest
      description: Message for revoking a subscription.
      type: object
      properties: {}
    RevokeSubscriptionResponse:
      id: RevokeSubscriptionResponse
      description: Message for response when you revoke a subscription. Empty for now.
      type: object
      properties: {}
    GetIamPolicyRequest:
      id: GetIamPolicyRequest
      description: Request message for `GetIamPolicy` method.
      type: object
      properties:
        options:
          description: >-
            OPTIONAL: A `GetPolicyOptions` object for specifying options to
            `GetIamPolicy`.
          $ref: '#/components/schemas/GetPolicyOptions'
    GetPolicyOptions:
      id: GetPolicyOptions
      description: Encapsulates settings provided to GetIamPolicy.
      type: object
      properties:
        requestedPolicyVersion:
          description: >-
            Optional. The maximum policy version that will be used to format the
            policy. Valid values are 0, 1, and 3. Requests specifying an invalid
            value will be rejected. Requests for policies with any conditional
            role bindings must specify version 3. Policies with no conditional
            role bindings may specify any valid value or leave the field unset.
            The policy in the response might use the policy version that you
            specified, or it might use a lower policy version. For example, if
            you specify version 3, but the policy has no conditional role
            bindings, the response uses version 1. To learn which resources
            support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    SubscribeDataExchangeResponse:
      id: SubscribeDataExchangeResponse
      description: Message for response when you subscribe to a Data Exchange.
      type: object
      properties:
        subscription:
          description: Subscription object created from this subscribe action.
          $ref: '#/components/schemas/Subscription'
    RefreshSubscriptionResponse:
      id: RefreshSubscriptionResponse
      description: Message for response when you refresh a subscription.
      type: object
      properties:
        subscription:
          description: The refreshed subscription resource.
          $ref: '#/components/schemas/Subscription'
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of a long-running operation in Analytics Hub.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    data_exchanges:
      id: google.analyticshub.data_exchanges
      name: data_exchanges
      title: Data_exchanges
      methods:
        projects_locations_data_exchanges_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataExchanges
        projects_locations_data_exchanges_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_subscribe:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:subscribe/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_data_exchanges_list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1dataExchanges/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataExchanges
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_get
          - $ref: >-
              #/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_list
          - $ref: >-
              #/components/x-stackQL-resources/data_exchanges/methods/organizations_locations_data_exchanges_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_delete
    data_exchanges_subscriptions:
      id: google.analyticshub.data_exchanges_subscriptions
      name: data_exchanges_subscriptions
      title: Data_exchanges_subscriptions
      methods:
        projects_locations_data_exchanges_list_subscriptions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:listSubscriptions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sharedResourceSubscriptions
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_exchanges_subscriptions/methods/projects_locations_data_exchanges_list_subscriptions
        insert: []
        update: []
        replace: []
        delete: []
    data_exchanges_iam_policies:
      id: google.analyticshub.data_exchanges_iam_policies
      name: data_exchanges_iam_policies
      title: Data_exchanges_iam_policies
      methods:
        projects_locations_data_exchanges_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_data_exchanges_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_exchanges_iam_policies/methods/projects_locations_data_exchanges_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/data_exchanges_iam_policies/methods/projects_locations_data_exchanges_set_iam_policy
        delete: []
    listings:
      id: google.analyticshub.listings
      name: listings
      title: Listings
      methods:
        projects_locations_data_exchanges_listings_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.listings
        projects_locations_data_exchanges_listings_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_subscribe:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:subscribe/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_get
          - $ref: >-
              #/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_delete
    listings_subscriptions:
      id: google.analyticshub.listings_subscriptions
      name: listings_subscriptions
      title: Listings_subscriptions
      methods:
        projects_locations_data_exchanges_listings_list_subscriptions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:listSubscriptions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sharedResourceSubscriptions
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/listings_subscriptions/methods/projects_locations_data_exchanges_listings_list_subscriptions
        insert: []
        update: []
        replace: []
        delete: []
    listings_iam_policies:
      id: google.analyticshub.listings_iam_policies
      name: listings_iam_policies
      title: Listings_iam_policies
      methods:
        projects_locations_data_exchanges_listings_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_data_exchanges_listings_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/listings_iam_policies/methods/projects_locations_data_exchanges_listings_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/listings_iam_policies/methods/projects_locations_data_exchanges_listings_set_iam_policy
        delete: []
    subscriptions:
      id: google.analyticshub.subscriptions
      name: subscriptions
      title: Subscriptions
      methods:
        projects_locations_subscriptions_refresh:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}:refresh/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.subscriptions
        projects_locations_subscriptions_revoke:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}:revoke/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/projects_locations_subscriptions_get
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/projects_locations_subscriptions_list
        insert: []
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/projects_locations_subscriptions_delete
    subscriptions_iam_policies:
      id: google.analyticshub.subscriptions_iam_policies
      name: subscriptions_iam_policies
      title: Subscriptions_iam_policies
      methods:
        projects_locations_subscriptions_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_subscriptions_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions_iam_policies/methods/projects_locations_subscriptions_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions_iam_policies/methods/projects_locations_subscriptions_set_iam_policy
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists all data exchanges in a given project and location.
      operationId: analyticshub.projects.locations.dataExchanges.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataExchangesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataExchange'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExchange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataExchangeId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:
    parameters: *ref_1
    get:
      description: Gets the details of a data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExchange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataExchange'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExchange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an existing data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:subscribe:
    parameters: *ref_1
    post:
      description: >-
        Creates a Subscription to a Data Clean Room. This is a long-running
        operation as it will create one or more linked datasets.
      operationId: analyticshub.projects.locations.dataExchanges.subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeDataExchangeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:listSubscriptions:
    parameters: *ref_1
    get:
      description: Lists all subscriptions on a given Data Exchange or Listing.
      operationId: analyticshub.projects.locations.dataExchanges.listSubscriptions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSharedResourceSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeletedSubscriptions
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: Returns the permissions that a caller has.
      operationId: analyticshub.projects.locations.dataExchanges.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings:
    parameters: *ref_1
    get:
      description: Lists all listings in a given project and location.
      operationId: analyticshub.projects.locations.dataExchanges.listings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListListingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: listingId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:
    parameters: *ref_1
    get:
      description: Gets the details of a listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:subscribe:
    parameters: *ref_1
    post:
      description: >-
        Subscribes to a listing. Currently, with Analytics Hub, you can create
        listings that reference only BigQuery datasets. Upon subscription to a
        listing for a BigQuery dataset, Analytics Hub creates a linked dataset
        in the subscriber's project.
      operationId: analyticshub.projects.locations.dataExchanges.listings.subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeListingRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeListingResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:listSubscriptions:
    parameters: *ref_1
    get:
      description: Lists all subscriptions on a given Data Exchange or Listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.listSubscriptions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSharedResourceSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeletedSubscriptions
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.listings.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.listings.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: Returns the permissions that a caller has.
      operationId: >-
        analyticshub.projects.locations.dataExchanges.listings.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:refresh:
    parameters: *ref_1
    post:
      description: >-
        Refreshes a Subscription to a Data Exchange. A Data Exchange can become
        stale when a publisher adds or removes data. This is a long-running
        operation as it may create many linked datasets.
      operationId: analyticshub.projects.locations.subscriptions.refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshSubscriptionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:
    parameters: *ref_1
    get:
      description: Gets the details of a Subscription.
      operationId: analyticshub.projects.locations.subscriptions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a subscription.
      operationId: analyticshub.projects.locations.subscriptions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/subscriptions:
    parameters: *ref_1
    get:
      description: Lists all subscriptions in a given project and location.
      operationId: analyticshub.projects.locations.subscriptions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:revoke:
    parameters: *ref_1
    post:
      description: Revokes a given subscription.
      operationId: analyticshub.projects.locations.subscriptions.revoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSubscriptionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeSubscriptionResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets the IAM policy.
      operationId: analyticshub.projects.locations.subscriptions.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the IAM policy.
      operationId: analyticshub.projects.locations.subscriptions.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/dataExchanges:
    parameters: *ref_1
    get:
      description: >-
        Lists all data exchanges from projects in a given organization and
        location.
      operationId: analyticshub.organizations.locations.dataExchanges.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrgDataExchangesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
