openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Analytics Hub API
  description: Exchange data and analytics assets securely and efficiently.
  version: v1
  x-discovery-doc-revision: '20230808'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://cloud.google.com/bigquery/docs/analytics-hub-introduction'
servers:
  - url: 'https://analyticshub.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/bigquery': View and manage your data in Google BigQuery and see the email address for your Google Account
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ListOrgDataExchangesResponse:
      description: Message for response to listing data exchanges in an organization and location.
      type: object
      properties:
        dataExchanges:
          description: The list of data exchanges.
          items:
            $ref: '#/components/schemas/DataExchange'
          type: array
        nextPageToken:
          description: A token to request the next page of results.
          type: string
      id: ListOrgDataExchangesResponse
    RevokeSubscriptionResponse:
      id: RevokeSubscriptionResponse
      properties: {}
      description: Message for response when you revoke a subscription.
      type: object
    SubscribeDataExchangeResponse:
      id: SubscribeDataExchangeResponse
      description: Message for response when you subscribe to a Data Exchange.
      properties:
        subscription:
          $ref: '#/components/schemas/Subscription'
          description: Subscription object created from this subscribe action.
      type: object
    DcrExchangeConfig:
      id: DcrExchangeConfig
      type: object
      properties: {}
      description: 'Data Clean Room (DCR), used for privacy-safe and secured data sharing.'
    ListDataExchangesResponse:
      description: Message for response to the list of data exchanges.
      id: ListDataExchangesResponse
      properties:
        nextPageToken:
          type: string
          description: A token to request the next page of results.
        dataExchanges:
          description: The list of data exchanges.
          items:
            $ref: '#/components/schemas/DataExchange'
          type: array
      type: object
    ListSubscriptionsResponse:
      properties:
        nextPageToken:
          description: Next page token.
          type: string
        subscriptions:
          items:
            $ref: '#/components/schemas/Subscription'
          description: The list of subscriptions.
          type: array
      type: object
      id: ListSubscriptionsResponse
      description: Message for response to the listing of subscriptions.
    DataProvider:
      type: object
      properties:
        name:
          description: Optional. Name of the data provider.
          type: string
        primaryContact:
          description: 'Optional. Email or URL of the data provider. Max Length: 1000 bytes.'
          type: string
      id: DataProvider
      description: Contains details of the data provider.
    RestrictedExportConfig:
      properties:
        restrictDirectTableAccess:
          readOnly: true
          description: 'Output only. If true, restrict direct table access(read api/tabledata.list) on linked table.'
          type: boolean
        enabled:
          description: 'Optional. If true, enable restricted export.'
          type: boolean
        restrictQueryResult:
          type: boolean
          description: 'Optional. If true, restrict export of query result derived from restricted linked dataset table.'
      type: object
      id: RestrictedExportConfig
      description: 'Restricted export config, used to configure restricted export on linked dataset.'
    DataExchange:
      properties:
        description:
          description: 'Optional. Description of the data exchange. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes.'
          type: string
        listingCount:
          type: integer
          format: int32
          readOnly: true
          description: Output only. Number of listings contained in the data exchange.
        icon:
          format: byte
          type: string
          description: 'Optional. Base64 encoded image representing the data exchange. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the content of the fields are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire.'
        documentation:
          description: Optional. Documentation describing the data exchange.
          type: string
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the data exchange. e.g. `projects/myproject/locations/US/dataExchanges/123`.
        primaryContact:
          type: string
          description: 'Optional. Email or URL of the primary point of contact of the data exchange. Max Length: 1000 bytes.'
        displayName:
          description: 'Required. Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&) and must not start or end with spaces. Default value is an empty string. Max length: 63 bytes.'
          type: string
        sharingEnvironmentConfig:
          $ref: '#/components/schemas/SharingEnvironmentConfig'
          description: Required. Configurable data sharing environment option for a data exchange.
      description: 'A data exchange is a container that lets you share data. Along with the descriptive information about the data exchange, it contains listings that reference shared datasets.'
      id: DataExchange
      type: object
    SharingEnvironmentConfig:
      id: SharingEnvironmentConfig
      properties:
        dcrExchangeConfig:
          $ref: '#/components/schemas/DcrExchangeConfig'
          description: 'Data Clean Room (DCR), used for privacy-safe and secured data sharing.'
        defaultExchangeConfig:
          $ref: '#/components/schemas/DefaultExchangeConfig'
          description: 'Default Analytics Hub data exchange, used for secured data sharing.'
      type: object
      description: Sharing environment is a behavior model for sharing data within a data exchange. This option is configurable for a data exchange.
    TestIamPermissionsRequest:
      properties:
        permissions:
          type: array
          items:
            type: string
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
      type: object
      description: Request message for `TestIamPermissions` method.
      id: TestIamPermissionsRequest
    SubscribeListingRequest:
      description: Message for subscribing to a listing.
      id: SubscribeListingRequest
      properties:
        destinationDataset:
          description: BigQuery destination dataset to create for the subscriber.
          $ref: '#/components/schemas/DestinationDataset'
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      type: object
      id: Operation
    ListSharedResourceSubscriptionsResponse:
      properties:
        sharedResourceSubscriptions:
          description: The list of subscriptions.
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
        nextPageToken:
          description: Next page token.
          type: string
      description: Message for response to the listing of shared resource subscriptions.
      type: object
      id: ListSharedResourceSubscriptionsResponse
    SetIamPolicyRequest:
      type: object
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
      properties:
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
        updateMask:
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
    AuditConfig:
      id: AuditConfig
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
        service:
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
          type: string
      type: object
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
    Publisher:
      properties:
        name:
          description: Optional. Name of the listing publisher.
          type: string
        primaryContact:
          type: string
          description: 'Optional. Email or URL of the listing publisher. Max Length: 1000 bytes.'
      type: object
      description: Contains details of the listing publisher.
      id: Publisher
    RefreshSubscriptionResponse:
      description: Message for response when you refresh a subscription.
      properties:
        subscription:
          description: The refreshed subscription resource.
          $ref: '#/components/schemas/Subscription'
      id: RefreshSubscriptionResponse
      type: object
    RefreshSubscriptionRequest:
      type: object
      description: Message for refreshing a subscription.
      properties: {}
      id: RefreshSubscriptionRequest
    Listing:
      type: object
      properties:
        state:
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
          description: Output only. Current state of the listing.
          enumDescriptions:
            - Default value. This value is unused.
            - Subscribable state. Users with dataexchange.listings.subscribe permission can subscribe to this listing.
        categories:
          type: array
          description: Optional. Categories of the listing. Up to two categories are allowed.
          items:
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
            enum:
              - CATEGORY_UNSPECIFIED
              - CATEGORY_OTHERS
              - CATEGORY_ADVERTISING_AND_MARKETING
              - CATEGORY_COMMERCE
              - CATEGORY_CLIMATE_AND_ENVIRONMENT
              - CATEGORY_DEMOGRAPHICS
              - CATEGORY_ECONOMICS
              - CATEGORY_EDUCATION
              - CATEGORY_ENERGY
              - CATEGORY_FINANCIAL
              - CATEGORY_GAMING
              - CATEGORY_GEOSPATIAL
              - CATEGORY_HEALTHCARE_AND_LIFE_SCIENCE
              - CATEGORY_MEDIA
              - CATEGORY_PUBLIC_SECTOR
              - CATEGORY_RETAIL
              - CATEGORY_SPORTS
              - CATEGORY_SCIENCE_AND_RESEARCH
              - CATEGORY_TRANSPORTATION_AND_LOGISTICS
              - CATEGORY_TRAVEL_AND_TOURISM
            type: string
        documentation:
          type: string
          description: Optional. Documentation describing the listing.
        name:
          description: Output only. The resource name of the listing. e.g. `projects/myproject/locations/US/dataExchanges/123/listings/456`
          readOnly: true
          type: string
        publisher:
          description: Optional. Details of the publisher who owns the listing and who can share the source data.
          $ref: '#/components/schemas/Publisher'
        primaryContact:
          description: 'Optional. Email or URL of the primary point of contact of the listing. Max Length: 1000 bytes.'
          type: string
        displayName:
          type: string
          description: 'Required. Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&) and can''t start or end with spaces. Default value is an empty string. Max length: 63 bytes.'
        dataProvider:
          $ref: '#/components/schemas/DataProvider'
          description: Optional. Details of the data provider who owns the source data.
        description:
          description: 'Optional. Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes.'
          type: string
        restrictedExportConfig:
          $ref: '#/components/schemas/RestrictedExportConfig'
          description: 'Optional. If set, restricted export configuration will be propagated and enforced on the linked dataset.'
        icon:
          format: byte
          description: 'Optional. Base64 encoded image representing the listing. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the contents of the field are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire.'
          type: string
        requestAccess:
          description: 'Optional. Email or URL of the request access of the listing. Subscribers can use this reference to request access. Max Length: 1000 bytes.'
          type: string
        bigqueryDataset:
          description: Required. Shared dataset i.e. BigQuery dataset source.
          $ref: '#/components/schemas/BigQueryDatasetSource'
      id: Listing
      description: A listing is what gets published into a data exchange that a subscriber can subscribe to. It contains a reference to the data source along with descriptive information that will help subscribers find and subscribe the data.
    LinkedResource:
      id: LinkedResource
      type: object
      properties:
        linkedDataset:
          type: string
          description: 'Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linked_dataset'
          readOnly: true
      description: Reference to a linked resource tracked by this Subscription.
    DestinationDataset:
      type: object
      description: Defines the destination bigquery dataset.
      id: DestinationDataset
      properties:
        labels:
          description: 'Optional. The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See https://cloud.google.com/resource-manager/docs/creating-managing-labels for more information.'
          type: object
          additionalProperties:
            type: string
        friendlyName:
          type: string
          description: Optional. A descriptive name for the dataset.
        location:
          type: string
          description: 'Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations.'
        datasetReference:
          $ref: '#/components/schemas/DestinationDatasetReference'
          description: Required. A reference that identifies the destination dataset.
        description:
          type: string
          description: Optional. A user-friendly description of the dataset.
    DefaultExchangeConfig:
      type: object
      description: 'Default Analytics Hub data exchange, used for secured data sharing.'
      properties: {}
      id: DefaultExchangeConfig
    DestinationDatasetReference:
      description: Contains the reference that identifies a destination bigquery dataset.
      id: DestinationDatasetReference
      properties:
        datasetId:
          type: string
          description: 'Required. A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.'
        projectId:
          description: Required. The ID of the project containing this dataset.
          type: string
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      id: Empty
      type: object
    ListListingsResponse:
      type: object
      description: Message for response to the list of Listings.
      id: ListListingsResponse
      properties:
        nextPageToken:
          description: A token to request the next page of results.
          type: string
        listings:
          description: The list of Listing.
          type: array
          items:
            $ref: '#/components/schemas/Listing'
    Policy:
      id: Policy
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        etag:
          format: byte
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
        version:
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
    SubscribeDataExchangeRequest:
      properties:
        subscription:
          description: Required. Name of the subscription to create. e.g. `subscription1`
          type: string
        subscriberContact:
          type: string
          description: Email of the subscriber.
        destination:
          type: string
          description: Required. The parent resource path of the Subscription. e.g. `projects/subscriberproject/locations/US`
      type: object
      id: SubscribeDataExchangeRequest
      description: Message for subscribing to a Data Exchange.
    GetIamPolicyRequest:
      id: GetIamPolicyRequest
      type: object
      properties:
        options:
          description: 'OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.'
          $ref: '#/components/schemas/GetPolicyOptions'
      description: Request message for `GetIamPolicy` method.
    Subscription:
      type: object
      id: Subscription
      properties:
        lastModifyTime:
          format: google-datetime
          type: string
          description: Output only. Timestamp when the subscription was last modified.
          readOnly: true
        dataExchange:
          type: string
          readOnly: true
          description: Output only. Resource name of the source Data Exchange. e.g. projects/123/locations/US/dataExchanges/456
        linkedDatasetMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinkedResource'
          description: 'Output only. Map of listing resource names to associated linked resource, e.g. projects/123/locations/US/dataExchanges/456/listings/789 -> projects/123/datasets/my_dataset For listing-level subscriptions, this is a map of size 1. Only contains values if state == STATE_ACTIVE.'
          readOnly: true
        name:
          description: Output only. The resource name of the subscription. e.g. `projects/myproject/locations/US/subscriptions/123`.
          readOnly: true
          type: string
        organizationId:
          type: string
          readOnly: true
          description: Output only. Organization of the project this subscription belongs to.
        state:
          readOnly: true
          description: Output only. Current state of the subscription.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - STATE_ACTIVE
            - STATE_STALE
            - STATE_INACTIVE
          enumDescriptions:
            - Default value. This value is unused.
            - This subscription is active and the data is accessible.
            - The data referenced by this subscription is out of date and should be refreshed. This can happen when a data provider adds or removes datasets.
            - This subscription has been cancelled or revoked and the data is no longer accessible.
        creationTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Timestamp when the subscription was created.
        listing:
          type: string
          description: Output only. Resource name of the source Listing. e.g. projects/123/locations/US/dataExchanges/456/listings/789
          readOnly: true
        organizationDisplayName:
          type: string
          readOnly: true
          description: Output only. Display name of the project of this subscription.
        subscriberContact:
          readOnly: true
          type: string
          description: Output only. Email of the subscriber.
      description: 'A subscription represents a subscribers'' access to a particular set of published data. It contains references to associated listings, data exchanges, and linked datasets. TODO(b/267528977) Consider port the new resource to v1beta1 and dataexchange APIs.'
    BigQueryDatasetSource:
      id: BigQueryDatasetSource
      description: 'A reference to a shared dataset. It is an existing BigQuery dataset with a collection of objects such as tables and views that you want to share with subscribers. When subscriber''s subscribe to a listing, Analytics Hub creates a linked dataset in the subscriber''s project. A Linked dataset is an opaque, read-only BigQuery dataset that serves as a _symbolic link_ to a shared dataset.'
      properties:
        dataset:
          description: Resource name of the dataset source for this listing. e.g. `projects/myproject/datasets/123`
          type: string
      type: object
    AuditLogConfig:
      id: AuditLogConfig
      properties:
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          description: The log type that this config enables.
          type: string
        exemptedMembers:
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          type: array
      type: object
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
    Status:
      properties:
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
          format: int32
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        details:
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      type: object
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    Expr:
      properties:
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        location:
          type: string
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
      id: Expr
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
    SubscribeListingResponse:
      id: SubscribeListingResponse
      description: Message for response when you subscribe to a listing.
      properties:
        subscription:
          description: Subscription object created from this subscribe action.
          $ref: '#/components/schemas/Subscription'
      type: object
    OperationMetadata:
      type: object
      properties:
        apiVersion:
          type: string
          readOnly: true
          description: Output only. API version used to start the operation.
        cancelRequested:
          type: boolean
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
        target:
          type: string
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
        statusDetail:
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
    Binding:
      description: 'Associates `members`, or principals, with a `role`.'
      type: object
      properties:
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
        members:
          type: array
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
      id: Binding
    RevokeSubscriptionRequest:
      type: object
      description: Message for revoking a subscription.
      id: RevokeSubscriptionRequest
      properties: {}
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      id: GetPolicyOptions
      properties:
        requestedPolicyVersion:
          format: int32
          description: 'Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
      type: object
  parameters:
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
  x-stackQL-resources:
    subscriptions:
      id: google.analyticshub.subscriptions
      name: subscriptions
      title: Subscriptions
      methods:
        projects_locations_subscriptions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.subscriptions
        _projects_locations_subscriptions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_refresh:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}:refresh/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_subscriptions_revoke:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}:revoke/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/projects_locations_subscriptions_list'
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/projects_locations_subscriptions_get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/projects_locations_subscriptions_delete'
    listings:
      id: google.analyticshub.listings
      name: listings
      title: Listings
      methods:
        projects_locations_data_exchanges_listings_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_subscribe:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:subscribe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.listings
        _projects_locations_data_exchanges_listings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_get'
          - $ref: '#/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/listings/methods/projects_locations_data_exchanges_listings_delete'
    listings_iam_policies:
      id: google.analyticshub.listings_iam_policies
      name: listings_iam_policies
      title: Listings Iam Policies
      methods:
        projects_locations_data_exchanges_listings_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_listings_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/listings_iam_policies/methods/projects_locations_data_exchanges_listings_get_iam_policy'
        insert: []
        update: []
        delete: []
    listings_subscriptions:
      id: google.analyticshub.listings_subscriptions
      name: listings_subscriptions
      title: Listings Subscriptions
      methods:
        projects_locations_data_exchanges_listings_list_subscriptions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:listSubscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sharedResourceSubscriptions
        _projects_locations_data_exchanges_listings_list_subscriptions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}~1listings~1{listingsId}:listSubscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/listings_subscriptions/methods/projects_locations_data_exchanges_listings_list_subscriptions'
        insert: []
        update: []
        delete: []
    data_exchanges_iam_policies:
      id: google.analyticshub.data_exchanges_iam_policies
      name: data_exchanges_iam_policies
      title: Data Exchanges Iam Policies
      methods:
        projects_locations_data_exchanges_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_exchanges_iam_policies/methods/projects_locations_data_exchanges_get_iam_policy'
        insert: []
        update: []
        delete: []
    data_exchanges:
      id: google.analyticshub.data_exchanges
      name: data_exchanges
      title: Data Exchanges
      methods:
        projects_locations_data_exchanges_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_subscribe:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:subscribe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataExchanges
        _projects_locations_data_exchanges_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_exchanges_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_data_exchanges_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1dataExchanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataExchanges
        _organizations_locations_data_exchanges_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1dataExchanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_get'
          - $ref: '#/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_list'
          - $ref: '#/components/x-stackQL-resources/data_exchanges/methods/organizations_locations_data_exchanges_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_exchanges/methods/projects_locations_data_exchanges_delete'
    data_exchanges_subscriptions:
      id: google.analyticshub.data_exchanges_subscriptions
      name: data_exchanges_subscriptions
      title: Data Exchanges Subscriptions
      methods:
        projects_locations_data_exchanges_list_subscriptions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:listSubscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sharedResourceSubscriptions
        _projects_locations_data_exchanges_list_subscriptions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataExchanges~1{dataExchangesId}:listSubscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_exchanges_subscriptions/methods/projects_locations_data_exchanges_list_subscriptions'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/subscriptions':
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Lists all subscriptions in a given project and location.
      operationId: analyticshub.projects.locations.subscriptions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: projects_locations_subscriptions_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.subscriptions
  '/v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:refresh':
    parameters: *ref_1
    post:
      description: Refreshes a Subscription to a Data Exchange. A Data Exchange can become stale when a publisher adds or removes data. This is a long-running operation as it may create many linked datasets.
      operationId: analyticshub.projects.locations.subscriptions.refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshSubscriptionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: projects_locations_subscriptions_refresh
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}':
    parameters: *ref_1
    delete:
      description: Deletes a subscription.
      operationId: analyticshub.projects.locations.subscriptions.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: projects_locations_subscriptions_delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a Subscription.
      operationId: analyticshub.projects.locations.subscriptions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: projects_locations_subscriptions_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:revoke':
    parameters: *ref_1
    post:
      description: Revokes a given subscription.
      operationId: analyticshub.projects.locations.subscriptions.revoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSubscriptionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeSubscriptionResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: projects_locations_subscriptions_revoke
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}':
    parameters: *ref_1
    get:
      description: Gets the details of a listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_get
      x-stackQL-verb: select
    patch:
      description: Updates an existing listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.listings.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_listings_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:subscribe':
    parameters: *ref_1
    post:
      description: 'Subscribes to a listing. Currently, with Analytics Hub, you can create listings that reference only BigQuery datasets. Upon subscription to a listing for a BigQuery dataset, Analytics Hub creates a linked dataset in the subscriber''s project.'
      operationId: analyticshub.projects.locations.dataExchanges.listings.subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeListingRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeListingResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_subscribe
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: Returns the permissions that a caller has.
      operationId: analyticshub.projects.locations.dataExchanges.listings.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_listings_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings':
    parameters: *ref_1
    get:
      description: Lists all listings in a given project and location.
      operationId: analyticshub.projects.locations.dataExchanges.listings.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListListingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.listings
    post:
      description: Creates a new listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: listingId
          schema:
            type: string
      x-stackQL-resource: listings
      x-stackQL-method: projects_locations_data_exchanges_listings_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:listSubscriptions':
    parameters: *ref_1
    get:
      description: Lists all subscriptions on a given Data Exchange or Listing.
      operationId: analyticshub.projects.locations.dataExchanges.listings.listSubscriptions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSharedResourceSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeletedSubscriptions
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: listings_subscriptions
      x-stackQL-method: projects_locations_data_exchanges_listings_list_subscriptions
      x-stackQL-verb: select
      x-stackQL-objectKey: $.sharedResourceSubscriptions
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.listings.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: path
          name: listingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: listings_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_listings_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}':
    parameters: *ref_1
    patch:
      description: Updates an existing data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataExchange'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExchange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_patch
      x-stackQL-verb: exec
    get:
      description: Gets the details of a data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExchange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_get
      x-stackQL-verb: select
    delete:
      description: Deletes an existing data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:subscribe':
    parameters: *ref_1
    post:
      description: Creates a Subscription to a Data Exchange. This is a long-running operation as it will create one or more linked datasets.
      operationId: analyticshub.projects.locations.dataExchanges.subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeDataExchangeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_subscribe
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: Returns the permissions that a caller has.
      operationId: analyticshub.projects.locations.dataExchanges.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:listSubscriptions':
    parameters: *ref_1
    get:
      description: Lists all subscriptions on a given Data Exchange or Listing.
      operationId: analyticshub.projects.locations.dataExchanges.listSubscriptions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSharedResourceSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: includeDeletedSubscriptions
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: data_exchanges_subscriptions
      x-stackQL-method: projects_locations_data_exchanges_list_subscriptions
      x-stackQL-verb: select
      x-stackQL-objectKey: $.sharedResourceSubscriptions
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges':
    parameters: *ref_1
    get:
      description: Lists all data exchanges in a given project and location.
      operationId: analyticshub.projects.locations.dataExchanges.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataExchangesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.dataExchanges
    post:
      description: Creates a new data exchange.
      operationId: analyticshub.projects.locations.dataExchanges.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataExchange'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExchange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataExchangeId
          schema:
            type: string
      x-stackQL-resource: data_exchanges
      x-stackQL-method: projects_locations_data_exchanges_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the IAM policy.
      operationId: analyticshub.projects.locations.dataExchanges.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataExchangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_exchanges_iam_policies
      x-stackQL-method: projects_locations_data_exchanges_set_iam_policy
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/dataExchanges':
    parameters: *ref_1
    get:
      description: Lists all data exchanges from projects in a given organization and location.
      operationId: analyticshub.organizations.locations.dataExchanges.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrgDataExchangesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: data_exchanges
      x-stackQL-method: organizations_locations_data_exchanges_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.dataExchanges
