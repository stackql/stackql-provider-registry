openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Recommender API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240519'
  x-generated-date: '2024-06-03'
externalDocs:
  url: https://cloud.google.com/recommender/docs/
servers:
  - url: https://recommender.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleTypeMoney:
      type: object
      description: Represents an amount of money with its currency type.
      id: GoogleTypeMoney
      properties:
        currencyCode:
          type: string
          description: The three-letter currency code defined in ISO 4217.
        units:
          type: string
          format: int64
          description: >-
            The whole units of the amount. For example if `currencyCode` is
            `"USD"`, then 1 unit is one US dollar.
        nanos:
          format: int32
          type: integer
          description: >-
            Number of nano (10^-9) units of the amount. The value must be
            between -999,999,999 and +999,999,999 inclusive. If `units` is
            positive, `nanos` must be positive or zero. If `units` is zero,
            `nanos` can be positive, zero, or negative. If `units` is negative,
            `nanos` must be negative or zero. For example $-1.75 is represented
            as `units`=-1 and `nanos`=-750,000,000.
    GoogleCloudRecommenderV1SustainabilityProjection:
      type: object
      id: GoogleCloudRecommenderV1SustainabilityProjection
      description: >-
        Contains metadata about how much sustainability a recommendation can
        save or incur.
      properties:
        kgCO2e:
          format: double
          description: >-
            Carbon Footprint generated in kg of CO2 equivalent. Chose kg_c_o2e
            so that the name renders correctly in camelCase (kgCO2e).
          type: number
        duration:
          type: string
          description: Duration for which this sustainability applies.
          format: google-duration
    GoogleCloudRecommenderV1MarkRecommendationFailedRequest:
      properties:
        etag:
          description: >-
            Required. Fingerprint of the Recommendation. Provides optimistic
            locking.
          type: string
        stateMetadata:
          additionalProperties:
            type: string
          description: >-
            State properties to include with this state. Overwrites any existing
            `state_metadata`. Keys must match the regex `/^a-z0-9{0,62}$/`.
            Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.
          type: object
      type: object
      id: GoogleCloudRecommenderV1MarkRecommendationFailedRequest
      description: Request for the `MarkRecommendationFailed` Method.
    GoogleCloudRecommenderV1RecommendationInsightReference:
      properties:
        insight:
          description: >-
            Insight resource name, e.g.
            projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/insights/[INSIGHT_ID]
          type: string
      id: GoogleCloudRecommenderV1RecommendationInsightReference
      description: Reference to an associated insight.
      type: object
    GoogleCloudRecommenderV1ListInsightsResponse:
      description: Response to the `ListInsights` method.
      type: object
      properties:
        insights:
          description: The set of insights for the `parent` resource.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
        nextPageToken:
          type: string
          description: >-
            A token that can be used to request the next page of results. This
            field is empty if there are no additional results.
      id: GoogleCloudRecommenderV1ListInsightsResponse
    GoogleCloudRecommenderV1Insight:
      type: object
      properties:
        category:
          enum:
            - CATEGORY_UNSPECIFIED
            - COST
            - SECURITY
            - PERFORMANCE
            - MANAGEABILITY
            - SUSTAINABILITY
            - RELIABILITY
          description: Category being targeted by the insight.
          enumDescriptions:
            - Unspecified category.
            - The insight is related to cost.
            - The insight is related to security.
            - The insight is related to performance.
            - This insight is related to manageability.
            - The insight is related to sustainability.
            - This insight is related to reliability.
          type: string
        associatedRecommendations:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecommenderV1InsightRecommendationReference
          type: array
          description: Recommendations derived from this insight.
        severity:
          enum:
            - SEVERITY_UNSPECIFIED
            - LOW
            - MEDIUM
            - HIGH
            - CRITICAL
          type: string
          description: Insight's severity.
          enumDescriptions:
            - Insight has unspecified severity.
            - Insight has low severity.
            - Insight has medium severity.
            - Insight has high severity.
            - Insight has critical severity.
        etag:
          description: >-
            Fingerprint of the Insight. Provides optimistic locking when
            updating states.
          type: string
        targetResources:
          items:
            type: string
          description: Fully qualified resource names that this insight is targeting.
          type: array
        stateInfo:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightStateInfo'
          description: Information state and metadata.
        content:
          description: >-
            A struct of custom fields to explain the insight. Example:
            "grantedPermissionsCount": "1000"
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
        description:
          type: string
          description: >-
            Free-form human readable summary in English. The maximum length is
            500 characters.
        insightSubtype:
          description: >-
            Insight subtype. Insight content schema will be stable for a given
            subtype.
          type: string
        lastRefreshTime:
          description: Timestamp of the latest data used to generate the insight.
          type: string
          format: google-datetime
        observationPeriod:
          description: >-
            Observation period that led to the insight. The source data used to
            generate the insight ends at last_refresh_time and begins at
            (last_refresh_time - observation_period).
          type: string
          format: google-duration
        name:
          description: Identifier. Name of the insight.
          type: string
      id: GoogleCloudRecommenderV1Insight
      description: >-
        An insight along with the information used to derive the insight. The
        insight may have associated recommendations as well.
    GoogleCloudRecommenderV1RecommendationContent:
      id: GoogleCloudRecommenderV1RecommendationContent
      properties:
        overview:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: Condensed overview information about the recommendation.
          type: object
        operationGroups:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1OperationGroup'
          type: array
          description: >-
            Operations to one or more Google Cloud resources grouped in such a
            way that, all operations within one group are expected to be
            performed atomically and in an order.
      description: Contains what resources are changing and how they are changing.
      type: object
    GoogleCloudRecommenderV1InsightStateInfo:
      type: object
      description: Information related to insight state.
      properties:
        stateMetadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            A map of metadata for the state, provided by user or automations
            systems.
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - ACCEPTED
            - DISMISSED
          description: Insight state.
          type: string
          enumDescriptions:
            - Unspecified state.
            - >-
              Insight is active. Content for ACTIVE insights can be updated by
              Google. ACTIVE insights can be marked DISMISSED OR ACCEPTED.
            - >-
              Some action has been taken based on this insight. Insights become
              accepted when a recommendation derived from the insight has been
              marked CLAIMED, SUCCEEDED, or FAILED. ACTIVE insights can also be
              marked ACCEPTED explicitly. Content for ACCEPTED insights is
              immutable. ACCEPTED insights can only be marked ACCEPTED (which
              may update state metadata).
            - >-
              Insight is dismissed. Content for DISMISSED insights can be
              updated by Google. DISMISSED insights can be marked as ACTIVE.
      id: GoogleCloudRecommenderV1InsightStateInfo
    GoogleCloudRecommenderV1Impact:
      properties:
        costProjection:
          description: Use with CategoryType.COST
          $ref: '#/components/schemas/GoogleCloudRecommenderV1CostProjection'
        category:
          enumDescriptions:
            - Default unspecified category. Don't use directly.
            - Indicates a potential increase or decrease in cost.
            - Indicates a potential increase or decrease in security.
            - Indicates a potential increase or decrease in performance.
            - Indicates a potential increase or decrease in manageability.
            - Indicates a potential increase or decrease in sustainability.
            - Indicates a potential increase or decrease in reliability.
          description: Category that is being targeted.
          type: string
          enum:
            - CATEGORY_UNSPECIFIED
            - COST
            - SECURITY
            - PERFORMANCE
            - MANAGEABILITY
            - SUSTAINABILITY
            - RELIABILITY
        sustainabilityProjection:
          $ref: >-
            #/components/schemas/GoogleCloudRecommenderV1SustainabilityProjection
          description: Use with CategoryType.SUSTAINABILITY
        reliabilityProjection:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1ReliabilityProjection'
          description: Use with CategoryType.RELIABILITY
        securityProjection:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1SecurityProjection'
          description: Use with CategoryType.SECURITY
      id: GoogleCloudRecommenderV1Impact
      description: Contains the impact a recommendation can have for a given category.
      type: object
    GoogleCloudRecommenderV1SecurityProjection:
      description: Contains various ways of describing the impact on Security.
      id: GoogleCloudRecommenderV1SecurityProjection
      type: object
      properties:
        details:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: >-
            Additional security impact details that is provided by the
            recommender.
    GoogleCloudRecommenderV1Operation:
      id: GoogleCloudRecommenderV1Operation
      properties:
        value:
          description: >-
            Value for the `path` field. Will be set for actions:'add'/'replace'.
            Maybe set for action: 'test'. Either this or `value_matcher` will be
            set for 'test' operation. An exact match must be performed.
          type: any
        pathValueMatchers:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1ValueMatcher'
          type: object
          description: >-
            Similar to path_filters, this contains set of filters to apply if
            `path` field refers to array elements. This is meant to support
            value matching beyond exact match. To perform exact match, use
            path_filters. When both path_filters and path_value_matchers are
            set, an implicit AND must be performed.
        action:
          type: string
          description: >-
            Type of this operation. Contains one of 'add', 'remove', 'replace',
            'move', 'copy', 'test' and custom operations. This field is
            case-insensitive and always populated.
        path:
          description: >-
            Path to the target field being operated on. If the operation is at
            the resource level, then path should be "/". This field is always
            populated.
          type: string
        resourceType:
          description: >-
            Type of GCP resource being modified/tested. This field is always
            populated. Example: cloudresourcemanager.googleapis.com/Project,
            compute.googleapis.com/Instance
          type: string
        valueMatcher:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1ValueMatcher'
          description: >-
            Can be set for action 'test' for advanced matching for the value of
            'path' field. Either this or `value` will be set for 'test'
            operation.
        pathFilters:
          additionalProperties:
            type: any
          description: >-
            Set of filters to apply if `path` refers to array elements or nested
            array elements in order to narrow down to a single unique element
            that is being tested/modified. This is intended to be an exact match
            per filter. To perform advanced matching, use path_value_matchers. *
            Example: ``` { "/versions/*/name" : "it-123"
            "/versions/*/targetSize/percent": 20 } ``` * Example: ``` {
            "/bindings/*/role": "roles/owner" "/bindings/*/condition" : null }
            ``` * Example: ``` { "/bindings/*/role": "roles/owner"
            "/bindings/*/members/*" : ["x@example.com", "y@example.com"] } ```
            When both path_filters and path_value_matchers are set, an implicit
            AND must be performed.
          type: object
        resource:
          type: string
          description: >-
            Contains the fully qualified resource name. This field is always
            populated. ex: //cloudresourcemanager.googleapis.com/projects/foo.
        sourceResource:
          type: string
          description: >-
            Can be set with action 'copy' to copy resource configuration across
            different resources of the same type. Example: A resource clone can
            be done via action = 'copy', path = "/", from = "/", source_resource
            = and resource_name = . This field is empty for all other values of
            `action`.
        sourcePath:
          description: >-
            Can be set with action 'copy' or 'move' to indicate the source field
            within resource or source_resource, ignored if provided for other
            operation types.
          type: string
      description: >-
        Contains an operation for a resource loosely based on the JSON-PATCH
        format with support for: * Custom filters for describing partial array
        patch. * Extended path values for describing nested arrays. * Custom
        fields for describing the resource for which the operation is being
        described. * Allows extension to custom operations not natively
        supported by RFC6902. See https://tools.ietf.org/html/rfc6902 for
        details on the original RFC.
      type: object
    GoogleCloudRecommenderV1ReliabilityProjection:
      type: object
      description: Contains information on the impact of a reliability recommendation.
      id: GoogleCloudRecommenderV1ReliabilityProjection
      properties:
        risks:
          description: Reliability risks mitigated by this recommendation.
          items:
            enum:
              - RISK_TYPE_UNSPECIFIED
              - SERVICE_DISRUPTION
              - DATA_LOSS
              - ACCESS_DENY
            type: string
            enumDescriptions:
              - Default unspecified risk. Don't use directly.
              - Potential service downtime.
              - Potential data loss.
              - >-
                Potential access denial. The service is still up but some or all
                clients can't access it.
          type: array
        details:
          type: object
          description: Per-recommender projection.
          additionalProperties:
            description: Properties of the object.
            type: any
    GoogleCloudRecommenderV1MarkRecommendationDismissedRequest:
      type: object
      description: Request for the `MarkRecommendationDismissed` Method.
      id: GoogleCloudRecommenderV1MarkRecommendationDismissedRequest
      properties:
        etag:
          description: Fingerprint of the Recommendation. Provides optimistic locking.
          type: string
    GoogleCloudRecommenderV1RecommenderGenerationConfig:
      id: GoogleCloudRecommenderV1RecommenderGenerationConfig
      properties:
        params:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: >-
            Parameters for this RecommenderGenerationConfig. These configs can
            be used by or are applied to all subtypes.
          type: object
      type: object
      description: >-
        A Configuration to customize the generation of recommendations. Eg,
        customizing the lookback period considered when generating a
        recommendation.
    GoogleCloudRecommenderV1MarkRecommendationClaimedRequest:
      id: GoogleCloudRecommenderV1MarkRecommendationClaimedRequest
      type: object
      properties:
        etag:
          type: string
          description: >-
            Required. Fingerprint of the Recommendation. Provides optimistic
            locking.
        stateMetadata:
          additionalProperties:
            type: string
          description: >-
            State properties to include with this state. Overwrites any existing
            `state_metadata`. Keys must match the regex `/^a-z0-9{0,62}$/`.
            Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.
          type: object
      description: Request for the `MarkRecommendationClaimed` Method.
    GoogleCloudRecommenderV1InsightTypeConfig:
      type: object
      properties:
        etag:
          type: string
          description: >-
            Fingerprint of the InsightTypeConfig. Provides optimistic locking
            when updating.
        updateTime:
          type: string
          format: google-datetime
          description: Last time when the config was updated.
        name:
          description: >-
            Identifier. Name of insight type config. Eg,
            projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config
          type: string
        revisionId:
          type: string
          readOnly: true
          description: >-
            Output only. Immutable. The revision ID of the config. A new
            revision is committed whenever the config is changed in any way. The
            format is an 8-character hexadecimal string.
        annotations:
          type: object
          additionalProperties:
            type: string
          description: >-
            Allows clients to store small amounts of arbitrary data. Annotations
            must follow the Kubernetes syntax. The total size of all keys and
            values combined is limited to 256k. Key can have 2 segments: prefix
            (optional) and name (required), separated by a slash (/). Prefix
            must be a DNS subdomain. Name must be 63 characters or less, begin
            and end with alphanumerics, with dashes (-), underscores (_), dots
            (.), and alphanumerics between.
        displayName:
          type: string
          description: >-
            A user-settable field to provide a human-readable name to be used in
            user interfaces.
        insightTypeGenerationConfig:
          $ref: >-
            #/components/schemas/GoogleCloudRecommenderV1InsightTypeGenerationConfig
          description: >-
            InsightTypeGenerationConfig which configures the generation of
            insights for this insight type.
      description: Configuration for an InsightType.
      id: GoogleCloudRecommenderV1InsightTypeConfig
    GoogleCloudRecommenderV1ValueMatcher:
      id: GoogleCloudRecommenderV1ValueMatcher
      description: Contains various matching options for values for a GCP resource field.
      properties:
        matchesPattern:
          type: string
          description: >-
            To be used for full regex matching. The regular expression is using
            the Google RE2 syntax (https://github.com/google/re2/wiki/Syntax),
            so to be used with RE2::FullMatch
      type: object
    GoogleCloudRecommenderV1RecommenderConfig:
      id: GoogleCloudRecommenderV1RecommenderConfig
      type: object
      description: Configuration for a Recommender.
      properties:
        displayName:
          type: string
          description: >-
            A user-settable field to provide a human-readable name to be used in
            user interfaces.
        annotations:
          type: object
          additionalProperties:
            type: string
          description: >-
            Allows clients to store small amounts of arbitrary data. Annotations
            must follow the Kubernetes syntax. The total size of all keys and
            values combined is limited to 256k. Key can have 2 segments: prefix
            (optional) and name (required), separated by a slash (/). Prefix
            must be a DNS subdomain. Name must be 63 characters or less, begin
            and end with alphanumerics, with dashes (-), underscores (_), dots
            (.), and alphanumerics between.
        etag:
          type: string
          description: >-
            Fingerprint of the RecommenderConfig. Provides optimistic locking
            when updating.
        recommenderGenerationConfig:
          $ref: >-
            #/components/schemas/GoogleCloudRecommenderV1RecommenderGenerationConfig
          description: >-
            RecommenderGenerationConfig which configures the Generation of
            recommendations for this recommender.
        updateTime:
          type: string
          description: Last time when the config was updated.
          format: google-datetime
        revisionId:
          description: >-
            Output only. Immutable. The revision ID of the config. A new
            revision is committed whenever the config is changed in any way. The
            format is an 8-character hexadecimal string.
          readOnly: true
          type: string
        name:
          description: >-
            Identifier. Name of recommender config. Eg,
            projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config
          type: string
    GoogleCloudRecommenderV1ListRecommendationsResponse:
      properties:
        recommendations:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
          description: The set of recommendations for the `parent` resource.
          type: array
        nextPageToken:
          description: >-
            A token that can be used to request the next page of results. This
            field is empty if there are no additional results.
          type: string
      type: object
      description: Response to the `ListRecommendations` method.
      id: GoogleCloudRecommenderV1ListRecommendationsResponse
    GoogleCloudRecommenderV1InsightTypeGenerationConfig:
      type: object
      description: >-
        A configuration to customize the generation of insights. Eg, customizing
        the lookback period considered when generating a insight.
      properties:
        params:
          type: object
          description: >-
            Parameters for this InsightTypeGenerationConfig. These configs can
            be used by or are applied to all subtypes.
          additionalProperties:
            description: Properties of the object.
            type: any
      id: GoogleCloudRecommenderV1InsightTypeGenerationConfig
    GoogleCloudRecommenderV1OperationGroup:
      description: Group of operations that need to be performed atomically.
      id: GoogleCloudRecommenderV1OperationGroup
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1Operation'
          description: >-
            List of operations across one or more resources that belong to this
            group. Loosely based on RFC6902 and should be performed in the order
            they appear.
      type: object
    GoogleCloudRecommenderV1MarkRecommendationSucceededRequest:
      type: object
      id: GoogleCloudRecommenderV1MarkRecommendationSucceededRequest
      properties:
        etag:
          type: string
          description: >-
            Required. Fingerprint of the Recommendation. Provides optimistic
            locking.
        stateMetadata:
          additionalProperties:
            type: string
          type: object
          description: >-
            State properties to include with this state. Overwrites any existing
            `state_metadata`. Keys must match the regex `/^a-z0-9{0,62}$/`.
            Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.
      description: Request for the `MarkRecommendationSucceeded` Method.
    GoogleCloudRecommenderV1InsightRecommendationReference:
      id: GoogleCloudRecommenderV1InsightRecommendationReference
      properties:
        recommendation:
          type: string
          description: >-
            Recommendation resource name, e.g.
            projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/recommendations/[RECOMMENDATION_ID]
      type: object
      description: Reference to an associated recommendation.
    GoogleCloudRecommenderV1MarkInsightAcceptedRequest:
      description: Request for the `MarkInsightAccepted` method.
      id: GoogleCloudRecommenderV1MarkInsightAcceptedRequest
      type: object
      properties:
        etag:
          type: string
          description: Required. Fingerprint of the Insight. Provides optimistic locking.
        stateMetadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            Optional. State properties user wish to include with this state.
            Full replace of the current state_metadata.
    GoogleCloudRecommenderV1CostProjection:
      id: GoogleCloudRecommenderV1CostProjection
      type: object
      properties:
        costInLocalCurrency:
          $ref: '#/components/schemas/GoogleTypeMoney'
          description: >-
            The approximate cost savings in the billing account's local
            currency.
        duration:
          format: google-duration
          description: Duration for which this cost applies.
          type: string
        cost:
          description: >-
            An approximate projection on amount saved or amount incurred.
            Negative cost units indicate cost savings and positive cost units
            indicate increase. See google.type.Money documentation for
            positive/negative units. A user's permissions may affect whether the
            cost is computed using list prices or custom contract prices.
          $ref: '#/components/schemas/GoogleTypeMoney'
      description: >-
        Contains metadata about how much money a recommendation can save or
        incur.
    GoogleCloudRecommenderV1RecommendationStateInfo:
      description: Information for state. Contains state and metadata.
      type: object
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CLAIMED
            - SUCCEEDED
            - FAILED
            - DISMISSED
          description: The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED.
          type: string
          enumDescriptions:
            - Default state. Don't use directly.
            - >-
              Recommendation is active and can be applied. Recommendations
              content can be updated by Google. ACTIVE recommendations can be
              marked as CLAIMED, SUCCEEDED, or FAILED.
            - >-
              Recommendation is in claimed state. Recommendations content is
              immutable and cannot be updated by Google. CLAIMED recommendations
              can be marked as CLAIMED, SUCCEEDED, or FAILED.
            - >-
              Recommendation is in succeeded state. Recommendations content is
              immutable and cannot be updated by Google. SUCCEEDED
              recommendations can be marked as SUCCEEDED, or FAILED.
            - >-
              Recommendation is in failed state. Recommendations content is
              immutable and cannot be updated by Google. FAILED recommendations
              can be marked as SUCCEEDED, or FAILED.
            - >-
              Recommendation is in dismissed state. Recommendation content can
              be updated by Google. DISMISSED recommendations can be marked as
              ACTIVE.
        stateMetadata:
          description: >-
            A map of metadata for the state, provided by user or automations
            systems.
          additionalProperties:
            type: string
          type: object
      id: GoogleCloudRecommenderV1RecommendationStateInfo
    GoogleCloudRecommenderV1Recommendation:
      description: >-
        A recommendation along with a suggested action. E.g., a rightsizing
        recommendation for an underutilized VM, IAM role recommendations, etc
      type: object
      id: GoogleCloudRecommenderV1Recommendation
      properties:
        additionalImpact:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1Impact'
          description: >-
            Optional set of additional impact that this recommendation may have
            when trying to optimize for the primary category. These may be
            positive or negative.
          type: array
        stateInfo:
          description: Information for state. Contains state and metadata.
          $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommendationStateInfo'
        targetResources:
          type: array
          description: >-
            Fully qualified resource names that this recommendation is
            targeting.
          items:
            type: string
        name:
          type: string
          description: Identifier. Name of recommendation.
        priority:
          type: string
          enum:
            - PRIORITY_UNSPECIFIED
            - P4
            - P3
            - P2
            - P1
          description: Recommendation's priority.
          enumDescriptions:
            - Recommendation has unspecified priority.
            - Recommendation has P4 priority (lowest priority).
            - Recommendation has P3 priority (second lowest priority).
            - Recommendation has P2 priority (second highest priority).
            - Recommendation has P1 priority (highest priority).
        description:
          type: string
          description: >-
            Free-form human readable summary in English. The maximum length is
            500 characters.
        lastRefreshTime:
          description: >-
            Last time this recommendation was refreshed by the system that
            created it in the first place.
          format: google-datetime
          type: string
        primaryImpact:
          description: >-
            The primary impact that this recommendation can have while trying to
            optimize for one category.
          $ref: '#/components/schemas/GoogleCloudRecommenderV1Impact'
        content:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommendationContent'
          description: >-
            Content of the recommendation describing recommended changes to
            resources.
        recommenderSubtype:
          type: string
          description: >-
            Contains an identifier for a subtype of recommendations produced for
            the same recommender. Subtype is a function of content and impact,
            meaning a new subtype might be added when significant changes to
            `content` or `primary_impact.category` are introduced. See the
            Recommenders section to see a list of subtypes for a given
            Recommender. Examples: For recommender =
            "google.iam.policy.Recommender", recommender_subtype can be one of
            "REMOVE_ROLE"/"REPLACE_ROLE"
        etag:
          type: string
          description: >-
            Fingerprint of the Recommendation. Provides optimistic locking when
            updating states.
        xorGroupId:
          type: string
          description: >-
            Corresponds to a mutually exclusive group ID within a recommender. A
            non-empty ID indicates that the recommendation belongs to a mutually
            exclusive group. This means that only one recommendation within the
            group is suggested to be applied.
        associatedInsights:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecommenderV1RecommendationInsightReference
          description: Insights that led to this recommendation.
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    insight_types_config:
      id: google.recommender.insight_types_config
      name: insight_types_config
      title: Insight_types_config
      methods:
        organizations_locations_insight_types_get_config:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_insight_types_update_config:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_insight_types_update_config:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_insight_types_get_config:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_insight_types_get_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_insight_types_update_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/insight_types_config/methods/organizations_locations_insight_types_get_config
          - $ref: >-
              #/components/x-stackQL-resources/insight_types_config/methods/billing_accounts_locations_insight_types_get_config
          - $ref: >-
              #/components/x-stackQL-resources/insight_types_config/methods/projects_locations_insight_types_get_config
        insert: []
        update: []
        delete: []
    insights:
      id: google.recommender.insights
      name: insights
      title: Insights
      methods:
        organizations_locations_insight_types_insights_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _organizations_locations_insight_types_insights_list:
          operation: &ref_1
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.insights
        organizations_locations_insight_types_insights_list:
          operation: *ref_1
          response: *ref_2
        organizations_locations_insight_types_insights_mark_accepted:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}:markAccepted/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_insight_types_insights_mark_accepted:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}:markAccepted/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _billing_accounts_locations_insight_types_insights_list:
          operation: &ref_3
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.insights
        billing_accounts_locations_insight_types_insights_list:
          operation: *ref_3
          response: *ref_4
        billing_accounts_locations_insight_types_insights_get:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_insight_types_insights_mark_accepted:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}:markAccepted/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _folders_locations_insight_types_insights_list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.insights
        folders_locations_insight_types_insights_list:
          operation: *ref_5
          response: *ref_6
        folders_locations_insight_types_insights_get:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_insight_types_insights_list:
          operation: &ref_7
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get
          response: &ref_8
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.insights
        projects_locations_insight_types_insights_list:
          operation: *ref_7
          response: *ref_8
        projects_locations_insight_types_insights_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_insight_types_insights_mark_accepted:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}:markAccepted/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/insights/methods/organizations_locations_insight_types_insights_get
          - $ref: >-
              #/components/x-stackQL-resources/insights/methods/billing_accounts_locations_insight_types_insights_get
          - $ref: >-
              #/components/x-stackQL-resources/insights/methods/folders_locations_insight_types_insights_get
          - $ref: >-
              #/components/x-stackQL-resources/insights/methods/projects_locations_insight_types_insights_get
          - $ref: >-
              #/components/x-stackQL-resources/insights/methods/organizations_locations_insight_types_insights_list
          - $ref: >-
              #/components/x-stackQL-resources/insights/methods/billing_accounts_locations_insight_types_insights_list
          - $ref: >-
              #/components/x-stackQL-resources/insights/methods/folders_locations_insight_types_insights_list
          - $ref: >-
              #/components/x-stackQL-resources/insights/methods/projects_locations_insight_types_insights_list
        insert: []
        update: []
        delete: []
    recommenders_config:
      id: google.recommender.recommenders_config
      name: recommenders_config
      title: Recommenders_config
      methods:
        organizations_locations_recommenders_get_config:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_update_config:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_get_config:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_update_config:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_update_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_get_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/recommenders_config/methods/organizations_locations_recommenders_get_config
          - $ref: >-
              #/components/x-stackQL-resources/recommenders_config/methods/billing_accounts_locations_recommenders_get_config
          - $ref: >-
              #/components/x-stackQL-resources/recommenders_config/methods/projects_locations_recommenders_get_config
        insert: []
        update: []
        delete: []
    recommendations:
      id: google.recommender.recommendations
      name: recommendations
      title: Recommendations
      methods:
        organizations_locations_recommenders_recommendations_mark_dismissed:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markDismissed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _organizations_locations_recommenders_recommendations_list:
          operation: &ref_9
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get
          response: &ref_10
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.recommendations
        organizations_locations_recommenders_recommendations_list:
          operation: *ref_9
          response: *ref_10
        organizations_locations_recommenders_recommendations_mark_succeeded:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markSucceeded/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_recommendations_mark_claimed:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markClaimed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_recommendations_mark_failed:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markFailed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_recommendations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_mark_dismissed:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markDismissed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_mark_claimed:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markClaimed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_mark_failed:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markFailed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_mark_succeeded:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markSucceeded/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _billing_accounts_locations_recommenders_recommendations_list:
          operation: &ref_11
            $ref: >-
              #/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get
          response: &ref_12
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.recommendations
        billing_accounts_locations_recommenders_recommendations_list:
          operation: *ref_11
          response: *ref_12
        folders_locations_recommenders_recommendations_mark_claimed:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markClaimed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _folders_locations_recommenders_recommendations_list:
          operation: &ref_13
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get
          response: &ref_14
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.recommendations
        folders_locations_recommenders_recommendations_list:
          operation: *ref_13
          response: *ref_14
        folders_locations_recommenders_recommendations_mark_dismissed:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markDismissed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_recommenders_recommendations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_recommenders_recommendations_mark_succeeded:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markSucceeded/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_recommenders_recommendations_mark_failed:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markFailed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_recommendations_mark_dismissed:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markDismissed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_recommendations_mark_succeeded:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markSucceeded/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_recommendations_mark_claimed:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markClaimed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_recommenders_recommendations_list:
          operation: &ref_15
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get
          response: &ref_16
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.recommendations
        projects_locations_recommenders_recommendations_list:
          operation: *ref_15
          response: *ref_16
        projects_locations_recommenders_recommendations_mark_failed:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markFailed/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_recommendations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/recommendations/methods/organizations_locations_recommenders_recommendations_get
          - $ref: >-
              #/components/x-stackQL-resources/recommendations/methods/billing_accounts_locations_recommenders_recommendations_get
          - $ref: >-
              #/components/x-stackQL-resources/recommendations/methods/folders_locations_recommenders_recommendations_get
          - $ref: >-
              #/components/x-stackQL-resources/recommendations/methods/projects_locations_recommenders_recommendations_get
          - $ref: >-
              #/components/x-stackQL-resources/recommendations/methods/organizations_locations_recommenders_recommendations_list
          - $ref: >-
              #/components/x-stackQL-resources/recommendations/methods/billing_accounts_locations_recommenders_recommendations_list
          - $ref: >-
              #/components/x-stackQL-resources/recommendations/methods/folders_locations_recommenders_recommendations_list
          - $ref: >-
              #/components/x-stackQL-resources/recommendations/methods/projects_locations_recommenders_recommendations_list
        insert: []
        update: []
        delete: []
paths:
  /v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/config:
    parameters: &ref_17
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Gets the requested InsightTypeConfig. There is only one instance of the
        config for each InsightType.
      operationId: recommender.organizations.locations.insightTypes.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates an InsightTypeConfig change. This will create a new revision of
        the config.
      operationId: recommender.organizations.locations.insightTypes.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested insight. Requires the recommender.*.get IAM
        permission for the specified insight type.
      operationId: recommender.organizations.locations.insightTypes.insights.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights:
    parameters: *ref_17
    get:
      description: >-
        Lists insights for the specified Cloud Resource. Requires the
        recommender.*.list IAM permission for the specified insight type.
      operationId: recommender.organizations.locations.insightTypes.insights.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecommenderV1ListInsightsResponse
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted:
    parameters: *ref_17
    post:
      description: >-
        Marks the Insight State as Accepted. Users can use this method to
        indicate to the Recommender API that they have applied some action based
        on the insight. This stops the insight content from being updated.
        MarkInsightAccepted can be applied to insights in ACTIVE state. Requires
        the recommender.*.update IAM permission for the specified insight.
      operationId: recommender.organizations.locations.insightTypes.insights.markAccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkInsightAcceptedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/config:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested Recommender Config. There is only one instance of the
        config for each Recommender.
      operationId: recommender.organizations.locations.recommenders.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Recommender Config. This will create a new revision of the
        config.
      operationId: recommender.organizations.locations.recommenders.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markDismissed:
    parameters: *ref_17
    post:
      description: >-
        Mark the Recommendation State as Dismissed. Users can use this method to
        indicate to the Recommender API that an ACTIVE recommendation has to be
        marked back as DISMISSED. MarkRecommendationDismissed can be applied to
        recommendations in ACTIVE state. Requires the recommender.*.update IAM
        permission for the specified recommender.
      operationId: >-
        recommender.organizations.locations.recommenders.recommendations.markDismissed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationDismissedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations:
    parameters: *ref_17
    get:
      description: >-
        Lists recommendations for the specified Cloud Resource. Requires the
        recommender.*.list IAM permission for the specified recommender.
      operationId: recommender.organizations.locations.recommenders.recommendations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecommenderV1ListRecommendationsResponse
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Succeeded. Users can use this method
        to indicate to the Recommender API that they have applied the
        recommendation themselves, and the operation was successful. This stops
        the recommendation content from being updated. Associated insights are
        frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can
        be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED
        state. Requires the recommender.*.update IAM permission for the
        specified recommender.
      operationId: >-
        recommender.organizations.locations.recommenders.recommendations.markSucceeded
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationSucceededRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Claimed. Users can use this method to
        indicate to the Recommender API that they are starting to apply the
        recommendation themselves. This stops the recommendation content from
        being updated. Associated insights are frozen and placed in the ACCEPTED
        state. MarkRecommendationClaimed can be applied to recommendations in
        CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the
        recommender.*.update IAM permission for the specified recommender.
      operationId: >-
        recommender.organizations.locations.recommenders.recommendations.markClaimed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationClaimedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Failed. Users can use this method to
        indicate to the Recommender API that they have applied the
        recommendation themselves, and the operation failed. This stops the
        recommendation content from being updated. Associated insights are
        frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be
        applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED
        state. Requires the recommender.*.update IAM permission for the
        specified recommender.
      operationId: >-
        recommender.organizations.locations.recommenders.recommendations.markFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationFailedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested recommendation. Requires the recommender.*.get IAM
        permission for the specified recommender.
      operationId: recommender.organizations.locations.recommenders.recommendations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markDismissed:
    parameters: *ref_17
    post:
      description: >-
        Mark the Recommendation State as Dismissed. Users can use this method to
        indicate to the Recommender API that an ACTIVE recommendation has to be
        marked back as DISMISSED. MarkRecommendationDismissed can be applied to
        recommendations in ACTIVE state. Requires the recommender.*.update IAM
        permission for the specified recommender.
      operationId: >-
        recommender.billingAccounts.locations.recommenders.recommendations.markDismissed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationDismissedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Claimed. Users can use this method to
        indicate to the Recommender API that they are starting to apply the
        recommendation themselves. This stops the recommendation content from
        being updated. Associated insights are frozen and placed in the ACCEPTED
        state. MarkRecommendationClaimed can be applied to recommendations in
        CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the
        recommender.*.update IAM permission for the specified recommender.
      operationId: >-
        recommender.billingAccounts.locations.recommenders.recommendations.markClaimed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationClaimedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Failed. Users can use this method to
        indicate to the Recommender API that they have applied the
        recommendation themselves, and the operation failed. This stops the
        recommendation content from being updated. Associated insights are
        frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be
        applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED
        state. Requires the recommender.*.update IAM permission for the
        specified recommender.
      operationId: >-
        recommender.billingAccounts.locations.recommenders.recommendations.markFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationFailedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Succeeded. Users can use this method
        to indicate to the Recommender API that they have applied the
        recommendation themselves, and the operation was successful. This stops
        the recommendation content from being updated. Associated insights are
        frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can
        be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED
        state. Requires the recommender.*.update IAM permission for the
        specified recommender.
      operationId: >-
        recommender.billingAccounts.locations.recommenders.recommendations.markSucceeded
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationSucceededRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested recommendation. Requires the recommender.*.get IAM
        permission for the specified recommender.
      operationId: recommender.billingAccounts.locations.recommenders.recommendations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations:
    parameters: *ref_17
    get:
      description: >-
        Lists recommendations for the specified Cloud Resource. Requires the
        recommender.*.list IAM permission for the specified recommender.
      operationId: recommender.billingAccounts.locations.recommenders.recommendations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecommenderV1ListRecommendationsResponse
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/config:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested Recommender Config. There is only one instance of the
        config for each Recommender.
      operationId: recommender.billingAccounts.locations.recommenders.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Recommender Config. This will create a new revision of the
        config.
      operationId: recommender.billingAccounts.locations.recommenders.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted:
    parameters: *ref_17
    post:
      description: >-
        Marks the Insight State as Accepted. Users can use this method to
        indicate to the Recommender API that they have applied some action based
        on the insight. This stops the insight content from being updated.
        MarkInsightAccepted can be applied to insights in ACTIVE state. Requires
        the recommender.*.update IAM permission for the specified insight.
      operationId: recommender.billingAccounts.locations.insightTypes.insights.markAccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkInsightAcceptedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights:
    parameters: *ref_17
    get:
      description: >-
        Lists insights for the specified Cloud Resource. Requires the
        recommender.*.list IAM permission for the specified insight type.
      operationId: recommender.billingAccounts.locations.insightTypes.insights.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecommenderV1ListInsightsResponse
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested insight. Requires the recommender.*.get IAM
        permission for the specified insight type.
      operationId: recommender.billingAccounts.locations.insightTypes.insights.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
  /v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/config:
    parameters: *ref_17
    patch:
      description: >-
        Updates an InsightTypeConfig change. This will create a new revision of
        the config.
      operationId: recommender.billingAccounts.locations.insightTypes.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: >-
        Gets the requested InsightTypeConfig. There is only one instance of the
        config for each InsightType.
      operationId: recommender.billingAccounts.locations.insightTypes.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted:
    parameters: *ref_17
    post:
      description: >-
        Marks the Insight State as Accepted. Users can use this method to
        indicate to the Recommender API that they have applied some action based
        on the insight. This stops the insight content from being updated.
        MarkInsightAccepted can be applied to insights in ACTIVE state. Requires
        the recommender.*.update IAM permission for the specified insight.
      operationId: recommender.folders.locations.insightTypes.insights.markAccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkInsightAcceptedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights:
    parameters: *ref_17
    get:
      description: >-
        Lists insights for the specified Cloud Resource. Requires the
        recommender.*.list IAM permission for the specified insight type.
      operationId: recommender.folders.locations.insightTypes.insights.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecommenderV1ListInsightsResponse
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested insight. Requires the recommender.*.get IAM
        permission for the specified insight type.
      operationId: recommender.folders.locations.insightTypes.insights.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Claimed. Users can use this method to
        indicate to the Recommender API that they are starting to apply the
        recommendation themselves. This stops the recommendation content from
        being updated. Associated insights are frozen and placed in the ACCEPTED
        state. MarkRecommendationClaimed can be applied to recommendations in
        CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the
        recommender.*.update IAM permission for the specified recommender.
      operationId: recommender.folders.locations.recommenders.recommendations.markClaimed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationClaimedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations:
    parameters: *ref_17
    get:
      description: >-
        Lists recommendations for the specified Cloud Resource. Requires the
        recommender.*.list IAM permission for the specified recommender.
      operationId: recommender.folders.locations.recommenders.recommendations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecommenderV1ListRecommendationsResponse
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markDismissed:
    parameters: *ref_17
    post:
      description: >-
        Mark the Recommendation State as Dismissed. Users can use this method to
        indicate to the Recommender API that an ACTIVE recommendation has to be
        marked back as DISMISSED. MarkRecommendationDismissed can be applied to
        recommendations in ACTIVE state. Requires the recommender.*.update IAM
        permission for the specified recommender.
      operationId: recommender.folders.locations.recommenders.recommendations.markDismissed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationDismissedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested recommendation. Requires the recommender.*.get IAM
        permission for the specified recommender.
      operationId: recommender.folders.locations.recommenders.recommendations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Succeeded. Users can use this method
        to indicate to the Recommender API that they have applied the
        recommendation themselves, and the operation was successful. This stops
        the recommendation content from being updated. Associated insights are
        frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can
        be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED
        state. Requires the recommender.*.update IAM permission for the
        specified recommender.
      operationId: recommender.folders.locations.recommenders.recommendations.markSucceeded
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationSucceededRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Failed. Users can use this method to
        indicate to the Recommender API that they have applied the
        recommendation themselves, and the operation failed. This stops the
        recommendation content from being updated. Associated insights are
        frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be
        applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED
        state. Requires the recommender.*.update IAM permission for the
        specified recommender.
      operationId: recommender.folders.locations.recommenders.recommendations.markFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationFailedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markDismissed:
    parameters: *ref_17
    post:
      description: >-
        Mark the Recommendation State as Dismissed. Users can use this method to
        indicate to the Recommender API that an ACTIVE recommendation has to be
        marked back as DISMISSED. MarkRecommendationDismissed can be applied to
        recommendations in ACTIVE state. Requires the recommender.*.update IAM
        permission for the specified recommender.
      operationId: >-
        recommender.projects.locations.recommenders.recommendations.markDismissed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationDismissedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Succeeded. Users can use this method
        to indicate to the Recommender API that they have applied the
        recommendation themselves, and the operation was successful. This stops
        the recommendation content from being updated. Associated insights are
        frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can
        be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED
        state. Requires the recommender.*.update IAM permission for the
        specified recommender.
      operationId: >-
        recommender.projects.locations.recommenders.recommendations.markSucceeded
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationSucceededRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Claimed. Users can use this method to
        indicate to the Recommender API that they are starting to apply the
        recommendation themselves. This stops the recommendation content from
        being updated. Associated insights are frozen and placed in the ACCEPTED
        state. MarkRecommendationClaimed can be applied to recommendations in
        CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the
        recommender.*.update IAM permission for the specified recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.markClaimed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationClaimedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations:
    parameters: *ref_17
    get:
      description: >-
        Lists recommendations for the specified Cloud Resource. Requires the
        recommender.*.list IAM permission for the specified recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecommenderV1ListRecommendationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed:
    parameters: *ref_17
    post:
      description: >-
        Marks the Recommendation State as Failed. Users can use this method to
        indicate to the Recommender API that they have applied the
        recommendation themselves, and the operation failed. This stops the
        recommendation content from being updated. Associated insights are
        frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be
        applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED
        state. Requires the recommender.*.update IAM permission for the
        specified recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.markFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkRecommendationFailedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested recommendation. Requires the recommender.*.get IAM
        permission for the specified recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/config:
    parameters: *ref_17
    patch:
      description: >-
        Updates a Recommender Config. This will create a new revision of the
        config.
      operationId: recommender.projects.locations.recommenders.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: >-
        Gets the requested Recommender Config. There is only one instance of the
        config for each Recommender.
      operationId: recommender.projects.locations.recommenders.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/config:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested InsightTypeConfig. There is only one instance of the
        config for each InsightType.
      operationId: recommender.projects.locations.insightTypes.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates an InsightTypeConfig change. This will create a new revision of
        the config.
      operationId: recommender.projects.locations.insightTypes.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights:
    parameters: *ref_17
    get:
      description: >-
        Lists insights for the specified Cloud Resource. Requires the
        recommender.*.list IAM permission for the specified insight type.
      operationId: recommender.projects.locations.insightTypes.insights.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecommenderV1ListInsightsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:
    parameters: *ref_17
    get:
      description: >-
        Gets the requested insight. Requires the recommender.*.get IAM
        permission for the specified insight type.
      operationId: recommender.projects.locations.insightTypes.insights.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted:
    parameters: *ref_17
    post:
      description: >-
        Marks the Insight State as Accepted. Users can use this method to
        indicate to the Recommender API that they have applied some action based
        on the insight. This stops the insight content from being updated.
        MarkInsightAccepted can be applied to insights in ACTIVE state. Requires
        the recommender.*.update IAM permission for the specified insight.
      operationId: recommender.projects.locations.insightTypes.insights.markAccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecommenderV1MarkInsightAcceptedRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
