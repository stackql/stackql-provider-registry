openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Recommender API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230820'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://cloud.google.com/recommender/docs/'
servers:
  - url: 'https://recommender.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudRecommenderV1InsightRecommendationReference:
      properties:
        recommendation:
          type: string
          description: 'Recommendation resource name, e.g. projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/recommendations/[RECOMMENDATION_ID]'
      description: Reference to an associated recommendation.
      id: GoogleCloudRecommenderV1InsightRecommendationReference
      type: object
    GoogleCloudRecommenderV1Insight:
      id: GoogleCloudRecommenderV1Insight
      description: An insight along with the information used to derive the insight. The insight may have associated recommendations as well.
      type: object
      properties:
        description:
          description: Free-form human readable summary in English. The maximum length is 500 characters.
          type: string
        name:
          description: Name of the insight.
          type: string
        associatedRecommendations:
          type: array
          description: Recommendations derived from this insight.
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightRecommendationReference'
        targetResources:
          type: array
          items:
            type: string
          description: Fully qualified resource names that this insight is targeting.
        insightSubtype:
          type: string
          description: Insight subtype. Insight content schema will be stable for a given subtype.
        content:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: 'A struct of custom fields to explain the insight. Example: "grantedPermissionsCount": "1000"'
        severity:
          description: Insight's severity.
          enumDescriptions:
            - Insight has unspecified severity.
            - Insight has low severity.
            - Insight has medium severity.
            - Insight has high severity.
            - Insight has critical severity.
          type: string
          enum:
            - SEVERITY_UNSPECIFIED
            - LOW
            - MEDIUM
            - HIGH
            - CRITICAL
        category:
          type: string
          description: Category being targeted by the insight.
          enumDescriptions:
            - Unspecified category.
            - The insight is related to cost.
            - The insight is related to security.
            - The insight is related to performance.
            - This insight is related to manageability.
            - The insight is related to sustainability.
            - This insight is related to reliability.
          enum:
            - CATEGORY_UNSPECIFIED
            - COST
            - SECURITY
            - PERFORMANCE
            - MANAGEABILITY
            - SUSTAINABILITY
            - RELIABILITY
        etag:
          description: Fingerprint of the Insight. Provides optimistic locking when updating states.
          type: string
        lastRefreshTime:
          type: string
          description: Timestamp of the latest data used to generate the insight.
          format: google-datetime
        observationPeriod:
          description: Observation period that led to the insight. The source data used to generate the insight ends at last_refresh_time and begins at (last_refresh_time - observation_period).
          type: string
          format: google-duration
        stateInfo:
          description: Information state and metadata.
          $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightStateInfo'
    GoogleCloudRecommenderV1MarkRecommendationFailedRequest:
      id: GoogleCloudRecommenderV1MarkRecommendationFailedRequest
      type: object
      description: Request for the `MarkRecommendationFailed` Method.
      properties:
        stateMetadata:
          type: object
          description: 'State properties to include with this state. Overwrites any existing `state_metadata`. Keys must match the regex `/^a-z0-9{0,62}$/`. Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.'
          additionalProperties:
            type: string
        etag:
          type: string
          description: Required. Fingerprint of the Recommendation. Provides optimistic locking.
    GoogleCloudRecommenderV1Impact:
      type: object
      properties:
        securityProjection:
          description: Use with CategoryType.SECURITY
          $ref: '#/components/schemas/GoogleCloudRecommenderV1SecurityProjection'
        category:
          enum:
            - CATEGORY_UNSPECIFIED
            - COST
            - SECURITY
            - PERFORMANCE
            - MANAGEABILITY
            - SUSTAINABILITY
            - RELIABILITY
          type: string
          enumDescriptions:
            - Default unspecified category. Don't use directly.
            - Indicates a potential increase or decrease in cost.
            - Indicates a potential increase or decrease in security.
            - Indicates a potential increase or decrease in performance.
            - Indicates a potential increase or decrease in manageability.
            - Indicates a potential increase or decrease in sustainability.
            - Indicates a potential increase or decrease in reliability.
          description: Category that is being targeted.
        costProjection:
          description: Use with CategoryType.COST
          $ref: '#/components/schemas/GoogleCloudRecommenderV1CostProjection'
        sustainabilityProjection:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1SustainabilityProjection'
          description: Use with CategoryType.SUSTAINABILITY
        reliabilityProjection:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1ReliabilityProjection'
          description: Use with CategoryType.RELAIBILITY
      description: Contains the impact a recommendation can have for a given category.
      id: GoogleCloudRecommenderV1Impact
    GoogleCloudRecommenderV1SustainabilityProjection:
      properties:
        duration:
          format: google-duration
          type: string
          description: Duration for which this sustainability applies.
        kgCO2e:
          format: double
          type: number
          description: Carbon Footprint generated in kg of CO2 equivalent. Chose kg_c_o2e so that the name renders correctly in camelCase (kgCO2e).
      type: object
      id: GoogleCloudRecommenderV1SustainabilityProjection
      description: Contains metadata about how much sustainability a recommendation can save or incur.
    GoogleCloudRecommenderV1ListRecommendationsResponse:
      properties:
        nextPageToken:
          type: string
          description: A token that can be used to request the next page of results. This field is empty if there are no additional results.
        recommendations:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
          description: The set of recommendations for the `parent` resource.
          type: array
      type: object
      id: GoogleCloudRecommenderV1ListRecommendationsResponse
      description: Response to the `ListRecommendations` method.
    GoogleCloudRecommenderV1InsightStateInfo:
      id: GoogleCloudRecommenderV1InsightStateInfo
      type: object
      properties:
        stateMetadata:
          additionalProperties:
            type: string
          description: 'A map of metadata for the state, provided by user or automations systems.'
          type: object
        state:
          enumDescriptions:
            - Unspecified state.
            - Insight is active. Content for ACTIVE insights can be updated by Google. ACTIVE insights can be marked DISMISSED OR ACCEPTED.
            - 'Some action has been taken based on this insight. Insights become accepted when a recommendation derived from the insight has been marked CLAIMED, SUCCEEDED, or FAILED. ACTIVE insights can also be marked ACCEPTED explicitly. Content for ACCEPTED insights is immutable. ACCEPTED insights can only be marked ACCEPTED (which may update state metadata).'
            - Insight is dismissed. Content for DISMISSED insights can be updated by Google. DISMISSED insights can be marked as ACTIVE.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - ACCEPTED
            - DISMISSED
          description: Insight state.
          type: string
      description: Information related to insight state.
    GoogleCloudRecommenderV1CostProjection:
      type: object
      description: Contains metadata about how much money a recommendation can save or incur.
      properties:
        duration:
          description: Duration for which this cost applies.
          format: google-duration
          type: string
        cost:
          description: An approximate projection on amount saved or amount incurred. Negative cost units indicate cost savings and positive cost units indicate increase. See google.type.Money documentation for positive/negative units. A user's permissions may affect whether the cost is computed using list prices or custom contract prices.
          $ref: '#/components/schemas/GoogleTypeMoney'
      id: GoogleCloudRecommenderV1CostProjection
    GoogleCloudRecommenderV1MarkRecommendationDismissedRequest:
      description: Request for the `MarkRecommendationDismissed` Method.
      id: GoogleCloudRecommenderV1MarkRecommendationDismissedRequest
      properties:
        etag:
          description: Fingerprint of the Recommendation. Provides optimistic locking.
          type: string
      type: object
    GoogleCloudRecommenderV1OperationGroup:
      id: GoogleCloudRecommenderV1OperationGroup
      properties:
        operations:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1Operation'
          type: array
          description: List of operations across one or more resources that belong to this group. Loosely based on RFC6902 and should be performed in the order they appear.
      type: object
      description: Group of operations that need to be performed atomically.
    GoogleCloudRecommenderV1MarkRecommendationSucceededRequest:
      description: Request for the `MarkRecommendationSucceeded` Method.
      properties:
        etag:
          type: string
          description: Required. Fingerprint of the Recommendation. Provides optimistic locking.
        stateMetadata:
          type: object
          additionalProperties:
            type: string
          description: 'State properties to include with this state. Overwrites any existing `state_metadata`. Keys must match the regex `/^a-z0-9{0,62}$/`. Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.'
      type: object
      id: GoogleCloudRecommenderV1MarkRecommendationSucceededRequest
    GoogleCloudRecommenderV1InsightTypeConfig:
      description: Configuration for an InsightType.
      properties:
        updateTime:
          description: Last time when the config was updated.
          format: google-datetime
          type: string
        etag:
          description: Fingerprint of the InsightTypeConfig. Provides optimistic locking when updating.
          type: string
        insightTypeGenerationConfig:
          description: InsightTypeGenerationConfig which configures the generation of insights for this insight type.
          $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeGenerationConfig'
        displayName:
          description: A user-settable field to provide a human-readable name to be used in user interfaces.
          type: string
        name:
          description: 'Name of insight type config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config'
          type: string
        revisionId:
          type: string
          readOnly: true
          description: Output only. Immutable. The revision ID of the config. A new revision is committed whenever the config is changed in any way. The format is an 8-character hexadecimal string.
        annotations:
          type: object
          additionalProperties:
            type: string
          description: 'Allows clients to store small amounts of arbitrary data. Annotations must follow the Kubernetes syntax. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.'
      type: object
      id: GoogleCloudRecommenderV1InsightTypeConfig
    GoogleCloudRecommenderV1Recommendation:
      properties:
        recommenderSubtype:
          type: string
          description: 'Contains an identifier for a subtype of recommendations produced for the same recommender. Subtype is a function of content and impact, meaning a new subtype might be added when significant changes to `content` or `primary_impact.category` are introduced. See the Recommenders section to see a list of subtypes for a given Recommender. Examples: For recommender = "google.iam.policy.Recommender", recommender_subtype can be one of "REMOVE_ROLE"/"REPLACE_ROLE"'
        additionalImpact:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1Impact'
          description: Optional set of additional impact that this recommendation may have when trying to optimize for the primary category. These may be positive or negative.
        priority:
          enum:
            - PRIORITY_UNSPECIFIED
            - P4
            - P3
            - P2
            - P1
          description: Recommendation's priority.
          type: string
          enumDescriptions:
            - Recommendation has unspecified priority.
            - Recommendation has P4 priority (lowest priority).
            - Recommendation has P3 priority (second lowest priority).
            - Recommendation has P2 priority (second highest priority).
            - Recommendation has P1 priority (highest priority).
        stateInfo:
          description: Information for state. Contains state and metadata.
          $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommendationStateInfo'
        xorGroupId:
          type: string
          description: Corresponds to a mutually exclusive group ID within a recommender. A non-empty ID indicates that the recommendation belongs to a mutually exclusive group. This means that only one recommendation within the group is suggested to be applied.
        content:
          description: Content of the recommendation describing recommended changes to resources.
          $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommendationContent'
        name:
          description: Name of recommendation.
          type: string
        primaryImpact:
          description: The primary impact that this recommendation can have while trying to optimize for one category.
          $ref: '#/components/schemas/GoogleCloudRecommenderV1Impact'
        lastRefreshTime:
          type: string
          format: google-datetime
          description: Last time this recommendation was refreshed by the system that created it in the first place.
        etag:
          description: Fingerprint of the Recommendation. Provides optimistic locking when updating states.
          type: string
        associatedInsights:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommendationInsightReference'
          description: Insights that led to this recommendation.
          type: array
        description:
          description: Free-form human readable summary in English. The maximum length is 500 characters.
          type: string
      id: GoogleCloudRecommenderV1Recommendation
      type: object
      description: 'A recommendation along with a suggested action. E.g., a rightsizing recommendation for an underutilized VM, IAM role recommendations, etc'
    GoogleCloudRecommenderV1RecommendationContent:
      description: Contains what resources are changing and how they are changing.
      properties:
        operationGroups:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1OperationGroup'
          type: array
          description: 'Operations to one or more Google Cloud resources grouped in such a way that, all operations within one group are expected to be performed atomically and in an order.'
        overview:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: Condensed overview information about the recommendation.
      type: object
      id: GoogleCloudRecommenderV1RecommendationContent
    GoogleCloudRecommenderV1RecommenderConfig:
      type: object
      description: Configuration for a Recommender.
      id: GoogleCloudRecommenderV1RecommenderConfig
      properties:
        etag:
          type: string
          description: Fingerprint of the RecommenderConfig. Provides optimistic locking when updating.
        updateTime:
          format: google-datetime
          description: Last time when the config was updated.
          type: string
        revisionId:
          description: Output only. Immutable. The revision ID of the config. A new revision is committed whenever the config is changed in any way. The format is an 8-character hexadecimal string.
          type: string
          readOnly: true
        name:
          type: string
          description: 'Name of recommender config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config'
        recommenderGenerationConfig:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderGenerationConfig'
          description: RecommenderGenerationConfig which configures the Generation of recommendations for this recommender.
        displayName:
          description: A user-settable field to provide a human-readable name to be used in user interfaces.
          type: string
        annotations:
          description: 'Allows clients to store small amounts of arbitrary data. Annotations must follow the Kubernetes syntax. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.'
          additionalProperties:
            type: string
          type: object
    GoogleCloudRecommenderV1RecommendationStateInfo:
      type: object
      description: Information for state. Contains state and metadata.
      id: GoogleCloudRecommenderV1RecommendationStateInfo
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CLAIMED
            - SUCCEEDED
            - FAILED
            - DISMISSED
          description: 'The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED.'
          enumDescriptions:
            - Default state. Don't use directly.
            - 'Recommendation is active and can be applied. Recommendations content can be updated by Google. ACTIVE recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.'
            - 'Recommendation is in claimed state. Recommendations content is immutable and cannot be updated by Google. CLAIMED recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.'
            - 'Recommendation is in succeeded state. Recommendations content is immutable and cannot be updated by Google. SUCCEEDED recommendations can be marked as SUCCEEDED, or FAILED.'
            - 'Recommendation is in failed state. Recommendations content is immutable and cannot be updated by Google. FAILED recommendations can be marked as SUCCEEDED, or FAILED.'
            - Recommendation is in dismissed state. Recommendation content can be updated by Google. DISMISSED recommendations can be marked as ACTIVE.
          type: string
        stateMetadata:
          description: 'A map of metadata for the state, provided by user or automations systems.'
          additionalProperties:
            type: string
          type: object
    GoogleCloudRecommenderV1SecurityProjection:
      id: GoogleCloudRecommenderV1SecurityProjection
      type: object
      properties:
        details:
          type: object
          description: Additional security impact details that is provided by the recommender.
          additionalProperties:
            description: Properties of the object.
            type: any
      description: Contains various ways of describing the impact on Security.
    GoogleCloudRecommenderV1RecommenderGenerationConfig:
      type: object
      properties:
        params:
          description: Parameters for this RecommenderGenerationConfig. These configs can be used by or are applied to all subtypes.
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
      description: 'A Configuration to customize the generation of recommendations. Eg, customizing the lookback period considered when generating a recommendation.'
      id: GoogleCloudRecommenderV1RecommenderGenerationConfig
    GoogleCloudRecommenderV1ReliabilityProjection:
      type: object
      properties:
        risks:
          items:
            enum:
              - RISK_TYPE_UNSPECIFIED
              - SERVICE_DISRUPTION
              - DATA_LOSS
              - ACCESS_DENY
            enumDescriptions:
              - Default unspecified risk. Don't use directly.
              - Potential service downtime.
              - Potential data loss.
              - Potential access denial. The service is still up but some or all clients can't access it.
            type: string
          type: array
          description: Reliability risks mitigated by this recommendation.
        details:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: Per-recommender projection.
          type: object
      id: GoogleCloudRecommenderV1ReliabilityProjection
      description: Contains information on the impact of a reliability recommendation.
    GoogleCloudRecommenderV1ListInsightsResponse:
      description: Response to the `ListInsights` method.
      id: GoogleCloudRecommenderV1ListInsightsResponse
      properties:
        nextPageToken:
          type: string
          description: A token that can be used to request the next page of results. This field is empty if there are no additional results.
        insights:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
          description: The set of insights for the `parent` resource.
      type: object
    GoogleCloudRecommenderV1ValueMatcher:
      id: GoogleCloudRecommenderV1ValueMatcher
      properties:
        matchesPattern:
          type: string
          description: 'To be used for full regex matching. The regular expression is using the Google RE2 syntax (https://github.com/google/re2/wiki/Syntax), so to be used with RE2::FullMatch'
      type: object
      description: Contains various matching options for values for a GCP resource field.
    GoogleCloudRecommenderV1MarkRecommendationClaimedRequest:
      id: GoogleCloudRecommenderV1MarkRecommendationClaimedRequest
      properties:
        stateMetadata:
          additionalProperties:
            type: string
          type: object
          description: 'State properties to include with this state. Overwrites any existing `state_metadata`. Keys must match the regex `/^a-z0-9{0,62}$/`. Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.'
        etag:
          description: Required. Fingerprint of the Recommendation. Provides optimistic locking.
          type: string
      type: object
      description: Request for the `MarkRecommendationClaimed` Method.
    GoogleTypeMoney:
      description: Represents an amount of money with its currency type.
      properties:
        nanos:
          type: integer
          format: int32
          description: 'Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.'
        currencyCode:
          description: The three-letter currency code defined in ISO 4217.
          type: string
        units:
          description: 'The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.'
          type: string
          format: int64
      type: object
      id: GoogleTypeMoney
    GoogleCloudRecommenderV1Operation:
      properties:
        action:
          description: 'Type of this operation. Contains one of ''add'', ''remove'', ''replace'', ''move'', ''copy'', ''test'' and custom operations. This field is case-insensitive and always populated.'
          type: string
        value:
          description: 'Value for the `path` field. Will be set for actions:''add''/''replace''. Maybe set for action: ''test''. Either this or `value_matcher` will be set for ''test'' operation. An exact match must be performed.'
          type: any
        pathValueMatchers:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1ValueMatcher'
          description: 'Similar to path_filters, this contains set of filters to apply if `path` field refers to array elements. This is meant to support value matching beyond exact match. To perform exact match, use path_filters. When both path_filters and path_value_matchers are set, an implicit AND must be performed.'
          type: object
        sourceResource:
          description: 'Can be set with action ''copy'' to copy resource configuration across different resources of the same type. Example: A resource clone can be done via action = ''copy'', path = "/", from = "/", source_resource = and resource_name = . This field is empty for all other values of `action`.'
          type: string
        valueMatcher:
          description: Can be set for action 'test' for advanced matching for the value of 'path' field. Either this or `value` will be set for 'test' operation.
          $ref: '#/components/schemas/GoogleCloudRecommenderV1ValueMatcher'
        pathFilters:
          description: 'Set of filters to apply if `path` refers to array elements or nested array elements in order to narrow down to a single unique element that is being tested/modified. This is intended to be an exact match per filter. To perform advanced matching, use path_value_matchers. * Example: ``` { "/versions/*/name" : "it-123" "/versions/*/targetSize/percent": 20 } ``` * Example: ``` { "/bindings/*/role": "roles/owner" "/bindings/*/condition" : null } ``` * Example: ``` { "/bindings/*/role": "roles/owner" "/bindings/*/members/*" : ["x@example.com", "y@example.com"] } ``` When both path_filters and path_value_matchers are set, an implicit AND must be performed.'
          additionalProperties:
            type: any
          type: object
        path:
          type: string
          description: 'Path to the target field being operated on. If the operation is at the resource level, then path should be "/". This field is always populated.'
        resource:
          description: 'Contains the fully qualified resource name. This field is always populated. ex: //cloudresourcemanager.googleapis.com/projects/foo.'
          type: string
        sourcePath:
          type: string
          description: 'Can be set with action ''copy'' or ''move'' to indicate the source field within resource or source_resource, ignored if provided for other operation types.'
        resourceType:
          type: string
          description: 'Type of GCP resource being modified/tested. This field is always populated. Example: cloudresourcemanager.googleapis.com/Project, compute.googleapis.com/Instance'
      type: object
      description: 'Contains an operation for a resource loosely based on the JSON-PATCH format with support for: * Custom filters for describing partial array patch. * Extended path values for describing nested arrays. * Custom fields for describing the resource for which the operation is being described. * Allows extension to custom operations not natively supported by RFC6902. See https://tools.ietf.org/html/rfc6902 for details on the original RFC.'
      id: GoogleCloudRecommenderV1Operation
    GoogleCloudRecommenderV1InsightTypeGenerationConfig:
      properties:
        params:
          description: Parameters for this InsightTypeGenerationConfig. These configs can be used by or are applied to all subtypes.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
      type: object
      id: GoogleCloudRecommenderV1InsightTypeGenerationConfig
      description: 'A configuration to customize the generation of insights. Eg, customizing the lookback period considered when generating a insight.'
    GoogleCloudRecommenderV1MarkInsightAcceptedRequest:
      id: GoogleCloudRecommenderV1MarkInsightAcceptedRequest
      type: object
      description: Request for the `MarkInsightAccepted` method.
      properties:
        stateMetadata:
          type: object
          additionalProperties:
            type: string
          description: Optional. State properties user wish to include with this state. Full replace of the current state_metadata.
        etag:
          description: Required. Fingerprint of the Insight. Provides optimistic locking.
          type: string
    GoogleCloudRecommenderV1RecommendationInsightReference:
      type: object
      properties:
        insight:
          description: 'Insight resource name, e.g. projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/insights/[INSIGHT_ID]'
          type: string
      description: Reference to an associated insight.
      id: GoogleCloudRecommenderV1RecommendationInsightReference
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
  x-stackQL-resources:
    recommendations:
      id: google.recommender.recommendations
      name: recommendations
      title: Recommendations
      methods:
        folders_locations_recommenders_recommendations_mark_dismissed:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markDismissed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_recommenders_recommendations_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.recommendations
        _folders_locations_recommenders_recommendations_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_recommenders_recommendations_mark_succeeded:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markSucceeded/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_recommenders_recommendations_mark_claimed:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markClaimed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_recommenders_recommendations_mark_failed:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markFailed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_recommenders_recommendations_get:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_recommendations_mark_failed:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markFailed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_recommendations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_recommendations_mark_succeeded:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markSucceeded/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_recommendations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.recommendations
        _projects_locations_recommenders_recommendations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_recommendations_mark_dismissed:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markDismissed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_recommendations_mark_claimed:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markClaimed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_mark_claimed:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markClaimed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_mark_failed:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markFailed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_mark_succeeded:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markSucceeded/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_list:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.recommendations
        _billing_accounts_locations_recommenders_recommendations_list:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_get:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_recommendations_mark_dismissed:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markDismissed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_recommendations_mark_succeeded:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markSucceeded/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_recommendations_mark_claimed:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markClaimed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_recommendations_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.recommendations
        _organizations_locations_recommenders_recommendations_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_recommendations_mark_failed:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markFailed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_recommendations_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_recommendations_mark_dismissed:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1recommendations~1{recommendationsId}:markDismissed/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recommendations/methods/folders_locations_recommenders_recommendations_list'
          - $ref: '#/components/x-stackQL-resources/recommendations/methods/folders_locations_recommenders_recommendations_get'
          - $ref: '#/components/x-stackQL-resources/recommendations/methods/projects_locations_recommenders_recommendations_get'
          - $ref: '#/components/x-stackQL-resources/recommendations/methods/projects_locations_recommenders_recommendations_list'
          - $ref: '#/components/x-stackQL-resources/recommendations/methods/billing_accounts_locations_recommenders_recommendations_list'
          - $ref: '#/components/x-stackQL-resources/recommendations/methods/billing_accounts_locations_recommenders_recommendations_get'
          - $ref: '#/components/x-stackQL-resources/recommendations/methods/organizations_locations_recommenders_recommendations_list'
          - $ref: '#/components/x-stackQL-resources/recommendations/methods/organizations_locations_recommenders_recommendations_get'
        insert: []
        update: []
        delete: []
    insights:
      id: google.recommender.insights
      name: insights
      title: Insights
      methods:
        folders_locations_insight_types_insights_mark_accepted:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}:markAccepted/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_insight_types_insights_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.insights
        _folders_locations_insight_types_insights_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_insight_types_insights_get:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_insight_types_insights_mark_accepted:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}:markAccepted/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_insight_types_insights_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_insight_types_insights_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.insights
        _projects_locations_insight_types_insights_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_insight_types_insights_get:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_insight_types_insights_mark_accepted:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}:markAccepted/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_insight_types_insights_list:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.insights
        _billing_accounts_locations_insight_types_insights_list:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_insight_types_insights_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_insight_types_insights_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.insights
        _organizations_locations_insight_types_insights_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_insight_types_insights_mark_accepted:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1insights~1{insightsId}:markAccepted/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/insights/methods/folders_locations_insight_types_insights_list'
          - $ref: '#/components/x-stackQL-resources/insights/methods/folders_locations_insight_types_insights_get'
          - $ref: '#/components/x-stackQL-resources/insights/methods/projects_locations_insight_types_insights_get'
          - $ref: '#/components/x-stackQL-resources/insights/methods/projects_locations_insight_types_insights_list'
          - $ref: '#/components/x-stackQL-resources/insights/methods/billing_accounts_locations_insight_types_insights_get'
          - $ref: '#/components/x-stackQL-resources/insights/methods/billing_accounts_locations_insight_types_insights_list'
          - $ref: '#/components/x-stackQL-resources/insights/methods/organizations_locations_insight_types_insights_get'
          - $ref: '#/components/x-stackQL-resources/insights/methods/organizations_locations_insight_types_insights_list'
        insert: []
        update: []
        delete: []
    insight_types_config:
      id: google.recommender.insight_types_config
      name: insight_types_config
      title: Insight Types Config
      methods:
        projects_locations_insight_types_get_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_insight_types_update_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_insight_types_get_config:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_insight_types_update_config:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_insight_types_get_config:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_insight_types_update_config:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1insightTypes~1{insightTypesId}~1config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/insight_types_config/methods/projects_locations_insight_types_get_config'
          - $ref: '#/components/x-stackQL-resources/insight_types_config/methods/billing_accounts_locations_insight_types_get_config'
          - $ref: '#/components/x-stackQL-resources/insight_types_config/methods/organizations_locations_insight_types_get_config'
        insert: []
        update: []
        delete: []
    recommenders_config:
      id: google.recommender.recommenders_config
      name: recommenders_config
      title: Recommenders Config
      methods:
        projects_locations_recommenders_update_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_recommenders_get_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_get_config:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billing_accounts_locations_recommenders_update_config:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_get_config:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_recommenders_update_config:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1recommenders~1{recommendersId}~1config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recommenders_config/methods/projects_locations_recommenders_get_config'
          - $ref: '#/components/x-stackQL-resources/recommenders_config/methods/billing_accounts_locations_recommenders_get_config'
          - $ref: '#/components/x-stackQL-resources/recommenders_config/methods/organizations_locations_recommenders_get_config'
        insert: []
        update: []
        delete: []
paths:
  '/v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markDismissed':
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
    post:
      description: Mark the Recommendation State as Dismissed. Users can use this method to indicate to the Recommender API that an ACTIVE recommendation has to be marked back as DISMISSED. MarkRecommendationDismissed can be applied to recommendations in ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.
      operationId: recommender.folders.locations.recommenders.recommendations.markDismissed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationDismissedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: folders_locations_recommenders_recommendations_mark_dismissed
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations':
    parameters: *ref_1
    get:
      description: Lists recommendations for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified recommender.
      operationId: recommender.folders.locations.recommenders.recommendations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1ListRecommendationsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: folders_locations_recommenders_recommendations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.recommendations
  '/v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.folders.locations.recommenders.recommendations.markSucceeded
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationSucceededRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: folders_locations_recommenders_recommendations_mark_succeeded
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.folders.locations.recommenders.recommendations.markClaimed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationClaimedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: folders_locations_recommenders_recommendations_mark_claimed
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.folders.locations.recommenders.recommendations.markFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationFailedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: folders_locations_recommenders_recommendations_mark_failed
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}':
    parameters: *ref_1
    get:
      description: Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.
      operationId: recommender.folders.locations.recommenders.recommendations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: folders_locations_recommenders_recommendations_get
      x-stackQL-verb: select
  '/v1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted':
    parameters: *ref_1
    post:
      description: Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.
      operationId: recommender.folders.locations.insightTypes.insights.markAccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkInsightAcceptedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: folders_locations_insight_types_insights_mark_accepted
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights':
    parameters: *ref_1
    get:
      description: Lists insights for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified insight type.
      operationId: recommender.folders.locations.insightTypes.insights.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1ListInsightsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: folders_locations_insight_types_insights_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.insights
  '/v1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}':
    parameters: *ref_1
    get:
      description: Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.
      operationId: recommender.folders.locations.insightTypes.insights.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: folders_locations_insight_types_insights_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/config':
    parameters: *ref_1
    get:
      description: Gets the requested InsightTypeConfig. There is only one instance of the config for each InsightType.
      operationId: recommender.projects.locations.insightTypes.getConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: insight_types_config
      x-stackQL-method: projects_locations_insight_types_get_config
      x-stackQL-verb: select
    patch:
      description: Updates an InsightTypeConfig change. This will create a new revision of the config.
      operationId: recommender.projects.locations.insightTypes.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: insight_types_config
      x-stackQL-method: projects_locations_insight_types_update_config
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted':
    parameters: *ref_1
    post:
      description: Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.
      operationId: recommender.projects.locations.insightTypes.insights.markAccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkInsightAcceptedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: projects_locations_insight_types_insights_mark_accepted
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}':
    parameters: *ref_1
    get:
      description: Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.
      operationId: recommender.projects.locations.insightTypes.insights.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: projects_locations_insight_types_insights_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights':
    parameters: *ref_1
    get:
      description: Lists insights for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified insight type.
      operationId: recommender.projects.locations.insightTypes.insights.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1ListInsightsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: projects_locations_insight_types_insights_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.insights
  '/v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/config':
    parameters: *ref_1
    patch:
      description: Updates a Recommender Config. This will create a new revision of the config.
      operationId: recommender.projects.locations.recommenders.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: recommenders_config
      x-stackQL-method: projects_locations_recommenders_update_config
      x-stackQL-verb: exec
    get:
      description: Gets the requested Recommender Config. There is only one instance of the config for each Recommender.
      operationId: recommender.projects.locations.recommenders.getConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommenders_config
      x-stackQL-method: projects_locations_recommenders_get_config
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.projects.locations.recommenders.recommendations.markFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationFailedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: projects_locations_recommenders_recommendations_mark_failed
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}':
    parameters: *ref_1
    get:
      description: Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: projects_locations_recommenders_recommendations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.projects.locations.recommenders.recommendations.markSucceeded
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationSucceededRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: projects_locations_recommenders_recommendations_mark_succeeded
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations':
    parameters: *ref_1
    get:
      description: Lists recommendations for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1ListRecommendationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: projects_locations_recommenders_recommendations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.recommendations
  '/v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markDismissed':
    parameters: *ref_1
    post:
      description: Mark the Recommendation State as Dismissed. Users can use this method to indicate to the Recommender API that an ACTIVE recommendation has to be marked back as DISMISSED. MarkRecommendationDismissed can be applied to recommendations in ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.markDismissed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationDismissedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: projects_locations_recommenders_recommendations_mark_dismissed
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.projects.locations.recommenders.recommendations.markClaimed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationClaimedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: projects_locations_recommenders_recommendations_mark_claimed
      x-stackQL-verb: exec
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}':
    parameters: *ref_1
    get:
      description: Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.
      operationId: recommender.billingAccounts.locations.insightTypes.insights.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: billing_accounts_locations_insight_types_insights_get
      x-stackQL-verb: select
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted':
    parameters: *ref_1
    post:
      description: Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.
      operationId: recommender.billingAccounts.locations.insightTypes.insights.markAccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkInsightAcceptedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: billing_accounts_locations_insight_types_insights_mark_accepted
      x-stackQL-verb: exec
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights':
    parameters: *ref_1
    get:
      description: Lists insights for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified insight type.
      operationId: recommender.billingAccounts.locations.insightTypes.insights.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1ListInsightsResponse'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: insights
      x-stackQL-method: billing_accounts_locations_insight_types_insights_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.insights
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/config':
    parameters: *ref_1
    get:
      description: Gets the requested InsightTypeConfig. There is only one instance of the config for each InsightType.
      operationId: recommender.billingAccounts.locations.insightTypes.getConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: insight_types_config
      x-stackQL-method: billing_accounts_locations_insight_types_get_config
      x-stackQL-verb: select
    patch:
      description: Updates an InsightTypeConfig change. This will create a new revision of the config.
      operationId: recommender.billingAccounts.locations.insightTypes.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: insight_types_config
      x-stackQL-method: billing_accounts_locations_insight_types_update_config
      x-stackQL-verb: exec
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/config':
    parameters: *ref_1
    get:
      description: Gets the requested Recommender Config. There is only one instance of the config for each Recommender.
      operationId: recommender.billingAccounts.locations.recommenders.getConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommenders_config
      x-stackQL-method: billing_accounts_locations_recommenders_get_config
      x-stackQL-verb: select
    patch:
      description: Updates a Recommender Config. This will create a new revision of the config.
      operationId: recommender.billingAccounts.locations.recommenders.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: recommenders_config
      x-stackQL-method: billing_accounts_locations_recommenders_update_config
      x-stackQL-verb: exec
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.billingAccounts.locations.recommenders.recommendations.markClaimed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationClaimedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: billing_accounts_locations_recommenders_recommendations_mark_claimed
      x-stackQL-verb: exec
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.billingAccounts.locations.recommenders.recommendations.markFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationFailedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: billing_accounts_locations_recommenders_recommendations_mark_failed
      x-stackQL-verb: exec
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.billingAccounts.locations.recommenders.recommendations.markSucceeded
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationSucceededRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: billing_accounts_locations_recommenders_recommendations_mark_succeeded
      x-stackQL-verb: exec
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations':
    parameters: *ref_1
    get:
      description: Lists recommendations for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified recommender.
      operationId: recommender.billingAccounts.locations.recommenders.recommendations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1ListRecommendationsResponse'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: billing_accounts_locations_recommenders_recommendations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.recommendations
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}':
    parameters: *ref_1
    get:
      description: Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.
      operationId: recommender.billingAccounts.locations.recommenders.recommendations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: billing_accounts_locations_recommenders_recommendations_get
      x-stackQL-verb: select
  '/v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markDismissed':
    parameters: *ref_1
    post:
      description: Mark the Recommendation State as Dismissed. Users can use this method to indicate to the Recommender API that an ACTIVE recommendation has to be marked back as DISMISSED. MarkRecommendationDismissed can be applied to recommendations in ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.
      operationId: recommender.billingAccounts.locations.recommenders.recommendations.markDismissed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationDismissedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: billing_accounts_locations_recommenders_recommendations_mark_dismissed
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.organizations.locations.recommenders.recommendations.markSucceeded
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationSucceededRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: organizations_locations_recommenders_recommendations_mark_succeeded
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.organizations.locations.recommenders.recommendations.markClaimed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationClaimedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: organizations_locations_recommenders_recommendations_mark_claimed
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations':
    parameters: *ref_1
    get:
      description: Lists recommendations for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified recommender.
      operationId: recommender.organizations.locations.recommenders.recommendations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1ListRecommendationsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: organizations_locations_recommenders_recommendations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.recommendations
  '/v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed':
    parameters: *ref_1
    post:
      description: 'Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.'
      operationId: recommender.organizations.locations.recommenders.recommendations.markFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationFailedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: organizations_locations_recommenders_recommendations_mark_failed
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}':
    parameters: *ref_1
    get:
      description: Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.
      operationId: recommender.organizations.locations.recommenders.recommendations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: organizations_locations_recommenders_recommendations_get
      x-stackQL-verb: select
  '/v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markDismissed':
    parameters: *ref_1
    post:
      description: Mark the Recommendation State as Dismissed. Users can use this method to indicate to the Recommender API that an ACTIVE recommendation has to be marked back as DISMISSED. MarkRecommendationDismissed can be applied to recommendations in ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.
      operationId: recommender.organizations.locations.recommenders.recommendations.markDismissed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkRecommendationDismissedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Recommendation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: path
          name: recommendationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-method: organizations_locations_recommenders_recommendations_mark_dismissed
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/config':
    parameters: *ref_1
    get:
      description: Gets the requested Recommender Config. There is only one instance of the config for each Recommender.
      operationId: recommender.organizations.locations.recommenders.getConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommenders_config
      x-stackQL-method: organizations_locations_recommenders_get_config
      x-stackQL-verb: select
    patch:
      description: Updates a Recommender Config. This will create a new revision of the config.
      operationId: recommender.organizations.locations.recommenders.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1RecommenderConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: recommendersId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: recommenders_config
      x-stackQL-method: organizations_locations_recommenders_update_config
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}':
    parameters: *ref_1
    get:
      description: Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.
      operationId: recommender.organizations.locations.insightTypes.insights.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: organizations_locations_insight_types_insights_get
      x-stackQL-verb: select
  '/v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights':
    parameters: *ref_1
    get:
      description: Lists insights for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified insight type.
      operationId: recommender.organizations.locations.insightTypes.insights.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1ListInsightsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: organizations_locations_insight_types_insights_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.insights
  '/v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted':
    parameters: *ref_1
    post:
      description: Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.
      operationId: recommender.organizations.locations.insightTypes.insights.markAccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1MarkInsightAcceptedRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1Insight'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: organizations_locations_insight_types_insights_mark_accepted
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/config':
    parameters: *ref_1
    get:
      description: Gets the requested InsightTypeConfig. There is only one instance of the config for each InsightType.
      operationId: recommender.organizations.locations.insightTypes.getConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: insight_types_config
      x-stackQL-method: organizations_locations_insight_types_get_config
      x-stackQL-verb: select
    patch:
      description: Updates an InsightTypeConfig change. This will create a new revision of the config.
      operationId: recommender.organizations.locations.insightTypes.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1InsightTypeConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightTypesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: insight_types_config
      x-stackQL-method: organizations_locations_insight_types_update_config
      x-stackQL-verb: exec
