openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: SAS Portal API
  description: ''
  version: v1alpha1
  x-discovery-doc-revision: '20240521'
  x-generated-date: '2024-06-02'
externalDocs:
  url: https://developers.google.com/spectrum-access-system/
servers:
  - url: https://sasportal.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/sasportal: Read, create, update, and delete your SAS Portal data.
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    SasPortalSetupSasAnalyticsMetadata:
      id: SasPortalSetupSasAnalyticsMetadata
      properties: {}
      description: >-
        Metadata returned by the long running operation for the
        SetupSasAnalytics rpc.
      type: object
    SasPortalValidateInstallerResponse:
      properties: {}
      id: SasPortalValidateInstallerResponse
      type: object
      description: Response for ValidateInstaller.
    SasPortalProvisionDeploymentRequest:
      description: >-
        Request for [ProvisionDeployment].
        [spectrum.sas.portal.v1alpha1.Provisioning.ProvisionDeployment]. GCP
        Project, Organization Info, and callerâ€™s GAIA ID should be retrieved
        from the RPC handler, and used as inputs to create a new SAS
        organization (if not exists) and a new SAS deployment.
      type: object
      id: SasPortalProvisionDeploymentRequest
      properties:
        organizationId:
          type: string
          description: >-
            Optional. If this field is set then a new deployment will be created
            under the organization specified by this id.
          format: int64
        newDeploymentDisplayName:
          description: >-
            Optional. If this field is set, and a new SAS Portal Deployment
            needs to be created, its display name will be set to the value of
            this field.
          type: string
        newOrganizationDisplayName:
          description: >-
            Optional. If this field is set, and a new SAS Portal Organization
            needs to be created, its display name will be set to the value of
            this field.
          type: string
    SasPortalMigrateOrganizationMetadata:
      type: object
      properties:
        operationState:
          enum:
            - OPERATION_STATE_UNSPECIFIED
            - OPERATION_STATE_PENDING
            - OPERATION_STATE_RUNNING
            - OPERATION_STATE_SUCCEEDED
            - OPERATION_STATE_FAILED
          readOnly: true
          enumDescriptions:
            - Unspecified.
            - Pending (Not started).
            - In-progress.
            - Done successfully.
            - Done with errors.
          description: Output only. Current operation state
          type: string
      description: >-
        Long-running operation metadata message returned by the
        MigrateOrganization.
      id: SasPortalMigrateOrganizationMetadata
    SasPortalListCustomersResponse:
      description: Response for `ListCustomers`.
      properties:
        nextPageToken:
          description: >-
            A pagination token returned from a previous call to ListCustomers
            that indicates from where listing should continue. If the field is
            missing or empty, it means there are no more customers.
          type: string
        customers:
          type: array
          items:
            $ref: '#/components/schemas/SasPortalCustomer'
          description: The list of customers that match the request.
      id: SasPortalListCustomersResponse
      type: object
    SasPortalEmpty:
      type: object
      id: SasPortalEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
    SasPortalDeploymentAssociation:
      id: SasPortalDeploymentAssociation
      description: Association between a gcp project and a SAS user id.
      type: object
      properties:
        gcpProjectId:
          type: string
          description: GCP project id of the associated project.
        userId:
          type: string
          description: User id of the deployment.
    SasPortalGetPolicyRequest:
      properties:
        resource:
          type: string
          description: Required. The resource for which the policy is being requested.
      type: object
      id: SasPortalGetPolicyRequest
      description: Request message for `GetPolicy` method.
    SasPortalMoveDeploymentRequest:
      properties:
        destination:
          type: string
          description: >-
            Required. The name of the new parent resource node or customer to
            reparent the deployment under.
      description: Request for MoveDeployment.
      id: SasPortalMoveDeploymentRequest
      type: object
    SasPortalDeviceAirInterface:
      properties:
        radioTechnology:
          description: >-
            Conditional. This field specifies the radio access technology that
            is used for the CBSD.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - RADIO_TECHNOLOGY_UNSPECIFIED
            - E_UTRA
            - CAMBIUM_NETWORKS
            - FOUR_G_BBW_SAA_1
            - NR
            - DOODLE_CBRS
            - CW
            - REDLINE
            - TARANA_WIRELESS
          type: string
        supportedSpec:
          description: >-
            Optional. This field is related to the `radioTechnology` and
            provides the air interface specification that the CBSD is compliant
            with at the time of registration.
          type: string
      id: SasPortalDeviceAirInterface
      type: object
      description: Information about the device's air interface.
    SasPortalDeployment:
      id: SasPortalDeployment
      type: object
      description: The Deployment.
      properties:
        frns:
          description: >-
            Output only. The FCC Registration Numbers (FRNs) copied from its
            direct parent.
          items:
            type: string
          type: array
          readOnly: true
        displayName:
          description: The deployment's display name.
          type: string
        sasUserIds:
          items:
            type: string
          description: >-
            User ID used by the devices belonging to this deployment. Each
            deployment should be associated with one unique user ID.
          type: array
        name:
          type: string
          description: Output only. Resource name.
          readOnly: true
    SasPortalNrqzValidation:
      description: Information about National Radio Quiet Zone validation.
      type: object
      properties:
        latitude:
          format: double
          type: number
          description: Device latitude that's associated with the validation.
        caseId:
          type: string
          description: Validation case ID.
        state:
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - FINAL
          type: string
          enumDescriptions:
            - Unspecified state.
            - Draft state.
            - Final state.
          description: State of the NRQZ validation info.
        cpiId:
          type: string
          description: CPI who signed the validation.
        longitude:
          description: Device longitude that's associated with the validation.
          format: double
          type: number
      id: SasPortalNrqzValidation
    SasPortalSignDeviceRequest:
      type: object
      description: Request for SignDevice.
      properties:
        device:
          description: >-
            Required. The device to sign. The device fields name, fcc_id and
            serial_number must be set. The user_id field must be set.
          $ref: '#/components/schemas/SasPortalDevice'
      id: SasPortalSignDeviceRequest
    SasPortalCreateSignedDeviceRequest:
      type: object
      id: SasPortalCreateSignedDeviceRequest
      properties:
        encodedDevice:
          description: >-
            Required. JSON Web Token signed using a CPI private key. Payload
            must be the JSON encoding of the device. The user_id field must be
            set.
          type: string
          format: byte
        installerId:
          type: string
          description: >-
            Required. Unique installer id (CPI ID) from the Certified
            Professional Installers database.
      description: Request for CreateSignedDevice.
    SasPortalGenerateSecretRequest:
      id: SasPortalGenerateSecretRequest
      description: Request for GenerateSecret.
      type: object
      properties: {}
    SasPortalDpaMoveList:
      properties:
        frequencyRange:
          description: The frequency range that the move list affects.
          $ref: '#/components/schemas/SasPortalFrequencyRange'
        dpaId:
          type: string
          description: The ID of the DPA.
      description: An entry in a DPA's move list.
      type: object
      id: SasPortalDpaMoveList
    SasPortalMoveNodeRequest:
      id: SasPortalMoveNodeRequest
      type: object
      description: Request for MoveNode.
      properties:
        destination:
          type: string
          description: >-
            Required. The name of the new parent resource node or customer to
            reparent the node under.
    SasPortalGcpProjectDeployment:
      description: >-
        Deployment associated with the GCP project. Includes whether SAS
        analytics has been enabled or not.
      properties:
        hasEnabledAnalytics:
          type: boolean
          description: Whether SAS analytics has been enabled.
        deployment:
          $ref: '#/components/schemas/SasPortalDeployment'
          description: Deployment associated with the GCP project.
      id: SasPortalGcpProjectDeployment
      type: object
    SasPortalInstallationParams:
      description: Information about the device installation parameters.
      properties:
        cpeCbsdIndication:
          description: >-
            If present, this parameter specifies whether the CBSD is a CPE-CBSD
            or not.
          type: boolean
        horizontalAccuracy:
          format: double
          description: >-
            A positive number in meters to indicate accuracy of the device
            antenna horizontal location. This optional parameter should only be
            present if its value is less than the FCC requirement of 50 meters.
          type: number
        antennaGain:
          description: >-
            Peak antenna gain in dBi. This parameter is a double with a value
            between -127 and +128 (dBi) inclusive. Part of Release 2 to support
            floating-point value
          format: double
          type: number
        latitude:
          description: >-
            Latitude of the device antenna location in degrees relative to the
            WGS 84 datum. The allowed range is from -90.000000 to +90.000000.
            Positive values represent latitudes north of the equator; negative
            values south of the equator.
          format: double
          type: number
        height:
          description: >-
            Device antenna height in meters. When the `heightType` parameter
            value is "AGL", the antenna height should be given relative to
            ground level. When the `heightType` parameter value is "AMSL", it is
            given with respect to WGS84 datum.
          format: double
          type: number
        indoorDeployment:
          type: boolean
          description: >-
            Whether the device antenna is indoor or not. `true`: indoor.
            `false`: outdoor.
        longitude:
          description: >-
            Longitude of the device antenna location in degrees relative to the
            WGS 84 datum. The allowed range is from -180.000000 to +180.000000.
            Positive values represent longitudes east of the prime meridian;
            negative values west of the prime meridian.
          type: number
          format: double
        heightType:
          type: string
          enum:
            - HEIGHT_TYPE_UNSPECIFIED
            - HEIGHT_TYPE_AGL
            - HEIGHT_TYPE_AMSL
          enumDescriptions:
            - Unspecified height type.
            - AGL height is measured relative to the ground level.
            - AMSL height is measured relative to the mean sea level.
          description: Specifies how the height is measured.
        antennaBeamwidth:
          type: integer
          description: >-
            3-dB antenna beamwidth of the antenna in the horizontal-plane in
            degrees. This parameter is an unsigned integer having a value
            between 0 and 360 (degrees) inclusive; it is optional for Category A
            devices and conditional for Category B devices.
          format: int32
        verticalAccuracy:
          type: number
          format: double
          description: >-
            A positive number in meters to indicate accuracy of the device
            antenna vertical location. This optional parameter should only be
            present if its value is less than the FCC requirement of 3 meters.
        eirpCapability:
          description: >-
            This parameter is the maximum device EIRP in units of dBm/10MHz and
            is an integer with a value between -127 and +47 (dBm/10 MHz)
            inclusive. If not included, SAS interprets it as maximum allowable
            EIRP in units of dBm/10MHz for device category.
          format: int32
          type: integer
        antennaDowntilt:
          description: >-
            Antenna downtilt in degrees and is an integer with a value between
            -90 and +90 inclusive; a negative value means the antenna is tilted
            up (above horizontal). This parameter is optional for Category A
            devices and conditional for Category B devices.
          type: integer
          format: int32
        antennaAzimuth:
          type: integer
          format: int32
          description: >-
            Boresight direction of the horizontal plane of the antenna in
            degrees with respect to true north. The value of this parameter is
            an integer with a value between 0 and 359 inclusive. A value of 0
            degrees means true north; a value of 90 degrees means east. This
            parameter is optional for Category A devices and conditional for
            Category B devices.
        antennaModel:
          type: string
          description: >-
            If an external antenna is used, the antenna model is optionally
            provided in this field. The string has a maximum length of 128
            octets.
      type: object
      id: SasPortalInstallationParams
    SasPortalUpdateSignedDeviceRequest:
      type: object
      properties:
        encodedDevice:
          type: string
          format: byte
          description: >-
            Required. The JSON Web Token signed using a CPI private key. Payload
            must be the JSON encoding of the device. The user_id field must be
            set.
        installerId:
          type: string
          description: >-
            Required. Unique installer ID (CPI ID) from the Certified
            Professional Installers database.
      id: SasPortalUpdateSignedDeviceRequest
      description: Request for UpdateSignedDevice.
    SasPortalAssignment:
      id: SasPortalAssignment
      properties:
        role:
          type: string
          description: Required. Role that is assigned to `members`.
        members:
          items:
            type: string
          type: array
          description: >-
            The identities the role is assigned to. It can have the following
            values: * `{user_email}`: An email address that represents a
            specific Google account. For example: `alice@gmail.com`. *
            `{group_email}`: An email address that represents a Google group.
            For example, `viewers@gmail.com`.
      description: Associates `members` with a `role`.
      type: object
    SasPortalSetPolicyRequest:
      description: Request message for `SetPolicy` method.
      properties:
        disableNotification:
          type: boolean
          description: >-
            Optional. Set the field as `true` to disable the onboarding
            notification.
        policy:
          description: Required. The policy to be applied to the `resource`.
          $ref: '#/components/schemas/SasPortalPolicy'
        resource:
          type: string
          description: >-
            Required. The resource for which the policy is being specified. This
            policy replaces any existing policy.
      type: object
      id: SasPortalSetPolicyRequest
    SasPortalDeviceModel:
      properties:
        name:
          description: The name of the device model.
          type: string
        softwareVersion:
          description: The software version of the device.
          type: string
        vendor:
          type: string
          description: The name of the device vendor.
        firmwareVersion:
          type: string
          description: The firmware version of the device.
        hardwareVersion:
          type: string
          description: The hardware version of the device.
      id: SasPortalDeviceModel
      description: Information about the model of the device.
      type: object
    SasPortalListGcpProjectDeploymentsResponse:
      type: object
      properties:
        deployments:
          type: array
          description: Optional. Deployments associated with the GCP project
          items:
            $ref: '#/components/schemas/SasPortalGcpProjectDeployment'
      id: SasPortalListGcpProjectDeploymentsResponse
      description: Response for [ListGcpProjectDeployments].
    SasPortalNode:
      description: The Node.
      type: object
      id: SasPortalNode
      properties:
        sasUserIds:
          description: User ids used by the devices belonging to this node.
          type: array
          items:
            type: string
        displayName:
          type: string
          description: The node's display name.
        name:
          type: string
          description: Output only. Resource name.
    SasPortalValidateInstallerRequest:
      properties:
        encodedSecret:
          type: string
          description: >-
            Required. JSON Web Token signed using a CPI private key. Payload
            must include a "secret" claim whose value is the secret.
        secret:
          description: Required. Secret returned by the GenerateSecret.
          type: string
        installerId:
          description: >-
            Required. Unique installer id (CPI ID) from the Certified
            Professional Installers database.
          type: string
      type: object
      description: Request for ValidateInstaller.
      id: SasPortalValidateInstallerRequest
    SasPortalSetupSasAnalyticsResponse:
      description: >-
        Response returned by the long running operation for the
        SetupSasAnalytics rpc.
      type: object
      properties: {}
      id: SasPortalSetupSasAnalyticsResponse
    SasPortalFrequencyRange:
      id: SasPortalFrequencyRange
      properties:
        highFrequencyMhz:
          description: The highest frequency of the frequency range in MHz.
          format: double
          type: number
        lowFrequencyMhz:
          format: double
          description: The lowest frequency of the frequency range in MHz.
          type: number
      type: object
      description: Frequency range from `low_frequency` to `high_frequency`.
    SasPortalTestPermissionsRequest:
      description: Request message for `TestPermissions` method.
      type: object
      properties:
        resource:
          description: >-
            Required. The resource for which the permissions are being
            requested.
          type: string
        permissions:
          items:
            type: string
          description: The set of permissions to check for the `resource`.
          type: array
      id: SasPortalTestPermissionsRequest
    SasPortalTestPermissionsResponse:
      id: SasPortalTestPermissionsResponse
      properties:
        permissions:
          items:
            type: string
          type: array
          description: A set of permissions that the caller is allowed.
      description: Response message for `TestPermissions` method.
      type: object
    SasPortalOperation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      id: SasPortalOperation
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
        response:
          type: object
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        error:
          $ref: '#/components/schemas/SasPortalStatus'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
      type: object
    SasPortalChannelWithScore:
      id: SasPortalChannelWithScore
      description: The channel with score.
      properties:
        frequencyRange:
          $ref: '#/components/schemas/SasPortalFrequencyRange'
          description: The frequency range of the channel.
        score:
          type: number
          description: The channel score, normalized to be in the range [0,100].
          format: double
      type: object
    SasPortalPolicy:
      id: SasPortalPolicy
      type: object
      properties:
        assignments:
          items:
            $ref: '#/components/schemas/SasPortalAssignment'
          type: array
          description: List of assignments
        etag:
          type: string
          description: >-
            The etag is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the etag in
            the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An etag is returned in the response to
            GetPolicy, and systems are expected to put that etag in the request
            to SetPolicy to ensure that their change will be applied to the same
            version of the policy. If no etag is provided in the call to
            GetPolicy, then the existing policy is overwritten blindly.
          format: byte
      description: Defines an access control policy to the resources.
    SasPortalDeviceConfig:
      type: object
      description: Information about the device configuration.
      properties:
        updateTime:
          type: string
          description: Output only. The last time the device configuration was edited.
          format: google-datetime
        measurementCapabilities:
          type: array
          description: Measurement reporting capabilities of the device.
          items:
            enum:
              - MEASUREMENT_CAPABILITY_UNSPECIFIED
              - MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT
              - MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT
            enumDescriptions:
              - ''
              - ''
              - ''
            type: string
        callSign:
          description: The call sign of the device operator.
          type: string
        airInterface:
          description: Information about this device's air interface.
          $ref: '#/components/schemas/SasPortalDeviceAirInterface'
        state:
          description: State of the configuration.
          type: string
          enum:
            - DEVICE_CONFIG_STATE_UNSPECIFIED
            - DRAFT
            - FINAL
          enumDescriptions:
            - ''
            - ''
            - ''
        isSigned:
          type: boolean
          description: Output only. Whether the configuration has been signed by a CPI.
        category:
          enumDescriptions:
            - Unspecified device category.
            - Category A.
            - Category B.
          type: string
          enum:
            - DEVICE_CATEGORY_UNSPECIFIED
            - DEVICE_CATEGORY_A
            - DEVICE_CATEGORY_B
          description: FCC category of the device.
        userId:
          description: The identifier of a device user.
          type: string
        installationParams:
          description: Installation parameters for the device.
          $ref: '#/components/schemas/SasPortalInstallationParams'
        model:
          description: Information about this device model.
          $ref: '#/components/schemas/SasPortalDeviceModel'
      id: SasPortalDeviceConfig
    SasPortalListLegacyOrganizationsResponse:
      description: >-
        Response for [ListLegacyOrganizations].
        [spectrum.sas.portal.v1alpha1.Provisioning.ListLegacyOrganizations].
      id: SasPortalListLegacyOrganizationsResponse
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/SasPortalOrganization'
          description: Optional. Legacy SAS organizations.
    SasPortalStatus:
      type: object
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
      id: SasPortalStatus
    SasPortalOrganization:
      type: object
      description: Organization details.
      properties:
        id:
          format: int64
          description: Id of organization
          type: string
        displayName:
          type: string
          description: Name of organization
      id: SasPortalOrganization
    SasPortalGenerateSecretResponse:
      properties:
        secret:
          description: The secret generated by the string and used by ValidateInstaller.
          type: string
      description: Response for GenerateSecret.
      type: object
      id: SasPortalGenerateSecretResponse
    SasPortalDevice:
      type: object
      id: SasPortalDevice
      properties:
        grants:
          type: array
          description: Output only. Grants held by the device.
          items:
            $ref: '#/components/schemas/SasPortalDeviceGrant'
        state:
          enumDescriptions:
            - Unspecified state.
            - >-
              Device created in the SAS Portal, however, not yet registered with
              SAS.
            - Device registered with SAS.
            - Device de-registered with SAS.
          type: string
          enum:
            - DEVICE_STATE_UNSPECIFIED
            - RESERVED
            - REGISTERED
            - DEREGISTERED
          description: Output only. Device state.
        currentChannels:
          description: Output only. Current channels with scores.
          deprecated: true
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SasPortalChannelWithScore'
        activeConfig:
          description: >-
            Output only. Current configuration of the device as registered to
            the SAS.
          $ref: '#/components/schemas/SasPortalDeviceConfig'
        grantRangeAllowlists:
          type: array
          items:
            $ref: '#/components/schemas/SasPortalFrequencyRange'
          description: >-
            Only ranges that are within the allowlists are available for new
            grants.
        preloadedConfig:
          description: Configuration of the device, as specified via SAS Portal API.
          $ref: '#/components/schemas/SasPortalDeviceConfig'
        fccId:
          description: >-
            The FCC identifier of the device. Refer to
            https://www.fcc.gov/oet/ea/fccid for FccID format. Accept
            underscores and periods because some test-SAS customers use them.
          type: string
        serialNumber:
          description: A serial number assigned to the device by the device manufacturer.
          type: string
        displayName:
          description: Device display name.
          type: string
        name:
          type: string
          description: Output only. The resource path name.
        deviceMetadata:
          description: >-
            Device parameters that can be overridden by both SAS Portal and SAS
            registration requests.
          $ref: '#/components/schemas/SasPortalDeviceMetadata'
    SasPortalSetupSasAnalyticsRequest:
      type: object
      description: Request for the SetupSasAnalytics rpc.
      id: SasPortalSetupSasAnalyticsRequest
      properties:
        userId:
          type: string
          description: >-
            Optional. User id to setup analytics for, if not provided the user
            id associated with the project is used. optional
    SasPortalCustomer:
      properties:
        displayName:
          description: >-
            Required. Name of the organization that the customer entity
            represents.
          type: string
        sasUserIds:
          description: User IDs used by the devices belonging to this customer.
          items:
            type: string
          type: array
        name:
          type: string
          description: Output only. Resource name of the customer.
      description: Entity representing a SAS customer.
      type: object
      id: SasPortalCustomer
    SasPortalListNodesResponse:
      id: SasPortalListNodesResponse
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/SasPortalNode'
          description: The nodes that match the request.
          type: array
        nextPageToken:
          description: >-
            A pagination token returned from a previous call to ListNodes that
            indicates from where listing should continue. If the field is
            missing or empty, it means there is no more nodes.
          type: string
      type: object
      description: Response for ListNodes.
    SasPortalListDeploymentsResponse:
      description: Response for ListDeployments.
      type: object
      id: SasPortalListDeploymentsResponse
      properties:
        deployments:
          items:
            $ref: '#/components/schemas/SasPortalDeployment'
          description: The deployments that match the request.
          type: array
        nextPageToken:
          type: string
          description: >-
            A pagination token returned from a previous call to ListDeployments
            that indicates from where listing should continue. If the field is
            missing or empty, it means there are no more deployments.
    SasPortalMoveDeviceRequest:
      type: object
      description: Request for MoveDevice.
      properties:
        destination:
          type: string
          description: >-
            Required. The name of the new parent resource node or customer to
            reparent the device under.
      id: SasPortalMoveDeviceRequest
    SasPortalListDevicesResponse:
      description: Response for ListDevices.
      id: SasPortalListDevicesResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A pagination token returned from a previous call to ListDevices that
            indicates from where listing should continue. If the field is
            missing or empty, it means there is no more devices.
        devices:
          description: The devices that match the request.
          items:
            $ref: '#/components/schemas/SasPortalDevice'
          type: array
    SasPortalDeviceGrant:
      description: >-
        Device grant. It is an authorization provided by the Spectrum Access
        System to a device to transmit using specified operating parameters
        after a successful heartbeat by the device.
      properties:
        maxEirp:
          format: double
          description: >-
            Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by
            the grant. The maximum EIRP is in units of dBm/MHz. The value of
            `maxEirp` represents the average (RMS) EIRP that would be measured
            by the procedure defined in FCC part 96.41(e)(3).
          type: number
        moveList:
          items:
            $ref: '#/components/schemas/SasPortalDpaMoveList'
          description: The DPA move lists on which this grant appears.
          type: array
        expireTime:
          format: google-datetime
          type: string
          description: The expiration time of the grant.
        frequencyRange:
          $ref: '#/components/schemas/SasPortalFrequencyRange'
          description: The transmission frequency range.
        grantId:
          description: Grant Id.
          type: string
        channelType:
          description: Type of channel used.
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - CHANNEL_TYPE_UNSPECIFIED
            - CHANNEL_TYPE_GAA
            - CHANNEL_TYPE_PAL
          type: string
        state:
          enumDescriptions:
            - ''
            - >-
              The grant has been granted but the device is not heartbeating on
              it.
            - The grant has been terminated by the SAS.
            - The grant has been suspended by the SAS.
            - The device is currently transmitting.
            - The grant has expired.
          enum:
            - GRANT_STATE_UNSPECIFIED
            - GRANT_STATE_GRANTED
            - GRANT_STATE_TERMINATED
            - GRANT_STATE_SUSPENDED
            - GRANT_STATE_AUTHORIZED
            - GRANT_STATE_EXPIRED
          type: string
          description: State of the grant.
        lastHeartbeatTransmitExpireTime:
          type: string
          description: The transmit expiration time of the last heartbeat.
          format: google-datetime
        suspensionReason:
          description: If the grant is suspended, the reason(s) for suspension.
          items:
            type: string
          type: array
      type: object
      id: SasPortalDeviceGrant
    SasPortalMigrateOrganizationRequest:
      description: >-
        Request for [MigrateOrganization].
        [spectrum.sas.portal.v1alpha1.Provisioning.MigrateOrganization]. GCP
        Project, Organization Info, and caller's GAIA ID should be retrieved
        from the RPC handler, and used to check authorization on SAS Portal
        organization and to create GCP Projects.
      type: object
      properties:
        organizationId:
          type: string
          format: int64
          description: Required. Id of the SAS organization to be migrated.
      id: SasPortalMigrateOrganizationRequest
    SasPortalProvisionDeploymentResponse:
      type: object
      description: >-
        Response for [ProvisionDeployment].
        [spectrum.sas.portal.v1alpha1.Provisioning.ProvisionDeployment].
      id: SasPortalProvisionDeploymentResponse
      properties:
        errorMessage:
          description: >-
            Optional. Optional error message if the provisioning request is not
            successful.
          type: string
    SasPortalDeviceMetadata:
      id: SasPortalDeviceMetadata
      description: Device data overridable by both SAS Portal and registration requests.
      properties:
        nrqzValidated:
          deprecated: true
          description: >-
            Output only. Set to `true` if a CPI has validated that they have
            coordinated with the National Quiet Zone office.
          readOnly: true
          type: boolean
        antennaModel:
          description: >-
            If populated, the Antenna Model Pattern to use. Format is:
            `RecordCreatorId:PatternId`
          type: string
        commonChannelGroup:
          description: >-
            Common Channel Group (CCG). A group of CBSDs in the same ICG
            requesting a common primary channel assignment. For more details,
            see [CBRSA-TS-2001
            V3.0.0](https://ongoalliance.org/wp-content/uploads/2020/02/CBRSA-TS-2001-V3.0.0_Approved-for-publication.pdf).
          type: string
        interferenceCoordinationGroup:
          description: >-
            Interference Coordination Group (ICG). A group of CBSDs that manage
            their own interference with the group. For more details, see
            [CBRSA-TS-2001
            V3.0.0](https://ongoalliance.org/wp-content/uploads/2020/02/CBRSA-TS-2001-V3.0.0_Approved-for-publication.pdf).
          type: string
        nrqzValidation:
          readOnly: true
          $ref: '#/components/schemas/SasPortalNrqzValidation'
          description: Output only. National Radio Quiet Zone validation info.
      type: object
    SasPortalMigrateOrganizationResponse:
      properties:
        deploymentAssociation:
          type: array
          description: >-
            Optional. A list of deployment association that were created for the
            migration, or current associations if they already exist.
          items:
            $ref: '#/components/schemas/SasPortalDeploymentAssociation'
      id: SasPortalMigrateOrganizationResponse
      description: >-
        Response for [MigrateOrganization].
        [spectrum.sas.portal.v1alpha1.Provisioning.MigrateOrganization].
      type: object
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    policies:
      id: sasportal.policies
      name: policies
      title: Policies
      methods:
        policies_set:
          operation:
            $ref: '#/paths/~1v1alpha1~1policies:set/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        policies_test:
          operation:
            $ref: '#/paths/~1v1alpha1~1policies:test/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        policies_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1policies:get/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    customers:
      id: sasportal.customers
      name: customers
      title: Customers
      methods:
        customers_provision_deployment:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers:provisionDeployment/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_setup_sas_analytics:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers:setupSasAnalytics/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _customers_list:
          operation: &ref_1
            $ref: '#/paths/~1v1alpha1~1customers/get'
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.customers
        customers_list:
          operation: *ref_1
          response: *ref_2
        customers_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_patch:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_migrate_organization:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers:migrateOrganization/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/customers/methods/customers_list'
          - $ref: '#/components/x-stackQL-resources/customers/methods/customers_get'
        insert: []
        update: []
        delete: []
    customers_legacy_organizations:
      id: sasportal.customers_legacy_organizations
      name: customers_legacy_organizations
      title: Customers_legacy_organizations
      methods:
        customers_list_legacy_organizations:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers:listLegacyOrganizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customers_legacy_organizations/methods/customers_list_legacy_organizations
        insert: []
        update: []
        delete: []
    customers_gcp_project_deployments:
      id: sasportal.customers_gcp_project_deployments
      name: customers_gcp_project_deployments
      title: Customers_gcp_project_deployments
      methods:
        customers_list_gcp_project_deployments:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers:listGcpProjectDeployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customers_gcp_project_deployments/methods/customers_list_gcp_project_deployments
        insert: []
        update: []
        delete: []
    devices:
      id: sasportal.devices
      name: devices
      title: Devices
      methods:
        customers_devices_get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _customers_devices_list:
          operation: &ref_3
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1devices/get'
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        customers_devices_list:
          operation: *ref_3
          response: *ref_4
        customers_devices_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1devices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_sign_device:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}:signDevice/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_devices_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1devices/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _customers_nodes_devices_list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1devices/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        customers_nodes_devices_list:
          operation: *ref_5
          response: *ref_6
        _customers_deployments_devices_list:
          operation: &ref_7
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}~1devices/get
          response: &ref_8
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        customers_deployments_devices_list:
          operation: *ref_7
          response: *ref_8
        customers_deployments_devices_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}~1devices/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_sign_device:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}:signDevice/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _nodes_deployments_devices_list:
          operation: &ref_9
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}~1devices/get
          response: &ref_10
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        nodes_deployments_devices_list:
          operation: *ref_9
          response: *ref_10
        nodes_deployments_devices_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}~1devices/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _nodes_nodes_devices_list:
          operation: &ref_11
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1devices/get
          response: &ref_12
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        nodes_nodes_devices_list:
          operation: *ref_11
          response: *ref_12
        nodes_nodes_devices_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1devices/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_patch:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_delete:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _nodes_devices_list:
          operation: &ref_13
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices/get'
          response: &ref_14
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        nodes_devices_list:
          operation: *ref_13
          response: *ref_14
        nodes_devices_sign_device:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}:signDevice/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_devices_get
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_devices_list
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_nodes_devices_list
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_deployments_devices_list
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/deployments_devices_get
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_deployments_devices_list
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_nodes_devices_list
          - $ref: '#/components/x-stackQL-resources/devices/methods/nodes_devices_get'
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_devices_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_devices_create
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_nodes_devices_create
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_deployments_devices_create
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_deployments_devices_create
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_nodes_devices_create
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_devices_create
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/customers_devices_delete
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/deployments_devices_delete
          - $ref: >-
              #/components/x-stackQL-resources/devices/methods/nodes_devices_delete
    devices_signed:
      id: sasportal.devices_signed
      name: devices_signed
      title: Devices_signed
      methods:
        customers_devices_update_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices~1{devicesId}:updateSigned/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_devices_create_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1devices:createSigned/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_devices_create_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1devices:createSigned/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_devices_create_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}~1devices:createSigned/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_devices_update_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1deployments~1{deploymentsId}~1devices~1{devicesId}:updateSigned/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_deployments_devices_create_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}~1devices:createSigned/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_devices_create_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1devices:createSigned/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_create_signed:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1devices:createSigned/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_devices_update_signed:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1devices~1{devicesId}:updateSigned/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/customers_devices_create_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/customers_nodes_devices_create_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/customers_deployments_devices_create_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/nodes_deployments_devices_create_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/nodes_nodes_devices_create_signed
          - $ref: >-
              #/components/x-stackQL-resources/devices_signed/methods/nodes_devices_create_signed
        update: []
        delete: []
    nodes:
      id: sasportal.nodes
      name: nodes
      title: Nodes
      methods:
        customers_nodes_patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _nodes_nodes_nodes_list:
          operation: &ref_15
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1nodes/get'
          response: &ref_16
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
        nodes_nodes_nodes_list:
          operation: *ref_15
          response: *ref_16
        nodes_nodes_nodes_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1nodes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_move:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}:move/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_delete:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_patch:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _nodes_nodes_list:
          operation: &ref_17
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes/get'
          response: &ref_18
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
        nodes_nodes_list:
          operation: *ref_17
          response: *ref_18
        nodes_nodes_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/nodes/methods/nodes_nodes_nodes_list
          - $ref: '#/components/x-stackQL-resources/nodes/methods/nodes_nodes_list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/nodes/methods/nodes_nodes_nodes_create
          - $ref: '#/components/x-stackQL-resources/nodes/methods/nodes_nodes_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nodes/methods/nodes_nodes_delete'
    customer_node:
      id: sasportal.customer_node
      name: customer_node
      title: Customer_node
      methods:
        customers_nodes_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customer_node/methods/customers_nodes_get
        insert: []
        update: []
        delete: []
    customer_nodes:
      id: sasportal.customer_nodes
      name: customer_nodes
      title: Customer_nodes
      methods:
        customers_nodes_delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_nodes_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1nodes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _customers_nodes_list:
          operation: &ref_19
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1nodes/get'
          response: &ref_20
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
        customers_nodes_list:
          operation: *ref_19
          response: *ref_20
        _customers_nodes_nodes_list:
          operation: &ref_21
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1nodes/get
          response: &ref_22
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
        customers_nodes_nodes_list:
          operation: *ref_21
          response: *ref_22
        customers_nodes_nodes_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1nodes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customer_nodes/methods/customers_nodes_list
          - $ref: >-
              #/components/x-stackQL-resources/customer_nodes/methods/customers_nodes_nodes_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/customer_nodes/methods/customers_nodes_create
          - $ref: >-
              #/components/x-stackQL-resources/customer_nodes/methods/customers_nodes_nodes_create
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/customer_nodes/methods/customers_nodes_delete
    deployments:
      id: sasportal.deployments
      name: deployments
      title: Deployments
      methods:
        _customers_nodes_deployments_list:
          operation: &ref_23
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1deployments/get
          response: &ref_24
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployments
        customers_nodes_deployments_list:
          operation: *ref_23
          response: *ref_24
        customers_nodes_deployments_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1nodes~1{nodesId}~1deployments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _customers_deployments_list:
          operation: &ref_25
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1deployments/get'
          response: &ref_26
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployments
        customers_deployments_list:
          operation: *ref_25
          response: *ref_26
        customers_deployments_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1customers~1{customersId}~1deployments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_deployments_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1customers~1{customersId}~1deployments~1{deploymentsId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deployments_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1deployments~1{deploymentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _nodes_deployments_list:
          operation: &ref_27
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments/get'
          response: &ref_28
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployments
        nodes_deployments_list:
          operation: *ref_27
          response: *ref_28
        nodes_deployments_delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_deployments_patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_deployments_get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_deployments_move:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1deployments~1{deploymentsId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_deployments_create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1deployments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _nodes_nodes_deployments_list:
          operation: &ref_29
            $ref: >-
              #/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}~1deployments/get
          response: &ref_30
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployments
        nodes_nodes_deployments_list:
          operation: *ref_29
          response: *ref_30
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_nodes_deployments_list
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_deployments_get
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_deployments_list
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/deployments_get
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_deployments_list
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_deployments_get
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_nodes_deployments_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_nodes_deployments_create
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_deployments_create
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_nodes_deployments_create
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/customers_deployments_delete
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/nodes_deployments_delete
    installer:
      id: sasportal.installer
      name: installer
      title: Installer
      methods:
        installer_validate:
          operation:
            $ref: '#/paths/~1v1alpha1~1installer:validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        installer_generate_secret:
          operation:
            $ref: '#/paths/~1v1alpha1~1installer:generateSecret/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    node:
      id: sasportal.node
      name: node
      title: Node
      methods:
        nodes_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        nodes_nodes_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1nodes~1{nodesId}~1nodes~1{nodesId1}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/node/methods/nodes_get'
          - $ref: '#/components/x-stackQL-resources/node/methods/nodes_nodes_get'
        insert: []
        update: []
        delete: []
paths:
  /v1alpha1/policies:set:
    parameters: &ref_31
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: sasportal.policies.set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalSetPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalPolicy'
      parameters: []
  /v1alpha1/policies:test:
    parameters: *ref_31
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: sasportal.policies.test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalTestPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalTestPermissionsResponse'
      parameters: []
  /v1alpha1/policies:get:
    parameters: *ref_31
    post:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: sasportal.policies.get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalGetPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalPolicy'
      parameters: []
  /v1alpha1/customers:provisionDeployment:
    parameters: *ref_31
    post:
      description: >-
        Creates a new SAS deployment through the GCP workflow. Creates a SAS
        organization if an organization match is not found.
      operationId: sasportal.customers.provisionDeployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalProvisionDeploymentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalProvisionDeploymentResponse'
      parameters: []
  /v1alpha1/customers:listLegacyOrganizations:
    parameters: *ref_31
    get:
      description: Returns a list of legacy organizations.
      operationId: sasportal.customers.listLegacyOrganizations
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListLegacyOrganizationsResponse'
      parameters: []
  /v1alpha1/customers:listGcpProjectDeployments:
    parameters: *ref_31
    get:
      description: >-
        Returns a list of SAS deployments associated with current GCP project.
        Includes whether SAS analytics has been enabled or not.
      operationId: sasportal.customers.listGcpProjectDeployments
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SasPortalListGcpProjectDeploymentsResponse
      parameters: []
  /v1alpha1/customers:setupSasAnalytics:
    parameters: *ref_31
    post:
      description: >-
        Setups the a GCP Project to receive SAS Analytics messages via GCP
        Pub/Sub with a subscription to BigQuery. All the Pub/Sub topics and
        BigQuery tables are created automatically as part of this service.
      operationId: sasportal.customers.setupSasAnalytics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalSetupSasAnalyticsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters: []
  /v1alpha1/customers:
    parameters: *ref_31
    get:
      description: Returns a list of requested customers.
      operationId: sasportal.customers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListCustomersResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1alpha1/customers/{customersId}:
    parameters: *ref_31
    get:
      description: Returns a requested customer.
      operationId: sasportal.customers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalCustomer'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing customer.
      operationId: sasportal.customers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCustomer'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalCustomer'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/customers:migrateOrganization:
    parameters: *ref_31
    post:
      description: >-
        Migrates a SAS organization to the cloud. This will create GCP projects
        for each deployment and associate them. The SAS Organization is linked
        to the gcp project that called the command.
        go/sas-legacy-customer-migration
      operationId: sasportal.customers.migrateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMigrateOrganizationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters: []
  /v1alpha1/customers/{customersId}/devices/{devicesId}:
    parameters: *ref_31
    get:
      description: Gets details about a device.
      operationId: sasportal.customers.devices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a device.
      operationId: sasportal.customers.devices.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a device.
      operationId: sasportal.customers.devices.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/customers/{customersId}/devices:
    parameters: *ref_31
    get:
      description: Lists devices under a node or customer.
      operationId: sasportal.customers.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a device under a node or customer.
      operationId: sasportal.customers.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned:
    parameters: *ref_31
    patch:
      description: Updates a signed device.
      operationId: sasportal.customers.devices.updateSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalUpdateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/devices:createSigned:
    parameters: *ref_31
    post:
      description: Creates a signed device under a node or customer.
      operationId: sasportal.customers.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/devices/{devicesId}:move:
    parameters: *ref_31
    post:
      description: Moves a device under another node or customer.
      operationId: sasportal.customers.devices.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice:
    parameters: *ref_31
    post:
      description: Signs a device.
      operationId: sasportal.customers.devices.signDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalSignDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes/{nodesId}:
    parameters: *ref_31
    patch:
      description: Updates an existing node.
      operationId: sasportal.customers.nodes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Returns a requested node.
      operationId: sasportal.customers.nodes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a node.
      operationId: sasportal.customers.nodes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes:
    parameters: *ref_31
    post:
      description: Creates a new node.
      operationId: sasportal.customers.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
    get:
      description: Lists nodes.
      operationId: sasportal.customers.nodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListNodesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1alpha1/customers/{customersId}/nodes/{nodesId}:move:
    parameters: *ref_31
    post:
      description: Moves a node under another node or customer.
      operationId: sasportal.customers.nodes.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveNodeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes:
    parameters: *ref_31
    get:
      description: Lists nodes.
      operationId: sasportal.customers.nodes.nodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListNodesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new node.
      operationId: sasportal.customers.nodes.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments:
    parameters: *ref_31
    get:
      description: Lists deployments.
      operationId: sasportal.customers.nodes.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDeploymentsResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new deployment.
      operationId: sasportal.customers.nodes.deployments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes/{nodesId}/devices:createSigned:
    parameters: *ref_31
    post:
      description: Creates a signed device under a node or customer.
      operationId: sasportal.customers.nodes.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/nodes/{nodesId}/devices:
    parameters: *ref_31
    post:
      description: Creates a device under a node or customer.
      operationId: sasportal.customers.nodes.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
    get:
      description: Lists devices under a node or customer.
      operationId: sasportal.customers.nodes.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:
    parameters: *ref_31
    get:
      description: Lists devices under a node or customer.
      operationId: sasportal.customers.deployments.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a device under a node or customer.
      operationId: sasportal.customers.deployments.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:createSigned:
    parameters: *ref_31
    post:
      description: Creates a signed device under a node or customer.
      operationId: sasportal.customers.deployments.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/deployments/{deploymentsId}:
    parameters: *ref_31
    delete:
      description: Deletes a deployment.
      operationId: sasportal.customers.deployments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing deployment.
      operationId: sasportal.customers.deployments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Returns a requested deployment.
      operationId: sasportal.customers.deployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/deployments:
    parameters: *ref_31
    get:
      description: Lists deployments.
      operationId: sasportal.customers.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDeploymentsResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new deployment.
      operationId: sasportal.customers.deployments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
  /v1alpha1/customers/{customersId}/deployments/{deploymentsId}:move:
    parameters: *ref_31
    post:
      description: Moves a deployment under another node or customer.
      operationId: sasportal.customers.deployments.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveDeploymentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:
    parameters: *ref_31
    delete:
      description: Deletes a device.
      operationId: sasportal.deployments.devices.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    get:
      description: Gets details about a device.
      operationId: sasportal.deployments.devices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a device.
      operationId: sasportal.deployments.devices.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:move:
    parameters: *ref_31
    post:
      description: Moves a device under another node or customer.
      operationId: sasportal.deployments.devices.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:updateSigned:
    parameters: *ref_31
    patch:
      description: Updates a signed device.
      operationId: sasportal.deployments.devices.updateSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalUpdateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:signDevice:
    parameters: *ref_31
    post:
      description: Signs a device.
      operationId: sasportal.deployments.devices.signDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalSignDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/deployments/{deploymentsId}:
    parameters: *ref_31
    get:
      description: Returns a requested deployment.
      operationId: sasportal.deployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/installer:validate:
    parameters: *ref_31
    post:
      description: Validates the identity of a Certified Professional Installer (CPI).
      operationId: sasportal.installer.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalValidateInstallerRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalValidateInstallerResponse'
      parameters: []
  /v1alpha1/installer:generateSecret:
    parameters: *ref_31
    post:
      description: Generates a secret to be used with the ValidateInstaller.
      operationId: sasportal.installer.generateSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalGenerateSecretRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalGenerateSecretResponse'
      parameters: []
  /v1alpha1/nodes/{nodesId}:
    parameters: *ref_31
    get:
      description: Returns a requested node.
      operationId: sasportal.nodes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:
    parameters: *ref_31
    get:
      description: Lists devices under a node or customer.
      operationId: sasportal.nodes.deployments.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a device under a node or customer.
      operationId: sasportal.nodes.deployments.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:createSigned:
    parameters: *ref_31
    post:
      description: Creates a signed device under a node or customer.
      operationId: sasportal.nodes.deployments.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/deployments:
    parameters: *ref_31
    get:
      description: Lists deployments.
      operationId: sasportal.nodes.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDeploymentsResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:
    parameters: *ref_31
    delete:
      description: Deletes a deployment.
      operationId: sasportal.nodes.deployments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing deployment.
      operationId: sasportal.nodes.deployments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Returns a requested deployment.
      operationId: sasportal.nodes.deployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:move:
    parameters: *ref_31
    post:
      description: Moves a deployment under another node or customer.
      operationId: sasportal.nodes.deployments.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveDeploymentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:
    parameters: *ref_31
    get:
      description: Lists devices under a node or customer.
      operationId: sasportal.nodes.nodes.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a device under a node or customer.
      operationId: sasportal.nodes.nodes.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned:
    parameters: *ref_31
    post:
      description: Creates a signed device under a node or customer.
      operationId: sasportal.nodes.nodes.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes:
    parameters: *ref_31
    get:
      description: Lists nodes.
      operationId: sasportal.nodes.nodes.nodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListNodesResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new node.
      operationId: sasportal.nodes.nodes.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments:
    parameters: *ref_31
    post:
      description: Creates a new deployment.
      operationId: sasportal.nodes.nodes.deployments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDeployment'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
    get:
      description: Lists deployments.
      operationId: sasportal.nodes.nodes.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDeploymentsResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move:
    parameters: *ref_31
    post:
      description: Moves a node under another node or customer.
      operationId: sasportal.nodes.nodes.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveNodeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:
    parameters: *ref_31
    get:
      description: Returns a requested node.
      operationId: sasportal.nodes.nodes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
    delete:
      description: Deletes a node.
      operationId: sasportal.nodes.nodes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing node.
      operationId: sasportal.nodes.nodes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId1
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1alpha1/nodes/{nodesId}/nodes:
    parameters: *ref_31
    get:
      description: Lists nodes.
      operationId: sasportal.nodes.nodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListNodesResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new node.
      operationId: sasportal.nodes.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalNode'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalNode'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices/{devicesId}:
    parameters: *ref_31
    patch:
      description: Updates a device.
      operationId: sasportal.nodes.devices.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a device.
      operationId: sasportal.nodes.devices.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
    get:
      description: Gets details about a device.
      operationId: sasportal.nodes.devices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices/{devicesId}:move:
    parameters: *ref_31
    post:
      description: Moves a device under another node or customer.
      operationId: sasportal.nodes.devices.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalMoveDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalOperation'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices:
    parameters: *ref_31
    post:
      description: Creates a device under a node or customer.
      operationId: sasportal.nodes.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalDevice'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
    get:
      description: Lists devices under a node or customer.
      operationId: sasportal.nodes.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalListDevicesResponse'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices:createSigned:
    parameters: *ref_31
    post:
      description: Creates a signed device under a node or customer.
      operationId: sasportal.nodes.devices.createSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalCreateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice:
    parameters: *ref_31
    post:
      description: Signs a device.
      operationId: sasportal.nodes.devices.signDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalSignDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalEmpty'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned:
    parameters: *ref_31
    patch:
      description: Updates a signed device.
      operationId: sasportal.nodes.devices.updateSigned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasPortalUpdateSignedDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/sasportal
          Oauth2c:
            - https://www.googleapis.com/auth/sasportal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasPortalDevice'
      parameters:
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
