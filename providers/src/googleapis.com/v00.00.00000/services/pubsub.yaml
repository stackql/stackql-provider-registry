openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Pub/Sub API
  description: >-
    Provides reliable, many-to-many, asynchronous messaging between
    applications. 
  version: v1
  x-discovery-doc-revision: '20250812'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/pubsub/docs
servers:
  - url: https://pubsub.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/pubsub: View and manage Pub/Sub topics and subscriptions
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    Schema:
      id: Schema
      description: A schema resource.
      type: object
      properties:
        name:
          description: >-
            Required. Name of the schema. Format is
            `projects/{project}/schemas/{schema}`.
          type: string
        type:
          description: The type of the schema definition.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - A Protocol Buffer schema definition.
            - An Avro schema definition.
          enum:
            - TYPE_UNSPECIFIED
            - PROTOCOL_BUFFER
            - AVRO
        definition:
          description: >-
            The definition of the schema. This should contain a string
            representing the full definition of the schema that is a valid
            schema definition of the type specified in `type`.
          type: string
        revisionId:
          description: Output only. Immutable. The revision ID of the schema.
          readOnly: true
          type: string
        revisionCreateTime:
          description: Output only. The timestamp that the revision was created.
          readOnly: true
          type: string
          format: google-datetime
    ListSchemasResponse:
      id: ListSchemasResponse
      description: Response for the `ListSchemas` method.
      type: object
      properties:
        schemas:
          description: The resulting schemas.
          type: array
          items:
            $ref: '#/components/schemas/Schema'
        nextPageToken:
          description: >-
            If not empty, indicates that there may be more schemas that match
            the request; this value should be passed in a new
            `ListSchemasRequest`.
          type: string
    ListSchemaRevisionsResponse:
      id: ListSchemaRevisionsResponse
      description: Response for the `ListSchemaRevisions` method.
      type: object
      properties:
        schemas:
          description: The revisions of the schema.
          type: array
          items:
            $ref: '#/components/schemas/Schema'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is empty, there are no subsequent pages.
          type: string
    CommitSchemaRequest:
      id: CommitSchemaRequest
      description: Request for CommitSchema method.
      type: object
      properties:
        schema:
          description: Required. The schema revision to commit.
          $ref: '#/components/schemas/Schema'
    RollbackSchemaRequest:
      id: RollbackSchemaRequest
      description: Request for the `RollbackSchema` method.
      type: object
      properties:
        revisionId:
          description: >-
            Required. The revision ID to roll back to. It must be a revision of
            the same schema. Example: c7cfa2a8
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    ValidateSchemaRequest:
      id: ValidateSchemaRequest
      description: Request for the `ValidateSchema` method.
      type: object
      properties:
        schema:
          description: Required. The schema object to validate.
          $ref: '#/components/schemas/Schema'
    ValidateSchemaResponse:
      id: ValidateSchemaResponse
      description: Response for the `ValidateSchema` method. Empty for now.
      type: object
      properties: {}
    ValidateMessageRequest:
      id: ValidateMessageRequest
      description: Request for the `ValidateMessage` method.
      type: object
      properties:
        name:
          description: >-
            Name of the schema against which to validate. Format is
            `projects/{project}/schemas/{schema}`.
          type: string
        schema:
          description: Ad-hoc schema against which to validate
          $ref: '#/components/schemas/Schema'
        message:
          description: Message to validate against the provided `schema_spec`.
          type: string
          format: byte
        encoding:
          description: The encoding expected for messages
          type: string
          enumDescriptions:
            - Unspecified
            - JSON encoding
            - >-
              Binary encoding, as defined by the schema type. For some schema
              types, binary encoding may not be available.
          enum:
            - ENCODING_UNSPECIFIED
            - JSON
            - BINARY
    ValidateMessageResponse:
      id: ValidateMessageResponse
      description: Response for the `ValidateMessage` method. Empty for now.
      type: object
      properties: {}
    Topic:
      id: Topic
      description: A topic resource.
      type: object
      properties:
        name:
          description: >-
            Required. The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a
            letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`),
            dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus
            (`+`) or percent signs (`%`). It must be between 3 and 255
            characters in length, and it must not start with `"goog"`.
          type: string
        labels:
          description: >-
            Optional. See [Creating and managing labels]
            (https://cloud.google.com/pubsub/docs/labels).
          type: object
          additionalProperties:
            type: string
        messageStoragePolicy:
          description: >-
            Optional. Policy constraining the set of Google Cloud Platform
            regions where messages published to the topic may be stored. If not
            present, then no constraints are in effect.
          $ref: '#/components/schemas/MessageStoragePolicy'
        kmsKeyName:
          description: >-
            Optional. The resource name of the Cloud KMS CryptoKey to be used to
            protect access to messages published on this topic. The expected
            format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
          type: string
        schemaSettings:
          description: >-
            Optional. Settings for validating messages published against a
            schema.
          $ref: '#/components/schemas/SchemaSettings'
        satisfiesPzs:
          description: >-
            Optional. Reserved for future use. This field is set only in
            responses from the server; it is ignored if it is set in any
            requests.
          type: boolean
        messageRetentionDuration:
          description: >-
            Optional. Indicates the minimum duration to retain a message after
            it is published to the topic. If this field is set, messages
            published to the topic in the last `message_retention_duration` are
            always available to subscribers. For instance, it allows any
            attached subscription to [seek to a
            timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time)
            that is up to `message_retention_duration` in the past. If this
            field is not set, message retention is controlled by settings on
            individual subscriptions. Cannot be more than 31 days or less than
            10 minutes.
          type: string
          format: google-duration
        state:
          description: Output only. An output-only field indicating the state of the topic.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The topic does not have any persistent errors.
            - >-
              Ingestion from the data source has encountered a permanent error.
              See the more detailed error state in the corresponding ingestion
              source configuration.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INGESTION_RESOURCE_ERROR
        ingestionDataSourceSettings:
          description: Optional. Settings for ingestion from a data source into this topic.
          $ref: '#/components/schemas/IngestionDataSourceSettings'
        messageTransforms:
          description: >-
            Optional. Transforms to be applied to messages published to the
            topic. Transforms are applied in the order specified.
          type: array
          items:
            $ref: '#/components/schemas/MessageTransform'
    MessageStoragePolicy:
      id: MessageStoragePolicy
      description: A policy constraining the storage of messages published to the topic.
      type: object
      properties:
        allowedPersistenceRegions:
          description: >-
            Optional. A list of IDs of Google Cloud regions where messages that
            are published to the topic may be persisted in storage. Messages
            published by publishers running in non-allowed Google Cloud regions
            (or running outside of Google Cloud altogether) are routed for
            storage in one of the allowed regions. An empty list means that no
            regions are allowed, and is not a valid configuration.
          type: array
          items:
            type: string
        enforceInTransit:
          description: >-
            Optional. If true, `allowed_persistence_regions` is also used to
            enforce in-transit guarantees for messages. That is, Pub/Sub will
            fail Publish operations on this topic and subscribe operations on
            any subscription attached to this topic in any region that is not in
            `allowed_persistence_regions`.
          type: boolean
    SchemaSettings:
      id: SchemaSettings
      description: Settings for validating messages published against a schema.
      type: object
      properties:
        schema:
          description: >-
            Required. The name of the schema that messages published should be
            validated against. Format is `projects/{project}/schemas/{schema}`.
            The value of this field will be `_deleted-schema_` if the schema has
            been deleted.
          type: string
        encoding:
          description: Optional. The encoding of messages validated against `schema`.
          type: string
          enumDescriptions:
            - Unspecified
            - JSON encoding
            - >-
              Binary encoding, as defined by the schema type. For some schema
              types, binary encoding may not be available.
          enum:
            - ENCODING_UNSPECIFIED
            - JSON
            - BINARY
        firstRevisionId:
          description: >-
            Optional. The minimum (inclusive) revision allowed for validating
            messages. If empty or not present, allow any revision to be
            validated against last_revision or any revision created before.
          type: string
        lastRevisionId:
          description: >-
            Optional. The maximum (inclusive) revision allowed for validating
            messages. If empty or not present, allow any revision to be
            validated against first_revision or any revision created after.
          type: string
    IngestionDataSourceSettings:
      id: IngestionDataSourceSettings
      description: Settings for an ingestion data source on a topic.
      type: object
      properties:
        awsKinesis:
          description: Optional. Amazon Kinesis Data Streams.
          $ref: '#/components/schemas/AwsKinesis'
        cloudStorage:
          description: Optional. Cloud Storage.
          $ref: '#/components/schemas/CloudStorage'
        azureEventHubs:
          description: Optional. Azure Event Hubs.
          $ref: '#/components/schemas/AzureEventHubs'
        awsMsk:
          description: Optional. Amazon MSK.
          $ref: '#/components/schemas/AwsMsk'
        confluentCloud:
          description: Optional. Confluent Cloud.
          $ref: '#/components/schemas/ConfluentCloud'
        platformLogsSettings:
          description: >-
            Optional. Platform Logs settings. If unset, no Platform Logs will be
            generated.
          $ref: '#/components/schemas/PlatformLogsSettings'
    AwsKinesis:
      id: AwsKinesis
      description: Ingestion settings for Amazon Kinesis Data Streams.
      type: object
      properties:
        state:
          description: >-
            Output only. An output-only field that indicates the state of the
            Kinesis ingestion source.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Ingestion is active.
            - >-
              Permission denied encountered while consuming data from Kinesis.
              This can happen if: - The provided `aws_role_arn` does not exist
              or does not have the appropriate permissions attached. - The
              provided `aws_role_arn` is not set up properly for Identity
              Federation using `gcp_service_account`. - The Pub/Sub SA is not
              granted the `iam.serviceAccounts.getOpenIdToken` permission on
              `gcp_service_account`.
            - >-
              Permission denied encountered while publishing to the topic. This
              can happen if the Pub/Sub SA has not been granted the [appropriate
              publish
              permissions](https://cloud.google.com/pubsub/docs/access-control#pubsub.publisher)
            - The Kinesis stream does not exist.
            - The Kinesis consumer does not exist.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - KINESIS_PERMISSION_DENIED
            - PUBLISH_PERMISSION_DENIED
            - STREAM_NOT_FOUND
            - CONSUMER_NOT_FOUND
        streamArn:
          description: Required. The Kinesis stream ARN to ingest data from.
          type: string
        consumerArn:
          description: >-
            Required. The Kinesis consumer ARN to used for ingestion in Enhanced
            Fan-Out mode. The consumer must be already created and ready to be
            used.
          type: string
        awsRoleArn:
          description: >-
            Required. AWS role ARN to be used for Federated Identity
            authentication with Kinesis. Check the Pub/Sub docs for how to set
            up this role and the required permissions that need to be attached
            to it.
          type: string
        gcpServiceAccount:
          description: >-
            Required. The GCP service account to be used for Federated Identity
            authentication with Kinesis (via a `AssumeRoleWithWebIdentity` call
            for the provided role). The `aws_role_arn` must be set up with
            `accounts.google.com:sub` equals to this service account number.
          type: string
    CloudStorage:
      id: CloudStorage
      description: Ingestion settings for Cloud Storage.
      type: object
      properties:
        state:
          description: >-
            Output only. An output-only field that indicates the state of the
            Cloud Storage ingestion source.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Ingestion is active.
            - >-
              Permission denied encountered while calling the Cloud Storage API.
              This can happen if the Pub/Sub SA has not been granted the
              [appropriate
              permissions](https://cloud.google.com/storage/docs/access-control/iam-permissions):
              - storage.objects.list: to list the objects in a bucket. -
              storage.objects.get: to read the objects in a bucket. -
              storage.buckets.get: to verify the bucket exists.
            - >-
              Permission denied encountered while publishing to the topic. This
              can happen if the Pub/Sub SA has not been granted the [appropriate
              publish
              permissions](https://cloud.google.com/pubsub/docs/access-control#pubsub.publisher)
            - The provided Cloud Storage bucket doesn't exist.
            - >-
              The Cloud Storage bucket has too many objects, ingestion will be
              paused.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CLOUD_STORAGE_PERMISSION_DENIED
            - PUBLISH_PERMISSION_DENIED
            - BUCKET_NOT_FOUND
            - TOO_MANY_OBJECTS
        bucket:
          description: >-
            Optional. Cloud Storage bucket. The bucket name must be without any
            prefix like "gs://". See the [bucket naming requirements]
            (https://cloud.google.com/storage/docs/buckets#naming).
          type: string
        textFormat:
          description: Optional. Data from Cloud Storage will be interpreted as text.
          $ref: '#/components/schemas/TextFormat'
        avroFormat:
          description: >-
            Optional. Data from Cloud Storage will be interpreted in Avro
            format.
          $ref: '#/components/schemas/AvroFormat'
        pubsubAvroFormat:
          description: >-
            Optional. It will be assumed data from Cloud Storage was written via
            [Cloud Storage
            subscriptions](https://cloud.google.com/pubsub/docs/cloudstorage).
          $ref: '#/components/schemas/PubSubAvroFormat'
        minimumObjectCreateTime:
          description: >-
            Optional. Only objects with a larger or equal creation timestamp
            will be ingested.
          type: string
          format: google-datetime
        matchGlob:
          description: >-
            Optional. Glob pattern used to match objects that will be ingested.
            If unset, all objects will be ingested. See the [supported
            patterns](https://cloud.google.com/storage/docs/json_api/v1/objects/list#list-objects-and-prefixes-using-glob).
          type: string
    TextFormat:
      id: TextFormat
      description: >-
        Configuration for reading Cloud Storage data in text format. Each line
        of text as specified by the delimiter will be set to the `data` field of
        a Pub/Sub message.
      type: object
      properties:
        delimiter:
          description: Optional. When unset, '\n' is used.
          type: string
    AvroFormat:
      id: AvroFormat
      description: >-
        Configuration for reading Cloud Storage data in Avro binary format. The
        bytes of each object will be set to the `data` field of a Pub/Sub
        message.
      type: object
      properties: {}
    PubSubAvroFormat:
      id: PubSubAvroFormat
      description: >-
        Configuration for reading Cloud Storage data written via [Cloud Storage
        subscriptions](https://cloud.google.com/pubsub/docs/cloudstorage). The
        data and attributes fields of the originally exported Pub/Sub message
        will be restored when publishing.
      type: object
      properties: {}
    AzureEventHubs:
      id: AzureEventHubs
      description: Ingestion settings for Azure Event Hubs.
      type: object
      properties:
        state:
          description: >-
            Output only. An output-only field that indicates the state of the
            Event Hubs ingestion source.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Ingestion is active.
            - >-
              Permission denied encountered while consuming data from Event
              Hubs. This can happen when `client_id`, or `tenant_id` are
              invalid. Or the right permissions haven't been granted.
            - Permission denied encountered while publishing to the topic.
            - The provided Event Hubs namespace couldn't be found.
            - The provided Event Hub couldn't be found.
            - The provided Event Hubs subscription couldn't be found.
            - The provided Event Hubs resource group couldn't be found.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - EVENT_HUBS_PERMISSION_DENIED
            - PUBLISH_PERMISSION_DENIED
            - NAMESPACE_NOT_FOUND
            - EVENT_HUB_NOT_FOUND
            - SUBSCRIPTION_NOT_FOUND
            - RESOURCE_GROUP_NOT_FOUND
        resourceGroup:
          description: Optional. Name of the resource group within the azure subscription.
          type: string
        namespace:
          description: Optional. The name of the Event Hubs namespace.
          type: string
        eventHub:
          description: Optional. The name of the Event Hub.
          type: string
        clientId:
          description: >-
            Optional. The client id of the Azure application that is being used
            to authenticate Pub/Sub.
          type: string
        tenantId:
          description: >-
            Optional. The tenant id of the Azure application that is being used
            to authenticate Pub/Sub.
          type: string
        subscriptionId:
          description: Optional. The Azure subscription id.
          type: string
        gcpServiceAccount:
          description: >-
            Optional. The GCP service account to be used for Federated Identity
            authentication.
          type: string
    AwsMsk:
      id: AwsMsk
      description: Ingestion settings for Amazon MSK.
      type: object
      properties:
        state:
          description: >-
            Output only. An output-only field that indicates the state of the
            Amazon MSK ingestion source.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Ingestion is active.
            - >-
              Permission denied encountered while consuming data from Amazon
              MSK.
            - Permission denied encountered while publishing to the topic.
            - The provided MSK cluster wasn't found.
            - The provided topic wasn't found.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - MSK_PERMISSION_DENIED
            - PUBLISH_PERMISSION_DENIED
            - CLUSTER_NOT_FOUND
            - TOPIC_NOT_FOUND
        clusterArn:
          description: >-
            Required. The Amazon Resource Name (ARN) that uniquely identifies
            the cluster.
          type: string
        topic:
          description: >-
            Required. The name of the topic in the Amazon MSK cluster that
            Pub/Sub will import from.
          type: string
        awsRoleArn:
          description: >-
            Required. AWS role ARN to be used for Federated Identity
            authentication with Amazon MSK. Check the Pub/Sub docs for how to
            set up this role and the required permissions that need to be
            attached to it.
          type: string
        gcpServiceAccount:
          description: >-
            Required. The GCP service account to be used for Federated Identity
            authentication with Amazon MSK (via a `AssumeRoleWithWebIdentity`
            call for the provided role). The `aws_role_arn` must be set up with
            `accounts.google.com:sub` equals to this service account number.
          type: string
    ConfluentCloud:
      id: ConfluentCloud
      description: Ingestion settings for Confluent Cloud.
      type: object
      properties:
        state:
          description: >-
            Output only. An output-only field that indicates the state of the
            Confluent Cloud ingestion source.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Ingestion is active.
            - >-
              Permission denied encountered while consuming data from Confluent
              Cloud.
            - Permission denied encountered while publishing to the topic.
            - The provided bootstrap server address is unreachable.
            - The provided cluster wasn't found.
            - The provided topic wasn't found.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CONFLUENT_CLOUD_PERMISSION_DENIED
            - PUBLISH_PERMISSION_DENIED
            - UNREACHABLE_BOOTSTRAP_SERVER
            - CLUSTER_NOT_FOUND
            - TOPIC_NOT_FOUND
        bootstrapServer:
          description: >-
            Required. The address of the bootstrap server. The format is
            url:port.
          type: string
        clusterId:
          description: Required. The id of the cluster.
          type: string
        topic:
          description: >-
            Required. The name of the topic in the Confluent Cloud cluster that
            Pub/Sub will import from.
          type: string
        identityPoolId:
          description: >-
            Required. The id of the identity pool to be used for Federated
            Identity authentication with Confluent Cloud. See
            https://docs.confluent.io/cloud/current/security/authenticate/workload-identities/identity-providers/oauth/identity-pools.html#add-oauth-identity-pools.
          type: string
        gcpServiceAccount:
          description: >-
            Required. The GCP service account to be used for Federated Identity
            authentication with `identity_pool_id`.
          type: string
    PlatformLogsSettings:
      id: PlatformLogsSettings
      description: Settings for Platform Logs produced by Pub/Sub.
      type: object
      properties:
        severity:
          description: >-
            Optional. The minimum severity level of Platform Logs that will be
            written.
          type: string
          enumDescriptions:
            - Default value. Logs level is unspecified. Logs will be disabled.
            - Logs will be disabled.
            - Debug logs and higher-severity logs will be written.
            - Info logs and higher-severity logs will be written.
            - Warning logs and higher-severity logs will be written.
            - Only error logs will be written.
          enum:
            - SEVERITY_UNSPECIFIED
            - DISABLED
            - DEBUG
            - INFO
            - WARNING
            - ERROR
    MessageTransform:
      id: MessageTransform
      description: All supported message transforms types.
      type: object
      properties:
        javascriptUdf:
          description: >-
            Optional. JavaScript User Defined Function. If multiple
            JavaScriptUDF's are specified on a resource, each must have a unique
            `function_name`.
          $ref: '#/components/schemas/JavaScriptUDF'
        enabled:
          description: >-
            Optional. This field is deprecated, use the `disabled` field to
            disable transforms.
          deprecated: true
          type: boolean
        disabled:
          description: >-
            Optional. If true, the transform is disabled and will not be applied
            to messages. Defaults to `false`.
          type: boolean
    JavaScriptUDF:
      id: JavaScriptUDF
      description: >-
        User-defined JavaScript function that can transform or filter a Pub/Sub
        message.
      type: object
      properties:
        functionName:
          description: >-
            Required. Name of the JavasScript function that should applied to
            Pub/Sub messages.
          type: string
        code:
          description: >-
            Required. JavaScript code that contains a function `function_name`
            with the below signature: ``` /** * Transforms a Pub/Sub message. *
            @return {(Object)>|null)} - To * filter a message, return `null`. To
            transform a message return a map * with the following keys: * -
            (required) 'data' : {string} * - (optional) 'attributes' : {Object}
            * Returning empty `attributes` will remove all attributes from the *
            message. * * @param {(Object)>} Pub/Sub * message. Keys: * -
            (required) 'data' : {string} * - (required) 'attributes' : {Object}
            * * @param {Object} metadata - Pub/Sub message metadata. * Keys: * -
            (optional) 'message_id' : {string} * - (optional) 'publish_time':
            {string} YYYY-MM-DDTHH:MM:SSZ format * - (optional) 'ordering_key':
            {string} */ function (message, metadata) { } ```
          type: string
    UpdateTopicRequest:
      id: UpdateTopicRequest
      description: Request for the UpdateTopic method.
      type: object
      properties:
        topic:
          description: Required. The updated topic object.
          $ref: '#/components/schemas/Topic'
        updateMask:
          description: >-
            Required. Indicates which fields in the provided topic to update.
            Must be specified and non-empty. Note that if `update_mask` contains
            "message_storage_policy" but the `message_storage_policy` is not set
            in the `topic` provided above, then the updated value is determined
            by the policy configured at the project or organization level.
          type: string
          format: google-fieldmask
    PublishRequest:
      id: PublishRequest
      description: Request for the Publish method.
      type: object
      properties:
        messages:
          description: Required. The messages to publish.
          type: array
          items:
            $ref: '#/components/schemas/PubsubMessage'
    PubsubMessage:
      id: PubsubMessage
      description: >-
        A message that is published by publishers and consumed by subscribers.
        The message must contain either a non-empty data field or at least one
        attribute. Note that client libraries represent this object differently
        depending on the language. See the corresponding [client library
        documentation](https://cloud.google.com/pubsub/docs/reference/libraries)
        for more information. See [quotas and limits]
        (https://cloud.google.com/pubsub/quotas) for more information about
        message limits.
      type: object
      properties:
        data:
          description: >-
            Optional. The message data field. If this field is empty, the
            message must contain at least one attribute.
          type: string
          format: byte
        attributes:
          description: >-
            Optional. Attributes for this message. If this field is empty, the
            message must contain non-empty data. This can be used to filter
            messages on the subscription.
          type: object
          additionalProperties:
            type: string
        messageId:
          description: >-
            ID of this message, assigned by the server when the message is
            published. Guaranteed to be unique within the topic. This value may
            be read by a subscriber that receives a `PubsubMessage` via a `Pull`
            call or a push delivery. It must not be populated by the publisher
            in a `Publish` call.
          type: string
        publishTime:
          description: >-
            The time at which the message was published, populated by the server
            when it receives the `Publish` call. It must not be populated by the
            publisher in a `Publish` call.
          type: string
          format: google-datetime
        orderingKey:
          description: >-
            Optional. If non-empty, identifies related messages for which
            publish order should be respected. If a `Subscription` has
            `enable_message_ordering` set to `true`, messages published with the
            same non-empty `ordering_key` value will be delivered to subscribers
            in the order in which they are received by the Pub/Sub system. All
            `PubsubMessage`s published in a given `PublishRequest` must specify
            the same `ordering_key` value. For more information, see [ordering
            messages](https://cloud.google.com/pubsub/docs/ordering).
          type: string
    PublishResponse:
      id: PublishResponse
      description: Response for the `Publish` method.
      type: object
      properties:
        messageIds:
          description: >-
            Optional. The server-assigned ID of each published message, in the
            same order as the messages in the request. IDs are guaranteed to be
            unique within the topic.
          type: array
          items:
            type: string
    ListTopicsResponse:
      id: ListTopicsResponse
      description: Response for the `ListTopics` method.
      type: object
      properties:
        topics:
          description: Optional. The resulting topics.
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        nextPageToken:
          description: >-
            Optional. If not empty, indicates that there may be more topics that
            match the request; this value should be passed in a new
            `ListTopicsRequest`.
          type: string
    ListTopicSubscriptionsResponse:
      id: ListTopicSubscriptionsResponse
      description: Response for the `ListTopicSubscriptions` method.
      type: object
      properties:
        subscriptions:
          description: >-
            Optional. The names of subscriptions attached to the topic specified
            in the request.
          type: array
          items:
            type: string
        nextPageToken:
          description: >-
            Optional. If not empty, indicates that there may be more
            subscriptions that match the request; this value should be passed in
            a new `ListTopicSubscriptionsRequest` to get more subscriptions.
          type: string
    ListTopicSnapshotsResponse:
      id: ListTopicSnapshotsResponse
      description: Response for the `ListTopicSnapshots` method.
      type: object
      properties:
        snapshots:
          description: Optional. The names of the snapshots that match the request.
          type: array
          items:
            type: string
        nextPageToken:
          description: >-
            Optional. If not empty, indicates that there may be more snapshots
            that match the request; this value should be passed in a new
            `ListTopicSnapshotsRequest` to get more snapshots.
          type: string
    DetachSubscriptionResponse:
      id: DetachSubscriptionResponse
      description: Response for the DetachSubscription method. Reserved for future use.
      type: object
      properties: {}
    Subscription:
      id: Subscription
      description: >-
        A subscription resource. If none of `push_config`, `bigquery_config`, or
        `cloud_storage_config` is set, then the subscriber will pull and ack
        messages using API methods. At most one of these fields may be set.
      type: object
      properties:
        name:
          description: >-
            Required. The name of the subscription. It must have the format
            `"projects/{project}/subscriptions/{subscription}"`.
            `{subscription}` must start with a letter, and contain only letters
            (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`),
            periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It
            must be between 3 and 255 characters in length, and it must not
            start with `"goog"`.
          type: string
        topic:
          description: >-
            Required. The name of the topic from which this subscription is
            receiving messages. Format is `projects/{project}/topics/{topic}`.
            The value of this field will be `_deleted-topic_` if the topic has
            been deleted.
          type: string
        pushConfig:
          description: >-
            Optional. If push delivery is used with this subscription, this
            field is used to configure it.
          $ref: '#/components/schemas/PushConfig'
        bigqueryConfig:
          description: >-
            Optional. If delivery to BigQuery is used with this subscription,
            this field is used to configure it.
          $ref: '#/components/schemas/BigQueryConfig'
        cloudStorageConfig:
          description: >-
            Optional. If delivery to Google Cloud Storage is used with this
            subscription, this field is used to configure it.
          $ref: '#/components/schemas/CloudStorageConfig'
        ackDeadlineSeconds:
          description: >-
            Optional. The approximate amount of time (on a best-effort basis)
            Pub/Sub waits for the subscriber to acknowledge receipt before
            resending the message. In the interval after the message is
            delivered and before it is acknowledged, it is considered to be
            _outstanding_. During that time period, the message will not be
            redelivered (on a best-effort basis). For pull subscriptions, this
            value is used as the initial value for the ack deadline. To override
            this value for a given message, call `ModifyAckDeadline` with the
            corresponding `ack_id` if using non-streaming pull or send the
            `ack_id` in a `StreamingModifyAckDeadlineRequest` if using streaming
            pull. The minimum custom deadline you can specify is 10 seconds. The
            maximum custom deadline you can specify is 600 seconds (10 minutes).
            If this parameter is 0, a default value of 10 seconds is used. For
            push delivery, this value is also used to set the request timeout
            for the call to the push endpoint. If the subscriber never
            acknowledges the message, the Pub/Sub system will eventually
            redeliver the message.
          type: integer
          format: int32
        retainAckedMessages:
          description: >-
            Optional. Indicates whether to retain acknowledged messages. If
            true, then messages are not expunged from the subscription's
            backlog, even if they are acknowledged, until they fall out of the
            `message_retention_duration` window. This must be true if you would
            like to [`Seek` to a timestamp]
            (https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time)
            in the past to replay previously-acknowledged messages.
          type: boolean
        messageRetentionDuration:
          description: >-
            Optional. How long to retain unacknowledged messages in the
            subscription's backlog, from the moment a message is published. If
            `retain_acked_messages` is true, then this also configures the
            retention of acknowledged messages, and thus configures how far back
            in time a `Seek` can be done. Defaults to 7 days. Cannot be more
            than 31 days or less than 10 minutes.
          type: string
          format: google-duration
        labels:
          description: >-
            Optional. See [Creating and managing
            labels](https://cloud.google.com/pubsub/docs/labels).
          type: object
          additionalProperties:
            type: string
        enableMessageOrdering:
          description: >-
            Optional. If true, messages published with the same `ordering_key`
            in `PubsubMessage` will be delivered to the subscribers in the order
            in which they are received by the Pub/Sub system. Otherwise, they
            may be delivered in any order.
          type: boolean
        expirationPolicy:
          description: >-
            Optional. A policy that specifies the conditions for this
            subscription's expiration. A subscription is considered active as
            long as any connected subscriber is successfully consuming messages
            from the subscription or is issuing operations on the subscription.
            If `expiration_policy` is not set, a *default policy* with `ttl` of
            31 days will be used. The minimum allowed value for
            `expiration_policy.ttl` is 1 day. If `expiration_policy` is set, but
            `expiration_policy.ttl` is not set, the subscription never expires.
          $ref: '#/components/schemas/ExpirationPolicy'
        filter:
          description: >-
            Optional. An expression written in the Pub/Sub [filter
            language](https://cloud.google.com/pubsub/docs/filtering). If
            non-empty, then only `PubsubMessage`s whose `attributes` field
            matches the filter are delivered on this subscription. If empty,
            then no messages are filtered out.
          type: string
        deadLetterPolicy:
          description: >-
            Optional. A policy that specifies the conditions for dead lettering
            messages in this subscription. If dead_letter_policy is not set,
            dead lettering is disabled. The Pub/Sub service account associated
            with this subscriptions's parent project (i.e.,
            service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must
            have permission to Acknowledge() messages on this subscription.
          $ref: '#/components/schemas/DeadLetterPolicy'
        retryPolicy:
          description: >-
            Optional. A policy that specifies how Pub/Sub retries message
            delivery for this subscription. If not set, the default retry policy
            is applied. This generally implies that messages will be retried as
            soon as possible for healthy subscribers. RetryPolicy will be
            triggered on NACKs or acknowledgment deadline exceeded events for a
            given message.
          $ref: '#/components/schemas/RetryPolicy'
        detached:
          description: >-
            Optional. Indicates whether the subscription is detached from its
            topic. Detached subscriptions don't receive messages from their
            topic and don't retain any backlog. `Pull` and `StreamingPull`
            requests will return FAILED_PRECONDITION. If the subscription is a
            push subscription, pushes to the endpoint will not be made.
          type: boolean
        enableExactlyOnceDelivery:
          description: >-
            Optional. If true, Pub/Sub provides the following guarantees for the
            delivery of a message with a given value of `message_id` on this
            subscription: * The message sent to a subscriber is guaranteed not
            to be resent before the message's acknowledgment deadline expires. *
            An acknowledged message will not be resent to a subscriber. Note
            that subscribers may still receive multiple copies of a message when
            `enable_exactly_once_delivery` is true if the message was published
            multiple times by a publisher client. These copies are considered
            distinct by Pub/Sub and have distinct `message_id` values.
          type: boolean
        topicMessageRetentionDuration:
          description: >-
            Output only. Indicates the minimum duration for which a message is
            retained after it is published to the subscription's topic. If this
            field is set, messages published to the subscription's topic in the
            last `topic_message_retention_duration` are always available to
            subscribers. See the `message_retention_duration` field in `Topic`.
            This field is set only in responses from the server; it is ignored
            if it is set in any requests.
          readOnly: true
          type: string
          format: google-duration
        state:
          description: >-
            Output only. An output-only field indicating whether or not the
            subscription can receive messages.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The subscription can actively receive messages
            - >-
              The subscription cannot receive messages because of an error with
              the resource to which it pushes messages. See the more detailed
              error state in the corresponding configuration.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - RESOURCE_ERROR
        analyticsHubSubscriptionInfo:
          description: >-
            Output only. Information about the associated Analytics Hub
            subscription. Only set if the subscritpion is created by Analytics
            Hub.
          readOnly: true
          $ref: '#/components/schemas/AnalyticsHubSubscriptionInfo'
        messageTransforms:
          description: >-
            Optional. Transforms to be applied to messages before they are
            delivered to subscribers. Transforms are applied in the order
            specified.
          type: array
          items:
            $ref: '#/components/schemas/MessageTransform'
    PushConfig:
      id: PushConfig
      description: Configuration for a push delivery endpoint.
      type: object
      properties:
        pushEndpoint:
          description: >-
            Optional. A URL locating the endpoint to which messages should be
            pushed. For example, a Webhook endpoint might use
            `https://example.com/push`.
          type: string
        attributes:
          description: >-
            Optional. Endpoint configuration attributes that can be used to
            control different aspects of the message delivery. The only
            currently supported attribute is `x-goog-version`, which you can use
            to change the format of the pushed message. This attribute indicates
            the version of the data expected by the endpoint. This controls the
            shape of the pushed message (i.e., its fields and metadata). If not
            present during the `CreateSubscription` call, it will default to the
            version of the Pub/Sub API used to make such call. If not present in
            a `ModifyPushConfig` call, its value will not be changed.
            `GetSubscription` calls will always return a valid version, even if
            the subscription was created without this attribute. The only
            supported values for the `x-goog-version` attribute are: *
            `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.
            * `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub
            API. For example: `attributes { "x-goog-version": "v1" }`
          type: object
          additionalProperties:
            type: string
        oidcToken:
          description: >-
            Optional. If specified, Pub/Sub will generate and attach an OIDC JWT
            token as an `Authorization` header in the HTTP request for every
            pushed message.
          $ref: '#/components/schemas/OidcToken'
        pubsubWrapper:
          description: >-
            Optional. When set, the payload to the push endpoint is in the form
            of the JSON representation of a PubsubMessage
            (https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#pubsubmessage).
          $ref: '#/components/schemas/PubsubWrapper'
        noWrapper:
          description: Optional. When set, the payload to the push endpoint is not wrapped.
          $ref: '#/components/schemas/NoWrapper'
    OidcToken:
      id: OidcToken
      description: >-
        Contains information needed for generating an [OpenID Connect
        token](https://developers.google.com/identity/protocols/OpenIDConnect).
      type: object
      properties:
        serviceAccountEmail:
          description: >-
            Optional. [Service account
            email](https://cloud.google.com/iam/docs/service-accounts) used for
            generating the OIDC token. For more information on setting up
            authentication, see [Push
            subscriptions](https://cloud.google.com/pubsub/docs/push).
          type: string
        audience:
          description: >-
            Optional. Audience to be used when generating OIDC token. The
            audience claim identifies the recipients that the JWT is intended
            for. The audience value is a single case-sensitive string. Having
            multiple values (array) for the audience field is not supported.
            More info about the OIDC JWT token audience here:
            https://tools.ietf.org/html/rfc7519#section-4.1.3 Note: if not
            specified, the Push endpoint URL will be used.
          type: string
    PubsubWrapper:
      id: PubsubWrapper
      description: >-
        The payload to the push endpoint is in the form of the JSON
        representation of a PubsubMessage
        (https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#pubsubmessage).
      type: object
      properties: {}
    NoWrapper:
      id: NoWrapper
      description: Sets the `data` field as the HTTP body for delivery.
      type: object
      properties:
        writeMetadata:
          description: >-
            Optional. When true, writes the Pub/Sub message metadata to
            `x-goog-pubsub-:` headers of the HTTP request. Writes the Pub/Sub
            message attributes to `:` headers of the HTTP request.
          type: boolean
    BigQueryConfig:
      id: BigQueryConfig
      description: Configuration for a BigQuery subscription.
      type: object
      properties:
        table:
          description: >-
            Optional. The name of the table to which to write data, of the form
            {projectId}.{datasetId}.{tableId}
          type: string
        useTopicSchema:
          description: >-
            Optional. When true, use the topic's schema as the columns to write
            to in BigQuery, if it exists. `use_topic_schema` and
            `use_table_schema` cannot be enabled at the same time.
          type: boolean
        writeMetadata:
          description: >-
            Optional. When true, write the subscription name, message_id,
            publish_time, attributes, and ordering_key to additional columns in
            the table. The subscription name, message_id, and publish_time
            fields are put in their own columns while all other message
            properties (other than data) are written to a JSON object in the
            attributes column.
          type: boolean
        dropUnknownFields:
          description: >-
            Optional. When true and use_topic_schema is true, any fields that
            are a part of the topic schema that are not part of the BigQuery
            table schema are dropped when writing to BigQuery. Otherwise, the
            schemas must be kept in sync and any messages with extra fields are
            not written and remain in the subscription's backlog.
          type: boolean
        state:
          description: >-
            Output only. An output-only field that indicates whether or not the
            subscription can receive messages.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The subscription can actively send messages to BigQuery
            - >-
              Cannot write to the BigQuery table because of permission denied
              errors. This can happen if - Pub/Sub SA has not been granted the
              [appropriate BigQuery IAM
              permissions](https://cloud.google.com/pubsub/docs/create-subscription#assign_bigquery_service_account)
              - bigquery.googleapis.com API is not enabled for the project
              ([instructions](https://cloud.google.com/service-usage/docs/enable-disable))
            - Cannot write to the BigQuery table because it does not exist.
            - Cannot write to the BigQuery table due to a schema mismatch.
            - >-
              Cannot write to the destination because enforce_in_transit is set
              to true and the destination locations are not in the allowed
              regions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PERMISSION_DENIED
            - NOT_FOUND
            - SCHEMA_MISMATCH
            - IN_TRANSIT_LOCATION_RESTRICTION
        useTableSchema:
          description: >-
            Optional. When true, use the BigQuery table's schema as the columns
            to write to in BigQuery. `use_table_schema` and `use_topic_schema`
            cannot be enabled at the same time.
          type: boolean
        serviceAccountEmail:
          description: >-
            Optional. The service account to use to write to BigQuery. The
            subscription creator or updater that specifies this field must have
            `iam.serviceAccounts.actAs` permission on the service account. If
            not specified, the Pub/Sub [service
            agent](https://cloud.google.com/iam/docs/service-agents),
            service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com, is
            used.
          type: string
    CloudStorageConfig:
      id: CloudStorageConfig
      description: Configuration for a Cloud Storage subscription.
      type: object
      properties:
        bucket:
          description: >-
            Required. User-provided name for the Cloud Storage bucket. The
            bucket must be created by the user. The bucket name must be without
            any prefix like "gs://". See the [bucket naming requirements]
            (https://cloud.google.com/storage/docs/buckets#naming).
          type: string
        filenamePrefix:
          description: >-
            Optional. User-provided prefix for Cloud Storage filename. See the
            [object naming
            requirements](https://cloud.google.com/storage/docs/objects#naming).
          type: string
        filenameSuffix:
          description: >-
            Optional. User-provided suffix for Cloud Storage filename. See the
            [object naming
            requirements](https://cloud.google.com/storage/docs/objects#naming).
            Must not end in "/".
          type: string
        filenameDatetimeFormat:
          description: >-
            Optional. User-provided format string specifying how to represent
            datetimes in Cloud Storage filenames. See the [datetime format
            guidance](https://cloud.google.com/pubsub/docs/create-cloudstorage-subscription#file_names).
          type: string
        textConfig:
          description: >-
            Optional. If set, message data will be written to Cloud Storage in
            text format.
          $ref: '#/components/schemas/TextConfig'
        avroConfig:
          description: >-
            Optional. If set, message data will be written to Cloud Storage in
            Avro format.
          $ref: '#/components/schemas/AvroConfig'
        maxDuration:
          description: >-
            Optional. The maximum duration that can elapse before a new Cloud
            Storage file is created. Min 1 minute, max 10 minutes, default 5
            minutes. May not exceed the subscription's acknowledgment deadline.
          type: string
          format: google-duration
        maxBytes:
          description: >-
            Optional. The maximum bytes that can be written to a Cloud Storage
            file before a new file is created. Min 1 KB, max 10 GiB. The
            max_bytes limit may be exceeded in cases where messages are larger
            than the limit.
          type: string
          format: int64
        maxMessages:
          description: >-
            Optional. The maximum number of messages that can be written to a
            Cloud Storage file before a new file is created. Min 1000 messages.
          type: string
          format: int64
        state:
          description: >-
            Output only. An output-only field that indicates whether or not the
            subscription can receive messages.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The subscription can actively send messages to Cloud Storage.
            - >-
              Cannot write to the Cloud Storage bucket because of permission
              denied errors.
            - >-
              Cannot write to the Cloud Storage bucket because it does not
              exist.
            - >-
              Cannot write to the destination because enforce_in_transit is set
              to true and the destination locations are not in the allowed
              regions.
            - >-
              Cannot write to the Cloud Storage bucket due to an incompatibility
              between the topic schema and subscription settings.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PERMISSION_DENIED
            - NOT_FOUND
            - IN_TRANSIT_LOCATION_RESTRICTION
            - SCHEMA_MISMATCH
        serviceAccountEmail:
          description: >-
            Optional. The service account to use to write to Cloud Storage. The
            subscription creator or updater that specifies this field must have
            `iam.serviceAccounts.actAs` permission on the service account. If
            not specified, the Pub/Sub [service
            agent](https://cloud.google.com/iam/docs/service-agents),
            service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com, is
            used.
          type: string
    TextConfig:
      id: TextConfig
      description: >-
        Configuration for writing message data in text format. Message payloads
        will be written to files as raw text, separated by a newline.
      type: object
      properties: {}
    AvroConfig:
      id: AvroConfig
      description: >-
        Configuration for writing message data in Avro format. Message payloads
        and metadata will be written to files as an Avro binary.
      type: object
      properties:
        writeMetadata:
          description: >-
            Optional. When true, write the subscription name, message_id,
            publish_time, attributes, and ordering_key as additional fields in
            the output. The subscription name, message_id, and publish_time
            fields are put in their own fields while all other message
            properties other than data (for example, an ordering_key, if
            present) are added as entries in the attributes map.
          type: boolean
        useTopicSchema:
          description: >-
            Optional. When true, the output Cloud Storage file will be
            serialized using the topic schema, if it exists.
          type: boolean
    ExpirationPolicy:
      id: ExpirationPolicy
      description: >-
        A policy that specifies the conditions for resource expiration (i.e.,
        automatic resource deletion).
      type: object
      properties:
        ttl:
          description: >-
            Optional. Specifies the "time-to-live" duration for an associated
            resource. The resource expires if it is not active for a period of
            `ttl`. The definition of "activity" depends on the type of the
            associated resource. The minimum and maximum allowed values for
            `ttl` depend on the type of the associated resource, as well. If
            `ttl` is not set, the associated resource never expires.
          type: string
          format: google-duration
    DeadLetterPolicy:
      id: DeadLetterPolicy
      description: >-
        Dead lettering is done on a best effort basis. The same message might be
        dead lettered multiple times. If validation on any of the fields fails
        at subscription creation/updation, the create/update subscription
        request will fail.
      type: object
      properties:
        deadLetterTopic:
          description: >-
            Optional. The name of the topic to which dead letter messages should
            be published. Format is `projects/{project}/topics/{topic}`.The
            Pub/Sub service account associated with the enclosing subscription's
            parent project (i.e.,
            service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must
            have permission to Publish() to this topic. The operation will fail
            if the topic does not exist. Users should ensure that there is a
            subscription attached to this topic since messages published to a
            topic with no subscriptions are lost.
          type: string
        maxDeliveryAttempts:
          description: >-
            Optional. The maximum number of delivery attempts for any message.
            The value must be between 5 and 100. The number of delivery attempts
            is defined as 1 + (the sum of number of NACKs and number of times
            the acknowledgment deadline has been exceeded for the message). A
            NACK is any call to ModifyAckDeadline with a 0 deadline. Note that
            client libraries may automatically extend ack_deadlines. This field
            will be honored on a best effort basis. If this parameter is 0, a
            default value of 5 is used.
          type: integer
          format: int32
    RetryPolicy:
      id: RetryPolicy
      description: >-
        A policy that specifies how Pub/Sub retries message delivery. Retry
        delay will be exponential based on provided minimum and maximum
        backoffs. https://en.wikipedia.org/wiki/Exponential_backoff. RetryPolicy
        will be triggered on NACKs or acknowledgment deadline exceeded events
        for a given message. Retry Policy is implemented on a best effort basis.
        At times, the delay between consecutive deliveries may not match the
        configuration. That is, delay can be more or less than configured
        backoff.
      type: object
      properties:
        minimumBackoff:
          description: >-
            Optional. The minimum delay between consecutive deliveries of a
            given message. Value should be between 0 and 600 seconds. Defaults
            to 10 seconds.
          type: string
          format: google-duration
        maximumBackoff:
          description: >-
            Optional. The maximum delay between consecutive deliveries of a
            given message. Value should be between 0 and 600 seconds. Defaults
            to 600 seconds.
          type: string
          format: google-duration
    AnalyticsHubSubscriptionInfo:
      id: AnalyticsHubSubscriptionInfo
      description: >-
        Information about an associated [Analytics Hub
        subscription](https://cloud.google.com/bigquery/docs/analytics-hub-manage-subscriptions).
      type: object
      properties:
        listing:
          description: >-
            Optional. The name of the associated Analytics Hub listing resource.
            Pattern:
            "projects/{project}/locations/{location}/dataExchanges/{data_exchange}/listings/{listing}"
          type: string
        subscription:
          description: >-
            Optional. The name of the associated Analytics Hub subscription
            resource. Pattern:
            "projects/{project}/locations/{location}/subscriptions/{subscription}"
          type: string
    UpdateSubscriptionRequest:
      id: UpdateSubscriptionRequest
      description: Request for the UpdateSubscription method.
      type: object
      properties:
        subscription:
          description: Required. The updated subscription object.
          $ref: '#/components/schemas/Subscription'
        updateMask:
          description: >-
            Required. Indicates which fields in the provided subscription to
            update. Must be specified and non-empty.
          type: string
          format: google-fieldmask
    ListSubscriptionsResponse:
      id: ListSubscriptionsResponse
      description: Response for the `ListSubscriptions` method.
      type: object
      properties:
        subscriptions:
          description: Optional. The subscriptions that match the request.
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        nextPageToken:
          description: >-
            Optional. If not empty, indicates that there may be more
            subscriptions that match the request; this value should be passed in
            a new `ListSubscriptionsRequest` to get more subscriptions.
          type: string
    ModifyAckDeadlineRequest:
      id: ModifyAckDeadlineRequest
      description: Request for the ModifyAckDeadline method.
      type: object
      properties:
        ackIds:
          description: Required. List of acknowledgment IDs.
          type: array
          items:
            type: string
        ackDeadlineSeconds:
          description: >-
            Required. The new ack deadline with respect to the time this request
            was sent to the Pub/Sub system. For example, if the value is 10, the
            new ack deadline will expire 10 seconds after the
            `ModifyAckDeadline` call was made. Specifying zero might immediately
            make the message available for delivery to another subscriber
            client. This typically results in an increase in the rate of message
            redeliveries (that is, duplicates). The minimum deadline you can
            specify is 0 seconds. The maximum deadline you can specify in a
            single request is 600 seconds (10 minutes).
          type: integer
          format: int32
    AcknowledgeRequest:
      id: AcknowledgeRequest
      description: Request for the Acknowledge method.
      type: object
      properties:
        ackIds:
          description: >-
            Required. The acknowledgment ID for the messages being acknowledged
            that was returned by the Pub/Sub system in the `Pull` response. Must
            not be empty.
          type: array
          items:
            type: string
    PullRequest:
      id: PullRequest
      description: Request for the `Pull` method.
      type: object
      properties:
        returnImmediately:
          description: >-
            Optional. If this field set to true, the system will respond
            immediately even if it there are no messages available to return in
            the `Pull` response. Otherwise, the system may wait (for a bounded
            amount of time) until at least one message is available, rather than
            returning no messages. Warning: setting this field to `true` is
            discouraged because it adversely impacts the performance of `Pull`
            operations. We recommend that users do not set this field.
          deprecated: true
          type: boolean
        maxMessages:
          description: >-
            Required. The maximum number of messages to return for this request.
            Must be a positive integer. The Pub/Sub system may return fewer than
            the number specified.
          type: integer
          format: int32
    PullResponse:
      id: PullResponse
      description: Response for the `Pull` method.
      type: object
      properties:
        receivedMessages:
          description: >-
            Optional. Received Pub/Sub messages. The list will be empty if there
            are no more messages available in the backlog, or if no messages
            could be returned before the request timeout. For JSON, the response
            can be entirely empty. The Pub/Sub system may return fewer than the
            `maxMessages` requested even if there are more messages available in
            the backlog.
          type: array
          items:
            $ref: '#/components/schemas/ReceivedMessage'
    ReceivedMessage:
      id: ReceivedMessage
      description: A message and its corresponding acknowledgment ID.
      type: object
      properties:
        ackId:
          description: Optional. This ID can be used to acknowledge the received message.
          type: string
        message:
          description: Optional. The message.
          $ref: '#/components/schemas/PubsubMessage'
        deliveryAttempt:
          description: >-
            Optional. The approximate number of times that Pub/Sub has attempted
            to deliver the associated message to a subscriber. More precisely,
            this is 1 + (number of NACKs) + (number of ack_deadline exceeds) for
            this message. A NACK is any call to ModifyAckDeadline with a 0
            deadline. An ack_deadline exceeds event is whenever a message is not
            acknowledged within ack_deadline. Note that ack_deadline is
            initially Subscription.ackDeadlineSeconds, but may get extended
            automatically by the client library. Upon the first delivery of a
            given message, `delivery_attempt` will have a value of 1. The value
            is calculated at best effort and is approximate. If a
            DeadLetterPolicy is not set on the subscription, this will be 0.
          type: integer
          format: int32
    ModifyPushConfigRequest:
      id: ModifyPushConfigRequest
      description: Request for the ModifyPushConfig method.
      type: object
      properties:
        pushConfig:
          description: >-
            Required. The push configuration for future deliveries. An empty
            `pushConfig` indicates that the Pub/Sub system should stop pushing
            messages from the given subscription and allow messages to be pulled
            and acknowledged - effectively pausing the subscription if `Pull` or
            `StreamingPull` is not called.
          $ref: '#/components/schemas/PushConfig'
    Snapshot:
      id: Snapshot
      description: >-
        A snapshot resource. Snapshots are used in
        [Seek](https://cloud.google.com/pubsub/docs/replay-overview) operations,
        which allow you to manage message acknowledgments in bulk. That is, you
        can set the acknowledgment state of messages in an existing subscription
        to the state captured by a snapshot.
      type: object
      properties:
        name:
          description: Optional. The name of the snapshot.
          type: string
        topic:
          description: >-
            Optional. The name of the topic from which this snapshot is
            retaining messages.
          type: string
        expireTime:
          description: >-
            Optional. The snapshot is guaranteed to exist up until this time. A
            newly-created snapshot expires no later than 7 days from the time of
            its creation. Its exact lifetime is determined at creation by the
            existing backlog in the source subscription. Specifically, the
            lifetime of the snapshot is `7 days - (age of oldest unacked message
            in the subscription)`. For example, consider a subscription whose
            oldest unacked message is 3 days old. If a snapshot is created from
            this subscription, the snapshot -- which will always capture this
            3-day-old backlog as long as the snapshot exists -- will expire in 4
            days. The service will refuse to create a snapshot that would expire
            in less than 1 hour after creation.
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional. See [Creating and managing labels]
            (https://cloud.google.com/pubsub/docs/labels).
          type: object
          additionalProperties:
            type: string
    ListSnapshotsResponse:
      id: ListSnapshotsResponse
      description: Response for the `ListSnapshots` method.
      type: object
      properties:
        snapshots:
          description: Optional. The resulting snapshots.
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
        nextPageToken:
          description: >-
            Optional. If not empty, indicates that there may be more snapshot
            that match the request; this value should be passed in a new
            `ListSnapshotsRequest`.
          type: string
    CreateSnapshotRequest:
      id: CreateSnapshotRequest
      description: Request for the `CreateSnapshot` method.
      type: object
      properties:
        subscription:
          description: >-
            Required. The subscription whose backlog the snapshot retains.
            Specifically, the created snapshot is guaranteed to retain: (a) The
            existing backlog on the subscription. More precisely, this is
            defined as the messages in the subscription's backlog that are
            unacknowledged upon the successful completion of the
            `CreateSnapshot` request; as well as: (b) Any messages published to
            the subscription's topic following the successful completion of the
            CreateSnapshot request. Format is
            `projects/{project}/subscriptions/{sub}`.
          type: string
        labels:
          description: >-
            Optional. See [Creating and managing
            labels](https://cloud.google.com/pubsub/docs/labels).
          type: object
          additionalProperties:
            type: string
    UpdateSnapshotRequest:
      id: UpdateSnapshotRequest
      description: Request for the UpdateSnapshot method.
      type: object
      properties:
        snapshot:
          description: Required. The updated snapshot object.
          $ref: '#/components/schemas/Snapshot'
        updateMask:
          description: >-
            Required. Indicates which fields in the provided snapshot to update.
            Must be specified and non-empty.
          type: string
          format: google-fieldmask
    SeekRequest:
      id: SeekRequest
      description: Request for the `Seek` method.
      type: object
      properties:
        time:
          description: >-
            Optional. The time to seek to. Messages retained in the subscription
            that were published before this time are marked as acknowledged, and
            messages retained in the subscription that were published after this
            time are marked as unacknowledged. Note that this operation affects
            only those messages retained in the subscription (configured by the
            combination of `message_retention_duration` and
            `retain_acked_messages`). For example, if `time` corresponds to a
            point before the message retention window (or to a point before the
            system's notion of the subscription creation time), only retained
            messages will be marked as unacknowledged, and already-expunged
            messages will not be restored.
          type: string
          format: google-datetime
        snapshot:
          description: >-
            Optional. The snapshot to seek to. The snapshot's topic must be the
            same as that of the provided subscription. Format is
            `projects/{project}/snapshots/{snap}`.
          type: string
    SeekResponse:
      id: SeekResponse
      description: Response for the `Seek` method (this response is empty).
      type: object
      properties: {}
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    topics_iam_policies:
      id: google.pubsub.topics_iam_policies
      name: topics_iam_policies
      title: Topics_iam_policies
      methods:
        projects_topics_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1topics~1{topicsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_topics_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1topics~1{topicsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_topics_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1topics~1{topicsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/topics_iam_policies/methods/projects_topics_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/topics_iam_policies/methods/projects_topics_set_iam_policy
        delete: []
    topics:
      id: google.pubsub.topics
      name: topics
      title: Topics
      methods:
        projects_topics_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1topics~1{topicsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_topics_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1topics~1{topicsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_topics_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1topics~1{topicsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_topics_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1topics~1{topicsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_topics_publish:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1topics~1{topicsId}:publish/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_topics_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1topics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.topics
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/topics/methods/projects_topics_get
          - $ref: >-
              #/components/x-stackQL-resources/topics/methods/projects_topics_list
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/topics/methods/projects_topics_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/topics/methods/projects_topics_delete
    subscriptions:
      id: google.pubsub.subscriptions
      name: subscriptions
      title: Subscriptions
      methods:
        projects_topics_subscriptions_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1topics~1{topicsId}~1subscriptions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.subscriptions
        projects_subscriptions_detach:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}:detach/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_subscriptions_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_subscriptions_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_subscriptions_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_subscriptions_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_subscriptions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.subscriptions
        projects_subscriptions_modify_ack_deadline:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}:modifyAckDeadline/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_subscriptions_acknowledge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}:acknowledge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_subscriptions_pull:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}:pull/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_subscriptions_modify_push_config:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}:modifyPushConfig/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_subscriptions_seek:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}:seek/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/projects_topics_subscriptions_list
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/projects_subscriptions_get
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/projects_subscriptions_list
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/projects_subscriptions_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/projects_subscriptions_delete
    snapshots:
      id: google.pubsub.snapshots
      name: snapshots
      title: Snapshots
      methods:
        projects_topics_snapshots_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1topics~1{topicsId}~1snapshots/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.snapshots
        projects_snapshots_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1snapshots~1{snapshotsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snapshots_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1snapshots~1{snapshotsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snapshots_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1snapshots~1{snapshotsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snapshots_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1snapshots~1{snapshotsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snapshots_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1snapshots/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.snapshots
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/snapshots/methods/projects_topics_snapshots_list
          - $ref: >-
              #/components/x-stackQL-resources/snapshots/methods/projects_snapshots_get
          - $ref: >-
              #/components/x-stackQL-resources/snapshots/methods/projects_snapshots_list
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/snapshots/methods/projects_snapshots_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/snapshots/methods/projects_snapshots_delete
    subscriptions_iam_policies:
      id: google.pubsub.subscriptions_iam_policies
      name: subscriptions_iam_policies
      title: Subscriptions_iam_policies
      methods:
        projects_subscriptions_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_subscriptions_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_subscriptions_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1subscriptions~1{subscriptionsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions_iam_policies/methods/projects_subscriptions_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions_iam_policies/methods/projects_subscriptions_set_iam_policy
        delete: []
    snapshots_iam_policies:
      id: google.pubsub.snapshots_iam_policies
      name: snapshots_iam_policies
      title: Snapshots_iam_policies
      methods:
        projects_snapshots_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1snapshots~1{snapshotsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snapshots_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1snapshots~1{snapshotsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_snapshots_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1snapshots~1{snapshotsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/snapshots_iam_policies/methods/projects_snapshots_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/snapshots_iam_policies/methods/projects_snapshots_set_iam_policy
        delete: []
    schemas_iam_policies:
      id: google.pubsub.schemas_iam_policies
      name: schemas_iam_policies
      title: Schemas_iam_policies
      methods:
        projects_schemas_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1schemas~1{schemasId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_schemas_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1schemas~1{schemasId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_schemas_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1schemas~1{schemasId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/schemas_iam_policies/methods/projects_schemas_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/schemas_iam_policies/methods/projects_schemas_set_iam_policy
        delete: []
    schemas:
      id: google.pubsub.schemas
      name: schemas
      title: Schemas
      methods:
        projects_schemas_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1schemas/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_schemas_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schemas
        projects_schemas_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1schemas~1{schemasId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_schemas_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1schemas~1{schemasId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_schemas_commit:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1schemas~1{schemasId}:commit/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_schemas_rollback:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1schemas~1{schemasId}:rollback/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_schemas_validate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1schemas:validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_schemas_validate_message:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1schemas:validateMessage/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_schemas_get
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_schemas_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_schemas_create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_schemas_delete
    schemas_revisions:
      id: google.pubsub.schemas_revisions
      name: schemas_revisions
      title: Schemas_revisions
      methods:
        projects_schemas_list_revisions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1schemas~1{schemasId}:listRevisions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schemas
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/schemas_revisions/methods/projects_schemas_list_revisions
        insert: []
        update: []
        replace: []
        delete: []
    schemas_revision:
      id: google.pubsub.schemas_revision
      name: schemas_revision
      title: Schemas_revision
      methods:
        projects_schemas_delete_revision:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1schemas~1{schemasId}:deleteRevision/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/schemas_revision/methods/projects_schemas_delete_revision
paths:
  /v1/projects/{projectsId}/topics/{topicsId}:setIamPolicy:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: pubsub.projects.topics.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/topics/{topicsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: pubsub.projects.topics.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/topics/{topicsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: pubsub.projects.topics.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/topics/{topicsId}:
    parameters: *ref_1
    put:
      description: >-
        Creates the given topic with the given name. See the [resource name
        rules]
        (https://cloud.google.com/pubsub/docs/pubsub-basics#resource_names).
      operationId: pubsub.projects.topics.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates an existing topic by updating the fields specified in the update
        mask. Note that certain properties of a topic are not modifiable.
      operationId: pubsub.projects.topics.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTopicRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
    get:
      description: Gets the configuration of a topic.
      operationId: pubsub.projects.topics.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
        does not exist. After a topic is deleted, a new topic may be created
        with the same name; this is an entirely new topic with none of the old
        configuration or subscriptions. Existing subscriptions to this topic are
        not deleted, but their `topic` field is set to `_deleted-topic_`.
      operationId: pubsub.projects.topics.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/topics/{topicsId}:publish:
    parameters: *ref_1
    post:
      description: >-
        Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
        does not exist.
      operationId: pubsub.projects.topics.publish
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/topics:
    parameters: *ref_1
    get:
      description: Lists matching topics.
      operationId: pubsub.projects.topics.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/topics/{topicsId}/subscriptions:
    parameters: *ref_1
    get:
      description: Lists the names of the attached subscriptions on this topic.
      operationId: pubsub.projects.topics.subscriptions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/topics/{topicsId}/snapshots:
    parameters: *ref_1
    get:
      description: >-
        Lists the names of the snapshots on this topic. Snapshots are used in
        [Seek](https://cloud.google.com/pubsub/docs/replay-overview) operations,
        which allow you to manage message acknowledgments in bulk. That is, you
        can set the acknowledgment state of messages in an existing subscription
        to the state captured by a snapshot.
      operationId: pubsub.projects.topics.snapshots.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicSnapshotsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/subscriptions/{subscriptionsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: pubsub.projects.subscriptions.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/subscriptions/{subscriptionsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: pubsub.projects.subscriptions.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/subscriptions/{subscriptionsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: pubsub.projects.subscriptions.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/subscriptions/{subscriptionsId}:detach:
    parameters: *ref_1
    post:
      description: >-
        Detaches a subscription from this topic. All messages retained in the
        subscription are dropped. Subsequent `Pull` and `StreamingPull` requests
        will return FAILED_PRECONDITION. If the subscription is a push
        subscription, pushes to the endpoint will stop.
      operationId: pubsub.projects.subscriptions.detach
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachSubscriptionResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/subscriptions/{subscriptionsId}:
    parameters: *ref_1
    put:
      description: >-
        Creates a subscription to a given topic. See the [resource name rules]
        (https://cloud.google.com/pubsub/docs/pubsub-basics#resource_names). If
        the subscription already exists, returns `ALREADY_EXISTS`. If the
        corresponding topic doesn't exist, returns `NOT_FOUND`. If the name is
        not provided in the request, the server will assign a random name for
        this subscription on the same project as the topic, conforming to the
        [resource name format]
        (https://cloud.google.com/pubsub/docs/pubsub-basics#resource_names). The
        generated name is populated in the returned Subscription object. Note
        that for REST API requests, you must specify a name in the request.
      operationId: pubsub.projects.subscriptions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
    get:
      description: Gets the configuration details of a subscription.
      operationId: pubsub.projects.subscriptions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates an existing subscription by updating the fields specified in the
        update mask. Note that certain properties of a subscription, such as its
        topic, are not modifiable.
      operationId: pubsub.projects.subscriptions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes an existing subscription. All messages retained in the
        subscription are immediately dropped. Calls to `Pull` after deletion
        will return `NOT_FOUND`. After a subscription is deleted, a new one may
        be created with the same name, but the new one has no association with
        the old subscription or its topic unless the same topic is specified.
      operationId: pubsub.projects.subscriptions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/subscriptions:
    parameters: *ref_1
    get:
      description: Lists matching subscriptions.
      operationId: pubsub.projects.subscriptions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/subscriptions/{subscriptionsId}:modifyAckDeadline:
    parameters: *ref_1
    post:
      description: >-
        Modifies the ack deadline for a specific message. This method is useful
        to indicate that more time is needed to process a message by the
        subscriber, or to make the message available for redelivery if the
        processing was interrupted. Note that this does not modify the
        subscription-level `ackDeadlineSeconds` used for subsequent messages.
      operationId: pubsub.projects.subscriptions.modifyAckDeadline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyAckDeadlineRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/subscriptions/{subscriptionsId}:acknowledge:
    parameters: *ref_1
    post:
      description: >-
        Acknowledges the messages associated with the `ack_ids` in the
        `AcknowledgeRequest`. The Pub/Sub system can remove the relevant
        messages from the subscription. Acknowledging a message whose ack
        deadline has expired may succeed, but such a message may be redelivered
        later. Acknowledging a message more than once will not result in an
        error.
      operationId: pubsub.projects.subscriptions.acknowledge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/subscriptions/{subscriptionsId}:pull:
    parameters: *ref_1
    post:
      description: Pulls messages from the server.
      operationId: pubsub.projects.subscriptions.pull
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/subscriptions/{subscriptionsId}:modifyPushConfig:
    parameters: *ref_1
    post:
      description: >-
        Modifies the `PushConfig` for a specified subscription. This may be used
        to change a push subscription to a pull one (signified by an empty
        `PushConfig`) or vice versa, or change the endpoint URL and other
        attributes of a push subscription. Messages will accumulate for delivery
        continuously through the call regardless of changes to the `PushConfig`.
      operationId: pubsub.projects.subscriptions.modifyPushConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyPushConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/subscriptions/{subscriptionsId}:seek:
    parameters: *ref_1
    post:
      description: >-
        Seeks an existing subscription to a point in time or to a given
        snapshot, whichever is provided in the request. Snapshots are used in
        [Seek] (https://cloud.google.com/pubsub/docs/replay-overview)
        operations, which allow you to manage message acknowledgments in bulk.
        That is, you can set the acknowledgment state of messages in an existing
        subscription to the state captured by a snapshot. Note that both the
        subscription and the snapshot must be on the same topic.
      operationId: pubsub.projects.subscriptions.seek
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeekRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeekResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/snapshots/{snapshotsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: pubsub.projects.snapshots.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/snapshots/{snapshotsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: pubsub.projects.snapshots.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/snapshots/{snapshotsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: pubsub.projects.snapshots.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/snapshots/{snapshotsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the configuration details of a snapshot. Snapshots are used in
        [Seek](https://cloud.google.com/pubsub/docs/replay-overview) operations,
        which allow you to manage message acknowledgments in bulk. That is, you
        can set the acknowledgment state of messages in an existing subscription
        to the state captured by a snapshot.
      operationId: pubsub.projects.snapshots.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
    put:
      description: >-
        Creates a snapshot from the requested subscription. Snapshots are used
        in [Seek](https://cloud.google.com/pubsub/docs/replay-overview)
        operations, which allow you to manage message acknowledgments in bulk.
        That is, you can set the acknowledgment state of messages in an existing
        subscription to the state captured by a snapshot. If the snapshot
        already exists, returns `ALREADY_EXISTS`. If the requested subscription
        doesn't exist, returns `NOT_FOUND`. If the backlog in the subscription
        is too old -- and the resulting snapshot would expire in less than 1
        hour -- then `FAILED_PRECONDITION` is returned. See also the
        `Snapshot.expire_time` field. If the name is not provided in the
        request, the server will assign a random name for this snapshot on the
        same project as the subscription, conforming to the [resource name
        format]
        (https://cloud.google.com/pubsub/docs/pubsub-basics#resource_names). The
        generated name is populated in the returned Snapshot object. Note that
        for REST API requests, you must specify a name in the request.
      operationId: pubsub.projects.snapshots.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSnapshotRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates an existing snapshot by updating the fields specified in the
        update mask. Snapshots are used in
        [Seek](https://cloud.google.com/pubsub/docs/replay-overview) operations,
        which allow you to manage message acknowledgments in bulk. That is, you
        can set the acknowledgment state of messages in an existing subscription
        to the state captured by a snapshot.
      operationId: pubsub.projects.snapshots.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSnapshotRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Removes an existing snapshot. Snapshots are used in [Seek]
        (https://cloud.google.com/pubsub/docs/replay-overview) operations, which
        allow you to manage message acknowledgments in bulk. That is, you can
        set the acknowledgment state of messages in an existing subscription to
        the state captured by a snapshot. When the snapshot is deleted, all
        messages retained in the snapshot are immediately dropped. After a
        snapshot is deleted, a new one may be created with the same name, but
        the new one has no association with the old snapshot or its
        subscription, unless the same subscription is specified.
      operationId: pubsub.projects.snapshots.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/snapshots:
    parameters: *ref_1
    get:
      description: >-
        Lists the existing snapshots. Snapshots are used in [Seek](
        https://cloud.google.com/pubsub/docs/replay-overview) operations, which
        allow you to manage message acknowledgments in bulk. That is, you can
        set the acknowledgment state of messages in an existing subscription to
        the state captured by a snapshot.
      operationId: pubsub.projects.snapshots.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/schemas/{schemasId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: pubsub.projects.schemas.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/schemas/{schemasId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: pubsub.projects.schemas.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/schemas/{schemasId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: pubsub.projects.schemas.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/schemas:
    parameters: *ref_1
    post:
      description: Creates a schema.
      operationId: pubsub.projects.schemas.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schema'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: schemaId
          schema:
            type: string
    get:
      description: Lists schemas in a project.
      operationId: pubsub.projects.schemas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/schemas/{schemasId}:
    parameters: *ref_1
    get:
      description: Gets a schema.
      operationId: pubsub.projects.schemas.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    delete:
      description: Deletes a schema.
      operationId: pubsub.projects.schemas.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/schemas/{schemasId}:listRevisions:
    parameters: *ref_1
    get:
      description: Lists all schema revisions for the named schema.
      operationId: pubsub.projects.schemas.listRevisions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemaRevisionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/schemas/{schemasId}:commit:
    parameters: *ref_1
    post:
      description: Commits a new schema revision to an existing schema.
      operationId: pubsub.projects.schemas.commit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitSchemaRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/schemas/{schemasId}:rollback:
    parameters: *ref_1
    post:
      description: >-
        Creates a new schema revision that is a copy of the provided
        revision_id.
      operationId: pubsub.projects.schemas.rollback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackSchemaRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/schemas/{schemasId}:deleteRevision:
    parameters: *ref_1
    delete:
      description: Deletes a specific schema revision.
      operationId: pubsub.projects.schemas.deleteRevision
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: query
          name: revisionId
          schema:
            type: string
  /v1/projects/{projectsId}/schemas:validate:
    parameters: *ref_1
    post:
      description: Validates a schema.
      operationId: pubsub.projects.schemas.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateSchemaRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateSchemaResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/schemas:validateMessage:
    parameters: *ref_1
    post:
      description: Validates a message against a schema.
      operationId: pubsub.projects.schemas.validateMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateMessageRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMessageResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
