openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Speech-to-Text API
  description: Converts audio to text by applying powerful neural network models.
  version: v1
  x-discovery-doc-revision: '20230815'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/speech-to-text/docs/quickstart-protocol'
servers:
  - url: 'https://speech.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    RecognitionConfig:
      description: Provides information to the recognizer that specifies how to process the request.
      id: RecognitionConfig
      properties:
        diarizationConfig:
          description: 'Config to enable speaker diarization and set additional parameters to make diarization better suited for your application. Note: When this is enabled, we send all the words from the beginning of the audio for the top alternative in every consecutive STREAMING responses. This is done in order to improve our speaker tags as our models learn to identify the speakers in the conversation over time. For non-streaming requests, the diarization results will be provided only in the top alternative of the FINAL SpeechRecognitionResult.'
          $ref: '#/components/schemas/SpeakerDiarizationConfig'
        enableSpokenEmojis:
          description: 'The spoken emoji behavior for the call If not set, uses default behavior based on model of choice If ''true'', adds spoken emoji formatting for the request. This will replace spoken emojis with the corresponding Unicode symbols in the final transcript. If ''false'', spoken emojis are not replaced.'
          type: boolean
        enableAutomaticPunctuation:
          type: boolean
          description: 'If ''true'', adds punctuation to recognition result hypotheses. This feature is only available in select languages. Setting this for requests in other languages has no effect at all. The default ''false'' value does not add punctuation to result hypotheses.'
        languageCode:
          type: string
          description: 'Required. The language of the supplied audio as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US". See [Language Support](https://cloud.google.com/speech-to-text/docs/languages) for a list of the currently supported language codes.'
        metadata:
          description: Metadata regarding this request.
          $ref: '#/components/schemas/RecognitionMetadata'
        enableSeparateRecognitionPerChannel:
          type: boolean
          description: 'This needs to be set to `true` explicitly and `audio_channel_count` > 1 to get each channel recognized separately. The recognition result will contain a `channel_tag` field to state which channel that result belongs to. If this is not true, we will only recognize the first channel. The request is billed cumulatively for all channels recognized: `audio_channel_count` multiplied by the length of the audio.'
        sampleRateHertz:
          type: integer
          description: 'Sample rate in Hertz of the audio data sent in all `RecognitionAudio` messages. Valid values are: 8000-48000. 16000 is optimal. For best results, set the sampling rate of the audio source to 16000 Hz. If that''s not possible, use the native sample rate of the audio source (instead of re-sampling). This field is optional for FLAC and WAV audio files, but is required for all other audio formats. For details, see AudioEncoding.'
          format: int32
        enableSpokenPunctuation:
          description: 'The spoken punctuation behavior for the call If not set, uses default behavior based on model of choice e.g. command_and_search will enable spoken punctuation by default If ''true'', replaces spoken punctuation with the corresponding symbols in the request. For example, "how are you question mark" becomes "how are you?". See https://cloud.google.com/speech-to-text/docs/spoken-punctuation for support. If ''false'', spoken punctuation is not replaced.'
          type: boolean
        audioChannelCount:
          format: int32
          type: integer
          description: 'The number of channels in the input audio data. ONLY set this for MULTI-CHANNEL recognition. Valid values for LINEAR16, OGG_OPUS and FLAC are `1`-`8`. Valid value for MULAW, AMR, AMR_WB and SPEEX_WITH_HEADER_BYTE is only `1`. If `0` or omitted, defaults to one channel (mono). Note: We only recognize the first channel by default. To perform independent recognition on each channel set `enable_separate_recognition_per_channel` to ''true''.'
        encoding:
          type: string
          description: 'Encoding of audio data sent in all `RecognitionAudio` messages. This field is optional for `FLAC` and `WAV` audio files and required for all other audio formats. For details, see AudioEncoding.'
          enum:
            - ENCODING_UNSPECIFIED
            - LINEAR16
            - FLAC
            - MULAW
            - AMR
            - AMR_WB
            - OGG_OPUS
            - SPEEX_WITH_HEADER_BYTE
            - WEBM_OPUS
          enumDescriptions:
            - Not specified.
            - Uncompressed 16-bit signed little-endian samples (Linear PCM).
            - '`FLAC` (Free Lossless Audio Codec) is the recommended encoding because it is lossless--therefore recognition is not compromised--and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.'
            - 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
            - Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.
            - Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
            - 'Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be one of 8000, 12000, 16000, 24000, or 48000.'
            - 'Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Cloud Speech API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000.'
            - 'Opus encoded audio frames in WebM container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be one of 8000, 12000, 16000, 24000, or 48000.'
        profanityFilter:
          type: boolean
          description: 'If set to `true`, the server will attempt to filter out profanities, replacing all but the initial character in each filtered word with asterisks, e.g. "f***". If set to `false` or omitted, profanities won''t be filtered out.'
        enableWordTimeOffsets:
          type: boolean
          description: 'If `true`, the top result includes a list of words and the start and end time offsets (timestamps) for those words. If `false`, no word-level time offset information is returned. The default is `false`.'
        maxAlternatives:
          type: integer
          format: int32
          description: 'Maximum number of recognition hypotheses to be returned. Specifically, the maximum number of `SpeechRecognitionAlternative` messages within each `SpeechRecognitionResult`. The server may return fewer than `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will return a maximum of one. If omitted, will return a maximum of one.'
        alternativeLanguageCodes:
          type: array
          description: 'A list of up to 3 additional [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tags, listing possible alternative languages of the supplied audio. See [Language Support](https://cloud.google.com/speech-to-text/docs/languages) for a list of the currently supported language codes. If alternative languages are listed, recognition result will contain recognition in the most likely language detected including the main language_code. The recognition result will include the language tag of the language detected in the audio. Note: This feature is only supported for Voice Command and Voice Search use cases and performance may vary for other use cases (e.g., phone call transcription).'
          items:
            type: string
        speechContexts:
          description: 'Array of SpeechContext. A means to provide context to assist the speech recognition. For more information, see [speech adaptation](https://cloud.google.com/speech-to-text/docs/adaptation).'
          items:
            $ref: '#/components/schemas/SpeechContext'
          type: array
        model:
          description: 'Which model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the RecognitionConfig. *Model* *Description* latest_long Best for long form content like media or conversation. latest_short Best for short form content like commands or single shot directed speech. command_and_search Best for short queries such as voice commands or voice search. phone_call Best for audio that originated from a phone call (typically recorded at an 8khz sampling rate). video Best for audio that originated from video or includes multiple speakers. Ideally the audio is recorded at a 16khz or greater sampling rate. This is a premium model that costs more than the standard rate. default Best for audio that is not one of the specific audio models. For example, long-form audio. Ideally the audio is high-fidelity, recorded at a 16khz or greater sampling rate. medical_conversation Best for audio that originated from a conversation between a medical provider and patient. medical_dictation Best for audio that originated from dictation notes by a medical provider. '
          type: string
        enableWordConfidence:
          type: boolean
          description: 'If `true`, the top result includes a list of words and the confidence for those words. If `false`, no word-level confidence information is returned. The default is `false`.'
        adaptation:
          description: 'Speech adaptation configuration improves the accuracy of speech recognition. For more information, see the [speech adaptation](https://cloud.google.com/speech-to-text/docs/adaptation) documentation. When speech adaptation is set it supersedes the `speech_contexts` field.'
          $ref: '#/components/schemas/SpeechAdaptation'
        useEnhanced:
          type: boolean
          description: 'Set to true to use an enhanced model for speech recognition. If `use_enhanced` is set to true and the `model` field is not set, then an appropriate enhanced model is chosen if an enhanced model exists for the audio. If `use_enhanced` is true and an enhanced version of the specified model does not exist, then the speech is recognized using the standard version of the specified model.'
      type: object
    SpeakerDiarizationConfig:
      description: Config to enable speaker diarization.
      properties:
        maxSpeakerCount:
          description: 'Maximum number of speakers in the conversation. This range gives you more flexibility by allowing the system to automatically determine the correct number of speakers. If not set, the default value is 6.'
          type: integer
          format: int32
        speakerTag:
          type: integer
          deprecated: true
          format: int32
          readOnly: true
          description: Output only. Unused.
        enableSpeakerDiarization:
          type: boolean
          description: 'If ''true'', enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_label provided in the WordInfo.'
        minSpeakerCount:
          format: int32
          description: 'Minimum number of speakers in the conversation. This range gives you more flexibility by allowing the system to automatically determine the correct number of speakers. If not set, the default value is 2.'
          type: integer
      type: object
      id: SpeakerDiarizationConfig
    ABNFGrammar:
      properties:
        abnfStrings:
          items:
            type: string
          type: array
          description: All declarations and rules of an ABNF grammar broken up into multiple strings that will end up concatenated.
      id: ABNFGrammar
      type: object
    RecognizeRequest:
      properties:
        config:
          description: Required. Provides information to the recognizer that specifies how to process the request.
          $ref: '#/components/schemas/RecognitionConfig'
        audio:
          $ref: '#/components/schemas/RecognitionAudio'
          description: Required. The audio data to be recognized.
      type: object
      id: RecognizeRequest
      description: The top-level message sent by the client for the `Recognize` method.
    CustomClass:
      type: object
      properties:
        name:
          type: string
          description: The resource name of the custom class.
        items:
          items:
            $ref: '#/components/schemas/ClassItem'
          description: A collection of class items.
          type: array
        customClassId:
          type: string
          description: 'If this custom class is a resource, the custom_class_id is the resource id of the CustomClass. Case sensitive.'
        kmsKeyVersionName:
          type: string
          description: 'Output only. The [KMS key version name](https://cloud.google.com/kms/docs/resource-hierarchy#key_versions) with which content of the ClassItem is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}`.'
          readOnly: true
        kmsKeyName:
          description: 'Output only. The [KMS key name](https://cloud.google.com/kms/docs/resource-hierarchy#keys) with which the content of the ClassItem is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.'
          type: string
          readOnly: true
      description: 'A set of words or phrases that represents a common concept likely to appear in your audio, for example a list of passenger ship names. CustomClass items can be substituted into placeholders that you set in PhraseSet phrases.'
      id: CustomClass
    CreatePhraseSetRequest:
      description: Message sent by the client for the `CreatePhraseSet` method.
      type: object
      properties:
        phraseSetId:
          type: string
          description: 'Required. The ID to use for the phrase set, which will become the final component of the phrase set''s resource name. This value should restrict to letters, numbers, and hyphens, with the first character a letter, the last a letter or a number, and be 4-63 characters.'
        phraseSet:
          description: Required. The phrase set to create.
          $ref: '#/components/schemas/PhraseSet'
      id: CreatePhraseSetRequest
    ListCustomClassesResponse:
      type: object
      id: ListCustomClassesResponse
      description: Message returned to the client by the `ListCustomClasses` method.
      properties:
        customClasses:
          description: The custom classes.
          items:
            $ref: '#/components/schemas/CustomClass'
          type: array
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
    RecognitionMetadata:
      id: RecognitionMetadata
      description: Description of audio data to be recognized.
      deprecated: true
      properties:
        originalMimeType:
          description: 'Mime type of the original audio file. For example `audio/m4a`, `audio/x-alaw-basic`, `audio/mp3`, `audio/3gpp`. A list of possible audio mime types is maintained at http://www.iana.org/assignments/media-types/media-types.xhtml#audio'
          type: string
        originalMediaType:
          type: string
          description: The original media the speech was recorded on.
          enum:
            - ORIGINAL_MEDIA_TYPE_UNSPECIFIED
            - AUDIO
            - VIDEO
          enumDescriptions:
            - Unknown original media type.
            - The speech data is an audio recording.
            - The speech data originally recorded on a video.
        interactionType:
          type: string
          enum:
            - INTERACTION_TYPE_UNSPECIFIED
            - DISCUSSION
            - PRESENTATION
            - PHONE_CALL
            - VOICEMAIL
            - PROFESSIONALLY_PRODUCED
            - VOICE_SEARCH
            - VOICE_COMMAND
            - DICTATION
          description: The use case most closely describing the audio content to be recognized.
          enumDescriptions:
            - Use case is either unknown or is something other than one of the other values below.
            - 'Multiple people in a conversation or discussion. For example in a meeting with two or more people actively participating. Typically all the primary people speaking would be in the same room (if not, see PHONE_CALL)'
            - 'One or more persons lecturing or presenting to others, mostly uninterrupted.'
            - 'A phone-call or video-conference in which two or more people, who are not in the same room, are actively participating.'
            - A recorded message intended for another person to listen to.
            - 'Professionally produced audio (eg. TV Show, Podcast).'
            - Transcribe spoken questions and queries into text.
            - 'Transcribe voice commands, such as for controlling a device.'
            - 'Transcribe speech to text to create a written document, such as a text-message, email or report.'
        audioTopic:
          description: Description of the content. Eg. "Recordings of federal supreme court hearings from 2012".
          type: string
        recordingDeviceName:
          description: The device used to make the recording. Examples 'Nexus 5X' or 'Polycom SoundStation IP 6000' or 'POTS' or 'VoIP' or 'Cardioid Microphone'.
          type: string
        microphoneDistance:
          type: string
          description: The audio type that most closely describes the audio being recognized.
          enum:
            - MICROPHONE_DISTANCE_UNSPECIFIED
            - NEARFIELD
            - MIDFIELD
            - FARFIELD
          enumDescriptions:
            - Audio type is not known.
            - 'The audio was captured from a closely placed microphone. Eg. phone, dictaphone, or handheld microphone. Generally if there speaker is within 1 meter of the microphone.'
            - The speaker if within 3 meters of the microphone.
            - The speaker is more than 3 meters away from the microphone.
        industryNaicsCodeOfAudio:
          description: 'The industry vertical to which this speech recognition request most closely applies. This is most indicative of the topics contained in the audio. Use the 6-digit NAICS code to identify the industry vertical - see https://www.naics.com/search/.'
          type: integer
          format: uint32
        recordingDeviceType:
          type: string
          enumDescriptions:
            - The recording device is unknown.
            - Speech was recorded on a smartphone.
            - Speech was recorded using a personal computer or tablet.
            - Speech was recorded over a phone line.
            - Speech was recorded in a vehicle.
            - Speech was recorded outdoors.
            - Speech was recorded indoors.
          description: The type of device the speech was recorded with.
          enum:
            - RECORDING_DEVICE_TYPE_UNSPECIFIED
            - SMARTPHONE
            - PC
            - PHONE_LINE
            - VEHICLE
            - OTHER_OUTDOOR_DEVICE
            - OTHER_INDOOR_DEVICE
      type: object
    LongRunningRecognizeRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/RecognitionConfig'
          description: Required. Provides information to the recognizer that specifies how to process the request.
        outputConfig:
          $ref: '#/components/schemas/TranscriptOutputConfig'
          description: Optional. Specifies an optional destination for the recognition results.
        audio:
          description: Required. The audio data to be recognized.
          $ref: '#/components/schemas/RecognitionAudio'
      description: The top-level message sent by the client for the `LongRunningRecognize` method.
      id: LongRunningRecognizeRequest
    Operation:
      type: object
      properties:
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
    ClassItem:
      type: object
      id: ClassItem
      description: An item of the class.
      properties:
        value:
          type: string
          description: The class item's value.
    RecognitionAudio:
      id: RecognitionAudio
      description: 'Contains audio data in the encoding specified in the `RecognitionConfig`. Either `content` or `uri` must be supplied. Supplying both or neither returns google.rpc.Code.INVALID_ARGUMENT. See [content limits](https://cloud.google.com/speech-to-text/quotas#content).'
      properties:
        content:
          type: string
          description: 'The audio data bytes encoded as specified in `RecognitionConfig`. Note: as with all bytes fields, proto buffers use a pure binary representation, whereas JSON representations use base64.'
          format: byte
        uri:
          description: 'URI that points to a file that contains audio data bytes as specified in `RecognitionConfig`. The file must not be compressed (for example, gzip). Currently, only Google Cloud Storage URIs are supported, which must be specified in the following format: `gs://bucket_name/object_name` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/reference-uris).'
          type: string
      type: object
    Empty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
    ListOperationsResponse:
      id: ListOperationsResponse
      type: object
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
    SpeechAdaptation:
      type: object
      properties:
        abnfGrammar:
          description: 'Augmented Backus-Naur form (ABNF) is a standardized grammar notation comprised by a set of derivation rules. See specifications: https://www.w3.org/TR/speech-grammar'
          $ref: '#/components/schemas/ABNFGrammar'
        phraseSetReferences:
          description: A collection of phrase set resource names to use.
          items:
            type: string
          type: array
        customClasses:
          type: array
          description: 'A collection of custom classes. To specify the classes inline, leave the class'' `name` blank and fill in the rest of its fields, giving it a unique `custom_class_id`. Refer to the inline defined class in phrase hints by its `custom_class_id`.'
          items:
            $ref: '#/components/schemas/CustomClass'
        phraseSets:
          items:
            $ref: '#/components/schemas/PhraseSet'
          type: array
          description: 'A collection of phrase sets. To specify the hints inline, leave the phrase set''s `name` blank and fill in the rest of its fields. Any phrase set can use any custom class.'
      id: SpeechAdaptation
      description: Speech adaptation configuration.
    Phrase:
      type: object
      description: 'A phrases containing words and phrase "hints" so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See [usage limits](https://cloud.google.com/speech-to-text/quotas#content). List items can also include pre-built or custom classes containing groups of words that represent common concepts that occur in natural language. For example, rather than providing a phrase hint for every month of the year (e.g. "i was born in january", "i was born in febuary", ...), use the pre-built `$MONTH` class improves the likelihood of correctly transcribing audio that includes months (e.g. "i was born in $month"). To refer to pre-built classes, use the class'' symbol prepended with `$` e.g. `$MONTH`. To refer to custom classes that were defined inline in the request, set the class''s `custom_class_id` to a string unique to all class resources and inline classes. Then use the class'' id wrapped in $`{...}` e.g. "${my-months}". To refer to custom classes resources, use the class'' id wrapped in `${}` (e.g. `${my-months}`). Speech-to-Text supports three locations: `global`, `us` (US North America), and `eu` (Europe). If you are calling the `speech.googleapis.com` endpoint, use the `global` location. To specify a region, use a [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints) with matching `us` or `eu` location value.'
      id: Phrase
      properties:
        value:
          description: The phrase itself.
          type: string
        boost:
          type: number
          format: float
          description: 'Hint Boost. Overrides the boost set at the phrase set level. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 and 20. We recommend using a binary search approach to finding the optimal value for your use case as well as adding phrases both with and without boost to your requests.'
    LongRunningRecognizeResponse:
      properties:
        outputConfig:
          $ref: '#/components/schemas/TranscriptOutputConfig'
          description: Original output config if present in the request.
        requestId:
          description: The ID associated with the request. This is a unique ID specific only to the given request.
          format: int64
          type: string
        outputError:
          description: If the transcript output fails this field contains the relevant error.
          $ref: '#/components/schemas/Status'
        totalBilledTime:
          type: string
          description: 'When available, billed audio seconds for the corresponding request.'
          format: google-duration
        speechAdaptationInfo:
          $ref: '#/components/schemas/SpeechAdaptationInfo'
          description: Provides information on speech adaptation behavior in response
        results:
          items:
            $ref: '#/components/schemas/SpeechRecognitionResult'
          description: Sequential list of transcription results corresponding to sequential portions of audio.
          type: array
      description: 'The only message returned to the client by the `LongRunningRecognize` method. It contains the result as zero or more sequential `SpeechRecognitionResult` messages. It is included in the `result.response` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
      id: LongRunningRecognizeResponse
      type: object
    ListPhraseSetResponse:
      description: Message returned to the client by the `ListPhraseSet` method.
      properties:
        phraseSets:
          type: array
          description: The phrase set.
          items:
            $ref: '#/components/schemas/PhraseSet'
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      id: ListPhraseSetResponse
      type: object
    RecognizeResponse:
      id: RecognizeResponse
      description: The only message returned to the client by the `Recognize` method. It contains the result as zero or more sequential `SpeechRecognitionResult` messages.
      type: object
      properties:
        speechAdaptationInfo:
          description: Provides information on adaptation behavior in response
          $ref: '#/components/schemas/SpeechAdaptationInfo'
        results:
          type: array
          description: Sequential list of transcription results corresponding to sequential portions of audio.
          items:
            $ref: '#/components/schemas/SpeechRecognitionResult'
        requestId:
          type: string
          format: int64
          description: The ID associated with the request. This is a unique ID specific only to the given request.
        totalBilledTime:
          format: google-duration
          description: 'When available, billed audio seconds for the corresponding request.'
          type: string
    SpeechRecognitionAlternative:
      type: object
      description: Alternative hypotheses (a.k.a. n-best list).
      properties:
        confidence:
          type: number
          format: float
          description: 'The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for the top alternative of a non-streaming result or, of a streaming result where `is_final=true`. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating `confidence` was not set.'
        transcript:
          description: 'Transcript text representing the words that the user spoke. In languages that use spaces to separate words, the transcript might have a leading space if it isn''t the first result. You can concatenate each result to obtain the full transcript without using a separator.'
          type: string
        words:
          items:
            $ref: '#/components/schemas/WordInfo'
          type: array
          description: 'A list of word-specific information for each recognized word. Note: When `enable_speaker_diarization` is true, you will see all the words from the beginning of the audio.'
      id: SpeechRecognitionAlternative
    Status:
      id: Status
      properties:
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
          type: integer
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
    LongRunningRecognizeMetadata:
      id: LongRunningRecognizeMetadata
      description: 'Describes the progress of a long-running `LongRunningRecognize` call. It is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.'
      type: object
      properties:
        lastUpdateTime:
          type: string
          description: Time of the most recent processing update.
          format: google-datetime
        progressPercent:
          description: Approximate percentage of audio processed thus far. Guaranteed to be 100 when the audio is fully processed and the results are available.
          type: integer
          format: int32
        uri:
          type: string
          readOnly: true
          description: Output only. The URI of the audio file being transcribed. Empty if the audio was sent as byte content.
        startTime:
          description: Time when the request was received.
          format: google-datetime
          type: string
    TranscriptOutputConfig:
      type: object
      description: Specifies an optional destination for the recognition results.
      properties:
        gcsUri:
          description: 'Specifies a Cloud Storage URI for the recognition results. Must be specified in the format: `gs://bucket_name/object_name`, and the bucket must already exist.'
          type: string
      id: TranscriptOutputConfig
    SpeechContext:
      properties:
        boost:
          format: float
          description: 'Hint Boost. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost values would correspond to anti-biasing. Anti-biasing is not enabled, so negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 and 20. We recommend using a binary search approach to finding the optimal value for your use case.'
          type: number
        phrases:
          items:
            type: string
          description: 'A list of strings containing words and phrases "hints" so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See [usage limits](https://cloud.google.com/speech-to-text/quotas#content). List items can also be set to classes for groups of words that represent common concepts that occur in natural language. For example, rather than providing phrase hints for every month of the year, using the $MONTH class improves the likelihood of correctly transcribing audio that includes months.'
          type: array
      description: Provides "hints" to the speech recognizer to favor specific words and phrases in the results.
      type: object
      id: SpeechContext
    CreateCustomClassRequest:
      properties:
        customClass:
          description: Required. The custom class to create.
          $ref: '#/components/schemas/CustomClass'
        customClassId:
          description: 'Required. The ID to use for the custom class, which will become the final component of the custom class'' resource name. This value should restrict to letters, numbers, and hyphens, with the first character a letter, the last a letter or a number, and be 4-63 characters.'
          type: string
      id: CreateCustomClassRequest
      description: Message sent by the client for the `CreateCustomClass` method.
      type: object
    PhraseSet:
      type: object
      description: Provides "hints" to the speech recognizer to favor specific words and phrases in the results.
      properties:
        boost:
          format: float
          type: number
          description: 'Hint Boost. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost values would correspond to anti-biasing. Anti-biasing is not enabled, so negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 (exclusive) and 20. We recommend using a binary search approach to finding the optimal value for your use case as well as adding phrases both with and without boost to your requests.'
        kmsKeyVersionName:
          description: 'Output only. The [KMS key version name](https://cloud.google.com/kms/docs/resource-hierarchy#key_versions) with which content of the PhraseSet is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}`.'
          type: string
          readOnly: true
        name:
          description: The resource name of the phrase set.
          type: string
        phrases:
          items:
            $ref: '#/components/schemas/Phrase'
          description: A list of word and phrases.
          type: array
        kmsKeyName:
          description: 'Output only. The [KMS key name](https://cloud.google.com/kms/docs/resource-hierarchy#keys) with which the content of the PhraseSet is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.'
          readOnly: true
          type: string
      id: PhraseSet
    SpeechRecognitionResult:
      properties:
        languageCode:
          type: string
          readOnly: true
          description: 'Output only. The [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag of the language in this result. This language code was detected to have the most likelihood of being spoken in the audio.'
        channelTag:
          format: int32
          description: 'For multi-channel audio, this is the channel number corresponding to the recognized result for the audio from that channel. For audio_channel_count = N, its output values can range from ''1'' to ''N''.'
          type: integer
        resultEndTime:
          format: google-duration
          description: Time offset of the end of this result relative to the beginning of the audio.
          type: string
        alternatives:
          type: array
          items:
            $ref: '#/components/schemas/SpeechRecognitionAlternative'
          description: 'May contain one or more recognition hypotheses (up to the maximum specified in `max_alternatives`). These alternatives are ordered in terms of accuracy, with the top (first) alternative being the most probable, as ranked by the recognizer.'
      description: A speech recognition result corresponding to a portion of the audio.
      type: object
      id: SpeechRecognitionResult
    SpeechAdaptationInfo:
      description: Information on speech adaptation use in results
      type: object
      id: SpeechAdaptationInfo
      properties:
        timeoutMessage:
          type: string
          description: 'If set, returns a message specifying which part of the speech adaptation request timed out.'
        adaptationTimeout:
          description: 'Whether there was a timeout when applying speech adaptation. If true, adaptation had no effect in the response transcript.'
          type: boolean
    WordInfo:
      description: Word-specific information for recognized words.
      properties:
        speakerLabel:
          readOnly: true
          type: string
          description: 'Output only. A label value assigned for every unique speaker within the audio. This field specifies which speaker was detected to have spoken this word. For some models, like medical_conversation this can be actual speaker role, for example "patient" or "provider", but generally this would be a number identifying a speaker. This field is only set if enable_speaker_diarization = ''true'' and only for the top alternative.'
        confidence:
          format: float
          description: 'The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for the top alternative of a non-streaming result or, of a streaming result where `is_final=true`. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating `confidence` was not set.'
          type: number
        startTime:
          format: google-duration
          type: string
          description: 'Time offset relative to the beginning of the audio, and corresponding to the start of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top hypothesis. This is an experimental feature and the accuracy of the time offset can vary.'
        speakerTag:
          readOnly: true
          format: int32
          deprecated: true
          type: integer
          description: 'Output only. A distinct integer value is assigned for every speaker within the audio. This field specifies which one of those speakers was detected to have spoken this word. Value ranges from ''1'' to diarization_speaker_count. speaker_tag is set if enable_speaker_diarization = ''true'' and only for the top alternative. Note: Use speaker_label instead.'
        endTime:
          type: string
          format: google-duration
          description: 'Time offset relative to the beginning of the audio, and corresponding to the end of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top hypothesis. This is an experimental feature and the accuracy of the time offset can vary.'
        word:
          description: The word corresponding to this set of information.
          type: string
      type: object
      id: WordInfo
  parameters:
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  x-stackQL-resources:
    phrase_sets:
      id: google.speech.phrase_sets
      name: phrase_sets
      title: Phrase Sets
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseSets~1{phraseSetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseSets~1{phraseSetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseSets~1{phraseSetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseSets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseSets
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/phrase_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_sets/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_sets/methods/delete'
    custom_classes:
      id: google.speech.custom_classes
      name: custom_classes
      title: Custom Classes
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customClasses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customClasses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.customClasses
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customClasses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customClasses~1{customClassesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customClasses~1{customClassesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1customClasses~1{customClassesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_classes/methods/get'
          - $ref: '#/components/x-stackQL-resources/custom_classes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/custom_classes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/custom_classes/methods/delete'
    operations:
      id: google.speech.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    speech:
      id: google.speech.speech
      name: speech
      title: Speech
      methods:
        recognize:
          operation:
            $ref: '#/paths/~1v1~1speech:recognize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        longrunningrecognize:
          operation:
            $ref: '#/paths/~1v1~1speech:longrunningrecognize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseSets/{phraseSetsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
    get:
      description: Get a phrase set.
      operationId: speech.projects.locations.phraseSets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhraseSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_sets
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Update a phrase set.
      operationId: speech.projects.locations.phraseSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhraseSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhraseSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseSetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: phrase_sets
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Delete a phrase set.
      operationId: speech.projects.locations.phraseSets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_sets
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseSets':
    parameters: *ref_1
    post:
      description: Create a set of phrase hints. Each item in the set can be a single word or a multi-word phrase. The items in the PhraseSet are favored by the recognition model when you send a call that includes the PhraseSet.
      operationId: speech.projects.locations.phraseSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePhraseSetRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhraseSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_sets
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: List phrase sets.
      operationId: speech.projects.locations.phraseSets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPhraseSetResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: phrase_sets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.phraseSets
  '/v1/projects/{projectsId}/locations/{locationsId}/customClasses':
    parameters: *ref_1
    post:
      description: Create a custom class.
      operationId: speech.projects.locations.customClasses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomClassRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomClass'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_classes
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: List custom classes.
      operationId: speech.projects.locations.customClasses.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomClassesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: custom_classes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.customClasses
  '/v1/projects/{projectsId}/locations/{locationsId}/customClasses/{customClassesId}':
    parameters: *ref_1
    delete:
      description: Delete a custom class.
      operationId: speech.projects.locations.customClasses.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customClassesId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_classes
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Update a custom class.
      operationId: speech.projects.locations.customClasses.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomClass'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomClass'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customClassesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: custom_classes
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Get a custom class.
      operationId: speech.projects.locations.customClasses.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomClass'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customClassesId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_classes
      x-stackQL-method: get
      x-stackQL-verb: select
  /v1/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: speech.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: speech.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/speech:recognize':
    parameters: *ref_1
    post:
      description: 'Performs synchronous speech recognition: receive results after all audio has been sent and processed.'
      operationId: speech.speech.recognize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecognizeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecognizeResponse'
      parameters: []
      x-stackQL-resource: speech
      x-stackQL-method: recognize
      x-stackQL-verb: exec
  '/v1/speech:longrunningrecognize':
    parameters: *ref_1
    post:
      description: 'Performs asynchronous speech recognition: receive results via the google.longrunning.Operations interface. Returns either an `Operation.error` or an `Operation.response` which contains a `LongRunningRecognizeResponse` message. For more information on asynchronous speech recognition, see the [how-to](https://cloud.google.com/speech-to-text/docs/async-recognize).'
      operationId: speech.speech.longrunningrecognize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongRunningRecognizeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: speech
      x-stackQL-method: longrunningrecognize
      x-stackQL-verb: exec
