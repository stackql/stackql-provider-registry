openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud DNS API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230801'
  x-generated-date: '2023-08-10'
externalDocs:
  url: 'https://cloud.google.com/dns/docs'
servers:
  - url: 'https://dns.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/ndev.clouddns.readwrite': View and manage your DNS records hosted by Google Cloud DNS
            'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud services and see the email address of your Google Account
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/ndev.clouddns.readonly': View your DNS records hosted by Google Cloud DNS
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    DnsKey:
      id: DnsKey
      type: object
      properties:
        isActive:
          type: boolean
          description: Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures.
        keyLength:
          description: 'Length of the key in bits. Specified at creation time, and then immutable.'
          format: uint32
          type: integer
        id:
          type: string
          description: Unique identifier for the resource; defined by the server (output only).
        publicKey:
          description: Base64 encoded public half of this key. Output only.
          type: string
        type:
          enumDescriptions:
            - ''
            - ''
          enum:
            - keySigning
            - zoneSigning
          description: 'One of "KEY_SIGNING" or "ZONE_SIGNING". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.'
          type: string
        keyTag:
          format: int32
          description: 'The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone''s DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only.'
          type: integer
        kind:
          default: dns#dnsKey
          type: string
        creationTime:
          description: The time that this resource was created in the control plane. This is in RFC3339 text format. Output only.
          type: string
        algorithm:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - rsasha1
            - rsasha256
            - rsasha512
            - ecdsap256sha256
            - ecdsap384sha384
          description: String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.
        digests:
          items:
            $ref: '#/components/schemas/DnsKeyDigest'
          type: array
          description: Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only.
        description:
          type: string
          description: A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function.
      description: A DNSSEC key pair.
    OperationDnsKeyContext:
      id: OperationDnsKeyContext
      properties:
        newValue:
          description: The post-operation DnsKey resource.
          $ref: '#/components/schemas/DnsKey'
        oldValue:
          $ref: '#/components/schemas/DnsKey'
          description: The pre-operation DnsKey resource.
      type: object
    ResponsePolicyRuleLocalData:
      id: ResponsePolicyRuleLocalData
      properties:
        localDatas:
          description: 'All resource record sets for this selector, one per resource record type. The name must match the dns_name.'
          items:
            $ref: '#/components/schemas/ResourceRecordSet'
          type: array
      type: object
    ResponsePoliciesUpdateResponse:
      id: ResponsePoliciesUpdateResponse
      type: object
      properties:
        header:
          $ref: '#/components/schemas/ResponseHeader'
        responsePolicy:
          $ref: '#/components/schemas/ResponsePolicy'
    Change:
      description: A Change represents a set of ResourceRecordSet additions and deletions applied atomically to a ManagedZone. ResourceRecordSets within a ManagedZone are modified by creating a new Change element in the Changes collection. In turn the Changes collection also records the past modifications to the ResourceRecordSets in a ManagedZone. The current state of the ManagedZone is the sum effect of applying all Change elements in the Changes collection in sequence.
      properties:
        startTime:
          type: string
          description: The time that this operation was started by the server (output only). This is in RFC3339 text format.
        additions:
          items:
            $ref: '#/components/schemas/ResourceRecordSet'
          description: Which ResourceRecordSets to add?
          type: array
        status:
          enum:
            - pending
            - done
          enumDescriptions:
            - ''
            - ''
          type: string
          description: 'Status of the operation (output only). A status of "done" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.'
        kind:
          default: dns#change
          type: string
        deletions:
          items:
            $ref: '#/components/schemas/ResourceRecordSet'
          type: array
          description: Which ResourceRecordSets to remove? Must match existing data exactly.
        isServing:
          description: If the DNS queries for the zone will be served.
          type: boolean
        id:
          description: Unique identifier for the resource; defined by the server (output only).
          type: string
      type: object
      id: Change
    ManagedZone:
      properties:
        dnssecConfig:
          $ref: '#/components/schemas/ManagedZoneDnsSecConfig'
          description: DNSSEC configuration.
        nameServerSet:
          description: 'Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team.'
          type: string
        privateVisibilityConfig:
          description: 'For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.'
          $ref: '#/components/schemas/ManagedZonePrivateVisibilityConfig'
        kind:
          default: dns#managedZone
          type: string
        dnsName:
          description: 'The DNS name of this managed zone, for instance "example.com.".'
          type: string
        creationTime:
          type: string
          description: The time that this resource was created on the server. This is in RFC3339 text format. Output only.
        cloudLoggingConfig:
          $ref: '#/components/schemas/ManagedZoneCloudLoggingConfig'
        nameServers:
          items:
            type: string
          description: Delegate your managed_zone to these virtual name servers; defined by the server (output only)
          type: array
        id:
          type: string
          description: Unique identifier for the resource; defined by the server (output only)
          format: uint64
        peeringConfig:
          description: The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with.
          $ref: '#/components/schemas/ManagedZonePeeringConfig'
        serviceDirectoryConfig:
          $ref: '#/components/schemas/ManagedZoneServiceDirectoryConfig'
          description: This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones.
        forwardingConfig:
          $ref: '#/components/schemas/ManagedZoneForwardingConfig'
          description: The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to.
        reverseLookupConfig:
          $ref: '#/components/schemas/ManagedZoneReverseLookupConfig'
          description: The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config.
        visibility:
          description: 'The zone''s visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.'
          type: string
          enumDescriptions:
            - ''
            - ''
          enum:
            - public
            - private
        description:
          description: A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.
          type: string
        labels:
          description: User labels.
          additionalProperties:
            type: string
          type: object
        name:
          description: 'User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.'
          type: string
      id: ManagedZone
      type: object
      description: A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service.
    ManagedZonePrivateVisibilityConfigNetwork:
      type: object
      id: ManagedZonePrivateVisibilityConfigNetwork
      properties:
        kind:
          default: dns#managedZonePrivateVisibilityConfigNetwork
          type: string
        networkUrl:
          description: 'The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}'
          type: string
    RRSetRoutingPolicy:
      properties:
        wrr:
          $ref: '#/components/schemas/RRSetRoutingPolicyWrrPolicy'
        primaryBackup:
          $ref: '#/components/schemas/RRSetRoutingPolicyPrimaryBackupPolicy'
        kind:
          default: dns#rRSetRoutingPolicy
          type: string
        geo:
          $ref: '#/components/schemas/RRSetRoutingPolicyGeoPolicy'
      id: RRSetRoutingPolicy
      type: object
      description: A RRSetRoutingPolicy represents ResourceRecordSet data that is returned dynamically with the response varying based on configured properties such as geolocation or by weighted random selection.
    ResponsePolicyGKECluster:
      properties:
        kind:
          default: dns#responsePolicyGKECluster
          type: string
        gkeClusterName:
          type: string
          description: 'The resource name of the cluster to bind this response policy to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get'
      id: ResponsePolicyGKECluster
      type: object
    Expr:
      id: Expr
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
      properties:
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
        description:
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
          type: string
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
    ResponsePolicyRulesUpdateResponse:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/ResponseHeader'
        responsePolicyRule:
          $ref: '#/components/schemas/ResponsePolicyRule'
      id: ResponsePolicyRulesUpdateResponse
    Operation:
      description: 'An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id.'
      id: Operation
      type: object
      properties:
        user:
          description: 'User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)'
          type: string
        id:
          description: 'Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)'
          type: string
        status:
          enum:
            - pending
            - done
          enumDescriptions:
            - ''
            - ''
          description: 'Status of the operation. Can be one of the following: "PENDING" or "DONE" (output only). A status of "DONE" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.'
          type: string
        kind:
          type: string
          default: dns#operation
        type:
          type: string
          description: 'Type of the operation. Operations include insert, update, and delete (output only).'
        startTime:
          description: The time that this operation was started by the server. This is in RFC3339 text format (output only).
          type: string
        dnsKeyContext:
          $ref: '#/components/schemas/OperationDnsKeyContext'
          description: Only populated if the operation targeted a DnsKey (output only).
        zoneContext:
          $ref: '#/components/schemas/OperationManagedZoneContext'
          description: Only populated if the operation targeted a ManagedZone (output only).
    GoogleIamV1AuditConfig:
      type: object
      id: GoogleIamV1AuditConfig
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
          type: array
          description: The configuration for logging of each type of permission.
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
    GoogleIamV1GetPolicyOptions:
      id: GoogleIamV1GetPolicyOptions
      properties:
        requestedPolicyVersion:
          description: 'Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
          type: integer
      type: object
      description: Encapsulates settings provided to GetIamPolicy.
    PoliciesUpdateResponse:
      properties:
        header:
          $ref: '#/components/schemas/ResponseHeader'
        policy:
          $ref: '#/components/schemas/Policy'
      type: object
      id: PoliciesUpdateResponse
    ChangesListResponse:
      id: ChangesListResponse
      type: object
      description: The response to a request to enumerate Changes to a ResourceRecordSets collection.
      properties:
        nextPageToken:
          description: 'The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a "snapshot" of collections larger than the maximum page size.'
          type: string
        kind:
          type: string
          description: Type of resource.
          default: dns#changesListResponse
        changes:
          description: The requested changes.
          items:
            $ref: '#/components/schemas/Change'
          type: array
        header:
          $ref: '#/components/schemas/ResponseHeader'
    ResponsePolicyRulesListResponse:
      id: ResponsePolicyRulesListResponse
      type: object
      properties:
        responsePolicyRules:
          description: The Response Policy Rule resources.
          items:
            $ref: '#/components/schemas/ResponsePolicyRule'
          type: array
        header:
          $ref: '#/components/schemas/ResponseHeader'
        nextPageToken:
          type: string
          description: 'The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.'
    GoogleIamV1GetIamPolicyRequest:
      properties:
        options:
          description: 'OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.'
          $ref: '#/components/schemas/GoogleIamV1GetPolicyOptions'
      description: Request message for `GetIamPolicy` method.
      type: object
      id: GoogleIamV1GetIamPolicyRequest
    RRSetRoutingPolicyHealthCheckTargets:
      type: object
      description: HealthCheckTargets describes endpoints to health-check when responding to Routing Policy queries. Only the healthy endpoints will be included in the response.
      properties:
        internalLoadBalancers:
          type: array
          items:
            $ref: '#/components/schemas/RRSetRoutingPolicyLoadBalancerTarget'
      id: RRSetRoutingPolicyHealthCheckTargets
    ResponseHeader:
      properties:
        operationId:
          description: 'For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only).'
          type: string
      type: object
      id: ResponseHeader
      description: Elements common to every response.
    GoogleIamV1SetIamPolicyRequest:
      type: object
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: '#/components/schemas/GoogleIamV1Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
          format: google-fieldmask
      id: GoogleIamV1SetIamPolicyRequest
    GoogleIamV1TestIamPermissionsResponse:
      id: GoogleIamV1TestIamPermissionsResponse
      properties:
        permissions:
          type: array
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
      type: object
      description: Response message for `TestIamPermissions` method.
    DnsKeysListResponse:
      properties:
        header:
          $ref: '#/components/schemas/ResponseHeader'
        dnsKeys:
          type: array
          description: The requested resources.
          items:
            $ref: '#/components/schemas/DnsKey'
        kind:
          description: Type of resource.
          default: dns#dnsKeysListResponse
          type: string
        nextPageToken:
          type: string
          description: 'The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a "snapshot" of collections larger than the maximum page size.'
      id: DnsKeysListResponse
      description: The response to a request to enumerate DnsKeys in a ManagedZone.
      type: object
    GoogleIamV1AuditLogConfig:
      properties:
        exemptedMembers:
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          type: array
        logType:
          description: The log type that this config enables.
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
      id: GoogleIamV1AuditLogConfig
      type: object
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
    ResourceRecordSetsDeleteResponse:
      properties: {}
      type: object
      id: ResourceRecordSetsDeleteResponse
    ResourceRecordSet:
      properties:
        kind:
          type: string
          default: dns#resourceRecordSet
        ttl:
          format: int32
          description: Number of seconds that this ResourceRecordSet can be cached by resolvers.
          type: integer
        name:
          description: 'For example, www.example.com.'
          type: string
        type:
          description: The identifier of a supported record type. See the list of Supported DNS record types.
          type: string
        signatureRrdatas:
          description: As defined in RFC 4034 (section 3.2).
          items:
            type: string
          type: array
        routingPolicy:
          $ref: '#/components/schemas/RRSetRoutingPolicy'
          description: Configures dynamic query responses based on geo location of querying user or a weighted round robin based routing policy. A ResourceRecordSet should only have either rrdata (static) or routing_policy (dynamic). An error is returned otherwise.
        rrdatas:
          description: As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.
          type: array
          items:
            type: string
      type: object
      id: ResourceRecordSet
      description: A unit of data that is returned by the DNS servers.
    ResponsePolicyNetwork:
      type: object
      id: ResponsePolicyNetwork
      properties:
        networkUrl:
          description: 'The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}'
          type: string
        kind:
          default: dns#responsePolicyNetwork
          type: string
    ResponsePoliciesListResponse:
      properties:
        responsePolicies:
          description: The Response Policy resources.
          items:
            $ref: '#/components/schemas/ResponsePolicy'
          type: array
        nextPageToken:
          description: 'The presence of this field indicates that more results exist following your last page of results in pagination order. To fetch them, make another list request by using this value as your page token. This lets you view the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.'
          type: string
        header:
          $ref: '#/components/schemas/ResponseHeader'
      type: object
      id: ResponsePoliciesListResponse
    DnsKeySpec:
      type: object
      id: DnsKeySpec
      description: Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey.
      properties:
        keyType:
          description: 'Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.'
          enumDescriptions:
            - ''
            - ''
          type: string
          enum:
            - keySigning
            - zoneSigning
        kind:
          default: dns#dnsKeySpec
          type: string
        keyLength:
          description: Length of the keys in bits.
          type: integer
          format: uint32
        algorithm:
          description: String mnemonic specifying the DNSSEC algorithm of this key.
          enum:
            - rsasha1
            - rsasha256
            - rsasha512
            - ecdsap256sha256
            - ecdsap384sha384
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
    ManagedZoneForwardingConfigNameServerTarget:
      type: object
      id: ManagedZoneForwardingConfigNameServerTarget
      properties:
        forwardingPath:
          description: 'Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.'
          enum:
            - default
            - private
          enumDescriptions:
            - 'Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet'
            - Cloud DNS always forwards to this target through the VPC.
          type: string
        ipv6Address:
          type: string
          description: IPv6 address of a target name server. Does not accept both fields (ipv4 & ipv6) being populated. Public preview as of November 2022.
        ipv4Address:
          description: IPv4 address of a target name server.
          type: string
        kind:
          default: dns#managedZoneForwardingConfigNameServerTarget
          type: string
    GoogleIamV1Binding:
      description: 'Associates `members`, or principals, with a `role`.'
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        members:
          items:
            type: string
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
        role:
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
          type: string
      id: GoogleIamV1Binding
      type: object
    ResponsePolicyRule:
      type: object
      description: 'A Response Policy Rule is a selector that applies its behavior to queries that match the selector. Selectors are DNS names, which may be wildcards or exact matches. Each DNS query subject to a Response Policy matches at most one ResponsePolicyRule, as identified by the dns_name field with the longest matching suffix.'
      id: ResponsePolicyRule
      properties:
        ruleName:
          type: string
          description: An identifier for this rule. Must be unique with the ResponsePolicy.
        kind:
          type: string
          default: dns#responsePolicyRule
        dnsName:
          type: string
          description: The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
        localData:
          description: 'Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name; in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.'
          $ref: '#/components/schemas/ResponsePolicyRuleLocalData'
        behavior:
          enumDescriptions:
            - ''
            - 'Skip a less-specific ResponsePolicyRule and continue normal query logic. This can be used with a less-specific wildcard selector to exempt a subset of the wildcard ResponsePolicyRule from the ResponsePolicy behavior and query the public Internet instead. For instance, if these rules exist: *.example.com -> LocalData 1.2.3.4 foo.example.com -> Behavior ''bypassResponsePolicy'' Then a query for ''foo.example.com'' skips the wildcard. This additionally functions to facilitate the allowlist feature. RPZs can be applied to multiple levels in the (eventually org, folder, project, network) hierarchy. If a rule is applied at a higher level of the hierarchy, adding a passthru rule at a lower level will supersede that, and a query from an affected vm to that domain will be exempt from the RPZ and proceed to normal resolution behavior.'
          description: Answer this query with a behavior rather than DNS data.
          enum:
            - behaviorUnspecified
            - bypassResponsePolicy
          type: string
    ManagedZonesListResponse:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/ResponseHeader'
        kind:
          type: string
          default: dns#managedZonesListResponse
          description: Type of resource.
        managedZones:
          items:
            $ref: '#/components/schemas/ManagedZone'
          description: The managed zone resources.
          type: array
        nextPageToken:
          type: string
          description: 'The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.'
      id: ManagedZonesListResponse
    PolicyAlternativeNameServerConfig:
      properties:
        kind:
          type: string
          default: dns#policyAlternativeNameServerConfig
        targetNameServers:
          type: array
          items:
            $ref: '#/components/schemas/PolicyAlternativeNameServerConfigTargetNameServer'
          description: 'Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.'
      id: PolicyAlternativeNameServerConfig
      type: object
    ManagedZoneServiceDirectoryConfig:
      id: ManagedZoneServiceDirectoryConfig
      type: object
      description: Contains information about Service Directory-backed zones.
      properties:
        namespace:
          description: Contains information about the namespace associated with the zone.
          $ref: '#/components/schemas/ManagedZoneServiceDirectoryConfigNamespace'
        kind:
          default: dns#managedZoneServiceDirectoryConfig
          type: string
    RRSetRoutingPolicyPrimaryBackupPolicy:
      properties:
        kind:
          default: dns#rRSetRoutingPolicyPrimaryBackupPolicy
          type: string
        backupGeoTargets:
          description: 'Backup targets provide a regional failover policy for the otherwise global primary targets. If serving state is set to BACKUP, this policy essentially becomes a geo routing policy.'
          $ref: '#/components/schemas/RRSetRoutingPolicyGeoPolicy'
        primaryTargets:
          $ref: '#/components/schemas/RRSetRoutingPolicyHealthCheckTargets'
        trickleTraffic:
          description: 'When serving state is PRIMARY, this field provides the option of sending a small percentage of the traffic to the backup targets.'
          format: double
          type: number
      id: RRSetRoutingPolicyPrimaryBackupPolicy
      description: 'Configures a RRSetRoutingPolicy such that all queries are responded with the primary_targets if they are healthy. And if all of them are unhealthy, then we fallback to a geo localized policy.'
      type: object
    PoliciesListResponse:
      type: object
      id: PoliciesListResponse
      properties:
        nextPageToken:
          description: 'The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.'
          type: string
        policies:
          type: array
          description: The policy resources.
          items:
            $ref: '#/components/schemas/Policy'
        header:
          $ref: '#/components/schemas/ResponseHeader'
        kind:
          default: dns#policiesListResponse
          type: string
          description: Type of resource.
    RRSetRoutingPolicyGeoPolicyGeoPolicyItem:
      type: object
      properties:
        healthCheckedTargets:
          description: For A and AAAA types only. Endpoints to return in the query result only if they are healthy. These can be specified along with rrdata within this item.
          $ref: '#/components/schemas/RRSetRoutingPolicyHealthCheckTargets'
        kind:
          default: dns#rRSetRoutingPolicyGeoPolicyGeoPolicyItem
          type: string
        signatureRrdatas:
          description: 'DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there''s a restriction of 1 ip per item. .'
          type: array
          items:
            type: string
        rrdatas:
          type: array
          items:
            type: string
        location:
          type: string
          description: 'The geo-location granularity is a GCP region. This location string should correspond to a GCP region. e.g. "us-east1", "southamerica-east1", "asia-east1", etc.'
      id: RRSetRoutingPolicyGeoPolicyGeoPolicyItem
      description: ResourceRecordSet data for one geo location.
    RRSetRoutingPolicyGeoPolicy:
      description: Configures a RRSetRoutingPolicy that routes based on the geo location of the querying user.
      properties:
        kind:
          default: dns#rRSetRoutingPolicyGeoPolicy
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/RRSetRoutingPolicyGeoPolicyGeoPolicyItem'
          description: 'The primary geo routing configuration. If there are multiple items with the same location, an error is returned instead.'
        enableFencing:
          description: 'Without fencing, if health check fails for all configured items in the current geo bucket, we''ll failover to the next nearest geo bucket. With fencing, if health check is enabled, as long as some targets in the current geo bucket are healthy, we''ll return only the healthy targets. However, if they''re all unhealthy, we won''t failover to the next nearest bucket, we''ll simply return all the items in the current bucket even though they''re unhealthy.'
          type: boolean
      type: object
      id: RRSetRoutingPolicyGeoPolicy
    ManagedZoneOperationsListResponse:
      id: ManagedZoneOperationsListResponse
      properties:
        kind:
          type: string
          description: Type of resource.
          default: dns#managedZoneOperationsListResponse
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: The operation resources.
        nextPageToken:
          type: string
          description: 'The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.'
        header:
          $ref: '#/components/schemas/ResponseHeader'
      type: object
    ManagedZonePrivateVisibilityConfigGKECluster:
      id: ManagedZonePrivateVisibilityConfigGKECluster
      properties:
        gkeClusterName:
          type: string
          description: 'The resource name of the cluster to bind this ManagedZone to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get'
        kind:
          default: dns#managedZonePrivateVisibilityConfigGKECluster
          type: string
      type: object
    ManagedZoneServiceDirectoryConfigNamespace:
      type: object
      id: ManagedZoneServiceDirectoryConfigNamespace
      properties:
        deletionTime:
          type: string
          description: The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only.
        namespaceUrl:
          description: 'The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}'
          type: string
        kind:
          type: string
          default: dns#managedZoneServiceDirectoryConfigNamespace
    ResourceRecordSetsListResponse:
      properties:
        header:
          $ref: '#/components/schemas/ResponseHeader'
        rrsets:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRecordSet'
          description: The resource record set resources.
        nextPageToken:
          description: 'The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve complete contents of even larger collections, one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.'
          type: string
        kind:
          default: dns#resourceRecordSetsListResponse
          description: Type of resource.
          type: string
      id: ResourceRecordSetsListResponse
      type: object
    OperationManagedZoneContext:
      type: object
      id: OperationManagedZoneContext
      properties:
        newValue:
          $ref: '#/components/schemas/ManagedZone'
          description: The post-operation ManagedZone resource.
        oldValue:
          $ref: '#/components/schemas/ManagedZone'
          description: The pre-operation ManagedZone resource.
    PolicyAlternativeNameServerConfigTargetNameServer:
      type: object
      id: PolicyAlternativeNameServerConfigTargetNameServer
      properties:
        kind:
          type: string
          default: dns#policyAlternativeNameServerConfigTargetNameServer
        ipv4Address:
          type: string
          description: IPv4 address to forward queries to.
        forwardingPath:
          type: string
          description: 'Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.'
          enumDescriptions:
            - 'Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet'
            - Cloud DNS always forwards to this target through the VPC.
          enum:
            - default
            - private
        ipv6Address:
          description: IPv6 address to forward to. Does not accept both fields (ipv4 & ipv6) being populated. Public preview as of November 2022.
          type: string
    Quota:
      properties:
        kind:
          default: dns#quota
          type: string
        responsePolicies:
          description: Maximum allowed number of response policies per project.
          format: int32
          type: integer
        totalRrdataSizePerChange:
          format: int32
          type: integer
          description: Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.
        peeringZonesPerTargetNetwork:
          description: Maximum allowed number of consumer peering zones per target network owned by this producer project
          type: integer
          format: int32
        targetNameServersPerPolicy:
          format: int32
          type: integer
          description: Maximum allowed number of alternative target name servers per policy.
        networksPerPolicy:
          format: int32
          type: integer
          description: Maximum allowed number of networks per policy.
        gkeClustersPerResponsePolicy:
          description: Maximum allowed number of GKE clusters per response policy.
          format: int32
          type: integer
        targetNameServersPerManagedZone:
          description: Maximum allowed number of target name servers per managed forwarding zone.
          format: int32
          type: integer
        policies:
          format: int32
          type: integer
          description: Maximum allowed number of policies per project.
        managedZonesPerNetwork:
          format: int32
          type: integer
          description: Maximum allowed number of managed zones which can be attached to a network.
        whitelistedKeySpecs:
          items:
            $ref: '#/components/schemas/DnsKeySpec'
          description: DNSSEC algorithm and key length types that can be used for DnsKeys.
          type: array
        rrsetsPerManagedZone:
          description: Maximum allowed number of ResourceRecordSets per zone in the project.
          type: integer
          format: int32
        dnsKeysPerManagedZone:
          format: int32
          type: integer
          description: Maximum allowed number of DnsKeys per ManagedZone.
        networksPerResponsePolicy:
          description: Maximum allowed number of networks per response policy.
          type: integer
          format: int32
        gkeClustersPerManagedZone:
          format: int32
          type: integer
          description: Maximum allowed number of GKE clusters to which a privately scoped zone can be attached.
        managedZones:
          type: integer
          description: Maximum allowed number of managed zones in the project.
          format: int32
        networksPerManagedZone:
          format: int32
          type: integer
          description: Maximum allowed number of networks to which a privately scoped zone can be attached.
        rrsetDeletionsPerChange:
          type: integer
          description: Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest.
          format: int32
        rrsetAdditionsPerChange:
          type: integer
          format: int32
          description: Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest.
        resourceRecordsPerRrset:
          format: int32
          description: Maximum allowed number of ResourceRecords per ResourceRecordSet.
          type: integer
        itemsPerRoutingPolicy:
          description: Maximum allowed number of items per routing policy.
          format: int32
          type: integer
        gkeClustersPerPolicy:
          format: int32
          description: Maximum allowed number of GKE clusters per policy.
          type: integer
        responsePolicyRulesPerResponsePolicy:
          format: int32
          type: integer
          description: Maximum allowed number of rules per response policy.
        managedZonesPerGkeCluster:
          format: int32
          type: integer
          description: Maximum allowed number of managed zones which can be attached to a GKE cluster.
      description: Limits associated with a Project.
      id: Quota
      type: object
    RRSetRoutingPolicyLoadBalancerTarget:
      properties:
        port:
          type: string
          description: The configured port of the Load Balancer.
        ipProtocol:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - undefined
            - tcp
            - udp
        networkUrl:
          type: string
          description: 'The fully qualified url of the network on which the ILB is present. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}'
        kind:
          type: string
          default: dns#rRSetRoutingPolicyLoadBalancerTarget
        project:
          type: string
          description: The project ID in which the ILB exists.
        loadBalancerType:
          enumDescriptions:
            - ''
            - Cross-region internal Application Load Balancer
            - Regional internal passthrough Network Load Balancer
            - Regional internal Application Load Balancer
          description: The type of Load Balancer specified by this target. Must match the configuration of the Load Balancer located at the LoadBalancerTarget's IP address/port and region.
          type: string
          enum:
            - none
            - globalL7ilb
            - regionalL4ilb
            - regionalL7ilb
        ipAddress:
          description: The frontend IP address of the Load Balancer to health check.
          type: string
        region:
          description: The region in which the ILB exists.
          type: string
      type: object
      id: RRSetRoutingPolicyLoadBalancerTarget
    GoogleIamV1TestIamPermissionsRequest:
      type: object
      id: GoogleIamV1TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          type: array
          items:
            type: string
    Policy:
      type: object
      id: Policy
      description: A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources.
      properties:
        name:
          description: User-assigned name for this policy.
          type: string
        alternativeNameServerConfig:
          description: 'Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.'
          $ref: '#/components/schemas/PolicyAlternativeNameServerConfig'
        networks:
          type: array
          items:
            $ref: '#/components/schemas/PolicyNetwork'
          description: List of network names specifying networks to which this policy is applied.
        enableLogging:
          type: boolean
          description: Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set.
        kind:
          type: string
          default: dns#policy
        id:
          description: Unique identifier for the resource; defined by the server (output only).
          format: uint64
          type: string
        description:
          type: string
          description: A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function.
        enableInboundForwarding:
          type: boolean
          description: 'Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy.'
    ManagedZonePrivateVisibilityConfig:
      id: ManagedZonePrivateVisibilityConfig
      properties:
        kind:
          default: dns#managedZonePrivateVisibilityConfig
          type: string
        gkeClusters:
          items:
            $ref: '#/components/schemas/ManagedZonePrivateVisibilityConfigGKECluster'
          description: The list of Google Kubernetes Engine clusters that can see this zone.
          type: array
        networks:
          description: The list of VPC networks that can see this zone.
          type: array
          items:
            $ref: '#/components/schemas/ManagedZonePrivateVisibilityConfigNetwork'
      type: object
    PolicyNetwork:
      properties:
        kind:
          type: string
          default: dns#policyNetwork
        networkUrl:
          type: string
          description: 'The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}'
      id: PolicyNetwork
      type: object
    ResponsePolicyRulesPatchResponse:
      type: object
      properties:
        responsePolicyRule:
          $ref: '#/components/schemas/ResponsePolicyRule'
        header:
          $ref: '#/components/schemas/ResponseHeader'
      id: ResponsePolicyRulesPatchResponse
    ManagedZonePeeringConfig:
      type: object
      properties:
        kind:
          type: string
          default: dns#managedZonePeeringConfig
        targetNetwork:
          $ref: '#/components/schemas/ManagedZonePeeringConfigTargetNetwork'
          description: The network with which to peer.
      id: ManagedZonePeeringConfig
    PoliciesPatchResponse:
      id: PoliciesPatchResponse
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
        header:
          $ref: '#/components/schemas/ResponseHeader'
    ResponsePolicy:
      type: object
      description: A Response Policy is a collection of selectors that apply to queries made against one or more Virtual Private Cloud networks.
      properties:
        responsePolicyName:
          type: string
          description: User assigned name for this Response Policy.
        description:
          type: string
          description: User-provided description for this Response Policy.
        kind:
          type: string
          default: dns#responsePolicy
        gkeClusters:
          items:
            $ref: '#/components/schemas/ResponsePolicyGKECluster'
          description: The list of Google Kubernetes Engine clusters to which this response policy is applied.
          type: array
        id:
          type: string
          description: Unique identifier for the resource; defined by the server (output only).
          format: int64
        labels:
          type: object
          description: User labels.
          additionalProperties:
            type: string
        networks:
          description: List of network names specifying networks to which this policy is applied.
          items:
            $ref: '#/components/schemas/ResponsePolicyNetwork'
          type: array
      id: ResponsePolicy
    Project:
      description: 'A project resource. The project is a top level container for resources including Cloud DNS ManagedZones. Projects can be created only in the APIs console. Next tag: 7.'
      properties:
        number:
          format: uint64
          description: Unique numeric identifier for the resource; defined by the server (output only).
          type: string
        quota:
          description: Quotas assigned to this project (output only).
          $ref: '#/components/schemas/Quota'
        id:
          type: string
          description: User assigned unique identifier for the resource (output only).
        kind:
          default: dns#project
          type: string
      id: Project
      type: object
    ManagedZoneForwardingConfig:
      id: ManagedZoneForwardingConfig
      type: object
      properties:
        targetNameServers:
          items:
            $ref: '#/components/schemas/ManagedZoneForwardingConfigNameServerTarget'
          description: List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given.
          type: array
        kind:
          default: dns#managedZoneForwardingConfig
          type: string
    ResponsePoliciesPatchResponse:
      properties:
        responsePolicy:
          $ref: '#/components/schemas/ResponsePolicy'
        header:
          $ref: '#/components/schemas/ResponseHeader'
      id: ResponsePoliciesPatchResponse
      type: object
    ManagedZoneReverseLookupConfig:
      id: ManagedZoneReverseLookupConfig
      properties:
        kind:
          default: dns#managedZoneReverseLookupConfig
          type: string
      type: object
    ManagedZonePeeringConfigTargetNetwork:
      properties:
        networkUrl:
          description: 'The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}'
          type: string
        kind:
          default: dns#managedZonePeeringConfigTargetNetwork
          type: string
        deactivateTime:
          type: string
          description: 'The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only.'
      id: ManagedZonePeeringConfigTargetNetwork
      type: object
    ManagedZoneCloudLoggingConfig:
      type: object
      properties:
        kind:
          type: string
          default: dns#managedZoneCloudLoggingConfig
        enableLogging:
          description: 'If set, enable query logging for this ManagedZone. False by default, making logging opt-in.'
          type: boolean
      description: Cloud Logging configurations for publicly visible zones.
      id: ManagedZoneCloudLoggingConfig
    RRSetRoutingPolicyWrrPolicyWrrPolicyItem:
      description: A routing block which contains the routing information for one WRR item.
      properties:
        healthCheckedTargets:
          $ref: '#/components/schemas/RRSetRoutingPolicyHealthCheckTargets'
          description: 'endpoints that need to be health checked before making the routing decision. The unhealthy endpoints will be omitted from the result. If all endpoints within a buckete are unhealthy, we''ll choose a different bucket (sampled w.r.t. its weight) for responding. Note that if DNSSEC is enabled for this zone, only one of rrdata or health_checked_targets can be set.'
        weight:
          format: double
          type: number
          description: 'The weight corresponding to this subset of rrdata. When multiple WeightedRoundRobinPolicyItems are configured, the probability of returning an rrset is proportional to its weight relative to the sum of weights configured for all items. This weight should be non-negative.'
        signatureRrdatas:
          type: array
          description: 'DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there''s a restriction of 1 ip per item. .'
          items:
            type: string
        rrdatas:
          type: array
          items:
            type: string
        kind:
          default: dns#rRSetRoutingPolicyWrrPolicyWrrPolicyItem
          type: string
      id: RRSetRoutingPolicyWrrPolicyWrrPolicyItem
      type: object
    GoogleIamV1Policy:
      type: object
      properties:
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
          type: string
        version:
          format: int32
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
        bindings:
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
        auditConfigs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      id: GoogleIamV1Policy
    ManagedZoneDnsSecConfig:
      id: ManagedZoneDnsSecConfig
      type: object
      properties:
        nonExistence:
          type: string
          enumDescriptions:
            - ''
            - ''
          description: Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.
          enum:
            - nsec
            - nsec3
        kind:
          default: dns#managedZoneDnsSecConfig
          type: string
        state:
          type: string
          enumDescriptions:
            - DNSSEC is disabled; the zone is not signed.
            - DNSSEC is enabled; the zone is signed and fully managed.
            - 'DNSSEC is enabled, but in a "transfer" mode.'
          description: 'Specifies whether DNSSEC is enabled, and what mode it is in.'
          enum:
            - 'off'
            - 'on'
            - transfer
        defaultKeySpecs:
          type: array
          description: Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.
          items:
            $ref: '#/components/schemas/DnsKeySpec'
    DnsKeyDigest:
      type: object
      id: DnsKeyDigest
      properties:
        digest:
          description: The base-16 encoded bytes of this digest. Suitable for use in a DS resource record.
          type: string
        type:
          enum:
            - sha1
            - sha256
            - sha384
          description: Specifies the algorithm used to calculate this digest.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
    RRSetRoutingPolicyWrrPolicy:
      description: Configures a RRSetRoutingPolicy that routes in a weighted round robin fashion.
      type: object
      properties:
        kind:
          default: dns#rRSetRoutingPolicyWrrPolicy
          type: string
        items:
          items:
            $ref: '#/components/schemas/RRSetRoutingPolicyWrrPolicyWrrPolicyItem'
          type: array
      id: RRSetRoutingPolicyWrrPolicy
  parameters:
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  x-stackQL-resources:
    managed_zones:
      id: google.dns.managed_zones
      name: managed_zones
      title: Managed Zones
      methods:
        list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.managedZones
        _list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_zones/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_zones/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_zones/methods/delete'
    managed_zones_iam_policies:
      id: google.dns.managed_zones_iam_policies
      name: managed_zones_iam_policies
      title: Managed Zones Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{projectsId}~1managedZones~1{managedZonesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{projectsId}~1managedZones~1{managedZonesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{projectsId}~1managedZones~1{managedZonesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_zones_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    response_policies:
      id: google.dns.response_policies
      name: response_policies
      title: Response Policies
      methods:
        create:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.responsePolicies
        _list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/response_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/response_policies/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/response_policies/methods/delete'
    policies:
      id: google.dns.policies
      name: policies
      title: Policies
      methods:
        patch:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1policies~1{policy}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1policies~1{policy}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1policies~1{policy}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1policies~1{policy}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1policies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1policies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.policies
        _list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1policies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/policies/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/policies/methods/delete'
    projects:
      id: google.dns.projects
      name: projects
      title: Projects
      methods:
        get:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/get'
        insert: []
        update: []
        delete: []
    changes:
      id: google.dns.changes
      name: changes
      title: Changes
      methods:
        list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1changes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.changes
        _list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1changes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1changes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1changes~1{changeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/changes/methods/list'
          - $ref: '#/components/x-stackQL-resources/changes/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/changes/methods/create'
        update: []
        delete: []
    dns_keys:
      id: google.dns.dns_keys
      name: dns_keys
      title: Dns Keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1dnsKeys~1{dnsKeyId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1dnsKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dnsKeys
        _list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1dnsKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dns_keys/methods/get'
          - $ref: '#/components/x-stackQL-resources/dns_keys/methods/list'
        insert: []
        update: []
        delete: []
    resource_record_sets:
      id: google.dns.resource_record_sets
      name: resource_record_sets
      title: Resource Record Sets
      methods:
        patch:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1rrsets~1{name}~1{type}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1rrsets~1{name}~1{type}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1rrsets~1{name}~1{type}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1rrsets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1rrsets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rrsets
        _list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1rrsets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_record_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/resource_record_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_record_sets/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_record_sets/methods/delete'
    managed_zone_operations:
      id: google.dns.managed_zone_operations
      name: managed_zone_operations
      title: Managed Zone Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1managedZones~1{managedZone}~1operations~1{operation}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_zone_operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/managed_zone_operations/methods/get'
        insert: []
        update: []
        delete: []
    response_policy_rules:
      id: google.dns.response_policy_rules
      name: response_policy_rules
      title: Response Policy Rules
      methods:
        update:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}~1rules~1{responsePolicyRule}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}~1rules~1{responsePolicyRule}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}~1rules~1{responsePolicyRule}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}~1rules~1{responsePolicyRule}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.responsePolicyRules
        _list:
          operation:
            $ref: '#/paths/~1dns~1v1~1projects~1{project}~1responsePolicies~1{responsePolicy}~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/response_policy_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/response_policy_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/response_policy_rules/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/response_policy_rules/methods/delete'
paths:
  '/dns/v1/projects/{project}/managedZones':
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
    get:
      description: Enumerates ManagedZones that have been created but not yet deleted.
      operationId: dns.managedZones.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedZonesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: dnsName
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.managedZones
    post:
      description: Creates a new ManagedZone.
      operationId: dns.managedZones.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedZone'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedZone'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/dns/v1/projects/{project}/managedZones/{managedZone}':
    parameters: *ref_1
    delete:
      description: Deletes a previously created ManagedZone.
      operationId: dns.managedZones.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Fetches the representation of an existing ManagedZone.
      operationId: dns.managedZones.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedZone'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-method: get
      x-stackQL-verb: exec
    put:
      description: Updates an existing ManagedZone.
      operationId: dns.managedZones.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedZone'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-method: update
      x-stackQL-verb: exec
    patch:
      description: Applies a partial update to an existing ManagedZone.
      operationId: dns.managedZones.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedZone'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/dns/v1/projects/{projectsId}/managedZones/{managedZonesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dns.managedZones.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: managedZonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: managed_zones_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
  '/dns/v1/projects/{projectsId}/managedZones/{managedZonesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this returns an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dns.managedZones.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: managedZonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: managed_zones_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/dns/v1/projects/{projectsId}/managedZones/{managedZonesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: dns.managedZones.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: managedZonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: managed_zones_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/dns/v1/projects/{project}/responsePolicies':
    parameters: *ref_1
    post:
      description: Creates a new Response Policy
      operationId: dns.responsePolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicy'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: response_policies
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Enumerates all Response Policies associated with a project.
      operationId: dns.responsePolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePoliciesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: response_policies
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.responsePolicies
  '/dns/v1/projects/{project}/responsePolicies/{responsePolicy}':
    parameters: *ref_1
    put:
      description: Updates an existing Response Policy.
      operationId: dns.responsePolicies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePoliciesUpdateResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicy
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: response_policies
      x-stackQL-method: update
      x-stackQL-verb: exec
    get:
      description: Fetches the representation of an existing Response Policy.
      operationId: dns.responsePolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicy'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicy
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: response_policies
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a previously created Response Policy. Fails if the response policy is non-empty or still being referenced by a network.
      operationId: dns.responsePolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicy
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: response_policies
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Applies a partial update to an existing Response Policy.
      operationId: dns.responsePolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePoliciesPatchResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicy
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: response_policies
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/dns/v1/projects/{project}/policies/{policy}':
    parameters: *ref_1
    patch:
      description: Applies a partial update to an existing Policy.
      operationId: dns.policies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPatchResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: policy
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: policies
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a previously created Policy. Fails if the policy is still being referenced by a network.
      operationId: dns.policies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: policy
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: policies
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Fetches the representation of an existing Policy.
      operationId: dns.policies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: policy
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: policies
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      description: Updates an existing Policy.
      operationId: dns.policies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesUpdateResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: policy
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: policies
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/dns/v1/projects/{project}/policies':
    parameters: *ref_1
    post:
      description: Creates a new Policy.
      operationId: dns.policies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: policies
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Enumerates all Policies associated with a project.
      operationId: dns.policies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: policies
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.policies
  '/dns/v1/projects/{project}':
    parameters: *ref_1
    get:
      description: Fetches the representation of an existing Project.
      operationId: dns.projects.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: get
      x-stackQL-verb: select
  '/dns/v1/projects/{project}/managedZones/{managedZone}/changes':
    parameters: *ref_1
    get:
      description: Enumerates Changes to a ResourceRecordSet collection.
      operationId: dns.changes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
      x-stackQL-resource: changes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.changes
    post:
      description: Atomically updates the ResourceRecordSet collection.
      operationId: dns.changes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Change'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Change'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: changes
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/dns/v1/projects/{project}/managedZones/{managedZone}/changes/{changeId}':
    parameters: *ref_1
    get:
      description: Fetches the representation of an existing Change.
      operationId: dns.changes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Change'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: path
          name: changeId
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: changes
      x-stackQL-method: get
      x-stackQL-verb: select
  '/dns/v1/projects/{project}/managedZones/{managedZone}/dnsKeys/{dnsKeyId}':
    parameters: *ref_1
    get:
      description: Fetches the representation of an existing DnsKey.
      operationId: dns.dnsKeys.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsKey'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: path
          name: dnsKeyId
          required: true
          schema:
            type: string
        - in: query
          name: digestType
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: dns_keys
      x-stackQL-method: get
      x-stackQL-verb: select
  '/dns/v1/projects/{project}/managedZones/{managedZone}/dnsKeys':
    parameters: *ref_1
    get:
      description: Enumerates DnsKeys to a ResourceRecordSet collection.
      operationId: dns.dnsKeys.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsKeysListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: digestType
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: dns_keys
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.dnsKeys
  '/dns/v1/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}':
    parameters: *ref_1
    patch:
      description: Applies a partial update to an existing ResourceRecordSet.
      operationId: dns.resourceRecordSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRecordSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRecordSet'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: resource_record_sets
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a previously created ResourceRecordSet.
      operationId: dns.resourceRecordSets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRecordSetsDeleteResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: resource_record_sets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Fetches the representation of an existing ResourceRecordSet.
      operationId: dns.resourceRecordSets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRecordSet'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: resource_record_sets
      x-stackQL-method: get
      x-stackQL-verb: select
  '/dns/v1/projects/{project}/managedZones/{managedZone}/rrsets':
    parameters: *ref_1
    post:
      description: Creates a new ResourceRecordSet.
      operationId: dns.resourceRecordSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRecordSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRecordSet'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: resource_record_sets
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Enumerates ResourceRecordSets that you have created but not yet deleted.
      operationId: dns.resourceRecordSets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRecordSetsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: resource_record_sets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.rrsets
  '/dns/v1/projects/{project}/managedZones/{managedZone}/operations':
    parameters: *ref_1
    get:
      description: Enumerates Operations for the given ManagedZone.
      operationId: dns.managedZoneOperations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedZoneOperationsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: sortBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: managed_zone_operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/dns/v1/projects/{project}/managedZones/{managedZone}/operations/{operation}':
    parameters: *ref_1
    get:
      description: Fetches the representation of an existing Operation.
      operationId: dns.managedZoneOperations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: managedZone
          required: true
          schema:
            type: string
        - in: path
          name: operation
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: managed_zone_operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/dns/v1/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}':
    parameters: *ref_1
    put:
      description: Updates an existing Response Policy Rule.
      operationId: dns.responsePolicyRules.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyRule'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyRulesUpdateResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicy
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicyRule
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: response_policy_rules
      x-stackQL-method: update
      x-stackQL-verb: exec
    patch:
      description: Applies a partial update to an existing Response Policy Rule.
      operationId: dns.responsePolicyRules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyRule'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyRulesPatchResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicy
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicyRule
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: response_policy_rules
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a previously created Response Policy Rule.
      operationId: dns.responsePolicyRules.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicy
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicyRule
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: response_policy_rules
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Fetches the representation of an existing Response Policy Rule.
      operationId: dns.responsePolicyRules.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyRule'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicy
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicyRule
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: response_policy_rules
      x-stackQL-method: get
      x-stackQL-verb: select
  '/dns/v1/projects/{project}/responsePolicies/{responsePolicy}/rules':
    parameters: *ref_1
    post:
      description: Creates a new Response Policy Rule.
      operationId: dns.responsePolicyRules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyRule'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyRule'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicy
          required: true
          schema:
            type: string
        - in: query
          name: clientOperationId
          schema:
            type: string
      x-stackQL-resource: response_policy_rules
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Enumerates all Response Policy Rules associated with a project.
      operationId: dns.responsePolicyRules.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
          Oauth2c:
            - 'https://www.googleapis.com/auth/ndev.clouddns.readwrite'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyRulesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: responsePolicy
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: response_policy_rules
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.responsePolicyRules
