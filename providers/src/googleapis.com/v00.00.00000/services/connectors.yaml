openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Connectors API
  description: Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
  version: v2
  x-discovery-doc-revision: '20230812'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors'
servers:
  - url: 'https://connectors.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ListEntitiesResponse:
      properties:
        nextPageToken:
          type: string
          description: Next page token if more records are available.
        entities:
          items:
            $ref: '#/components/schemas/Entity'
          description: List containing entity rows.
          type: array
      type: object
      id: ListEntitiesResponse
      description: Response message for EntityService.ListEntities
    Field:
      id: Field
      type: object
      properties:
        description:
          type: string
          description: A brief description of the Field.
        key:
          description: The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity.
          type: boolean
        defaultValue:
          description: The following field specifies the default value of the Field provided by the external system if a value is not provided.
          type: any
        dataType:
          enum:
            - DATA_TYPE_UNSPECIFIED
            - INT
            - SMALLINT
            - DOUBLE
            - DATE
            - DATETIME
            - TIME
            - STRING
            - LONG
            - BOOLEAN
            - DECIMAL
            - UUID
            - BLOB
            - BIT
            - TINYINT
            - INTEGER
            - BIGINT
            - FLOAT
            - REAL
            - NUMERIC
            - CHAR
            - VARCHAR
            - LONGVARCHAR
            - TIMESTAMP
            - NCHAR
            - NVARCHAR
            - LONGNVARCHAR
            - 'NULL'
            - OTHER
            - JAVA_OBJECT
            - DISTINCT
            - STRUCT
            - ARRAY
            - CLOB
            - REF
            - DATALINK
            - ROWID
            - BINARY
            - VARBINARY
            - LONGVARBINARY
            - NCLOB
            - SQLXML
            - REF_CURSOR
            - TIME_WITH_TIMEZONE
            - TIMESTAMP_WITH_TIMEZONE
          enumDescriptions:
            - Datatype unspecified.
            - 'Deprecated Int type, use INTEGER type instead.'
            - Small int type.
            - Double type.
            - Date type.
            - Deprecated Datetime type.
            - Time type.
            - 'Deprecated string type, use VARCHAR type instead.'
            - 'Deprecated Long type, use BIGINT type instead.'
            - Boolean type.
            - Decimal type.
            - 'Deprecated UUID type, use VARCHAR instead.'
            - Blob type.
            - Bit type.
            - Tiny int type.
            - Integer type.
            - Big int type.
            - Float type.
            - Real type.
            - Numeric type.
            - Char type.
            - Varchar type.
            - Long varchar type.
            - Timestamp type.
            - Nchar type.
            - Nvarchar type.
            - Long Nvarchar type.
            - Null type.
            - Other type.
            - Java object type.
            - Distinct type keyword.
            - Struct type.
            - Array type.
            - Clob type.
            - Ref type.
            - Datalink type.
            - Row ID type.
            - Binary type.
            - Varbinary type.
            - Long Varbinary type.
            - Nclob type.
            - SQLXML type.
            - Ref_cursor type.
            - Time with timezone type.
            - Timestamp with timezone type.
          type: string
          description: The data type of the Field.
          enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        additionalDetails:
          type: object
          description: 'The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields.'
          additionalProperties:
            description: Properties of the object.
            type: any
        name:
          description: Name of the Field.
          type: string
        reference:
          $ref: '#/components/schemas/Reference'
          description: Reference captures the association between two different entity types. Value links to the reference of another entity type.
        nullable:
          description: Specifies whether a null value is allowed.
          type: boolean
      description: Message contains EntityType's Field metadata.
    ExecuteSqlQueryRequest:
      id: ExecuteSqlQueryRequest
      type: object
      properties:
        query:
          description: 'Required. SQL statement passed by clients like Integration Platform, the query is passed as-is to the driver used for interfacing with external systems.'
          $ref: '#/components/schemas/Query'
      description: An execute sql query request containing the query and the connection to execute it on.
    QueryParameter:
      id: QueryParameter
      type: object
      properties:
        value:
          type: string
        dataType:
          enum:
            - DATA_TYPE_UNSPECIFIED
            - INT
            - SMALLINT
            - DOUBLE
            - DATE
            - DATETIME
            - TIME
            - STRING
            - LONG
            - BOOLEAN
            - DECIMAL
            - UUID
            - BLOB
            - BIT
            - TINYINT
            - INTEGER
            - BIGINT
            - FLOAT
            - REAL
            - NUMERIC
            - CHAR
            - VARCHAR
            - LONGVARCHAR
            - TIMESTAMP
            - NCHAR
            - NVARCHAR
            - LONGNVARCHAR
            - 'NULL'
            - OTHER
            - JAVA_OBJECT
            - DISTINCT
            - STRUCT
            - ARRAY
            - CLOB
            - REF
            - DATALINK
            - ROWID
            - BINARY
            - VARBINARY
            - LONGVARBINARY
            - NCLOB
            - SQLXML
            - REF_CURSOR
            - TIME_WITH_TIMEZONE
            - TIMESTAMP_WITH_TIMEZONE
          enumDescriptions:
            - Datatype unspecified.
            - 'Deprecated Int type, use INTEGER type instead.'
            - Small int type.
            - Double type.
            - Date type.
            - Deprecated Datetime type.
            - Time type.
            - 'Deprecated string type, use VARCHAR type instead.'
            - 'Deprecated Long type, use BIGINT type instead.'
            - Boolean type.
            - Decimal type.
            - 'Deprecated UUID type, use VARCHAR instead.'
            - Blob type.
            - Bit type.
            - Tiny int type.
            - Integer type.
            - Big int type.
            - Float type.
            - Real type.
            - Numeric type.
            - Char type.
            - Varchar type.
            - Long varchar type.
            - Timestamp type.
            - Nchar type.
            - Nvarchar type.
            - Long Nvarchar type.
            - Null type.
            - Other type.
            - Java object type.
            - Distinct type keyword.
            - Struct type.
            - Array type.
            - Clob type.
            - Ref type.
            - Datalink type.
            - Row ID type.
            - Binary type.
            - Varbinary type.
            - Long Varbinary type.
            - Nclob type.
            - SQLXML type.
            - Ref_cursor type.
            - Time with timezone type.
            - Timestamp with timezone type.
          type: string
          enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
      description: Query parameter definition
    ExecuteActionRequest:
      description: Request message for ActionService.ExecuteAction
      type: object
      properties:
        parameters:
          additionalProperties:
            type: any
            description: Properties of the object.
          description: Parameters for executing the action. The parameters can be key/value pairs or nested structs.
          type: object
      id: ExecuteActionRequest
    ResultMetadata:
      id: ResultMetadata
      type: object
      description: Result Metadata message contains metadata about the result returned after executing an Action.
      properties:
        dataType:
          description: The data type of the metadata field
          enumDescriptions:
            - Datatype unspecified.
            - 'Deprecated Int type, use INTEGER type instead.'
            - Small int type.
            - Double type.
            - Date type.
            - Deprecated Datetime type.
            - Time type.
            - 'Deprecated string type, use VARCHAR type instead.'
            - 'Deprecated Long type, use BIGINT type instead.'
            - Boolean type.
            - Decimal type.
            - 'Deprecated UUID type, use VARCHAR instead.'
            - Blob type.
            - Bit type.
            - Tiny int type.
            - Integer type.
            - Big int type.
            - Float type.
            - Real type.
            - Numeric type.
            - Char type.
            - Varchar type.
            - Long varchar type.
            - Timestamp type.
            - Nchar type.
            - Nvarchar type.
            - Long Nvarchar type.
            - Null type.
            - Other type.
            - Java object type.
            - Distinct type keyword.
            - Struct type.
            - Array type.
            - Clob type.
            - Ref type.
            - Datalink type.
            - Row ID type.
            - Binary type.
            - Varbinary type.
            - Long Varbinary type.
            - Nclob type.
            - SQLXML type.
            - Ref_cursor type.
            - Time with timezone type.
            - Timestamp with timezone type.
          type: string
          enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - DATA_TYPE_UNSPECIFIED
            - INT
            - SMALLINT
            - DOUBLE
            - DATE
            - DATETIME
            - TIME
            - STRING
            - LONG
            - BOOLEAN
            - DECIMAL
            - UUID
            - BLOB
            - BIT
            - TINYINT
            - INTEGER
            - BIGINT
            - FLOAT
            - REAL
            - NUMERIC
            - CHAR
            - VARCHAR
            - LONGVARCHAR
            - TIMESTAMP
            - NCHAR
            - NVARCHAR
            - LONGNVARCHAR
            - 'NULL'
            - OTHER
            - JAVA_OBJECT
            - DISTINCT
            - STRUCT
            - ARRAY
            - CLOB
            - REF
            - DATALINK
            - ROWID
            - BINARY
            - VARBINARY
            - LONGVARBINARY
            - NCLOB
            - SQLXML
            - REF_CURSOR
            - TIME_WITH_TIMEZONE
            - TIMESTAMP_WITH_TIMEZONE
        description:
          description: A brief description of the metadata field.
          type: string
        name:
          type: string
          description: Name of the metadata field.
    EntityType:
      properties:
        name:
          description: The name of the entity type.
          type: string
        fields:
          type: array
          description: List containing metadata information about each field of the entity type.
          items:
            $ref: '#/components/schemas/Field'
      type: object
      description: EntityType message contains metadata information about a single entity type present in the external system.
      id: EntityType
    ExecuteActionResponse:
      description: Response message for ActionService.ExecuteAction
      id: ExecuteActionResponse
      properties:
        results:
          description: 'In the case of successful invocation of the specified action, the results Struct contains values based on the response of the action invoked. 1. If the action execution produces any entities as a result, they are returned as an array of Structs with the ''key'' being the field name and the ''value'' being the value of that field in each result row. { ''results'': [{''key'': ''value''}, ...] }'
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object.
      type: object
    ExecuteSqlQueryResponse:
      type: object
      id: ExecuteSqlQueryResponse
      properties:
        results:
          items:
            additionalProperties:
              description: Properties of the object.
              type: any
            type: object
          description: 'In the case of successful execution of the query the response contains results returned by the external system. For example, the result rows of the query are contained in the ''results'' Struct list - "results": [ { "field1": "val1", "field2": "val2",.. },.. ] Each Struct row can contain fields any type of like nested Structs or lists.'
          type: array
      description: A response returned by the connection after executing the sql query.
    Reference:
      id: Reference
      properties:
        name:
          type: string
          description: Name of the reference field.
        type:
          description: Name of reference entity type.
          type: string
      type: object
    InputParameter:
      description: Input Parameter message contains metadata about the parameters required for executing an Action.
      id: InputParameter
      properties:
        defaultValue:
          type: any
          description: The following field specifies the default value of the Parameter provided by the external system if a value is not provided.
        name:
          description: Name of the Parameter.
          type: string
        nullable:
          type: boolean
          description: Specifies whether a null value is allowed.
        description:
          type: string
          description: A brief description of the Parameter.
        dataType:
          enum:
            - DATA_TYPE_UNSPECIFIED
            - INT
            - SMALLINT
            - DOUBLE
            - DATE
            - DATETIME
            - TIME
            - STRING
            - LONG
            - BOOLEAN
            - DECIMAL
            - UUID
            - BLOB
            - BIT
            - TINYINT
            - INTEGER
            - BIGINT
            - FLOAT
            - REAL
            - NUMERIC
            - CHAR
            - VARCHAR
            - LONGVARCHAR
            - TIMESTAMP
            - NCHAR
            - NVARCHAR
            - LONGNVARCHAR
            - 'NULL'
            - OTHER
            - JAVA_OBJECT
            - DISTINCT
            - STRUCT
            - ARRAY
            - CLOB
            - REF
            - DATALINK
            - ROWID
            - BINARY
            - VARBINARY
            - LONGVARBINARY
            - NCLOB
            - SQLXML
            - REF_CURSOR
            - TIME_WITH_TIMEZONE
            - TIMESTAMP_WITH_TIMEZONE
          description: The data type of the Parameter
          enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          type: string
          enumDescriptions:
            - Datatype unspecified.
            - 'Deprecated Int type, use INTEGER type instead.'
            - Small int type.
            - Double type.
            - Date type.
            - Deprecated Datetime type.
            - Time type.
            - 'Deprecated string type, use VARCHAR type instead.'
            - 'Deprecated Long type, use BIGINT type instead.'
            - Boolean type.
            - Decimal type.
            - 'Deprecated UUID type, use VARCHAR instead.'
            - Blob type.
            - Bit type.
            - Tiny int type.
            - Integer type.
            - Big int type.
            - Float type.
            - Real type.
            - Numeric type.
            - Char type.
            - Varchar type.
            - Long varchar type.
            - Timestamp type.
            - Nchar type.
            - Nvarchar type.
            - Long Nvarchar type.
            - Null type.
            - Other type.
            - Java object type.
            - Distinct type keyword.
            - Struct type.
            - Array type.
            - Clob type.
            - Ref type.
            - Datalink type.
            - Row ID type.
            - Binary type.
            - Varbinary type.
            - Long Varbinary type.
            - Nclob type.
            - SQLXML type.
            - Ref_cursor type.
            - Time with timezone type.
            - Timestamp with timezone type.
      type: object
    ListActionsResponse:
      id: ListActionsResponse
      properties:
        actions:
          type: array
          description: List of action metadata.
          items:
            $ref: '#/components/schemas/Action'
        unsupportedActionNames:
          type: array
          description: List of actions which contain unsupported Datatypes. Check datatype.proto for more information.
          items:
            type: string
        nextPageToken:
          description: Next page token if more actions available.
          type: string
      description: Response message for ActionService.ListActions
      type: object
    Entity:
      id: Entity
      properties:
        fields:
          type: object
          description: Fields of the entity. The key is name of the field and the value contains the applicable `google.protobuf.Value` entry for this field.
          additionalProperties:
            type: any
        name:
          readOnly: true
          type: string
          description: 'Output only. Resource name of the Entity. Format: projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}/entities/{id}'
      type: object
      description: '''Entity row''/ ''Entity'' refers to a single row of an entity type.'
    Query:
      properties:
        timeout:
          type: string
          description: Sets the number of seconds the driver will wait for a query to execute.
          format: int64
        queryParameters:
          type: array
          items:
            $ref: '#/components/schemas/QueryParameter'
          description: 'In the struct, the value corresponds to the value of query parameter and date type corresponds to the date type of the query parameter.'
        query:
          description: Required. Sql query to execute.
          type: string
        maxRows:
          description: Sets the limit for the maximum number of rows returned after the query execution.
          format: int64
          type: string
      type: object
      description: 'A wrapper around the SQL query statement. This is needed so that the JSON representation of ExecuteSqlQueryRequest has the following format: `{"query":"select *"}`.'
      id: Query
    Action:
      id: Action
      properties:
        name:
          type: string
          description: Name of the action.
        inputParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputParameter'
          description: List containing input parameter metadata.
        resultMetadata:
          items:
            $ref: '#/components/schemas/ResultMetadata'
          type: array
          description: List containing the metadata of result fields.
      description: Action message contains metadata information about a single action present in the external system.
      type: object
    UpdateEntitiesWithConditionsResponse:
      type: object
      properties:
        response:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: Response returned by the external system.
      description: Response message for EntityService.UpdateEntitiesWithConditions
      id: UpdateEntitiesWithConditionsResponse
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
      id: Empty
    ListEntityTypesResponse:
      description: Response message for EntityService.ListEntityTypes
      id: ListEntityTypesResponse
      properties:
        types:
          description: List of metadata related to all entity types.
          type: array
          items:
            $ref: '#/components/schemas/EntityType'
        nextPageToken:
          type: string
          description: Next page token if more entity types available.
        unsupportedTypeNames:
          description: List of entity type names which contain unsupported Datatypes. Check datatype.proto for more information.
          items:
            type: string
          type: array
      type: object
  parameters:
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    entity_types:
      id: google.connectors.entity_types
      name: entity_types
      title: Entity Types
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1entityTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.types
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1entityTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entity_types/methods/list'
        insert: []
        update: []
        delete: []
    entities:
      id: google.connectors.entities
      name: entities
      title: Entities
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1entityTypes~1{entityTypesId}~1entities~1{entitiesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1entityTypes~1{entityTypesId}~1entities~1{entitiesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1entityTypes~1{entityTypesId}~1entities~1{entitiesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1entityTypes~1{entityTypesId}~1entities/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1entityTypes~1{entityTypesId}~1entities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.entities
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1entityTypes~1{entityTypesId}~1entities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entities/methods/get'
          - $ref: '#/components/x-stackQL-resources/entities/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/entities/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/entities/methods/delete'
    entities_entities_with_conditions:
      id: google.connectors.entities_entities_with_conditions
      name: entities_entities_with_conditions
      title: Entities Entities With Conditions
      methods:
        update_entities_with_conditions:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1entityTypes~1{entityTypesId}~1entities:updateEntitiesWithConditions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_entities_with_conditions:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1entityTypes~1{entityTypesId}~1entities:deleteEntitiesWithConditions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    actions:
      id: google.connectors.actions
      name: actions
      title: Actions
      methods:
        execute:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1actions~1{actionsId}:execute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.actions
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/actions/methods/list'
        insert: []
        update: []
        delete: []
    connections:
      id: google.connectors.connections
      name: connections
      title: Connections
      methods:
        execute_sql_query:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:executeSqlQuery/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/entityTypes':
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: Lists metadata related to all entity types present in the external system.
      operationId: connectors.projects.locations.connections.entityTypes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntityTypesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: entity_types
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.types
  '/v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/entityTypes/{entityTypesId}/entities/{entitiesId}':
    parameters: *ref_1
    delete:
      description: Deletes an existing entity row matching the entity type and entity id specified in the request.
      operationId: connectors.projects.locations.connections.entityTypes.entities.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a single entity row matching the entity type and entity id specified in the request.
      operationId: connectors.projects.locations.connections.entityTypes.entities.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates an existing entity row matching the entity type and entity id specified in the request. The fields in the entity row that need to be modified are contained in the body of the request. All unspecified fields are left unchanged. The response message contains a `Entity` message object returned as a response by the external system.
      operationId: connectors.projects.locations.connections.entityTypes.entities.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/entityTypes/{entityTypesId}/entities':
    parameters: *ref_1
    post:
      description: Creates a new entity row of the specified entity type in the external system. The field values for creating the row are contained in the body of the request. The response message contains a `Entity` message object returned as a response by the external system.
      operationId: connectors.projects.locations.connections.entityTypes.entities.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: 'Lists entity rows of a particular entity type contained in the request. Note: 1. Currently, only max of one ''sort_by'' column is supported. 2. If no ''sort_by'' column is provided, the primary key of the table is used. If zero or more than one primary key is available, we default to the unpaginated list entities logic which only returns the first page. 3. The values of the ''sort_by'' columns must uniquely identify an entity row, otherwise undefined behaviors may be observed during pagination. 4. Since transactions are not supported, any updates, inserts or deletes during pagination can lead to stale data being returned or other unexpected behaviors.'
      operationId: connectors.projects.locations.connections.entityTypes.entities.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: conditions
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.entities
  '/v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/entityTypes/{entityTypesId}/entities:updateEntitiesWithConditions':
    parameters: *ref_1
    post:
      description: Updates entities based on conditions specified in the request and not on entity id.
      operationId: connectors.projects.locations.connections.entityTypes.entities.updateEntitiesWithConditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEntitiesWithConditionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: conditions
          schema:
            type: string
      x-stackQL-resource: entities_entities_with_conditions
      x-stackQL-method: update_entities_with_conditions
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/entityTypes/{entityTypesId}/entities:deleteEntitiesWithConditions':
    parameters: *ref_1
    post:
      description: Deletes entities based on conditions specified in the request and not on entity id.
      operationId: connectors.projects.locations.connections.entityTypes.entities.deleteEntitiesWithConditions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: conditions
          schema:
            type: string
      x-stackQL-resource: entities_entities_with_conditions
      x-stackQL-method: delete_entities_with_conditions
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/actions/{actionsId}:execute':
    parameters: *ref_1
    post:
      description: Executes an action with the name specified in the request. The input parameters for executing the action are passed through the body of the ExecuteAction request.
      operationId: connectors.projects.locations.connections.actions.execute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteActionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteActionResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: actionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: actions
      x-stackQL-method: execute
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/actions':
    parameters: *ref_1
    get:
      description: Gets the schema of all the actions supported by the connector.
      operationId: connectors.projects.locations.connections.actions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: actions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.actions
  '/v2/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:executeSqlQuery':
    parameters: *ref_1
    post:
      description: 'Executes a SQL statement specified in the body of the request. An example of this SQL statement in the case of Salesforce connector would be ''select * from Account a, Order o where a.Id = o.AccountId''.'
      operationId: connectors.projects.locations.connections.executeSqlQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteSqlQueryRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteSqlQueryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: connections
      x-stackQL-method: execute_sql_query
      x-stackQL-verb: exec
