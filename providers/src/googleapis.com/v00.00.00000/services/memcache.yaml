openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Memorystore for Memcached API
  description: Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.
  version: v1
  x-discovery-doc-revision: '20230803'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/memorystore/'
servers:
  - url: 'https://memcache.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    OperationMetadata:
      properties:
        verb:
          description: Output only. Name of the verb executed by the operation.
          type: string
          readOnly: true
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
        cancelRequested:
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          type: boolean
          readOnly: true
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Time when the operation was created.
        target:
          readOnly: true
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Time when the operation finished running.
        statusDetail:
          readOnly: true
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
      type: object
      description: Represents the metadata of a long-running operation.
      id: OperationMetadata
    MemcacheParameters:
      id: MemcacheParameters
      properties:
        params:
          type: object
          description: User defined set of parameters to use in the memcached process.
          additionalProperties:
            type: string
        id:
          readOnly: true
          type: string
          description: Output only. The unique ID associated with this set of parameters. Users can use this id to determine if the parameters associated with the instance differ from the parameters associated with the nodes. A discrepancy between parameter ids can inform users that they may need to take action to apply parameters on nodes.
      type: object
    ListInstancesResponse:
      description: Response for ListInstances.
      properties:
        instances:
          description: 'A list of Memcached instances in the project in the specified location, or across all locations. If the `location_id` in the parent field of the request is "-", all regions available to the project are queried, and the results aggregated.'
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
      type: object
      id: ListInstancesResponse
    Schedule:
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
          description: Time within the window to start the operations.
        duration:
          format: google-duration
          description: 'Output only. Duration of the time window, set by service producer.'
          type: string
        day:
          description: Allows to define schedule that runs specified day of the week.
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          type: string
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
      description: Configure the schedule.
      id: Schedule
    DenyMaintenancePeriod:
      properties:
        startDate:
          description: 'Deny period start date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be the same or after the start.'
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
          description: 'Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be before the end.'
        time:
          $ref: '#/components/schemas/TimeOfDay'
          description: 'Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: * Full time. * All zeros for 00:00:00 UTC'
      description: DenyMaintenancePeriod definition. Maintenance is forbidden within the deny period. The start_date must be less than the end_date.
      id: DenyMaintenancePeriod
      type: object
    MaintenancePolicy:
      id: MaintenancePolicy
      type: object
      properties:
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time when the resource was created.
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.'
        name:
          description: 'Required. MaintenancePolicy name using the form: `projects/{project_id}/locations/{location_id}/maintenancePolicies/{maintenance_policy_id}` where {project_id} refers to a GCP consumer project ID, {location_id} refers to a GCP region/zone, {maintenance_policy_id} must be 1-63 characters long and match the regular expression `[a-z0-9]([-a-z0-9]*[a-z0-9])?`.'
          type: string
        description:
          description: Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
          type: string
        updateTime:
          description: Output only. The time when the resource was updated.
          format: google-datetime
          type: string
        updatePolicy:
          $ref: '#/components/schemas/UpdatePolicy'
          description: Maintenance policy applicable to instance update.
        state:
          enum:
            - STATE_UNSPECIFIED
            - READY
            - DELETING
          type: string
          description: Optional. The state of the policy.
          enumDescriptions:
            - Unspecified state.
            - Resource is ready to be used.
            - Resource is being deleted. It can no longer be attached to instances.
      description: LINT.IfChange Defines policies to service maintenance events.
    MaintenanceSchedule:
      type: object
      properties:
        scheduleDeadlineTime:
          format: google-datetime
          description: 'Output only. The deadline that the maintenance schedule start time can not go beyond, including reschedule.'
          type: string
          readOnly: true
        startTime:
          format: google-datetime
          readOnly: true
          description: Output only. The start time of any upcoming scheduled maintenance for this instance.
          type: string
        endTime:
          description: Output only. The end time of any upcoming scheduled maintenance for this instance.
          format: google-datetime
          readOnly: true
          type: string
      id: MaintenanceSchedule
      description: Upcoming maintenance schedule.
    GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter:
      type: object
      properties:
        values:
          items:
            type: string
          type: array
          description: Optional. Array of string values. e.g. instance's replica information.
      id: GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter
      description: Contains notification related data.
    DailyCycle:
      id: DailyCycle
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
          description: Time within the day to start the operations.
        duration:
          format: google-duration
          description: 'Output only. Duration of the time window, set by service producer.'
          type: string
      description: Time window specified for daily operations.
    ListOperationsResponse:
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
          type: array
      id: ListOperationsResponse
      type: object
      description: The response message for Operations.ListOperations.
    MaintenanceWindow:
      type: object
      properties:
        weeklyCycle:
          $ref: '#/components/schemas/WeeklyCycle'
          description: Weekly cycle.
        dailyCycle:
          $ref: '#/components/schemas/DailyCycle'
          description: Daily cycle.
      id: MaintenanceWindow
      description: MaintenanceWindow definition.
    GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource:
      type: object
      description: Describes provisioned dataplane resources.
      id: GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource
      properties:
        resourceType:
          type: string
          description: 'Type of the resource. This can be either a GCP resource or a custom one (e.g. another cloud provider''s VM). For GCP compute resources use singular form of the names listed in GCP compute API documentation (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with ''compute-'', for example: ''compute-instance'', ''compute-disk'', ''compute-autoscaler''.'
        resourceUrl:
          type: string
          description: 'URL identifying the resource, e.g. "https://www.googleapis.com/compute/v1/projects/...)".'
    ApplyParametersRequest:
      id: ApplyParametersRequest
      description: Request for ApplyParameters.
      properties:
        nodeIds:
          type: array
          description: Nodes to which the instance-level parameter group is applied.
          items:
            type: string
        applyAll:
          type: boolean
          description: 'Whether to apply instance-level parameter group to all nodes. If set to true, users are restricted from specifying individual nodes, and `ApplyParameters` updates all nodes within the instance.'
      type: object
    Instance:
      description: A Memorystore for Memcached instance
      type: object
      properties:
        memcacheVersion:
          enumDescriptions:
            - Memcache version is not specified by customer
            - Memcached 1.5 version.
          description: 'The major version of Memcached software. If not provided, latest supported version will be used. Currently the latest supported major version is `MEMCACHE_1_5`. The minor version will be automatically determined by our system based on the latest supported minor version.'
          type: string
          enum:
            - MEMCACHE_VERSION_UNSPECIFIED
            - MEMCACHE_1_5
        nodeCount:
          type: integer
          format: int32
          description: Required. Number of nodes in the Memcached instance.
        nodeConfig:
          description: Required. Configuration for Memcached nodes.
          $ref: '#/components/schemas/NodeConfig'
        createTime:
          format: google-datetime
          description: Output only. The time the instance was created.
          readOnly: true
          type: string
        memcacheNodes:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Node'
          description: Output only. List of Memcached nodes. Refer to Node message for more details.
        updateTime:
          description: Output only. The time the instance was updated.
          readOnly: true
          format: google-datetime
          type: string
        zones:
          items:
            type: string
          type: array
          description: 'Zones in which Memcached nodes should be provisioned. Memcached nodes will be equally distributed across these zones. If not provided, the service will by default create nodes in all zones in the region for the instance.'
        maintenanceSchedule:
          $ref: '#/components/schemas/MaintenanceSchedule'
          readOnly: true
          description: Output only. Published maintenance schedule.
        memcacheFullVersion:
          description: Output only. The full version of memcached server running on this instance. System automatically determines the full memcached version for an instance based on the input MemcacheVersion. The full version format will be "memcached-1.5.16".
          readOnly: true
          type: string
        state:
          enumDescriptions:
            - State not set.
            - Memcached instance is being created.
            - Memcached instance has been created and ready to be used.
            - Memcached instance is updating configuration such as maintenance policy and schedule.
            - Memcached instance is being deleted.
            - 'Memcached instance is going through maintenance, e.g. data plane rollout.'
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - PERFORMING_MAINTENANCE
          type: string
          description: Output only. The state of this Memcached instance.
          readOnly: true
        instanceMessages:
          type: array
          description: List of messages that describe the current state of the Memcached instance.
          items:
            $ref: '#/components/schemas/InstanceMessage'
        labels:
          additionalProperties:
            type: string
          description: 'Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources'
          type: object
        maintenancePolicy:
          description: 'The maintenance policy for the instance. If not provided, the maintenance event will be performed based on Memorystore internal rollout schedule.'
          $ref: '#/components/schemas/GoogleCloudMemcacheV1MaintenancePolicy'
        parameters:
          description: User defined parameters to apply to the memcached process on each node.
          $ref: '#/components/schemas/MemcacheParameters'
        discoveryEndpoint:
          readOnly: true
          type: string
          description: Output only. Endpoint for the Discovery API.
        authorizedNetwork:
          type: string
          description: 'The full name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. If left unspecified, the `default` network will be used.'
        displayName:
          description: 'User provided name for the instance, which is only used for display purposes. Cannot be more than 80 characters.'
          type: string
        reservedIpRangeId:
          items:
            type: string
          type: array
          description: 'Optional. Contains the id of allocated IP address ranges associated with the private service access connection for example, "test-default" associated with IP range 10.0.0.0/29.'
        name:
          type: string
          description: 'Required. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Memcached instances are managed and addressed at the regional level so `location_id` here refers to a Google Cloud region; however, users may choose which zones Memcached nodes should be provisioned in within an instance. Refer to zones field for more details.'
      id: Instance
    GoogleCloudMemcacheV1ZoneMetadata:
      properties: {}
      type: object
      id: GoogleCloudMemcacheV1ZoneMetadata
    RescheduleMaintenanceRequest:
      description: Request for RescheduleMaintenance.
      type: object
      id: RescheduleMaintenanceRequest
      properties:
        scheduleTime:
          type: string
          format: google-datetime
          description: 'Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example `2012-11-15T16:19:00.094Z`.'
        rescheduleType:
          description: 'Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well.'
          type: string
          enumDescriptions:
            - Not set.
            - If the user wants to schedule the maintenance to happen now.
            - If the user wants to use the existing maintenance policy to find the next available window.
            - If the user wants to reschedule the maintenance to a specific time.
          enum:
            - RESCHEDULE_TYPE_UNSPECIFIED
            - IMMEDIATE
            - NEXT_AVAILABLE_WINDOW
            - SPECIFIC_TIME
    GoogleCloudMemcacheV1LocationMetadata:
      properties:
        availableZones:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudMemcacheV1ZoneMetadata'
          readOnly: true
          description: 'Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by GCE. These keys can be specified in the `zones` field when creating a Memcached instance.'
      id: GoogleCloudMemcacheV1LocationMetadata
      type: object
      description: Metadata for the given google.cloud.location.Location.
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
    GoogleCloudMemcacheV1MaintenancePolicy:
      id: GoogleCloudMemcacheV1MaintenancePolicy
      properties:
        weeklyMaintenanceWindow:
          type: array
          items:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
          description: 'Required. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_maintenance_windows is expected to be one.'
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time when the policy was created.
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time when the policy was updated.
        description:
          type: string
          description: Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
      type: object
      description: Maintenance policy per instance.
    InstanceMessage:
      type: object
      id: InstanceMessage
      properties:
        code:
          enum:
            - CODE_UNSPECIFIED
            - ZONE_DISTRIBUTION_UNBALANCED
          description: A code that correspond to one type of user-facing message.
          enumDescriptions:
            - Message Code not set.
            - Memcached nodes are distributed unevenly.
          type: string
        message:
          description: Message on memcached instance which will be exposed to users.
          type: string
    GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata:
      description: 'Node information for custom per-node SLO implementations. SSA does not support per-node SLO, but producers can populate per-node information in SloMetadata for custom precomputations. SSA Eligibility Exporter will emit per-node metric based on this information.'
      id: GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata
      type: object
      properties:
        nodeId:
          description: The id of the node. This should be equal to SaasInstanceNode.node_id.
          type: string
        location:
          description: 'The location of the node, if different from instance location.'
          type: string
        perSliEligibility:
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility'
          description: 'If present, this will override eligibility for the node coming from instance or exclusions for specified SLIs.'
    TimeOfDay:
      properties:
        minutes:
          type: integer
          format: int32
          description: Minutes of hour of day. Must be from 0 to 59.
        hours:
          description: 'Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.'
          type: integer
          format: int32
        nanos:
          type: integer
          format: int32
          description: 'Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.'
        seconds:
          format: int32
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          type: integer
      type: object
      id: TimeOfDay
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
    UpdateParametersRequest:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/MemcacheParameters'
          description: The parameters to apply to the instance.
        updateMask:
          format: google-fieldmask
          description: Required. Mask of fields to update.
          type: string
      id: UpdateParametersRequest
      description: Request for UpdateParameters.
    Empty:
      type: object
      properties: {}
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    NodeConfig:
      id: NodeConfig
      description: Configuration for a Memcached Node.
      properties:
        memorySizeMb:
          format: int32
          description: Required. Memory size in MiB for each Memcached node.
          type: integer
        cpuCount:
          format: int32
          description: Required. Number of cpus per Memcached node.
          type: integer
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      properties:
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
      id: Operation
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule:
      type: object
      properties:
        rolloutManagementPolicy:
          type: string
          description: 'The rollout management policy this maintenance schedule is associated with. When doing reschedule update request, the reschedule should be against this given policy.'
        endTime:
          type: string
          description: The scheduled end time for the maintenance.
          format: google-datetime
        scheduleDeadlineTime:
          format: google-datetime
          description: 'schedule_deadline_time is the time deadline any schedule start time cannot go beyond, including reschedule. It''s normally the initial schedule start time plus maintenance window length (1 day or 1 week). Maintenance cannot be scheduled to start beyond this deadline.'
          type: string
        canReschedule:
          type: boolean
          description: 'This field is deprecated, and will be always set to true since reschedule can happen multiple times now. This field should not be removed until all service producers remove this for their customers.'
          deprecated: true
        startTime:
          description: The scheduled start time for the maintenance.
          type: string
          format: google-datetime
      id: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule
      description: 'Maintenance schedule which is exposed to customer and potentially end user, indicating published upcoming future maintenance schedule'
    GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility:
      type: object
      properties:
        eligibilities:
          description: 'An entry in the eligibilities map specifies an eligibility for a particular SLI for the given instance. The SLI key in the name must be a valid SLI name specified in the Eligibility Exporter binary flags otherwise an error will be emitted by Eligibility Exporter and the oncaller will be alerted. If an SLI has been defined in the binary flags but the eligibilities map does not contain it, the corresponding SLI time series will not be emitted by the Eligibility Exporter. This ensures a smooth rollout and compatibility between the data produced by different versions of the Eligibility Exporters. If eligibilities map contains a key for an SLI which has not been declared in the binary flags, there will be an error message emitted in the Eligibility Exporter log and the metric for the SLI in question will not be emitted.'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility'
          type: object
      description: PerSliSloEligibility is a mapping from an SLI name to eligibility.
      id: GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility
    GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata:
      id: GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata
      description: SloMetadata contains resources required for proper SLO classification of the instance.
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata'
          description: 'Optional. List of nodes. Some producers need to use per-node metadata to calculate SLO. This field allows such producers to publish per-node SLO meta data, which will be consumed by SSA Eligibility Exporter and published in the form of per node metric to Monarch.'
          type: array
        tier:
          description: Name of the SLO tier the Instance belongs to. This name will be expected to match the tiers specified in the service SLO configuration. Field is mandatory and must not be empty.
          type: string
        perSliEligibility:
          description: Optional. Multiple per-instance SLI eligibilities which apply for individual SLIs.
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility'
      type: object
    UpdatePolicy:
      description: Maintenance policy applicable to instance updates.
      properties:
        channel:
          enum:
            - UPDATE_CHANNEL_UNSPECIFIED
            - EARLIER
            - LATER
            - WEEK1
            - WEEK2
            - WEEK5
          enumDescriptions:
            - Unspecified channel.
            - Early channel within a customer project.
            - Later channel within a customer project.
            - '! ! The follow channels can ONLY be used if you adopt the new MW system! ! ! NOTE: all WEEK channels are assumed to be under a weekly window. ! There is currently no dedicated channel definitions for Daily windows. ! If you use Daily window, the system will assume a 1d (24Hours) advanced ! notification period b/w EARLY and LATER. ! We may consider support more flexible daily channel specifications in ! the future. WEEK1 == EARLIER with minimum 7d advanced notification. {7d, 14d} The system will treat them equally and will use WEEK1 whenever it can. New customers are encouraged to use this channel annotation.'
            - 'WEEK2 == LATER with minimum 14d advanced notification {14d, 21d}.'
            - 'WEEK5 == 40d support. minimum 35d advanced notification {35d, 42d}.'
          description: Optional. Relative scheduling channel applied to resource.
          type: string
        window:
          description: Optional. Maintenance window that is applied to resources covered by this policy.
          $ref: '#/components/schemas/MaintenanceWindow'
        denyMaintenancePeriods:
          description: 'Deny Maintenance Period that is applied to resource to indicate when maintenance is forbidden. The protocol supports zero-to-many such periods, but the current SLM Rollout implementation only supports zero-to-one.'
          items:
            $ref: '#/components/schemas/DenyMaintenancePeriod'
          type: array
      type: object
      id: UpdatePolicy
    Node:
      type: object
      properties:
        zone:
          description: Output only. Location (GCP Zone) for the Memcached node.
          readOnly: true
          type: string
        parameters:
          description: User defined parameters currently applied to the node.
          $ref: '#/components/schemas/MemcacheParameters'
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          readOnly: true
          type: string
          enumDescriptions:
            - Node state is not set.
            - Node is being created.
            - Node has been created and ready to be used.
            - Node is being deleted.
            - Node is being updated.
          description: Output only. Current state of the Memcached node.
        nodeId:
          description: Output only. Identifier of the Memcached node. The node id does not include project or location like the Memcached instance name.
          type: string
          readOnly: true
        host:
          readOnly: true
          description: Output only. Hostname or IP address of the Memcached node used by the clients to connect to the Memcached server on this node.
          type: string
        port:
          format: int32
          type: integer
          readOnly: true
          description: Output only. The port number of the Memcached server on this node.
      id: Node
    WeeklyCycle:
      id: WeeklyCycle
      description: Time window specified for weekly operations.
      properties:
        schedule:
          description: User can specify multiple windows in a week. Minimum of 1 window.
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
      type: object
    Status:
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings:
      id: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings
      properties:
        maintenancePolicies:
          additionalProperties:
            $ref: '#/components/schemas/MaintenancePolicy'
          type: object
          description: 'Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the embedded policy must define the same policy type. For details, please refer to go/cloud-saas-mw-ug. Should not be set if maintenance_policy_names is set. If only the name is needed, then only populate MaintenancePolicy.name.'
        isRollback:
          description: 'Optional. If the update call is triggered from rollback, set the value as true.'
          type: boolean
        exclude:
          type: boolean
          description: 'Optional. Exclude instance from maintenance. When true, rollout service will not attempt maintenance on the instance. Rollout service will include the instance in reported rollout progress as not attempted.'
      description: Maintenance settings associated with instance. Allows service producers and end users to assign settings that controls maintenance on this instance.
      type: object
    CancelOperationRequest:
      type: object
      properties: {}
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
    GoogleCloudMemcacheV1OperationMetadata:
      description: Represents the metadata of a long-running operation.
      id: GoogleCloudMemcacheV1OperationMetadata
      properties:
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Time when the operation was created.
        apiVersion:
          type: string
          readOnly: true
          description: Output only. API version used to start the operation.
        target:
          type: string
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
        statusDetail:
          readOnly: true
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
        cancelRequested:
          type: boolean
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        endTime:
          description: Output only. Time when the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    WeeklyMaintenanceWindow:
      description: Time window specified for weekly operations.
      properties:
        duration:
          format: google-duration
          type: string
          description: Required. Duration of the time window.
        day:
          description: Required. Allows to define schedule that runs specified day of the week.
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
          description: Required. Start time of the window in UTC.
      type: object
      id: WeeklyMaintenanceWindow
    Date:
      properties:
        month:
          format: int32
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
          type: integer
        year:
          format: int32
          type: integer
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
        day:
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          format: int32
          type: integer
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      type: object
      id: Date
    ZoneMetadata:
      properties: {}
      id: ZoneMetadata
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1Instance:
      id: GoogleCloudSaasacceleratorManagementProvidersV1Instance
      description: 'Instance represents the interface for SLM services to actuate the state of control plane resources. Example Instance in JSON, where consumer-project-number=123456, producer-project-id=cloud-sql: ```json Instance: { "name": "projects/123456/locations/us-east1/instances/prod-instance", "create_time": { "seconds": 1526406431, }, "labels": { "env": "prod", "foo": "bar" }, "state": READY, "software_versions": { "software_update": "cloud-sql-09-28-2018", }, "maintenance_policy_names": { "UpdatePolicy": "projects/123456/locations/us-east1/maintenancePolicies/prod-update-policy", } "tenant_project_id": "cloud-sql-test-tenant", "producer_metadata": { "cloud-sql-tier": "basic", "cloud-sql-instance-size": "1G", }, "provisioned_resources": [ { "resource-type": "compute-instance", "resource-url": "https://www.googleapis.com/compute/v1/projects/cloud-sql/zones/us-east1-b/instances/vm-1", } ], "maintenance_schedules": { "csa_rollout": { "start_time": { "seconds": 1526406431, }, "end_time": { "seconds": 1535406431, }, }, "ncsa_rollout": { "start_time": { "seconds": 1526406431, }, "end_time": { "seconds": 1535406431, }, } }, "consumer_defined_name": "my-sql-instance1", } ``` LINT.IfChange'
      properties:
        labels:
          additionalProperties:
            type: string
          description: 'Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.'
          type: object
        consumerDefinedName:
          description: consumer_defined_name is the name of the instance set by the service consumers. Generally this is different from the `name` field which reperesents the system-assigned id of the instance which the service consumers do not recognize. This is a required field for tenants onboarding to Maintenance Window notifications (go/slm-rollout-maintenance-policies#prerequisites).
          type: string
        state:
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - REPAIRING
            - DELETING
            - ERROR
          description: Output only. Current lifecycle state of the resource (e.g. if it's being created or ready to use).
          enumDescriptions:
            - Unspecified state.
            - Instance is being created.
            - Instance has been created and is ready to use.
            - Instance is being updated.
            - Instance is unheathy and under repair.
            - Instance is being deleted.
            - Instance encountered an error and is in indeterministic state.
        softwareVersions:
          type: object
          description: Software versions that are used to deploy this instance. This can be mutated by rollout services.
          additionalProperties:
            type: string
        slmInstanceTemplate:
          type: string
          description: Link to the SLM instance template. Only populated when updating SLM instances via SSA's Actuation service adaptor. Service producers with custom control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead they should use software_versions.
        notificationParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter'
          description: Optional. notification_parameter are information that service producers may like to include that is not relevant to Rollout. This parameter will only be passed to Gamma and Cloud Logging for notification/logging purpose.
        createTime:
          type: string
          format: google-datetime
          description: Output only. Timestamp when the resource was created.
          readOnly: true
        maintenanceSettings:
          description: Optional. The MaintenanceSettings associated with instance.
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings'
        maintenancePolicyNames:
          description: 'Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the referenced policy must define the same policy type. For details, please refer to go/cloud-saas-mw-ug. Should not be set if maintenance_settings.maintenance_policies is set.'
          additionalProperties:
            type: string
          type: object
        tenantProjectId:
          readOnly: true
          type: string
          description: Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.
        sloMetadata:
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata'
          readOnly: true
          description: Output only. SLO metadata for instance classification in the Standardized dataplane SLO platform. See go/cloud-ssa-standard-slo for feature description.
        maintenanceSchedules:
          description: The MaintenanceSchedule contains the scheduling information of published maintenance schedule with same key as software_versions.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule'
        name:
          description: 'Unique name of the resource. It uses the form: `projects/{project_number}/locations/{location_id}/instances/{instance_id}` Note: This name is passed, stored and logged across the rollout system. So use of consumer project_id or any other consumer PII in the name is strongly discouraged for wipeout (go/wipeout) compliance. See go/elysium/project_ids#storage-guidance for more details.'
          type: string
        provisionedResources:
          description: 'Output only. The list of data plane resources provisioned for this instance, e.g. compute VMs. See go/get-instance-metadata.'
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource'
        producerMetadata:
          type: object
          description: Output only. Custom string attributes used primarily to expose producer-specific information in monitoring dashboards. See go/get-instance-metadata.
          readOnly: true
          additionalProperties:
            type: string
        updateTime:
          description: Output only. Timestamp when the resource was last modified.
          format: google-datetime
          type: string
          readOnly: true
        instanceType:
          type: string
          description: 'Optional. The instance_type of this instance of format: projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}. Instance Type represents a high-level tier or SKU of the service that this instance belong to. When enabled(eg: Maintenance Rollout), Rollout uses ''instance_type'' along with ''software_versions'' to determine whether instance needs an update or not.'
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility:
      type: object
      id: GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility
      description: 'SloEligibility is a tuple containing eligibility value: true if an instance is eligible for SLO calculation or false if it should be excluded from all SLO-related calculations along with a user-defined reason.'
      properties:
        eligible:
          description: Whether an instance is eligible or ineligible.
          type: boolean
        reason:
          description: 'User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed.'
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: A list of locations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
    LocationMetadata:
      description: Metadata for the given google.cloud.location.Location.
      properties:
        availableZones:
          additionalProperties:
            $ref: '#/components/schemas/ZoneMetadata'
          readOnly: true
          type: object
          description: 'Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by GCE. These keys can be specified in the `zones` field when creating a Memcached instance.'
      type: object
      id: LocationMetadata
  parameters:
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.memcache.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    instances:
      id: google.memcache.instances
      name: instances
      title: Instances
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reschedule_maintenance:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:rescheduleMaintenance/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        apply_parameters:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:applyParameters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_parameters:
      id: google.memcache.instances_parameters
      name: instances_parameters
      title: Instances Parameters
      methods:
        update_parameters:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:updateParameters/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: google.memcache.operations
      name: operations
      title: Operations
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets information about a location.
      operationId: memcache.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: memcache.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}':
    parameters: *ref_1
    patch:
      description: Updates an existing Instance in a given project and location.
      operationId: memcache.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Instance.
      operationId: memcache.projects.locations.instances.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a single Instance.
      operationId: memcache.projects.locations.instances.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/instances':
    parameters: *ref_1
    get:
      description: Lists Instances in a given location.
      operationId: memcache.projects.locations.instances.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: instances
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.instances
    post:
      description: Creates a new Instance in a given location.
      operationId: memcache.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rescheduleMaintenance':
    parameters: *ref_1
    post:
      description: Reschedules upcoming maintenance event.
      operationId: memcache.projects.locations.instances.rescheduleMaintenance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleMaintenanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: reschedule_maintenance
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:applyParameters':
    parameters: *ref_1
    post:
      description: '`ApplyParameters` restarts the set of specified nodes in order to update them to the current set of parameters for the Memcached Instance.'
      operationId: memcache.projects.locations.instances.applyParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyParametersRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: apply_parameters
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateParameters':
    parameters: *ref_1
    patch:
      description: 'Updates the defined Memcached parameters for an existing instance. This method only stages the parameters, it must be followed by `ApplyParameters` to apply the parameters to nodes of the Memcached instance.'
      operationId: memcache.projects.locations.instances.updateParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateParametersRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_parameters
      x-stackQL-method: update_parameters
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: memcache.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: memcache.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: memcache.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: memcache.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
