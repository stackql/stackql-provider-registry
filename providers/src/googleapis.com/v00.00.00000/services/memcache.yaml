openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Memorystore for Memcached API
  description: Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.
  version: v1
  x-discovery-doc-revision: '20230103'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/memorystore/
servers:
  - url: https://memcache.googleapis.com
components:
  schemas:
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule:
      description: Maintenance schedule which is exposed to customer and potentially end user, indicating published upcoming future maintenance schedule
      properties:
        canReschedule:
          description: This field is deprecated, and will be always set to true since reschedule can happen multiple times now. This field should not be removed until all service producers remove this for their customers.
          type: boolean
        startTime:
          description: The scheduled start time for the maintenance.
          type: string
          format: google-datetime
        rolloutManagementPolicy:
          type: string
          description: The rollout management policy this maintenance schedule is associated with. When doing reschedule update request, the reschedule should be against this given policy.
        endTime:
          description: The scheduled end time for the maintenance.
          type: string
          format: google-datetime
        scheduleDeadlineTime:
          format: google-datetime
          type: string
          description: schedule_deadline_time is the time deadline any schedule start time cannot go beyond, including reschedule. It's normally the initial schedule start time plus maintenance window length (1 day or 1 week). Maintenance cannot be scheduled to start beyond this deadline.
      type: object
      id: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule
    Location:
      id: Location
      properties:
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      type: object
      description: A resource that represents Google Cloud Platform location.
    GoogleCloudMemcacheV1MaintenancePolicy:
      type: object
      id: GoogleCloudMemcacheV1MaintenancePolicy
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time when the policy was updated.
          type: string
        description:
          description: Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
          type: string
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time when the policy was created.
        weeklyMaintenanceWindow:
          items:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
          type: array
          description: Required. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_maintenance_windows is expected to be one.
      description: Maintenance policy per instance.
    RescheduleMaintenanceRequest:
      type: object
      id: RescheduleMaintenanceRequest
      description: Request for RescheduleMaintenance.
      properties:
        scheduleTime:
          format: google-datetime
          type: string
          description: Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example `2012-11-15T16:19:00.094Z`.
        rescheduleType:
          description: Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well.
          enumDescriptions:
            - Not set.
            - If the user wants to schedule the maintenance to happen now.
            - If the user wants to use the existing maintenance policy to find the next available window.
            - If the user wants to reschedule the maintenance to a specific time.
          type: string
          enum:
            - RESCHEDULE_TYPE_UNSPECIFIED
            - IMMEDIATE
            - NEXT_AVAILABLE_WINDOW
            - SPECIFIC_TIME
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings:
      properties:
        exclude:
          description: Optional. Exclude instance from maintenance. When true, rollout service will not attempt maintenance on the instance. Rollout service will include the instance in reported rollout progress as not attempted.
          type: boolean
        maintenancePolicies:
          description: Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the embedded policy must define the same policy type. For complete details of MaintenancePolicy, please refer to go/cloud-saas-mw-ug. If only the name is needed, then only populate MaintenancePolicy.name.
          additionalProperties:
            $ref: '#/components/schemas/MaintenancePolicy'
          type: object
        isRollback:
          type: boolean
          description: Optional. If the update call is triggered from rollback, set the value as true.
      type: object
      id: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings
      description: Maintenance settings associated with instance. Allows service producers and end users to assign settings that controls maintenance on this instance.
    Instance:
      type: object
      properties:
        maintenancePolicy:
          description: The maintenance policy for the instance. If not provided, the maintenance event will be performed based on Memorystore internal rollout schedule.
          $ref: '#/components/schemas/GoogleCloudMemcacheV1MaintenancePolicy'
        instanceMessages:
          description: List of messages that describe the current state of the Memcached instance.
          items:
            $ref: '#/components/schemas/InstanceMessage'
          type: array
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the instance was created.
          format: google-datetime
        discoveryEndpoint:
          type: string
          readOnly: true
          description: Output only. Endpoint for the Discovery API.
        displayName:
          description: User provided name for the instance, which is only used for display purposes. Cannot be more than 80 characters.
          type: string
        labels:
          description: Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          additionalProperties:
            type: string
          type: object
        memcacheNodes:
          type: array
          description: Output only. List of Memcached nodes. Refer to Node message for more details.
          readOnly: true
          items:
            $ref: '#/components/schemas/Node'
        parameters:
          $ref: '#/components/schemas/MemcacheParameters'
          description: User defined parameters to apply to the memcached process on each node.
        nodeCount:
          format: int32
          description: Required. Number of nodes in the Memcached instance.
          type: integer
        nodeConfig:
          description: Required. Configuration for Memcached nodes.
          $ref: '#/components/schemas/NodeConfig'
        memcacheFullVersion:
          type: string
          readOnly: true
          description: Output only. The full version of memcached server running on this instance. System automatically determines the full memcached version for an instance based on the input MemcacheVersion. The full version format will be "memcached-1.5.16".
        memcacheVersion:
          enumDescriptions:
            - ''
            - Memcached 1.5 version.
          description: The major version of Memcached software. If not provided, latest supported version will be used. Currently the latest supported major version is `MEMCACHE_1_5`. The minor version will be automatically determined by our system based on the latest supported minor version.
          type: string
          enum:
            - MEMCACHE_VERSION_UNSPECIFIED
            - MEMCACHE_1_5
        state:
          readOnly: true
          enumDescriptions:
            - State not set.
            - Memcached instance is being created.
            - Memcached instance has been created and ready to be used.
            - Memcached instance is updating configuration such as maintenance policy and schedule.
            - Memcached instance is being deleted.
            - Memcached instance is going through maintenance, e.g. data plane rollout.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - PERFORMING_MAINTENANCE
          description: Output only. The state of this Memcached instance.
          type: string
        maintenanceSchedule:
          readOnly: true
          description: Output only. Published maintenance schedule.
          $ref: '#/components/schemas/MaintenanceSchedule'
        name:
          description: 'Required. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Memcached instances are managed and addressed at the regional level so `location_id` here refers to a Google Cloud region; however, users may choose which zones Memcached nodes should be provisioned in within an instance. Refer to zones field for more details.'
          type: string
        zones:
          items:
            type: string
          description: Zones in which Memcached nodes should be provisioned. Memcached nodes will be equally distributed across these zones. If not provided, the service will by default create nodes in all zones in the region for the instance.
          type: array
        updateTime:
          type: string
          readOnly: true
          description: Output only. The time the instance was updated.
          format: google-datetime
        authorizedNetwork:
          type: string
          description: The full name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. If left unspecified, the `default` network will be used.
      description: A Memorystore for Memcached instance
      id: Instance
    DailyCycle:
      type: object
      id: DailyCycle
      description: Time window specified for daily operations.
      properties:
        duration:
          description: Output only. Duration of the time window, set by service producer.
          format: google-duration
          type: string
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
          description: Time within the day to start the operations.
    NodeConfig:
      properties:
        memorySizeMb:
          description: Required. Memory size in MiB for each Memcached node.
          type: integer
          format: int32
        cpuCount:
          type: integer
          format: int32
          description: Required. Number of cpus per Memcached node.
      id: NodeConfig
      type: object
      description: Configuration for a Memcached Node.
    GoogleCloudMemcacheV1OperationMetadata:
      type: object
      properties:
        cancelRequested:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          type: boolean
          readOnly: true
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          type: string
          readOnly: true
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Time when the operation was created.
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        endTime:
          description: Output only. Time when the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
      id: GoogleCloudMemcacheV1OperationMetadata
      description: Represents the metadata of a long-running operation.
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      id: ListOperationsResponse
      type: object
    ListLocationsResponse:
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Locations.ListLocations.
      type: object
      id: ListLocationsResponse
    GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata:
      type: object
      description: SloMetadata contains resources required for proper SLO classification of the instance.
      properties:
        perSliEligibility:
          description: Optional. Multiple per-instance SLI eligibilities which apply for individual SLIs.
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility'
        nodes:
          description: Optional. List of nodes. Some producers need to use per-node metadata to calculate SLO. This field allows such producers to publish per-node SLO meta data, which will be consumed by SSA Eligibility Exporter and published in the form of per node metric to Monarch.
          items:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata'
          type: array
        tier:
          description: Name of the SLO tier the Instance belongs to. This name will be expected to match the tiers specified in the service SLO configuration. Field is mandatory and must not be empty.
          type: string
      id: GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata
    UpdatePolicy:
      description: Maintenance policy applicable to instance updates.
      id: UpdatePolicy
      properties:
        denyMaintenancePeriods:
          description: Deny Maintenance Period that is applied to resource to indicate when maintenance is forbidden. User can specify zero or more non-overlapping deny periods. Maximum number of deny_maintenance_periods expected is one.
          items:
            $ref: '#/components/schemas/DenyMaintenancePeriod'
          type: array
        window:
          description: Optional. Maintenance window that is applied to resources covered by this policy.
          $ref: '#/components/schemas/MaintenanceWindow'
        channel:
          description: Optional. Relative scheduling channel applied to resource.
          enumDescriptions:
            - Unspecified channel.
            - Early channel within a customer project.
            - Later channel within a customer project.
            - '! ! The follow channels can ONLY be used if you adopt the new MW system! ! ! NOTE: all WEEK channels are assumed to be under a weekly window. ! There is currently no dedicated channel definitions for Daily windows. ! If you use Daily window, the system will assume a 1d (24Hours) advanced ! notification period b/w EARLY and LATER. ! We may consider support more flexible daily channel specifications in ! the future. WEEK1 == EARLIER with minimum 7d advanced notification. {7d, 14d} The system will treat them equally and will use WEEK1 whenever it can. New customers are encouraged to use this channel annotation.'
            - WEEK2 == LATER with minimum 14d advanced notification {14d, 21d}.
            - WEEK5 == 40d support. minimum 35d advanced notification {35d, 42d}.
          enum:
            - UPDATE_CHANNEL_UNSPECIFIED
            - EARLIER
            - LATER
            - WEEK1
            - WEEK2
            - WEEK5
          type: string
      type: object
    Node:
      id: Node
      properties:
        state:
          description: Output only. Current state of the Memcached node.
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          enumDescriptions:
            - Node state is not set.
            - Node is being created.
            - Node has been created and ready to be used.
            - Node is being deleted.
            - Node is being updated.
        host:
          readOnly: true
          type: string
          description: Output only. Hostname or IP address of the Memcached node used by the clients to connect to the Memcached server on this node.
        port:
          type: integer
          description: Output only. The port number of the Memcached server on this node.
          readOnly: true
          format: int32
        parameters:
          description: User defined parameters currently applied to the node.
          $ref: '#/components/schemas/MemcacheParameters'
        zone:
          description: Output only. Location (GCP Zone) for the Memcached node.
          type: string
          readOnly: true
        nodeId:
          readOnly: true
          type: string
          description: Output only. Identifier of the Memcached node. The node id does not include project or location like the Memcached instance name.
      type: object
    ApplyParametersRequest:
      properties:
        nodeIds:
          description: Nodes to which the instance-level parameter group is applied.
          type: array
          items:
            type: string
        applyAll:
          type: boolean
          description: Whether to apply instance-level parameter group to all nodes. If set to true, users are restricted from specifying individual nodes, and `ApplyParameters` updates all nodes within the instance.
      type: object
      id: ApplyParametersRequest
      description: Request for ApplyParameters.
    MaintenanceWindow:
      properties:
        weeklyCycle:
          description: Weekly cycle.
          $ref: '#/components/schemas/WeeklyCycle'
        dailyCycle:
          description: Daily cycle.
          $ref: '#/components/schemas/DailyCycle'
      type: object
      description: MaintenanceWindow definition.
      id: MaintenanceWindow
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      id: Empty
      properties: {}
    GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource:
      description: Describes provisioned dataplane resources.
      properties:
        resourceType:
          description: 'Type of the resource. This can be either a GCP resource or a custom one (e.g. another cloud provider''s VM). For GCP compute resources use singular form of the names listed in GCP compute API documentation (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with ''compute-'', for example: ''compute-instance'', ''compute-disk'', ''compute-autoscaler''.'
          type: string
        resourceUrl:
          description: URL identifying the resource, e.g. "https://www.googleapis.com/compute/v1/projects/...)".
          type: string
      id: GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata:
      id: GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata
      description: Node information for custom per-node SLO implementations. SSA does not support per-node SLO, but producers can populate per-node information in SloMetadata for custom precomputations. SSA Eligibility Exporter will emit per-node metric based on this information.
      properties:
        location:
          type: string
          description: The location of the node, if different from instance location.
        nodeId:
          type: string
          description: The id of the node. This should be equal to SaasInstanceNode.node_id.
        perSliEligibility:
          description: If present, this will override eligibility for the node coming from instance or exclusions for specified SLIs.
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility'
      type: object
    WeeklyMaintenanceWindow:
      properties:
        duration:
          type: string
          description: Required. Duration of the time window.
          format: google-duration
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
          description: Required. Start time of the window in UTC.
        day:
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          type: string
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          description: Required. Allows to define schedule that runs specified day of the week.
      id: WeeklyMaintenanceWindow
      description: Time window specified for weekly operations.
      type: object
    ListInstancesResponse:
      type: object
      description: Response for ListInstances.
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/Instance'
          description: A list of Memcached instances in the project in the specified location, or across all locations. If the `location_id` in the parent field of the request is "-", all regions available to the project are queried, and the results aggregated.
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
      id: ListInstancesResponse
    ZoneMetadata:
      type: object
      id: ZoneMetadata
      properties: {}
    Operation:
      type: object
      properties:
        response:
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        metadata:
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
    LocationMetadata:
      id: LocationMetadata
      description: Metadata for the given google.cloud.location.Location.
      properties:
        availableZones:
          readOnly: true
          type: object
          description: Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by GCE. These keys can be specified in the `zones` field when creating a Memcached instance.
          additionalProperties:
            $ref: '#/components/schemas/ZoneMetadata'
      type: object
    MaintenancePolicy:
      id: MaintenancePolicy
      properties:
        updatePolicy:
          description: Maintenance policy applicable to instance update.
          $ref: '#/components/schemas/UpdatePolicy'
        state:
          enumDescriptions:
            - Unspecified state.
            - Resource is ready to be used.
            - Resource is being deleted. It can no longer be attached to instances.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - DELETING
          type: string
          description: Optional. The state of the policy.
        labels:
          additionalProperties:
            type: string
          type: object
          description: Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The time when the resource was updated.
        createTime:
          type: string
          description: Output only. The time when the resource was created.
          format: google-datetime
        name:
          type: string
          description: 'Required. MaintenancePolicy name using the form: `projects/{project_id}/locations/{location_id}/maintenancePolicies/{maintenance_policy_id}` where {project_id} refers to a GCP consumer project ID, {location_id} refers to a GCP region/zone, {maintenance_policy_id} must be 1-63 characters long and match the regular expression `[a-z0-9]([-a-z0-9]*[a-z0-9])?`.'
        description:
          type: string
          description: Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
      type: object
      description: LINT.IfChange Defines policies to service maintenance events.
    UpdateParametersRequest:
      type: object
      id: UpdateParametersRequest
      description: Request for UpdateParameters.
      properties:
        parameters:
          $ref: '#/components/schemas/MemcacheParameters'
          description: The parameters to apply to the instance.
        updateMask:
          type: string
          description: Required. Mask of fields to update.
          format: google-fieldmask
    GoogleCloudMemcacheV1ZoneMetadata:
      properties: {}
      type: object
      id: GoogleCloudMemcacheV1ZoneMetadata
    MemcacheParameters:
      properties:
        id:
          readOnly: true
          description: Output only. The unique ID associated with this set of parameters. Users can use this id to determine if the parameters associated with the instance differ from the parameters associated with the nodes. A discrepancy between parameter ids can inform users that they may need to take action to apply parameters on nodes.
          type: string
        params:
          description: User defined set of parameters to use in the memcached process.
          type: object
          additionalProperties:
            type: string
      type: object
      id: MemcacheParameters
    GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility:
      description: 'SloEligibility is a tuple containing eligibility value: true if an instance is eligible for SLO calculation or false if it should be excluded from all SLO-related calculations along with a user-defined reason.'
      type: object
      id: GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility
      properties:
        eligible:
          type: boolean
          description: Whether an instance is eligible or ineligible.
        reason:
          description: User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed.
          type: string
    GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility:
      type: object
      properties:
        eligibilities:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility'
          description: An entry in the eligibilities map specifies an eligibility for a particular SLI for the given instance. The SLI key in the name must be a valid SLI name specified in the Eligibility Exporter binary flags otherwise an error will be emitted by Eligibility Exporter and the oncaller will be alerted. If an SLI has been defined in the binary flags but the eligibilities map does not contain it, the corresponding SLI time series will not be emitted by the Eligibility Exporter. This ensures a smooth rollout and compatibility between the data produced by different versions of the Eligibility Exporters. If eligibilities map contains a key for an SLI which has not been declared in the binary flags, there will be an error message emitted in the Eligibility Exporter log and the metric for the SLI in question will not be emitted.
          type: object
      id: GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility
      description: PerSliSloEligibility is a mapping from an SLI name to eligibility.
    WeeklyCycle:
      type: object
      properties:
        schedule:
          items:
            $ref: '#/components/schemas/Schedule'
          description: User can specify multiple windows in a week. Minimum of 1 window.
          type: array
      description: Time window specified for weekly operations.
      id: WeeklyCycle
    GoogleCloudSaasacceleratorManagementProvidersV1Instance:
      id: GoogleCloudSaasacceleratorManagementProvidersV1Instance
      properties:
        maintenanceSchedules:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule'
          type: object
          description: The MaintenanceSchedule contains the scheduling information of published maintenance schedule with same key as software_versions.
        state:
          type: string
          enumDescriptions:
            - Unspecified state.
            - Instance is being created.
            - Instance has been created and is ready to use.
            - Instance is being updated.
            - Instance is unheathy and under repair.
            - Instance is being deleted.
            - Instance encountered an error and is in indeterministic state.
          description: Output only. Current lifecycle state of the resource (e.g. if it's being created or ready to use).
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - REPAIRING
            - DELETING
            - ERROR
          readOnly: true
        notificationParameters:
          description: Optional. notification_parameter are information that service producers may like to include that is not relevant to Rollout. This parameter will only be passed to Gamma and Cloud Logging for notification/logging purpose.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter'
          type: object
        softwareVersions:
          additionalProperties:
            type: string
          description: Software versions that are used to deploy this instance. This can be mutated by rollout services.
          type: object
        name:
          type: string
          description: 'Unique name of the resource. It uses the form: `projects/{project_number}/locations/{location_id}/instances/{instance_id}` Note: This name is passed, stored and logged across the rollout system. So use of consumer project_id or any other consumer PII in the name is strongly discouraged for wipeout (go/wipeout) compliance. See go/elysium/project_ids#storage-guidance for more details.'
        maintenancePolicyNames:
          type: object
          additionalProperties:
            type: string
          description: Optional. Deprecated. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the referenced policy must define the same policy type. For complete details of MaintenancePolicy, please refer to go/cloud-saas-mw-ug.
        sloMetadata:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata'
          description: Output only. SLO metadata for instance classification in the Standardized dataplane SLO platform. See go/cloud-ssa-standard-slo for feature description.
        tenantProjectId:
          description: Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.
          type: string
          readOnly: true
        labels:
          additionalProperties:
            type: string
          type: object
          description: Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.
        instanceType:
          description: 'Optional. The instance_type of this instance of format: projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}. Instance Type represents a high-level tier or SKU of the service that this instance belong to. When enabled(eg: Maintenance Rollout), Rollout uses ''instance_type'' along with ''software_versions'' to determine whether instance needs an update or not.'
          type: string
        createTime:
          format: google-datetime
          description: Output only. Timestamp when the resource was created.
          type: string
          readOnly: true
        producerMetadata:
          additionalProperties:
            type: string
          readOnly: true
          description: Output only. Custom string attributes used primarily to expose producer-specific information in monitoring dashboards. See go/get-instance-metadata.
          type: object
        provisionedResources:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource'
          type: array
          description: Output only. The list of data plane resources provisioned for this instance, e.g. compute VMs. See go/get-instance-metadata.
        slmInstanceTemplate:
          type: string
          description: Link to the SLM instance template. Only populated when updating SLM instances via SSA's Actuation service adaptor. Service producers with custom control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead they should use software_versions.
        maintenanceSettings:
          description: Optional. The MaintenanceSettings associated with instance.
          $ref: '#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings'
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Timestamp when the resource was last modified.
        consumerDefinedName:
          description: consumer_defined_name is the name that is set by the consumer. On the other hand Name field represents system-assigned id of an instance so consumers are not necessarily aware of it. consumer_defined_name is used for notification/UI purposes for consumer to recognize their instances.
          type: string
      type: object
    Date:
      properties:
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          type: integer
          format: int32
        day:
          type: integer
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      id: Date
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
      type: object
      properties: {}
    GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter:
      properties:
        values:
          items:
            type: string
          description: Optional. Array of string values. e.g. instance's replica information.
          type: array
      type: object
      id: GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter
      description: Contains notification related data.
    OperationMetadata:
      properties:
        endTime:
          description: Output only. Time when the operation finished running.
          format: google-datetime
          type: string
          readOnly: true
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        cancelRequested:
          readOnly: true
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          type: boolean
        target:
          readOnly: true
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Time when the operation was created.
        apiVersion:
          description: Output only. API version used to start the operation.
          type: string
          readOnly: true
        verb:
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
          type: string
      id: OperationMetadata
      description: Represents the metadata of a long-running operation.
      type: object
    MaintenanceSchedule:
      id: MaintenanceSchedule
      description: Upcoming maintenance schedule.
      type: object
      properties:
        scheduleDeadlineTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The deadline that the maintenance schedule start time can not go beyond, including reschedule.
        endTime:
          format: google-datetime
          description: Output only. The end time of any upcoming scheduled maintenance for this instance.
          readOnly: true
          type: string
        startTime:
          description: Output only. The start time of any upcoming scheduled maintenance for this instance.
          readOnly: true
          format: google-datetime
          type: string
    Status:
      type: object
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
    InstanceMessage:
      type: object
      properties:
        message:
          description: Message on memcached instance which will be exposed to users.
          type: string
        code:
          type: string
          enumDescriptions:
            - Message Code not set.
            - Memcached nodes are distributed unevenly.
          enum:
            - CODE_UNSPECIFIED
            - ZONE_DISTRIBUTION_UNBALANCED
          description: A code that correspond to one type of user-facing message.
      id: InstanceMessage
    Schedule:
      id: Schedule
      properties:
        duration:
          format: google-duration
          description: Output only. Duration of the time window, set by service producer.
          type: string
        startTime:
          description: Time within the window to start the operations.
          $ref: '#/components/schemas/TimeOfDay'
        day:
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          type: string
          description: Allows to define schedule that runs specified day of the week.
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
      type: object
      description: Configure the schedule.
    DenyMaintenancePeriod:
      description: DenyMaintenancePeriod definition. Maintenance is forbidden within the deny period. The start_date must be less than the end_date.
      properties:
        endDate:
          $ref: '#/components/schemas/Date'
          description: 'Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be before the end.'
        time:
          $ref: '#/components/schemas/TimeOfDay'
          description: 'Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: * Full time. * All zeros for 00:00:00 UTC'
        startDate:
          $ref: '#/components/schemas/Date'
          description: 'Deny period start date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be the same or after the start.'
      id: DenyMaintenancePeriod
      type: object
    GoogleCloudMemcacheV1LocationMetadata:
      properties:
        availableZones:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudMemcacheV1ZoneMetadata'
          description: Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by GCE. These keys can be specified in the `zones` field when creating a Memcached instance.
          type: object
          readOnly: true
      description: Metadata for the given google.cloud.location.Location.
      type: object
      id: GoogleCloudMemcacheV1LocationMetadata
    TimeOfDay:
      type: object
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
      properties:
        nanos:
          format: int32
          type: integer
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
        minutes:
          type: integer
          description: Minutes of hour of day. Must be from 0 to 59.
          format: int32
        hours:
          type: integer
          format: int32
          description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
      id: TimeOfDay
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations:
      id: google.memcache.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    instances:
      id: google.memcache.instances
      name: instances
      title: Instances
      methods:
        projects_locations_instances_rescheduleMaintenance:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:rescheduleMaintenance/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_updateParameters:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:updateParameters/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_applyParameters:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:applyParameters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_delete'
    operations:
      id: google.memcache.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
    get:
      description: Gets information about a location.
      operationId: memcache.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: memcache.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rescheduleMaintenance:
    parameters: *ref_1
    post:
      description: Reschedules upcoming maintenance event.
      operationId: memcache.projects.locations.instances.rescheduleMaintenance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleMaintenanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    parameters: *ref_1
    delete:
      description: Deletes a single Instance.
      operationId: memcache.projects.locations.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: delete
    patch:
      description: Updates an existing Instance in a given project and location.
      operationId: memcache.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Instance.
      operationId: memcache.projects.locations.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances:
    parameters: *ref_1
    post:
      description: Creates a new Instance in a given location.
      operationId: memcache.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: insert
    get:
      description: Lists Instances in a given location.
      operationId: memcache.projects.locations.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateParameters:
    parameters: *ref_1
    patch:
      description: Updates the defined Memcached parameters for an existing instance. This method only stages the parameters, it must be followed by `ApplyParameters` to apply the parameters to nodes of the Memcached instance.
      operationId: memcache.projects.locations.instances.updateParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateParametersRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:applyParameters:
    parameters: *ref_1
    post:
      description: '`ApplyParameters` restarts the set of specified nodes in order to update them to the current set of parameters for the Memcached Instance.'
      operationId: memcache.projects.locations.instances.applyParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyParametersRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: memcache.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: memcache.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: memcache.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: memcache.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
