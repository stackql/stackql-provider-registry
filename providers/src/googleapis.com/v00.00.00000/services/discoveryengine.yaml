openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Discovery Engine API
  description: Discovery Engine API.
  version: v1
  x-discovery-doc-revision: '20240906'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/generative-ai-app-builder/docs/
servers:
  - url: https://discoveryengine.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    GoogleLongrunningCancelOperationRequest:
      id: GoogleLongrunningCancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1CompleteQueryResponse:
      id: GoogleCloudDiscoveryengineV1CompleteQueryResponse
      description: Response message for CompletionService.CompleteQuery method.
      type: object
      properties:
        querySuggestions:
          description: >-
            Results of the matched query suggestions. The result list is ordered
            and the first result is a top suggestion.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1CompleteQueryResponseQuerySuggestion
        tailMatchTriggered:
          description: >-
            True if the returned suggestions are all tail suggestions. For tail
            matching to be triggered, include_tail_suggestions in the request
            must be true and there must be no suggestions that match the full
            query.
          type: boolean
    GoogleCloudDiscoveryengineV1CompleteQueryResponseQuerySuggestion:
      id: GoogleCloudDiscoveryengineV1CompleteQueryResponseQuerySuggestion
      description: Suggestions as search queries.
      type: object
      properties:
        suggestion:
          description: The suggestion for the query.
          type: string
        completableFieldPaths:
          description: >-
            The unique document field paths that serve as the source of this
            suggestion if it was generated from completable fields. This field
            is only populated for the document-completable model.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequest:
      id: GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequest
      description: >-
        Request message for CompletionService.ImportSuggestionDenyListEntries
        method.
      type: object
      properties:
        inlineSource:
          description: >-
            The Inline source for the input content for suggestion deny list
            entries.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequestInlineSource
        gcsSource:
          description: >-
            Cloud Storage location for the input content. Only 1 file can be
            specified that contains all entries to import. Supported values
            `gcs_source.schema` for autocomplete suggestion deny list entry
            imports: * `suggestion_deny_list` (default): One JSON
            [SuggestionDenyListEntry] per line.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1GcsSource'
    GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequestInlineSource:
      id: >-
        GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequestInlineSource
      description: The inline source for SuggestionDenyListEntry.
      type: object
      properties:
        entries:
          description: >-
            Required. A list of all denylist entries to import. Max of 1000
            items.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SuggestionDenyListEntry
    GoogleCloudDiscoveryengineV1SuggestionDenyListEntry:
      id: GoogleCloudDiscoveryengineV1SuggestionDenyListEntry
      description: >-
        Suggestion deny list entry identifying the phrase to block from
        suggestions and the applied operation for the phrase.
      type: object
      properties:
        blockPhrase:
          description: >-
            Required. Phrase to block from suggestions served. Can be maximum
            125 characters.
          type: string
        matchOperator:
          description: >-
            Required. The match operator to apply for this phrase. Whether to
            block the exact phrase, or block any suggestions containing this
            phrase.
          type: string
          enumDescriptions:
            - Default value. Should not be used
            - >-
              If the suggestion is an exact match to the block_phrase, then
              block it.
            - If the suggestion contains the block_phrase, then block it.
          enum:
            - MATCH_OPERATOR_UNSPECIFIED
            - EXACT_MATCH
            - CONTAINS
    GoogleCloudDiscoveryengineV1GcsSource:
      id: GoogleCloudDiscoveryengineV1GcsSource
      description: Cloud Storage location for input content.
      type: object
      properties:
        inputUris:
          description: >-
            Required. Cloud Storage URIs to input files. Each URI can be up to
            2000 characters long. URIs can match the full object path (for
            example, `gs://bucket/directory/object.json`) or a pattern matching
            one or more files, such as `gs://bucket/directory/*.json`. A request
            can contain at most 100 files (or 100,000 files if `data_schema` is
            `content`). Each file can be up to 2 GB (or 100 MB if `data_schema`
            is `content`).
          type: array
          items:
            type: string
        dataSchema:
          description: >-
            The schema to use when parsing the data from the source. Supported
            values for document imports: * `document` (default): One JSON
            Document per line. Each document must have a valid Document.id. *
            `content`: Unstructured data (e.g. PDF, HTML). Each file matched by
            `input_uris` becomes a document, with the ID set to the first 128
            bits of SHA256(URI) encoded as a hex string. * `custom`: One custom
            data JSON per row in arbitrary format that conforms to the defined
            Schema of the data store. This can only be used by the GENERIC Data
            Store vertical. * `csv`: A CSV file with header conforming to the
            defined Schema of the data store. Each entry after the header is
            imported as a Document. This can only be used by the GENERIC Data
            Store vertical. Supported values for user event imports: *
            `user_event` (default): One JSON UserEvent per line.
          type: string
    GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesRequest:
      id: GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesRequest
      description: >-
        Request message for CompletionService.PurgeSuggestionDenyListEntries
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequest:
      id: GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequest
      description: >-
        Request message for CompletionService.ImportCompletionSuggestions
        method.
      type: object
      properties:
        inlineSource:
          description: The Inline source for suggestion entries.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequestInlineSource
        gcsSource:
          description: Cloud Storage location for the input content.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1GcsSource'
        bigquerySource:
          description: BigQuery input source.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1BigQuerySource'
        errorConfig:
          description: The desired location of errors incurred during the Import.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig'
    GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequestInlineSource:
      id: >-
        GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequestInlineSource
      description: The inline source for CompletionSuggestions.
      type: object
      properties:
        suggestions:
          description: >-
            Required. A list of all denylist entries to import. Max of 1000
            items.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1CompletionSuggestion
    GoogleCloudDiscoveryengineV1CompletionSuggestion:
      id: GoogleCloudDiscoveryengineV1CompletionSuggestion
      description: Autocomplete suggestions that are imported from Customer.
      type: object
      properties:
        globalScore:
          description: >-
            Global score of this suggestion. Control how this suggestion would
            be scored / ranked.
          type: number
          format: double
        frequency:
          description: >-
            Frequency of this suggestion. Will be used to rank suggestions when
            score is not available.
          type: string
          format: int64
        suggestion:
          description: Required. The suggestion text.
          type: string
        languageCode:
          description: BCP-47 language code of this suggestion.
          type: string
        groupId:
          description: >-
            If two suggestions have the same groupId, they will not be returned
            together. Instead the one ranked higher will be returned. This can
            be used to deduplicate semantically identical suggestions.
          type: string
        groupScore:
          description: The score of this suggestion within its group.
          type: number
          format: double
        alternativePhrases:
          description: Alternative matching phrases for this suggestion.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1BigQuerySource:
      id: GoogleCloudDiscoveryengineV1BigQuerySource
      description: BigQuery source import data from.
      type: object
      properties:
        partitionDate:
          description: >-
            BigQuery time partitioned table's _PARTITIONDATE in YYYY-MM-DD
            format.
          $ref: '#/components/schemas/GoogleTypeDate'
        projectId:
          description: >-
            The project ID or the project number that contains the BigQuery
            source. Has a length limit of 128 characters. If not specified,
            inherits the project ID from the parent request.
          type: string
        datasetId:
          description: >-
            Required. The BigQuery data set to copy the data from with a length
            limit of 1,024 characters.
          type: string
        tableId:
          description: >-
            Required. The BigQuery table to copy the data from with a length
            limit of 1,024 characters.
          type: string
        gcsStagingDir:
          description: >-
            Intermediate Cloud Storage directory used for the import with a
            length limit of 2,000 characters. Can be specified if one wants to
            have the BigQuery export to a specific Cloud Storage directory.
          type: string
        dataSchema:
          description: >-
            The schema to use when parsing the data from the source. Supported
            values for user event imports: * `user_event` (default): One
            UserEvent per row. Supported values for document imports: *
            `document` (default): One Document format per row. Each document
            must have a valid Document.id and one of Document.json_data or
            Document.struct_data. * `custom`: One custom data per row in
            arbitrary format that conforms to the defined Schema of the data
            store. This can only be used by the GENERIC Data Store vertical.
          type: string
    GoogleTypeDate:
      id: GoogleTypeDate
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      type: object
      properties:
        year:
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          type: integer
          format: int32
        month:
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          type: integer
          format: int32
        day:
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1ImportErrorConfig:
      id: GoogleCloudDiscoveryengineV1ImportErrorConfig
      description: Configuration of destination for Import related errors.
      type: object
      properties:
        gcsPrefix:
          description: >-
            Cloud Storage prefix for import errors. This must be an empty,
            existing Cloud Storage directory. Import errors are written to
            sharded files in this directory, one per line, as a JSON-encoded
            `google.rpc.Status` message.
          type: string
    GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsRequest:
      id: GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsRequest
      description: Request message for CompletionService.PurgeCompletionSuggestions method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1Control:
      id: GoogleCloudDiscoveryengineV1Control
      description: >-
        Defines a conditioned behavior to employ during serving. Must be
        attached to a ServingConfig to be considered at serving time. Permitted
        actions dependent on `SolutionType`.
      type: object
      properties:
        boostAction:
          description: Defines a boost-type control
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ControlBoostAction'
        filterAction:
          description: >-
            Defines a filter-type control Currently not supported by
            Recommendation
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ControlFilterAction'
        redirectAction:
          description: Defines a redirect-type control.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1ControlRedirectAction
        synonymsAction:
          description: Treats a group of terms as synonyms of one another.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1ControlSynonymsAction
        name:
          description: >-
            Immutable. Fully qualified name
            `projects/*/locations/global/dataStore/*/controls/*`
          type: string
        displayName:
          description: >-
            Required. Human readable name. The identifier used in UI views. Must
            be UTF-8 encoded string. Length limit is 128 characters. Otherwise
            an INVALID ARGUMENT error is thrown.
          type: string
        associatedServingConfigIds:
          description: >-
            Output only. List of all ServingConfig IDs this control is attached
            to. May take up to 10 minutes to update after changes.
          readOnly: true
          type: array
          items:
            type: string
        solutionType:
          description: >-
            Required. Immutable. What solution the control belongs to. Must be
            compatible with vertical of resource. Otherwise an INVALID ARGUMENT
            error is thrown.
          type: string
          enumDescriptions:
            - Default value.
            - Used for Recommendations AI.
            - Used for Discovery Search.
            - Used for use cases related to the Generative AI agent.
            - >-
              Used for use cases related to the Generative Chat agent. It's used
              for Generative chat engine only, the associated data stores must
              enrolled with `SOLUTION_TYPE_CHAT` solution.
          enum:
            - SOLUTION_TYPE_UNSPECIFIED
            - SOLUTION_TYPE_RECOMMENDATION
            - SOLUTION_TYPE_SEARCH
            - SOLUTION_TYPE_CHAT
            - SOLUTION_TYPE_GENERATIVE_CHAT
        useCases:
          description: >-
            Specifies the use case for the control. Affects what condition
            fields can be set. Only applies to SOLUTION_TYPE_SEARCH. Currently
            only allow one use case per control. Must be set when solution_type
            is SolutionType.SOLUTION_TYPE_SEARCH.
          type: array
          items:
            type: string
            enumDescriptions:
              - Value used when unset. Will not occur in CSS.
              - Search use case. Expects the traffic has a non-empty query.
              - Browse use case. Expects the traffic has an empty query.
            enum:
              - SEARCH_USE_CASE_UNSPECIFIED
              - SEARCH_USE_CASE_SEARCH
              - SEARCH_USE_CASE_BROWSE
        conditions:
          description: >-
            Determines when the associated action will trigger. Omit to always
            apply the action. Currently only a single condition may be
            specified. Otherwise an INVALID ARGUMENT error is thrown.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Condition'
    GoogleCloudDiscoveryengineV1ControlBoostAction:
      id: GoogleCloudDiscoveryengineV1ControlBoostAction
      description: Adjusts order of products in returned list.
      type: object
      properties:
        boost:
          description: >-
            Required. Strength of the boost, which should be in [-1, 1].
            Negative boost means demotion. Default is 0.0 (No-op).
          type: number
          format: float
        filter:
          description: >-
            Required. Specifies which products to apply the boost to. If no
            filter is provided all products will be boosted (No-op). Syntax
            documentation: https://cloud.google.com/retail/docs/filter-and-order
            Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT
            error is thrown.
          type: string
        dataStore:
          description: >-
            Required. Specifies which data store's documents can be boosted by
            this control. Full data store name e.g.
            projects/123/locations/global/collections/default_collection/dataStores/default_data_store
          type: string
    GoogleCloudDiscoveryengineV1ControlFilterAction:
      id: GoogleCloudDiscoveryengineV1ControlFilterAction
      description: >-
        Specified which products may be included in results. Uses same filter as
        boost.
      type: object
      properties:
        filter:
          description: >-
            Required. A filter to apply on the matching condition results.
            Required Syntax documentation:
            https://cloud.google.com/retail/docs/filter-and-order Maximum length
            is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown.
          type: string
        dataStore:
          description: >-
            Required. Specifies which data store's documents can be filtered by
            this control. Full data store name e.g.
            projects/123/locations/global/collections/default_collection/dataStores/default_data_store
          type: string
    GoogleCloudDiscoveryengineV1ControlRedirectAction:
      id: GoogleCloudDiscoveryengineV1ControlRedirectAction
      description: Redirects a shopper to the provided URI.
      type: object
      properties:
        redirectUri:
          description: >-
            Required. The URI to which the shopper will be redirected. Required.
            URI must have length equal or less than 2000 characters. Otherwise
            an INVALID ARGUMENT error is thrown.
          type: string
    GoogleCloudDiscoveryengineV1ControlSynonymsAction:
      id: GoogleCloudDiscoveryengineV1ControlSynonymsAction
      description: >-
        Creates a set of terms that will act as synonyms of one another.
        Example: "happy" will also be considered as "glad", "glad" will also be
        considered as "happy".
      type: object
      properties:
        synonyms:
          description: >-
            Defines a set of synonyms. Can specify up to 100 synonyms. Must
            specify at least 2 synonyms. Otherwise an INVALID ARGUMENT error is
            thrown.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1Condition:
      id: GoogleCloudDiscoveryengineV1Condition
      description: Defines circumstances to be checked before allowing a behavior
      type: object
      properties:
        queryTerms:
          description: >-
            Search only A list of terms to match the query on. Maximum of 10
            query terms.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1ConditionQueryTerm
        activeTimeRange:
          description: >-
            Range of time(s) specifying when condition is active. Maximum of 10
            time ranges.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1ConditionTimeRange
    GoogleCloudDiscoveryengineV1ConditionQueryTerm:
      id: GoogleCloudDiscoveryengineV1ConditionQueryTerm
      description: Matcher for search request query
      type: object
      properties:
        value:
          description: >-
            The specific query value to match against Must be lowercase, must be
            UTF-8. Can have at most 3 space separated terms if full_match is
            true. Cannot be an empty string. Maximum length of 5000 characters.
          type: string
        fullMatch:
          description: Whether the search query needs to exactly match the query term.
          type: boolean
    GoogleCloudDiscoveryengineV1ConditionTimeRange:
      id: GoogleCloudDiscoveryengineV1ConditionTimeRange
      description: Used for time-dependent conditions.
      type: object
      properties:
        startTime:
          description: Start of time range. Range is inclusive.
          type: string
          format: google-datetime
        endTime:
          description: End of time range. Range is inclusive. Must be in the future.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1ListControlsResponse:
      id: GoogleCloudDiscoveryengineV1ListControlsResponse
      description: Response for ListControls method.
      type: object
      properties:
        controls:
          description: All the Controls for a given data store.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
        nextPageToken:
          description: Pagination token, if not returned indicates the last page.
          type: string
    GoogleCloudDiscoveryengineV1SearchRequest:
      id: GoogleCloudDiscoveryengineV1SearchRequest
      description: Request message for SearchService.Search method.
      type: object
      properties:
        branch:
          description: >-
            The branch resource name, such as
            `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`.
            Use `default_branch` as the branch ID or leave this field empty, to
            search documents under the default branch.
          type: string
        query:
          description: Raw search query.
          type: string
        imageQuery:
          description: Raw image query.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestImageQuery
        pageSize:
          description: >-
            Maximum number of Documents to return. The maximum allowed value
            depends on the data type. Values above the maximum value are coerced
            to the maximum value. * Websites with basic indexing: Default `10`,
            Maximum `25`. * Websites with advanced indexing: Default `25`,
            Maximum `50`. * Other: Default `50`, Maximum `100`. If this field is
            negative, an `INVALID_ARGUMENT` is returned.
          type: integer
          format: int32
        pageToken:
          description: >-
            A page token received from a previous SearchService.Search call.
            Provide this to retrieve the subsequent page. When paginating, all
            other parameters provided to SearchService.Search must match the
            call that provided the page token. Otherwise, an `INVALID_ARGUMENT`
            error is returned.
          type: string
        offset:
          description: >-
            A 0-indexed integer that specifies the current offset (that is,
            starting result location, amongst the Documents deemed by the API as
            relevant) in search results. This field is only considered if
            page_token is unset. If this field is negative, an
            `INVALID_ARGUMENT` is returned.
          type: integer
          format: int32
        dataStoreSpecs:
          description: >-
            Specs defining dataStores to filter on in a search call and
            configurations for those dataStores. This is only considered for
            engines with multiple dataStores use case. For single dataStore
            within an engine, they should use the specs at the top level.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestDataStoreSpec
        filter:
          description: >-
            The filter syntax consists of an expression language for
            constructing a predicate from one or more fields of the documents
            being filtered. Filter expression is case-sensitive. If this field
            is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in
            Vertex AI Search is done by mapping the LHS filter key to a key
            property defined in the Vertex AI Search backend -- this mapping is
            defined by the customer in their schema. For example a media
            customer might have a field 'name' in their schema. In this case the
            filter would look like this: filter --> name:'ANY("king kong")' For
            more information about filtering including syntax and filter
            operators, see
            [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
          type: string
        canonicalFilter:
          description: >-
            The default filter that is applied when a user performs a search
            without checking any filters on the search page. The filter applied
            to every search request when quality improvement such as query
            expansion is needed. In the case a query does not have a sufficient
            amount of results this filter will be used to determine whether or
            not to enable the query expansion flow. The original filter will
            still be used for the query expanded search. This field is strongly
            recommended to achieve high search quality. For more information
            about filter syntax, see SearchRequest.filter.
          type: string
        orderBy:
          description: >-
            The order in which documents are returned. Documents can be ordered
            by a field in an Document object. Leave it unset if ordered by
            relevance. `order_by` expression is case-sensitive. For more
            information on ordering the website search results, see [Order web
            search
            results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results).
            For more information on ordering the healthcare search results, see
            [Order healthcare search
            results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results).
            If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
          type: string
        userInfo:
          description: >-
            Information about the end user. Highly recommended for analytics.
            UserInfo.user_agent is used to deduce `device_type` for analytics.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1UserInfo'
        languageCode:
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see [Standard
            fields](https://cloud.google.com/apis/design/standard_fields). This
            field helps to better interpret the query. If a value isn't
            specified, the query language code is automatically detected, which
            may not be accurate.
          type: string
        facetSpecs:
          description: >-
            Facet specifications for faceted search. If empty, no facets are
            returned. A maximum of 100 values are allowed. Otherwise, an
            `INVALID_ARGUMENT` error is returned.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestFacetSpec
        boostSpec:
          description: >-
            Boost specification to boost certain documents. For more information
            on boosting, see
            [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestBoostSpec
        params:
          description: >-
            Additional search parameters. For public website search only,
            supported values are: * `user_country_code`: string. Default empty.
            If set to non-empty, results are restricted or boosted based on the
            location provided. For example, `user_country_code: "au"` For
            available codes see [Country
            Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes)
            * `search_type`: double. Default empty. Enables non-webpage
            searching depending on the value. The only valid non-default value
            is 1, which enables image searching. For example, `search_type: 1`
          type: object
          additionalProperties:
            type: any
        queryExpansionSpec:
          description: >-
            The query expansion specification that specifies the conditions
            under which query expansion occurs.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec
        spellCorrectionSpec:
          description: >-
            The spell correction specification that specifies the mode under
            which spell correction takes effect.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec
        userPseudoId:
          description: >-
            A unique identifier for tracking visitors. For example, this could
            be implemented with an HTTP cookie, which should be able to uniquely
            identify a visitor on a single device. This unique identifier should
            not change if the visitor logs in or out of the website. This field
            should NOT have a fixed value such as `unknown_visitor`. This should
            be the same identifier as UserEvent.user_pseudo_id and
            CompleteQueryRequest.user_pseudo_id The field must be a UTF-8
            encoded string with a length limit of 128 characters. Otherwise, an
            `INVALID_ARGUMENT` error is returned.
          type: string
        contentSearchSpec:
          description: A specification for configuring the behavior of content search.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec
        safeSearch:
          description: >-
            Whether to turn on safe search. This is only supported for website
            search.
          type: boolean
        userLabels:
          description: >-
            The user labels applied to a resource must meet the following
            requirements: * Each resource can have multiple labels, up to a
            maximum of 64. * Each label must be a key-value pair. * Keys have a
            minimum length of 1 character and a maximum length of 63 characters
            and cannot be empty. Values can be empty and have a maximum length
            of 63 characters. * Keys and values can contain only lowercase
            letters, numeric characters, underscores, and dashes. All characters
            must use UTF-8 encoding, and international characters are allowed. *
            The key portion of a label must be unique. However, you can use the
            same key with multiple resources. * Keys must start with a lowercase
            letter or international character. See [Google Cloud
            Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
            for more details.
          type: object
          additionalProperties:
            type: string
        searchAsYouTypeSpec:
          description: >-
            Search as you type configuration. Only supported for the
            IndustryVertical.MEDIA vertical.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec
        session:
          description: >-
            The session resource name. Optional. Session allows users to do
            multi-turn /search API calls or coordination between /search API
            calls and /answer API calls. Example #1 (multi-turn /search API
            calls): 1. Call /search API with the auto-session mode (see below).
            2. Call /search API with the session ID generated in the first call.
            Here, the previous search query gets considered in query standing.
            I.e., if the first query is "How did Alphabet do in 2022?" and the
            current query is "How about 2023?", the current query will be
            interpreted as "How did Alphabet do in 2023?". Example #2
            (coordination between /search API calls and /answer API calls): 1.
            Call /search API with the auto-session mode (see below). 2. Call
            /answer API with the session ID generated in the first call. Here,
            the answer generation happens in the context of the search results
            from the first search call. Auto-session mode: when
            `projects/.../sessions/-` is used, a new session gets automatically
            created. Otherwise, users can use the create-session API to create a
            session manually. Multi-turn Search feature is currently at private
            GA stage. Please use v1alpha or v1beta version instead before we
            launch this feature to public GA. Or ask for allowlisting through
            Google Support team.
          type: string
        sessionSpec:
          description: Session specification. Can be used only when `session` is set.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestSessionSpec
    GoogleCloudDiscoveryengineV1SearchRequestImageQuery:
      id: GoogleCloudDiscoveryengineV1SearchRequestImageQuery
      description: Specifies the image query input.
      type: object
      properties:
        imageBytes:
          description: >-
            Base64 encoded image bytes. Supported image formats: JPEG, PNG, and
            BMP.
          type: string
    GoogleCloudDiscoveryengineV1SearchRequestDataStoreSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestDataStoreSpec
      description: >-
        A struct to define data stores to filter on in a search call and
        configurations for those data stores. Otherwise, an `INVALID_ARGUMENT`
        error is returned.
      type: object
      properties:
        dataStore:
          description: >-
            Required. Full resource name of DataStore, such as
            `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
          type: string
    GoogleCloudDiscoveryengineV1UserInfo:
      id: GoogleCloudDiscoveryengineV1UserInfo
      description: Information of an end user.
      type: object
      properties:
        userId:
          description: >-
            Highly recommended for logged-in users. Unique identifier for
            logged-in user, such as a user name. Don't set for anonymous users.
            Always use a hashed value for this ID. Don't set the field to the
            same fixed ID for different users. This mixes the event history of
            those users together, which results in degraded model quality. The
            field must be a UTF-8 encoded string with a length limit of 128
            characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
        userAgent:
          description: >-
            User agent as included in the HTTP header. The field must be a UTF-8
            encoded string with a length limit of 1,000 characters. Otherwise,
            an `INVALID_ARGUMENT` error is returned. This should not be set when
            using the client side event reporting with GTM or JavaScript tag in
            UserEventService.CollectUserEvent or if
            UserEvent.direct_user_request is set.
          type: string
    GoogleCloudDiscoveryengineV1SearchRequestFacetSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestFacetSpec
      description: A facet specification to perform faceted search.
      type: object
      properties:
        facetKey:
          description: Required. The facet key specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestFacetSpecFacetKey
        limit:
          description: >-
            Maximum facet values that are returned for this facet. If
            unspecified, defaults to 20. The maximum allowed value is 300.
            Values above 300 are coerced to 300. For aggregation in healthcare
            search, when the [FacetKey.key] is "healthcare_aggregation_key", the
            limit will be overridden to 10,000 internally, regardless of the
            value set here. If this field is negative, an `INVALID_ARGUMENT` is
            returned.
          type: integer
          format: int32
        excludedFilterKeys:
          description: >-
            List of keys to exclude when faceting. By default, FacetKey.key is
            not excluded from the filter unless it is listed in this field.
            Listing a facet key in this field allows its values to appear as
            facet results, even when they are filtered out of search results.
            Using this field does not affect what search results are returned.
            For example, suppose there are 100 documents with the color facet
            "Red" and 200 documents with the color facet "Blue". A query
            containing the filter "color:ANY("Red")" and having "color" as
            FacetKey.key would by default return only "Red" documents in the
            search results, and also return "Red" with count 100 as the only
            color facet. Although there are also blue documents available,
            "Blue" would not be shown as an available facet value. If "color" is
            listed in "excludedFilterKeys", then the query returns the facet
            values "Red" with count 100 and "Blue" with count 200, because the
            "color" key is now excluded from the filter. Because this field
            doesn't affect search results, the search results are still
            correctly filtered to return only "Red" documents. A maximum of 100
            values are allowed. Otherwise, an `INVALID_ARGUMENT` error is
            returned.
          type: array
          items:
            type: string
        enableDynamicPosition:
          description: >-
            Enables dynamic position for this facet. If set to true, the
            position of this facet among all facets in the response is
            determined automatically. If dynamic facets are enabled, it is
            ordered together. If set to false, the position of this facet in the
            response is the same as in the request, and it is ranked before the
            facets with dynamic position enable and all dynamic facets. For
            example, you may always want to have rating facet returned in the
            response, but it's not necessarily to always display the rating
            facet at the top. In that case, you can set enable_dynamic_position
            to true so that the position of rating facet in response is
            determined automatically. Another example, assuming you have the
            following facets in the request: * "rating", enable_dynamic_position
            = true * "price", enable_dynamic_position = false * "brands",
            enable_dynamic_position = false And also you have a dynamic facets
            enabled, which generates a facet `gender`. Then the final order of
            the facets in the response can be ("price", "brands", "rating",
            "gender") or ("price", "brands", "gender", "rating") depends on how
            API orders "gender" and "rating" facets. However, notice that
            "price" and "brands" are always ranked at first and second position
            because their enable_dynamic_position is false.
          type: boolean
    GoogleCloudDiscoveryengineV1SearchRequestFacetSpecFacetKey:
      id: GoogleCloudDiscoveryengineV1SearchRequestFacetSpecFacetKey
      description: Specifies how a facet is computed.
      type: object
      properties:
        key:
          description: >-
            Required. Supported textual and numerical facet keys in Document
            object, over which the facet values are computed. Facet key is
            case-sensitive.
          type: string
        intervals:
          description: >-
            Set only if values should be bucketed into intervals. Must be set
            for facets with numerical values. Must not be set for facet with
            text values. Maximum number of intervals is 30.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Interval'
        restrictedValues:
          description: >-
            Only get facet for the given restricted values. Only supported on
            textual fields. For example, suppose "category" has three values
            "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set
            "restricted_values" to "Action > 2022", the "category" facet only
            contains "Action > 2022". Only supported on textual fields. Maximum
            is 10.
          type: array
          items:
            type: string
        prefixes:
          description: >-
            Only get facet values that start with the given string prefix. For
            example, suppose "category" has three values "Action > 2022",
            "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to "Action",
            the "category" facet only contains "Action > 2022" and "Action >
            2021". Only supported on textual fields. Maximum is 10.
          type: array
          items:
            type: string
        contains:
          description: >-
            Only get facet values that contain the given strings. For example,
            suppose "category" has three values "Action > 2022", "Action > 2021"
            and "Sci-Fi > 2022". If set "contains" to "2022", the "category"
            facet only contains "Action > 2022" and "Sci-Fi > 2022". Only
            supported on textual fields. Maximum is 10.
          type: array
          items:
            type: string
        caseInsensitive:
          description: >-
            True to make facet keys case insensitive when getting faceting
            values with prefixes or contains; false otherwise.
          type: boolean
        orderBy:
          description: >-
            The order in which documents are returned. Allowed values are: *
            "count desc", which means order by SearchResponse.Facet.values.count
            descending. * "value desc", which means order by
            SearchResponse.Facet.values.value descending. Only applies to
            textual facets. If not set, textual values are sorted in [natural
            order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical
            intervals are sorted in the order given by
            FacetSpec.FacetKey.intervals.
          type: string
    GoogleCloudDiscoveryengineV1Interval:
      id: GoogleCloudDiscoveryengineV1Interval
      description: A floating point interval.
      type: object
      properties:
        minimum:
          description: Inclusive lower bound.
          type: number
          format: double
        exclusiveMinimum:
          description: Exclusive lower bound.
          type: number
          format: double
        maximum:
          description: Inclusive upper bound.
          type: number
          format: double
        exclusiveMaximum:
          description: Exclusive upper bound.
          type: number
          format: double
    GoogleCloudDiscoveryengineV1SearchRequestBoostSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestBoostSpec
      description: Boost specification to boost certain documents.
      type: object
      properties:
        conditionBoostSpecs:
          description: >-
            Condition boost specifications. If a document matches multiple
            conditions in the specifictions, boost scores from these
            specifications are all applied and combined in a non-linear way.
            Maximum number of specifications is 20.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpec
    GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpec
      description: Boost applies to documents which match a condition.
      type: object
      properties:
        condition:
          description: >-
            An expression which specifies a boost condition. The syntax and
            supported fields are the same as a filter expression. See
            SearchRequest.filter for detail syntax and limitations. Examples: *
            To boost documents with document ID "doc_1" or "doc_2", and color
            "Red" or "Blue": `(document_id: ANY("doc_1", "doc_2")) AND (color:
            ANY("Red", "Blue"))`
          type: string
        boost:
          description: >-
            Strength of the condition boost, which should be in [-1, 1].
            Negative boost means demotion. Default is 0.0. Setting to 1.0 gives
            the document a big promotion. However, it does not necessarily mean
            that the boosted document will be the top result at all times, nor
            that other documents will be excluded. Results could still be shown
            even when none of them matches the condition. And results that are
            significantly more relevant to the search query can still trump your
            heavily favored but irrelevant documents. Setting to -1.0 gives the
            document a big demotion. However, results that are deeply relevant
            might still be shown. The document will have an upstream battle to
            get a fairly high ranking, but it is not blocked out completely.
            Setting to 0.0 means no boost applied. The boosting condition is
            ignored. Only one of the (condition, boost) combination or the
            boost_control_spec below are set. If both are set then the global
            boost is ignored and the more fine-grained boost_control_spec is
            applied.
          type: number
          format: float
        boostControlSpec:
          description: >-
            Complex specification for custom ranking based on customer defined
            attribute value.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec
    GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec:
      id: >-
        GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec
      description: >-
        Specification for custom ranking based on customer specified attribute
        value. It provides more controls for customized ranking than the simple
        (condition, boost) combination above.
      type: object
      properties:
        fieldName:
          description: >-
            The name of the field whose value will be used to determine the
            boost amount.
          type: string
        attributeType:
          description: >-
            The attribute type to be used to determine the boost amount. The
            attribute value can be derived from the field value of the specified
            field_name. In the case of numerical it is straightforward i.e.
            attribute_value = numerical_field_value. In the case of freshness
            however, attribute_value = (time.now() - datetime_field_value).
          type: string
          enumDescriptions:
            - Unspecified AttributeType.
            - >-
              The value of the numerical field will be used to dynamically
              update the boost amount. In this case, the attribute_value (the x
              value) of the control point will be the actual value of the
              numerical field for which the boost_amount is specified.
            - >-
              For the freshness use case the attribute value will be the
              duration between the current time and the date in the datetime
              field specified. The value must be formatted as an XSD
              `dayTimeDuration` value (a restricted subset of an ISO 8601
              duration value). The pattern for this is: `nDnM]`. For example,
              `5D`, `3DT12H30M`, `T24H`.
          enum:
            - ATTRIBUTE_TYPE_UNSPECIFIED
            - NUMERICAL
            - FRESHNESS
        interpolationType:
          description: >-
            The interpolation type to be applied to connect the control points
            listed below.
          type: string
          enumDescriptions:
            - >-
              Interpolation type is unspecified. In this case, it defaults to
              Linear.
            - Piecewise linear interpolation will be applied.
          enum:
            - INTERPOLATION_TYPE_UNSPECIFIED
            - LINEAR
        controlPoints:
          description: >-
            The control points used to define the curve. The monotonic function
            (defined through the interpolation_type above) passes through the
            control points listed here.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint
    GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint:
      id: >-
        GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint
      description: >-
        The control points used to define the curve. The curve defined through
        these control points can only be monotonically increasing or
        decreasing(constant values are acceptable).
      type: object
      properties:
        attributeValue:
          description: >-
            Can be one of: 1. The numerical field value. 2. The duration spec
            for freshness: The value must be formatted as an XSD
            `dayTimeDuration` value (a restricted subset of an ISO 8601 duration
            value). The pattern for this is: `nDnM]`.
          type: string
        boostAmount:
          description: >-
            The value between -1 to 1 by which to boost the score if the
            attribute_value evaluates to the value specified above.
          type: number
          format: float
    GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec
      description: >-
        Specification to determine under which conditions query expansion should
        occur.
      type: object
      properties:
        condition:
          description: >-
            The condition under which query expansion should occur. Default to
            Condition.DISABLED.
          type: string
          enumDescriptions:
            - >-
              Unspecified query expansion condition. In this case, server
              behavior defaults to Condition.DISABLED.
            - >-
              Disabled query expansion. Only the exact search query is used,
              even if SearchResponse.total_size is zero.
            - Automatic query expansion built by the Search API.
          enum:
            - CONDITION_UNSPECIFIED
            - DISABLED
            - AUTO
        pinUnexpandedResults:
          description: >-
            Whether to pin unexpanded results. If this field is set to true,
            unexpanded products are always at the top of the search results,
            followed by the expanded results.
          type: boolean
    GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec
      description: The specification for query spell correction.
      type: object
      properties:
        mode:
          description: >-
            The mode under which spell correction replaces the original search
            query. Defaults to Mode.AUTO.
          type: string
          enumDescriptions:
            - >-
              Unspecified spell correction mode. In this case, server behavior
              defaults to Mode.AUTO.
            - >-
              Search API tries to find a spelling suggestion. If a suggestion is
              found, it is put in the SearchResponse.corrected_query. The
              spelling suggestion won't be used as the search query.
            - >-
              Automatic spell correction built by the Search API. Search will be
              based on the corrected query if found.
          enum:
            - MODE_UNSPECIFIED
            - SUGGESTION_ONLY
            - AUTO
    GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec
      description: A specification for configuring the behavior of content search.
      type: object
      properties:
        snippetSpec:
          description: >-
            If `snippetSpec` is not specified, snippets are not included in the
            search response.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSnippetSpec
        summarySpec:
          description: >-
            If `summarySpec` is not specified, summaries are not included in the
            search response.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec
        extractiveContentSpec:
          description: >-
            If there is no extractive_content_spec provided, there will be no
            extractive answer in the search response.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecExtractiveContentSpec
        searchResultMode:
          description: >-
            Specifies the search result mode. If unspecified, the search result
            mode defaults to `DOCUMENTS`.
          type: string
          enumDescriptions:
            - Default value.
            - Returns documents in the search result.
            - >-
              Returns chunks in the search result. Only available if the
              DataStore.DocumentProcessingConfig.chunking_config is specified.
          enum:
            - SEARCH_RESULT_MODE_UNSPECIFIED
            - DOCUMENTS
            - CHUNKS
        chunkSpec:
          description: >-
            Specifies the chunk spec to be returned from the search response.
            Only available if the
            SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecChunkSpec
    GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSnippetSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSnippetSpec
      description: A specification for configuring snippets in a search response.
      type: object
      properties:
        maxSnippetCount:
          description: >-
            [DEPRECATED] This field is deprecated. To control snippet return,
            use `return_snippet` field. For backwards compatibility, we will
            return snippet if max_snippet_count > 0.
          deprecated: true
          type: integer
          format: int32
        referenceOnly:
          description: >-
            [DEPRECATED] This field is deprecated and will have no affect on the
            snippet.
          deprecated: true
          type: boolean
        returnSnippet:
          description: >-
            If `true`, then return snippet. If no snippet can be generated, we
            return "No snippet is available for this page." A `snippet_status`
            with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.
          type: boolean
    GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec
      description: A specification for configuring a summary returned in a search response.
      type: object
      properties:
        summaryResultCount:
          description: >-
            The number of top results to generate the summary from. If the
            number of results returned is less than `summaryResultCount`, the
            summary is generated from all of the results. At most 10 results for
            documents mode, or 50 for chunks mode, can be used to generate a
            summary. The chunks mode is used when
            SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
          type: integer
          format: int32
        includeCitations:
          description: >-
            Specifies whether to include citations in the summary. The default
            value is `false`. When this field is set to `true`, summaries
            include in-line citation numbers. Example summary including
            citations: BigQuery is Google Cloud's fully managed and completely
            serverless enterprise data warehouse [1]. BigQuery supports all data
            types, works across clouds, and has built-in machine learning and
            business intelligence, all within a unified platform [2, 3]. The
            citation numbers refer to the returned search results and are
            1-indexed. For example, [1] means that the sentence is attributed to
            the first search result. [2, 3] means that the sentence is
            attributed to both the second and third search results.
          type: boolean
        ignoreAdversarialQuery:
          description: >-
            Specifies whether to filter out adversarial queries. The default
            value is `false`. Google employs search-query classification to
            detect adversarial queries. No summary is returned if the search
            query is classified as an adversarial query. For example, a user
            might ask a question regarding negative comments about the company
            or submit a query designed to generate unsafe, policy-violating
            output. If this field is set to `true`, we skip generating summaries
            for adversarial queries and return fallback messages instead.
          type: boolean
        ignoreNonSummarySeekingQuery:
          description: >-
            Specifies whether to filter out queries that are not
            summary-seeking. The default value is `false`. Google employs
            search-query classification to detect summary-seeking queries. No
            summary is returned if the search query is classified as a
            non-summary seeking query. For example, `why is the sky blue` and
            `Who is the best soccer player in the world?` are summary-seeking
            queries, but `SFO airport` and `world cup 2026` are not. They are
            most likely navigational queries. If this field is set to `true`, we
            skip generating summaries for non-summary seeking queries and return
            fallback messages instead.
          type: boolean
        ignoreLowRelevantContent:
          description: >-
            Specifies whether to filter out queries that have low relevance. The
            default value is `false`. If this field is set to `false`, all
            search results are used regardless of relevance to generate answers.
            If set to `true`, only queries with high relevance search results
            will generate answers.
          type: boolean
        ignoreJailBreakingQuery:
          description: >-
            Optional. Specifies whether to filter out jail-breaking queries. The
            default value is `false`. Google employs search-query classification
            to detect jail-breaking queries. No summary is returned if the
            search query is classified as a jail-breaking query. A user might
            add instructions to the query to change the tone, style, language,
            content of the answer, or ask the model to act as a different
            entity, e.g. "Reply in the tone of a competing company's CEO". If
            this field is set to `true`, we skip generating summaries for
            jail-breaking queries and return fallback messages instead.
          type: boolean
        modelPromptSpec:
          description: >-
            If specified, the spec will be used to modify the prompt provided to
            the LLM.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelPromptSpec
        languageCode:
          description: >-
            Language code for Summary. Use language tags defined by
            [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is
            an experimental feature.
          type: string
        modelSpec:
          description: >-
            If specified, the spec will be used to modify the model
            specification provided to the LLM.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelSpec
        useSemanticChunks:
          description: >-
            If true, answer will be generated from most relevant chunks from top
            search results. This feature will improve summary quality. Note that
            with this feature enabled, not all top search results will be
            referenced and included in the reference list, so the citation
            source index only points to the search results listed in the
            reference list.
          type: boolean
    GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelPromptSpec:
      id: >-
        GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelPromptSpec
      description: Specification of the prompt to use with the model.
      type: object
      properties:
        preamble:
          description: >-
            Text at the beginning of the prompt that instructs the assistant.
            Examples are available in the user guide.
          type: string
    GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelSpec:
      id: >-
        GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelSpec
      description: Specification of the model.
      type: object
      properties:
        version:
          description: >-
            The model version used to generate the summary. Supported values
            are: * `stable`: string. Default value when no value is specified.
            Uses a generally available, fine-tuned model. For more information,
            see [Answer generation model versions and
            lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
            * `preview`: string. (Public preview) Uses a preview model. For more
            information, see [Answer generation model versions and
            lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
          type: string
    GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecExtractiveContentSpec:
      id: >-
        GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecExtractiveContentSpec
      description: >-
        A specification for configuring the extractive content in a search
        response.
      type: object
      properties:
        maxExtractiveAnswerCount:
          description: >-
            The maximum number of extractive answers returned in each search
            result. An extractive answer is a verbatim answer extracted from the
            original document, which provides a precise and contextually
            relevant answer to the search query. If the number of matching
            answers is less than the `max_extractive_answer_count`, return all
            of the answers. Otherwise, return the `max_extractive_answer_count`.
            At most five answers are returned for each SearchResult.
          type: integer
          format: int32
        maxExtractiveSegmentCount:
          description: >-
            The max number of extractive segments returned in each search
            result. Only applied if the DataStore is set to
            DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types
            is SOLUTION_TYPE_CHAT. An extractive segment is a text segment
            extracted from the original document that is relevant to the search
            query, and, in general, more verbose than an extractive answer. The
            segment could then be used as input for LLMs to generate summaries
            and answers. If the number of matching segments is less than
            `max_extractive_segment_count`, return all of the segments.
            Otherwise, return the `max_extractive_segment_count`.
          type: integer
          format: int32
        returnExtractiveSegmentScore:
          description: >-
            Specifies whether to return the confidence score from the extractive
            segments in each search result. This feature is available only for
            new or allowlisted data stores. To allowlist your data store,
            contact your Customer Engineer. The default value is `false`.
          type: boolean
        numPreviousSegments:
          description: >-
            Specifies whether to also include the adjacent from each selected
            segments. Return at most `num_previous_segments` segments before
            each selected segments.
          type: integer
          format: int32
        numNextSegments:
          description: >-
            Return at most `num_next_segments` segments after each selected
            segments.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecChunkSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecChunkSpec
      description: >-
        Specifies the chunk spec to be returned from the search response. Only
        available if the SearchRequest.ContentSearchSpec.search_result_mode is
        set to CHUNKS
      type: object
      properties:
        numPreviousChunks:
          description: >-
            The number of previous chunks to be returned of the current chunk.
            The maximum allowed value is 3. If not specified, no previous chunks
            will be returned.
          type: integer
          format: int32
        numNextChunks:
          description: >-
            The number of next chunks to be returned of the current chunk. The
            maximum allowed value is 3. If not specified, no next chunks will be
            returned.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec
      description: Specification for search as you type in search requests.
      type: object
      properties:
        condition:
          description: >-
            The condition under which search as you type should occur. Default
            to Condition.DISABLED.
          type: string
          enumDescriptions:
            - Server behavior defaults to Condition.DISABLED.
            - Disables Search As You Type.
            - Enables Search As You Type.
          enum:
            - CONDITION_UNSPECIFIED
            - DISABLED
            - ENABLED
    GoogleCloudDiscoveryengineV1SearchRequestSessionSpec:
      id: GoogleCloudDiscoveryengineV1SearchRequestSessionSpec
      description: >-
        Session specification. Multi-turn Search feature is currently at private
        GA stage. Please use v1alpha or v1beta version instead before we launch
        this feature to public GA. Or ask for allowlisting through Google
        Support team.
      type: object
      properties:
        queryId:
          description: >-
            If set, the search result gets stored to the "turn" specified by
            this query ID. Example: Let's say the session looks like this:
            session { name: ".../sessions/xxx" turns { query { text: "What is
            foo?" query_id: ".../questions/yyy" } answer: "Foo is ..." } turns {
            query { text: "How about bar then?" query_id: ".../questions/zzz" }
            } } The user can call /search API with a request like this: session:
            ".../sessions/xxx" session_spec { query_id: ".../questions/zzz" }
            Then, the API stores the search result, associated with the last
            turn. The stored search result can be used by a subsequent /answer
            API call (with the session ID and the query ID specified). Also, it
            is possible to call /search and /answer in parallel with the same
            session ID & query ID.
          type: string
        searchResultPersistenceCount:
          description: >-
            The number of top search results to persist. The persisted search
            results can be used for the subsequent /answer api call. This field
            is simliar to the `summary_result_count` field in
            SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count. At
            most 10 results for documents mode, or 50 for chunks mode.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1SearchResponse:
      id: GoogleCloudDiscoveryengineV1SearchResponse
      description: Response message for SearchService.Search method.
      type: object
      properties:
        results:
          description: A list of matched documents. The order represents the ranking.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSearchResult
        facets:
          description: Results of facets requested by user.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseFacet
        totalSize:
          description: >-
            The estimated total count of matched items irrespective of
            pagination. The count of results returned by pagination may be less
            than the total_size that matches.
          type: integer
          format: int32
        attributionToken:
          description: >-
            A unique search token. This should be included in the UserEvent logs
            resulting from this search, which enables accurate attribution of
            search model performance. This also helps to identify a request
            during the customer support scenarios.
          type: string
        redirectUri:
          description: >-
            The URI of a customer-defined redirect page. If redirect action is
            triggered, no search is performed, and only redirect_uri and
            attribution_token are set in the response.
          type: string
        nextPageToken:
          description: >-
            A token that can be sent as SearchRequest.page_token to retrieve the
            next page. If this field is omitted, there are no subsequent pages.
          type: string
        correctedQuery:
          description: >-
            Contains the spell corrected query, if found. If the spell
            correction type is AUTOMATIC, then the search results are based on
            corrected_query. Otherwise the original query is used for search.
          type: string
        summary:
          description: >-
            A summary as part of the search results. This field is only returned
            if SearchRequest.ContentSearchSpec.summary_spec is set.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSummary
        queryExpansionInfo:
          description: Query expansion information for the returned results.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseQueryExpansionInfo
        sessionInfo:
          description: >-
            Session information. Only set if SearchRequest.session is provided.
            See its description for more details.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSessionInfo
    GoogleCloudDiscoveryengineV1SearchResponseSearchResult:
      id: GoogleCloudDiscoveryengineV1SearchResponseSearchResult
      description: Represents the search results.
      type: object
      properties:
        id:
          description: Document.id of the searched Document.
          type: string
        document:
          description: >-
            The document data snippet in the search response. Only fields that
            are marked as `retrievable` are populated.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
        chunk:
          description: >-
            The chunk data in the search response if the
            SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Chunk'
    GoogleCloudDiscoveryengineV1Document:
      id: GoogleCloudDiscoveryengineV1Document
      description: >-
        Document captures all raw metadata information of items to be
        recommended or searched.
      type: object
      properties:
        structData:
          description: >-
            The structured JSON data for the document. It should conform to the
            registered Schema or an `INVALID_ARGUMENT` error is thrown.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        jsonData:
          description: >-
            The JSON string representation of the document. It should conform to
            the registered Schema or an `INVALID_ARGUMENT` error is thrown.
          type: string
        name:
          description: >-
            Immutable. The full resource name of the document. Format:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
            This field must be a UTF-8 encoded string with a length limit of
            1024 characters.
          type: string
        id:
          description: >-
            Immutable. The identifier of the document. Id should conform to
            [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a
            length limit of 63 characters.
          type: string
        schemaId:
          description: The identifier of the schema located in the same data store.
          type: string
        content:
          description: >-
            The unstructured data linked to this document. Content must be set
            if this document is under a `CONTENT_REQUIRED` data store.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DocumentContent'
        parentDocumentId:
          description: >-
            The identifier of the parent document. Currently supports at most
            two level document hierarchy. Id should conform to
            [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a
            length limit of 63 characters.
          type: string
        derivedStructData:
          description: >-
            Output only. This field is OUTPUT_ONLY. It contains derived data
            that are not in the original input document.
          readOnly: true
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        indexTime:
          description: >-
            Output only. The last time the document was indexed. If this field
            is set, the document could be returned in search results. This field
            is OUTPUT_ONLY. If this field is not populated, it means the
            document has never been indexed.
          readOnly: true
          type: string
          format: google-datetime
        indexStatus:
          description: >-
            Output only. The index status of the document. * If document is
            indexed successfully, the index_time field is populated. *
            Otherwise, if document is not indexed due to errors, the
            error_samples field is populated. * Otherwise, index_status is
            unset.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DocumentIndexStatus'
    GoogleCloudDiscoveryengineV1DocumentContent:
      id: GoogleCloudDiscoveryengineV1DocumentContent
      description: Unstructured data linked to this document.
      type: object
      properties:
        rawBytes:
          description: >-
            The content represented as a stream of bytes. The maximum length is
            1,000,000 bytes (1 MB / ~0.95 MiB). Note: As with all `bytes`
            fields, this field is represented as pure binary in Protocol Buffers
            and base64-encoded string in JSON. For example, `abc123!?$*&()'-=@~`
            should be represented as `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See
            https://developers.google.com/protocol-buffers/docs/proto3#json.
          type: string
          format: byte
        uri:
          description: >-
            The URI of the content. Only Cloud Storage URIs (e.g.
            `gs://bucket-name/path/to/file`) are supported. The maximum file
            size is 2.5 MB for text-based formats, 200 MB for other formats.
          type: string
        mimeType:
          description: >-
            The MIME type of the content. Supported types: * `application/pdf`
            (PDF, only native PDFs are supported for now) * `text/html` (HTML) *
            `application/vnd.openxmlformats-officedocument.wordprocessingml.document`
            (DOCX) *
            `application/vnd.openxmlformats-officedocument.presentationml.presentation`
            (PPTX) * `text/plain` (TXT) See
            https://www.iana.org/assignments/media-types/media-types.xhtml.
          type: string
    GoogleCloudDiscoveryengineV1DocumentIndexStatus:
      id: GoogleCloudDiscoveryengineV1DocumentIndexStatus
      description: Index status of the document.
      type: object
      properties:
        indexTime:
          description: >-
            The time when the document was indexed. If this field is populated,
            it means the document has been indexed.
          type: string
          format: google-datetime
        errorSamples:
          description: >-
            A sample of errors encountered while indexing the document. If this
            field is populated, the document is not indexed due to errors.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDiscoveryengineV1Chunk:
      id: GoogleCloudDiscoveryengineV1Chunk
      description: >-
        Chunk captures all raw metadata information of items to be recommended
        or searched in the chunk mode.
      type: object
      properties:
        name:
          description: >-
            The full resource name of the chunk. Format:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}/chunks/{chunk_id}`.
            This field must be a UTF-8 encoded string with a length limit of
            1024 characters.
          type: string
        id:
          description: Unique chunk ID of the current chunk.
          type: string
        content:
          description: Content is a string from a document (parsed content).
          type: string
        relevanceScore:
          description: >-
            Output only. Represents the relevance score based on similarity.
            Higher score indicates higher chunk relevance. The score is in range
            [-1.0, 1.0]. Only populated on SearchService.SearchResponse.
          readOnly: true
          type: number
          format: double
        documentMetadata:
          description: Metadata of the document from the current chunk.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1ChunkDocumentMetadata
        derivedStructData:
          description: >-
            Output only. This field is OUTPUT_ONLY. It contains derived data
            that are not in the original input document.
          readOnly: true
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        pageSpan:
          description: Page span of the chunk.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ChunkPageSpan'
        chunkMetadata:
          description: Output only. Metadata of the current chunk.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ChunkChunkMetadata'
    GoogleCloudDiscoveryengineV1ChunkDocumentMetadata:
      id: GoogleCloudDiscoveryengineV1ChunkDocumentMetadata
      description: >-
        Document metadata contains the information of the document of the
        current chunk.
      type: object
      properties:
        uri:
          description: Uri of the document.
          type: string
        title:
          description: Title of the document.
          type: string
        structData:
          description: >-
            Data representation. The structured JSON data for the document. It
            should conform to the registered Schema or an `INVALID_ARGUMENT`
            error is thrown.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDiscoveryengineV1ChunkPageSpan:
      id: GoogleCloudDiscoveryengineV1ChunkPageSpan
      description: Page span of the chunk.
      type: object
      properties:
        pageStart:
          description: The start page of the chunk.
          type: integer
          format: int32
        pageEnd:
          description: The end page of the chunk.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1ChunkChunkMetadata:
      id: GoogleCloudDiscoveryengineV1ChunkChunkMetadata
      description: >-
        Metadata of the current chunk. This field is only populated on
        SearchService.Search API.
      type: object
      properties:
        previousChunks:
          description: >-
            The previous chunks of the current chunk. The number is controlled
            by SearchRequest.ContentSearchSpec.ChunkSpec.num_previous_chunks.
            This field is only populated on SearchService.Search API.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Chunk'
        nextChunks:
          description: >-
            The next chunks of the current chunk. The number is controlled by
            SearchRequest.ContentSearchSpec.ChunkSpec.num_next_chunks. This
            field is only populated on SearchService.Search API.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Chunk'
    GoogleCloudDiscoveryengineV1SearchResponseFacet:
      id: GoogleCloudDiscoveryengineV1SearchResponseFacet
      description: A facet result.
      type: object
      properties:
        key:
          description: >-
            The key for this facet. For example, `"colors"` or `"price"`. It
            matches SearchRequest.FacetSpec.FacetKey.key.
          type: string
        values:
          description: The facet values for this field.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseFacetFacetValue
        dynamicFacet:
          description: Whether the facet is dynamically generated.
          type: boolean
    GoogleCloudDiscoveryengineV1SearchResponseFacetFacetValue:
      id: GoogleCloudDiscoveryengineV1SearchResponseFacetFacetValue
      description: A facet value which contains value names and their count.
      type: object
      properties:
        value:
          description: Text value of a facet, such as "Black" for facet "colors".
          type: string
        interval:
          description: >-
            Interval value for a facet, such as 10, 20) for facet "price". It
            matches [SearchRequest.FacetSpec.FacetKey.intervals.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Interval'
        count:
          description: Number of items that have this facet value.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1SearchResponseSummary:
      id: GoogleCloudDiscoveryengineV1SearchResponseSummary
      description: Summary of the top N search results specified by the summary spec.
      type: object
      properties:
        summaryText:
          description: The summary content.
          type: string
        summarySkippedReasons:
          description: >-
            Additional summary-skipped reasons. This provides the reason for
            ignored cases. If nothing is skipped, this field is not set.
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value. The summary skipped reason is not specified.
              - >-
                The adversarial query ignored case. Only used when
                SummarySpec.ignore_adversarial_query is set to `true`.
              - >-
                The non-summary seeking query ignored case. Google skips the
                summary if the query is chit chat. Only used when
                SummarySpec.ignore_non_summary_seeking_query is set to `true`.
              - >-
                The out-of-domain query ignored case. Google skips the summary
                if there are no high-relevance search results. For example, the
                data store contains facts about company A but the user query is
                asking questions about company B.
              - >-
                The potential policy violation case. Google skips the summary if
                there is a potential policy violation detected. This includes
                content that may be violent or toxic.
              - >-
                The LLM addon not enabled case. Google skips the summary if the
                LLM addon is not enabled.
              - >-
                The no relevant content case. Google skips the summary if there
                is no relevant content in the retrieved search results.
              - >-
                The jail-breaking query ignored case. For example, "Reply in the
                tone of a competing company's CEO". Only used when
                [SearchRequest.ContentSearchSpec.SummarySpec.ignore_jail_breaking_query]
                is set to `true`.
              - >-
                The customer policy violation case. Google skips the summary if
                there is a customer policy violation detected. The policy is
                defined by the customer.
              - >-
                The non-answer seeking query ignored case. Google skips the
                summary if the query doesn't have clear intent. Only used when
                [SearchRequest.ContentSearchSpec.SummarySpec.ignore_non_answer_seeking_query]
                is set to `true`.
            enum:
              - SUMMARY_SKIPPED_REASON_UNSPECIFIED
              - ADVERSARIAL_QUERY_IGNORED
              - NON_SUMMARY_SEEKING_QUERY_IGNORED
              - OUT_OF_DOMAIN_QUERY_IGNORED
              - POTENTIAL_POLICY_VIOLATION
              - LLM_ADDON_NOT_ENABLED
              - NO_RELEVANT_CONTENT
              - JAIL_BREAKING_QUERY_IGNORED
              - CUSTOMER_POLICY_VIOLATION
              - NON_SUMMARY_SEEKING_QUERY_IGNORED_V2
        safetyAttributes:
          description: >-
            A collection of Safety Attribute categories and their associated
            confidence scores.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSummarySafetyAttributes
        summaryWithMetadata:
          description: Summary with metadata information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSummarySummaryWithMetadata
    GoogleCloudDiscoveryengineV1SearchResponseSummarySafetyAttributes:
      id: GoogleCloudDiscoveryengineV1SearchResponseSummarySafetyAttributes
      description: Safety Attribute categories and their associated confidence scores.
      type: object
      properties:
        categories:
          description: >-
            The display names of Safety Attribute categories associated with the
            generated content. Order matches the Scores.
          type: array
          items:
            type: string
        scores:
          description: >-
            The confidence scores of the each category, higher value means
            higher confidence. Order matches the Categories.
          type: array
          items:
            type: number
            format: float
    GoogleCloudDiscoveryengineV1SearchResponseSummarySummaryWithMetadata:
      id: GoogleCloudDiscoveryengineV1SearchResponseSummarySummaryWithMetadata
      description: Summary with metadata information.
      type: object
      properties:
        summary:
          description: Summary text with no citation information.
          type: string
        citationMetadata:
          description: Citation metadata for given summary.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationMetadata
        references:
          description: Document References.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSummaryReference
    GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationMetadata:
      id: GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationMetadata
      description: Citation metadata.
      type: object
      properties:
        citations:
          description: Citations for segments.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSummaryCitation
    GoogleCloudDiscoveryengineV1SearchResponseSummaryCitation:
      id: GoogleCloudDiscoveryengineV1SearchResponseSummaryCitation
      description: Citation info for a segment.
      type: object
      properties:
        startIndex:
          description: Index indicates the start of the segment, measured in bytes/unicode.
          type: string
          format: int64
        endIndex:
          description: End of the attributed segment, exclusive.
          type: string
          format: int64
        sources:
          description: Citation sources for the attributed segment.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationSource
    GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationSource:
      id: GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationSource
      description: Citation source.
      type: object
      properties:
        referenceIndex:
          description: >-
            Document reference index from SummaryWithMetadata.references. It is
            0-indexed and the value will be zero if the reference_index is not
            set explicitly.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1SearchResponseSummaryReference:
      id: GoogleCloudDiscoveryengineV1SearchResponseSummaryReference
      description: Document reference.
      type: object
      properties:
        title:
          description: Title of the document.
          type: string
        document:
          description: >-
            Required. Document.name of the document. Full resource name of the
            referenced document, in the format
            `projects/*/locations/*/collections/*/dataStores/*/branches/*/documents/*`.
          type: string
        uri:
          description: Cloud Storage or HTTP uri for the document.
          type: string
        chunkContents:
          description: List of cited chunk contents derived from document content.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSummaryReferenceChunkContent
    GoogleCloudDiscoveryengineV1SearchResponseSummaryReferenceChunkContent:
      id: GoogleCloudDiscoveryengineV1SearchResponseSummaryReferenceChunkContent
      description: Chunk content.
      type: object
      properties:
        content:
          description: Chunk textual content.
          type: string
        pageIdentifier:
          description: Page identifier.
          type: string
    GoogleCloudDiscoveryengineV1SearchResponseQueryExpansionInfo:
      id: GoogleCloudDiscoveryengineV1SearchResponseQueryExpansionInfo
      description: >-
        Information describing query expansion including whether expansion has
        occurred.
      type: object
      properties:
        expandedQuery:
          description: Bool describing whether query expansion has occurred.
          type: boolean
        pinnedResultCount:
          description: >-
            Number of pinned results. This field will only be set when expansion
            happens and SearchRequest.QueryExpansionSpec.pin_unexpanded_results
            is set to true.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1SearchResponseSessionInfo:
      id: GoogleCloudDiscoveryengineV1SearchResponseSessionInfo
      description: Information about the session.
      type: object
      properties:
        name:
          description: >-
            Name of the session. If the auto-session mode is used (when
            SearchRequest.session ends with "-"), this field holds the newly
            generated session name.
          type: string
        queryId:
          description: >-
            Query ID that corresponds to this search API call. One session can
            have multiple turns, each with a unique query ID. By specifying the
            session name and this query ID in the Answer API call, the answer
            generation happens in the context of the search results from this
            search call.
          type: string
    GoogleCloudDiscoveryengineV1ConverseConversationRequest:
      id: GoogleCloudDiscoveryengineV1ConverseConversationRequest
      description: >-
        Request message for ConversationalSearchService.ConverseConversation
        method.
      type: object
      properties:
        query:
          description: Required. Current user input.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TextInput'
        servingConfig:
          description: >-
            The resource name of the Serving Config to use. Format:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/servingConfigs/{serving_config_id}`
            If this is not set, the default serving config will be used.
          type: string
        conversation:
          description: >-
            The conversation to be used by auto session only. The name field
            will be ignored as we automatically assign new name for the
            conversation in auto session.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
        safeSearch:
          description: Whether to turn on safe search.
          type: boolean
        userLabels:
          description: >-
            The user labels applied to a resource must meet the following
            requirements: * Each resource can have multiple labels, up to a
            maximum of 64. * Each label must be a key-value pair. * Keys have a
            minimum length of 1 character and a maximum length of 63 characters
            and cannot be empty. Values can be empty and have a maximum length
            of 63 characters. * Keys and values can contain only lowercase
            letters, numeric characters, underscores, and dashes. All characters
            must use UTF-8 encoding, and international characters are allowed. *
            The key portion of a label must be unique. However, you can use the
            same key with multiple resources. * Keys must start with a lowercase
            letter or international character. See [Google Cloud
            Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
            for more details.
          type: object
          additionalProperties:
            type: string
        summarySpec:
          description: >-
            A specification for configuring the summary returned in the
            response.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec
        filter:
          description: >-
            The filter syntax consists of an expression language for
            constructing a predicate from one or more fields of the documents
            being filtered. Filter expression is case-sensitive. This will be
            used to filter search results which may affect the summary response.
            If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
            Filtering in Vertex AI Search is done by mapping the LHS filter key
            to a key property defined in the Vertex AI Search backend -- this
            mapping is defined by the customer in their schema. For example a
            media customer might have a field 'name' in their schema. In this
            case the filter would look like this: filter --> name:'ANY("king
            kong")' For more information about filtering including syntax and
            filter operators, see
            [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
          type: string
        boostSpec:
          description: >-
            Boost specification to boost certain documents in search results
            which may affect the converse response. For more information on
            boosting, see
            [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestBoostSpec
    GoogleCloudDiscoveryengineV1TextInput:
      id: GoogleCloudDiscoveryengineV1TextInput
      description: Defines text input.
      type: object
      properties:
        input:
          description: Text input.
          type: string
        context:
          description: Conversation context of the input.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ConversationContext'
    GoogleCloudDiscoveryengineV1ConversationContext:
      id: GoogleCloudDiscoveryengineV1ConversationContext
      description: Defines context of the conversation
      type: object
      properties:
        contextDocuments:
          description: >-
            The current list of documents the user is seeing. It contains the
            document resource references.
          type: array
          items:
            type: string
        activeDocument:
          description: >-
            The current active document the user opened. It contains the
            document resource reference.
          type: string
    GoogleCloudDiscoveryengineV1Conversation:
      id: GoogleCloudDiscoveryengineV1Conversation
      description: External conversation proto definition.
      type: object
      properties:
        name:
          description: >-
            Immutable. Fully qualified name
            `projects/{project}/locations/global/collections/{collection}/dataStore/*/conversations/*`
            or
            `projects/{project}/locations/global/collections/{collection}/engines/*/conversations/*`.
          type: string
        state:
          description: The state of the Conversation.
          type: string
          enumDescriptions:
            - Unknown.
            - Conversation is currently open.
            - Conversation has been completed.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - COMPLETED
        userPseudoId:
          description: A unique identifier for tracking users.
          type: string
        messages:
          description: Conversation messages.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1ConversationMessage
        startTime:
          description: Output only. The time the conversation started.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the conversation finished.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1ConversationMessage:
      id: GoogleCloudDiscoveryengineV1ConversationMessage
      description: Defines a conversation message.
      type: object
      properties:
        userInput:
          description: User text input.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TextInput'
        reply:
          description: Search reply.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Reply'
        createTime:
          description: Output only. Message creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1Reply:
      id: GoogleCloudDiscoveryengineV1Reply
      description: Defines a reply message to user.
      type: object
      properties:
        summary:
          description: Summary based on search results.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSummary
    GoogleCloudDiscoveryengineV1ConverseConversationResponse:
      id: GoogleCloudDiscoveryengineV1ConverseConversationResponse
      description: >-
        Response message for ConversationalSearchService.ConverseConversation
        method.
      type: object
      properties:
        reply:
          description: Answer to the current query.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Reply'
        conversation:
          description: Updated conversation including the answer.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
        searchResults:
          description: Search Results.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponseSearchResult
    GoogleCloudDiscoveryengineV1ListConversationsResponse:
      id: GoogleCloudDiscoveryengineV1ListConversationsResponse
      description: Response for ListConversations method.
      type: object
      properties:
        conversations:
          description: All the Conversations for a given data store.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
        nextPageToken:
          description: Pagination token, if not returned indicates the last page.
          type: string
    GoogleCloudDiscoveryengineV1AnswerQueryRequest:
      id: GoogleCloudDiscoveryengineV1AnswerQueryRequest
      description: Request message for ConversationalSearchService.AnswerQuery method.
      type: object
      properties:
        query:
          description: Required. Current user query.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Query'
        session:
          description: >-
            The session resource name. Not required. When session field is not
            set, the API is in sessionless mode. We support auto session mode:
            users can use the wildcard symbol `-` as session ID. A new ID will
            be automatically generated and assigned.
          type: string
        safetySpec:
          description: Model specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpec
        relatedQuestionsSpec:
          description: Related questions specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestRelatedQuestionsSpec
        answerGenerationSpec:
          description: Answer generation specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpec
        searchSpec:
          description: Search specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpec
        queryUnderstandingSpec:
          description: Query understanding specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpec
        asynchronousMode:
          description: >-
            Deprecated: This field is deprecated. Streaming Answer API will be
            supported. Asynchronous mode control. If enabled, the response will
            be returned with answer/session resource name without final answer.
            The API users need to do the polling to get the latest status of
            answer/session by calling ConversationalSearchService.GetAnswer or
            ConversationalSearchService.GetSession method.
          deprecated: true
          type: boolean
        userPseudoId:
          description: >-
            A unique identifier for tracking visitors. For example, this could
            be implemented with an HTTP cookie, which should be able to uniquely
            identify a visitor on a single device. This unique identifier should
            not change if the visitor logs in or out of the website. This field
            should NOT have a fixed value such as `unknown_visitor`. The field
            must be a UTF-8 encoded string with a length limit of 128
            characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
        userLabels:
          description: >-
            The user labels applied to a resource must meet the following
            requirements: * Each resource can have multiple labels, up to a
            maximum of 64. * Each label must be a key-value pair. * Keys have a
            minimum length of 1 character and a maximum length of 63 characters
            and cannot be empty. Values can be empty and have a maximum length
            of 63 characters. * Keys and values can contain only lowercase
            letters, numeric characters, underscores, and dashes. All characters
            must use UTF-8 encoding, and international characters are allowed. *
            The key portion of a label must be unique. However, you can use the
            same key with multiple resources. * Keys must start with a lowercase
            letter or international character. See [Google Cloud
            Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
            for more details.
          type: object
          additionalProperties:
            type: string
    GoogleCloudDiscoveryengineV1Query:
      id: GoogleCloudDiscoveryengineV1Query
      description: Defines a user inputed query.
      type: object
      properties:
        text:
          description: Plain text.
          type: string
        queryId:
          description: Unique Id for the query.
          type: string
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpec:
      id: GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpec
      description: Safety specification.
      type: object
      properties:
        enable:
          description: >-
            Enable the safety filtering on the answer response. It is false by
            default.
          type: boolean
    GoogleCloudDiscoveryengineV1AnswerQueryRequestRelatedQuestionsSpec:
      id: GoogleCloudDiscoveryengineV1AnswerQueryRequestRelatedQuestionsSpec
      description: Related questions specification.
      type: object
      properties:
        enable:
          description: Enable related questions feature if true.
          type: boolean
    GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpec:
      id: GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpec
      description: Answer generation specification.
      type: object
      properties:
        modelSpec:
          description: Answer generation model specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecModelSpec
        promptSpec:
          description: Answer generation prompt specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecPromptSpec
        includeCitations:
          description: >-
            Specifies whether to include citation metadata in the answer. The
            default value is `false`.
          type: boolean
        answerLanguageCode:
          description: >-
            Language code for Answer. Use language tags defined by
            [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is
            an experimental feature.
          type: string
        ignoreAdversarialQuery:
          description: >-
            Specifies whether to filter out adversarial queries. The default
            value is `false`. Google employs search-query classification to
            detect adversarial queries. No answer is returned if the search
            query is classified as an adversarial query. For example, a user
            might ask a question regarding negative comments about the company
            or submit a query designed to generate unsafe, policy-violating
            output. If this field is set to `true`, we skip generating answers
            for adversarial queries and return fallback messages instead.
          type: boolean
        ignoreNonAnswerSeekingQuery:
          description: >-
            Specifies whether to filter out queries that are not answer-seeking.
            The default value is `false`. Google employs search-query
            classification to detect answer-seeking queries. No answer is
            returned if the search query is classified as a non-answer seeking
            query. If this field is set to `true`, we skip generating answers
            for non-answer seeking queries and return fallback messages instead.
          type: boolean
        ignoreLowRelevantContent:
          description: >-
            Specifies whether to filter out queries that have low relevance. If
            this field is set to `false`, all search results are used regardless
            of relevance to generate answers. If set to `true` or unset, the
            behavior will be determined automatically by the service.
          type: boolean
        ignoreJailBreakingQuery:
          description: >-
            Optional. Specifies whether to filter out jail-breaking queries. The
            default value is `false`. Google employs search-query classification
            to detect jail-breaking queries. No summary is returned if the
            search query is classified as a jail-breaking query. A user might
            add instructions to the query to change the tone, style, language,
            content of the answer, or ask the model to act as a different
            entity, e.g. "Reply in the tone of a competing company's CEO". If
            this field is set to `true`, we skip generating summaries for
            jail-breaking queries and return fallback messages instead.
          type: boolean
    GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecModelSpec:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecModelSpec
      description: Answer Generation Model specification.
      type: object
      properties:
        modelVersion:
          description: >-
            Model version. If not set, it will use the default stable model.
            Allowed values are: stable, preview.
          type: string
    GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecPromptSpec:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecPromptSpec
      description: Answer generation prompt specification.
      type: object
      properties:
        preamble:
          description: Customized preamble.
          type: string
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpec:
      id: GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpec
      description: Search specification.
      type: object
      properties:
        searchParams:
          description: Search parameters.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams
        searchResultList:
          description: Search result list.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultList
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams:
      id: GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams
      description: Search parameters.
      type: object
      properties:
        maxReturnResults:
          description: Number of search results to return. The default value is 10.
          type: integer
          format: int32
        filter:
          description: >-
            The filter syntax consists of an expression language for
            constructing a predicate from one or more fields of the documents
            being filtered. Filter expression is case-sensitive. This will be
            used to filter search results which may affect the Answer response.
            If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
            Filtering in Vertex AI Search is done by mapping the LHS filter key
            to a key property defined in the Vertex AI Search backend -- this
            mapping is defined by the customer in their schema. For example a
            media customers might have a field 'name' in their schema. In this
            case the filter would look like this: filter --> name:'ANY("king
            kong")' For more information about filtering including syntax and
            filter operators, see
            [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
          type: string
        boostSpec:
          description: >-
            Boost specification to boost certain documents in search results
            which may affect the answer query response. For more information on
            boosting, see
            [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestBoostSpec
        orderBy:
          description: >-
            The order in which documents are returned. Documents can be ordered
            by a field in an Document object. Leave it unset if ordered by
            relevance. `order_by` expression is case-sensitive. For more
            information on ordering, see
            [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order)
            If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
          type: string
        searchResultMode:
          description: >-
            Specifies the search result mode. If unspecified, the search result
            mode defaults to `DOCUMENTS`. See [parse and chunk
            documents](https://cloud.google.com/generative-ai-app-builder/docs/parse-chunk-documents)
          type: string
          enumDescriptions:
            - Default value.
            - Returns documents in the search result.
            - >-
              Returns chunks in the search result. Only available if the
              DataStore.DocumentProcessingConfig.chunking_config is specified.
          enum:
            - SEARCH_RESULT_MODE_UNSPECIFIED
            - DOCUMENTS
            - CHUNKS
        dataStoreSpecs:
          description: >-
            Specs defining dataStores to filter on in a search call and
            configurations for those dataStores. This is only considered for
            engines with multiple dataStores use case. For single dataStore
            within an engine, they should use the specs at the top level.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1SearchRequestDataStoreSpec
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultList:
      id: GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultList
      description: Search result list.
      type: object
      properties:
        searchResults:
          description: Search results.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResult
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResult:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResult
      description: Search result.
      type: object
      properties:
        unstructuredDocumentInfo:
          description: Unstructured document information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfo
        chunkInfo:
          description: Chunk information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfo
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfo:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfo
      description: Unstructured document information.
      type: object
      properties:
        document:
          description: Document resource name.
          type: string
        uri:
          description: URI for the document.
          type: string
        title:
          description: Title.
          type: string
        documentContexts:
          description: List of document contexts.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoDocumentContext
        extractiveSegments:
          description: List of extractive segments.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveSegment
        extractiveAnswers:
          description: List of extractive answers.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveAnswer
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoDocumentContext:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoDocumentContext
      description: Document context.
      type: object
      properties:
        pageIdentifier:
          description: Page identifier.
          type: string
        content:
          description: Document content.
          type: string
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveSegment:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveSegment
      description: >-
        Extractive segment.
        [Guide](https://cloud.google.com/generative-ai-app-builder/docs/snippets#extractive-segments)
      type: object
      properties:
        pageIdentifier:
          description: Page identifier.
          type: string
        content:
          description: Extractive segment content.
          type: string
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveAnswer:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveAnswer
      description: >-
        Extractive answer.
        [Guide](https://cloud.google.com/generative-ai-app-builder/docs/snippets#get-answers)
      type: object
      properties:
        pageIdentifier:
          description: Page identifier.
          type: string
        content:
          description: Extractive answer content.
          type: string
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfo:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfo
      description: Chunk information.
      type: object
      properties:
        chunk:
          description: Chunk resource name.
          type: string
        content:
          description: Chunk textual content.
          type: string
        documentMetadata:
          description: Metadata of the document from the current chunk.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfoDocumentMetadata
    GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfoDocumentMetadata:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfoDocumentMetadata
      description: >-
        Document metadata contains the information of the document of the
        current chunk.
      type: object
      properties:
        uri:
          description: Uri of the document.
          type: string
        title:
          description: Title of the document.
          type: string
    GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpec:
      id: GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpec
      description: Query understanding specification.
      type: object
      properties:
        queryClassificationSpec:
          description: Query classification specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec
        queryRephraserSpec:
          description: Query rephraser specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpec
    GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec
      description: Query classification specification.
      type: object
      properties:
        types:
          description: Enabled query classification types.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified query classification type.
              - Adversarial query classification type.
              - Non-answer-seeking query classification type, for chit chat.
              - Jail-breaking query classification type.
              - >-
                Non-answer-seeking query classification type, for no clear
                intent.
            enum:
              - TYPE_UNSPECIFIED
              - ADVERSARIAL_QUERY
              - NON_ANSWER_SEEKING_QUERY
              - JAIL_BREAKING_QUERY
              - NON_ANSWER_SEEKING_QUERY_V2
    GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpec:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpec
      description: Query rephraser specification.
      type: object
      properties:
        disable:
          description: Disable query rephraser.
          type: boolean
        maxRephraseSteps:
          description: >-
            Max rephrase steps. The max number is 5 steps. If not set or set to
            < 1, it will be set to 1 by default.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1AnswerQueryResponse:
      id: GoogleCloudDiscoveryengineV1AnswerQueryResponse
      description: Response message for ConversationalSearchService.AnswerQuery method.
      type: object
      properties:
        answer:
          description: >-
            Answer resource object. If
            AnswerQueryRequest.QueryUnderstandingSpec.QueryRephraserSpec.max_rephrase_steps
            is greater than 1, use Answer.name to fetch answer information using
            ConversationalSearchService.GetAnswer API.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Answer'
        session:
          description: >-
            Session resource object. It will be only available when session
            field is set and valid in the AnswerQueryRequest request.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
        answerQueryToken:
          description: A global unique ID used for logging.
          type: string
    GoogleCloudDiscoveryengineV1Answer:
      id: GoogleCloudDiscoveryengineV1Answer
      description: Defines an answer.
      type: object
      properties:
        name:
          description: >-
            Immutable. Fully qualified name
            `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*/answers/*`
          type: string
        state:
          description: The state of the answer generation.
          type: string
          enumDescriptions:
            - Unknown.
            - Answer generation is currently in progress.
            - Answer generation currently failed.
            - Answer generation has succeeded.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - FAILED
            - SUCCEEDED
        answerText:
          description: The textual answer.
          type: string
        citations:
          description: Citations.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1AnswerCitation'
        references:
          description: References.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1AnswerReference'
        relatedQuestions:
          description: Suggested related questions.
          type: array
          items:
            type: string
        steps:
          description: Answer generation steps.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1AnswerStep'
        queryUnderstandingInfo:
          description: Query understanding information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfo
        answerSkippedReasons:
          description: >-
            Additional answer-skipped reasons. This provides the reason for
            ignored cases. If nothing is skipped, this field is not set.
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value. The answer skipped reason is not specified.
              - The adversarial query ignored case.
              - >-
                The non-answer seeking query ignored case Google skips the
                answer if the query is chit chat.
              - >-
                The out-of-domain query ignored case. Google skips the answer if
                there are no high-relevance search results.
              - >-
                The potential policy violation case. Google skips the answer if
                there is a potential policy violation detected. This includes
                content that may be violent or toxic.
              - >-
                The no relevant content case. Google skips the answer if there
                is no relevant content in the retrieved search results.
              - >-
                The jail-breaking query ignored case. For example, "Reply in the
                tone of a competing company's CEO". Google skips the answer if
                the query is classified as a jail-breaking query.
              - >-
                The customer policy violation case. Google skips the summary if
                there is a customer policy violation detected. The policy is
                defined by the customer.
              - >-
                The non-answer seeking query ignored case. Google skips the
                answer if the query doesn't have clear intent.
            enum:
              - ANSWER_SKIPPED_REASON_UNSPECIFIED
              - ADVERSARIAL_QUERY_IGNORED
              - NON_ANSWER_SEEKING_QUERY_IGNORED
              - OUT_OF_DOMAIN_QUERY_IGNORED
              - POTENTIAL_POLICY_VIOLATION
              - NO_RELEVANT_CONTENT
              - JAIL_BREAKING_QUERY_IGNORED
              - CUSTOMER_POLICY_VIOLATION
              - NON_ANSWER_SEEKING_QUERY_IGNORED_V2
        createTime:
          description: Output only. Answer creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        completeTime:
          description: Output only. Answer completed timestamp.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1AnswerCitation:
      id: GoogleCloudDiscoveryengineV1AnswerCitation
      description: Citation info for a segment.
      type: object
      properties:
        startIndex:
          description: >-
            Index indicates the start of the segment, measured in bytes (UTF-8
            unicode).
          type: string
          format: int64
        endIndex:
          description: End of the attributed segment, exclusive.
          type: string
          format: int64
        sources:
          description: Citation sources for the attributed segment.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1AnswerCitationSource
    GoogleCloudDiscoveryengineV1AnswerCitationSource:
      id: GoogleCloudDiscoveryengineV1AnswerCitationSource
      description: Citation source.
      type: object
      properties:
        referenceId:
          description: ID of the citation source.
          type: string
    GoogleCloudDiscoveryengineV1AnswerReference:
      id: GoogleCloudDiscoveryengineV1AnswerReference
      description: Reference.
      type: object
      properties:
        unstructuredDocumentInfo:
          description: Unstructured document information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfo
        chunkInfo:
          description: Chunk information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfo
        structuredDocumentInfo:
          description: Structured document information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerReferenceStructuredDocumentInfo
    GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfo:
      id: GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfo
      description: Unstructured document information.
      type: object
      properties:
        document:
          description: Document resource name.
          type: string
        uri:
          description: URI for the document.
          type: string
        title:
          description: Title.
          type: string
        chunkContents:
          description: List of cited chunk contents derived from document content.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfoChunkContent
        structData:
          description: >-
            The structured JSON metadata for the document. It is populated from
            the struct data from the Chunk in search result.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfoChunkContent:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfoChunkContent
      description: Chunk content.
      type: object
      properties:
        content:
          description: Chunk textual content.
          type: string
        pageIdentifier:
          description: Page identifier.
          type: string
        relevanceScore:
          description: >-
            The relevance of the chunk for a given query. Values range from 0.0
            (completely irrelevant) to 1.0 (completely relevant). This value is
            for informational purpose only. It may change for the same query and
            chunk at any time due to a model retraining or change in
            implementation.
          type: number
          format: float
    GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfo:
      id: GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfo
      description: Chunk information.
      type: object
      properties:
        chunk:
          description: Chunk resource name.
          type: string
        content:
          description: Chunk textual content.
          type: string
        relevanceScore:
          description: >-
            The relevance of the chunk for a given query. Values range from 0.0
            (completely irrelevant) to 1.0 (completely relevant). This value is
            for informational purpose only. It may change for the same query and
            chunk at any time due to a model retraining or change in
            implementation.
          type: number
          format: float
        documentMetadata:
          description: Document metadata.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfoDocumentMetadata
    GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfoDocumentMetadata:
      id: GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfoDocumentMetadata
      description: Document metadata.
      type: object
      properties:
        document:
          description: Document resource name.
          type: string
        uri:
          description: URI for the document.
          type: string
        title:
          description: Title.
          type: string
        pageIdentifier:
          description: Page identifier.
          type: string
        structData:
          description: >-
            The structured JSON metadata for the document. It is populated from
            the struct data from the Chunk in search result.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDiscoveryengineV1AnswerReferenceStructuredDocumentInfo:
      id: GoogleCloudDiscoveryengineV1AnswerReferenceStructuredDocumentInfo
      description: Structured search information.
      type: object
      properties:
        document:
          description: Document resource name.
          type: string
        structData:
          description: Structured search data.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDiscoveryengineV1AnswerStep:
      id: GoogleCloudDiscoveryengineV1AnswerStep
      description: Step information.
      type: object
      properties:
        state:
          description: The state of the step.
          type: string
          enumDescriptions:
            - Unknown.
            - Step is currently in progress.
            - Step currently failed.
            - Step has succeeded.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - FAILED
            - SUCCEEDED
        description:
          description: The description of the step.
          type: string
        thought:
          description: The thought of the step.
          type: string
        actions:
          description: Actions.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1AnswerStepAction'
    GoogleCloudDiscoveryengineV1AnswerStepAction:
      id: GoogleCloudDiscoveryengineV1AnswerStepAction
      description: Action.
      type: object
      properties:
        searchAction:
          description: Search action.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerStepActionSearchAction
        observation:
          description: Observation.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1AnswerStepActionObservation
    GoogleCloudDiscoveryengineV1AnswerStepActionSearchAction:
      id: GoogleCloudDiscoveryengineV1AnswerStepActionSearchAction
      description: Search action.
      type: object
      properties:
        query:
          description: The query to search.
          type: string
    GoogleCloudDiscoveryengineV1AnswerStepActionObservation:
      id: GoogleCloudDiscoveryengineV1AnswerStepActionObservation
      description: Observation.
      type: object
      properties:
        searchResults:
          description: >-
            Search results observed by the search action, it can be snippets
            info or chunk info, depending on the citation type set by the user.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResult
    GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResult:
      id: GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResult
      type: object
      properties:
        document:
          description: Document resource name.
          type: string
        uri:
          description: URI for the document.
          type: string
        title:
          description: Title.
          type: string
        snippetInfo:
          description: >-
            If citation_type is DOCUMENT_LEVEL_CITATION, populate document level
            snippets.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultSnippetInfo
        chunkInfo:
          description: >-
            If citation_type is CHUNK_LEVEL_CITATION and chunk mode is on,
            populate chunk info.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultChunkInfo
        structData:
          description: >-
            Data representation. The structured JSON data for the document. It's
            populated from the struct data from the Document, or the Chunk in
            search result. .
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultSnippetInfo:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultSnippetInfo
      description: Snippet information.
      type: object
      properties:
        snippet:
          description: Snippet content.
          type: string
        snippetStatus:
          description: Status of the snippet defined by the search team.
          type: string
    GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultChunkInfo:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultChunkInfo
      description: Chunk information.
      type: object
      properties:
        chunk:
          description: Chunk resource name.
          type: string
        content:
          description: Chunk textual content.
          type: string
        relevanceScore:
          description: >-
            The relevance of the chunk for a given query. Values range from 0.0
            (completely irrelevant) to 1.0 (completely relevant). This value is
            for informational purpose only. It may change for the same query and
            chunk at any time due to a model retraining or change in
            implementation.
          type: number
          format: float
    GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfo:
      id: GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfo
      description: Query understanding information.
      type: object
      properties:
        queryClassificationInfo:
          description: Query classification information.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo
    GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo:
      id: >-
        GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo
      description: Query classification information.
      type: object
      properties:
        type:
          description: Query classification type.
          type: string
          enumDescriptions:
            - Unspecified query classification type.
            - Adversarial query classification type.
            - Non-answer-seeking query classification type, for chit chat.
            - Jail-breaking query classification type.
            - Non-answer-seeking query classification type, for no clear intent.
          enum:
            - TYPE_UNSPECIFIED
            - ADVERSARIAL_QUERY
            - NON_ANSWER_SEEKING_QUERY
            - JAIL_BREAKING_QUERY
            - NON_ANSWER_SEEKING_QUERY_V2
        positive:
          description: Classification output.
          type: boolean
    GoogleCloudDiscoveryengineV1Session:
      id: GoogleCloudDiscoveryengineV1Session
      description: External session proto definition.
      type: object
      properties:
        name:
          description: >-
            Immutable. Fully qualified name
            `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*`
          type: string
        state:
          description: The state of the session.
          type: string
          enumDescriptions:
            - State is unspecified.
            - The session is currently open.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
        userPseudoId:
          description: A unique identifier for tracking users.
          type: string
        turns:
          description: Turns.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1SessionTurn'
        startTime:
          description: Output only. The time the session started.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the session finished.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1SessionTurn:
      id: GoogleCloudDiscoveryengineV1SessionTurn
      description: >-
        Represents a turn, including a query from the user and a answer from
        service.
      type: object
      properties:
        query:
          description: The user query.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Query'
        answer:
          description: >-
            The resource name of the answer to the user query. Only set if the
            answer generation (/answer API call) happened in this turn.
          type: string
    GoogleCloudDiscoveryengineV1ListSessionsResponse:
      id: GoogleCloudDiscoveryengineV1ListSessionsResponse
      description: Response for ListSessions method.
      type: object
      properties:
        sessions:
          description: All the Sessions for a given data store.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
        nextPageToken:
          description: Pagination token, if not returned indicates the last page.
          type: string
    GoogleCloudDiscoveryengineV1DataStore:
      id: GoogleCloudDiscoveryengineV1DataStore
      description: DataStore captures global settings and configs at the DataStore level.
      type: object
      properties:
        name:
          description: >-
            Immutable. The full resource name of the data store. Format:
            `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
            This field must be a UTF-8 encoded string with a length limit of
            1024 characters.
          type: string
        displayName:
          description: >-
            Required. The data store display name. This field must be a UTF-8
            encoded string with a length limit of 128 characters. Otherwise, an
            INVALID_ARGUMENT error is returned.
          type: string
        industryVertical:
          description: Immutable. The industry vertical that the data store registers.
          type: string
          enumDescriptions:
            - Value used when unset.
            - >-
              The generic vertical for documents that are not specific to any
              industry vertical.
            - The media industry vertical.
            - The healthcare FHIR vertical.
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
            - HEALTHCARE_FHIR
        solutionTypes:
          description: >-
            The solutions that the data store enrolls. Available solutions for
            each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION`
            and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH`
            is automatically enrolled. Other solutions cannot be enrolled.
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value.
              - Used for Recommendations AI.
              - Used for Discovery Search.
              - Used for use cases related to the Generative AI agent.
              - >-
                Used for use cases related to the Generative Chat agent. It's
                used for Generative chat engine only, the associated data stores
                must enrolled with `SOLUTION_TYPE_CHAT` solution.
            enum:
              - SOLUTION_TYPE_UNSPECIFIED
              - SOLUTION_TYPE_RECOMMENDATION
              - SOLUTION_TYPE_SEARCH
              - SOLUTION_TYPE_CHAT
              - SOLUTION_TYPE_GENERATIVE_CHAT
        defaultSchemaId:
          description: >-
            Output only. The id of the default Schema asscociated to this data
            store.
          readOnly: true
          type: string
        contentConfig:
          description: >-
            Immutable. The content config of the data store. If this field is
            unset, the server behavior defaults to ContentConfig.NO_CONTENT.
          type: string
          enumDescriptions:
            - Default value.
            - Only contains documents without any Document.content.
            - Only contains documents with Document.content.
            - The data store is used for public website search.
            - >-
              The data store is used for workspace search. Details of workspace
              data store are specified in the WorkspaceConfig.
          enum:
            - CONTENT_CONFIG_UNSPECIFIED
            - NO_CONTENT
            - CONTENT_REQUIRED
            - PUBLIC_WEBSITE
            - GOOGLE_WORKSPACE
        createTime:
          description: Output only. Timestamp the DataStore was created at.
          readOnly: true
          type: string
          format: google-datetime
        workspaceConfig:
          description: >-
            Config to store data store type configuration for workspace data.
            This must be set when DataStore.content_config is set as
            DataStore.ContentConfig.GOOGLE_WORKSPACE.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1WorkspaceConfig'
        documentProcessingConfig:
          description: Configuration for Document understanding and enrichment.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfig
        startingSchema:
          description: >-
            The start schema to use for this DataStore when provisioning it. If
            unset, a default vertical specialized schema will be used. This
            field is only used by CreateDataStore API, and will be ignored if
            used in other APIs. This field will be omitted from all API
            responses including CreateDataStore API. To retrieve a schema of a
            DataStore, use SchemaService.GetSchema API instead. The provided
            schema will be validated against certain rules on schema. Learn more
            from [this
            doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Schema'
        servingConfigDataStore:
          description: Optional. Stores serving config at DataStore level.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1ServingConfigDataStore
    GoogleCloudDiscoveryengineV1WorkspaceConfig:
      id: GoogleCloudDiscoveryengineV1WorkspaceConfig
      description: Config to store data store type configuration for workspace data
      type: object
      properties:
        type:
          description: The Google Workspace data source.
          type: string
          enumDescriptions:
            - Defaults to an unspecified Workspace type.
            - Workspace Data Store contains Drive data
            - Workspace Data Store contains Mail data
            - Workspace Data Store contains Sites data
            - Workspace Data Store contains Calendar data
            - Workspace Data Store contains Chat data
            - Workspace Data Store contains Groups data
            - Workspace Data Store contains Keep data
          enum:
            - TYPE_UNSPECIFIED
            - GOOGLE_DRIVE
            - GOOGLE_MAIL
            - GOOGLE_SITES
            - GOOGLE_CALENDAR
            - GOOGLE_CHAT
            - GOOGLE_GROUPS
            - GOOGLE_KEEP
        dasherCustomerId:
          description: Obfuscated Dasher customer ID.
          type: string
    GoogleCloudDiscoveryengineV1DocumentProcessingConfig:
      id: GoogleCloudDiscoveryengineV1DocumentProcessingConfig
      description: >-
        A singleton resource of DataStore. It's empty when DataStore is created,
        which defaults to digital parser. The first call to
        DataStoreService.UpdateDocumentProcessingConfig method will initialize
        the config.
      type: object
      properties:
        name:
          description: >-
            The full resource name of the Document Processing Config. Format:
            `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`.
          type: string
        chunkingConfig:
          description: Whether chunking mode is enabled.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfig
        defaultParsingConfig:
          description: >-
            Configurations for default Document parser. If not specified, we
            will configure it as default DigitalParsingConfig, and the default
            parsing config will be applied to all file types for Document
            parsing.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig
        parsingConfigOverrides:
          description: >-
            Map from file type to override the default parsing configuration
            based on the file type. Supported keys: * `pdf`: Override parsing
            config for PDF files, either digital parsing, ocr parsing or layout
            parsing is supported. * `html`: Override parsing config for HTML
            files, only digital parsing and layout parsing are supported. *
            `docx`: Override parsing config for DOCX files, only digital parsing
            and layout parsing are supported. * `pptx`: Override parsing config
            for PPTX files, only digital parsing and layout parsing are
            supported. * `xlsm`: Override parsing config for XLSM files, only
            digital parsing and layout parsing are supported. * `xlsx`: Override
            parsing config for XLSX files, only digital parsing and layout
            parsing are supported.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig
    GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfig:
      id: GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfig
      description: Configuration for chunking config.
      type: object
      properties:
        layoutBasedChunkingConfig:
          description: Configuration for the layout based chunking.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig
    GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig
      description: Configuration for the layout based chunking.
      type: object
      properties:
        chunkSize:
          description: >-
            The token size limit for each chunk. Supported values: 100-500
            (inclusive). Default value: 500.
          type: integer
          format: int32
        includeAncestorHeadings:
          description: >-
            Whether to include appending different levels of headings to chunks
            from the middle of the document to prevent context loss. Default
            value: False.
          type: boolean
    GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig:
      id: GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig
      description: Related configurations applied to a specific type of document parser.
      type: object
      properties:
        digitalParsingConfig:
          description: Configurations applied to digital parser.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigDigitalParsingConfig
        ocrParsingConfig:
          description: >-
            Configurations applied to OCR parser. Currently it only applies to
            PDFs.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigOcrParsingConfig
        layoutParsingConfig:
          description: Configurations applied to layout parser.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigLayoutParsingConfig
    GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigDigitalParsingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigDigitalParsingConfig
      description: The digital parsing configurations for documents.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigOcrParsingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigOcrParsingConfig
      description: The OCR parsing configurations for documents.
      type: object
      properties:
        enhancedDocumentElements:
          description: >-
            [DEPRECATED] This field is deprecated. To use the additional
            enhanced document elements processing, please switch to
            `layout_parsing_config`.
          deprecated: true
          type: array
          items:
            type: string
        useNativeText:
          description: >-
            If true, will use native text instead of OCR text on pages
            containing native text.
          type: boolean
    GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigLayoutParsingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigLayoutParsingConfig
      description: The layout parsing configurations for documents.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1Schema:
      id: GoogleCloudDiscoveryengineV1Schema
      description: Defines the structure and layout of a type of document data.
      type: object
      properties:
        structSchema:
          description: The structured representation of the schema.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        jsonSchema:
          description: The JSON representation of the schema.
          type: string
        name:
          description: >-
            Immutable. The full resource name of the schema, in the format of
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
            This field must be a UTF-8 encoded string with a length limit of
            1024 characters.
          type: string
    GoogleCloudDiscoveryengineV1ServingConfigDataStore:
      id: GoogleCloudDiscoveryengineV1ServingConfigDataStore
      description: >-
        Stores information regarding the serving configurations at DataStore
        level.
      type: object
      properties:
        disabledForServing:
          description: >-
            If set true, the DataStore will not be available for serving search
            requests.
          type: boolean
    GoogleCloudDiscoveryengineV1ListDataStoresResponse:
      id: GoogleCloudDiscoveryengineV1ListDataStoresResponse
      description: Response message for DataStoreService.ListDataStores method.
      type: object
      properties:
        dataStores:
          description: All the customer's DataStores.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DataStore'
        nextPageToken:
          description: >-
            A token that can be sent as ListDataStoresRequest.page_token to
            retrieve the next page. If this field is omitted, there are no
            subsequent pages.
          type: string
    GoogleCloudDiscoveryengineV1ListDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1ListDocumentsResponse
      description: Response message for DocumentService.ListDocuments method.
      type: object
      properties:
        documents:
          description: The Documents.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
        nextPageToken:
          description: >-
            A token that can be sent as ListDocumentsRequest.page_token to
            retrieve the next page. If this field is omitted, there are no
            subsequent pages.
          type: string
    GoogleCloudDiscoveryengineV1ImportDocumentsRequest:
      id: GoogleCloudDiscoveryengineV1ImportDocumentsRequest
      description: Request message for Import methods.
      type: object
      properties:
        inlineSource:
          description: The Inline source for the input content for documents.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1ImportDocumentsRequestInlineSource
        gcsSource:
          description: Cloud Storage location for the input content.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1GcsSource'
        bigquerySource:
          description: BigQuery input source.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1BigQuerySource'
        fhirStoreSource:
          description: FhirStore input source.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1FhirStoreSource'
        spannerSource:
          description: Spanner input source.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1SpannerSource'
        cloudSqlSource:
          description: Cloud SQL input source.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1CloudSqlSource'
        firestoreSource:
          description: Firestore input source.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1FirestoreSource'
        alloyDbSource:
          description: AlloyDB input source.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1AlloyDbSource'
        bigtableSource:
          description: Cloud Bigtable input source.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1BigtableSource'
        errorConfig:
          description: The desired location of errors incurred during the Import.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig'
        reconciliationMode:
          description: >-
            The mode of reconciliation between existing documents and the
            documents to be imported. Defaults to
            ReconciliationMode.INCREMENTAL.
          type: string
          enumDescriptions:
            - Defaults to `INCREMENTAL`.
            - Inserts new documents or updates existing documents.
            - >-
              Calculates diff and replaces the entire document dataset. Existing
              documents may be deleted if they are not present in the source
              location.
          enum:
            - RECONCILIATION_MODE_UNSPECIFIED
            - INCREMENTAL
            - FULL
        updateMask:
          description: >-
            Indicates which fields in the provided imported documents to update.
            If not set, the default is to update all fields.
          type: string
          format: google-fieldmask
        autoGenerateIds:
          description: >-
            Whether to automatically generate IDs for the documents if absent.
            If set to `true`, Document.ids are automatically generated based on
            the hash of the payload, where IDs may not be consistent during
            multiple imports. In which case ReconciliationMode.FULL is highly
            recommended to avoid duplicate contents. If unset or set to `false`,
            Document.ids have to be specified using id_field, otherwise,
            documents without IDs fail to be imported. Supported data sources: *
            GcsSource. GcsSource.data_schema must be `custom` or `csv`.
            Otherwise, an INVALID_ARGUMENT error is thrown. * BigQuerySource.
            BigQuerySource.data_schema must be `custom` or `csv`. Otherwise, an
            INVALID_ARGUMENT error is thrown. * SpannerSource. * CloudSqlSource.
            * FirestoreSource. * BigtableSource.
          type: boolean
        idField:
          description: >-
            The field indicates the ID field or column to be used as unique IDs
            of the documents. For GcsSource it is the key of the JSON field. For
            instance, `my_id` for JSON `{"my_id": "some_uuid"}`. For others, it
            may be the column name of the table where the unique ids are stored.
            The values of the JSON field or the table column are used as the
            Document.ids. The JSON field or the table column must be of string
            type, and the values must be set as valid strings conform to
            [RFC-1034](https://tools.ietf.org/html/rfc1034) with 1-63
            characters. Otherwise, documents without valid IDs fail to be
            imported. Only set this field when auto_generate_ids is unset or set
            as `false`. Otherwise, an INVALID_ARGUMENT error is thrown. If it is
            unset, a default value `_id` is used when importing from the allowed
            data sources. Supported data sources: * GcsSource.
            GcsSource.data_schema must be `custom` or `csv`. Otherwise, an
            INVALID_ARGUMENT error is thrown. * BigQuerySource.
            BigQuerySource.data_schema must be `custom` or `csv`. Otherwise, an
            INVALID_ARGUMENT error is thrown. * SpannerSource. * CloudSqlSource.
            * FirestoreSource. * BigtableSource.
          type: string
    GoogleCloudDiscoveryengineV1ImportDocumentsRequestInlineSource:
      id: GoogleCloudDiscoveryengineV1ImportDocumentsRequestInlineSource
      description: The inline source for the input config for ImportDocuments method.
      type: object
      properties:
        documents:
          description: >-
            Required. A list of documents to update/create. Each document must
            have a valid Document.id. Recommended max of 100 items.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
    GoogleCloudDiscoveryengineV1FhirStoreSource:
      id: GoogleCloudDiscoveryengineV1FhirStoreSource
      description: Cloud FhirStore source import data from.
      type: object
      properties:
        fhirStore:
          description: >-
            Required. The full resource name of the FHIR store to import data
            from, in the format of
            `projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}`.
          type: string
        gcsStagingDir:
          description: >-
            Intermediate Cloud Storage directory used for the import with a
            length limit of 2,000 characters. Can be specified if one wants to
            have the FhirStore export to a specific Cloud Storage directory.
          type: string
        resourceTypes:
          description: >-
            The FHIR resource types to import. The resource types should be a
            subset of all [supported FHIR resource
            types](https://cloud.google.com/generative-ai-app-builder/docs/fhir-schema-reference#resource-level-specification).
            Default to all supported FHIR resource types if empty.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1SpannerSource:
      id: GoogleCloudDiscoveryengineV1SpannerSource
      description: The Spanner source for importing data
      type: object
      properties:
        projectId:
          description: >-
            The project ID that contains the Spanner source. Has a length limit
            of 128 characters. If not specified, inherits the project ID from
            the parent request.
          type: string
        instanceId:
          description: Required. The instance ID of the source Spanner table.
          type: string
        databaseId:
          description: Required. The database ID of the source Spanner table.
          type: string
        tableId:
          description: >-
            Required. The table name of the Spanner database that needs to be
            imported.
          type: string
        enableDataBoost:
          description: >-
            Whether to apply data boost on Spanner export. Enabling this option
            will incur additional cost. More info can be found
            [here](https://cloud.google.com/spanner/docs/databoost/databoost-overview#billing_and_quotas).
          type: boolean
    GoogleCloudDiscoveryengineV1CloudSqlSource:
      id: GoogleCloudDiscoveryengineV1CloudSqlSource
      description: Cloud SQL source import data from.
      type: object
      properties:
        projectId:
          description: >-
            The project ID that contains the Cloud SQL source. Has a length
            limit of 128 characters. If not specified, inherits the project ID
            from the parent request.
          type: string
        instanceId:
          description: >-
            Required. The Cloud SQL instance to copy the data from with a length
            limit of 256 characters.
          type: string
        databaseId:
          description: >-
            Required. The Cloud SQL database to copy the data from with a length
            limit of 256 characters.
          type: string
        tableId:
          description: >-
            Required. The Cloud SQL table to copy the data from with a length
            limit of 256 characters.
          type: string
        gcsStagingDir:
          description: >-
            Intermediate Cloud Storage directory used for the import with a
            length limit of 2,000 characters. Can be specified if one wants to
            have the Cloud SQL export to a specific Cloud Storage directory.
            Ensure that the Cloud SQL service account has the necessary Cloud
            Storage Admin permissions to access the specified Cloud Storage
            directory.
          type: string
        offload:
          description: >-
            Option for serverless export. Enabling this option will incur
            additional cost. More info can be found
            [here](https://cloud.google.com/sql/pricing#serverless).
          type: boolean
    GoogleCloudDiscoveryengineV1FirestoreSource:
      id: GoogleCloudDiscoveryengineV1FirestoreSource
      description: Firestore source import data from.
      type: object
      properties:
        projectId:
          description: >-
            The project ID that the Cloud SQL source is in with a length limit
            of 128 characters. If not specified, inherits the project ID from
            the parent request.
          type: string
        databaseId:
          description: >-
            Required. The Firestore database to copy the data from with a length
            limit of 256 characters.
          type: string
        collectionId:
          description: >-
            Required. The Firestore collection (or entity) to copy the data from
            with a length limit of 1,500 characters.
          type: string
        gcsStagingDir:
          description: >-
            Intermediate Cloud Storage directory used for the import with a
            length limit of 2,000 characters. Can be specified if one wants to
            have the Firestore export to a specific Cloud Storage directory.
            Ensure that the Firestore service account has the necessary Cloud
            Storage Admin permissions to access the specified Cloud Storage
            directory.
          type: string
    GoogleCloudDiscoveryengineV1AlloyDbSource:
      id: GoogleCloudDiscoveryengineV1AlloyDbSource
      description: AlloyDB source import data from.
      type: object
      properties:
        projectId:
          description: >-
            The project ID that contains the AlloyDB source. Has a length limit
            of 128 characters. If not specified, inherits the project ID from
            the parent request.
          type: string
        locationId:
          description: >-
            Required. The AlloyDB location to copy the data from with a length
            limit of 256 characters.
          type: string
        clusterId:
          description: >-
            Required. The AlloyDB cluster to copy the data from with a length
            limit of 256 characters.
          type: string
        databaseId:
          description: >-
            Required. The AlloyDB database to copy the data from with a length
            limit of 256 characters.
          type: string
        tableId:
          description: >-
            Required. The AlloyDB table to copy the data from with a length
            limit of 256 characters.
          type: string
        gcsStagingDir:
          description: >-
            Intermediate Cloud Storage directory used for the import with a
            length limit of 2,000 characters. Can be specified if one wants to
            have the AlloyDB export to a specific Cloud Storage directory.
            Ensure that the AlloyDB service account has the necessary Cloud
            Storage Admin permissions to access the specified Cloud Storage
            directory.
          type: string
    GoogleCloudDiscoveryengineV1BigtableSource:
      id: GoogleCloudDiscoveryengineV1BigtableSource
      description: The Cloud Bigtable source for importing data.
      type: object
      properties:
        projectId:
          description: >-
            The project ID that contains the Bigtable source. Has a length limit
            of 128 characters. If not specified, inherits the project ID from
            the parent request.
          type: string
        instanceId:
          description: >-
            Required. The instance ID of the Cloud Bigtable that needs to be
            imported.
          type: string
        tableId:
          description: >-
            Required. The table ID of the Cloud Bigtable that needs to be
            imported.
          type: string
        bigtableOptions:
          description: >-
            Required. Bigtable options that contains information needed when
            parsing data into typed structures. For example, column type
            annotations.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1BigtableOptions'
    GoogleCloudDiscoveryengineV1BigtableOptions:
      id: GoogleCloudDiscoveryengineV1BigtableOptions
      description: >-
        The Bigtable Options object that contains information to support the
        import.
      type: object
      properties:
        keyFieldName:
          description: >-
            The field name used for saving row key value in the document. The
            name has to match the pattern `a-zA-Z0-9*`.
          type: string
        families:
          description: >-
            The mapping from family names to an object that contains column
            families level information for the given column family. If a family
            is not present in this map it will be ignored.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily
    GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily:
      id: GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily
      description: The column family of the Bigtable.
      type: object
      properties:
        fieldName:
          description: >-
            The field name to use for this column family in the document. The
            name has to match the pattern `a-zA-Z0-9*`. If not set, it is parsed
            from the family name with best effort. However, due to different
            naming patterns, field name collisions could happen, where parsing
            behavior is undefined.
          type: string
        encoding:
          description: >-
            The encoding mode of the values when the type is not STRING.
            Acceptable encoding values are: * `TEXT`: indicates values are
            alphanumeric text strings. * `BINARY`: indicates values are encoded
            using `HBase Bytes.toBytes` family of functions. This can be
            overridden for a specific column by listing that column in `columns`
            and specifying an encoding for it.
          type: string
          enumDescriptions:
            - The encoding is unspecified.
            - Text encoding.
            - Binary encoding.
          enum:
            - ENCODING_UNSPECIFIED
            - TEXT
            - BINARY
        type:
          description: >-
            The type of values in this column family. The values are expected to
            be encoded using `HBase Bytes.toBytes` function when the encoding
            value is set to `BINARY`.
          type: string
          enumDescriptions:
            - The type is unspecified.
            - String type.
            - Numerical type.
            - Integer type.
            - Variable length integer type.
            - BigDecimal type.
            - Boolean type.
            - JSON type.
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - NUMBER
            - INTEGER
            - VAR_INTEGER
            - BIG_NUMERIC
            - BOOLEAN
            - JSON
        columns:
          description: >-
            The list of objects that contains column level information for each
            column. If a column is not present in this list it will be ignored.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn
    GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn:
      id: GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn
      description: The column of the Bigtable.
      type: object
      properties:
        qualifier:
          description: >-
            Required. Qualifier of the column. If it cannot be decoded with
            utf-8, use a base-64 encoded string instead.
          type: string
          format: byte
        fieldName:
          description: >-
            The field name to use for this column in the document. The name has
            to match the pattern `a-zA-Z0-9*`. If not set, it is parsed from the
            qualifier bytes with best effort. However, due to different naming
            patterns, field name collisions could happen, where parsing behavior
            is undefined.
          type: string
        encoding:
          description: >-
            The encoding mode of the values when the type is not `STRING`.
            Acceptable encoding values are: * `TEXT`: indicates values are
            alphanumeric text strings. * `BINARY`: indicates values are encoded
            using `HBase Bytes.toBytes` family of functions. This can be
            overridden for a specific column by listing that column in `columns`
            and specifying an encoding for it.
          type: string
          enumDescriptions:
            - The encoding is unspecified.
            - Text encoding.
            - Binary encoding.
          enum:
            - ENCODING_UNSPECIFIED
            - TEXT
            - BINARY
        type:
          description: >-
            The type of values in this column family. The values are expected to
            be encoded using `HBase Bytes.toBytes` function when the encoding
            value is set to `BINARY`.
          type: string
          enumDescriptions:
            - The type is unspecified.
            - String type.
            - Numerical type.
            - Integer type.
            - Variable length integer type.
            - BigDecimal type.
            - Boolean type.
            - JSON type.
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - NUMBER
            - INTEGER
            - VAR_INTEGER
            - BIG_NUMERIC
            - BOOLEAN
            - JSON
    GoogleCloudDiscoveryengineV1PurgeDocumentsRequest:
      id: GoogleCloudDiscoveryengineV1PurgeDocumentsRequest
      description: Request message for DocumentService.PurgeDocuments method.
      type: object
      properties:
        gcsSource:
          description: >-
            Cloud Storage location for the input content. Supported
            `data_schema`: * `document_id`: One valid Document.id per line.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1GcsSource'
        inlineSource:
          description: Inline source for the input content for purge.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1PurgeDocumentsRequestInlineSource
        filter:
          description: >-
            Required. Filter matching documents to purge. Only currently
            supported value is `*` (all items).
          type: string
        errorConfig:
          description: The desired location of errors incurred during the purge.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1PurgeErrorConfig'
        force:
          description: >-
            Actually performs the purge. If `force` is set to false, return the
            expected purge count without deleting any documents.
          type: boolean
    GoogleCloudDiscoveryengineV1PurgeDocumentsRequestInlineSource:
      id: GoogleCloudDiscoveryengineV1PurgeDocumentsRequestInlineSource
      description: >-
        The inline source for the input config for
        DocumentService.PurgeDocuments method.
      type: object
      properties:
        documents:
          description: >-
            Required. A list of full resource name of documents to purge. In the
            format
            `projects/*/locations/*/collections/*/dataStores/*/branches/*/documents/*`.
            Recommended max of 100 items.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1PurgeErrorConfig:
      id: GoogleCloudDiscoveryengineV1PurgeErrorConfig
      description: Configuration of destination for Purge related errors.
      type: object
      properties:
        gcsPrefix:
          description: >-
            Cloud Storage prefix for purge errors. This must be an empty,
            existing Cloud Storage directory. Purge errors are written to
            sharded files in this directory, one per line, as a JSON-encoded
            `google.rpc.Status` message.
          type: string
    GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponse:
      id: GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponse
      description: Response message for DocumentService.BatchGetDocumentsMetadata method.
      type: object
      properties:
        documentsMetadata:
          description: The metadata of the Documents.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata
    GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata:
      id: >-
        GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata
      description: The metadata of a Document.
      type: object
      properties:
        matcherValue:
          description: The value of the matcher that was used to match the Document.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadataMatcherValue
        state:
          description: The state of the document.
          type: string
          enumDescriptions:
            - Should never be set.
            - The Document is indexed.
            - >-
              The Document is not indexed because its URI is not in the
              TargetSite.
            - The Document is not indexed.
          enum:
            - STATE_UNSPECIFIED
            - INDEXED
            - NOT_IN_TARGET_SITE
            - NOT_IN_INDEX
        lastRefreshedTime:
          description: The timestamp of the last time the Document was last indexed.
          type: string
          format: google-datetime
        dataIngestionSource:
          description: >-
            The data ingestion source of the Document. Allowed values are: *
            `batch`: Data ingested via Batch API, e.g., ImportDocuments. *
            `streaming` Data ingested via Streaming API, e.g., FHIR streaming.
          type: string
    GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadataMatcherValue:
      id: >-
        GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadataMatcherValue
      description: The value of the matcher that was used to match the Document.
      type: object
      properties:
        uri:
          description: If match by URI, the URI of the Document.
          type: string
        fhirResource:
          description: >-
            Required. Format:
            projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}/fhir/{resource_type}/{fhir_resource_id}
          type: string
    GoogleCloudDiscoveryengineV1Engine:
      id: GoogleCloudDiscoveryengineV1Engine
      description: >-
        Metadata that describes the training and serving parameters of an
        Engine.
      type: object
      properties:
        chatEngineConfig:
          description: >-
            Configurations for the Chat Engine. Only applicable if solution_type
            is SOLUTION_TYPE_CHAT.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1EngineChatEngineConfig
        searchEngineConfig:
          description: >-
            Configurations for the Search Engine. Only applicable if
            solution_type is SOLUTION_TYPE_SEARCH.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1EngineSearchEngineConfig
        chatEngineMetadata:
          description: >-
            Output only. Additional information of the Chat Engine. Only
            applicable if solution_type is SOLUTION_TYPE_CHAT.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1EngineChatEngineMetadata
        name:
          description: >-
            Immutable. The fully qualified resource name of the engine. This
            field must be a UTF-8 encoded string with a length limit of 1024
            characters. Format:
            `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
            engine should be 1-63 characters, and valid characters are
            /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned.
          type: string
        displayName:
          description: >-
            Required. The display name of the engine. Should be human readable.
            UTF-8 encoded string with limit of 1024 characters.
          type: string
        createTime:
          description: Output only. Timestamp the Recommendation Engine was created at.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Timestamp the Recommendation Engine was last updated.
          readOnly: true
          type: string
          format: google-datetime
        dataStoreIds:
          description: >-
            The data stores associated with this engine. For
            SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of
            engines, they can only associate with at most one data store. If
            solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same
            Collection can be associated here. Note that when used in
            CreateEngineRequest, one DataStore id must be provided as the system
            will use it for necessary initializations.
          type: array
          items:
            type: string
        solutionType:
          description: Required. The solutions of the engine.
          type: string
          enumDescriptions:
            - Default value.
            - Used for Recommendations AI.
            - Used for Discovery Search.
            - Used for use cases related to the Generative AI agent.
            - >-
              Used for use cases related to the Generative Chat agent. It's used
              for Generative chat engine only, the associated data stores must
              enrolled with `SOLUTION_TYPE_CHAT` solution.
          enum:
            - SOLUTION_TYPE_UNSPECIFIED
            - SOLUTION_TYPE_RECOMMENDATION
            - SOLUTION_TYPE_SEARCH
            - SOLUTION_TYPE_CHAT
            - SOLUTION_TYPE_GENERATIVE_CHAT
        industryVertical:
          description: >-
            The industry vertical that the engine registers. The restriction of
            the Engine industry vertical is based on DataStore: If unspecified,
            default to `GENERIC`. Vertical on Engine has to match vertical of
            the DataStore linked to the engine.
          type: string
          enumDescriptions:
            - Value used when unset.
            - >-
              The generic vertical for documents that are not specific to any
              industry vertical.
            - The media industry vertical.
            - The healthcare FHIR vertical.
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
            - HEALTHCARE_FHIR
        commonConfig:
          description: Common config spec that specifies the metadata of the engine.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1EngineCommonConfig'
    GoogleCloudDiscoveryengineV1EngineChatEngineConfig:
      id: GoogleCloudDiscoveryengineV1EngineChatEngineConfig
      description: Configurations for a Chat Engine.
      type: object
      properties:
        agentCreationConfig:
          description: >-
            The configurationt generate the Dialogflow agent that is associated
            to this Engine. Note that these configurations are one-time consumed
            by and passed to Dialogflow service. It means they cannot be
            retrieved using EngineService.GetEngine or EngineService.ListEngines
            API after engine creation.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig
        dialogflowAgentToLink:
          description: >-
            The resource name of an exist Dialogflow agent to link to this Chat
            Engine. Customers can either provide `agent_creation_config` to
            create agent or provide an agent name that links the agent with the
            Chat engine. Format: `projects//locations//agents/`. Note that the
            `dialogflow_agent_to_link` are one-time consumed by and passed to
            Dialogflow service. It means they cannot be retrieved using
            EngineService.GetEngine or EngineService.ListEngines API after
            engine creation. Use ChatEngineMetadata.dialogflow_agent for actual
            agent association after Engine is created.
          type: string
    GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig:
      id: GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig
      description: >-
        Configurations for generating a Dialogflow agent. Note that these
        configurations are one-time consumed by and passed to Dialogflow
        service. It means they cannot be retrieved using EngineService.GetEngine
        or EngineService.ListEngines API after engine creation.
      type: object
      properties:
        business:
          description: >-
            Name of the company, organization or other entity that the agent
            represents. Used for knowledge connector LLM prompt and for
            knowledge search.
          type: string
        defaultLanguageCode:
          description: >-
            Required. The default language of the agent as a language tag. See
            [Language
            Support](https://cloud.google.com/dialogflow/docs/reference/language)
            for a list of the currently supported language codes.
          type: string
        timeZone:
          description: >-
            Required. The time zone of the agent from the [time zone
            database](https://www.iana.org/time-zones), e.g., America/New_York,
            Europe/Paris.
          type: string
        location:
          description: >-
            Agent location for Agent creation, supported values: global/us/eu.
            If not provided, us Engine will create Agent using us-central-1 by
            default; eu Engine will create Agent using eu-west-1 by default.
          type: string
    GoogleCloudDiscoveryengineV1EngineSearchEngineConfig:
      id: GoogleCloudDiscoveryengineV1EngineSearchEngineConfig
      description: Configurations for a Search Engine.
      type: object
      properties:
        searchTier:
          description: >-
            The search feature tier of this engine. Different tiers might have
            different pricing. To learn more, check the pricing documentation.
            Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
          type: string
          enumDescriptions:
            - >-
              Default value when the enum is unspecified. This is invalid to
              use.
            - Standard tier.
            - Enterprise tier.
          enum:
            - SEARCH_TIER_UNSPECIFIED
            - SEARCH_TIER_STANDARD
            - SEARCH_TIER_ENTERPRISE
        searchAddOns:
          description: The add-on that this search engine enables.
          type: array
          items:
            type: string
            enumDescriptions:
              - >-
                Default value when the enum is unspecified. This is invalid to
                use.
              - Large language model add-on.
            enum:
              - SEARCH_ADD_ON_UNSPECIFIED
              - SEARCH_ADD_ON_LLM
    GoogleCloudDiscoveryengineV1EngineChatEngineMetadata:
      id: GoogleCloudDiscoveryengineV1EngineChatEngineMetadata
      description: >-
        Additional information of a Chat Engine. Fields in this message are
        output only.
      type: object
      properties:
        dialogflowAgent:
          description: >-
            The resource name of a Dialogflow agent, that this Chat Engine
            refers to. Format: `projects//locations//agents/`.
          type: string
    GoogleCloudDiscoveryengineV1EngineCommonConfig:
      id: GoogleCloudDiscoveryengineV1EngineCommonConfig
      description: Common configurations for an Engine.
      type: object
      properties:
        companyName:
          description: >-
            The name of the company, business or entity that is associated with
            the engine. Setting this may help improve LLM related features.
          type: string
    GoogleCloudDiscoveryengineV1ListEnginesResponse:
      id: GoogleCloudDiscoveryengineV1ListEnginesResponse
      description: Response message for EngineService.ListEngines method.
      type: object
      properties:
        engines:
          description: All the customer's Engines.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Engine'
        nextPageToken:
          description: Not supported.
          type: string
    GoogleCloudDiscoveryengineV1CheckGroundingRequest:
      id: GoogleCloudDiscoveryengineV1CheckGroundingRequest
      description: Request message for GroundedGenerationService.CheckGrounding method.
      type: object
      properties:
        answerCandidate:
          description: >-
            Answer candidate to check. Can have a maximum length of 1024
            characters.
          type: string
        facts:
          description: List of facts for the grounding check. We support up to 200 facts.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1GroundingFact'
        groundingSpec:
          description: Configuration of the grounding check.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1CheckGroundingSpec'
        userLabels:
          description: >-
            The user labels applied to a resource must meet the following
            requirements: * Each resource can have multiple labels, up to a
            maximum of 64. * Each label must be a key-value pair. * Keys have a
            minimum length of 1 character and a maximum length of 63 characters
            and cannot be empty. Values can be empty and have a maximum length
            of 63 characters. * Keys and values can contain only lowercase
            letters, numeric characters, underscores, and dashes. All characters
            must use UTF-8 encoding, and international characters are allowed. *
            The key portion of a label must be unique. However, you can use the
            same key with multiple resources. * Keys must start with a lowercase
            letter or international character. See [Google Cloud
            Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
            for more details.
          type: object
          additionalProperties:
            type: string
    GoogleCloudDiscoveryengineV1GroundingFact:
      id: GoogleCloudDiscoveryengineV1GroundingFact
      description: Grounding Fact.
      type: object
      properties:
        factText:
          description: Text content of the fact. Can be at most 10K characters long.
          type: string
        attributes:
          description: >-
            Attributes associated with the fact. Common attributes include
            `source` (indicating where the fact was sourced from), `author`
            (indicating the author of the fact), and so on.
          type: object
          additionalProperties:
            type: string
    GoogleCloudDiscoveryengineV1CheckGroundingSpec:
      id: GoogleCloudDiscoveryengineV1CheckGroundingSpec
      description: Specification for the grounding check.
      type: object
      properties:
        citationThreshold:
          description: >-
            The threshold (in [0,1]) used for determining whether a fact must be
            cited for a claim in the answer candidate. Choosing a higher
            threshold will lead to fewer but very strong citations, while
            choosing a lower threshold may lead to more but somewhat weaker
            citations. If unset, the threshold will default to 0.6.
          type: number
          format: double
    GoogleCloudDiscoveryengineV1CheckGroundingResponse:
      id: GoogleCloudDiscoveryengineV1CheckGroundingResponse
      description: >-
        Response message for the GroundedGenerationService.CheckGrounding
        method.
      type: object
      properties:
        supportScore:
          description: >-
            The support score for the input answer candidate. Higher the score,
            higher is the fraction of claims that are supported by the provided
            facts. This is always set when a response is returned.
          type: number
          format: float
        citedChunks:
          description: >-
            List of facts cited across all claims in the answer candidate. These
            are derived from the facts supplied in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1FactChunk'
        claims:
          description: >-
            Claim texts and citation info across all claims in the answer
            candidate.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1CheckGroundingResponseClaim
    GoogleCloudDiscoveryengineV1FactChunk:
      id: GoogleCloudDiscoveryengineV1FactChunk
      description: Fact Chunk.
      type: object
      properties:
        chunkText:
          description: Text content of the fact chunk. Can be at most 10K characters long.
          type: string
        source:
          description: >-
            Source from which this fact chunk was retrieved. If it was retrieved
            from the GroundingFacts provided in the request then this field will
            contain the index of the specific fact from which this chunk was
            retrieved.
          type: string
        index:
          description: >-
            The index of this chunk. Currently, only used for the streaming
            mode.
          type: integer
          format: int32
        sourceMetadata:
          description: More fine-grained information for the source reference.
          type: object
          additionalProperties:
            type: string
    GoogleCloudDiscoveryengineV1CheckGroundingResponseClaim:
      id: GoogleCloudDiscoveryengineV1CheckGroundingResponseClaim
      description: Text and citation info for a claim in the answer candidate.
      type: object
      properties:
        startPos:
          description: >-
            Position indicating the start of the claim in the answer candidate,
            measured in bytes.
          type: integer
          format: int32
        endPos:
          description: >-
            Position indicating the end of the claim in the answer candidate,
            exclusive.
          type: integer
          format: int32
        claimText:
          description: >-
            Text for the claim in the answer candidate. Always provided
            regardless of whether citations or anti-citations are found.
          type: string
        citationIndices:
          description: >-
            A list of indices (into 'cited_chunks') specifying the citations
            associated with the claim. For instance [1,3,4] means that
            cited_chunks[1], cited_chunks[3], cited_chunks[4] are the facts
            cited supporting for the claim. A citation to a fact indicates that
            the claim is supported by the fact.
          type: array
          items:
            type: integer
            format: int32
        groundingCheckRequired:
          description: >-
            Indicates that this claim required grounding check. When the system
            decided this claim doesn't require attribution/grounding check, this
            field will be set to false. In that case, no grounding check was
            done for the claim and therefore citation_indices,
            anti_citation_indices, and score should not be returned.
          type: boolean
    GoogleCloudDiscoveryengineV1ProvisionProjectRequest:
      id: GoogleCloudDiscoveryengineV1ProvisionProjectRequest
      description: Request for ProjectService.ProvisionProject method.
      type: object
      properties:
        acceptDataUseTerms:
          description: >-
            Required. Set to `true` to specify that caller has read and would
            like to give consent to the [Terms for data
            use](https://cloud.google.com/retail/data-use-terms).
          type: boolean
        dataUseTermsVersion:
          description: >-
            Required. The version of the [Terms for data
            use](https://cloud.google.com/retail/data-use-terms) that caller has
            read and would like to give consent to. Acceptable version is
            `2022-11-23`, and this may change over time.
          type: string
    GoogleCloudDiscoveryengineV1RankRequest:
      id: GoogleCloudDiscoveryengineV1RankRequest
      description: Request message for RankService.Rank method.
      type: object
      properties:
        model:
          description: >-
            The identifier of the model to use. It is one of: *
            `semantic-ranker-512@latest`: Semantic ranking model with maxiumn
            input token size 512. It is set to `semantic-ranker-512@latest` by
            default if unspecified.
          type: string
        topN:
          description: >-
            The number of results to return. If this is unset or no bigger than
            zero, returns all results.
          type: integer
          format: int32
        query:
          description: The query to use.
          type: string
        records:
          description: Required. A list of records to rank. At most 200 records to rank.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1RankingRecord'
        ignoreRecordDetailsInResponse:
          description: >-
            If true, the response will contain only record ID and score. By
            default, it is false, the response will contain record details.
          type: boolean
        userLabels:
          description: >-
            The user labels applied to a resource must meet the following
            requirements: * Each resource can have multiple labels, up to a
            maximum of 64. * Each label must be a key-value pair. * Keys have a
            minimum length of 1 character and a maximum length of 63 characters
            and cannot be empty. Values can be empty and have a maximum length
            of 63 characters. * Keys and values can contain only lowercase
            letters, numeric characters, underscores, and dashes. All characters
            must use UTF-8 encoding, and international characters are allowed. *
            The key portion of a label must be unique. However, you can use the
            same key with multiple resources. * Keys must start with a lowercase
            letter or international character. See [Google Cloud
            Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
            for more details.
          type: object
          additionalProperties:
            type: string
    GoogleCloudDiscoveryengineV1RankingRecord:
      id: GoogleCloudDiscoveryengineV1RankingRecord
      description: Record message for RankService.Rank method.
      type: object
      properties:
        id:
          description: The unique ID to represent the record.
          type: string
        title:
          description: >-
            The title of the record. Empty by default. At least one of title or
            content should be set otherwise an INVALID_ARGUMENT error is thrown.
          type: string
        content:
          description: >-
            The content of the record. Empty by default. At least one of title
            or content should be set otherwise an INVALID_ARGUMENT error is
            thrown.
          type: string
        score:
          description: >-
            The score of this record based on the given query and selected
            model.
          type: number
          format: float
    GoogleCloudDiscoveryengineV1RankResponse:
      id: GoogleCloudDiscoveryengineV1RankResponse
      description: Response message for RankService.Rank method.
      type: object
      properties:
        records:
          description: A list of records sorted by descending score.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1RankingRecord'
    GoogleCloudDiscoveryengineV1RecommendRequest:
      id: GoogleCloudDiscoveryengineV1RecommendRequest
      description: Request message for Recommend method.
      type: object
      properties:
        userEvent:
          description: >-
            Required. Context about the user, what they are looking at and what
            action they took to trigger the Recommend request. Note that this
            user event detail won't be ingested to userEvent logs. Thus, a
            separate userEvent write request is required for event logging.
            Don't set UserEvent.user_pseudo_id or UserEvent.user_info.user_id to
            the same fixed ID for different users. If you are trying to receive
            non-personalized recommendations (not recommended; this can
            negatively impact model performance), instead set
            UserEvent.user_pseudo_id to a random unique ID and leave
            UserEvent.user_info.user_id unset.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1UserEvent'
        pageSize:
          description: >-
            Maximum number of results to return. Set this property to the number
            of recommendation results needed. If zero, the service chooses a
            reasonable default. The maximum allowed value is 100. Values above
            100 are set to 100.
          type: integer
          format: int32
        filter:
          description: >-
            Filter for restricting recommendation results with a length limit of
            5,000 characters. Currently, only filter expressions on the
            `filter_tags` attribute is supported. Examples: * `(filter_tags:
            ANY("Red", "Blue") OR filter_tags: ANY("Hot", "Cold"))` *
            `(filter_tags: ANY("Red", "Blue")) AND NOT (filter_tags:
            ANY("Green"))` If `attributeFilteringSyntax` is set to true under
            the `params` field, then attribute-based expressions are expected
            instead of the above described tag-based syntax. Examples: *
            (launguage: ANY("en", "es")) AND NOT (categories: ANY("Movie")) *
            (available: true) AND (launguage: ANY("en", "es")) OR (categories:
            ANY("Movie")) If your filter blocks all results, the API returns
            generic (unfiltered) popular Documents. If you only want results
            strictly matching the filters, set `strictFiltering` to `true` in
            RecommendRequest.params to receive empty results instead. Note that
            the API never returns Documents with `storageStatus` as `EXPIRED` or
            `DELETED` regardless of filter choices.
          type: string
        validateOnly:
          description: >-
            Use validate only mode for this recommendation query. If set to
            `true`, a fake model is used that returns arbitrary Document IDs.
            Note that the validate only mode should only be used for testing the
            API, or if the model is not ready.
          type: boolean
        params:
          description: >-
            Additional domain specific parameters for the recommendations.
            Allowed values: * `returnDocument`: Boolean. If set to `true`, the
            associated Document object is returned in
            RecommendResponse.RecommendationResult.document. * `returnScore`:
            Boolean. If set to true, the recommendation score corresponding to
            each returned Document is set in
            RecommendResponse.RecommendationResult.metadata. The given score
            indicates the probability of a Document conversion given the user's
            context and history. * `strictFiltering`: Boolean. True by default.
            If set to `false`, the service returns generic (unfiltered) popular
            Documents instead of empty if your filter blocks all recommendation
            results. * `diversityLevel`: String. Default empty. If set to be
            non-empty, then it needs to be one of: * `no-diversity` *
            `low-diversity` * `medium-diversity` * `high-diversity` *
            `auto-diversity` This gives request-level control and adjusts
            recommendation results based on Document category. *
            `attributeFilteringSyntax`: Boolean. False by default. If set to
            true, the `filter` field is interpreted according to the new,
            attribute-based syntax.
          type: object
          additionalProperties:
            type: any
        userLabels:
          description: >-
            The user labels applied to a resource must meet the following
            requirements: * Each resource can have multiple labels, up to a
            maximum of 64. * Each label must be a key-value pair. * Keys have a
            minimum length of 1 character and a maximum length of 63 characters
            and cannot be empty. Values can be empty and have a maximum length
            of 63 characters. * Keys and values can contain only lowercase
            letters, numeric characters, underscores, and dashes. All characters
            must use UTF-8 encoding, and international characters are allowed. *
            The key portion of a label must be unique. However, you can use the
            same key with multiple resources. * Keys must start with a lowercase
            letter or international character. See [Requirements for
            labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
            for more details.
          type: object
          additionalProperties:
            type: string
    GoogleCloudDiscoveryengineV1UserEvent:
      id: GoogleCloudDiscoveryengineV1UserEvent
      description: >-
        UserEvent captures all metadata information Discovery Engine API needs
        to know about how end users interact with your website.
      type: object
      properties:
        eventType:
          description: >-
            Required. User event type. Allowed values are: Generic values: *
            `search`: Search for Documents. * `view-item`: Detailed page view of
            a Document. * `view-item-list`: View of a panel or ordered list of
            Documents. * `view-home-page`: View of the home page. *
            `view-category-page`: View of a category page, e.g. Home > Men >
            Jeans Retail-related values: * `add-to-cart`: Add an item(s) to
            cart, e.g. in Retail online shopping * `purchase`: Purchase an
            item(s) Media-related values: * `media-play`: Start/resume watching
            a video, playing a song, etc. * `media-complete`: Finished or
            stopped midway through a video, song, etc.
          type: string
        userPseudoId:
          description: >-
            Required. A unique identifier for tracking visitors. For example,
            this could be implemented with an HTTP cookie, which should be able
            to uniquely identify a visitor on a single device. This unique
            identifier should not change if the visitor log in/out of the
            website. Do not set the field to the same fixed ID for different
            users. This mixes the event history of those users together, which
            results in degraded model quality. The field must be a UTF-8 encoded
            string with a length limit of 128 characters. Otherwise, an
            `INVALID_ARGUMENT` error is returned. The field should not contain
            PII or user-data. We recommend to use Google Analytics [Client
            ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId)
            for this field.
          type: string
        engine:
          description: >-
            The Engine resource name, in the form of
            `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
            Optional. Only required for Engine produced user events. For
            example, user events from blended search.
          type: string
        dataStore:
          description: >-
            The DataStore resource full name, of the form
            `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
            Optional. Only required for user events whose data store can't by
            determined by UserEvent.engine or UserEvent.documents. If data store
            is set in the parent of write/import/collect user event requests,
            this field can be omitted.
          type: string
        eventTime:
          description: >-
            Only required for UserEventService.ImportUserEvents method.
            Timestamp of when the user event happened.
          type: string
          format: google-datetime
        userInfo:
          description: Information about the end user.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1UserInfo'
        directUserRequest:
          description: >-
            Should set to true if the request is made directly from the end
            user, in which case the UserEvent.user_info.user_agent can be
            populated from the HTTP request. This flag should be set only if the
            API request is made directly from the end user such as a mobile app
            (and not if a gateway or a server is processing and pushing the user
            events). This should not be set when using the JavaScript tag in
            UserEventService.CollectUserEvent.
          type: boolean
        sessionId:
          description: >-
            A unique identifier for tracking a visitor session with a length
            limit of 128 bytes. A session is an aggregation of an end user
            behavior in a time span. A general guideline to populate the
            session_id: 1. If user has no activity for 30 min, a new session_id
            should be assigned. 2. The session_id should be unique across users,
            suggest use uuid or add UserEvent.user_pseudo_id as prefix.
          type: string
        pageInfo:
          description: >-
            Page metadata such as categories and other critical information for
            certain event types such as `view-category-page`.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1PageInfo'
        attributionToken:
          description: >-
            Token to attribute an API response to user action(s) to trigger the
            event. Highly recommended for user events that are the result of
            RecommendationService.Recommend. This field enables accurate
            attribution of recommendation model performance. The value must be
            one of: * RecommendResponse.attribution_token for events that are
            the result of RecommendationService.Recommend. *
            SearchResponse.attribution_token for events that are the result of
            SearchService.Search. This token enables us to accurately attribute
            page view or conversion completion back to the event and the
            particular predict response containing this clicked/purchased
            product. If user clicks on product K in the recommendation results,
            pass RecommendResponse.attribution_token as a URL parameter to
            product K's page. When recording events on product K's page, log the
            RecommendResponse.attribution_token to this field.
          type: string
        filter:
          description: >-
            The filter syntax consists of an expression language for
            constructing a predicate from one or more fields of the documents
            being filtered. One example is for `search` events, the associated
            SearchRequest may contain a filter expression in
            SearchRequest.filter conforming to
            https://google.aip.dev/160#filtering. Similarly, for
            `view-item-list` events that are generated from a RecommendRequest,
            this field may be populated directly from RecommendRequest.filter
            conforming to https://google.aip.dev/160#filtering. The value must
            be a UTF-8 encoded string with a length limit of 1,000 characters.
            Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
        documents:
          description: >-
            List of Documents associated with this user event. This field is
            optional except for the following event types: * `view-item` *
            `add-to-cart` * `purchase` * `media-play` * `media-complete` In a
            `search` event, this field represents the documents returned to the
            end user on the current page (the end user may have not finished
            browsing the whole page yet). When a new page is returned to the end
            user, after pagination/filtering/ordering even for the same query, a
            new `search` event with different UserEvent.documents is desired.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DocumentInfo'
        panel:
          description: Panel metadata associated with this user event.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1PanelInfo'
        searchInfo:
          description: >-
            SearchService.Search details related to the event. This field should
            be set for `search` event.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1SearchInfo'
        completionInfo:
          description: >-
            CompletionService.CompleteQuery details related to the event. This
            field should be set for `search` event when autocomplete function is
            enabled and the user clicks a suggestion for search.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1CompletionInfo'
        transactionInfo:
          description: The transaction metadata (if any) associated with this user event.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TransactionInfo'
        tagIds:
          description: >-
            A list of identifiers for the independent experiment groups this
            user event belongs to. This is used to distinguish between user
            events associated with different experiment setups.
          type: array
          items:
            type: string
        promotionIds:
          description: >-
            The promotion IDs if this is an event associated with promotions.
            Currently, this field is restricted to at most one ID.
          type: array
          items:
            type: string
        attributes:
          description: >-
            Extra user event features to include in the recommendation model.
            These attributes must NOT contain data that needs to be parsed or
            processed further, e.g. JSON or other encodings. If you provide
            custom attributes for ingested user events, also include them in the
            user events that you associate with prediction requests. Custom
            attribute formatting must be consistent between imported events and
            events provided with prediction requests. This lets the Discovery
            Engine API use those custom attributes when training models and
            serving predictions, which helps improve recommendation quality.
            This field needs to pass all below criteria, otherwise an
            `INVALID_ARGUMENT` error is returned: * The key must be a UTF-8
            encoded string with a length limit of 5,000 characters. * For text
            attributes, at most 400 values are allowed. Empty values are not
            allowed. Each value must be a UTF-8 encoded string with a length
            limit of 256 characters. * For number attributes, at most 400 values
            are allowed. For product recommendations, an example of extra user
            information is `traffic_channel`, which is how a user arrives at the
            site. Users can arrive at the site by coming to the site directly,
            coming through Google search, or in other ways.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1CustomAttribute'
        mediaInfo:
          description: Media-specific info.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1MediaInfo'
    GoogleCloudDiscoveryengineV1PageInfo:
      id: GoogleCloudDiscoveryengineV1PageInfo
      description: Detailed page information.
      type: object
      properties:
        pageviewId:
          description: >-
            A unique ID of a web page view. This should be kept the same for all
            user events triggered from the same pageview. For example, an item
            detail page view could trigger multiple events as the user is
            browsing the page. The `pageview_id` property should be kept the
            same for all these events so that they can be grouped together
            properly. When using the client side event reporting with JavaScript
            pixel and Google Tag Manager, this value is filled in automatically.
          type: string
        pageCategory:
          description: >-
            The most specific category associated with a category page. To
            represent full path of category, use '>' sign to separate different
            hierarchies. If '>' is part of the category name, replace it with
            other character(s). Category pages include special pages such as
            sales or promotions. For instance, a special sale page may have the
            category hierarchy: `"pageCategory" : "Sales > 2017 Black Friday
            Deals"`. Required for `view-category-page` events. Other event types
            should not set this field. Otherwise, an `INVALID_ARGUMENT` error is
            returned.
          type: string
        uri:
          description: >-
            Complete URL (window.location.href) of the user's current page. When
            using the client side event reporting with JavaScript pixel and
            Google Tag Manager, this value is filled in automatically. Maximum
            length 5,000 characters.
          type: string
        referrerUri:
          description: >-
            The referrer URL of the current page. When using the client side
            event reporting with JavaScript pixel and Google Tag Manager, this
            value is filled in automatically. However, some browser privacy
            restrictions may cause this field to be empty.
          type: string
    GoogleCloudDiscoveryengineV1DocumentInfo:
      id: GoogleCloudDiscoveryengineV1DocumentInfo
      description: Detailed document information associated with a user event.
      type: object
      properties:
        id:
          description: The Document resource ID.
          type: string
        name:
          description: >-
            The Document resource full name, of the form:
            `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/branches/{branch_id}/documents/{document_id}`
          type: string
        uri:
          description: The Document URI - only allowed for website data stores.
          type: string
        quantity:
          description: >-
            Quantity of the Document associated with the user event. Defaults to
            1. For example, this field is 2 if two quantities of the same
            Document are involved in a `add-to-cart` event. Required for events
            of the following event types: * `add-to-cart` * `purchase`
          type: integer
          format: int32
        promotionIds:
          description: >-
            The promotion IDs associated with this Document. Currently, this
            field is restricted to at most one ID.
          type: array
          items:
            type: string
        joined:
          description: >-
            Output only. Whether the referenced Document can be found in the
            data store.
          readOnly: true
          type: boolean
    GoogleCloudDiscoveryengineV1PanelInfo:
      id: GoogleCloudDiscoveryengineV1PanelInfo
      description: Detailed panel information associated with a user event.
      type: object
      properties:
        panelId:
          description: Required. The panel ID.
          type: string
        displayName:
          description: The display name of the panel.
          type: string
        panelPosition:
          description: >-
            The ordered position of the panel, if shown to the user with other
            panels. If set, then total_panels must also be set.
          type: integer
          format: int32
        totalPanels:
          description: >-
            The total number of panels, including this one, shown to the user.
            Must be set if panel_position is set.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1SearchInfo:
      id: GoogleCloudDiscoveryengineV1SearchInfo
      description: Detailed search information.
      type: object
      properties:
        searchQuery:
          description: >-
            The user's search query. See SearchRequest.query for definition. The
            value must be a UTF-8 encoded string with a length limit of 5,000
            characters. Otherwise, an `INVALID_ARGUMENT` error is returned. At
            least one of search_query or PageInfo.page_category is required for
            `search` events. Other event types should not set this field.
            Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
        orderBy:
          description: >-
            The order in which products are returned, if applicable. See
            SearchRequest.order_by for definition and syntax. The value must be
            a UTF-8 encoded string with a length limit of 1,000 characters.
            Otherwise, an `INVALID_ARGUMENT` error is returned. This can only be
            set for `search` events. Other event types should not set this
            field. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
        offset:
          description: >-
            An integer that specifies the current offset for pagination (the
            0-indexed starting location, amongst the products deemed by the API
            as relevant). See SearchRequest.offset for definition. If this field
            is negative, an `INVALID_ARGUMENT` is returned. This can only be set
            for `search` events. Other event types should not set this field.
            Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1CompletionInfo:
      id: GoogleCloudDiscoveryengineV1CompletionInfo
      description: >-
        Detailed completion information including completion attribution token
        and clicked completion info.
      type: object
      properties:
        selectedSuggestion:
          description: End user selected CompleteQueryResponse.QuerySuggestion.suggestion.
          type: string
        selectedPosition:
          description: >-
            End user selected CompleteQueryResponse.QuerySuggestion.suggestion
            position, starting from 0.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1TransactionInfo:
      id: GoogleCloudDiscoveryengineV1TransactionInfo
      description: A transaction represents the entire purchase transaction.
      type: object
      properties:
        value:
          description: >-
            Required. Total non-zero value associated with the transaction. This
            value may include shipping, tax, or other adjustments to the total
            value that you want to include.
          type: number
          format: float
        currency:
          description: Required. Currency code. Use three-character ISO-4217 code.
          type: string
        transactionId:
          description: The transaction ID with a length limit of 128 characters.
          type: string
        tax:
          description: All the taxes associated with the transaction.
          type: number
          format: float
        cost:
          description: >-
            All the costs associated with the products. These can be
            manufacturing costs, shipping expenses not borne by the end user, or
            any other costs, such that: * Profit = value - tax - cost
          type: number
          format: float
        discountValue:
          description: >-
            The total discount(s) value applied to this transaction. This figure
            should be excluded from TransactionInfo.value For example, if a user
            paid TransactionInfo.value amount, then nominal (pre-discount) value
            of the transaction is the sum of TransactionInfo.value and
            TransactionInfo.discount_value This means that profit is calculated
            the same way, regardless of the discount value, and that
            TransactionInfo.discount_value can be larger than
            TransactionInfo.value: * Profit = value - tax - cost
          type: number
          format: float
    GoogleCloudDiscoveryengineV1CustomAttribute:
      id: GoogleCloudDiscoveryengineV1CustomAttribute
      description: >-
        A custom attribute that is not explicitly modeled in a resource, e.g.
        UserEvent.
      type: object
      properties:
        text:
          description: >-
            The textual values of this custom attribute. For example,
            `["yellow", "green"]` when the key is "color". Empty string is not
            allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. Exactly
            one of CustomAttribute.text or CustomAttribute.numbers should be
            set. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: array
          items:
            type: string
        numbers:
          description: >-
            The numerical values of this custom attribute. For example, `[2.3,
            15.4]` when the key is "lengths_cm". Exactly one of
            CustomAttribute.text or CustomAttribute.numbers should be set.
            Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: array
          items:
            type: number
            format: double
    GoogleCloudDiscoveryengineV1MediaInfo:
      id: GoogleCloudDiscoveryengineV1MediaInfo
      description: Media-specific user event information.
      type: object
      properties:
        mediaProgressDuration:
          description: >-
            The media progress time in seconds, if applicable. For example, if
            the end user has finished 90 seconds of a playback video, then
            MediaInfo.media_progress_duration.seconds should be set to 90.
          type: string
          format: google-duration
        mediaProgressPercentage:
          description: >-
            Media progress should be computed using only the
            media_progress_duration relative to the media total length. This
            value must be between `[0, 1.0]` inclusive. If this is not a
            playback or the progress cannot be computed (e.g. ongoing
            livestream), this field should be unset.
          type: number
          format: float
    GoogleCloudDiscoveryengineV1RecommendResponse:
      id: GoogleCloudDiscoveryengineV1RecommendResponse
      description: Response message for Recommend method.
      type: object
      properties:
        results:
          description: >-
            A list of recommended Documents. The order represents the ranking
            (from the most relevant Document to the least).
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1RecommendResponseRecommendationResult
        attributionToken:
          description: >-
            A unique attribution token. This should be included in the UserEvent
            logs resulting from this recommendation, which enables accurate
            attribution of recommendation model performance.
          type: string
        missingIds:
          description: >-
            IDs of documents in the request that were missing from the default
            Branch associated with the requested ServingConfig.
          type: array
          items:
            type: string
        validateOnly:
          description: True if RecommendRequest.validate_only was set.
          type: boolean
    GoogleCloudDiscoveryengineV1RecommendResponseRecommendationResult:
      id: GoogleCloudDiscoveryengineV1RecommendResponseRecommendationResult
      description: >-
        RecommendationResult represents a generic recommendation result with
        associated metadata.
      type: object
      properties:
        id:
          description: Resource ID of the recommended Document.
          type: string
        document:
          description: Set if `returnDocument` is set to true in RecommendRequest.params.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
        metadata:
          description: >-
            Additional Document metadata or annotations. Possible values: *
            `score`: Recommendation score in double value. Is set if
            `returnScore` is set to true in RecommendRequest.params.
          type: object
          additionalProperties:
            type: any
    GoogleCloudDiscoveryengineV1ListSchemasResponse:
      id: GoogleCloudDiscoveryengineV1ListSchemasResponse
      description: Response message for SchemaService.ListSchemas method.
      type: object
      properties:
        schemas:
          description: The Schemas.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Schema'
        nextPageToken:
          description: >-
            A token that can be sent as ListSchemasRequest.page_token to
            retrieve the next page. If this field is omitted, there are no
            subsequent pages.
          type: string
    GoogleCloudDiscoveryengineV1TrainCustomModelRequest:
      id: GoogleCloudDiscoveryengineV1TrainCustomModelRequest
      description: Request message for SearchTuningService.TrainCustomModel method.
      type: object
      properties:
        gcsTrainingInput:
          description: Cloud Storage training input.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1TrainCustomModelRequestGcsTrainingInput
        modelType:
          description: >-
            Model to be trained. Supported values are: * **search-tuning**: Fine
            tuning the search system based on data provided.
          type: string
        errorConfig:
          description: >-
            The desired location of errors incurred during the data ingestion
            and training.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig'
        modelId:
          description: If not provided, a UUID will be generated.
          type: string
    GoogleCloudDiscoveryengineV1TrainCustomModelRequestGcsTrainingInput:
      id: GoogleCloudDiscoveryengineV1TrainCustomModelRequestGcsTrainingInput
      description: Cloud Storage training data input.
      type: object
      properties:
        corpusDataPath:
          description: >-
            The Cloud Storage corpus data which could be associated in train
            data. The data path format is `gs:///`. A newline delimited
            jsonl/ndjson file. For search-tuning model, each line should have
            the _id, title and text. Example: `{"_id": "doc1", title: "relevant
            doc", "text": "relevant text"}`
          type: string
        queryDataPath:
          description: >-
            The gcs query data which could be associated in train data. The data
            path format is `gs:///`. A newline delimited jsonl/ndjson file. For
            search-tuning model, each line should have the _id and text.
            Example: {"_id": "query1", "text": "example query"}
          type: string
        trainDataPath:
          description: >-
            Cloud Storage training data path whose format should be `gs:///`.
            The file should be in tsv format. Each line should have the doc_id
            and query_id and score (number). For search-tuning model, it should
            have the query-id corpus-id score as tsv file header. The score
            should be a number in `[0, inf+)`. The larger the number is, the
            more relevant the pair is. Example: * `query-id\tcorpus-id\tscore` *
            `query1\tdoc1\t1`
          type: string
        testDataPath:
          description: >-
            Cloud Storage test data. Same format as train_data_path. If not
            provided, a random 80/20 train/test split will be performed on
            train_data_path.
          type: string
    GoogleCloudDiscoveryengineV1ListCustomModelsResponse:
      id: GoogleCloudDiscoveryengineV1ListCustomModelsResponse
      description: Response message for SearchTuningService.ListCustomModels method.
      type: object
      properties:
        models:
          description: List of custom tuning models.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1CustomTuningModel'
    GoogleCloudDiscoveryengineV1CustomTuningModel:
      id: GoogleCloudDiscoveryengineV1CustomTuningModel
      description: Metadata that describes a custom tuned model.
      type: object
      properties:
        name:
          description: >-
            Required. The fully qualified resource name of the model. Format:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/customTuningModels/{custom_tuning_model}`.
            Model must be an alpha-numerical string with limit of 40 characters.
          type: string
        displayName:
          description: The display name of the model.
          type: string
        modelVersion:
          description: The version of the model.
          type: string
          format: int64
        modelState:
          description: >-
            The state that the model is in (e.g.`TRAINING` or
            `TRAINING_FAILED`).
          type: string
          enumDescriptions:
            - Default value.
            - The model is in a paused training state.
            - The model is currently training.
            - The model has successfully completed training.
            - The model is ready for serving.
            - The model training failed.
            - >-
              The model training finished successfully but metrics did not
              improve.
            - Input data validation failed. Model training didn't start.
          enum:
            - MODEL_STATE_UNSPECIFIED
            - TRAINING_PAUSED
            - TRAINING
            - TRAINING_COMPLETE
            - READY_FOR_SERVING
            - TRAINING_FAILED
            - NO_IMPROVEMENT
            - INPUT_VALIDATION_FAILED
        createTime:
          description: Timestamp the Model was created at.
          deprecated: true
          type: string
          format: google-datetime
        trainingStartTime:
          description: Timestamp the model training was initiated.
          type: string
          format: google-datetime
        metrics:
          description: The metrics of the trained model.
          type: object
          additionalProperties:
            type: number
            format: double
    GoogleCloudDiscoveryengineV1SiteSearchEngine:
      id: GoogleCloudDiscoveryengineV1SiteSearchEngine
      description: >-
        SiteSearchEngine captures DataStore level site search persisting
        configurations. It is a singleton value per data store.
      type: object
      properties:
        name:
          description: >-
            The fully qualified resource name of the site search engine. Format:
            `projects/*/locations/*/dataStores/*/siteSearchEngine`
          type: string
    GoogleCloudDiscoveryengineV1TargetSite:
      id: GoogleCloudDiscoveryengineV1TargetSite
      description: A target site for the SiteSearchEngine.
      type: object
      properties:
        name:
          description: >-
            Output only. The fully qualified resource name of the target site.
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
            The `target_site_id` is system-generated.
          readOnly: true
          type: string
        providedUriPattern:
          description: >-
            Required. Input only. The user provided URI pattern from which the
            `generated_uri_pattern` is generated.
          type: string
        type:
          description: >-
            The type of the target site, e.g., whether the site is to be
            included or excluded.
          type: string
          enumDescriptions:
            - >-
              This value is unused. In this case, server behavior defaults to
              Type.INCLUDE.
            - Include the target site.
            - Exclude the target site.
          enum:
            - TYPE_UNSPECIFIED
            - INCLUDE
            - EXCLUDE
        exactMatch:
          description: >-
            Input only. If set to false, a uri_pattern is generated to include
            all pages whose address contains the provided_uri_pattern. If set to
            true, an uri_pattern is generated to try to be an exact match of the
            provided_uri_pattern or just the specific page if the
            provided_uri_pattern is a specific one. provided_uri_pattern is
            always normalized to generate the URI pattern to be used by the
            search engine.
          type: boolean
        generatedUriPattern:
          description: >-
            Output only. This is system-generated based on the
            provided_uri_pattern.
          readOnly: true
          type: string
        rootDomainUri:
          description: Output only. Root domain of the provided_uri_pattern.
          readOnly: true
          type: string
        siteVerificationInfo:
          description: Output only. Site ownership and validity verification status.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1SiteVerificationInfo
        indexingStatus:
          description: Output only. Indexing status.
          readOnly: true
          type: string
          enumDescriptions:
            - Defaults to SUCCEEDED.
            - >-
              The target site is in the update queue and will be picked up by
              indexing pipeline.
            - The target site fails to be indexed.
            - The target site has been indexed.
            - >-
              The previously indexed target site has been marked to be deleted.
              This is a transitioning state which will resulted in either: 1.
              target site deleted if unindexing is successful; 2. state reverts
              to SUCCEEDED if the unindexing fails.
          enum:
            - INDEXING_STATUS_UNSPECIFIED
            - PENDING
            - FAILED
            - SUCCEEDED
            - DELETING
        updateTime:
          description: Output only. The target site's last updated time.
          readOnly: true
          type: string
          format: google-datetime
        failureReason:
          description: Output only. Failure reason.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1TargetSiteFailureReason
    GoogleCloudDiscoveryengineV1SiteVerificationInfo:
      id: GoogleCloudDiscoveryengineV1SiteVerificationInfo
      description: Verification information for target sites in advanced site search.
      type: object
      properties:
        siteVerificationState:
          description: Site verification state indicating the ownership and validity.
          type: string
          enumDescriptions:
            - Defaults to VERIFIED.
            - Site ownership verified.
            - Site ownership pending verification or verification failed.
            - >-
              Site exempt from verification, e.g., a public website that opens
              to all.
          enum:
            - SITE_VERIFICATION_STATE_UNSPECIFIED
            - VERIFIED
            - UNVERIFIED
            - EXEMPTED
        verifyTime:
          description: Latest site verification time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1TargetSiteFailureReason:
      id: GoogleCloudDiscoveryengineV1TargetSiteFailureReason
      description: Site search indexing failure reasons.
      type: object
      properties:
        quotaFailure:
          description: Failed due to insufficient quota.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure
    GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure:
      id: GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure
      description: Failed due to insufficient quota.
      type: object
      properties:
        totalRequiredQuota:
          description: >-
            This number is an estimation on how much total quota this project
            needs to successfully complete indexing.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1BatchCreateTargetSitesRequest:
      id: GoogleCloudDiscoveryengineV1BatchCreateTargetSitesRequest
      description: >-
        Request message for SiteSearchEngineService.BatchCreateTargetSites
        method.
      type: object
      properties:
        requests:
          description: >-
            Required. The request message specifying the resources to create. A
            maximum of 20 TargetSites can be created in a batch.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1CreateTargetSiteRequest
    GoogleCloudDiscoveryengineV1CreateTargetSiteRequest:
      id: GoogleCloudDiscoveryengineV1CreateTargetSiteRequest
      description: Request message for SiteSearchEngineService.CreateTargetSite method.
      type: object
      properties:
        parent:
          description: >-
            Required. Parent resource name of TargetSite, such as
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
          type: string
        targetSite:
          description: Required. The TargetSite to create.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite'
    GoogleCloudDiscoveryengineV1ListTargetSitesResponse:
      id: GoogleCloudDiscoveryengineV1ListTargetSitesResponse
      description: Response message for SiteSearchEngineService.ListTargetSites method.
      type: object
      properties:
        targetSites:
          description: List of TargetSites.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        totalSize:
          description: >-
            The total number of items matching the request. This will always be
            populated in the response.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchRequest:
      id: GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchRequest
      description: >-
        Request message for SiteSearchEngineService.EnableAdvancedSiteSearch
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchRequest:
      id: GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchRequest
      description: >-
        Request message for SiteSearchEngineService.DisableAdvancedSiteSearch
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1RecrawlUrisRequest:
      id: GoogleCloudDiscoveryengineV1RecrawlUrisRequest
      description: Request message for SiteSearchEngineService.RecrawlUris method.
      type: object
      properties:
        uris:
          description: >-
            Required. List of URIs to crawl. At most 10K URIs are supported,
            otherwise an INVALID_ARGUMENT error is thrown. Each URI should match
            at least one TargetSite in `site_search_engine`.
          type: array
          items:
            type: string
        siteCredential:
          description: >-
            Optional. Full resource name of the SiteCredential, such as
            `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine/siteCredentials/*`.
            Only set to crawl private URIs.
          type: string
    GoogleCloudDiscoveryengineV1BatchVerifyTargetSitesRequest:
      id: GoogleCloudDiscoveryengineV1BatchVerifyTargetSitesRequest
      description: >-
        Request message for SiteSearchEngineService.BatchVerifyTargetSites
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1FetchDomainVerificationStatusResponse:
      id: GoogleCloudDiscoveryengineV1FetchDomainVerificationStatusResponse
      description: >-
        Response message for
        SiteSearchEngineService.FetchDomainVerificationStatus method.
      type: object
      properties:
        targetSites:
          description: List of TargetSites containing the site verification status.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        totalSize:
          description: >-
            The total number of items matching the request. This will always be
            populated in the response.
          type: integer
          format: int32
    GoogleApiHttpBody:
      id: GoogleApiHttpBody
      description: >-
        Message that represents an arbitrary HTTP body. It should only be used
        for payload formats that can't be represented as JSON, such as raw
        binary or an HTML page. This message can be used both in streaming and
        non-streaming API methods in the request as well as the response. It can
        be used as a top-level request field, which is convenient if one wants
        to extract parameters from either the URL or HTTP template into the
        request fields and also want access to the raw HTTP body. Example:
        message GetResourceRequest { // A unique request id. string request_id =
        1; // The raw HTTP body is bound to this field. google.api.HttpBody
        http_body = 2; } service ResourceService { rpc
        GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
        UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); }
        Example with streaming methods: service CaldavService { rpc
        GetCalendar(stream google.api.HttpBody) returns (stream
        google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody)
        returns (stream google.api.HttpBody); } Use of this type only changes
        how the request and response bodies are handled, all other features will
        continue to work unchanged.
      type: object
      properties:
        contentType:
          description: >-
            The HTTP Content-Type header value specifying the content type of
            the body.
          type: string
        data:
          description: The HTTP request/response body as raw binary.
          type: string
          format: byte
        extensions:
          description: >-
            Application specific response metadata. Must be set in the first
            response for streaming APIs.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    GoogleCloudDiscoveryengineV1PurgeUserEventsRequest:
      id: GoogleCloudDiscoveryengineV1PurgeUserEventsRequest
      description: Request message for PurgeUserEvents method.
      type: object
      properties:
        filter:
          description: >-
            Required. The filter string to specify the events to be deleted with
            a length limit of 5,000 characters. The eligible fields for
            filtering are: * `eventType`: Double quoted UserEvent.event_type
            string. * `eventTime`: in ISO 8601 "zulu" format. * `userPseudoId`:
            Double quoted string. Specifying this will delete all events
            associated with a visitor. * `userId`: Double quoted string.
            Specifying this will delete all events associated with a user.
            Examples: * Deleting all events in a time range: `eventTime >
            "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z"` *
            Deleting specific eventType: `eventType = "search"` * Deleting all
            events for a specific visitor: `userPseudoId = "visitor1024"` *
            Deleting all events inside a DataStore: `*` The filtering fields are
            assumed to have an implicit AND.
          type: string
        force:
          description: >-
            The `force` field is currently not supported. Purge user event
            requests will permanently delete all purgeable events. Once the
            development is complete: If `force` is set to false, the method will
            return the expected purge count without deleting any user events.
            This field will default to false if not included in the request.
          type: boolean
    GoogleCloudDiscoveryengineV1ImportUserEventsRequest:
      id: GoogleCloudDiscoveryengineV1ImportUserEventsRequest
      description: Request message for the ImportUserEvents request.
      type: object
      properties:
        inlineSource:
          description: The Inline source for the input content for UserEvents.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1ImportUserEventsRequestInlineSource
        gcsSource:
          description: Cloud Storage location for the input content.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1GcsSource'
        bigquerySource:
          description: BigQuery input source.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1BigQuerySource'
        errorConfig:
          description: >-
            The desired location of errors incurred during the Import. Cannot be
            set for inline user event imports.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig'
    GoogleCloudDiscoveryengineV1ImportUserEventsRequestInlineSource:
      id: GoogleCloudDiscoveryengineV1ImportUserEventsRequestInlineSource
      description: The inline source for the input config for ImportUserEvents method.
      type: object
      properties:
        userEvents:
          description: >-
            Required. A list of user events to import. Recommended max of 10k
            items.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1UserEvent'
    GoogleCloudDiscoveryengineLoggingErrorLog:
      id: GoogleCloudDiscoveryengineLoggingErrorLog
      description: An error log which is reported to the Error Reporting system.
      type: object
      properties:
        serviceContext:
          description: The service context in which this error has occurred.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineLoggingServiceContext'
        context:
          description: A description of the context in which the error occurred.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineLoggingErrorContext'
        message:
          description: A message describing the error.
          type: string
        status:
          description: The RPC status associated with the error log.
          $ref: '#/components/schemas/GoogleRpcStatus'
        requestPayload:
          description: >-
            The API request payload, represented as a protocol buffer. Most API
            request types are supported—for example: *
            `type.googleapis.com/google.cloud.discoveryengine.v1alpha.DocumentService.CreateDocumentRequest`
            *
            `type.googleapis.com/google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEventRequest`
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        responsePayload:
          description: >-
            The API response payload, represented as a protocol buffer. This is
            used to log some "soft errors", where the response is valid but we
            consider there are some quality issues like unjoined events. The
            following API responses are supported, and no PII is included: *
            `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend`
            *
            `google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEvent`
            *
            `google.cloud.discoveryengine.v1alpha.UserEventService.CollectUserEvent`
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        importPayload:
          description: The error payload that is populated on LRO import APIs.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineLoggingImportErrorContext
    GoogleCloudDiscoveryengineLoggingServiceContext:
      id: GoogleCloudDiscoveryengineLoggingServiceContext
      description: Describes a running service that sends errors.
      type: object
      properties:
        service:
          description: >-
            An identifier of the service—for example,
            `discoveryengine.googleapis.com`.
          type: string
    GoogleCloudDiscoveryengineLoggingErrorContext:
      id: GoogleCloudDiscoveryengineLoggingErrorContext
      description: A description of the context in which an error occurred.
      type: object
      properties:
        httpRequest:
          description: The HTTP request which was processed when the error was triggered.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineLoggingHttpRequestContext
        reportLocation:
          description: >-
            The location in the source code where the decision was made to
            report the error, usually the place where it was logged.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineLoggingSourceLocation'
    GoogleCloudDiscoveryengineLoggingHttpRequestContext:
      id: GoogleCloudDiscoveryengineLoggingHttpRequestContext
      description: HTTP request data that is related to a reported error.
      type: object
      properties:
        responseStatusCode:
          description: The HTTP response status code for the request.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineLoggingSourceLocation:
      id: GoogleCloudDiscoveryengineLoggingSourceLocation
      description: >-
        Indicates a location in the source code of the service for which errors
        are reported.
      type: object
      properties:
        functionName:
          description: >-
            Human-readable name of a function or method—for example,
            `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend`.
          type: string
    GoogleCloudDiscoveryengineLoggingImportErrorContext:
      id: GoogleCloudDiscoveryengineLoggingImportErrorContext
      description: >-
        The error payload that is populated on LRO import APIs, including the
        following: *
        `google.cloud.discoveryengine.v1alpha.DocumentService.ImportDocuments` *
        `google.cloud.discoveryengine.v1alpha.UserEventService.ImportUserEvents`
      type: object
      properties:
        operation:
          description: The operation resource name of the LRO.
          type: string
        gcsPath:
          description: >-
            Google Cloud Storage file path of the import source. Can be set for
            batch operation error.
          type: string
        lineNumber:
          description: >-
            Line number of the content in file. Should be empty for permission
            or batch operation error.
          type: string
        document:
          description: The detailed content which caused the error on importing a document.
          type: string
        userEvent:
          description: >-
            The detailed content which caused the error on importing a user
            event.
          type: string
    GoogleCloudDiscoveryengineV1BatchCreateTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1BatchCreateTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.BatchCreateTargetSites operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1BatchCreateTargetSitesResponse:
      id: GoogleCloudDiscoveryengineV1BatchCreateTargetSitesResponse
      description: >-
        Response message for SiteSearchEngineService.BatchCreateTargetSites
        method.
      type: object
      properties:
        targetSites:
          description: TargetSites created.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite'
    GoogleCloudDiscoveryengineV1CreateDataStoreMetadata:
      id: GoogleCloudDiscoveryengineV1CreateDataStoreMetadata
      description: >-
        Metadata related to the progress of the DataStoreService.CreateDataStore
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1CreateEngineMetadata:
      id: GoogleCloudDiscoveryengineV1CreateEngineMetadata
      description: >-
        Metadata related to the progress of the EngineService.CreateEngine
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1CreateSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1CreateSchemaMetadata
      description: Metadata for Create Schema LRO.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1CreateTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1CreateTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.CreateTargetSite operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1DeleteDataStoreMetadata:
      id: GoogleCloudDiscoveryengineV1DeleteDataStoreMetadata
      description: >-
        Metadata related to the progress of the DataStoreService.DeleteDataStore
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1DeleteEngineMetadata:
      id: GoogleCloudDiscoveryengineV1DeleteEngineMetadata
      description: >-
        Metadata related to the progress of the EngineService.DeleteEngine
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1DeleteSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1DeleteSchemaMetadata
      description: Metadata for DeleteSchema LRO.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1DeleteTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1DeleteTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.DeleteTargetSite operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchMetadata:
      id: GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will
        be returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchResponse:
      id: GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchResponse
      description: >-
        Response message for SiteSearchEngineService.DisableAdvancedSiteSearch
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchMetadata:
      id: GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchResponse:
      id: GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchResponse
      description: >-
        Response message for SiteSearchEngineService.EnableAdvancedSiteSearch
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsMetadata:
      id: GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsMetadata
      description: >-
        Metadata related to the progress of the ImportCompletionSuggestions
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of CompletionSuggestions successfully imported.
          type: string
          format: int64
        failureCount:
          description: Count of CompletionSuggestions that failed to be imported.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsResponse:
      id: GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsResponse
      description: >-
        Response of the CompletionService.ImportCompletionSuggestions method. If
        the long running operation is done, this message is returned by the
        google.longrunning.Operations.response field if the operation is
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: The desired location of errors incurred during the Import.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig'
    GoogleCloudDiscoveryengineV1ImportDocumentsMetadata:
      id: GoogleCloudDiscoveryengineV1ImportDocumentsMetadata
      description: >-
        Metadata related to the progress of the ImportDocuments operation. This
        is returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were processed successfully.
          type: string
          format: int64
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
        totalCount:
          description: Total count of entries that were processed.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1ImportDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1ImportDocumentsResponse
      description: >-
        Response of the ImportDocumentsRequest. If the long running operation is
        done, then this message is returned by the
        google.longrunning.Operations.response field if the operation was
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: >-
            Echoes the destination for the complete errors in the request if
            set.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig'
    GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesMetadata:
      id: GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesMetadata
      description: >-
        Metadata related to the progress of the ImportSuggestionDenyListEntries
        operation. This is returned by the google.longrunning.Operation.metadata
        field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesResponse:
      id: GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesResponse
      description: >-
        Response message for CompletionService.ImportSuggestionDenyListEntries
        method.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        importedEntriesCount:
          description: Count of deny list entries successfully imported.
          type: string
          format: int64
        failedEntriesCount:
          description: Count of deny list entries that failed to be imported.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1ImportUserEventsMetadata:
      id: GoogleCloudDiscoveryengineV1ImportUserEventsMetadata
      description: >-
        Metadata related to the progress of the Import operation. This is
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were processed successfully.
          type: string
          format: int64
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1ImportUserEventsResponse:
      id: GoogleCloudDiscoveryengineV1ImportUserEventsResponse
      description: >-
        Response of the ImportUserEventsRequest. If the long running operation
        was successful, then this message is returned by the
        google.longrunning.Operations.response field if the operation was
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: >-
            Echoes the destination for the complete errors if this field was set
            in the request.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig'
        joinedEventsCount:
          description: Count of user events imported with complete existing Documents.
          type: string
          format: int64
        unjoinedEventsCount:
          description: >-
            Count of user events imported, but with Document information not
            found in the existing Branch.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1Project:
      id: GoogleCloudDiscoveryengineV1Project
      description: Metadata and configurations for a Google Cloud project in the service.
      type: object
      properties:
        name:
          description: >-
            Output only. Full resource name of the project, for example
            `projects/{project}`. Note that when making requests, project number
            and project id are both acceptable, but the server will always
            respond in project number.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when this project is created.
          readOnly: true
          type: string
          format: google-datetime
        provisionCompletionTime:
          description: >-
            Output only. The timestamp when this project is successfully
            provisioned. Empty value means this project is still provisioning
            and is not ready for use.
          readOnly: true
          type: string
          format: google-datetime
        serviceTermsMap:
          description: >-
            Output only. A map of terms of services. The key is the `id` of
            ServiceTerms.
          readOnly: true
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1ProjectServiceTerms
    GoogleCloudDiscoveryengineV1ProjectServiceTerms:
      id: GoogleCloudDiscoveryengineV1ProjectServiceTerms
      description: Metadata about the terms of service.
      type: object
      properties:
        id:
          description: >-
            The unique identifier of this terms of service. Available terms: *
            `GA_DATA_USE_TERMS`: [Terms for data
            use](https://cloud.google.com/retail/data-use-terms). When using
            this as `id`, the acceptable version to provide is `2022-11-23`.
          type: string
        version:
          description: >-
            The version string of the terms of service. For acceptable values,
            see the comments for id above.
          type: string
        state:
          description: >-
            Whether the project has accepted/rejected the service terms or it is
            still pending.
          type: string
          enumDescriptions:
            - The default value of the enum. This value is not actually used.
            - The project has given consent to the terms of service.
            - The project is pending to review and accept the terms of service.
            - >-
              The project has declined or revoked the agreement to terms of
              service.
          enum:
            - STATE_UNSPECIFIED
            - TERMS_ACCEPTED
            - TERMS_PENDING
            - TERMS_DECLINED
        acceptTime:
          description: The last time when the project agreed to the terms of service.
          type: string
          format: google-datetime
        declineTime:
          description: >-
            The last time when the project declined or revoked the agreement to
            terms of service.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1ProvisionProjectMetadata:
      id: GoogleCloudDiscoveryengineV1ProvisionProjectMetadata
      description: Metadata associated with a project provision operation.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsMetadata:
      id: GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsMetadata
      description: >-
        Metadata related to the progress of the PurgeCompletionSuggestions
        operation. This is returned by the google.longrunning.Operation.metadata
        field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsResponse:
      id: GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsResponse
      description: >-
        Response message for CompletionService.PurgeCompletionSuggestions
        method.
      type: object
      properties:
        purgeSucceeded:
          description: Whether the completion suggestions were successfully purged.
          type: boolean
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDiscoveryengineV1PurgeDocumentsMetadata:
      id: GoogleCloudDiscoveryengineV1PurgeDocumentsMetadata
      description: >-
        Metadata related to the progress of the PurgeDocuments operation. This
        will be returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were deleted successfully.
          type: string
          format: int64
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
        ignoredCount:
          description: Count of entries that were ignored as entries were not found.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1PurgeDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1PurgeDocumentsResponse
      description: >-
        Response message for DocumentService.PurgeDocuments method. If the long
        running operation is successfully done, then this message is returned by
        the google.longrunning.Operations.response field.
      type: object
      properties:
        purgeCount:
          description: The total count of documents purged as a result of the operation.
          type: string
          format: int64
        purgeSample:
          description: >-
            A sample of document names that will be deleted. Only populated if
            `force` is set to false. A max of 100 names will be returned and the
            names are chosen at random.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesMetadata:
      id: GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesMetadata
      description: >-
        Metadata related to the progress of the PurgeSuggestionDenyListEntries
        operation. This is returned by the google.longrunning.Operation.metadata
        field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse:
      id: GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse
      description: >-
        Response message for CompletionService.PurgeSuggestionDenyListEntries
        method.
      type: object
      properties:
        purgeCount:
          description: Number of suggestion deny list entries purged.
          type: string
          format: int64
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDiscoveryengineV1TrainCustomModelMetadata:
      id: GoogleCloudDiscoveryengineV1TrainCustomModelMetadata
      description: >-
        Metadata related to the progress of the TrainCustomModel operation. This
        is returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1TrainCustomModelResponse:
      id: GoogleCloudDiscoveryengineV1TrainCustomModelResponse
      description: >-
        Response of the TrainCustomModelRequest. This message is returned by the
        google.longrunning.Operations.response field.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the data.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: >-
            Echoes the destination for the complete errors in the request if
            set.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig'
        modelStatus:
          description: >-
            The trained model status. Possible values are: * **bad-data**: The
            training data quality is bad. * **no-improvement**: Tuning didn't
            improve performance. Won't deploy. * **in-progress**: Model training
            job creation is in progress. * **training**: Model is actively
            training. * **evaluating**: The model is evaluating trained metrics.
            * **indexing**: The model trained metrics are indexing. * **ready**:
            The model is ready for serving.
          type: string
        metrics:
          description: The metrics of the trained model.
          type: object
          additionalProperties:
            type: number
            format: double
        modelName:
          description: Fully qualified name of the CustomTuningModel.
          type: string
    GoogleCloudDiscoveryengineV1UpdateSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1UpdateSchemaMetadata
      description: Metadata for UpdateSchema LRO.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1UpdateTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1UpdateTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.UpdateTargetSite operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaAclConfig:
      id: GoogleCloudDiscoveryengineV1alphaAclConfig
      description: Access Control Configuration.
      type: object
      properties:
        name:
          description: >-
            Immutable. The full resource name of the acl configuration. Format:
            `projects/{project}/locations/{location}/aclConfig`. This field must
            be a UTF-8 encoded string with a length limit of 1024 characters.
          type: string
        idpConfig:
          description: Identity provider config.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaIdpConfig'
    GoogleCloudDiscoveryengineV1alphaIdpConfig:
      id: GoogleCloudDiscoveryengineV1alphaIdpConfig
      description: Identity Provider Config.
      type: object
      properties:
        idpType:
          description: Identity provider type configured.
          type: string
          enumDescriptions:
            - Default value. ACL search not enabled.
            - Google 1P provider.
            - Third party provider.
          enum:
            - IDP_TYPE_UNSPECIFIED
            - GSUITE
            - THIRD_PARTY
        externalIdpConfig:
          description: External Identity provider config.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig
    GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig:
      id: GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig
      description: Third party IDP Config.
      type: object
      properties:
        workforcePoolName:
          description: >-
            Workforce pool name. Example:
            "locations/global/workforcePools/pool_id"
          type: string
    GoogleCloudDiscoveryengineV1alphaAnswer:
      id: GoogleCloudDiscoveryengineV1alphaAnswer
      description: Defines an answer.
      type: object
      properties:
        name:
          description: >-
            Immutable. Fully qualified name
            `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*/answers/*`
          type: string
        state:
          description: The state of the answer generation.
          type: string
          enumDescriptions:
            - Unknown.
            - Answer generation is currently in progress.
            - Answer generation currently failed.
            - Answer generation has succeeded.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - FAILED
            - SUCCEEDED
        answerText:
          description: The textual answer.
          type: string
        citations:
          description: Citations.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerCitation
        references:
          description: References.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerReference
        relatedQuestions:
          description: Suggested related questions.
          type: array
          items:
            type: string
        steps:
          description: Answer generation steps.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerStep'
        queryUnderstandingInfo:
          description: Query understanding information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfo
        answerSkippedReasons:
          description: >-
            Additional answer-skipped reasons. This provides the reason for
            ignored cases. If nothing is skipped, this field is not set.
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value. The answer skipped reason is not specified.
              - The adversarial query ignored case.
              - >-
                The non-answer seeking query ignored case Google skips the
                answer if the query is chit chat.
              - >-
                The out-of-domain query ignored case. Google skips the answer if
                there are no high-relevance search results.
              - >-
                The potential policy violation case. Google skips the answer if
                there is a potential policy violation detected. This includes
                content that may be violent or toxic.
              - >-
                The no relevant content case. Google skips the answer if there
                is no relevant content in the retrieved search results.
              - >-
                The jail-breaking query ignored case. For example, "Reply in the
                tone of a competing company's CEO". Google skips the answer if
                the query is classified as a jail-breaking query.
              - >-
                The customer policy violation case. Google skips the summary if
                there is a customer policy violation detected. The policy is
                defined by the customer.
              - >-
                The non-answer seeking query ignored case. Google skips the
                answer if the query doesn't have clear intent.
            enum:
              - ANSWER_SKIPPED_REASON_UNSPECIFIED
              - ADVERSARIAL_QUERY_IGNORED
              - NON_ANSWER_SEEKING_QUERY_IGNORED
              - OUT_OF_DOMAIN_QUERY_IGNORED
              - POTENTIAL_POLICY_VIOLATION
              - NO_RELEVANT_CONTENT
              - JAIL_BREAKING_QUERY_IGNORED
              - CUSTOMER_POLICY_VIOLATION
              - NON_ANSWER_SEEKING_QUERY_IGNORED_V2
        createTime:
          description: Output only. Answer creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        completeTime:
          description: Output only. Answer completed timestamp.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaAnswerCitation:
      id: GoogleCloudDiscoveryengineV1alphaAnswerCitation
      description: Citation info for a segment.
      type: object
      properties:
        startIndex:
          description: >-
            Index indicates the start of the segment, measured in bytes (UTF-8
            unicode).
          type: string
          format: int64
        endIndex:
          description: End of the attributed segment, exclusive.
          type: string
          format: int64
        sources:
          description: Citation sources for the attributed segment.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerCitationSource
    GoogleCloudDiscoveryengineV1alphaAnswerCitationSource:
      id: GoogleCloudDiscoveryengineV1alphaAnswerCitationSource
      description: Citation source.
      type: object
      properties:
        referenceId:
          description: ID of the citation source.
          type: string
    GoogleCloudDiscoveryengineV1alphaAnswerReference:
      id: GoogleCloudDiscoveryengineV1alphaAnswerReference
      description: Reference.
      type: object
      properties:
        unstructuredDocumentInfo:
          description: Unstructured document information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo
        chunkInfo:
          description: Chunk information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfo
        structuredDocumentInfo:
          description: Structured document information.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo
    GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo:
      id: GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo
      description: Unstructured document information.
      type: object
      properties:
        document:
          description: Document resource name.
          type: string
        uri:
          description: URI for the document.
          type: string
        title:
          description: Title.
          type: string
        chunkContents:
          description: List of cited chunk contents derived from document content.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfoChunkContent
        structData:
          description: >-
            The structured JSON metadata for the document. It is populated from
            the struct data from the Chunk in search result.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfoChunkContent:
      id: >-
        GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfoChunkContent
      description: Chunk content.
      type: object
      properties:
        content:
          description: Chunk textual content.
          type: string
        pageIdentifier:
          description: Page identifier.
          type: string
        relevanceScore:
          description: >-
            The relevance of the chunk for a given query. Values range from 0.0
            (completely irrelevant) to 1.0 (completely relevant). This value is
            for informational purpose only. It may change for the same query and
            chunk at any time due to a model retraining or change in
            implementation.
          type: number
          format: float
    GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfo:
      id: GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfo
      description: Chunk information.
      type: object
      properties:
        chunk:
          description: Chunk resource name.
          type: string
        content:
          description: Chunk textual content.
          type: string
        relevanceScore:
          description: >-
            The relevance of the chunk for a given query. Values range from 0.0
            (completely irrelevant) to 1.0 (completely relevant). This value is
            for informational purpose only. It may change for the same query and
            chunk at any time due to a model retraining or change in
            implementation.
          type: number
          format: float
        documentMetadata:
          description: Document metadata.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata
    GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata:
      id: >-
        GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata
      description: Document metadata.
      type: object
      properties:
        document:
          description: Document resource name.
          type: string
        uri:
          description: URI for the document.
          type: string
        title:
          description: Title.
          type: string
        pageIdentifier:
          description: Page identifier.
          type: string
        structData:
          description: >-
            The structured JSON metadata for the document. It is populated from
            the struct data from the Chunk in search result.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo:
      id: GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo
      description: Structured search information.
      type: object
      properties:
        document:
          description: Document resource name.
          type: string
        structData:
          description: Structured search data.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDiscoveryengineV1alphaAnswerStep:
      id: GoogleCloudDiscoveryengineV1alphaAnswerStep
      description: Step information.
      type: object
      properties:
        state:
          description: The state of the step.
          type: string
          enumDescriptions:
            - Unknown.
            - Step is currently in progress.
            - Step currently failed.
            - Step has succeeded.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - FAILED
            - SUCCEEDED
        description:
          description: The description of the step.
          type: string
        thought:
          description: The thought of the step.
          type: string
        actions:
          description: Actions.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerStepAction
    GoogleCloudDiscoveryengineV1alphaAnswerStepAction:
      id: GoogleCloudDiscoveryengineV1alphaAnswerStepAction
      description: Action.
      type: object
      properties:
        searchAction:
          description: Search action.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerStepActionSearchAction
        observation:
          description: Observation.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservation
    GoogleCloudDiscoveryengineV1alphaAnswerStepActionSearchAction:
      id: GoogleCloudDiscoveryengineV1alphaAnswerStepActionSearchAction
      description: Search action.
      type: object
      properties:
        query:
          description: The query to search.
          type: string
    GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservation:
      id: GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservation
      description: Observation.
      type: object
      properties:
        searchResults:
          description: >-
            Search results observed by the search action, it can be snippets
            info or chunk info, depending on the citation type set by the user.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult
    GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult:
      id: GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult
      type: object
      properties:
        document:
          description: Document resource name.
          type: string
        uri:
          description: URI for the document.
          type: string
        title:
          description: Title.
          type: string
        snippetInfo:
          description: >-
            If citation_type is DOCUMENT_LEVEL_CITATION, populate document level
            snippets.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultSnippetInfo
        chunkInfo:
          description: >-
            If citation_type is CHUNK_LEVEL_CITATION and chunk mode is on,
            populate chunk info.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultChunkInfo
        structData:
          description: >-
            Data representation. The structured JSON data for the document. It's
            populated from the struct data from the Document, or the Chunk in
            search result. .
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultSnippetInfo:
      id: >-
        GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultSnippetInfo
      description: Snippet information.
      type: object
      properties:
        snippet:
          description: Snippet content.
          type: string
        snippetStatus:
          description: Status of the snippet defined by the search team.
          type: string
    GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultChunkInfo:
      id: >-
        GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultChunkInfo
      description: Chunk information.
      type: object
      properties:
        chunk:
          description: Chunk resource name.
          type: string
        content:
          description: Chunk textual content.
          type: string
        relevanceScore:
          description: >-
            The relevance of the chunk for a given query. Values range from 0.0
            (completely irrelevant) to 1.0 (completely relevant). This value is
            for informational purpose only. It may change for the same query and
            chunk at any time due to a model retraining or change in
            implementation.
          type: number
          format: float
    GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfo:
      id: GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfo
      description: Query understanding information.
      type: object
      properties:
        queryClassificationInfo:
          description: Query classification information.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo
    GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo:
      id: >-
        GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo
      description: Query classification information.
      type: object
      properties:
        type:
          description: Query classification type.
          type: string
          enumDescriptions:
            - Unspecified query classification type.
            - Adversarial query classification type.
            - Non-answer-seeking query classification type, for chit chat.
            - Jail-breaking query classification type.
            - Non-answer-seeking query classification type, for no clear intent.
          enum:
            - TYPE_UNSPECIFIED
            - ADVERSARIAL_QUERY
            - NON_ANSWER_SEEKING_QUERY
            - JAIL_BREAKING_QUERY
            - NON_ANSWER_SEEKING_QUERY_V2
        positive:
          description: Classification output.
          type: boolean
    GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.BatchCreateTargetSites operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesResponse:
      id: GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesResponse
      description: >-
        Response message for SiteSearchEngineService.BatchCreateTargetSites
        method.
      type: object
      properties:
        targetSites:
          description: TargetSites created.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaTargetSite'
    GoogleCloudDiscoveryengineV1alphaTargetSite:
      id: GoogleCloudDiscoveryengineV1alphaTargetSite
      description: A target site for the SiteSearchEngine.
      type: object
      properties:
        name:
          description: >-
            Output only. The fully qualified resource name of the target site.
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
            The `target_site_id` is system-generated.
          readOnly: true
          type: string
        providedUriPattern:
          description: >-
            Required. Input only. The user provided URI pattern from which the
            `generated_uri_pattern` is generated.
          type: string
        type:
          description: >-
            The type of the target site, e.g., whether the site is to be
            included or excluded.
          type: string
          enumDescriptions:
            - >-
              This value is unused. In this case, server behavior defaults to
              Type.INCLUDE.
            - Include the target site.
            - Exclude the target site.
          enum:
            - TYPE_UNSPECIFIED
            - INCLUDE
            - EXCLUDE
        exactMatch:
          description: >-
            Input only. If set to false, a uri_pattern is generated to include
            all pages whose address contains the provided_uri_pattern. If set to
            true, an uri_pattern is generated to try to be an exact match of the
            provided_uri_pattern or just the specific page if the
            provided_uri_pattern is a specific one. provided_uri_pattern is
            always normalized to generate the URI pattern to be used by the
            search engine.
          type: boolean
        generatedUriPattern:
          description: >-
            Output only. This is system-generated based on the
            provided_uri_pattern.
          readOnly: true
          type: string
        rootDomainUri:
          description: Output only. Root domain of the provided_uri_pattern.
          readOnly: true
          type: string
        siteVerificationInfo:
          description: Output only. Site ownership and validity verification status.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo
        indexingStatus:
          description: Output only. Indexing status.
          readOnly: true
          type: string
          enumDescriptions:
            - Defaults to SUCCEEDED.
            - >-
              The target site is in the update queue and will be picked up by
              indexing pipeline.
            - The target site fails to be indexed.
            - The target site has been indexed.
            - >-
              The previously indexed target site has been marked to be deleted.
              This is a transitioning state which will resulted in either: 1.
              target site deleted if unindexing is successful; 2. state reverts
              to SUCCEEDED if the unindexing fails.
          enum:
            - INDEXING_STATUS_UNSPECIFIED
            - PENDING
            - FAILED
            - SUCCEEDED
            - DELETING
        updateTime:
          description: Output only. The target site's last updated time.
          readOnly: true
          type: string
          format: google-datetime
        failureReason:
          description: Output only. Failure reason.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason
    GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo:
      id: GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo
      description: Verification information for target sites in advanced site search.
      type: object
      properties:
        siteVerificationState:
          description: Site verification state indicating the ownership and validity.
          type: string
          enumDescriptions:
            - Defaults to VERIFIED.
            - Site ownership verified.
            - Site ownership pending verification or verification failed.
            - >-
              Site exempt from verification, e.g., a public website that opens
              to all.
          enum:
            - SITE_VERIFICATION_STATE_UNSPECIFIED
            - VERIFIED
            - UNVERIFIED
            - EXEMPTED
        verifyTime:
          description: Latest site verification time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason:
      id: GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason
      description: Site search indexing failure reasons.
      type: object
      properties:
        quotaFailure:
          description: Failed due to insufficient quota.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure
    GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure:
      id: GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure
      description: Failed due to insufficient quota.
      type: object
      properties:
        totalRequiredQuota:
          description: >-
            This number is an estimation on how much total quota this project
            needs to successfully complete indexing.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaControl:
      id: GoogleCloudDiscoveryengineV1alphaControl
      description: >-
        Defines a conditioned behavior to employ during serving. Must be
        attached to a ServingConfig to be considered at serving time. Permitted
        actions dependent on `SolutionType`.
      type: object
      properties:
        boostAction:
          description: Defines a boost-type control
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaControlBoostAction
        filterAction:
          description: >-
            Defines a filter-type control Currently not supported by
            Recommendation
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaControlFilterAction
        redirectAction:
          description: Defines a redirect-type control.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaControlRedirectAction
        synonymsAction:
          description: Treats a group of terms as synonyms of one another.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaControlSynonymsAction
        name:
          description: >-
            Immutable. Fully qualified name
            `projects/*/locations/global/dataStore/*/controls/*`
          type: string
        displayName:
          description: >-
            Required. Human readable name. The identifier used in UI views. Must
            be UTF-8 encoded string. Length limit is 128 characters. Otherwise
            an INVALID ARGUMENT error is thrown.
          type: string
        associatedServingConfigIds:
          description: >-
            Output only. List of all ServingConfig IDs this control is attached
            to. May take up to 10 minutes to update after changes.
          readOnly: true
          type: array
          items:
            type: string
        solutionType:
          description: >-
            Required. Immutable. What solution the control belongs to. Must be
            compatible with vertical of resource. Otherwise an INVALID ARGUMENT
            error is thrown.
          type: string
          enumDescriptions:
            - Default value.
            - Used for Recommendations AI.
            - Used for Discovery Search.
            - Used for use cases related to the Generative AI agent.
            - >-
              Used for use cases related to the Generative Chat agent. It's used
              for Generative chat engine only, the associated data stores must
              enrolled with `SOLUTION_TYPE_CHAT` solution.
          enum:
            - SOLUTION_TYPE_UNSPECIFIED
            - SOLUTION_TYPE_RECOMMENDATION
            - SOLUTION_TYPE_SEARCH
            - SOLUTION_TYPE_CHAT
            - SOLUTION_TYPE_GENERATIVE_CHAT
        useCases:
          description: >-
            Specifies the use case for the control. Affects what condition
            fields can be set. Only applies to SOLUTION_TYPE_SEARCH. Currently
            only allow one use case per control. Must be set when solution_type
            is SolutionType.SOLUTION_TYPE_SEARCH.
          type: array
          items:
            type: string
            enumDescriptions:
              - Value used when unset. Will not occur in CSS.
              - Search use case. Expects the traffic has a non-empty query.
              - Browse use case. Expects the traffic has an empty query.
            enum:
              - SEARCH_USE_CASE_UNSPECIFIED
              - SEARCH_USE_CASE_SEARCH
              - SEARCH_USE_CASE_BROWSE
        conditions:
          description: >-
            Determines when the associated action will trigger. Omit to always
            apply the action. Currently only a single condition may be
            specified. Otherwise an INVALID ARGUMENT error is thrown.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaCondition'
    GoogleCloudDiscoveryengineV1alphaControlBoostAction:
      id: GoogleCloudDiscoveryengineV1alphaControlBoostAction
      description: Adjusts order of products in returned list.
      type: object
      properties:
        boost:
          description: >-
            Required. Strength of the boost, which should be in [-1, 1].
            Negative boost means demotion. Default is 0.0 (No-op).
          type: number
          format: float
        filter:
          description: >-
            Required. Specifies which products to apply the boost to. If no
            filter is provided all products will be boosted (No-op). Syntax
            documentation: https://cloud.google.com/retail/docs/filter-and-order
            Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT
            error is thrown.
          type: string
        dataStore:
          description: >-
            Required. Specifies which data store's documents can be boosted by
            this control. Full data store name e.g.
            projects/123/locations/global/collections/default_collection/dataStores/default_data_store
          type: string
    GoogleCloudDiscoveryengineV1alphaControlFilterAction:
      id: GoogleCloudDiscoveryengineV1alphaControlFilterAction
      description: >-
        Specified which products may be included in results. Uses same filter as
        boost.
      type: object
      properties:
        filter:
          description: >-
            Required. A filter to apply on the matching condition results.
            Required Syntax documentation:
            https://cloud.google.com/retail/docs/filter-and-order Maximum length
            is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown.
          type: string
        dataStore:
          description: >-
            Required. Specifies which data store's documents can be filtered by
            this control. Full data store name e.g.
            projects/123/locations/global/collections/default_collection/dataStores/default_data_store
          type: string
    GoogleCloudDiscoveryengineV1alphaControlRedirectAction:
      id: GoogleCloudDiscoveryengineV1alphaControlRedirectAction
      description: Redirects a shopper to the provided URI.
      type: object
      properties:
        redirectUri:
          description: >-
            Required. The URI to which the shopper will be redirected. Required.
            URI must have length equal or less than 2000 characters. Otherwise
            an INVALID ARGUMENT error is thrown.
          type: string
    GoogleCloudDiscoveryengineV1alphaControlSynonymsAction:
      id: GoogleCloudDiscoveryengineV1alphaControlSynonymsAction
      description: >-
        Creates a set of terms that will act as synonyms of one another.
        Example: "happy" will also be considered as "glad", "glad" will also be
        considered as "happy".
      type: object
      properties:
        synonyms:
          description: >-
            Defines a set of synonyms. Can specify up to 100 synonyms. Must
            specify at least 2 synonyms. Otherwise an INVALID ARGUMENT error is
            thrown.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1alphaCondition:
      id: GoogleCloudDiscoveryengineV1alphaCondition
      description: Defines circumstances to be checked before allowing a behavior
      type: object
      properties:
        queryTerms:
          description: >-
            Search only A list of terms to match the query on. Maximum of 10
            query terms.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaConditionQueryTerm
        activeTimeRange:
          description: >-
            Range of time(s) specifying when condition is active. Maximum of 10
            time ranges.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaConditionTimeRange
    GoogleCloudDiscoveryengineV1alphaConditionQueryTerm:
      id: GoogleCloudDiscoveryengineV1alphaConditionQueryTerm
      description: Matcher for search request query
      type: object
      properties:
        value:
          description: >-
            The specific query value to match against Must be lowercase, must be
            UTF-8. Can have at most 3 space separated terms if full_match is
            true. Cannot be an empty string. Maximum length of 5000 characters.
          type: string
        fullMatch:
          description: Whether the search query needs to exactly match the query term.
          type: boolean
    GoogleCloudDiscoveryengineV1alphaConditionTimeRange:
      id: GoogleCloudDiscoveryengineV1alphaConditionTimeRange
      description: Used for time-dependent conditions.
      type: object
      properties:
        startTime:
          description: Start of time range. Range is inclusive.
          type: string
          format: google-datetime
        endTime:
          description: End of time range. Range is inclusive. Must be in the future.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaCreateDataStoreMetadata:
      id: GoogleCloudDiscoveryengineV1alphaCreateDataStoreMetadata
      description: >-
        Metadata related to the progress of the DataStoreService.CreateDataStore
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaCreateEngineMetadata:
      id: GoogleCloudDiscoveryengineV1alphaCreateEngineMetadata
      description: >-
        Metadata related to the progress of the EngineService.CreateEngine
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaCreateEvaluationMetadata:
      id: GoogleCloudDiscoveryengineV1alphaCreateEvaluationMetadata
      description: Metadata for EvaluationService.CreateEvaluation method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1alphaCreateSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1alphaCreateSchemaMetadata
      description: Metadata for Create Schema LRO.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaCreateTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1alphaCreateTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.CreateTargetSite operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaDataStore:
      id: GoogleCloudDiscoveryengineV1alphaDataStore
      description: DataStore captures global settings and configs at the DataStore level.
      type: object
      properties:
        name:
          description: >-
            Immutable. The full resource name of the data store. Format:
            `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
            This field must be a UTF-8 encoded string with a length limit of
            1024 characters.
          type: string
        displayName:
          description: >-
            Required. The data store display name. This field must be a UTF-8
            encoded string with a length limit of 128 characters. Otherwise, an
            INVALID_ARGUMENT error is returned.
          type: string
        industryVertical:
          description: Immutable. The industry vertical that the data store registers.
          type: string
          enumDescriptions:
            - Value used when unset.
            - >-
              The generic vertical for documents that are not specific to any
              industry vertical.
            - The media industry vertical.
            - The healthcare FHIR vertical.
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
            - HEALTHCARE_FHIR
        solutionTypes:
          description: >-
            The solutions that the data store enrolls. Available solutions for
            each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION`
            and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH`
            is automatically enrolled. Other solutions cannot be enrolled.
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value.
              - Used for Recommendations AI.
              - Used for Discovery Search.
              - Used for use cases related to the Generative AI agent.
              - >-
                Used for use cases related to the Generative Chat agent. It's
                used for Generative chat engine only, the associated data stores
                must enrolled with `SOLUTION_TYPE_CHAT` solution.
            enum:
              - SOLUTION_TYPE_UNSPECIFIED
              - SOLUTION_TYPE_RECOMMENDATION
              - SOLUTION_TYPE_SEARCH
              - SOLUTION_TYPE_CHAT
              - SOLUTION_TYPE_GENERATIVE_CHAT
        defaultSchemaId:
          description: >-
            Output only. The id of the default Schema asscociated to this data
            store.
          readOnly: true
          type: string
        contentConfig:
          description: >-
            Immutable. The content config of the data store. If this field is
            unset, the server behavior defaults to ContentConfig.NO_CONTENT.
          type: string
          enumDescriptions:
            - Default value.
            - Only contains documents without any Document.content.
            - Only contains documents with Document.content.
            - The data store is used for public website search.
            - >-
              The data store is used for workspace search. Details of workspace
              data store are specified in the WorkspaceConfig.
          enum:
            - CONTENT_CONFIG_UNSPECIFIED
            - NO_CONTENT
            - CONTENT_REQUIRED
            - PUBLIC_WEBSITE
            - GOOGLE_WORKSPACE
        createTime:
          description: Output only. Timestamp the DataStore was created at.
          readOnly: true
          type: string
          format: google-datetime
        languageInfo:
          description: Language info for DataStore.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaLanguageInfo'
        naturalLanguageQueryUnderstandingConfig:
          description: Optional. Configuration for Natural Language Query Understanding.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig
        idpConfig:
          description: Output only. Data store level identity provider config.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaIdpConfig'
        aclEnabled:
          description: >-
            Immutable. Whether data in the DataStore has ACL information. If set
            to `true`, the source data must have ACL. ACL will be ingested when
            data is ingested by DocumentService.ImportDocuments methods. When
            ACL is enabled for the DataStore, Document can't be accessed by
            calling DocumentService.GetDocument or
            DocumentService.ListDocuments. Currently ACL is only supported in
            `GENERIC` industry vertical with non-`PUBLIC_WEBSITE` content
            config.
          type: boolean
        workspaceConfig:
          description: >-
            Config to store data store type configuration for workspace data.
            This must be set when DataStore.content_config is set as
            DataStore.ContentConfig.GOOGLE_WORKSPACE.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaWorkspaceConfig
        documentProcessingConfig:
          description: Configuration for Document understanding and enrichment.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig
        startingSchema:
          description: >-
            The start schema to use for this DataStore when provisioning it. If
            unset, a default vertical specialized schema will be used. This
            field is only used by CreateDataStore API, and will be ignored if
            used in other APIs. This field will be omitted from all API
            responses including CreateDataStore API. To retrieve a schema of a
            DataStore, use SchemaService.GetSchema API instead. The provided
            schema will be validated against certain rules on schema. Learn more
            from [this
            doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaSchema'
        servingConfigDataStore:
          description: Optional. Stores serving config at DataStore level.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaServingConfigDataStore
    GoogleCloudDiscoveryengineV1alphaLanguageInfo:
      id: GoogleCloudDiscoveryengineV1alphaLanguageInfo
      description: Language info for DataStore.
      type: object
      properties:
        languageCode:
          description: The language code for the DataStore.
          type: string
        normalizedLanguageCode:
          description: >-
            Output only. This is the normalized form of language_code. E.g.:
            language_code of `en-GB`, `en_GB`, `en-UK` or `en-gb` will have
            normalized_language_code of `en-GB`.
          readOnly: true
          type: string
        language:
          description: >-
            Output only. Language part of normalized_language_code. E.g.:
            `en-US` -> `en`, `zh-Hans-HK` -> `zh`, `en` -> `en`.
          readOnly: true
          type: string
        region:
          description: >-
            Output only. Region part of normalized_language_code, if present.
            E.g.: `en-US` -> `US`, `zh-Hans-HK` -> `HK`, `en` -> ``.
          readOnly: true
          type: string
    GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig:
      id: GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig
      description: Configuration for Natural Language Query Understanding.
      type: object
      properties:
        mode:
          description: >-
            Mode of Natural Language Query Understanding. If this field is
            unset, the behavior defaults to
            NaturalLanguageQueryUnderstandingConfig.Mode.DISABLED.
          type: string
          enumDescriptions:
            - Default value.
            - Natural Language Query Understanding is disabled.
            - Natural Language Query Understanding is enabled.
          enum:
            - MODE_UNSPECIFIED
            - DISABLED
            - ENABLED
    GoogleCloudDiscoveryengineV1alphaWorkspaceConfig:
      id: GoogleCloudDiscoveryengineV1alphaWorkspaceConfig
      description: Config to store data store type configuration for workspace data
      type: object
      properties:
        type:
          description: The Google Workspace data source.
          type: string
          enumDescriptions:
            - Defaults to an unspecified Workspace type.
            - Workspace Data Store contains Drive data
            - Workspace Data Store contains Mail data
            - Workspace Data Store contains Sites data
            - Workspace Data Store contains Calendar data
            - Workspace Data Store contains Chat data
            - Workspace Data Store contains Groups data
            - Workspace Data Store contains Keep data
          enum:
            - TYPE_UNSPECIFIED
            - GOOGLE_DRIVE
            - GOOGLE_MAIL
            - GOOGLE_SITES
            - GOOGLE_CALENDAR
            - GOOGLE_CHAT
            - GOOGLE_GROUPS
            - GOOGLE_KEEP
        dasherCustomerId:
          description: Obfuscated Dasher customer ID.
          type: string
    GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig:
      id: GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig
      description: >-
        A singleton resource of DataStore. It's empty when DataStore is created,
        which defaults to digital parser. The first call to
        DataStoreService.UpdateDocumentProcessingConfig method will initialize
        the config.
      type: object
      properties:
        name:
          description: >-
            The full resource name of the Document Processing Config. Format:
            `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`.
          type: string
        chunkingConfig:
          description: Whether chunking mode is enabled.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfig
        defaultParsingConfig:
          description: >-
            Configurations for default Document parser. If not specified, we
            will configure it as default DigitalParsingConfig, and the default
            parsing config will be applied to all file types for Document
            parsing.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig
        parsingConfigOverrides:
          description: >-
            Map from file type to override the default parsing configuration
            based on the file type. Supported keys: * `pdf`: Override parsing
            config for PDF files, either digital parsing, ocr parsing or layout
            parsing is supported. * `html`: Override parsing config for HTML
            files, only digital parsing and layout parsing are supported. *
            `docx`: Override parsing config for DOCX files, only digital parsing
            and layout parsing are supported. * `pptx`: Override parsing config
            for PPTX files, only digital parsing and layout parsing are
            supported. * `xlsm`: Override parsing config for XLSM files, only
            digital parsing and layout parsing are supported. * `xlsx`: Override
            parsing config for XLSX files, only digital parsing and layout
            parsing are supported.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig
    GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfig:
      id: GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfig
      description: Configuration for chunking config.
      type: object
      properties:
        layoutBasedChunkingConfig:
          description: Configuration for the layout based chunking.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig
    GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig
      description: Configuration for the layout based chunking.
      type: object
      properties:
        chunkSize:
          description: >-
            The token size limit for each chunk. Supported values: 100-500
            (inclusive). Default value: 500.
          type: integer
          format: int32
        includeAncestorHeadings:
          description: >-
            Whether to include appending different levels of headings to chunks
            from the middle of the document to prevent context loss. Default
            value: False.
          type: boolean
    GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig:
      id: GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig
      description: Related configurations applied to a specific type of document parser.
      type: object
      properties:
        digitalParsingConfig:
          description: Configurations applied to digital parser.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigDigitalParsingConfig
        ocrParsingConfig:
          description: >-
            Configurations applied to OCR parser. Currently it only applies to
            PDFs.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigOcrParsingConfig
        layoutParsingConfig:
          description: Configurations applied to layout parser.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigLayoutParsingConfig
    GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigDigitalParsingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigDigitalParsingConfig
      description: The digital parsing configurations for documents.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigOcrParsingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigOcrParsingConfig
      description: The OCR parsing configurations for documents.
      type: object
      properties:
        enhancedDocumentElements:
          description: >-
            [DEPRECATED] This field is deprecated. To use the additional
            enhanced document elements processing, please switch to
            `layout_parsing_config`.
          deprecated: true
          type: array
          items:
            type: string
        useNativeText:
          description: >-
            If true, will use native text instead of OCR text on pages
            containing native text.
          type: boolean
    GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigLayoutParsingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigLayoutParsingConfig
      description: The layout parsing configurations for documents.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1alphaSchema:
      id: GoogleCloudDiscoveryengineV1alphaSchema
      description: Defines the structure and layout of a type of document data.
      type: object
      properties:
        structSchema:
          description: The structured representation of the schema.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        jsonSchema:
          description: The JSON representation of the schema.
          type: string
        name:
          description: >-
            Immutable. The full resource name of the schema, in the format of
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
            This field must be a UTF-8 encoded string with a length limit of
            1024 characters.
          type: string
        fieldConfigs:
          description: Output only. Configurations for fields of the schema.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaFieldConfig'
    GoogleCloudDiscoveryengineV1alphaFieldConfig:
      id: GoogleCloudDiscoveryengineV1alphaFieldConfig
      description: >-
        Configurations for fields of a schema. For example, configuring a field
        is indexable, or searchable.
      type: object
      properties:
        fieldPath:
          description: >-
            Required. Field path of the schema field. For example: `title`,
            `description`, `release_info.release_year`.
          type: string
        fieldType:
          description: Output only. Raw type of the field.
          readOnly: true
          type: string
          enumDescriptions:
            - Field type is unspecified.
            - Field value type is Object.
            - Field value type is String.
            - Field value type is Number.
            - Field value type is Integer.
            - Field value type is Boolean.
            - >-
              Field value type is Geolocation. Geolocation is expressed as an
              object with the following keys: * `id`: a string representing the
              location id * `longitude`: a number representing the longitude
              coordinate of the location * `latitude`: a number repesenting the
              latitude coordinate of the location * `address`: a string
              representing the full address of the location `latitude` and
              `longitude` must always be provided together. At least one of a)
              `address` or b) `latitude`-`longitude` pair must be provided.
            - >-
              Field value type is Datetime. Datetime can be expressed as either:
              * a number representing milliseconds-since-the-epoch * a string
              representing milliseconds-since-the-epoch. e.g. `"1420070400001"`
              * a string representing the [ISO
              8601](https://en.wikipedia.org/wiki/ISO_8601) date or date and
              time. e.g. `"2015-01-01"` or `"2015-01-01T12:10:30Z"`
          enum:
            - FIELD_TYPE_UNSPECIFIED
            - OBJECT
            - STRING
            - NUMBER
            - INTEGER
            - BOOLEAN
            - GEOLOCATION
            - DATETIME
        indexableOption:
          description: >-
            If indexable_option is INDEXABLE_ENABLED, field values are indexed
            so that it can be filtered or faceted in SearchService.Search. If
            indexable_option is unset, the server behavior defaults to
            INDEXABLE_DISABLED for fields that support setting indexable
            options. For those fields that do not support setting indexable
            options, such as `object` and `boolean` and key properties, the
            server will skip indexable_option setting, and setting
            indexable_option for those fields will throw `INVALID_ARGUMENT`
            error.
          type: string
          enumDescriptions:
            - Value used when unset.
            - Indexable option enabled for a schema field.
            - Indexable option disabled for a schema field.
          enum:
            - INDEXABLE_OPTION_UNSPECIFIED
            - INDEXABLE_ENABLED
            - INDEXABLE_DISABLED
        dynamicFacetableOption:
          description: >-
            If dynamic_facetable_option is DYNAMIC_FACETABLE_ENABLED, field
            values are available for dynamic facet. Could only be
            DYNAMIC_FACETABLE_DISABLED if FieldConfig.indexable_option is
            INDEXABLE_DISABLED. Otherwise, an `INVALID_ARGUMENT` error will be
            returned. If dynamic_facetable_option is unset, the server behavior
            defaults to DYNAMIC_FACETABLE_DISABLED for fields that support
            setting dynamic facetable options. For those fields that do not
            support setting dynamic facetable options, such as `object` and
            `boolean`, the server will skip dynamic facetable option setting,
            and setting dynamic_facetable_option for those fields will throw
            `INVALID_ARGUMENT` error.
          type: string
          enumDescriptions:
            - Value used when unset.
            - Dynamic facetable option enabled for a schema field.
            - Dynamic facetable option disabled for a schema field.
          enum:
            - DYNAMIC_FACETABLE_OPTION_UNSPECIFIED
            - DYNAMIC_FACETABLE_ENABLED
            - DYNAMIC_FACETABLE_DISABLED
        searchableOption:
          description: >-
            If searchable_option is SEARCHABLE_ENABLED, field values are
            searchable by text queries in SearchService.Search. If
            SEARCHABLE_ENABLED but field type is numerical, field values will
            not be searchable by text queries in SearchService.Search, as there
            are no text values associated to numerical fields. If
            searchable_option is unset, the server behavior defaults to
            SEARCHABLE_DISABLED for fields that support setting searchable
            options. Only `string` fields that have no key property mapping
            support setting searchable_option. For those fields that do not
            support setting searchable options, the server will skip searchable
            option setting, and setting searchable_option for those fields will
            throw `INVALID_ARGUMENT` error.
          type: string
          enumDescriptions:
            - Value used when unset.
            - Searchable option enabled for a schema field.
            - Searchable option disabled for a schema field.
          enum:
            - SEARCHABLE_OPTION_UNSPECIFIED
            - SEARCHABLE_ENABLED
            - SEARCHABLE_DISABLED
        retrievableOption:
          description: >-
            If retrievable_option is RETRIEVABLE_ENABLED, field values are
            included in the search results. If retrievable_option is unset, the
            server behavior defaults to RETRIEVABLE_DISABLED for fields that
            support setting retrievable options. For those fields that do not
            support setting retrievable options, such as `object` and `boolean`,
            the server will skip retrievable option setting, and setting
            retrievable_option for those fields will throw `INVALID_ARGUMENT`
            error.
          type: string
          enumDescriptions:
            - Value used when unset.
            - Retrievable option enabled for a schema field.
            - Retrievable option disabled for a schema field.
          enum:
            - RETRIEVABLE_OPTION_UNSPECIFIED
            - RETRIEVABLE_ENABLED
            - RETRIEVABLE_DISABLED
        completableOption:
          description: >-
            If completable_option is COMPLETABLE_ENABLED, field values are
            directly used and returned as suggestions for Autocomplete in
            CompletionService.CompleteQuery. If completable_option is unset, the
            server behavior defaults to COMPLETABLE_DISABLED for fields that
            support setting completable options, which are just `string` fields.
            For those fields that do not support setting completable options,
            the server will skip completable option setting, and setting
            completable_option for those fields will throw `INVALID_ARGUMENT`
            error.
          type: string
          enumDescriptions:
            - Value used when unset.
            - Completable option enabled for a schema field.
            - Completable option disabled for a schema field.
          enum:
            - COMPLETABLE_OPTION_UNSPECIFIED
            - COMPLETABLE_ENABLED
            - COMPLETABLE_DISABLED
        recsFilterableOption:
          description: >-
            If recs_filterable_option is FILTERABLE_ENABLED, field values are
            filterable by filter expression in RecommendationService.Recommend.
            If FILTERABLE_ENABLED but the field type is numerical, field values
            are not filterable by text queries in
            RecommendationService.Recommend. Only textual fields are supported.
            If recs_filterable_option is unset, the default setting is
            FILTERABLE_DISABLED for fields that support setting filterable
            options. When a field set to [FILTERABLE_DISABLED] is filtered, a
            warning is generated and an empty result is returned.
          type: string
          enumDescriptions:
            - Value used when unset.
            - Filterable option enabled for a schema field.
            - Filterable option disabled for a schema field.
          enum:
            - FILTERABLE_OPTION_UNSPECIFIED
            - FILTERABLE_ENABLED
            - FILTERABLE_DISABLED
        keyPropertyType:
          description: >-
            Output only. Type of the key property that this field is mapped to.
            Empty string if this is not annotated as mapped to a key property.
            Example types are `title`, `description`. Full list is defined by
            `keyPropertyMapping` in the schema field annotation. If the schema
            field has a `KeyPropertyMapping` annotation, `indexable_option` and
            `searchable_option` of this field cannot be modified.
          readOnly: true
          type: string
        advancedSiteSearchDataSources:
          description: >-
            If this field is set, only the corresponding source will be indexed
            for this field. Otherwise, the values from different sources are
            merged. Assuming a page with `` in meta tag, and `` in page map: if
            this enum is set to METATAGS, we will only index ``; if this enum is
            not set, we will merge them and index ``.
          type: array
          items:
            type: string
            enumDescriptions:
              - Value used when unset.
              - Retrieve value from meta tag.
              - Retrieve value from page map.
              - >-
                Retrieve value from the attributes set by
                SiteSearchEngineService.SetUriPatternDocumentData API.
              - Retrieve value from schema.org data.
            enum:
              - ADVANCED_SITE_SEARCH_DATA_SOURCE_UNSPECIFIED
              - METATAGS
              - PAGEMAP
              - URI_PATTERN_MAPPING
              - SCHEMA_ORG
        schemaOrgPaths:
          description: >-
            Field paths for indexing custom attribute from schema.org data. More
            details of schema.org and its defined types can be found at
            [schema.org](https://schema.org). It is only used on advanced site
            search schema. Currently only support full path from root. The full
            path to a field is constructed by concatenating field names,
            starting from `_root`, with a period `.` as the delimiter. Examples:
            * Publish date of the root: _root.datePublished * Publish date of
            the reviews: _root.review.datePublished
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1alphaServingConfigDataStore:
      id: GoogleCloudDiscoveryengineV1alphaServingConfigDataStore
      description: >-
        Stores information regarding the serving configurations at DataStore
        level.
      type: object
      properties:
        disabledForServing:
          description: >-
            If set true, the DataStore will not be available for serving search
            requests.
          type: boolean
    GoogleCloudDiscoveryengineV1alphaDeleteDataStoreMetadata:
      id: GoogleCloudDiscoveryengineV1alphaDeleteDataStoreMetadata
      description: >-
        Metadata related to the progress of the DataStoreService.DeleteDataStore
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaDeleteEngineMetadata:
      id: GoogleCloudDiscoveryengineV1alphaDeleteEngineMetadata
      description: >-
        Metadata related to the progress of the EngineService.DeleteEngine
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaDeleteSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1alphaDeleteSchemaMetadata
      description: Metadata for DeleteSchema LRO.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaDeleteTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1alphaDeleteTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.DeleteTargetSite operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchMetadata:
      id: GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will
        be returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchResponse:
      id: GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchResponse
      description: >-
        Response message for SiteSearchEngineService.DisableAdvancedSiteSearch
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchMetadata:
      id: GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchResponse:
      id: GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchResponse
      description: >-
        Response message for SiteSearchEngineService.EnableAdvancedSiteSearch
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1alphaEngine:
      id: GoogleCloudDiscoveryengineV1alphaEngine
      description: >-
        Metadata that describes the training and serving parameters of an
        Engine.
      type: object
      properties:
        similarDocumentsConfig:
          description: Additional config specs for a `similar-items` engine.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig
        chatEngineConfig:
          description: >-
            Configurations for the Chat Engine. Only applicable if solution_type
            is SOLUTION_TYPE_CHAT.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig
        searchEngineConfig:
          description: >-
            Configurations for the Search Engine. Only applicable if
            solution_type is SOLUTION_TYPE_SEARCH.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig
        mediaRecommendationEngineConfig:
          description: >-
            Configurations for the Media Engine. Only applicable on the data
            stores with solution_type SOLUTION_TYPE_RECOMMENDATION and
            IndustryVertical.MEDIA vertical.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig
        recommendationMetadata:
          description: >-
            Output only. Additional information of a recommendation engine. Only
            applicable if solution_type is SOLUTION_TYPE_RECOMMENDATION.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata
        chatEngineMetadata:
          description: >-
            Output only. Additional information of the Chat Engine. Only
            applicable if solution_type is SOLUTION_TYPE_CHAT.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata
        name:
          description: >-
            Immutable. The fully qualified resource name of the engine. This
            field must be a UTF-8 encoded string with a length limit of 1024
            characters. Format:
            `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
            engine should be 1-63 characters, and valid characters are
            /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned.
          type: string
        displayName:
          description: >-
            Required. The display name of the engine. Should be human readable.
            UTF-8 encoded string with limit of 1024 characters.
          type: string
        createTime:
          description: Output only. Timestamp the Recommendation Engine was created at.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Timestamp the Recommendation Engine was last updated.
          readOnly: true
          type: string
          format: google-datetime
        dataStoreIds:
          description: >-
            The data stores associated with this engine. For
            SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of
            engines, they can only associate with at most one data store. If
            solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same
            Collection can be associated here. Note that when used in
            CreateEngineRequest, one DataStore id must be provided as the system
            will use it for necessary initializations.
          type: array
          items:
            type: string
        solutionType:
          description: Required. The solutions of the engine.
          type: string
          enumDescriptions:
            - Default value.
            - Used for Recommendations AI.
            - Used for Discovery Search.
            - Used for use cases related to the Generative AI agent.
            - >-
              Used for use cases related to the Generative Chat agent. It's used
              for Generative chat engine only, the associated data stores must
              enrolled with `SOLUTION_TYPE_CHAT` solution.
          enum:
            - SOLUTION_TYPE_UNSPECIFIED
            - SOLUTION_TYPE_RECOMMENDATION
            - SOLUTION_TYPE_SEARCH
            - SOLUTION_TYPE_CHAT
            - SOLUTION_TYPE_GENERATIVE_CHAT
        industryVertical:
          description: >-
            The industry vertical that the engine registers. The restriction of
            the Engine industry vertical is based on DataStore: If unspecified,
            default to `GENERIC`. Vertical on Engine has to match vertical of
            the DataStore linked to the engine.
          type: string
          enumDescriptions:
            - Value used when unset.
            - >-
              The generic vertical for documents that are not specific to any
              industry vertical.
            - The media industry vertical.
            - The healthcare FHIR vertical.
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
            - HEALTHCARE_FHIR
        commonConfig:
          description: Common config spec that specifies the metadata of the engine.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineCommonConfig
    GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig:
      id: GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig
      description: Additional config specs for a `similar-items` engine.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig:
      id: GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig
      description: Configurations for a Chat Engine.
      type: object
      properties:
        agentCreationConfig:
          description: >-
            The configurationt generate the Dialogflow agent that is associated
            to this Engine. Note that these configurations are one-time consumed
            by and passed to Dialogflow service. It means they cannot be
            retrieved using EngineService.GetEngine or EngineService.ListEngines
            API after engine creation.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig
        dialogflowAgentToLink:
          description: >-
            The resource name of an exist Dialogflow agent to link to this Chat
            Engine. Customers can either provide `agent_creation_config` to
            create agent or provide an agent name that links the agent with the
            Chat engine. Format: `projects//locations//agents/`. Note that the
            `dialogflow_agent_to_link` are one-time consumed by and passed to
            Dialogflow service. It means they cannot be retrieved using
            EngineService.GetEngine or EngineService.ListEngines API after
            engine creation. Use ChatEngineMetadata.dialogflow_agent for actual
            agent association after Engine is created.
          type: string
    GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig:
      id: >-
        GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig
      description: >-
        Configurations for generating a Dialogflow agent. Note that these
        configurations are one-time consumed by and passed to Dialogflow
        service. It means they cannot be retrieved using EngineService.GetEngine
        or EngineService.ListEngines API after engine creation.
      type: object
      properties:
        business:
          description: >-
            Name of the company, organization or other entity that the agent
            represents. Used for knowledge connector LLM prompt and for
            knowledge search.
          type: string
        defaultLanguageCode:
          description: >-
            Required. The default language of the agent as a language tag. See
            [Language
            Support](https://cloud.google.com/dialogflow/docs/reference/language)
            for a list of the currently supported language codes.
          type: string
        timeZone:
          description: >-
            Required. The time zone of the agent from the [time zone
            database](https://www.iana.org/time-zones), e.g., America/New_York,
            Europe/Paris.
          type: string
        location:
          description: >-
            Agent location for Agent creation, supported values: global/us/eu.
            If not provided, us Engine will create Agent using us-central-1 by
            default; eu Engine will create Agent using eu-west-1 by default.
          type: string
    GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig:
      id: GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig
      description: Configurations for a Search Engine.
      type: object
      properties:
        searchTier:
          description: >-
            The search feature tier of this engine. Different tiers might have
            different pricing. To learn more, check the pricing documentation.
            Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
          type: string
          enumDescriptions:
            - >-
              Default value when the enum is unspecified. This is invalid to
              use.
            - Standard tier.
            - Enterprise tier.
          enum:
            - SEARCH_TIER_UNSPECIFIED
            - SEARCH_TIER_STANDARD
            - SEARCH_TIER_ENTERPRISE
        searchAddOns:
          description: The add-on that this search engine enables.
          type: array
          items:
            type: string
            enumDescriptions:
              - >-
                Default value when the enum is unspecified. This is invalid to
                use.
              - Large language model add-on.
            enum:
              - SEARCH_ADD_ON_UNSPECIFIED
              - SEARCH_ADD_ON_LLM
    GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig:
      id: GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig
      description: Additional config specs for a Media Recommendation engine.
      type: object
      properties:
        type:
          description: >-
            Required. The type of engine. e.g., `recommended-for-you`. This
            field together with optimization_objective describe engine metadata
            to use to control engine training and serving. Currently supported
            values: `recommended-for-you`, `others-you-may-like`,
            `more-like-this`, `most-popular-items`.
          type: string
        optimizationObjective:
          description: >-
            The optimization objective. e.g., `cvr`. This field together with
            optimization_objective describe engine metadata to use to control
            engine training and serving. Currently supported values: `ctr`,
            `cvr`. If not specified, we choose default based on engine type.
            Default depends on type of recommendation: `recommended-for-you` =>
            `ctr` `others-you-may-like` => `ctr`
          type: string
        optimizationObjectiveConfig:
          description: >-
            Name and value of the custom threshold for cvr
            optimization_objective. For target_field `watch-time`,
            target_field_value must be an integer value indicating the media
            progress time in seconds between (0, 86400] (excludes 0, includes
            86400) (e.g., 90). For target_field `watch-percentage`, the
            target_field_value must be a valid float value between (0, 1.0]
            (excludes 0, includes 1.0) (e.g., 0.5).
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig
        trainingState:
          description: >-
            The training state that the engine is in (e.g. `TRAINING` or
            `PAUSED`). Since part of the cost of running the service is
            frequency of training - this can be used to determine when to train
            engine in order to control cost. If not specified: the default value
            for `CreateEngine` method is `TRAINING`. The default value for
            `UpdateEngine` method is to keep the state the same as before.
          type: string
          enumDescriptions:
            - Unspecified training state.
            - The engine training is paused.
            - The engine is training.
          enum:
            - TRAINING_STATE_UNSPECIFIED
            - PAUSED
            - TRAINING
    GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig:
      id: >-
        GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig
      description: Custom threshold for `cvr` optimization_objective.
      type: object
      properties:
        targetField:
          description: >-
            Required. The name of the field to target. Currently supported
            values: `watch-percentage`, `watch-time`.
          type: string
        targetFieldValueFloat:
          description: Required. The threshold to be applied to the target (e.g., 0.5).
          type: number
          format: float
    GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata:
      id: GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata
      description: Additional information of a recommendation engine.
      type: object
      properties:
        servingState:
          description: >-
            Output only. The serving state of the engine: `ACTIVE`,
            `NOT_ACTIVE`.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified serving state.
            - The engine is not serving.
            - The engine is serving and can be queried.
            - The engine is trained on tuned hyperparameters and can be queried.
          enum:
            - SERVING_STATE_UNSPECIFIED
            - INACTIVE
            - ACTIVE
            - TUNED
        dataState:
          description: >-
            Output only. The state of data requirements for this engine:
            `DATA_OK` and `DATA_ERROR`. Engine cannot be trained if the data is
            in `DATA_ERROR` state. Engine can have `DATA_ERROR` state even if
            serving state is `ACTIVE`: engines were trained successfully before,
            but cannot be refreshed because the underlying engine no longer has
            sufficient data for training.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified default value, should never be explicitly set.
            - The engine has sufficient training data.
            - >-
              The engine does not have sufficient training data. Error messages
              can be queried via Stackdriver.
          enum:
            - DATA_STATE_UNSPECIFIED
            - DATA_OK
            - DATA_ERROR
        lastTuneTime:
          description: >-
            Output only. The timestamp when the latest successful tune finished.
            Only applicable on Media Recommendation engines.
          readOnly: true
          type: string
          format: google-datetime
        tuningOperation:
          description: >-
            Output only. The latest tune operation id associated with the
            engine. Only applicable on Media Recommendation engines. If present,
            this operation id can be used to determine if there is an ongoing
            tune for this engine. To check the operation status, send the
            GetOperation request with this operation id in the engine resource
            format. If no tuning has happened for this engine, the string is
            empty.
          readOnly: true
          type: string
    GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata:
      id: GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata
      description: >-
        Additional information of a Chat Engine. Fields in this message are
        output only.
      type: object
      properties:
        dialogflowAgent:
          description: >-
            The resource name of a Dialogflow agent, that this Chat Engine
            refers to. Format: `projects//locations//agents/`.
          type: string
    GoogleCloudDiscoveryengineV1alphaEngineCommonConfig:
      id: GoogleCloudDiscoveryengineV1alphaEngineCommonConfig
      description: Common configurations for an Engine.
      type: object
      properties:
        companyName:
          description: >-
            The name of the company, business or entity that is associated with
            the engine. Setting this may help improve LLM related features.
          type: string
    GoogleCloudDiscoveryengineV1alphaEstimateDataSizeMetadata:
      id: GoogleCloudDiscoveryengineV1alphaEstimateDataSizeMetadata
      description: >-
        Metadata related to the progress of the EstimateDataSize operation. This
        is returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaEstimateDataSizeResponse:
      id: GoogleCloudDiscoveryengineV1alphaEstimateDataSizeResponse
      description: >-
        Response of the EstimateDataSize request. If the long running operation
        was successful, then this message is returned by the
        google.longrunning.Operations.response field if the operation was
        successful.
      type: object
      properties:
        dataSizeBytes:
          description: Data size in terms of bytes.
          type: string
          format: int64
        documentCount:
          description: Total number of documents.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaEvaluation:
      id: GoogleCloudDiscoveryengineV1alphaEvaluation
      description: >-
        An evaluation is a single execution (or run) of an evaluation process.
        It encapsulates the state of the evaluation and the resulting data.
      type: object
      properties:
        name:
          description: >-
            Identifier. The full resource name of the Evaluation, in the format
            of
            `projects/{project}/locations/{location}/evaluations/{evaluation}`.
            This field must be a UTF-8 encoded string with a length limit of
            1024 characters.
          type: string
        evaluationSpec:
          description: Required. The specification of the evaluation.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpec
        qualityMetrics:
          description: >-
            Output only. The metrics produced by the evaluation, averaged across
            all SampleQuerys in the SampleQuerySet. Only populated when the
            evaluation's state is SUCCEEDED.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaQualityMetrics'
        state:
          description: Output only. The state of the evaluation.
          readOnly: true
          type: string
          enumDescriptions:
            - The evaluation is unspecified.
            - The service is preparing to run the evaluation.
            - The evaluation is in progress.
            - The evaluation completed successfully.
            - The evaluation failed.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
        error:
          description: >-
            Output only. The error that occurred during evaluation. Only
            populated when the evaluation's state is FAILED.
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcStatus'
        createTime:
          description: Output only. Timestamp the Evaluation was created at.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. Timestamp the Evaluation was completed at.
          readOnly: true
          type: string
          format: google-datetime
        errorSamples:
          description: >-
            Output only. A sample of errors encountered while processing the
            request.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpec:
      id: GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpec
      description: Describes the specification of the evaluation.
      type: object
      properties:
        searchRequest:
          description: >-
            Required. The search request that is used to perform the evaluation.
            Only the following fields within SearchRequest are supported; if any
            other fields are provided, an UNSUPPORTED error will be returned: *
            SearchRequest.serving_config * SearchRequest.branch *
            SearchRequest.canonical_filter * SearchRequest.query_expansion_spec
            * SearchRequest.spell_correction_spec *
            SearchRequest.content_search_spec * SearchRequest.user_pseudo_id
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequest'
        querySetSpec:
          description: Required. The specification of the query set.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpecQuerySetSpec
    GoogleCloudDiscoveryengineV1alphaSearchRequest:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequest
      description: Request message for SearchService.Search method.
      type: object
      properties:
        servingConfig:
          description: >-
            Required. The resource name of the Search serving config, such as
            `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
            or
            `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
            This field is used to identify the serving configuration name, set
            of models used to make the search.
          type: string
        branch:
          description: >-
            The branch resource name, such as
            `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`.
            Use `default_branch` as the branch ID or leave this field empty, to
            search documents under the default branch.
          type: string
        query:
          description: Raw search query.
          type: string
        imageQuery:
          description: Raw image query.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery
        pageSize:
          description: >-
            Maximum number of Documents to return. The maximum allowed value
            depends on the data type. Values above the maximum value are coerced
            to the maximum value. * Websites with basic indexing: Default `10`,
            Maximum `25`. * Websites with advanced indexing: Default `25`,
            Maximum `50`. * Other: Default `50`, Maximum `100`. If this field is
            negative, an `INVALID_ARGUMENT` is returned.
          type: integer
          format: int32
        pageToken:
          description: >-
            A page token received from a previous SearchService.Search call.
            Provide this to retrieve the subsequent page. When paginating, all
            other parameters provided to SearchService.Search must match the
            call that provided the page token. Otherwise, an `INVALID_ARGUMENT`
            error is returned.
          type: string
        offset:
          description: >-
            A 0-indexed integer that specifies the current offset (that is,
            starting result location, amongst the Documents deemed by the API as
            relevant) in search results. This field is only considered if
            page_token is unset. If this field is negative, an
            `INVALID_ARGUMENT` is returned.
          type: integer
          format: int32
        dataStoreSpecs:
          description: >-
            Specs defining dataStores to filter on in a search call and
            configurations for those dataStores. This is only considered for
            engines with multiple dataStores use case. For single dataStore
            within an engine, they should use the specs at the top level.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec
        filter:
          description: >-
            The filter syntax consists of an expression language for
            constructing a predicate from one or more fields of the documents
            being filtered. Filter expression is case-sensitive. If this field
            is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in
            Vertex AI Search is done by mapping the LHS filter key to a key
            property defined in the Vertex AI Search backend -- this mapping is
            defined by the customer in their schema. For example a media
            customer might have a field 'name' in their schema. In this case the
            filter would look like this: filter --> name:'ANY("king kong")' For
            more information about filtering including syntax and filter
            operators, see
            [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
          type: string
        canonicalFilter:
          description: >-
            The default filter that is applied when a user performs a search
            without checking any filters on the search page. The filter applied
            to every search request when quality improvement such as query
            expansion is needed. In the case a query does not have a sufficient
            amount of results this filter will be used to determine whether or
            not to enable the query expansion flow. The original filter will
            still be used for the query expanded search. This field is strongly
            recommended to achieve high search quality. For more information
            about filter syntax, see SearchRequest.filter.
          type: string
        orderBy:
          description: >-
            The order in which documents are returned. Documents can be ordered
            by a field in an Document object. Leave it unset if ordered by
            relevance. `order_by` expression is case-sensitive. For more
            information on ordering the website search results, see [Order web
            search
            results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results).
            For more information on ordering the healthcare search results, see
            [Order healthcare search
            results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results).
            If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
          type: string
        userInfo:
          description: >-
            Information about the end user. Highly recommended for analytics.
            UserInfo.user_agent is used to deduce `device_type` for analytics.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaUserInfo'
        languageCode:
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see [Standard
            fields](https://cloud.google.com/apis/design/standard_fields). This
            field helps to better interpret the query. If a value isn't
            specified, the query language code is automatically detected, which
            may not be accurate.
          type: string
        regionCode:
          description: >-
            The Unicode country/region code (CLDR) of a location, such as "US"
            and "419". For more information, see [Standard
            fields](https://cloud.google.com/apis/design/standard_fields). If
            set, then results will be boosted based on the region_code provided.
          type: string
        facetSpecs:
          description: >-
            Facet specifications for faceted search. If empty, no facets are
            returned. A maximum of 100 values are allowed. Otherwise, an
            `INVALID_ARGUMENT` error is returned.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec
        boostSpec:
          description: >-
            Boost specification to boost certain documents. For more information
            on boosting, see
            [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec
        params:
          description: >-
            Additional search parameters. For public website search only,
            supported values are: * `user_country_code`: string. Default empty.
            If set to non-empty, results are restricted or boosted based on the
            location provided. For example, `user_country_code: "au"` For
            available codes see [Country
            Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes)
            * `search_type`: double. Default empty. Enables non-webpage
            searching depending on the value. The only valid non-default value
            is 1, which enables image searching. For example, `search_type: 1`
          type: object
          additionalProperties:
            type: any
        queryExpansionSpec:
          description: >-
            The query expansion specification that specifies the conditions
            under which query expansion occurs.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec
        spellCorrectionSpec:
          description: >-
            The spell correction specification that specifies the mode under
            which spell correction takes effect.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec
        userPseudoId:
          description: >-
            A unique identifier for tracking visitors. For example, this could
            be implemented with an HTTP cookie, which should be able to uniquely
            identify a visitor on a single device. This unique identifier should
            not change if the visitor logs in or out of the website. This field
            should NOT have a fixed value such as `unknown_visitor`. This should
            be the same identifier as UserEvent.user_pseudo_id and
            CompleteQueryRequest.user_pseudo_id The field must be a UTF-8
            encoded string with a length limit of 128 characters. Otherwise, an
            `INVALID_ARGUMENT` error is returned.
          type: string
        contentSearchSpec:
          description: A specification for configuring the behavior of content search.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec
        embeddingSpec:
          description: >-
            Uses the provided embedding to do additional semantic document
            retrieval. The retrieval is based on the dot product of
            SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document
            embedding that is provided in
            SearchRequest.EmbeddingSpec.EmbeddingVector.field_path. If
            SearchRequest.EmbeddingSpec.EmbeddingVector.field_path is not
            provided, it will use ServingConfig.EmbeddingConfig.field_path.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec
        rankingExpression:
          description: >-
            The ranking expression controls the customized ranking on retrieval
            documents. This overrides ServingConfig.ranking_expression. The
            ranking expression is a single function or multiple functions that
            are joined by "+". * ranking_expression = function, { " + ",
            function }; Supported functions: * double * relevance_score * double
            * dotProduct(embedding_field_path) Function variables: *
            `relevance_score`: pre-defined keywords, used for measure relevance
            between query and document. * `embedding_field_path`: the document
            embedding field used with query embedding vector. * `dotProduct`:
            embedding function between embedding_field_path and query embedding
            vector. Example ranking expression: If document has an embedding
            field doc_embedding, the ranking expression could be `0.5 *
            relevance_score + 0.3 * dotProduct(doc_embedding)`.
          type: string
        safeSearch:
          description: >-
            Whether to turn on safe search. This is only supported for website
            search.
          type: boolean
        userLabels:
          description: >-
            The user labels applied to a resource must meet the following
            requirements: * Each resource can have multiple labels, up to a
            maximum of 64. * Each label must be a key-value pair. * Keys have a
            minimum length of 1 character and a maximum length of 63 characters
            and cannot be empty. Values can be empty and have a maximum length
            of 63 characters. * Keys and values can contain only lowercase
            letters, numeric characters, underscores, and dashes. All characters
            must use UTF-8 encoding, and international characters are allowed. *
            The key portion of a label must be unique. However, you can use the
            same key with multiple resources. * Keys must start with a lowercase
            letter or international character. See [Google Cloud
            Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
            for more details.
          type: object
          additionalProperties:
            type: string
        naturalLanguageQueryUnderstandingSpec:
          description: >-
            If `naturalLanguageQueryUnderstandingSpec` is not specified, no
            additional natural language query understanding will be done.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec
        searchAsYouTypeSpec:
          description: >-
            Search as you type configuration. Only supported for the
            IndustryVertical.MEDIA vertical.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec
        customFineTuningSpec:
          description: >-
            Custom fine tuning configs. If set, it has higher priority than the
            configs set in ServingConfig.custom_fine_tuning_spec.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec
        session:
          description: >-
            The session resource name. Optional. Session allows users to do
            multi-turn /search API calls or coordination between /search API
            calls and /answer API calls. Example #1 (multi-turn /search API
            calls): 1. Call /search API with the auto-session mode (see below).
            2. Call /search API with the session ID generated in the first call.
            Here, the previous search query gets considered in query standing.
            I.e., if the first query is "How did Alphabet do in 2022?" and the
            current query is "How about 2023?", the current query will be
            interpreted as "How did Alphabet do in 2023?". Example #2
            (coordination between /search API calls and /answer API calls): 1.
            Call /search API with the auto-session mode (see below). 2. Call
            /answer API with the session ID generated in the first call. Here,
            the answer generation happens in the context of the search results
            from the first search call. Auto-session mode: when
            `projects/.../sessions/-` is used, a new session gets automatically
            created. Otherwise, users can use the create-session API to create a
            session manually. Multi-turn Search feature is currently at private
            GA stage. Please use v1alpha or v1beta version instead before we
            launch this feature to public GA. Or ask for allowlisting through
            Google Support team.
          type: string
        sessionSpec:
          description: Session specification. Can be used only when `session` is set.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestSessionSpec
        relevanceThreshold:
          description: >-
            The relevance threshold of the search results. Default to Google
            defined threshold, leveraging a balance of precision and recall to
            deliver both highly accurate results and comprehensive coverage of
            relevant information.
          type: string
          enumDescriptions:
            - >-
              Default value. In this case, server behavior defaults to Google
              defined threshold.
            - Lowest relevance threshold.
            - Low relevance threshold.
            - Medium relevance threshold.
            - High relevance threshold.
          enum:
            - RELEVANCE_THRESHOLD_UNSPECIFIED
            - LOWEST
            - LOW
            - MEDIUM
            - HIGH
    GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery
      description: Specifies the image query input.
      type: object
      properties:
        imageBytes:
          description: >-
            Base64 encoded image bytes. Supported image formats: JPEG, PNG, and
            BMP.
          type: string
    GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec
      description: >-
        A struct to define data stores to filter on in a search call and
        configurations for those data stores. Otherwise, an `INVALID_ARGUMENT`
        error is returned.
      type: object
      properties:
        dataStore:
          description: >-
            Required. Full resource name of DataStore, such as
            `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
          type: string
    GoogleCloudDiscoveryengineV1alphaUserInfo:
      id: GoogleCloudDiscoveryengineV1alphaUserInfo
      description: Information of an end user.
      type: object
      properties:
        userId:
          description: >-
            Highly recommended for logged-in users. Unique identifier for
            logged-in user, such as a user name. Don't set for anonymous users.
            Always use a hashed value for this ID. Don't set the field to the
            same fixed ID for different users. This mixes the event history of
            those users together, which results in degraded model quality. The
            field must be a UTF-8 encoded string with a length limit of 128
            characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
        userAgent:
          description: >-
            User agent as included in the HTTP header. The field must be a UTF-8
            encoded string with a length limit of 1,000 characters. Otherwise,
            an `INVALID_ARGUMENT` error is returned. This should not be set when
            using the client side event reporting with GTM or JavaScript tag in
            UserEventService.CollectUserEvent or if
            UserEvent.direct_user_request is set.
          type: string
    GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec
      description: A facet specification to perform faceted search.
      type: object
      properties:
        facetKey:
          description: Required. The facet key specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey
        limit:
          description: >-
            Maximum facet values that are returned for this facet. If
            unspecified, defaults to 20. The maximum allowed value is 300.
            Values above 300 are coerced to 300. For aggregation in healthcare
            search, when the [FacetKey.key] is "healthcare_aggregation_key", the
            limit will be overridden to 10,000 internally, regardless of the
            value set here. If this field is negative, an `INVALID_ARGUMENT` is
            returned.
          type: integer
          format: int32
        excludedFilterKeys:
          description: >-
            List of keys to exclude when faceting. By default, FacetKey.key is
            not excluded from the filter unless it is listed in this field.
            Listing a facet key in this field allows its values to appear as
            facet results, even when they are filtered out of search results.
            Using this field does not affect what search results are returned.
            For example, suppose there are 100 documents with the color facet
            "Red" and 200 documents with the color facet "Blue". A query
            containing the filter "color:ANY("Red")" and having "color" as
            FacetKey.key would by default return only "Red" documents in the
            search results, and also return "Red" with count 100 as the only
            color facet. Although there are also blue documents available,
            "Blue" would not be shown as an available facet value. If "color" is
            listed in "excludedFilterKeys", then the query returns the facet
            values "Red" with count 100 and "Blue" with count 200, because the
            "color" key is now excluded from the filter. Because this field
            doesn't affect search results, the search results are still
            correctly filtered to return only "Red" documents. A maximum of 100
            values are allowed. Otherwise, an `INVALID_ARGUMENT` error is
            returned.
          type: array
          items:
            type: string
        enableDynamicPosition:
          description: >-
            Enables dynamic position for this facet. If set to true, the
            position of this facet among all facets in the response is
            determined automatically. If dynamic facets are enabled, it is
            ordered together. If set to false, the position of this facet in the
            response is the same as in the request, and it is ranked before the
            facets with dynamic position enable and all dynamic facets. For
            example, you may always want to have rating facet returned in the
            response, but it's not necessarily to always display the rating
            facet at the top. In that case, you can set enable_dynamic_position
            to true so that the position of rating facet in response is
            determined automatically. Another example, assuming you have the
            following facets in the request: * "rating", enable_dynamic_position
            = true * "price", enable_dynamic_position = false * "brands",
            enable_dynamic_position = false And also you have a dynamic facets
            enabled, which generates a facet `gender`. Then the final order of
            the facets in the response can be ("price", "brands", "rating",
            "gender") or ("price", "brands", "gender", "rating") depends on how
            API orders "gender" and "rating" facets. However, notice that
            "price" and "brands" are always ranked at first and second position
            because their enable_dynamic_position is false.
          type: boolean
    GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey
      description: Specifies how a facet is computed.
      type: object
      properties:
        key:
          description: >-
            Required. Supported textual and numerical facet keys in Document
            object, over which the facet values are computed. Facet key is
            case-sensitive.
          type: string
        intervals:
          description: >-
            Set only if values should be bucketed into intervals. Must be set
            for facets with numerical values. Must not be set for facet with
            text values. Maximum number of intervals is 30.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaInterval'
        restrictedValues:
          description: >-
            Only get facet for the given restricted values. Only supported on
            textual fields. For example, suppose "category" has three values
            "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set
            "restricted_values" to "Action > 2022", the "category" facet only
            contains "Action > 2022". Only supported on textual fields. Maximum
            is 10.
          type: array
          items:
            type: string
        prefixes:
          description: >-
            Only get facet values that start with the given string prefix. For
            example, suppose "category" has three values "Action > 2022",
            "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to "Action",
            the "category" facet only contains "Action > 2022" and "Action >
            2021". Only supported on textual fields. Maximum is 10.
          type: array
          items:
            type: string
        contains:
          description: >-
            Only get facet values that contain the given strings. For example,
            suppose "category" has three values "Action > 2022", "Action > 2021"
            and "Sci-Fi > 2022". If set "contains" to "2022", the "category"
            facet only contains "Action > 2022" and "Sci-Fi > 2022". Only
            supported on textual fields. Maximum is 10.
          type: array
          items:
            type: string
        caseInsensitive:
          description: >-
            True to make facet keys case insensitive when getting faceting
            values with prefixes or contains; false otherwise.
          type: boolean
        orderBy:
          description: >-
            The order in which documents are returned. Allowed values are: *
            "count desc", which means order by SearchResponse.Facet.values.count
            descending. * "value desc", which means order by
            SearchResponse.Facet.values.value descending. Only applies to
            textual facets. If not set, textual values are sorted in [natural
            order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical
            intervals are sorted in the order given by
            FacetSpec.FacetKey.intervals.
          type: string
    GoogleCloudDiscoveryengineV1alphaInterval:
      id: GoogleCloudDiscoveryengineV1alphaInterval
      description: A floating point interval.
      type: object
      properties:
        minimum:
          description: Inclusive lower bound.
          type: number
          format: double
        exclusiveMinimum:
          description: Exclusive lower bound.
          type: number
          format: double
        maximum:
          description: Inclusive upper bound.
          type: number
          format: double
        exclusiveMaximum:
          description: Exclusive upper bound.
          type: number
          format: double
    GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec
      description: Boost specification to boost certain documents.
      type: object
      properties:
        conditionBoostSpecs:
          description: >-
            Condition boost specifications. If a document matches multiple
            conditions in the specifictions, boost scores from these
            specifications are all applied and combined in a non-linear way.
            Maximum number of specifications is 20.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec
    GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec:
      id: >-
        GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec
      description: Boost applies to documents which match a condition.
      type: object
      properties:
        condition:
          description: >-
            An expression which specifies a boost condition. The syntax and
            supported fields are the same as a filter expression. See
            SearchRequest.filter for detail syntax and limitations. Examples: *
            To boost documents with document ID "doc_1" or "doc_2", and color
            "Red" or "Blue": `(document_id: ANY("doc_1", "doc_2")) AND (color:
            ANY("Red", "Blue"))`
          type: string
        boost:
          description: >-
            Strength of the condition boost, which should be in [-1, 1].
            Negative boost means demotion. Default is 0.0. Setting to 1.0 gives
            the document a big promotion. However, it does not necessarily mean
            that the boosted document will be the top result at all times, nor
            that other documents will be excluded. Results could still be shown
            even when none of them matches the condition. And results that are
            significantly more relevant to the search query can still trump your
            heavily favored but irrelevant documents. Setting to -1.0 gives the
            document a big demotion. However, results that are deeply relevant
            might still be shown. The document will have an upstream battle to
            get a fairly high ranking, but it is not blocked out completely.
            Setting to 0.0 means no boost applied. The boosting condition is
            ignored. Only one of the (condition, boost) combination or the
            boost_control_spec below are set. If both are set then the global
            boost is ignored and the more fine-grained boost_control_spec is
            applied.
          type: number
          format: float
        boostControlSpec:
          description: >-
            Complex specification for custom ranking based on customer defined
            attribute value.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec
    GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec:
      id: >-
        GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec
      description: >-
        Specification for custom ranking based on customer specified attribute
        value. It provides more controls for customized ranking than the simple
        (condition, boost) combination above.
      type: object
      properties:
        fieldName:
          description: >-
            The name of the field whose value will be used to determine the
            boost amount.
          type: string
        attributeType:
          description: >-
            The attribute type to be used to determine the boost amount. The
            attribute value can be derived from the field value of the specified
            field_name. In the case of numerical it is straightforward i.e.
            attribute_value = numerical_field_value. In the case of freshness
            however, attribute_value = (time.now() - datetime_field_value).
          type: string
          enumDescriptions:
            - Unspecified AttributeType.
            - >-
              The value of the numerical field will be used to dynamically
              update the boost amount. In this case, the attribute_value (the x
              value) of the control point will be the actual value of the
              numerical field for which the boost_amount is specified.
            - >-
              For the freshness use case the attribute value will be the
              duration between the current time and the date in the datetime
              field specified. The value must be formatted as an XSD
              `dayTimeDuration` value (a restricted subset of an ISO 8601
              duration value). The pattern for this is: `nDnM]`. For example,
              `5D`, `3DT12H30M`, `T24H`.
          enum:
            - ATTRIBUTE_TYPE_UNSPECIFIED
            - NUMERICAL
            - FRESHNESS
        interpolationType:
          description: >-
            The interpolation type to be applied to connect the control points
            listed below.
          type: string
          enumDescriptions:
            - >-
              Interpolation type is unspecified. In this case, it defaults to
              Linear.
            - Piecewise linear interpolation will be applied.
          enum:
            - INTERPOLATION_TYPE_UNSPECIFIED
            - LINEAR
        controlPoints:
          description: >-
            The control points used to define the curve. The monotonic function
            (defined through the interpolation_type above) passes through the
            control points listed here.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint
    GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint:
      id: >-
        GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint
      description: >-
        The control points used to define the curve. The curve defined through
        these control points can only be monotonically increasing or
        decreasing(constant values are acceptable).
      type: object
      properties:
        attributeValue:
          description: >-
            Can be one of: 1. The numerical field value. 2. The duration spec
            for freshness: The value must be formatted as an XSD
            `dayTimeDuration` value (a restricted subset of an ISO 8601 duration
            value). The pattern for this is: `nDnM]`.
          type: string
        boostAmount:
          description: >-
            The value between -1 to 1 by which to boost the score if the
            attribute_value evaluates to the value specified above.
          type: number
          format: float
    GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec
      description: >-
        Specification to determine under which conditions query expansion should
        occur.
      type: object
      properties:
        condition:
          description: >-
            The condition under which query expansion should occur. Default to
            Condition.DISABLED.
          type: string
          enumDescriptions:
            - >-
              Unspecified query expansion condition. In this case, server
              behavior defaults to Condition.DISABLED.
            - >-
              Disabled query expansion. Only the exact search query is used,
              even if SearchResponse.total_size is zero.
            - Automatic query expansion built by the Search API.
          enum:
            - CONDITION_UNSPECIFIED
            - DISABLED
            - AUTO
        pinUnexpandedResults:
          description: >-
            Whether to pin unexpanded results. If this field is set to true,
            unexpanded products are always at the top of the search results,
            followed by the expanded results.
          type: boolean
    GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec
      description: The specification for query spell correction.
      type: object
      properties:
        mode:
          description: >-
            The mode under which spell correction replaces the original search
            query. Defaults to Mode.AUTO.
          type: string
          enumDescriptions:
            - >-
              Unspecified spell correction mode. In this case, server behavior
              defaults to Mode.AUTO.
            - >-
              Search API tries to find a spelling suggestion. If a suggestion is
              found, it is put in the SearchResponse.corrected_query. The
              spelling suggestion won't be used as the search query.
            - >-
              Automatic spell correction built by the Search API. Search will be
              based on the corrected query if found.
          enum:
            - MODE_UNSPECIFIED
            - SUGGESTION_ONLY
            - AUTO
    GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec
      description: A specification for configuring the behavior of content search.
      type: object
      properties:
        snippetSpec:
          description: >-
            If `snippetSpec` is not specified, snippets are not included in the
            search response.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec
        summarySpec:
          description: >-
            If `summarySpec` is not specified, summaries are not included in the
            search response.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec
        extractiveContentSpec:
          description: >-
            If there is no extractive_content_spec provided, there will be no
            extractive answer in the search response.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec
        searchResultMode:
          description: >-
            Specifies the search result mode. If unspecified, the search result
            mode defaults to `DOCUMENTS`.
          type: string
          enumDescriptions:
            - Default value.
            - Returns documents in the search result.
            - >-
              Returns chunks in the search result. Only available if the
              DataStore.DocumentProcessingConfig.chunking_config is specified.
          enum:
            - SEARCH_RESULT_MODE_UNSPECIFIED
            - DOCUMENTS
            - CHUNKS
        chunkSpec:
          description: >-
            Specifies the chunk spec to be returned from the search response.
            Only available if the
            SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecChunkSpec
    GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec:
      id: >-
        GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec
      description: A specification for configuring snippets in a search response.
      type: object
      properties:
        maxSnippetCount:
          description: >-
            [DEPRECATED] This field is deprecated. To control snippet return,
            use `return_snippet` field. For backwards compatibility, we will
            return snippet if max_snippet_count > 0.
          deprecated: true
          type: integer
          format: int32
        referenceOnly:
          description: >-
            [DEPRECATED] This field is deprecated and will have no affect on the
            snippet.
          deprecated: true
          type: boolean
        returnSnippet:
          description: >-
            If `true`, then return snippet. If no snippet can be generated, we
            return "No snippet is available for this page." A `snippet_status`
            with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.
          type: boolean
    GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec:
      id: >-
        GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec
      description: A specification for configuring a summary returned in a search response.
      type: object
      properties:
        summaryResultCount:
          description: >-
            The number of top results to generate the summary from. If the
            number of results returned is less than `summaryResultCount`, the
            summary is generated from all of the results. At most 10 results for
            documents mode, or 50 for chunks mode, can be used to generate a
            summary. The chunks mode is used when
            SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
          type: integer
          format: int32
        includeCitations:
          description: >-
            Specifies whether to include citations in the summary. The default
            value is `false`. When this field is set to `true`, summaries
            include in-line citation numbers. Example summary including
            citations: BigQuery is Google Cloud's fully managed and completely
            serverless enterprise data warehouse [1]. BigQuery supports all data
            types, works across clouds, and has built-in machine learning and
            business intelligence, all within a unified platform [2, 3]. The
            citation numbers refer to the returned search results and are
            1-indexed. For example, [1] means that the sentence is attributed to
            the first search result. [2, 3] means that the sentence is
            attributed to both the second and third search results.
          type: boolean
        ignoreAdversarialQuery:
          description: >-
            Specifies whether to filter out adversarial queries. The default
            value is `false`. Google employs search-query classification to
            detect adversarial queries. No summary is returned if the search
            query is classified as an adversarial query. For example, a user
            might ask a question regarding negative comments about the company
            or submit a query designed to generate unsafe, policy-violating
            output. If this field is set to `true`, we skip generating summaries
            for adversarial queries and return fallback messages instead.
          type: boolean
        ignoreNonSummarySeekingQuery:
          description: >-
            Specifies whether to filter out queries that are not
            summary-seeking. The default value is `false`. Google employs
            search-query classification to detect summary-seeking queries. No
            summary is returned if the search query is classified as a
            non-summary seeking query. For example, `why is the sky blue` and
            `Who is the best soccer player in the world?` are summary-seeking
            queries, but `SFO airport` and `world cup 2026` are not. They are
            most likely navigational queries. If this field is set to `true`, we
            skip generating summaries for non-summary seeking queries and return
            fallback messages instead.
          type: boolean
        ignoreLowRelevantContent:
          description: >-
            Specifies whether to filter out queries that have low relevance. The
            default value is `false`. If this field is set to `false`, all
            search results are used regardless of relevance to generate answers.
            If set to `true`, only queries with high relevance search results
            will generate answers.
          type: boolean
        ignoreJailBreakingQuery:
          description: >-
            Optional. Specifies whether to filter out jail-breaking queries. The
            default value is `false`. Google employs search-query classification
            to detect jail-breaking queries. No summary is returned if the
            search query is classified as a jail-breaking query. A user might
            add instructions to the query to change the tone, style, language,
            content of the answer, or ask the model to act as a different
            entity, e.g. "Reply in the tone of a competing company's CEO". If
            this field is set to `true`, we skip generating summaries for
            jail-breaking queries and return fallback messages instead.
          type: boolean
        modelPromptSpec:
          description: >-
            If specified, the spec will be used to modify the prompt provided to
            the LLM.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec
        languageCode:
          description: >-
            Language code for Summary. Use language tags defined by
            [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is
            an experimental feature.
          type: string
        modelSpec:
          description: >-
            If specified, the spec will be used to modify the model
            specification provided to the LLM.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec
        useSemanticChunks:
          description: >-
            If true, answer will be generated from most relevant chunks from top
            search results. This feature will improve summary quality. Note that
            with this feature enabled, not all top search results will be
            referenced and included in the reference list, so the citation
            source index only points to the search results listed in the
            reference list.
          type: boolean
    GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec:
      id: >-
        GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec
      description: Specification of the prompt to use with the model.
      type: object
      properties:
        preamble:
          description: >-
            Text at the beginning of the prompt that instructs the assistant.
            Examples are available in the user guide.
          type: string
    GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec:
      id: >-
        GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec
      description: Specification of the model.
      type: object
      properties:
        version:
          description: >-
            The model version used to generate the summary. Supported values
            are: * `stable`: string. Default value when no value is specified.
            Uses a generally available, fine-tuned model. For more information,
            see [Answer generation model versions and
            lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
            * `preview`: string. (Public preview) Uses a preview model. For more
            information, see [Answer generation model versions and
            lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
          type: string
    GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec:
      id: >-
        GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec
      description: >-
        A specification for configuring the extractive content in a search
        response.
      type: object
      properties:
        maxExtractiveAnswerCount:
          description: >-
            The maximum number of extractive answers returned in each search
            result. An extractive answer is a verbatim answer extracted from the
            original document, which provides a precise and contextually
            relevant answer to the search query. If the number of matching
            answers is less than the `max_extractive_answer_count`, return all
            of the answers. Otherwise, return the `max_extractive_answer_count`.
            At most five answers are returned for each SearchResult.
          type: integer
          format: int32
        maxExtractiveSegmentCount:
          description: >-
            The max number of extractive segments returned in each search
            result. Only applied if the DataStore is set to
            DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types
            is SOLUTION_TYPE_CHAT. An extractive segment is a text segment
            extracted from the original document that is relevant to the search
            query, and, in general, more verbose than an extractive answer. The
            segment could then be used as input for LLMs to generate summaries
            and answers. If the number of matching segments is less than
            `max_extractive_segment_count`, return all of the segments.
            Otherwise, return the `max_extractive_segment_count`.
          type: integer
          format: int32
        returnExtractiveSegmentScore:
          description: >-
            Specifies whether to return the confidence score from the extractive
            segments in each search result. This feature is available only for
            new or allowlisted data stores. To allowlist your data store,
            contact your Customer Engineer. The default value is `false`.
          type: boolean
        numPreviousSegments:
          description: >-
            Specifies whether to also include the adjacent from each selected
            segments. Return at most `num_previous_segments` segments before
            each selected segments.
          type: integer
          format: int32
        numNextSegments:
          description: >-
            Return at most `num_next_segments` segments after each selected
            segments.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecChunkSpec:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecChunkSpec
      description: >-
        Specifies the chunk spec to be returned from the search response. Only
        available if the SearchRequest.ContentSearchSpec.search_result_mode is
        set to CHUNKS
      type: object
      properties:
        numPreviousChunks:
          description: >-
            The number of previous chunks to be returned of the current chunk.
            The maximum allowed value is 3. If not specified, no previous chunks
            will be returned.
          type: integer
          format: int32
        numNextChunks:
          description: >-
            The number of next chunks to be returned of the current chunk. The
            maximum allowed value is 3. If not specified, no next chunks will be
            returned.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec
      description: >-
        The specification that uses customized query embedding vector to do
        semantic document retrieval.
      type: object
      properties:
        embeddingVectors:
          description: The embedding vector used for retrieval. Limit to 1.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpecEmbeddingVector
    GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpecEmbeddingVector:
      id: >-
        GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpecEmbeddingVector
      description: Embedding vector.
      type: object
      properties:
        fieldPath:
          description: Embedding field path in schema.
          type: string
        vector:
          description: Query embedding vector.
          type: array
          items:
            type: number
            format: float
    GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec:
      id: >-
        GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec
      description: >-
        Specification to enable natural language understanding capabilities for
        search requests.
      type: object
      properties:
        filterExtractionCondition:
          description: >-
            The condition under which filter extraction should occur. Default to
            Condition.DISABLED.
          type: string
          enumDescriptions:
            - Server behavior defaults to Condition.DISABLED.
            - Disables NL filter extraction.
            - Enables NL filter extraction.
          enum:
            - CONDITION_UNSPECIFIED
            - DISABLED
            - ENABLED
        geoSearchQueryDetectionFieldNames:
          description: >-
            Field names used for location-based filtering, where geolocation
            filters are detected in natural language search queries. Only valid
            when the FilterExtractionCondition is set to `ENABLED`. If this
            field is set, it overrides the field names set in
            ServingConfig.geo_search_query_detection_field_names.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec
      description: Specification for search as you type in search requests.
      type: object
      properties:
        condition:
          description: >-
            The condition under which search as you type should occur. Default
            to Condition.DISABLED.
          type: string
          enumDescriptions:
            - Server behavior defaults to Condition.DISABLED.
            - Disables Search As You Type.
            - Enables Search As You Type.
          enum:
            - CONDITION_UNSPECIFIED
            - DISABLED
            - ENABLED
    GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec:
      id: GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec
      description: Defines custom fine tuning spec.
      type: object
      properties:
        enableSearchAdaptor:
          description: >-
            Whether or not to enable and include custom fine tuned search
            adaptor model.
          type: boolean
    GoogleCloudDiscoveryengineV1alphaSearchRequestSessionSpec:
      id: GoogleCloudDiscoveryengineV1alphaSearchRequestSessionSpec
      description: >-
        Session specification. Multi-turn Search feature is currently at private
        GA stage. Please use v1alpha or v1beta version instead before we launch
        this feature to public GA. Or ask for allowlisting through Google
        Support team.
      type: object
      properties:
        queryId:
          description: >-
            If set, the search result gets stored to the "turn" specified by
            this query ID. Example: Let's say the session looks like this:
            session { name: ".../sessions/xxx" turns { query { text: "What is
            foo?" query_id: ".../questions/yyy" } answer: "Foo is ..." } turns {
            query { text: "How about bar then?" query_id: ".../questions/zzz" }
            } } The user can call /search API with a request like this: session:
            ".../sessions/xxx" session_spec { query_id: ".../questions/zzz" }
            Then, the API stores the search result, associated with the last
            turn. The stored search result can be used by a subsequent /answer
            API call (with the session ID and the query ID specified). Also, it
            is possible to call /search and /answer in parallel with the same
            session ID & query ID.
          type: string
        searchResultPersistenceCount:
          description: >-
            The number of top search results to persist. The persisted search
            results can be used for the subsequent /answer api call. This field
            is simliar to the `summary_result_count` field in
            SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count. At
            most 10 results for documents mode, or 50 for chunks mode.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpecQuerySetSpec:
      id: GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpecQuerySetSpec
      description: Describes the specification of the query set.
      type: object
      properties:
        sampleQuerySet:
          description: >-
            Required. The full resource name of the SampleQuerySet used for the
            evaluation, in the format of
            `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`.
          type: string
    GoogleCloudDiscoveryengineV1alphaQualityMetrics:
      id: GoogleCloudDiscoveryengineV1alphaQualityMetrics
      description: Describes the metrics produced by the evaluation.
      type: object
      properties:
        docRecall:
          description: >-
            Recall per document, at various top-k cutoff levels. Recall is the
            fraction of relevant documents retrieved out of all relevant
            documents. Example (top-5): * For a single SampleQuery, If 3 out of
            5 relevant documents are retrieved in the top-5, recall@5 = 3/5 =
            0.6
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics
        docPrecision:
          description: >-
            Precision per document, at various top-k cutoff levels. Precision is
            the fraction of retrieved documents that are relevant. Example
            (top-5): * For a single SampleQuery, If 4 out of 5 retrieved
            documents in the top-5 are relevant, precision@5 = 4/5 = 0.8
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics
        docNdcg:
          description: >-
            Normalized discounted cumulative gain (NDCG) per document, at
            various top-k cutoff levels. NDCG measures the ranking quality,
            giving higher relevance to top results. Example (top-3): Suppose
            SampleQuery with three retrieved documents (D1, D2, D3) and binary
            relevance judgements (1 for relevant, 0 for not relevant):
            Retrieved: [D3 (0), D1 (1), D2 (1)] Ideal: [D1 (1), D2 (1), D3 (0)]
            Calculate NDCG@3 for each SampleQuery: * DCG@3: 0/log2(1+1) +
            1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) +
            1/log2(2+1) + 0/log2(3+1) = 1.63 * NDCG@3: 1.13/1.63 = 0.693
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics
        pageRecall:
          description: >-
            Recall per page, at various top-k cutoff levels. Recall is the
            fraction of relevant pages retrieved out of all relevant pages.
            Example (top-5): * For a single SampleQuery, if 3 out of 5 relevant
            pages are retrieved in the top-5, recall@5 = 3/5 = 0.6
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics
        pageNdcg:
          description: >-
            Normalized discounted cumulative gain (NDCG) per page, at various
            top-k cutoff levels. NDCG measures the ranking quality, giving
            higher relevance to top results. Example (top-3): Suppose
            SampleQuery with three retrieved pages (P1, P2, P3) and binary
            relevance judgements (1 for relevant, 0 for not relevant):
            Retrieved: [P3 (0), P1 (1), P2 (1)] Ideal: [P1 (1), P2 (1), P3 (0)]
            Calculate NDCG@3 for SampleQuery: * DCG@3: 0/log2(1+1) + 1/log2(2+1)
            + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) + 1/log2(2+1) +
            0/log2(3+1) = 1.63 * NDCG@3: 1.13/1.63 = 0.693
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics
    GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics:
      id: GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics
      description: Stores the metric values at specific top-k levels.
      type: object
      properties:
        top1:
          description: The top-1 value.
          type: number
          format: double
        top3:
          description: The top-3 value.
          type: number
          format: double
        top5:
          description: The top-5 value.
          type: number
          format: double
        top10:
          description: The top-10 value.
          type: number
          format: double
    GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse:
      id: GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse
      description: >-
        Response message for SiteSearchEngineService.GetUriPatternDocumentData
        method.
      type: object
      properties:
        documentDataMap:
          description: >-
            Document data keyed by URI pattern. For example: document_data_map =
            { "www.url1.com/*": { "Categories": ["category1", "category2"] },
            "www.url2.com/*": { "Categories": ["category3"] } }
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object.
    GoogleCloudDiscoveryengineV1alphaImportCompletionSuggestionsMetadata:
      id: GoogleCloudDiscoveryengineV1alphaImportCompletionSuggestionsMetadata
      description: >-
        Metadata related to the progress of the ImportCompletionSuggestions
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of CompletionSuggestions successfully imported.
          type: string
          format: int64
        failureCount:
          description: Count of CompletionSuggestions that failed to be imported.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaImportCompletionSuggestionsResponse:
      id: GoogleCloudDiscoveryengineV1alphaImportCompletionSuggestionsResponse
      description: >-
        Response of the CompletionService.ImportCompletionSuggestions method. If
        the long running operation is done, this message is returned by the
        google.longrunning.Operations.response field if the operation is
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: The desired location of errors incurred during the Import.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaImportErrorConfig
    GoogleCloudDiscoveryengineV1alphaImportErrorConfig:
      id: GoogleCloudDiscoveryengineV1alphaImportErrorConfig
      description: Configuration of destination for Import related errors.
      type: object
      properties:
        gcsPrefix:
          description: >-
            Cloud Storage prefix for import errors. This must be an empty,
            existing Cloud Storage directory. Import errors are written to
            sharded files in this directory, one per line, as a JSON-encoded
            `google.rpc.Status` message.
          type: string
    GoogleCloudDiscoveryengineV1alphaImportDocumentsMetadata:
      id: GoogleCloudDiscoveryengineV1alphaImportDocumentsMetadata
      description: >-
        Metadata related to the progress of the ImportDocuments operation. This
        is returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were processed successfully.
          type: string
          format: int64
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
        totalCount:
          description: Total count of entries that were processed.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaImportDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1alphaImportDocumentsResponse
      description: >-
        Response of the ImportDocumentsRequest. If the long running operation is
        done, then this message is returned by the
        google.longrunning.Operations.response field if the operation was
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: >-
            Echoes the destination for the complete errors in the request if
            set.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaImportErrorConfig
    GoogleCloudDiscoveryengineV1alphaImportSampleQueriesMetadata:
      id: GoogleCloudDiscoveryengineV1alphaImportSampleQueriesMetadata
      description: >-
        Metadata related to the progress of the ImportSampleQueries operation.
        This will be returned by the google.longrunning.Operation.metadata
        field.
      type: object
      properties:
        createTime:
          description: ImportSampleQueries operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            ImportSampleQueries operation last update time. If the operation is
            done, this is also the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of SampleQuerys successfully imported.
          type: string
          format: int64
        failureCount:
          description: Count of SampleQuerys that failed to be imported.
          type: string
          format: int64
        totalCount:
          description: Total count of SampleQuerys that were processed.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaImportSampleQueriesResponse:
      id: GoogleCloudDiscoveryengineV1alphaImportSampleQueriesResponse
      description: >-
        Response of the SampleQueryService.ImportSampleQueries method. If the
        long running operation is done, this message is returned by the
        google.longrunning.Operations.response field if the operation is
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: The desired location of errors incurred during the Import.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaImportErrorConfig
    GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesMetadata:
      id: GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesMetadata
      description: >-
        Metadata related to the progress of the ImportSuggestionDenyListEntries
        operation. This is returned by the google.longrunning.Operation.metadata
        field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse:
      id: GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse
      description: >-
        Response message for CompletionService.ImportSuggestionDenyListEntries
        method.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        importedEntriesCount:
          description: Count of deny list entries successfully imported.
          type: string
          format: int64
        failedEntriesCount:
          description: Count of deny list entries that failed to be imported.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaImportUserEventsMetadata:
      id: GoogleCloudDiscoveryengineV1alphaImportUserEventsMetadata
      description: >-
        Metadata related to the progress of the Import operation. This is
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were processed successfully.
          type: string
          format: int64
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse:
      id: GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse
      description: >-
        Response of the ImportUserEventsRequest. If the long running operation
        was successful, then this message is returned by the
        google.longrunning.Operations.response field if the operation was
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: >-
            Echoes the destination for the complete errors if this field was set
            in the request.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaImportErrorConfig
        joinedEventsCount:
          description: Count of user events imported with complete existing Documents.
          type: string
          format: int64
        unjoinedEventsCount:
          description: >-
            Count of user events imported, but with Document information not
            found in the existing Branch.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaListCustomModelsResponse:
      id: GoogleCloudDiscoveryengineV1alphaListCustomModelsResponse
      description: Response message for SearchTuningService.ListCustomModels method.
      type: object
      properties:
        models:
          description: List of custom tuning models.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaCustomTuningModel
    GoogleCloudDiscoveryengineV1alphaCustomTuningModel:
      id: GoogleCloudDiscoveryengineV1alphaCustomTuningModel
      description: Metadata that describes a custom tuned model.
      type: object
      properties:
        name:
          description: >-
            Required. The fully qualified resource name of the model. Format:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/customTuningModels/{custom_tuning_model}`.
            Model must be an alpha-numerical string with limit of 40 characters.
          type: string
        displayName:
          description: The display name of the model.
          type: string
        modelVersion:
          description: The version of the model.
          type: string
          format: int64
        modelState:
          description: >-
            The state that the model is in (e.g.`TRAINING` or
            `TRAINING_FAILED`).
          type: string
          enumDescriptions:
            - Default value.
            - The model is in a paused training state.
            - The model is currently training.
            - The model has successfully completed training.
            - The model is ready for serving.
            - The model training failed.
            - >-
              The model training finished successfully but metrics did not
              improve.
            - Input data validation failed. Model training didn't start.
          enum:
            - MODEL_STATE_UNSPECIFIED
            - TRAINING_PAUSED
            - TRAINING
            - TRAINING_COMPLETE
            - READY_FOR_SERVING
            - TRAINING_FAILED
            - NO_IMPROVEMENT
            - INPUT_VALIDATION_FAILED
        createTime:
          description: Timestamp the Model was created at.
          deprecated: true
          type: string
          format: google-datetime
        trainingStartTime:
          description: Timestamp the model training was initiated.
          type: string
          format: google-datetime
        metrics:
          description: The metrics of the trained model.
          type: object
          additionalProperties:
            type: number
            format: double
    GoogleCloudDiscoveryengineV1alphaProject:
      id: GoogleCloudDiscoveryengineV1alphaProject
      description: Metadata and configurations for a Google Cloud project in the service.
      type: object
      properties:
        name:
          description: >-
            Output only. Full resource name of the project, for example
            `projects/{project}`. Note that when making requests, project number
            and project id are both acceptable, but the server will always
            respond in project number.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when this project is created.
          readOnly: true
          type: string
          format: google-datetime
        provisionCompletionTime:
          description: >-
            Output only. The timestamp when this project is successfully
            provisioned. Empty value means this project is still provisioning
            and is not ready for use.
          readOnly: true
          type: string
          format: google-datetime
        serviceTermsMap:
          description: >-
            Output only. A map of terms of services. The key is the `id` of
            ServiceTerms.
          readOnly: true
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaProjectServiceTerms
    GoogleCloudDiscoveryengineV1alphaProjectServiceTerms:
      id: GoogleCloudDiscoveryengineV1alphaProjectServiceTerms
      description: Metadata about the terms of service.
      type: object
      properties:
        id:
          description: >-
            The unique identifier of this terms of service. Available terms: *
            `GA_DATA_USE_TERMS`: [Terms for data
            use](https://cloud.google.com/retail/data-use-terms). When using
            this as `id`, the acceptable version to provide is `2022-11-23`.
          type: string
        version:
          description: >-
            The version string of the terms of service. For acceptable values,
            see the comments for id above.
          type: string
        state:
          description: >-
            Whether the project has accepted/rejected the service terms or it is
            still pending.
          type: string
          enumDescriptions:
            - The default value of the enum. This value is not actually used.
            - The project has given consent to the terms of service.
            - The project is pending to review and accept the terms of service.
            - >-
              The project has declined or revoked the agreement to terms of
              service.
          enum:
            - STATE_UNSPECIFIED
            - TERMS_ACCEPTED
            - TERMS_PENDING
            - TERMS_DECLINED
        acceptTime:
          description: The last time when the project agreed to the terms of service.
          type: string
          format: google-datetime
        declineTime:
          description: >-
            The last time when the project declined or revoked the agreement to
            terms of service.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaProvisionProjectMetadata:
      id: GoogleCloudDiscoveryengineV1alphaProvisionProjectMetadata
      description: Metadata associated with a project provision operation.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1alphaPurgeCompletionSuggestionsMetadata:
      id: GoogleCloudDiscoveryengineV1alphaPurgeCompletionSuggestionsMetadata
      description: >-
        Metadata related to the progress of the PurgeCompletionSuggestions
        operation. This is returned by the google.longrunning.Operation.metadata
        field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaPurgeCompletionSuggestionsResponse:
      id: GoogleCloudDiscoveryengineV1alphaPurgeCompletionSuggestionsResponse
      description: >-
        Response message for CompletionService.PurgeCompletionSuggestions
        method.
      type: object
      properties:
        purgeSucceeded:
          description: Whether the completion suggestions were successfully purged.
          type: boolean
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDiscoveryengineV1alphaPurgeDocumentsMetadata:
      id: GoogleCloudDiscoveryengineV1alphaPurgeDocumentsMetadata
      description: >-
        Metadata related to the progress of the PurgeDocuments operation. This
        will be returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were deleted successfully.
          type: string
          format: int64
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
        ignoredCount:
          description: Count of entries that were ignored as entries were not found.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaPurgeDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1alphaPurgeDocumentsResponse
      description: >-
        Response message for DocumentService.PurgeDocuments method. If the long
        running operation is successfully done, then this message is returned by
        the google.longrunning.Operations.response field.
      type: object
      properties:
        purgeCount:
          description: The total count of documents purged as a result of the operation.
          type: string
          format: int64
        purgeSample:
          description: >-
            A sample of document names that will be deleted. Only populated if
            `force` is set to false. A max of 100 names will be returned and the
            names are chosen at random.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesMetadata:
      id: GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesMetadata
      description: >-
        Metadata related to the progress of the PurgeSuggestionDenyListEntries
        operation. This is returned by the google.longrunning.Operation.metadata
        field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesResponse:
      id: GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesResponse
      description: >-
        Response message for CompletionService.PurgeSuggestionDenyListEntries
        method.
      type: object
      properties:
        purgeCount:
          description: Number of suggestion deny list entries purged.
          type: string
          format: int64
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDiscoveryengineV1alphaPurgeUserEventsMetadata:
      id: GoogleCloudDiscoveryengineV1alphaPurgeUserEventsMetadata
      description: >-
        Metadata related to the progress of the PurgeUserEvents operation. This
        will be returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were deleted successfully.
          type: string
          format: int64
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse:
      id: GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse
      description: >-
        Response of the PurgeUserEventsRequest. If the long running operation is
        successfully done, then this message is returned by the
        google.longrunning.Operations.response field.
      type: object
      properties:
        purgeCount:
          description: The total count of events purged as a result of the operation.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata:
      id: GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.RecrawlUris operation. This will be returned by
        the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        invalidUris:
          description: >-
            Unique URIs in the request that don't match any TargetSite in the
            DataStore, only match TargetSites that haven't been fully indexed,
            or match a TargetSite with type EXCLUDE.
          type: array
          items:
            type: string
        validUrisCount:
          description: >-
            Total number of unique URIs in the request that are not in
            invalid_uris.
          type: integer
          format: int32
        successCount:
          description: Total number of URIs that have been crawled so far.
          type: integer
          format: int32
        pendingCount:
          description: Total number of URIs that have yet to be crawled.
          type: integer
          format: int32
        quotaExceededCount:
          description: >-
            Total number of URIs that were rejected due to insufficient indexing
            resources.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponse:
      id: GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponse
      description: Response message for SiteSearchEngineService.RecrawlUris method.
      type: object
      properties:
        failureSamples:
          description: Details for a sample of up to 10 `failed_uris`.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo
        failedUris:
          description: URIs that were not crawled before the LRO terminated.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo:
      id: GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo
      description: >-
        Details about why a particular URI failed to be crawled. Each
        FailureInfo contains one FailureReason per CorpusType.
      type: object
      properties:
        uri:
          description: URI that failed to be crawled.
          type: string
        failureReasons:
          description: List of failure reasons by corpus type (e.g. desktop, mobile).
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason
    GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason:
      id: >-
        GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason
      description: >-
        Details about why crawling failed for a particular CorpusType, e.g.,
        DESKTOP and MOBILE crawling may fail for different reasons.
      type: object
      properties:
        corpusType:
          description: DESKTOP, MOBILE, or CORPUS_TYPE_UNSPECIFIED.
          type: string
          enumDescriptions:
            - Default value.
            - Denotes a crawling attempt for the desktop version of a page.
            - Denotes a crawling attempt for the mobile version of a page.
          enum:
            - CORPUS_TYPE_UNSPECIFIED
            - DESKTOP
            - MOBILE
        errorMessage:
          description: Reason why the URI was not crawled.
          type: string
    GoogleCloudDiscoveryengineV1alphaSession:
      id: GoogleCloudDiscoveryengineV1alphaSession
      description: External session proto definition.
      type: object
      properties:
        name:
          description: >-
            Immutable. Fully qualified name
            `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*`
          type: string
        state:
          description: The state of the session.
          type: string
          enumDescriptions:
            - State is unspecified.
            - The session is currently open.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
        userPseudoId:
          description: A unique identifier for tracking users.
          type: string
        turns:
          description: Turns.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaSessionTurn'
        startTime:
          description: Output only. The time the session started.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the session finished.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaSessionTurn:
      id: GoogleCloudDiscoveryengineV1alphaSessionTurn
      description: >-
        Represents a turn, including a query from the user and a answer from
        service.
      type: object
      properties:
        query:
          description: The user query.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaQuery'
        answer:
          description: >-
            The resource name of the answer to the user query. Only set if the
            answer generation (/answer API call) happened in this turn.
          type: string
    GoogleCloudDiscoveryengineV1alphaQuery:
      id: GoogleCloudDiscoveryengineV1alphaQuery
      description: Defines a user inputed query.
      type: object
      properties:
        text:
          description: Plain text.
          type: string
        queryId:
          description: Unique Id for the query.
          type: string
    GoogleCloudDiscoveryengineV1alphaSetUriPatternDocumentDataMetadata:
      id: GoogleCloudDiscoveryengineV1alphaSetUriPatternDocumentDataMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.SetUriPatternDocumentData operation. This will
        be returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaSetUriPatternDocumentDataResponse:
      id: GoogleCloudDiscoveryengineV1alphaSetUriPatternDocumentDataResponse
      description: >-
        Response message for SiteSearchEngineService.SetUriPatternDocumentData
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1alphaTrainCustomModelMetadata:
      id: GoogleCloudDiscoveryengineV1alphaTrainCustomModelMetadata
      description: >-
        Metadata related to the progress of the TrainCustomModel operation. This
        is returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaTrainCustomModelResponse:
      id: GoogleCloudDiscoveryengineV1alphaTrainCustomModelResponse
      description: >-
        Response of the TrainCustomModelRequest. This message is returned by the
        google.longrunning.Operations.response field.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the data.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: >-
            Echoes the destination for the complete errors in the request if
            set.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1alphaImportErrorConfig
        modelStatus:
          description: >-
            The trained model status. Possible values are: * **bad-data**: The
            training data quality is bad. * **no-improvement**: Tuning didn't
            improve performance. Won't deploy. * **in-progress**: Model training
            job creation is in progress. * **training**: Model is actively
            training. * **evaluating**: The model is evaluating trained metrics.
            * **indexing**: The model trained metrics are indexing. * **ready**:
            The model is ready for serving.
          type: string
        metrics:
          description: The metrics of the trained model.
          type: object
          additionalProperties:
            type: number
            format: double
        modelName:
          description: Fully qualified name of the CustomTuningModel.
          type: string
    GoogleCloudDiscoveryengineV1alphaTuneEngineMetadata:
      id: GoogleCloudDiscoveryengineV1alphaTuneEngineMetadata
      description: Metadata associated with a tune operation.
      type: object
      properties:
        engine:
          description: >-
            Required. The resource name of the engine that this tune applies to.
            Format:
            `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
          type: string
    GoogleCloudDiscoveryengineV1alphaTuneEngineResponse:
      id: GoogleCloudDiscoveryengineV1alphaTuneEngineResponse
      description: Response associated with a tune operation.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1alphaUpdateSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1alphaUpdateSchemaMetadata
      description: Metadata for UpdateSchema LRO.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1alphaUpdateTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1alphaUpdateTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.UpdateTargetSite operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaBatchCreateTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1betaBatchCreateTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.BatchCreateTargetSites operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesResponse:
      id: GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesResponse
      description: >-
        Response message for SiteSearchEngineService.BatchCreateTargetSites
        method.
      type: object
      properties:
        targetSites:
          description: TargetSites created.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSite'
    GoogleCloudDiscoveryengineV1betaTargetSite:
      id: GoogleCloudDiscoveryengineV1betaTargetSite
      description: A target site for the SiteSearchEngine.
      type: object
      properties:
        name:
          description: >-
            Output only. The fully qualified resource name of the target site.
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
            The `target_site_id` is system-generated.
          readOnly: true
          type: string
        providedUriPattern:
          description: >-
            Required. Input only. The user provided URI pattern from which the
            `generated_uri_pattern` is generated.
          type: string
        type:
          description: >-
            The type of the target site, e.g., whether the site is to be
            included or excluded.
          type: string
          enumDescriptions:
            - >-
              This value is unused. In this case, server behavior defaults to
              Type.INCLUDE.
            - Include the target site.
            - Exclude the target site.
          enum:
            - TYPE_UNSPECIFIED
            - INCLUDE
            - EXCLUDE
        exactMatch:
          description: >-
            Input only. If set to false, a uri_pattern is generated to include
            all pages whose address contains the provided_uri_pattern. If set to
            true, an uri_pattern is generated to try to be an exact match of the
            provided_uri_pattern or just the specific page if the
            provided_uri_pattern is a specific one. provided_uri_pattern is
            always normalized to generate the URI pattern to be used by the
            search engine.
          type: boolean
        generatedUriPattern:
          description: >-
            Output only. This is system-generated based on the
            provided_uri_pattern.
          readOnly: true
          type: string
        rootDomainUri:
          description: Output only. Root domain of the provided_uri_pattern.
          readOnly: true
          type: string
        siteVerificationInfo:
          description: Output only. Site ownership and validity verification status.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSiteVerificationInfo
        indexingStatus:
          description: Output only. Indexing status.
          readOnly: true
          type: string
          enumDescriptions:
            - Defaults to SUCCEEDED.
            - >-
              The target site is in the update queue and will be picked up by
              indexing pipeline.
            - The target site fails to be indexed.
            - The target site has been indexed.
            - >-
              The previously indexed target site has been marked to be deleted.
              This is a transitioning state which will resulted in either: 1.
              target site deleted if unindexing is successful; 2. state reverts
              to SUCCEEDED if the unindexing fails.
          enum:
            - INDEXING_STATUS_UNSPECIFIED
            - PENDING
            - FAILED
            - SUCCEEDED
            - DELETING
        updateTime:
          description: Output only. The target site's last updated time.
          readOnly: true
          type: string
          format: google-datetime
        failureReason:
          description: Output only. Failure reason.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason
    GoogleCloudDiscoveryengineV1betaSiteVerificationInfo:
      id: GoogleCloudDiscoveryengineV1betaSiteVerificationInfo
      description: Verification information for target sites in advanced site search.
      type: object
      properties:
        siteVerificationState:
          description: Site verification state indicating the ownership and validity.
          type: string
          enumDescriptions:
            - Defaults to VERIFIED.
            - Site ownership verified.
            - Site ownership pending verification or verification failed.
            - >-
              Site exempt from verification, e.g., a public website that opens
              to all.
          enum:
            - SITE_VERIFICATION_STATE_UNSPECIFIED
            - VERIFIED
            - UNVERIFIED
            - EXEMPTED
        verifyTime:
          description: Latest site verification time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason:
      id: GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason
      description: Site search indexing failure reasons.
      type: object
      properties:
        quotaFailure:
          description: Failed due to insufficient quota.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure
    GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure:
      id: GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure
      description: Failed due to insufficient quota.
      type: object
      properties:
        totalRequiredQuota:
          description: >-
            This number is an estimation on how much total quota this project
            needs to successfully complete indexing.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1betaControl:
      id: GoogleCloudDiscoveryengineV1betaControl
      description: >-
        Defines a conditioned behavior to employ during serving. Must be
        attached to a ServingConfig to be considered at serving time. Permitted
        actions dependent on `SolutionType`.
      type: object
      properties:
        boostAction:
          description: Defines a boost-type control
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaControlBoostAction
        filterAction:
          description: >-
            Defines a filter-type control Currently not supported by
            Recommendation
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaControlFilterAction
        redirectAction:
          description: Defines a redirect-type control.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaControlRedirectAction
        synonymsAction:
          description: Treats a group of terms as synonyms of one another.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaControlSynonymsAction
        name:
          description: >-
            Immutable. Fully qualified name
            `projects/*/locations/global/dataStore/*/controls/*`
          type: string
        displayName:
          description: >-
            Required. Human readable name. The identifier used in UI views. Must
            be UTF-8 encoded string. Length limit is 128 characters. Otherwise
            an INVALID ARGUMENT error is thrown.
          type: string
        associatedServingConfigIds:
          description: >-
            Output only. List of all ServingConfig IDs this control is attached
            to. May take up to 10 minutes to update after changes.
          readOnly: true
          type: array
          items:
            type: string
        solutionType:
          description: >-
            Required. Immutable. What solution the control belongs to. Must be
            compatible with vertical of resource. Otherwise an INVALID ARGUMENT
            error is thrown.
          type: string
          enumDescriptions:
            - Default value.
            - Used for Recommendations AI.
            - Used for Discovery Search.
            - Used for use cases related to the Generative AI agent.
            - >-
              Used for use cases related to the Generative Chat agent. It's used
              for Generative chat engine only, the associated data stores must
              enrolled with `SOLUTION_TYPE_CHAT` solution.
          enum:
            - SOLUTION_TYPE_UNSPECIFIED
            - SOLUTION_TYPE_RECOMMENDATION
            - SOLUTION_TYPE_SEARCH
            - SOLUTION_TYPE_CHAT
            - SOLUTION_TYPE_GENERATIVE_CHAT
        useCases:
          description: >-
            Specifies the use case for the control. Affects what condition
            fields can be set. Only applies to SOLUTION_TYPE_SEARCH. Currently
            only allow one use case per control. Must be set when solution_type
            is SolutionType.SOLUTION_TYPE_SEARCH.
          type: array
          items:
            type: string
            enumDescriptions:
              - Value used when unset. Will not occur in CSS.
              - Search use case. Expects the traffic has a non-empty query.
              - Browse use case. Expects the traffic has an empty query.
            enum:
              - SEARCH_USE_CASE_UNSPECIFIED
              - SEARCH_USE_CASE_SEARCH
              - SEARCH_USE_CASE_BROWSE
        conditions:
          description: >-
            Determines when the associated action will trigger. Omit to always
            apply the action. Currently only a single condition may be
            specified. Otherwise an INVALID ARGUMENT error is thrown.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaCondition'
    GoogleCloudDiscoveryengineV1betaControlBoostAction:
      id: GoogleCloudDiscoveryengineV1betaControlBoostAction
      description: Adjusts order of products in returned list.
      type: object
      properties:
        boost:
          description: >-
            Required. Strength of the boost, which should be in [-1, 1].
            Negative boost means demotion. Default is 0.0 (No-op).
          type: number
          format: float
        filter:
          description: >-
            Required. Specifies which products to apply the boost to. If no
            filter is provided all products will be boosted (No-op). Syntax
            documentation: https://cloud.google.com/retail/docs/filter-and-order
            Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT
            error is thrown.
          type: string
        dataStore:
          description: >-
            Required. Specifies which data store's documents can be boosted by
            this control. Full data store name e.g.
            projects/123/locations/global/collections/default_collection/dataStores/default_data_store
          type: string
    GoogleCloudDiscoveryengineV1betaControlFilterAction:
      id: GoogleCloudDiscoveryengineV1betaControlFilterAction
      description: >-
        Specified which products may be included in results. Uses same filter as
        boost.
      type: object
      properties:
        filter:
          description: >-
            Required. A filter to apply on the matching condition results.
            Required Syntax documentation:
            https://cloud.google.com/retail/docs/filter-and-order Maximum length
            is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown.
          type: string
        dataStore:
          description: >-
            Required. Specifies which data store's documents can be filtered by
            this control. Full data store name e.g.
            projects/123/locations/global/collections/default_collection/dataStores/default_data_store
          type: string
    GoogleCloudDiscoveryengineV1betaControlRedirectAction:
      id: GoogleCloudDiscoveryengineV1betaControlRedirectAction
      description: Redirects a shopper to the provided URI.
      type: object
      properties:
        redirectUri:
          description: >-
            Required. The URI to which the shopper will be redirected. Required.
            URI must have length equal or less than 2000 characters. Otherwise
            an INVALID ARGUMENT error is thrown.
          type: string
    GoogleCloudDiscoveryengineV1betaControlSynonymsAction:
      id: GoogleCloudDiscoveryengineV1betaControlSynonymsAction
      description: >-
        Creates a set of terms that will act as synonyms of one another.
        Example: "happy" will also be considered as "glad", "glad" will also be
        considered as "happy".
      type: object
      properties:
        synonyms:
          description: >-
            Defines a set of synonyms. Can specify up to 100 synonyms. Must
            specify at least 2 synonyms. Otherwise an INVALID ARGUMENT error is
            thrown.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1betaCondition:
      id: GoogleCloudDiscoveryengineV1betaCondition
      description: Defines circumstances to be checked before allowing a behavior
      type: object
      properties:
        queryTerms:
          description: >-
            Search only A list of terms to match the query on. Maximum of 10
            query terms.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1betaConditionQueryTerm
        activeTimeRange:
          description: >-
            Range of time(s) specifying when condition is active. Maximum of 10
            time ranges.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1betaConditionTimeRange
    GoogleCloudDiscoveryengineV1betaConditionQueryTerm:
      id: GoogleCloudDiscoveryengineV1betaConditionQueryTerm
      description: Matcher for search request query
      type: object
      properties:
        value:
          description: >-
            The specific query value to match against Must be lowercase, must be
            UTF-8. Can have at most 3 space separated terms if full_match is
            true. Cannot be an empty string. Maximum length of 5000 characters.
          type: string
        fullMatch:
          description: Whether the search query needs to exactly match the query term.
          type: boolean
    GoogleCloudDiscoveryengineV1betaConditionTimeRange:
      id: GoogleCloudDiscoveryengineV1betaConditionTimeRange
      description: Used for time-dependent conditions.
      type: object
      properties:
        startTime:
          description: Start of time range. Range is inclusive.
          type: string
          format: google-datetime
        endTime:
          description: End of time range. Range is inclusive. Must be in the future.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaCreateDataStoreMetadata:
      id: GoogleCloudDiscoveryengineV1betaCreateDataStoreMetadata
      description: >-
        Metadata related to the progress of the DataStoreService.CreateDataStore
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaCreateEngineMetadata:
      id: GoogleCloudDiscoveryengineV1betaCreateEngineMetadata
      description: >-
        Metadata related to the progress of the EngineService.CreateEngine
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaCreateEvaluationMetadata:
      id: GoogleCloudDiscoveryengineV1betaCreateEvaluationMetadata
      description: Metadata for EvaluationService.CreateEvaluation method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1betaCreateSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1betaCreateSchemaMetadata
      description: Metadata for Create Schema LRO.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaCreateTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1betaCreateTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.CreateTargetSite operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaDataStore:
      id: GoogleCloudDiscoveryengineV1betaDataStore
      description: DataStore captures global settings and configs at the DataStore level.
      type: object
      properties:
        name:
          description: >-
            Immutable. The full resource name of the data store. Format:
            `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
            This field must be a UTF-8 encoded string with a length limit of
            1024 characters.
          type: string
        displayName:
          description: >-
            Required. The data store display name. This field must be a UTF-8
            encoded string with a length limit of 128 characters. Otherwise, an
            INVALID_ARGUMENT error is returned.
          type: string
        industryVertical:
          description: Immutable. The industry vertical that the data store registers.
          type: string
          enumDescriptions:
            - Value used when unset.
            - >-
              The generic vertical for documents that are not specific to any
              industry vertical.
            - The media industry vertical.
            - The healthcare FHIR vertical.
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
            - HEALTHCARE_FHIR
        solutionTypes:
          description: >-
            The solutions that the data store enrolls. Available solutions for
            each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION`
            and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH`
            is automatically enrolled. Other solutions cannot be enrolled.
          type: array
          items:
            type: string
            enumDescriptions:
              - Default value.
              - Used for Recommendations AI.
              - Used for Discovery Search.
              - Used for use cases related to the Generative AI agent.
              - >-
                Used for use cases related to the Generative Chat agent. It's
                used for Generative chat engine only, the associated data stores
                must enrolled with `SOLUTION_TYPE_CHAT` solution.
            enum:
              - SOLUTION_TYPE_UNSPECIFIED
              - SOLUTION_TYPE_RECOMMENDATION
              - SOLUTION_TYPE_SEARCH
              - SOLUTION_TYPE_CHAT
              - SOLUTION_TYPE_GENERATIVE_CHAT
        defaultSchemaId:
          description: >-
            Output only. The id of the default Schema asscociated to this data
            store.
          readOnly: true
          type: string
        contentConfig:
          description: >-
            Immutable. The content config of the data store. If this field is
            unset, the server behavior defaults to ContentConfig.NO_CONTENT.
          type: string
          enumDescriptions:
            - Default value.
            - Only contains documents without any Document.content.
            - Only contains documents with Document.content.
            - The data store is used for public website search.
            - >-
              The data store is used for workspace search. Details of workspace
              data store are specified in the WorkspaceConfig.
          enum:
            - CONTENT_CONFIG_UNSPECIFIED
            - NO_CONTENT
            - CONTENT_REQUIRED
            - PUBLIC_WEBSITE
            - GOOGLE_WORKSPACE
        createTime:
          description: Output only. Timestamp the DataStore was created at.
          readOnly: true
          type: string
          format: google-datetime
        languageInfo:
          description: Language info for DataStore.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaLanguageInfo'
        naturalLanguageQueryUnderstandingConfig:
          description: Optional. Configuration for Natural Language Query Understanding.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig
        workspaceConfig:
          description: >-
            Config to store data store type configuration for workspace data.
            This must be set when DataStore.content_config is set as
            DataStore.ContentConfig.GOOGLE_WORKSPACE.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaWorkspaceConfig'
        documentProcessingConfig:
          description: Configuration for Document understanding and enrichment.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig
        startingSchema:
          description: >-
            The start schema to use for this DataStore when provisioning it. If
            unset, a default vertical specialized schema will be used. This
            field is only used by CreateDataStore API, and will be ignored if
            used in other APIs. This field will be omitted from all API
            responses including CreateDataStore API. To retrieve a schema of a
            DataStore, use SchemaService.GetSchema API instead. The provided
            schema will be validated against certain rules on schema. Learn more
            from [this
            doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema'
        servingConfigDataStore:
          description: Optional. Stores serving config at DataStore level.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaServingConfigDataStore
    GoogleCloudDiscoveryengineV1betaLanguageInfo:
      id: GoogleCloudDiscoveryengineV1betaLanguageInfo
      description: Language info for DataStore.
      type: object
      properties:
        languageCode:
          description: The language code for the DataStore.
          type: string
        normalizedLanguageCode:
          description: >-
            Output only. This is the normalized form of language_code. E.g.:
            language_code of `en-GB`, `en_GB`, `en-UK` or `en-gb` will have
            normalized_language_code of `en-GB`.
          readOnly: true
          type: string
        language:
          description: >-
            Output only. Language part of normalized_language_code. E.g.:
            `en-US` -> `en`, `zh-Hans-HK` -> `zh`, `en` -> `en`.
          readOnly: true
          type: string
        region:
          description: >-
            Output only. Region part of normalized_language_code, if present.
            E.g.: `en-US` -> `US`, `zh-Hans-HK` -> `HK`, `en` -> ``.
          readOnly: true
          type: string
    GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig:
      id: GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig
      description: Configuration for Natural Language Query Understanding.
      type: object
      properties:
        mode:
          description: >-
            Mode of Natural Language Query Understanding. If this field is
            unset, the behavior defaults to
            NaturalLanguageQueryUnderstandingConfig.Mode.DISABLED.
          type: string
          enumDescriptions:
            - Default value.
            - Natural Language Query Understanding is disabled.
            - Natural Language Query Understanding is enabled.
          enum:
            - MODE_UNSPECIFIED
            - DISABLED
            - ENABLED
    GoogleCloudDiscoveryengineV1betaWorkspaceConfig:
      id: GoogleCloudDiscoveryengineV1betaWorkspaceConfig
      description: Config to store data store type configuration for workspace data
      type: object
      properties:
        type:
          description: The Google Workspace data source.
          type: string
          enumDescriptions:
            - Defaults to an unspecified Workspace type.
            - Workspace Data Store contains Drive data
            - Workspace Data Store contains Mail data
            - Workspace Data Store contains Sites data
            - Workspace Data Store contains Calendar data
            - Workspace Data Store contains Chat data
            - Workspace Data Store contains Groups data
            - Workspace Data Store contains Keep data
          enum:
            - TYPE_UNSPECIFIED
            - GOOGLE_DRIVE
            - GOOGLE_MAIL
            - GOOGLE_SITES
            - GOOGLE_CALENDAR
            - GOOGLE_CHAT
            - GOOGLE_GROUPS
            - GOOGLE_KEEP
        dasherCustomerId:
          description: Obfuscated Dasher customer ID.
          type: string
    GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig:
      id: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig
      description: >-
        A singleton resource of DataStore. It's empty when DataStore is created,
        which defaults to digital parser. The first call to
        DataStoreService.UpdateDocumentProcessingConfig method will initialize
        the config.
      type: object
      properties:
        name:
          description: >-
            The full resource name of the Document Processing Config. Format:
            `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`.
          type: string
        chunkingConfig:
          description: Whether chunking mode is enabled.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfig
        defaultParsingConfig:
          description: >-
            Configurations for default Document parser. If not specified, we
            will configure it as default DigitalParsingConfig, and the default
            parsing config will be applied to all file types for Document
            parsing.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig
        parsingConfigOverrides:
          description: >-
            Map from file type to override the default parsing configuration
            based on the file type. Supported keys: * `pdf`: Override parsing
            config for PDF files, either digital parsing, ocr parsing or layout
            parsing is supported. * `html`: Override parsing config for HTML
            files, only digital parsing and layout parsing are supported. *
            `docx`: Override parsing config for DOCX files, only digital parsing
            and layout parsing are supported. * `pptx`: Override parsing config
            for PPTX files, only digital parsing and layout parsing are
            supported. * `xlsm`: Override parsing config for XLSM files, only
            digital parsing and layout parsing are supported. * `xlsx`: Override
            parsing config for XLSX files, only digital parsing and layout
            parsing are supported.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig
    GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfig:
      id: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfig
      description: Configuration for chunking config.
      type: object
      properties:
        layoutBasedChunkingConfig:
          description: Configuration for the layout based chunking.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig
    GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig
      description: Configuration for the layout based chunking.
      type: object
      properties:
        chunkSize:
          description: >-
            The token size limit for each chunk. Supported values: 100-500
            (inclusive). Default value: 500.
          type: integer
          format: int32
        includeAncestorHeadings:
          description: >-
            Whether to include appending different levels of headings to chunks
            from the middle of the document to prevent context loss. Default
            value: False.
          type: boolean
    GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig:
      id: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig
      description: Related configurations applied to a specific type of document parser.
      type: object
      properties:
        digitalParsingConfig:
          description: Configurations applied to digital parser.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigDigitalParsingConfig
        ocrParsingConfig:
          description: >-
            Configurations applied to OCR parser. Currently it only applies to
            PDFs.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigOcrParsingConfig
        layoutParsingConfig:
          description: Configurations applied to layout parser.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigLayoutParsingConfig
    GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigDigitalParsingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigDigitalParsingConfig
      description: The digital parsing configurations for documents.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigOcrParsingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigOcrParsingConfig
      description: The OCR parsing configurations for documents.
      type: object
      properties:
        enhancedDocumentElements:
          description: >-
            [DEPRECATED] This field is deprecated. To use the additional
            enhanced document elements processing, please switch to
            `layout_parsing_config`.
          deprecated: true
          type: array
          items:
            type: string
        useNativeText:
          description: >-
            If true, will use native text instead of OCR text on pages
            containing native text.
          type: boolean
    GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigLayoutParsingConfig:
      id: >-
        GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigLayoutParsingConfig
      description: The layout parsing configurations for documents.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1betaSchema:
      id: GoogleCloudDiscoveryengineV1betaSchema
      description: Defines the structure and layout of a type of document data.
      type: object
      properties:
        structSchema:
          description: The structured representation of the schema.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        jsonSchema:
          description: The JSON representation of the schema.
          type: string
        name:
          description: >-
            Immutable. The full resource name of the schema, in the format of
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
            This field must be a UTF-8 encoded string with a length limit of
            1024 characters.
          type: string
    GoogleCloudDiscoveryengineV1betaServingConfigDataStore:
      id: GoogleCloudDiscoveryengineV1betaServingConfigDataStore
      description: >-
        Stores information regarding the serving configurations at DataStore
        level.
      type: object
      properties:
        disabledForServing:
          description: >-
            If set true, the DataStore will not be available for serving search
            requests.
          type: boolean
    GoogleCloudDiscoveryengineV1betaDeleteDataStoreMetadata:
      id: GoogleCloudDiscoveryengineV1betaDeleteDataStoreMetadata
      description: >-
        Metadata related to the progress of the DataStoreService.DeleteDataStore
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaDeleteEngineMetadata:
      id: GoogleCloudDiscoveryengineV1betaDeleteEngineMetadata
      description: >-
        Metadata related to the progress of the EngineService.DeleteEngine
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaDeleteSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1betaDeleteSchemaMetadata
      description: Metadata for DeleteSchema LRO.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaDeleteTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1betaDeleteTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.DeleteTargetSite operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchMetadata:
      id: GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will
        be returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchResponse:
      id: GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchResponse
      description: >-
        Response message for SiteSearchEngineService.DisableAdvancedSiteSearch
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchMetadata:
      id: GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchResponse:
      id: GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchResponse
      description: >-
        Response message for SiteSearchEngineService.EnableAdvancedSiteSearch
        method.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1betaEngine:
      id: GoogleCloudDiscoveryengineV1betaEngine
      description: >-
        Metadata that describes the training and serving parameters of an
        Engine.
      type: object
      properties:
        chatEngineConfig:
          description: >-
            Configurations for the Chat Engine. Only applicable if solution_type
            is SOLUTION_TYPE_CHAT.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig
        searchEngineConfig:
          description: >-
            Configurations for the Search Engine. Only applicable if
            solution_type is SOLUTION_TYPE_SEARCH.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig
        chatEngineMetadata:
          description: >-
            Output only. Additional information of the Chat Engine. Only
            applicable if solution_type is SOLUTION_TYPE_CHAT.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata
        name:
          description: >-
            Immutable. The fully qualified resource name of the engine. This
            field must be a UTF-8 encoded string with a length limit of 1024
            characters. Format:
            `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
            engine should be 1-63 characters, and valid characters are
            /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned.
          type: string
        displayName:
          description: >-
            Required. The display name of the engine. Should be human readable.
            UTF-8 encoded string with limit of 1024 characters.
          type: string
        createTime:
          description: Output only. Timestamp the Recommendation Engine was created at.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Timestamp the Recommendation Engine was last updated.
          readOnly: true
          type: string
          format: google-datetime
        dataStoreIds:
          description: >-
            The data stores associated with this engine. For
            SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of
            engines, they can only associate with at most one data store. If
            solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same
            Collection can be associated here. Note that when used in
            CreateEngineRequest, one DataStore id must be provided as the system
            will use it for necessary initializations.
          type: array
          items:
            type: string
        solutionType:
          description: Required. The solutions of the engine.
          type: string
          enumDescriptions:
            - Default value.
            - Used for Recommendations AI.
            - Used for Discovery Search.
            - Used for use cases related to the Generative AI agent.
            - >-
              Used for use cases related to the Generative Chat agent. It's used
              for Generative chat engine only, the associated data stores must
              enrolled with `SOLUTION_TYPE_CHAT` solution.
          enum:
            - SOLUTION_TYPE_UNSPECIFIED
            - SOLUTION_TYPE_RECOMMENDATION
            - SOLUTION_TYPE_SEARCH
            - SOLUTION_TYPE_CHAT
            - SOLUTION_TYPE_GENERATIVE_CHAT
        industryVertical:
          description: >-
            The industry vertical that the engine registers. The restriction of
            the Engine industry vertical is based on DataStore: If unspecified,
            default to `GENERIC`. Vertical on Engine has to match vertical of
            the DataStore linked to the engine.
          type: string
          enumDescriptions:
            - Value used when unset.
            - >-
              The generic vertical for documents that are not specific to any
              industry vertical.
            - The media industry vertical.
            - The healthcare FHIR vertical.
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
            - HEALTHCARE_FHIR
        commonConfig:
          description: Common config spec that specifies the metadata of the engine.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaEngineCommonConfig
    GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig:
      id: GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig
      description: Configurations for a Chat Engine.
      type: object
      properties:
        agentCreationConfig:
          description: >-
            The configurationt generate the Dialogflow agent that is associated
            to this Engine. Note that these configurations are one-time consumed
            by and passed to Dialogflow service. It means they cannot be
            retrieved using EngineService.GetEngine or EngineService.ListEngines
            API after engine creation.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig
        dialogflowAgentToLink:
          description: >-
            The resource name of an exist Dialogflow agent to link to this Chat
            Engine. Customers can either provide `agent_creation_config` to
            create agent or provide an agent name that links the agent with the
            Chat engine. Format: `projects//locations//agents/`. Note that the
            `dialogflow_agent_to_link` are one-time consumed by and passed to
            Dialogflow service. It means they cannot be retrieved using
            EngineService.GetEngine or EngineService.ListEngines API after
            engine creation. Use ChatEngineMetadata.dialogflow_agent for actual
            agent association after Engine is created.
          type: string
    GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig:
      id: >-
        GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig
      description: >-
        Configurations for generating a Dialogflow agent. Note that these
        configurations are one-time consumed by and passed to Dialogflow
        service. It means they cannot be retrieved using EngineService.GetEngine
        or EngineService.ListEngines API after engine creation.
      type: object
      properties:
        business:
          description: >-
            Name of the company, organization or other entity that the agent
            represents. Used for knowledge connector LLM prompt and for
            knowledge search.
          type: string
        defaultLanguageCode:
          description: >-
            Required. The default language of the agent as a language tag. See
            [Language
            Support](https://cloud.google.com/dialogflow/docs/reference/language)
            for a list of the currently supported language codes.
          type: string
        timeZone:
          description: >-
            Required. The time zone of the agent from the [time zone
            database](https://www.iana.org/time-zones), e.g., America/New_York,
            Europe/Paris.
          type: string
        location:
          description: >-
            Agent location for Agent creation, supported values: global/us/eu.
            If not provided, us Engine will create Agent using us-central-1 by
            default; eu Engine will create Agent using eu-west-1 by default.
          type: string
    GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig:
      id: GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig
      description: Configurations for a Search Engine.
      type: object
      properties:
        searchTier:
          description: >-
            The search feature tier of this engine. Different tiers might have
            different pricing. To learn more, check the pricing documentation.
            Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
          type: string
          enumDescriptions:
            - >-
              Default value when the enum is unspecified. This is invalid to
              use.
            - Standard tier.
            - Enterprise tier.
          enum:
            - SEARCH_TIER_UNSPECIFIED
            - SEARCH_TIER_STANDARD
            - SEARCH_TIER_ENTERPRISE
        searchAddOns:
          description: The add-on that this search engine enables.
          type: array
          items:
            type: string
            enumDescriptions:
              - >-
                Default value when the enum is unspecified. This is invalid to
                use.
              - Large language model add-on.
            enum:
              - SEARCH_ADD_ON_UNSPECIFIED
              - SEARCH_ADD_ON_LLM
    GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata:
      id: GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata
      description: >-
        Additional information of a Chat Engine. Fields in this message are
        output only.
      type: object
      properties:
        dialogflowAgent:
          description: >-
            The resource name of a Dialogflow agent, that this Chat Engine
            refers to. Format: `projects//locations//agents/`.
          type: string
    GoogleCloudDiscoveryengineV1betaEngineCommonConfig:
      id: GoogleCloudDiscoveryengineV1betaEngineCommonConfig
      description: Common configurations for an Engine.
      type: object
      properties:
        companyName:
          description: >-
            The name of the company, business or entity that is associated with
            the engine. Setting this may help improve LLM related features.
          type: string
    GoogleCloudDiscoveryengineV1betaEvaluation:
      id: GoogleCloudDiscoveryengineV1betaEvaluation
      description: >-
        An evaluation is a single execution (or run) of an evaluation process.
        It encapsulates the state of the evaluation and the resulting data.
      type: object
      properties:
        name:
          description: >-
            Identifier. The full resource name of the Evaluation, in the format
            of
            `projects/{project}/locations/{location}/evaluations/{evaluation}`.
            This field must be a UTF-8 encoded string with a length limit of
            1024 characters.
          type: string
        evaluationSpec:
          description: Required. The specification of the evaluation.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpec
        qualityMetrics:
          description: >-
            Output only. The metrics produced by the evaluation, averaged across
            all SampleQuerys in the SampleQuerySet. Only populated when the
            evaluation's state is SUCCEEDED.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaQualityMetrics'
        state:
          description: Output only. The state of the evaluation.
          readOnly: true
          type: string
          enumDescriptions:
            - The evaluation is unspecified.
            - The service is preparing to run the evaluation.
            - The evaluation is in progress.
            - The evaluation completed successfully.
            - The evaluation failed.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
        error:
          description: >-
            Output only. The error that occurred during evaluation. Only
            populated when the evaluation's state is FAILED.
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcStatus'
        createTime:
          description: Output only. Timestamp the Evaluation was created at.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. Timestamp the Evaluation was completed at.
          readOnly: true
          type: string
          format: google-datetime
        errorSamples:
          description: >-
            Output only. A sample of errors encountered while processing the
            request.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpec:
      id: GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpec
      description: Describes the specification of the evaluation.
      type: object
      properties:
        searchRequest:
          description: >-
            Required. The search request that is used to perform the evaluation.
            Only the following fields within SearchRequest are supported; if any
            other fields are provided, an UNSUPPORTED error will be returned: *
            SearchRequest.serving_config * SearchRequest.branch *
            SearchRequest.canonical_filter * SearchRequest.query_expansion_spec
            * SearchRequest.spell_correction_spec *
            SearchRequest.content_search_spec * SearchRequest.user_pseudo_id
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequest'
        querySetSpec:
          description: Required. The specification of the query set.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpecQuerySetSpec
    GoogleCloudDiscoveryengineV1betaSearchRequest:
      id: GoogleCloudDiscoveryengineV1betaSearchRequest
      description: Request message for SearchService.Search method.
      type: object
      properties:
        servingConfig:
          description: >-
            Required. The resource name of the Search serving config, such as
            `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
            or
            `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
            This field is used to identify the serving configuration name, set
            of models used to make the search.
          type: string
        branch:
          description: >-
            The branch resource name, such as
            `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`.
            Use `default_branch` as the branch ID or leave this field empty, to
            search documents under the default branch.
          type: string
        query:
          description: Raw search query.
          type: string
        imageQuery:
          description: Raw image query.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery
        pageSize:
          description: >-
            Maximum number of Documents to return. The maximum allowed value
            depends on the data type. Values above the maximum value are coerced
            to the maximum value. * Websites with basic indexing: Default `10`,
            Maximum `25`. * Websites with advanced indexing: Default `25`,
            Maximum `50`. * Other: Default `50`, Maximum `100`. If this field is
            negative, an `INVALID_ARGUMENT` is returned.
          type: integer
          format: int32
        pageToken:
          description: >-
            A page token received from a previous SearchService.Search call.
            Provide this to retrieve the subsequent page. When paginating, all
            other parameters provided to SearchService.Search must match the
            call that provided the page token. Otherwise, an `INVALID_ARGUMENT`
            error is returned.
          type: string
        offset:
          description: >-
            A 0-indexed integer that specifies the current offset (that is,
            starting result location, amongst the Documents deemed by the API as
            relevant) in search results. This field is only considered if
            page_token is unset. If this field is negative, an
            `INVALID_ARGUMENT` is returned.
          type: integer
          format: int32
        dataStoreSpecs:
          description: >-
            Specs defining dataStores to filter on in a search call and
            configurations for those dataStores. This is only considered for
            engines with multiple dataStores use case. For single dataStore
            within an engine, they should use the specs at the top level.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec
        filter:
          description: >-
            The filter syntax consists of an expression language for
            constructing a predicate from one or more fields of the documents
            being filtered. Filter expression is case-sensitive. If this field
            is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in
            Vertex AI Search is done by mapping the LHS filter key to a key
            property defined in the Vertex AI Search backend -- this mapping is
            defined by the customer in their schema. For example a media
            customer might have a field 'name' in their schema. In this case the
            filter would look like this: filter --> name:'ANY("king kong")' For
            more information about filtering including syntax and filter
            operators, see
            [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
          type: string
        canonicalFilter:
          description: >-
            The default filter that is applied when a user performs a search
            without checking any filters on the search page. The filter applied
            to every search request when quality improvement such as query
            expansion is needed. In the case a query does not have a sufficient
            amount of results this filter will be used to determine whether or
            not to enable the query expansion flow. The original filter will
            still be used for the query expanded search. This field is strongly
            recommended to achieve high search quality. For more information
            about filter syntax, see SearchRequest.filter.
          type: string
        orderBy:
          description: >-
            The order in which documents are returned. Documents can be ordered
            by a field in an Document object. Leave it unset if ordered by
            relevance. `order_by` expression is case-sensitive. For more
            information on ordering the website search results, see [Order web
            search
            results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results).
            For more information on ordering the healthcare search results, see
            [Order healthcare search
            results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results).
            If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
          type: string
        userInfo:
          description: >-
            Information about the end user. Highly recommended for analytics.
            UserInfo.user_agent is used to deduce `device_type` for analytics.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaUserInfo'
        languageCode:
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see [Standard
            fields](https://cloud.google.com/apis/design/standard_fields). This
            field helps to better interpret the query. If a value isn't
            specified, the query language code is automatically detected, which
            may not be accurate.
          type: string
        regionCode:
          description: >-
            The Unicode country/region code (CLDR) of a location, such as "US"
            and "419". For more information, see [Standard
            fields](https://cloud.google.com/apis/design/standard_fields). If
            set, then results will be boosted based on the region_code provided.
          type: string
        facetSpecs:
          description: >-
            Facet specifications for faceted search. If empty, no facets are
            returned. A maximum of 100 values are allowed. Otherwise, an
            `INVALID_ARGUMENT` error is returned.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec
        boostSpec:
          description: >-
            Boost specification to boost certain documents. For more information
            on boosting, see
            [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec
        params:
          description: >-
            Additional search parameters. For public website search only,
            supported values are: * `user_country_code`: string. Default empty.
            If set to non-empty, results are restricted or boosted based on the
            location provided. For example, `user_country_code: "au"` For
            available codes see [Country
            Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes)
            * `search_type`: double. Default empty. Enables non-webpage
            searching depending on the value. The only valid non-default value
            is 1, which enables image searching. For example, `search_type: 1`
          type: object
          additionalProperties:
            type: any
        queryExpansionSpec:
          description: >-
            The query expansion specification that specifies the conditions
            under which query expansion occurs.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec
        spellCorrectionSpec:
          description: >-
            The spell correction specification that specifies the mode under
            which spell correction takes effect.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec
        userPseudoId:
          description: >-
            A unique identifier for tracking visitors. For example, this could
            be implemented with an HTTP cookie, which should be able to uniquely
            identify a visitor on a single device. This unique identifier should
            not change if the visitor logs in or out of the website. This field
            should NOT have a fixed value such as `unknown_visitor`. This should
            be the same identifier as UserEvent.user_pseudo_id and
            CompleteQueryRequest.user_pseudo_id The field must be a UTF-8
            encoded string with a length limit of 128 characters. Otherwise, an
            `INVALID_ARGUMENT` error is returned.
          type: string
        contentSearchSpec:
          description: A specification for configuring the behavior of content search.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec
        embeddingSpec:
          description: >-
            Uses the provided embedding to do additional semantic document
            retrieval. The retrieval is based on the dot product of
            SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document
            embedding that is provided in
            SearchRequest.EmbeddingSpec.EmbeddingVector.field_path. If
            SearchRequest.EmbeddingSpec.EmbeddingVector.field_path is not
            provided, it will use ServingConfig.EmbeddingConfig.field_path.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec
        rankingExpression:
          description: >-
            The ranking expression controls the customized ranking on retrieval
            documents. This overrides ServingConfig.ranking_expression. The
            ranking expression is a single function or multiple functions that
            are joined by "+". * ranking_expression = function, { " + ",
            function }; Supported functions: * double * relevance_score * double
            * dotProduct(embedding_field_path) Function variables: *
            `relevance_score`: pre-defined keywords, used for measure relevance
            between query and document. * `embedding_field_path`: the document
            embedding field used with query embedding vector. * `dotProduct`:
            embedding function between embedding_field_path and query embedding
            vector. Example ranking expression: If document has an embedding
            field doc_embedding, the ranking expression could be `0.5 *
            relevance_score + 0.3 * dotProduct(doc_embedding)`.
          type: string
        safeSearch:
          description: >-
            Whether to turn on safe search. This is only supported for website
            search.
          type: boolean
        userLabels:
          description: >-
            The user labels applied to a resource must meet the following
            requirements: * Each resource can have multiple labels, up to a
            maximum of 64. * Each label must be a key-value pair. * Keys have a
            minimum length of 1 character and a maximum length of 63 characters
            and cannot be empty. Values can be empty and have a maximum length
            of 63 characters. * Keys and values can contain only lowercase
            letters, numeric characters, underscores, and dashes. All characters
            must use UTF-8 encoding, and international characters are allowed. *
            The key portion of a label must be unique. However, you can use the
            same key with multiple resources. * Keys must start with a lowercase
            letter or international character. See [Google Cloud
            Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
            for more details.
          type: object
          additionalProperties:
            type: string
        naturalLanguageQueryUnderstandingSpec:
          description: >-
            If `naturalLanguageQueryUnderstandingSpec` is not specified, no
            additional natural language query understanding will be done.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec
        searchAsYouTypeSpec:
          description: >-
            Search as you type configuration. Only supported for the
            IndustryVertical.MEDIA vertical.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec
        session:
          description: >-
            The session resource name. Optional. Session allows users to do
            multi-turn /search API calls or coordination between /search API
            calls and /answer API calls. Example #1 (multi-turn /search API
            calls): 1. Call /search API with the auto-session mode (see below).
            2. Call /search API with the session ID generated in the first call.
            Here, the previous search query gets considered in query standing.
            I.e., if the first query is "How did Alphabet do in 2022?" and the
            current query is "How about 2023?", the current query will be
            interpreted as "How did Alphabet do in 2023?". Example #2
            (coordination between /search API calls and /answer API calls): 1.
            Call /search API with the auto-session mode (see below). 2. Call
            /answer API with the session ID generated in the first call. Here,
            the answer generation happens in the context of the search results
            from the first search call. Auto-session mode: when
            `projects/.../sessions/-` is used, a new session gets automatically
            created. Otherwise, users can use the create-session API to create a
            session manually. Multi-turn Search feature is currently at private
            GA stage. Please use v1alpha or v1beta version instead before we
            launch this feature to public GA. Or ask for allowlisting through
            Google Support team.
          type: string
        sessionSpec:
          description: Session specification. Can be used only when `session` is set.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestSessionSpec
        relevanceThreshold:
          description: >-
            The relevance threshold of the search results. Default to Google
            defined threshold, leveraging a balance of precision and recall to
            deliver both highly accurate results and comprehensive coverage of
            relevant information.
          type: string
          enumDescriptions:
            - >-
              Default value. In this case, server behavior defaults to Google
              defined threshold.
            - Lowest relevance threshold.
            - Low relevance threshold.
            - Medium relevance threshold.
            - High relevance threshold.
          enum:
            - RELEVANCE_THRESHOLD_UNSPECIFIED
            - LOWEST
            - LOW
            - MEDIUM
            - HIGH
    GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery
      description: Specifies the image query input.
      type: object
      properties:
        imageBytes:
          description: >-
            Base64 encoded image bytes. Supported image formats: JPEG, PNG, and
            BMP.
          type: string
    GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec
      description: >-
        A struct to define data stores to filter on in a search call and
        configurations for those data stores. Otherwise, an `INVALID_ARGUMENT`
        error is returned.
      type: object
      properties:
        dataStore:
          description: >-
            Required. Full resource name of DataStore, such as
            `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
          type: string
    GoogleCloudDiscoveryengineV1betaUserInfo:
      id: GoogleCloudDiscoveryengineV1betaUserInfo
      description: Information of an end user.
      type: object
      properties:
        userId:
          description: >-
            Highly recommended for logged-in users. Unique identifier for
            logged-in user, such as a user name. Don't set for anonymous users.
            Always use a hashed value for this ID. Don't set the field to the
            same fixed ID for different users. This mixes the event history of
            those users together, which results in degraded model quality. The
            field must be a UTF-8 encoded string with a length limit of 128
            characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
        userAgent:
          description: >-
            User agent as included in the HTTP header. The field must be a UTF-8
            encoded string with a length limit of 1,000 characters. Otherwise,
            an `INVALID_ARGUMENT` error is returned. This should not be set when
            using the client side event reporting with GTM or JavaScript tag in
            UserEventService.CollectUserEvent or if
            UserEvent.direct_user_request is set.
          type: string
    GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec
      description: A facet specification to perform faceted search.
      type: object
      properties:
        facetKey:
          description: Required. The facet key specification.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey
        limit:
          description: >-
            Maximum facet values that are returned for this facet. If
            unspecified, defaults to 20. The maximum allowed value is 300.
            Values above 300 are coerced to 300. For aggregation in healthcare
            search, when the [FacetKey.key] is "healthcare_aggregation_key", the
            limit will be overridden to 10,000 internally, regardless of the
            value set here. If this field is negative, an `INVALID_ARGUMENT` is
            returned.
          type: integer
          format: int32
        excludedFilterKeys:
          description: >-
            List of keys to exclude when faceting. By default, FacetKey.key is
            not excluded from the filter unless it is listed in this field.
            Listing a facet key in this field allows its values to appear as
            facet results, even when they are filtered out of search results.
            Using this field does not affect what search results are returned.
            For example, suppose there are 100 documents with the color facet
            "Red" and 200 documents with the color facet "Blue". A query
            containing the filter "color:ANY("Red")" and having "color" as
            FacetKey.key would by default return only "Red" documents in the
            search results, and also return "Red" with count 100 as the only
            color facet. Although there are also blue documents available,
            "Blue" would not be shown as an available facet value. If "color" is
            listed in "excludedFilterKeys", then the query returns the facet
            values "Red" with count 100 and "Blue" with count 200, because the
            "color" key is now excluded from the filter. Because this field
            doesn't affect search results, the search results are still
            correctly filtered to return only "Red" documents. A maximum of 100
            values are allowed. Otherwise, an `INVALID_ARGUMENT` error is
            returned.
          type: array
          items:
            type: string
        enableDynamicPosition:
          description: >-
            Enables dynamic position for this facet. If set to true, the
            position of this facet among all facets in the response is
            determined automatically. If dynamic facets are enabled, it is
            ordered together. If set to false, the position of this facet in the
            response is the same as in the request, and it is ranked before the
            facets with dynamic position enable and all dynamic facets. For
            example, you may always want to have rating facet returned in the
            response, but it's not necessarily to always display the rating
            facet at the top. In that case, you can set enable_dynamic_position
            to true so that the position of rating facet in response is
            determined automatically. Another example, assuming you have the
            following facets in the request: * "rating", enable_dynamic_position
            = true * "price", enable_dynamic_position = false * "brands",
            enable_dynamic_position = false And also you have a dynamic facets
            enabled, which generates a facet `gender`. Then the final order of
            the facets in the response can be ("price", "brands", "rating",
            "gender") or ("price", "brands", "gender", "rating") depends on how
            API orders "gender" and "rating" facets. However, notice that
            "price" and "brands" are always ranked at first and second position
            because their enable_dynamic_position is false.
          type: boolean
    GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey
      description: Specifies how a facet is computed.
      type: object
      properties:
        key:
          description: >-
            Required. Supported textual and numerical facet keys in Document
            object, over which the facet values are computed. Facet key is
            case-sensitive.
          type: string
        intervals:
          description: >-
            Set only if values should be bucketed into intervals. Must be set
            for facets with numerical values. Must not be set for facet with
            text values. Maximum number of intervals is 30.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaInterval'
        restrictedValues:
          description: >-
            Only get facet for the given restricted values. Only supported on
            textual fields. For example, suppose "category" has three values
            "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set
            "restricted_values" to "Action > 2022", the "category" facet only
            contains "Action > 2022". Only supported on textual fields. Maximum
            is 10.
          type: array
          items:
            type: string
        prefixes:
          description: >-
            Only get facet values that start with the given string prefix. For
            example, suppose "category" has three values "Action > 2022",
            "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to "Action",
            the "category" facet only contains "Action > 2022" and "Action >
            2021". Only supported on textual fields. Maximum is 10.
          type: array
          items:
            type: string
        contains:
          description: >-
            Only get facet values that contain the given strings. For example,
            suppose "category" has three values "Action > 2022", "Action > 2021"
            and "Sci-Fi > 2022". If set "contains" to "2022", the "category"
            facet only contains "Action > 2022" and "Sci-Fi > 2022". Only
            supported on textual fields. Maximum is 10.
          type: array
          items:
            type: string
        caseInsensitive:
          description: >-
            True to make facet keys case insensitive when getting faceting
            values with prefixes or contains; false otherwise.
          type: boolean
        orderBy:
          description: >-
            The order in which documents are returned. Allowed values are: *
            "count desc", which means order by SearchResponse.Facet.values.count
            descending. * "value desc", which means order by
            SearchResponse.Facet.values.value descending. Only applies to
            textual facets. If not set, textual values are sorted in [natural
            order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical
            intervals are sorted in the order given by
            FacetSpec.FacetKey.intervals.
          type: string
    GoogleCloudDiscoveryengineV1betaInterval:
      id: GoogleCloudDiscoveryengineV1betaInterval
      description: A floating point interval.
      type: object
      properties:
        minimum:
          description: Inclusive lower bound.
          type: number
          format: double
        exclusiveMinimum:
          description: Exclusive lower bound.
          type: number
          format: double
        maximum:
          description: Inclusive upper bound.
          type: number
          format: double
        exclusiveMaximum:
          description: Exclusive upper bound.
          type: number
          format: double
    GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec
      description: Boost specification to boost certain documents.
      type: object
      properties:
        conditionBoostSpecs:
          description: >-
            Condition boost specifications. If a document matches multiple
            conditions in the specifictions, boost scores from these
            specifications are all applied and combined in a non-linear way.
            Maximum number of specifications is 20.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec
    GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec
      description: Boost applies to documents which match a condition.
      type: object
      properties:
        condition:
          description: >-
            An expression which specifies a boost condition. The syntax and
            supported fields are the same as a filter expression. See
            SearchRequest.filter for detail syntax and limitations. Examples: *
            To boost documents with document ID "doc_1" or "doc_2", and color
            "Red" or "Blue": `(document_id: ANY("doc_1", "doc_2")) AND (color:
            ANY("Red", "Blue"))`
          type: string
        boost:
          description: >-
            Strength of the condition boost, which should be in [-1, 1].
            Negative boost means demotion. Default is 0.0. Setting to 1.0 gives
            the document a big promotion. However, it does not necessarily mean
            that the boosted document will be the top result at all times, nor
            that other documents will be excluded. Results could still be shown
            even when none of them matches the condition. And results that are
            significantly more relevant to the search query can still trump your
            heavily favored but irrelevant documents. Setting to -1.0 gives the
            document a big demotion. However, results that are deeply relevant
            might still be shown. The document will have an upstream battle to
            get a fairly high ranking, but it is not blocked out completely.
            Setting to 0.0 means no boost applied. The boosting condition is
            ignored. Only one of the (condition, boost) combination or the
            boost_control_spec below are set. If both are set then the global
            boost is ignored and the more fine-grained boost_control_spec is
            applied.
          type: number
          format: float
        boostControlSpec:
          description: >-
            Complex specification for custom ranking based on customer defined
            attribute value.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec
    GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec:
      id: >-
        GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec
      description: >-
        Specification for custom ranking based on customer specified attribute
        value. It provides more controls for customized ranking than the simple
        (condition, boost) combination above.
      type: object
      properties:
        fieldName:
          description: >-
            The name of the field whose value will be used to determine the
            boost amount.
          type: string
        attributeType:
          description: >-
            The attribute type to be used to determine the boost amount. The
            attribute value can be derived from the field value of the specified
            field_name. In the case of numerical it is straightforward i.e.
            attribute_value = numerical_field_value. In the case of freshness
            however, attribute_value = (time.now() - datetime_field_value).
          type: string
          enumDescriptions:
            - Unspecified AttributeType.
            - >-
              The value of the numerical field will be used to dynamically
              update the boost amount. In this case, the attribute_value (the x
              value) of the control point will be the actual value of the
              numerical field for which the boost_amount is specified.
            - >-
              For the freshness use case the attribute value will be the
              duration between the current time and the date in the datetime
              field specified. The value must be formatted as an XSD
              `dayTimeDuration` value (a restricted subset of an ISO 8601
              duration value). The pattern for this is: `nDnM]`. For example,
              `5D`, `3DT12H30M`, `T24H`.
          enum:
            - ATTRIBUTE_TYPE_UNSPECIFIED
            - NUMERICAL
            - FRESHNESS
        interpolationType:
          description: >-
            The interpolation type to be applied to connect the control points
            listed below.
          type: string
          enumDescriptions:
            - >-
              Interpolation type is unspecified. In this case, it defaults to
              Linear.
            - Piecewise linear interpolation will be applied.
          enum:
            - INTERPOLATION_TYPE_UNSPECIFIED
            - LINEAR
        controlPoints:
          description: >-
            The control points used to define the curve. The monotonic function
            (defined through the interpolation_type above) passes through the
            control points listed here.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint
    GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint:
      id: >-
        GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint
      description: >-
        The control points used to define the curve. The curve defined through
        these control points can only be monotonically increasing or
        decreasing(constant values are acceptable).
      type: object
      properties:
        attributeValue:
          description: >-
            Can be one of: 1. The numerical field value. 2. The duration spec
            for freshness: The value must be formatted as an XSD
            `dayTimeDuration` value (a restricted subset of an ISO 8601 duration
            value). The pattern for this is: `nDnM]`.
          type: string
        boostAmount:
          description: >-
            The value between -1 to 1 by which to boost the score if the
            attribute_value evaluates to the value specified above.
          type: number
          format: float
    GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec
      description: >-
        Specification to determine under which conditions query expansion should
        occur.
      type: object
      properties:
        condition:
          description: >-
            The condition under which query expansion should occur. Default to
            Condition.DISABLED.
          type: string
          enumDescriptions:
            - >-
              Unspecified query expansion condition. In this case, server
              behavior defaults to Condition.DISABLED.
            - >-
              Disabled query expansion. Only the exact search query is used,
              even if SearchResponse.total_size is zero.
            - Automatic query expansion built by the Search API.
          enum:
            - CONDITION_UNSPECIFIED
            - DISABLED
            - AUTO
        pinUnexpandedResults:
          description: >-
            Whether to pin unexpanded results. If this field is set to true,
            unexpanded products are always at the top of the search results,
            followed by the expanded results.
          type: boolean
    GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec
      description: The specification for query spell correction.
      type: object
      properties:
        mode:
          description: >-
            The mode under which spell correction replaces the original search
            query. Defaults to Mode.AUTO.
          type: string
          enumDescriptions:
            - >-
              Unspecified spell correction mode. In this case, server behavior
              defaults to Mode.AUTO.
            - >-
              Search API tries to find a spelling suggestion. If a suggestion is
              found, it is put in the SearchResponse.corrected_query. The
              spelling suggestion won't be used as the search query.
            - >-
              Automatic spell correction built by the Search API. Search will be
              based on the corrected query if found.
          enum:
            - MODE_UNSPECIFIED
            - SUGGESTION_ONLY
            - AUTO
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec
      description: A specification for configuring the behavior of content search.
      type: object
      properties:
        snippetSpec:
          description: >-
            If `snippetSpec` is not specified, snippets are not included in the
            search response.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec
        summarySpec:
          description: >-
            If `summarySpec` is not specified, summaries are not included in the
            search response.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec
        extractiveContentSpec:
          description: >-
            If there is no extractive_content_spec provided, there will be no
            extractive answer in the search response.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec
        searchResultMode:
          description: >-
            Specifies the search result mode. If unspecified, the search result
            mode defaults to `DOCUMENTS`.
          type: string
          enumDescriptions:
            - Default value.
            - Returns documents in the search result.
            - >-
              Returns chunks in the search result. Only available if the
              DataStore.DocumentProcessingConfig.chunking_config is specified.
          enum:
            - SEARCH_RESULT_MODE_UNSPECIFIED
            - DOCUMENTS
            - CHUNKS
        chunkSpec:
          description: >-
            Specifies the chunk spec to be returned from the search response.
            Only available if the
            SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecChunkSpec
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec:
      id: >-
        GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec
      description: A specification for configuring snippets in a search response.
      type: object
      properties:
        maxSnippetCount:
          description: >-
            [DEPRECATED] This field is deprecated. To control snippet return,
            use `return_snippet` field. For backwards compatibility, we will
            return snippet if max_snippet_count > 0.
          deprecated: true
          type: integer
          format: int32
        referenceOnly:
          description: >-
            [DEPRECATED] This field is deprecated and will have no affect on the
            snippet.
          deprecated: true
          type: boolean
        returnSnippet:
          description: >-
            If `true`, then return snippet. If no snippet can be generated, we
            return "No snippet is available for this page." A `snippet_status`
            with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.
          type: boolean
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec:
      id: >-
        GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec
      description: A specification for configuring a summary returned in a search response.
      type: object
      properties:
        summaryResultCount:
          description: >-
            The number of top results to generate the summary from. If the
            number of results returned is less than `summaryResultCount`, the
            summary is generated from all of the results. At most 10 results for
            documents mode, or 50 for chunks mode, can be used to generate a
            summary. The chunks mode is used when
            SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
          type: integer
          format: int32
        includeCitations:
          description: >-
            Specifies whether to include citations in the summary. The default
            value is `false`. When this field is set to `true`, summaries
            include in-line citation numbers. Example summary including
            citations: BigQuery is Google Cloud's fully managed and completely
            serverless enterprise data warehouse [1]. BigQuery supports all data
            types, works across clouds, and has built-in machine learning and
            business intelligence, all within a unified platform [2, 3]. The
            citation numbers refer to the returned search results and are
            1-indexed. For example, [1] means that the sentence is attributed to
            the first search result. [2, 3] means that the sentence is
            attributed to both the second and third search results.
          type: boolean
        ignoreAdversarialQuery:
          description: >-
            Specifies whether to filter out adversarial queries. The default
            value is `false`. Google employs search-query classification to
            detect adversarial queries. No summary is returned if the search
            query is classified as an adversarial query. For example, a user
            might ask a question regarding negative comments about the company
            or submit a query designed to generate unsafe, policy-violating
            output. If this field is set to `true`, we skip generating summaries
            for adversarial queries and return fallback messages instead.
          type: boolean
        ignoreNonSummarySeekingQuery:
          description: >-
            Specifies whether to filter out queries that are not
            summary-seeking. The default value is `false`. Google employs
            search-query classification to detect summary-seeking queries. No
            summary is returned if the search query is classified as a
            non-summary seeking query. For example, `why is the sky blue` and
            `Who is the best soccer player in the world?` are summary-seeking
            queries, but `SFO airport` and `world cup 2026` are not. They are
            most likely navigational queries. If this field is set to `true`, we
            skip generating summaries for non-summary seeking queries and return
            fallback messages instead.
          type: boolean
        ignoreLowRelevantContent:
          description: >-
            Specifies whether to filter out queries that have low relevance. The
            default value is `false`. If this field is set to `false`, all
            search results are used regardless of relevance to generate answers.
            If set to `true`, only queries with high relevance search results
            will generate answers.
          type: boolean
        ignoreJailBreakingQuery:
          description: >-
            Optional. Specifies whether to filter out jail-breaking queries. The
            default value is `false`. Google employs search-query classification
            to detect jail-breaking queries. No summary is returned if the
            search query is classified as a jail-breaking query. A user might
            add instructions to the query to change the tone, style, language,
            content of the answer, or ask the model to act as a different
            entity, e.g. "Reply in the tone of a competing company's CEO". If
            this field is set to `true`, we skip generating summaries for
            jail-breaking queries and return fallback messages instead.
          type: boolean
        modelPromptSpec:
          description: >-
            If specified, the spec will be used to modify the prompt provided to
            the LLM.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec
        languageCode:
          description: >-
            Language code for Summary. Use language tags defined by
            [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is
            an experimental feature.
          type: string
        modelSpec:
          description: >-
            If specified, the spec will be used to modify the model
            specification provided to the LLM.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec
        useSemanticChunks:
          description: >-
            If true, answer will be generated from most relevant chunks from top
            search results. This feature will improve summary quality. Note that
            with this feature enabled, not all top search results will be
            referenced and included in the reference list, so the citation
            source index only points to the search results listed in the
            reference list.
          type: boolean
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec:
      id: >-
        GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec
      description: Specification of the prompt to use with the model.
      type: object
      properties:
        preamble:
          description: >-
            Text at the beginning of the prompt that instructs the assistant.
            Examples are available in the user guide.
          type: string
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec:
      id: >-
        GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec
      description: Specification of the model.
      type: object
      properties:
        version:
          description: >-
            The model version used to generate the summary. Supported values
            are: * `stable`: string. Default value when no value is specified.
            Uses a generally available, fine-tuned model. For more information,
            see [Answer generation model versions and
            lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
            * `preview`: string. (Public preview) Uses a preview model. For more
            information, see [Answer generation model versions and
            lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
          type: string
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec:
      id: >-
        GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec
      description: >-
        A specification for configuring the extractive content in a search
        response.
      type: object
      properties:
        maxExtractiveAnswerCount:
          description: >-
            The maximum number of extractive answers returned in each search
            result. An extractive answer is a verbatim answer extracted from the
            original document, which provides a precise and contextually
            relevant answer to the search query. If the number of matching
            answers is less than the `max_extractive_answer_count`, return all
            of the answers. Otherwise, return the `max_extractive_answer_count`.
            At most five answers are returned for each SearchResult.
          type: integer
          format: int32
        maxExtractiveSegmentCount:
          description: >-
            The max number of extractive segments returned in each search
            result. Only applied if the DataStore is set to
            DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types
            is SOLUTION_TYPE_CHAT. An extractive segment is a text segment
            extracted from the original document that is relevant to the search
            query, and, in general, more verbose than an extractive answer. The
            segment could then be used as input for LLMs to generate summaries
            and answers. If the number of matching segments is less than
            `max_extractive_segment_count`, return all of the segments.
            Otherwise, return the `max_extractive_segment_count`.
          type: integer
          format: int32
        returnExtractiveSegmentScore:
          description: >-
            Specifies whether to return the confidence score from the extractive
            segments in each search result. This feature is available only for
            new or allowlisted data stores. To allowlist your data store,
            contact your Customer Engineer. The default value is `false`.
          type: boolean
        numPreviousSegments:
          description: >-
            Specifies whether to also include the adjacent from each selected
            segments. Return at most `num_previous_segments` segments before
            each selected segments.
          type: integer
          format: int32
        numNextSegments:
          description: >-
            Return at most `num_next_segments` segments after each selected
            segments.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecChunkSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecChunkSpec
      description: >-
        Specifies the chunk spec to be returned from the search response. Only
        available if the SearchRequest.ContentSearchSpec.search_result_mode is
        set to CHUNKS
      type: object
      properties:
        numPreviousChunks:
          description: >-
            The number of previous chunks to be returned of the current chunk.
            The maximum allowed value is 3. If not specified, no previous chunks
            will be returned.
          type: integer
          format: int32
        numNextChunks:
          description: >-
            The number of next chunks to be returned of the current chunk. The
            maximum allowed value is 3. If not specified, no next chunks will be
            returned.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec
      description: >-
        The specification that uses customized query embedding vector to do
        semantic document retrieval.
      type: object
      properties:
        embeddingVectors:
          description: The embedding vector used for retrieval. Limit to 1.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector
    GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector:
      id: >-
        GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector
      description: Embedding vector.
      type: object
      properties:
        fieldPath:
          description: Embedding field path in schema.
          type: string
        vector:
          description: Query embedding vector.
          type: array
          items:
            type: number
            format: float
    GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec:
      id: >-
        GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec
      description: >-
        Specification to enable natural language understanding capabilities for
        search requests.
      type: object
      properties:
        filterExtractionCondition:
          description: >-
            The condition under which filter extraction should occur. Default to
            Condition.DISABLED.
          type: string
          enumDescriptions:
            - Server behavior defaults to Condition.DISABLED.
            - Disables NL filter extraction.
            - Enables NL filter extraction.
          enum:
            - CONDITION_UNSPECIFIED
            - DISABLED
            - ENABLED
        geoSearchQueryDetectionFieldNames:
          description: >-
            Field names used for location-based filtering, where geolocation
            filters are detected in natural language search queries. Only valid
            when the FilterExtractionCondition is set to `ENABLED`. If this
            field is set, it overrides the field names set in
            ServingConfig.geo_search_query_detection_field_names.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec
      description: Specification for search as you type in search requests.
      type: object
      properties:
        condition:
          description: >-
            The condition under which search as you type should occur. Default
            to Condition.DISABLED.
          type: string
          enumDescriptions:
            - Server behavior defaults to Condition.DISABLED.
            - Disables Search As You Type.
            - Enables Search As You Type.
          enum:
            - CONDITION_UNSPECIFIED
            - DISABLED
            - ENABLED
    GoogleCloudDiscoveryengineV1betaSearchRequestSessionSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestSessionSpec
      description: >-
        Session specification. Multi-turn Search feature is currently at private
        GA stage. Please use v1alpha or v1beta version instead before we launch
        this feature to public GA. Or ask for allowlisting through Google
        Support team.
      type: object
      properties:
        queryId:
          description: >-
            If set, the search result gets stored to the "turn" specified by
            this query ID. Example: Let's say the session looks like this:
            session { name: ".../sessions/xxx" turns { query { text: "What is
            foo?" query_id: ".../questions/yyy" } answer: "Foo is ..." } turns {
            query { text: "How about bar then?" query_id: ".../questions/zzz" }
            } } The user can call /search API with a request like this: session:
            ".../sessions/xxx" session_spec { query_id: ".../questions/zzz" }
            Then, the API stores the search result, associated with the last
            turn. The stored search result can be used by a subsequent /answer
            API call (with the session ID and the query ID specified). Also, it
            is possible to call /search and /answer in parallel with the same
            session ID & query ID.
          type: string
        searchResultPersistenceCount:
          description: >-
            The number of top search results to persist. The persisted search
            results can be used for the subsequent /answer api call. This field
            is simliar to the `summary_result_count` field in
            SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count. At
            most 10 results for documents mode, or 50 for chunks mode.
          type: integer
          format: int32
    GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpecQuerySetSpec:
      id: GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpecQuerySetSpec
      description: Describes the specification of the query set.
      type: object
      properties:
        sampleQuerySet:
          description: >-
            Required. The full resource name of the SampleQuerySet used for the
            evaluation, in the format of
            `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`.
          type: string
    GoogleCloudDiscoveryengineV1betaQualityMetrics:
      id: GoogleCloudDiscoveryengineV1betaQualityMetrics
      description: Describes the metrics produced by the evaluation.
      type: object
      properties:
        docRecall:
          description: >-
            Recall per document, at various top-k cutoff levels. Recall is the
            fraction of relevant documents retrieved out of all relevant
            documents. Example (top-5): * For a single SampleQuery, If 3 out of
            5 relevant documents are retrieved in the top-5, recall@5 = 3/5 =
            0.6
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics
        docPrecision:
          description: >-
            Precision per document, at various top-k cutoff levels. Precision is
            the fraction of retrieved documents that are relevant. Example
            (top-5): * For a single SampleQuery, If 4 out of 5 retrieved
            documents in the top-5 are relevant, precision@5 = 4/5 = 0.8
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics
        docNdcg:
          description: >-
            Normalized discounted cumulative gain (NDCG) per document, at
            various top-k cutoff levels. NDCG measures the ranking quality,
            giving higher relevance to top results. Example (top-3): Suppose
            SampleQuery with three retrieved documents (D1, D2, D3) and binary
            relevance judgements (1 for relevant, 0 for not relevant):
            Retrieved: [D3 (0), D1 (1), D2 (1)] Ideal: [D1 (1), D2 (1), D3 (0)]
            Calculate NDCG@3 for each SampleQuery: * DCG@3: 0/log2(1+1) +
            1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) +
            1/log2(2+1) + 0/log2(3+1) = 1.63 * NDCG@3: 1.13/1.63 = 0.693
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics
        pageRecall:
          description: >-
            Recall per page, at various top-k cutoff levels. Recall is the
            fraction of relevant pages retrieved out of all relevant pages.
            Example (top-5): * For a single SampleQuery, if 3 out of 5 relevant
            pages are retrieved in the top-5, recall@5 = 3/5 = 0.6
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics
        pageNdcg:
          description: >-
            Normalized discounted cumulative gain (NDCG) per page, at various
            top-k cutoff levels. NDCG measures the ranking quality, giving
            higher relevance to top results. Example (top-3): Suppose
            SampleQuery with three retrieved pages (P1, P2, P3) and binary
            relevance judgements (1 for relevant, 0 for not relevant):
            Retrieved: [P3 (0), P1 (1), P2 (1)] Ideal: [P1 (1), P2 (1), P3 (0)]
            Calculate NDCG@3 for SampleQuery: * DCG@3: 0/log2(1+1) + 1/log2(2+1)
            + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) + 1/log2(2+1) +
            0/log2(3+1) = 1.63 * NDCG@3: 1.13/1.63 = 0.693
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics
    GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics:
      id: GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics
      description: Stores the metric values at specific top-k levels.
      type: object
      properties:
        top1:
          description: The top-1 value.
          type: number
          format: double
        top3:
          description: The top-3 value.
          type: number
          format: double
        top5:
          description: The top-5 value.
          type: number
          format: double
        top10:
          description: The top-10 value.
          type: number
          format: double
    GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsMetadata:
      id: GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsMetadata
      description: >-
        Metadata related to the progress of the ImportCompletionSuggestions
        operation. This will be returned by the
        google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of CompletionSuggestions successfully imported.
          type: string
          format: int64
        failureCount:
          description: Count of CompletionSuggestions that failed to be imported.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsResponse:
      id: GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsResponse
      description: >-
        Response of the CompletionService.ImportCompletionSuggestions method. If
        the long running operation is done, this message is returned by the
        google.longrunning.Operations.response field if the operation is
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: The desired location of errors incurred during the Import.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig
    GoogleCloudDiscoveryengineV1betaImportErrorConfig:
      id: GoogleCloudDiscoveryengineV1betaImportErrorConfig
      description: Configuration of destination for Import related errors.
      type: object
      properties:
        gcsPrefix:
          description: >-
            Cloud Storage prefix for import errors. This must be an empty,
            existing Cloud Storage directory. Import errors are written to
            sharded files in this directory, one per line, as a JSON-encoded
            `google.rpc.Status` message.
          type: string
    GoogleCloudDiscoveryengineV1betaImportDocumentsMetadata:
      id: GoogleCloudDiscoveryengineV1betaImportDocumentsMetadata
      description: >-
        Metadata related to the progress of the ImportDocuments operation. This
        is returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were processed successfully.
          type: string
          format: int64
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
        totalCount:
          description: Total count of entries that were processed.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1betaImportDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1betaImportDocumentsResponse
      description: >-
        Response of the ImportDocumentsRequest. If the long running operation is
        done, then this message is returned by the
        google.longrunning.Operations.response field if the operation was
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: >-
            Echoes the destination for the complete errors in the request if
            set.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig
    GoogleCloudDiscoveryengineV1betaImportSampleQueriesMetadata:
      id: GoogleCloudDiscoveryengineV1betaImportSampleQueriesMetadata
      description: >-
        Metadata related to the progress of the ImportSampleQueries operation.
        This will be returned by the google.longrunning.Operation.metadata
        field.
      type: object
      properties:
        createTime:
          description: ImportSampleQueries operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            ImportSampleQueries operation last update time. If the operation is
            done, this is also the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of SampleQuerys successfully imported.
          type: string
          format: int64
        failureCount:
          description: Count of SampleQuerys that failed to be imported.
          type: string
          format: int64
        totalCount:
          description: Total count of SampleQuerys that were processed.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1betaImportSampleQueriesResponse:
      id: GoogleCloudDiscoveryengineV1betaImportSampleQueriesResponse
      description: >-
        Response of the SampleQueryService.ImportSampleQueries method. If the
        long running operation is done, this message is returned by the
        google.longrunning.Operations.response field if the operation is
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: The desired location of errors incurred during the Import.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig
    GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesMetadata:
      id: GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesMetadata
      description: >-
        Metadata related to the progress of the ImportSuggestionDenyListEntries
        operation. This is returned by the google.longrunning.Operation.metadata
        field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesResponse:
      id: GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesResponse
      description: >-
        Response message for CompletionService.ImportSuggestionDenyListEntries
        method.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        importedEntriesCount:
          description: Count of deny list entries successfully imported.
          type: string
          format: int64
        failedEntriesCount:
          description: Count of deny list entries that failed to be imported.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1betaImportUserEventsMetadata:
      id: GoogleCloudDiscoveryengineV1betaImportUserEventsMetadata
      description: >-
        Metadata related to the progress of the Import operation. This is
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were processed successfully.
          type: string
          format: int64
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1betaImportUserEventsResponse:
      id: GoogleCloudDiscoveryengineV1betaImportUserEventsResponse
      description: >-
        Response of the ImportUserEventsRequest. If the long running operation
        was successful, then this message is returned by the
        google.longrunning.Operations.response field if the operation was
        successful.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: >-
            Echoes the destination for the complete errors if this field was set
            in the request.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig
        joinedEventsCount:
          description: Count of user events imported with complete existing Documents.
          type: string
          format: int64
        unjoinedEventsCount:
          description: >-
            Count of user events imported, but with Document information not
            found in the existing Branch.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1betaListCustomModelsResponse:
      id: GoogleCloudDiscoveryengineV1betaListCustomModelsResponse
      description: Response message for SearchTuningService.ListCustomModels method.
      type: object
      properties:
        models:
          description: List of custom tuning models.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1betaCustomTuningModel
    GoogleCloudDiscoveryengineV1betaCustomTuningModel:
      id: GoogleCloudDiscoveryengineV1betaCustomTuningModel
      description: Metadata that describes a custom tuned model.
      type: object
      properties:
        name:
          description: >-
            Required. The fully qualified resource name of the model. Format:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/customTuningModels/{custom_tuning_model}`.
            Model must be an alpha-numerical string with limit of 40 characters.
          type: string
        displayName:
          description: The display name of the model.
          type: string
        modelVersion:
          description: The version of the model.
          type: string
          format: int64
        modelState:
          description: >-
            The state that the model is in (e.g.`TRAINING` or
            `TRAINING_FAILED`).
          type: string
          enumDescriptions:
            - Default value.
            - The model is in a paused training state.
            - The model is currently training.
            - The model has successfully completed training.
            - The model is ready for serving.
            - The model training failed.
            - >-
              The model training finished successfully but metrics did not
              improve.
            - Input data validation failed. Model training didn't start.
          enum:
            - MODEL_STATE_UNSPECIFIED
            - TRAINING_PAUSED
            - TRAINING
            - TRAINING_COMPLETE
            - READY_FOR_SERVING
            - TRAINING_FAILED
            - NO_IMPROVEMENT
            - INPUT_VALIDATION_FAILED
        createTime:
          description: Timestamp the Model was created at.
          deprecated: true
          type: string
          format: google-datetime
        trainingStartTime:
          description: Timestamp the model training was initiated.
          type: string
          format: google-datetime
        metrics:
          description: The metrics of the trained model.
          type: object
          additionalProperties:
            type: number
            format: double
    GoogleCloudDiscoveryengineV1betaProject:
      id: GoogleCloudDiscoveryengineV1betaProject
      description: Metadata and configurations for a Google Cloud project in the service.
      type: object
      properties:
        name:
          description: >-
            Output only. Full resource name of the project, for example
            `projects/{project}`. Note that when making requests, project number
            and project id are both acceptable, but the server will always
            respond in project number.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when this project is created.
          readOnly: true
          type: string
          format: google-datetime
        provisionCompletionTime:
          description: >-
            Output only. The timestamp when this project is successfully
            provisioned. Empty value means this project is still provisioning
            and is not ready for use.
          readOnly: true
          type: string
          format: google-datetime
        serviceTermsMap:
          description: >-
            Output only. A map of terms of services. The key is the `id` of
            ServiceTerms.
          readOnly: true
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudDiscoveryengineV1betaProjectServiceTerms
    GoogleCloudDiscoveryengineV1betaProjectServiceTerms:
      id: GoogleCloudDiscoveryengineV1betaProjectServiceTerms
      description: Metadata about the terms of service.
      type: object
      properties:
        id:
          description: >-
            The unique identifier of this terms of service. Available terms: *
            `GA_DATA_USE_TERMS`: [Terms for data
            use](https://cloud.google.com/retail/data-use-terms). When using
            this as `id`, the acceptable version to provide is `2022-11-23`.
          type: string
        version:
          description: >-
            The version string of the terms of service. For acceptable values,
            see the comments for id above.
          type: string
        state:
          description: >-
            Whether the project has accepted/rejected the service terms or it is
            still pending.
          type: string
          enumDescriptions:
            - The default value of the enum. This value is not actually used.
            - The project has given consent to the terms of service.
            - The project is pending to review and accept the terms of service.
            - >-
              The project has declined or revoked the agreement to terms of
              service.
          enum:
            - STATE_UNSPECIFIED
            - TERMS_ACCEPTED
            - TERMS_PENDING
            - TERMS_DECLINED
        acceptTime:
          description: The last time when the project agreed to the terms of service.
          type: string
          format: google-datetime
        declineTime:
          description: >-
            The last time when the project declined or revoked the agreement to
            terms of service.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaProvisionProjectMetadata:
      id: GoogleCloudDiscoveryengineV1betaProvisionProjectMetadata
      description: Metadata associated with a project provision operation.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1betaPurgeDocumentsMetadata:
      id: GoogleCloudDiscoveryengineV1betaPurgeDocumentsMetadata
      description: >-
        Metadata related to the progress of the PurgeDocuments operation. This
        will be returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were deleted successfully.
          type: string
          format: int64
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
        ignoredCount:
          description: Count of entries that were ignored as entries were not found.
          type: string
          format: int64
    GoogleCloudDiscoveryengineV1betaPurgeDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1betaPurgeDocumentsResponse
      description: >-
        Response message for DocumentService.PurgeDocuments method. If the long
        running operation is successfully done, then this message is returned by
        the google.longrunning.Operations.response field.
      type: object
      properties:
        purgeCount:
          description: The total count of documents purged as a result of the operation.
          type: string
          format: int64
        purgeSample:
          description: >-
            A sample of document names that will be deleted. Only populated if
            `force` is set to false. A max of 100 names will be returned and the
            names are chosen at random.
          type: array
          items:
            type: string
    GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesMetadata:
      id: GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesMetadata
      description: >-
        Metadata related to the progress of the PurgeSuggestionDenyListEntries
        operation. This is returned by the google.longrunning.Operation.metadata
        field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesResponse:
      id: GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesResponse
      description: >-
        Response message for CompletionService.PurgeSuggestionDenyListEntries
        method.
      type: object
      properties:
        purgeCount:
          description: Number of suggestion deny list entries purged.
          type: string
          format: int64
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDiscoveryengineV1betaTrainCustomModelMetadata:
      id: GoogleCloudDiscoveryengineV1betaTrainCustomModelMetadata
      description: >-
        Metadata related to the progress of the TrainCustomModel operation. This
        is returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaTrainCustomModelResponse:
      id: GoogleCloudDiscoveryengineV1betaTrainCustomModelResponse
      description: >-
        Response of the TrainCustomModelRequest. This message is returned by the
        google.longrunning.Operations.response field.
      type: object
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the data.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorConfig:
          description: >-
            Echoes the destination for the complete errors in the request if
            set.
          $ref: >-
            #/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig
        modelStatus:
          description: >-
            The trained model status. Possible values are: * **bad-data**: The
            training data quality is bad. * **no-improvement**: Tuning didn't
            improve performance. Won't deploy. * **in-progress**: Model training
            job creation is in progress. * **training**: Model is actively
            training. * **evaluating**: The model is evaluating trained metrics.
            * **indexing**: The model trained metrics are indexing. * **ready**:
            The model is ready for serving.
          type: string
        metrics:
          description: The metrics of the trained model.
          type: object
          additionalProperties:
            type: number
            format: double
        modelName:
          description: Fully qualified name of the CustomTuningModel.
          type: string
    GoogleCloudDiscoveryengineV1betaTuneEngineMetadata:
      id: GoogleCloudDiscoveryengineV1betaTuneEngineMetadata
      description: Metadata associated with a tune operation.
      type: object
      properties:
        engine:
          description: >-
            Required. The resource name of the engine that this tune applies to.
            Format:
            `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
          type: string
    GoogleCloudDiscoveryengineV1betaTuneEngineResponse:
      id: GoogleCloudDiscoveryengineV1betaTuneEngineResponse
      description: Response associated with a tune operation.
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1betaUpdateSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1betaUpdateSchemaMetadata
      description: Metadata for UpdateSchema LRO.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
    GoogleCloudDiscoveryengineV1betaUpdateTargetSiteMetadata:
      id: GoogleCloudDiscoveryengineV1betaUpdateTargetSiteMetadata
      description: >-
        Metadata related to the progress of the
        SiteSearchEngineService.UpdateTargetSite operation. This will be
        returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Operation last update time. If the operation is done, this is also
            the finish time.
          type: string
          format: google-datetime
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    projects:
      id: google.discoveryengine.projects
      name: projects
      title: Projects
      methods:
        projects_provision:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}:provision/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.discoveryengine.operations
      name: operations
      title: Operations
      methods:
        projects_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_connector_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataConnector~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_collections_data_connector_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataConnector~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_collections_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_models_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1models~1{modelsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_collections_data_stores_models_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1models~1{modelsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_collections_data_stores_branches_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_collections_data_stores_branches_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_collections_data_stores_schemas_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_collections_engines_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_identity_mapping_stores_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1identity_mapping_stores~1{identity_mapping_storesId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_identity_mapping_stores_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1identity_mapping_stores~1{identity_mapping_storesId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_models_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1models~1{modelsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_data_stores_models_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1models~1{modelsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_data_stores_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_data_stores_branches_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_models_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_branches_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_schemas_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_models_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_branches_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_schemas_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_engines_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_models_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_branches_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_connector_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_engines_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_identity_mapping_stores_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_models_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_branches_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_connector_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_collections_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_identity_mapping_stores_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_operations_list
        insert: []
        update: []
        replace: []
        delete: []
    data_stores:
      id: google.discoveryengine.data_stores
      name: data_stores
      title: Data_stores
      methods:
        projects_locations_collections_data_stores_complete_query:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}:completeQuery/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataStores
        projects_locations_collections_data_stores_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_train_custom_model:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}:trainCustomModel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_complete_query:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}:completeQuery/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataStores
        projects_locations_data_stores_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_stores/methods/projects_locations_collections_data_stores_get
          - $ref: >-
              #/components/x-stackQL-resources/data_stores/methods/projects_locations_collections_data_stores_list
          - $ref: >-
              #/components/x-stackQL-resources/data_stores/methods/projects_locations_data_stores_get
          - $ref: >-
              #/components/x-stackQL-resources/data_stores/methods/projects_locations_data_stores_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/data_stores/methods/projects_locations_collections_data_stores_create
          - $ref: >-
              #/components/x-stackQL-resources/data_stores/methods/projects_locations_data_stores_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/data_stores/methods/projects_locations_collections_data_stores_patch
          - $ref: >-
              #/components/x-stackQL-resources/data_stores/methods/projects_locations_data_stores_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/data_stores/methods/projects_locations_collections_data_stores_delete
          - $ref: >-
              #/components/x-stackQL-resources/data_stores/methods/projects_locations_data_stores_delete
    data_stores_site_search_engine:
      id: google.discoveryengine.data_stores_site_search_engine
      name: data_stores_site_search_engine
      title: Data_stores_site_search_engine
      methods:
        projects_locations_collections_data_stores_get_site_search_engine:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_get_site_search_engine:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1siteSearchEngine/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_stores_site_search_engine/methods/projects_locations_collections_data_stores_get_site_search_engine
          - $ref: >-
              #/components/x-stackQL-resources/data_stores_site_search_engine/methods/projects_locations_data_stores_get_site_search_engine
        insert: []
        update: []
        replace: []
        delete: []
    data_store_operations:
      id: google.discoveryengine.data_store_operations
      name: data_store_operations
      title: Data_store_operations
      methods:
        projects_locations_collections_data_stores_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_store_operations/methods/projects_locations_collections_data_stores_operations_get
        insert: []
        update: []
        replace: []
        delete: []
    suggestion_deny_list_entries:
      id: google.discoveryengine.suggestion_deny_list_entries
      name: suggestion_deny_list_entries
      title: Suggestion_deny_list_entries
      methods:
        projects_locations_collections_data_stores_suggestion_deny_list_entries_import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1suggestionDenyListEntries:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_suggestion_deny_list_entries_purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1suggestionDenyListEntries:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_suggestion_deny_list_entries_import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1suggestionDenyListEntries:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_suggestion_deny_list_entries_purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1suggestionDenyListEntries:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    completion_suggestions:
      id: google.discoveryengine.completion_suggestions
      name: completion_suggestions
      title: Completion_suggestions
      methods:
        projects_locations_collections_data_stores_completion_suggestions_import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1completionSuggestions:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_completion_suggestions_purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1completionSuggestions:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_completion_suggestions_import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1completionSuggestions:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_completion_suggestions_purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1completionSuggestions:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    controls:
      id: google.discoveryengine.controls
      name: controls
      title: Controls
      methods:
        projects_locations_collections_data_stores_controls_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1controls/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_controls_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1controls/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.controls
        projects_locations_collections_data_stores_controls_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1controls~1{controlsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_controls_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1controls~1{controlsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_controls_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1controls~1{controlsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_controls_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1controls/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_controls_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1controls/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.controls
        projects_locations_collections_engines_controls_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1controls~1{controlsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_controls_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1controls~1{controlsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_controls_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1controls~1{controlsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_controls_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1controls/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_controls_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1controls/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.controls
        projects_locations_data_stores_controls_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1controls~1{controlsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_controls_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1controls~1{controlsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_controls_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1controls~1{controlsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_collections_data_stores_controls_get
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_collections_engines_controls_get
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_collections_data_stores_controls_list
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_collections_engines_controls_list
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_data_stores_controls_get
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_data_stores_controls_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_collections_data_stores_controls_create
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_collections_engines_controls_create
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_data_stores_controls_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_collections_data_stores_controls_patch
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_collections_engines_controls_patch
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_data_stores_controls_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_collections_data_stores_controls_delete
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_collections_engines_controls_delete
          - $ref: >-
              #/components/x-stackQL-resources/controls/methods/projects_locations_data_stores_controls_delete
    serving_configs:
      id: google.discoveryengine.serving_configs
      name: serving_configs
      title: Serving_configs
      methods:
        projects_locations_collections_data_stores_serving_configs_search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1servingConfigs~1{servingConfigsId}:search/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_serving_configs_answer:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1servingConfigs~1{servingConfigsId}:answer/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_serving_configs_recommend:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1servingConfigs~1{servingConfigsId}:recommend/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_serving_configs_search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1servingConfigs~1{servingConfigsId}:search/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_serving_configs_answer:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1servingConfigs~1{servingConfigsId}:answer/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_serving_configs_recommend:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1servingConfigs~1{servingConfigsId}:recommend/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_serving_configs_search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1servingConfigs~1{servingConfigsId}:search/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_serving_configs_answer:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1servingConfigs~1{servingConfigsId}:answer/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_serving_configs_recommend:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1servingConfigs~1{servingConfigsId}:recommend/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    conversations:
      id: google.discoveryengine.conversations
      name: conversations
      title: Conversations
      methods:
        projects_locations_collections_data_stores_conversations_converse:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}:converse/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_conversations_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_conversations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        projects_locations_collections_data_stores_conversations_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_conversations_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_conversations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_conversations_converse:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1conversations~1{conversationsId}:converse/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_conversations_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1conversations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_conversations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1conversations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        projects_locations_collections_engines_conversations_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1conversations~1{conversationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_conversations_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1conversations~1{conversationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_conversations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1conversations~1{conversationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_conversations_converse:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}:converse/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_conversations_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_conversations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        projects_locations_data_stores_conversations_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_conversations_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_conversations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_collections_data_stores_conversations_get
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_collections_engines_conversations_get
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_collections_data_stores_conversations_list
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_collections_engines_conversations_list
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_data_stores_conversations_get
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_data_stores_conversations_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_collections_data_stores_conversations_create
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_collections_engines_conversations_create
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_data_stores_conversations_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_collections_data_stores_conversations_patch
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_collections_engines_conversations_patch
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_data_stores_conversations_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_collections_data_stores_conversations_delete
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_collections_engines_conversations_delete
          - $ref: >-
              #/components/x-stackQL-resources/conversations/methods/projects_locations_data_stores_conversations_delete
    sessions:
      id: google.discoveryengine.sessions
      name: sessions
      title: Sessions
      methods:
        projects_locations_collections_data_stores_sessions_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1sessions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_sessions_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1sessions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sessions
        projects_locations_collections_data_stores_sessions_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1sessions~1{sessionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_sessions_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1sessions~1{sessionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_sessions_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1sessions~1{sessionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_sessions_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1sessions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_sessions_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1sessions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sessions
        projects_locations_collections_engines_sessions_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1sessions~1{sessionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_sessions_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1sessions~1{sessionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_sessions_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1sessions~1{sessionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_sessions_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1sessions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_sessions_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1sessions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sessions
        projects_locations_data_stores_sessions_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1sessions~1{sessionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_sessions_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1sessions~1{sessionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_sessions_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1sessions~1{sessionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_collections_data_stores_sessions_get
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_collections_engines_sessions_get
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_collections_data_stores_sessions_list
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_collections_engines_sessions_list
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_data_stores_sessions_get
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_data_stores_sessions_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_collections_data_stores_sessions_create
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_collections_engines_sessions_create
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_data_stores_sessions_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_collections_data_stores_sessions_patch
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_collections_engines_sessions_patch
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_data_stores_sessions_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_collections_data_stores_sessions_delete
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_collections_engines_sessions_delete
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_data_stores_sessions_delete
    answers:
      id: google.discoveryengine.answers
      name: answers
      title: Answers
      methods:
        projects_locations_collections_data_stores_sessions_answers_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1sessions~1{sessionsId}~1answers~1{answersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_sessions_answers_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1sessions~1{sessionsId}~1answers~1{answersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_sessions_answers_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1sessions~1{sessionsId}~1answers~1{answersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/answers/methods/projects_locations_collections_data_stores_sessions_answers_get
          - $ref: >-
              #/components/x-stackQL-resources/answers/methods/projects_locations_collections_engines_sessions_answers_get
          - $ref: >-
              #/components/x-stackQL-resources/answers/methods/projects_locations_data_stores_sessions_answers_get
        insert: []
        update: []
        replace: []
        delete: []
    branches_documents_metadata:
      id: google.discoveryengine.branches_documents_metadata
      name: branches_documents_metadata
      title: Branches_documents_metadata
      methods:
        projects_locations_collections_data_stores_branches_batch_get_documents_metadata:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1batchGetDocumentsMetadata/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_batch_get_documents_metadata:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1batchGetDocumentsMetadata/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/branches_documents_metadata/methods/projects_locations_collections_data_stores_branches_batch_get_documents_metadata
          - $ref: >-
              #/components/x-stackQL-resources/branches_documents_metadata/methods/projects_locations_data_stores_branches_batch_get_documents_metadata
        insert: []
        update: []
        replace: []
        delete: []
    documents:
      id: google.discoveryengine.documents
      name: documents
      title: Documents
      methods:
        projects_locations_collections_data_stores_branches_documents_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.documents
        projects_locations_collections_data_stores_branches_documents_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.documents
        projects_locations_data_stores_branches_documents_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/documents/methods/projects_locations_collections_data_stores_branches_documents_get
          - $ref: >-
              #/components/x-stackQL-resources/documents/methods/projects_locations_collections_data_stores_branches_documents_list
          - $ref: >-
              #/components/x-stackQL-resources/documents/methods/projects_locations_data_stores_branches_documents_get
          - $ref: >-
              #/components/x-stackQL-resources/documents/methods/projects_locations_data_stores_branches_documents_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/documents/methods/projects_locations_collections_data_stores_branches_documents_create
          - $ref: >-
              #/components/x-stackQL-resources/documents/methods/projects_locations_data_stores_branches_documents_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/documents/methods/projects_locations_collections_data_stores_branches_documents_patch
          - $ref: >-
              #/components/x-stackQL-resources/documents/methods/projects_locations_data_stores_branches_documents_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/documents/methods/projects_locations_collections_data_stores_branches_documents_delete
          - $ref: >-
              #/components/x-stackQL-resources/documents/methods/projects_locations_data_stores_branches_documents_delete
    schemas:
      id: google.discoveryengine.schemas
      name: schemas
      title: Schemas
      methods:
        projects_locations_collections_data_stores_schemas_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schemas
        projects_locations_collections_data_stores_schemas_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_schemas_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_schemas_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_schemas_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_schemas_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schemas
        projects_locations_data_stores_schemas_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_locations_collections_data_stores_schemas_get
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_locations_collections_data_stores_schemas_list
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_locations_data_stores_schemas_get
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_locations_data_stores_schemas_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_locations_collections_data_stores_schemas_create
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_locations_data_stores_schemas_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_locations_collections_data_stores_schemas_patch
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_locations_data_stores_schemas_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_locations_collections_data_stores_schemas_delete
          - $ref: >-
              #/components/x-stackQL-resources/schemas/methods/projects_locations_data_stores_schemas_delete
    custom_models:
      id: google.discoveryengine.custom_models
      name: custom_models
      title: Custom_models
      methods:
        projects_locations_collections_data_stores_custom_models_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1customModels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/custom_models/methods/projects_locations_collections_data_stores_custom_models_list
        insert: []
        update: []
        replace: []
        delete: []
    site_search_engine:
      id: google.discoveryengine.site_search_engine
      name: site_search_engine
      title: Site_search_engine
      methods:
        projects_locations_collections_data_stores_site_search_engine_enable_advanced_site_search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine:enableAdvancedSiteSearch/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_site_search_engine_disable_advanced_site_search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine:disableAdvancedSiteSearch/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_site_search_engine_recrawl_uris:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine:recrawlUris/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_site_search_engine_batch_verify_target_sites:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine:batchVerifyTargetSites/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_site_search_engine_enable_advanced_site_search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1siteSearchEngine:enableAdvancedSiteSearch/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_site_search_engine_disable_advanced_site_search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1siteSearchEngine:disableAdvancedSiteSearch/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_site_search_engine_recrawl_uris:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1siteSearchEngine:recrawlUris/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    site_search_engine_domain_verification_status:
      id: google.discoveryengine.site_search_engine_domain_verification_status
      name: site_search_engine_domain_verification_status
      title: Site_search_engine_domain_verification_status
      methods:
        projects_locations_collections_data_stores_site_search_engine_fetch_domain_verification_status:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine:fetchDomainVerificationStatus/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/site_search_engine_domain_verification_status/methods/projects_locations_collections_data_stores_site_search_engine_fetch_domain_verification_status
        insert: []
        update: []
        replace: []
        delete: []
    search_engine_operations:
      id: google.discoveryengine.search_engine_operations
      name: search_engine_operations
      title: Search_engine_operations
      methods:
        projects_locations_collections_data_stores_site_search_engine_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_collections_data_stores_site_search_engine_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/search_engine_operations/methods/projects_locations_collections_data_stores_site_search_engine_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/search_engine_operations/methods/projects_locations_collections_data_stores_site_search_engine_operations_list
        insert: []
        update: []
        replace: []
        delete: []
    target_sites:
      id: google.discoveryengine.target_sites
      name: target_sites
      title: Target_sites
      methods:
        projects_locations_collections_data_stores_site_search_engine_target_sites_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_site_search_engine_target_sites_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.targetSites
        projects_locations_collections_data_stores_site_search_engine_target_sites_batch_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites:batchCreate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_site_search_engine_target_sites_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1{targetSitesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_site_search_engine_target_sites_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1{targetSitesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_site_search_engine_target_sites_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1{targetSitesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_site_search_engine_target_sites_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_site_search_engine_target_sites_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.targetSites
        projects_locations_data_stores_site_search_engine_target_sites_batch_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites:batchCreate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_site_search_engine_target_sites_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1{targetSitesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_site_search_engine_target_sites_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1{targetSitesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_site_search_engine_target_sites_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1{targetSitesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_collections_data_stores_site_search_engine_target_sites_get
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_collections_data_stores_site_search_engine_target_sites_list
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_data_stores_site_search_engine_target_sites_get
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_data_stores_site_search_engine_target_sites_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_collections_data_stores_site_search_engine_target_sites_create
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_collections_data_stores_site_search_engine_target_sites_batch_create
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_data_stores_site_search_engine_target_sites_create
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_data_stores_site_search_engine_target_sites_batch_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_collections_data_stores_site_search_engine_target_sites_patch
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_data_stores_site_search_engine_target_sites_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_collections_data_stores_site_search_engine_target_sites_delete
          - $ref: >-
              #/components/x-stackQL-resources/target_sites/methods/projects_locations_data_stores_site_search_engine_target_sites_delete
    target_site_operations:
      id: google.discoveryengine.target_site_operations
      name: target_site_operations
      title: Target_site_operations
      methods:
        projects_locations_collections_data_stores_site_search_engine_target_sites_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_collections_data_stores_site_search_engine_target_sites_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/target_site_operations/methods/projects_locations_collections_data_stores_site_search_engine_target_sites_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/target_site_operations/methods/projects_locations_collections_data_stores_site_search_engine_target_sites_operations_list
        insert: []
        update: []
        replace: []
        delete: []
    user_events:
      id: google.discoveryengine.user_events
      name: user_events
      title: User_events
      methods:
        projects_locations_collections_data_stores_user_events_write:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1userEvents:write/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_user_events_collect:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1userEvents:collect/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_user_events_purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1userEvents:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_user_events_import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1userEvents:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_user_events_write:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1userEvents:write/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_user_events_collect:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1userEvents:collect/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_user_events_purge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1userEvents:purge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_user_events_import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1userEvents:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_user_events_write:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1userEvents:write/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_user_events_collect:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1userEvents:collect/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    engines:
      id: google.discoveryengine.engines
      name: engines
      title: Engines
      methods:
        projects_locations_collections_engines_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.engines
        projects_locations_collections_engines_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/engines/methods/projects_locations_collections_engines_get
          - $ref: >-
              #/components/x-stackQL-resources/engines/methods/projects_locations_collections_engines_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/engines/methods/projects_locations_collections_engines_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/engines/methods/projects_locations_collections_engines_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/engines/methods/projects_locations_collections_engines_delete
    grounding_configs:
      id: google.discoveryengine.grounding_configs
      name: grounding_configs
      title: Grounding_configs
      methods:
        projects_locations_grounding_configs_check:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groundingConfigs~1{groundingConfigsId}:check/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    ranking_configs:
      id: google.discoveryengine.ranking_configs
      name: ranking_configs
      title: Ranking_configs
      methods:
        projects_locations_ranking_configs_rank:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1rankingConfigs~1{rankingConfigsId}:rank/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}:provision:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: >-
        Provisions the project resource. During the process, related systems
        will get prepared and initialized. Caller must read the [Terms for data
        use](https://cloud.google.com/retail/data-use-terms), and optionally
        specify in request to provide consent to that service terms.
      operationId: discoveryengine.projects.provision
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ProvisionProjectRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: discoveryengine.projects.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: discoveryengine.projects.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: discoveryengine.projects.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataConnector/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        discoveryengine.projects.locations.collections.dataConnector.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataConnector/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        discoveryengine.projects.locations.collections.dataConnector.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: discoveryengine.projects.locations.collections.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: discoveryengine.projects.locations.collections.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}:completeQuery:
    parameters: *ref_1
    get:
      description: Completes the specified user input with keyword suggestions.
      operationId: discoveryengine.projects.locations.collections.dataStores.completeQuery
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1CompleteQueryResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: queryModel
          schema:
            type: string
        - in: query
          name: userPseudoId
          schema:
            type: string
        - in: query
          name: includeTailSuggestions
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores:
    parameters: *ref_1
    post:
      description: >-
        Creates a DataStore. DataStore is for storing Documents. To serve these
        documents for Search, or Recommendation use case, an Engine needs to be
        created separately.
      operationId: discoveryengine.projects.locations.collections.dataStores.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DataStore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: query
          name: dataStoreId
          schema:
            type: string
        - in: query
          name: createAdvancedSiteSearch
          schema:
            type: boolean
        - in: query
          name: skipDefaultSchemaCreation
          schema:
            type: boolean
    get:
      description: Lists all the DataStores associated with the project.
      operationId: discoveryengine.projects.locations.collections.dataStores.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListDataStoresResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}:
    parameters: *ref_1
    get:
      description: Gets a DataStore.
      operationId: discoveryengine.projects.locations.collections.dataStores.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DataStore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a DataStore.
      operationId: discoveryengine.projects.locations.collections.dataStores.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
    patch:
      description: Updates a DataStore
      operationId: discoveryengine.projects.locations.collections.dataStores.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DataStore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DataStore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}:trainCustomModel:
    parameters: *ref_1
    post:
      description: Trains a custom model.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.trainCustomModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1TrainCustomModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine:
    parameters: *ref_1
    get:
      description: Gets the SiteSearchEngine.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.getSiteSearchEngine
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1SiteSearchEngine
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/models/{modelsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.models.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/models/{modelsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.models.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: discoveryengine.projects.locations.collections.dataStores.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/suggestionDenyListEntries:import:
    parameters: *ref_1
    post:
      description: Imports all SuggestionDenyListEntry for a DataStore.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.suggestionDenyListEntries.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/suggestionDenyListEntries:purge:
    parameters: *ref_1
    post:
      description: Permanently deletes all SuggestionDenyListEntry for a DataStore.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.suggestionDenyListEntries.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/completionSuggestions:import:
    parameters: *ref_1
    post:
      description: Imports CompletionSuggestions for a DataStore.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.completionSuggestions.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/completionSuggestions:purge:
    parameters: *ref_1
    post:
      description: Permanently deletes all CompletionSuggestions for a DataStore.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.completionSuggestions.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/controls:
    parameters: *ref_1
    post:
      description: >-
        Creates a Control. By default 1000 controls are allowed for a data
        store. A request can be submitted to adjust this limit. If the Control
        to create already exists, an ALREADY_EXISTS error is returned.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.controls.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: controlId
          schema:
            type: string
    get:
      description: Lists all Controls by their parent DataStore.
      operationId: discoveryengine.projects.locations.collections.dataStores.controls.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListControlsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/controls/{controlsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a Control. If the Control to delete does not exist, a NOT_FOUND
        error is returned.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.controls.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: controlsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Control. Control action type cannot be changed. If the Control
        to update does not exist, a NOT_FOUND error is returned.
      operationId: discoveryengine.projects.locations.collections.dataStores.controls.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: controlsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Control.
      operationId: discoveryengine.projects.locations.collections.dataStores.controls.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: controlsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/servingConfigs/{servingConfigsId}:search:
    parameters: *ref_1
    post:
      description: Performs a search.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.servingConfigs.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1SearchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/servingConfigs/{servingConfigsId}:answer:
    parameters: *ref_1
    post:
      description: Answer query method.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.servingConfigs.answer
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/servingConfigs/{servingConfigsId}:recommend:
    parameters: *ref_1
    post:
      description: Makes a recommendation, which requires a contextual user event.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.servingConfigs.recommend
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1RecommendRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1RecommendResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/conversations/{conversationsId}:converse:
    parameters: *ref_1
    post:
      description: Converses a conversation.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.conversations.converse
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ConverseConversationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ConverseConversationResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/conversations:
    parameters: *ref_1
    post:
      description: >-
        Creates a Conversation. If the Conversation to create already exists, an
        ALREADY_EXISTS error is returned.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
    get:
      description: Lists all Conversations by their parent DataStore.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/conversations/{conversationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a Conversation. If the Conversation to delete does not exist, a
        NOT_FOUND error is returned.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Conversation. Conversation action type cannot be changed. If
        the Conversation to update does not exist, a NOT_FOUND error is
        returned.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Conversation.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/sessions:
    parameters: *ref_1
    post:
      description: >-
        Creates a Session. If the Session to create already exists, an
        ALREADY_EXISTS error is returned.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.sessions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
    get:
      description: Lists all Sessions by their parent DataStore.
      operationId: discoveryengine.projects.locations.collections.dataStores.sessions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListSessionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/sessions/{sessionsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a Session. If the Session to delete does not exist, a NOT_FOUND
        error is returned.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.sessions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Session. Session action type cannot be changed. If the Session
        to update does not exist, a NOT_FOUND error is returned.
      operationId: discoveryengine.projects.locations.collections.dataStores.sessions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Session.
      operationId: discoveryengine.projects.locations.collections.dataStores.sessions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/sessions/{sessionsId}/answers/{answersId}:
    parameters: *ref_1
    get:
      description: Gets a Answer.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.sessions.answers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Answer'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: path
          name: answersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/batchGetDocumentsMetadata:
    parameters: *ref_1
    get:
      description: >-
        Gets index freshness metadata for Documents. Supported for website
        search only.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.batchGetDocumentsMetadata
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: matcher.urisMatcher.uris
          schema:
            type: string
        - in: query
          name: matcher.fhirMatcher.fhirResources
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents/{documentsId}:
    parameters: *ref_1
    get:
      description: Gets a Document.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.documents.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a Document.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.documents.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a Document.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.documents.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents:
    parameters: *ref_1
    get:
      description: Gets a list of Documents.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.documents.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListDocumentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a Document.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.documents.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: documentId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents:import:
    parameters: *ref_1
    post:
      description: >-
        Bulk import of multiple Documents. Request processing may be
        synchronous. Non-existing items are created. Note: It is possible for a
        subset of the Documents to be successfully updated.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.documents.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ImportDocumentsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents:purge:
    parameters: *ref_1
    post:
      description: >-
        Permanently deletes all selected Documents in a branch. This process is
        asynchronous. Depending on the number of Documents to be deleted, this
        operation can take hours to complete. Before the delete operation
        completes, some Documents might still be returned by
        DocumentService.GetDocument or DocumentService.ListDocuments. To get a
        list of the Documents to be deleted, set PurgeDocumentsRequest.force to
        false.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.branches.documents.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1PurgeDocumentsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/schemas/{schemasId}:
    parameters: *ref_1
    get:
      description: Gets a Schema.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Schema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
    patch:
      description: Updates a Schema.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Schema'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
    delete:
      description: Deletes a Schema.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/schemas:
    parameters: *ref_1
    get:
      description: Gets a list of Schemas.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListSchemasResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a Schema.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Schema'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: schemaId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/schemas/{schemasId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.schemas.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/schemas/{schemasId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.schemas.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/customModels:
    parameters: *ref_1
    get:
      description: Gets a list of all the custom models.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.customModels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListCustomModelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine:enableAdvancedSiteSearch:
    parameters: *ref_1
    post:
      description: Upgrade from basic site search to advanced site search.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.enableAdvancedSiteSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine:disableAdvancedSiteSearch:
    parameters: *ref_1
    post:
      description: Downgrade from advanced site search to basic site search.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.disableAdvancedSiteSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine:recrawlUris:
    parameters: *ref_1
    post:
      description: Request on-demand recrawl for a list of URIs.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.recrawlUris
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1RecrawlUrisRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine:batchVerifyTargetSites:
    parameters: *ref_1
    post:
      description: >-
        Verify target sites' ownership and validity. This API sends all the
        target sites under site search engine for verification.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.batchVerifyTargetSites
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1BatchVerifyTargetSitesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine:fetchDomainVerificationStatus:
    parameters: *ref_1
    get:
      description: >-
        Returns list of target sites with its domain verification status. This
        method can only be called under data store with BASIC_SITE_SEARCH state
        at the moment.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.fetchDomainVerificationStatus
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1FetchDomainVerificationStatusResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/targetSites:
    parameters: *ref_1
    post:
      description: Creates a TargetSite.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
    get:
      description: Gets a list of TargetSites.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListTargetSitesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/targetSites:batchCreate:
    parameters: *ref_1
    post:
      description: Creates TargetSite in a batch.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1BatchCreateTargetSitesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/targetSites/{targetSitesId}:
    parameters: *ref_1
    get:
      description: Gets a TargetSite.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: targetSitesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a TargetSite.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: targetSitesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a TargetSite.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: targetSitesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/targetSites/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/targetSites/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/userEvents:write:
    parameters: *ref_1
    post:
      description: Writes a single user event.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.userEvents.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1UserEvent'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1UserEvent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: writeAsync
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/userEvents:collect:
    parameters: *ref_1
    get:
      description: >-
        Writes a single user event from the browser. This uses a GET request to
        due to browser restriction of POST-ing to a third-party domain. This
        method is used only by the Discovery Engine API JavaScript pixel and
        Google Tag Manager. Users should not call this method directly.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.userEvents.collect
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: userEvent
          schema:
            type: string
        - in: query
          name: uri
          schema:
            type: string
        - in: query
          name: ets
          schema:
            type: string
            format: int64
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/userEvents:purge:
    parameters: *ref_1
    post:
      description: >-
        Deletes permanently all user events specified by the filter provided.
        Depending on the number of events specified by the filter, this
        operation could take hours or days to complete. To test a filter, use
        the list command first.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.userEvents.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1PurgeUserEventsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/userEvents:import:
    parameters: *ref_1
    post:
      description: >-
        Bulk import of user events. Request processing might be synchronous.
        Events that already exist are skipped. Use this method for backfilling
        historical user events. Operation.response is of type ImportResponse.
        Note that it is possible for a subset of the items to be successfully
        inserted. Operation.metadata is of type ImportMetadata.
      operationId: >-
        discoveryengine.projects.locations.collections.dataStores.userEvents.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ImportUserEventsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines:
    parameters: *ref_1
    post:
      description: Creates a Engine.
      operationId: discoveryengine.projects.locations.collections.engines.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Engine'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: query
          name: engineId
          schema:
            type: string
    get:
      description: Lists all the Engines associated with the project.
      operationId: discoveryengine.projects.locations.collections.engines.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListEnginesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}:
    parameters: *ref_1
    delete:
      description: Deletes a Engine.
      operationId: discoveryengine.projects.locations.collections.engines.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
    patch:
      description: Updates an Engine
      operationId: discoveryengine.projects.locations.collections.engines.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Engine'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Engine'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Engine.
      operationId: discoveryengine.projects.locations.collections.engines.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Engine'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: discoveryengine.projects.locations.collections.engines.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: discoveryengine.projects.locations.collections.engines.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/controls:
    parameters: *ref_1
    post:
      description: >-
        Creates a Control. By default 1000 controls are allowed for a data
        store. A request can be submitted to adjust this limit. If the Control
        to create already exists, an ALREADY_EXISTS error is returned.
      operationId: discoveryengine.projects.locations.collections.engines.controls.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: query
          name: controlId
          schema:
            type: string
    get:
      description: Lists all Controls by their parent DataStore.
      operationId: discoveryengine.projects.locations.collections.engines.controls.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListControlsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/controls/{controlsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a Control. If the Control to delete does not exist, a NOT_FOUND
        error is returned.
      operationId: discoveryengine.projects.locations.collections.engines.controls.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: controlsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Control. Control action type cannot be changed. If the Control
        to update does not exist, a NOT_FOUND error is returned.
      operationId: discoveryengine.projects.locations.collections.engines.controls.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: controlsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Control.
      operationId: discoveryengine.projects.locations.collections.engines.controls.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: controlsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/servingConfigs/{servingConfigsId}:search:
    parameters: *ref_1
    post:
      description: Performs a search.
      operationId: >-
        discoveryengine.projects.locations.collections.engines.servingConfigs.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1SearchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/servingConfigs/{servingConfigsId}:answer:
    parameters: *ref_1
    post:
      description: Answer query method.
      operationId: >-
        discoveryengine.projects.locations.collections.engines.servingConfigs.answer
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/servingConfigs/{servingConfigsId}:recommend:
    parameters: *ref_1
    post:
      description: Makes a recommendation, which requires a contextual user event.
      operationId: >-
        discoveryengine.projects.locations.collections.engines.servingConfigs.recommend
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1RecommendRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1RecommendResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/conversations/{conversationsId}:converse:
    parameters: *ref_1
    post:
      description: Converses a conversation.
      operationId: >-
        discoveryengine.projects.locations.collections.engines.conversations.converse
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ConverseConversationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ConverseConversationResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/conversations:
    parameters: *ref_1
    post:
      description: >-
        Creates a Conversation. If the Conversation to create already exists, an
        ALREADY_EXISTS error is returned.
      operationId: >-
        discoveryengine.projects.locations.collections.engines.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
    get:
      description: Lists all Conversations by their parent DataStore.
      operationId: >-
        discoveryengine.projects.locations.collections.engines.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/conversations/{conversationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a Conversation. If the Conversation to delete does not exist, a
        NOT_FOUND error is returned.
      operationId: >-
        discoveryengine.projects.locations.collections.engines.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Conversation. Conversation action type cannot be changed. If
        the Conversation to update does not exist, a NOT_FOUND error is
        returned.
      operationId: >-
        discoveryengine.projects.locations.collections.engines.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Conversation.
      operationId: discoveryengine.projects.locations.collections.engines.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/sessions:
    parameters: *ref_1
    post:
      description: >-
        Creates a Session. If the Session to create already exists, an
        ALREADY_EXISTS error is returned.
      operationId: discoveryengine.projects.locations.collections.engines.sessions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
    get:
      description: Lists all Sessions by their parent DataStore.
      operationId: discoveryengine.projects.locations.collections.engines.sessions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListSessionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/sessions/{sessionsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a Session. If the Session to delete does not exist, a NOT_FOUND
        error is returned.
      operationId: discoveryengine.projects.locations.collections.engines.sessions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Session. Session action type cannot be changed. If the Session
        to update does not exist, a NOT_FOUND error is returned.
      operationId: discoveryengine.projects.locations.collections.engines.sessions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Session.
      operationId: discoveryengine.projects.locations.collections.engines.sessions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/sessions/{sessionsId}/answers/{answersId}:
    parameters: *ref_1
    get:
      description: Gets a Answer.
      operationId: >-
        discoveryengine.projects.locations.collections.engines.sessions.answers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Answer'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: path
          name: answersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/identity_mapping_stores/{identity_mapping_storesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        discoveryengine.projects.locations.identity_mapping_stores.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: identity_mapping_storesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/identity_mapping_stores/{identity_mapping_storesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        discoveryengine.projects.locations.identity_mapping_stores.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: identity_mapping_storesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: discoveryengine.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: discoveryengine.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}:completeQuery:
    parameters: *ref_1
    get:
      description: Completes the specified user input with keyword suggestions.
      operationId: discoveryengine.projects.locations.dataStores.completeQuery
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1CompleteQueryResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: queryModel
          schema:
            type: string
        - in: query
          name: userPseudoId
          schema:
            type: string
        - in: query
          name: includeTailSuggestions
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores:
    parameters: *ref_1
    post:
      description: >-
        Creates a DataStore. DataStore is for storing Documents. To serve these
        documents for Search, or Recommendation use case, an Engine needs to be
        created separately.
      operationId: discoveryengine.projects.locations.dataStores.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DataStore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataStoreId
          schema:
            type: string
        - in: query
          name: createAdvancedSiteSearch
          schema:
            type: boolean
        - in: query
          name: skipDefaultSchemaCreation
          schema:
            type: boolean
    get:
      description: Lists all the DataStores associated with the project.
      operationId: discoveryengine.projects.locations.dataStores.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListDataStoresResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}:
    parameters: *ref_1
    get:
      description: Gets a DataStore.
      operationId: discoveryengine.projects.locations.dataStores.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DataStore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a DataStore.
      operationId: discoveryengine.projects.locations.dataStores.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
    patch:
      description: Updates a DataStore
      operationId: discoveryengine.projects.locations.dataStores.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DataStore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1DataStore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/siteSearchEngine:
    parameters: *ref_1
    get:
      description: Gets the SiteSearchEngine.
      operationId: discoveryengine.projects.locations.dataStores.getSiteSearchEngine
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1SiteSearchEngine
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/models/{modelsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: discoveryengine.projects.locations.dataStores.models.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/models/{modelsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: discoveryengine.projects.locations.dataStores.models.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: discoveryengine.projects.locations.dataStores.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: discoveryengine.projects.locations.dataStores.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/suggestionDenyListEntries:import:
    parameters: *ref_1
    post:
      description: Imports all SuggestionDenyListEntry for a DataStore.
      operationId: >-
        discoveryengine.projects.locations.dataStores.suggestionDenyListEntries.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/suggestionDenyListEntries:purge:
    parameters: *ref_1
    post:
      description: Permanently deletes all SuggestionDenyListEntry for a DataStore.
      operationId: >-
        discoveryengine.projects.locations.dataStores.suggestionDenyListEntries.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/completionSuggestions:import:
    parameters: *ref_1
    post:
      description: Imports CompletionSuggestions for a DataStore.
      operationId: >-
        discoveryengine.projects.locations.dataStores.completionSuggestions.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/completionSuggestions:purge:
    parameters: *ref_1
    post:
      description: Permanently deletes all CompletionSuggestions for a DataStore.
      operationId: >-
        discoveryengine.projects.locations.dataStores.completionSuggestions.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/controls:
    parameters: *ref_1
    post:
      description: >-
        Creates a Control. By default 1000 controls are allowed for a data
        store. A request can be submitted to adjust this limit. If the Control
        to create already exists, an ALREADY_EXISTS error is returned.
      operationId: discoveryengine.projects.locations.dataStores.controls.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: controlId
          schema:
            type: string
    get:
      description: Lists all Controls by their parent DataStore.
      operationId: discoveryengine.projects.locations.dataStores.controls.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListControlsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/controls/{controlsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a Control. If the Control to delete does not exist, a NOT_FOUND
        error is returned.
      operationId: discoveryengine.projects.locations.dataStores.controls.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: controlsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Control. Control action type cannot be changed. If the Control
        to update does not exist, a NOT_FOUND error is returned.
      operationId: discoveryengine.projects.locations.dataStores.controls.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: controlsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Control.
      operationId: discoveryengine.projects.locations.dataStores.controls.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Control'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: controlsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/servingConfigs/{servingConfigsId}:search:
    parameters: *ref_1
    post:
      description: Performs a search.
      operationId: discoveryengine.projects.locations.dataStores.servingConfigs.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1SearchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1SearchResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/servingConfigs/{servingConfigsId}:answer:
    parameters: *ref_1
    post:
      description: Answer query method.
      operationId: discoveryengine.projects.locations.dataStores.servingConfigs.answer
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1AnswerQueryResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/servingConfigs/{servingConfigsId}:recommend:
    parameters: *ref_1
    post:
      description: Makes a recommendation, which requires a contextual user event.
      operationId: discoveryengine.projects.locations.dataStores.servingConfigs.recommend
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1RecommendRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1RecommendResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/conversations/{conversationsId}:converse:
    parameters: *ref_1
    post:
      description: Converses a conversation.
      operationId: discoveryengine.projects.locations.dataStores.conversations.converse
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ConverseConversationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ConverseConversationResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/conversations:
    parameters: *ref_1
    post:
      description: >-
        Creates a Conversation. If the Conversation to create already exists, an
        ALREADY_EXISTS error is returned.
      operationId: discoveryengine.projects.locations.dataStores.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
    get:
      description: Lists all Conversations by their parent DataStore.
      operationId: discoveryengine.projects.locations.dataStores.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/conversations/{conversationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a Conversation. If the Conversation to delete does not exist, a
        NOT_FOUND error is returned.
      operationId: discoveryengine.projects.locations.dataStores.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Conversation. Conversation action type cannot be changed. If
        the Conversation to update does not exist, a NOT_FOUND error is
        returned.
      operationId: discoveryengine.projects.locations.dataStores.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Conversation.
      operationId: discoveryengine.projects.locations.dataStores.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/sessions:
    parameters: *ref_1
    post:
      description: >-
        Creates a Session. If the Session to create already exists, an
        ALREADY_EXISTS error is returned.
      operationId: discoveryengine.projects.locations.dataStores.sessions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
    get:
      description: Lists all Sessions by their parent DataStore.
      operationId: discoveryengine.projects.locations.dataStores.sessions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListSessionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/sessions/{sessionsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a Session. If the Session to delete does not exist, a NOT_FOUND
        error is returned.
      operationId: discoveryengine.projects.locations.dataStores.sessions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a Session. Session action type cannot be changed. If the Session
        to update does not exist, a NOT_FOUND error is returned.
      operationId: discoveryengine.projects.locations.dataStores.sessions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a Session.
      operationId: discoveryengine.projects.locations.dataStores.sessions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Session'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/sessions/{sessionsId}/answers/{answersId}:
    parameters: *ref_1
    get:
      description: Gets a Answer.
      operationId: discoveryengine.projects.locations.dataStores.sessions.answers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Answer'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: path
          name: answersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/batchGetDocumentsMetadata:
    parameters: *ref_1
    get:
      description: >-
        Gets index freshness metadata for Documents. Supported for website
        search only.
      operationId: >-
        discoveryengine.projects.locations.dataStores.branches.batchGetDocumentsMetadata
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: matcher.urisMatcher.uris
          schema:
            type: string
        - in: query
          name: matcher.fhirMatcher.fhirResources
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: discoveryengine.projects.locations.dataStores.branches.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: discoveryengine.projects.locations.dataStores.branches.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: discoveryengine.projects.locations.dataStores.branches.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents/{documentsId}:
    parameters: *ref_1
    get:
      description: Gets a Document.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a Document.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a Document.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents:
    parameters: *ref_1
    get:
      description: Gets a list of Documents.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListDocumentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a Document.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Document'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: documentId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents:import:
    parameters: *ref_1
    post:
      description: >-
        Bulk import of multiple Documents. Request processing may be
        synchronous. Non-existing items are created. Note: It is possible for a
        subset of the Documents to be successfully updated.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ImportDocumentsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents:purge:
    parameters: *ref_1
    post:
      description: >-
        Permanently deletes all selected Documents in a branch. This process is
        asynchronous. Depending on the number of Documents to be deleted, this
        operation can take hours to complete. Before the delete operation
        completes, some Documents might still be returned by
        DocumentService.GetDocument or DocumentService.ListDocuments. To get a
        list of the Documents to be deleted, set PurgeDocumentsRequest.force to
        false.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1PurgeDocumentsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/schemas/{schemasId}:
    parameters: *ref_1
    get:
      description: Gets a Schema.
      operationId: discoveryengine.projects.locations.dataStores.schemas.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Schema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
    patch:
      description: Updates a Schema.
      operationId: discoveryengine.projects.locations.dataStores.schemas.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Schema'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
    delete:
      description: Deletes a Schema.
      operationId: discoveryengine.projects.locations.dataStores.schemas.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/schemas:
    parameters: *ref_1
    get:
      description: Gets a list of Schemas.
      operationId: discoveryengine.projects.locations.dataStores.schemas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListSchemasResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a Schema.
      operationId: discoveryengine.projects.locations.dataStores.schemas.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1Schema'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: schemaId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/siteSearchEngine:enableAdvancedSiteSearch:
    parameters: *ref_1
    post:
      description: Upgrade from basic site search to advanced site search.
      operationId: >-
        discoveryengine.projects.locations.dataStores.siteSearchEngine.enableAdvancedSiteSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/siteSearchEngine:disableAdvancedSiteSearch:
    parameters: *ref_1
    post:
      description: Downgrade from advanced site search to basic site search.
      operationId: >-
        discoveryengine.projects.locations.dataStores.siteSearchEngine.disableAdvancedSiteSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/siteSearchEngine:recrawlUris:
    parameters: *ref_1
    post:
      description: Request on-demand recrawl for a list of URIs.
      operationId: >-
        discoveryengine.projects.locations.dataStores.siteSearchEngine.recrawlUris
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1RecrawlUrisRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/siteSearchEngine/targetSites:
    parameters: *ref_1
    post:
      description: Creates a TargetSite.
      operationId: >-
        discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
    get:
      description: Gets a list of TargetSites.
      operationId: >-
        discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1ListTargetSitesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/siteSearchEngine/targetSites:batchCreate:
    parameters: *ref_1
    post:
      description: Creates TargetSite in a batch.
      operationId: >-
        discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1BatchCreateTargetSitesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/siteSearchEngine/targetSites/{targetSitesId}:
    parameters: *ref_1
    get:
      description: Gets a TargetSite.
      operationId: >-
        discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: targetSitesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a TargetSite.
      operationId: >-
        discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: targetSitesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a TargetSite.
      operationId: >-
        discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: targetSitesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/userEvents:write:
    parameters: *ref_1
    post:
      description: Writes a single user event.
      operationId: discoveryengine.projects.locations.dataStores.userEvents.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1UserEvent'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1UserEvent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: writeAsync
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/userEvents:collect:
    parameters: *ref_1
    get:
      description: >-
        Writes a single user event from the browser. This uses a GET request to
        due to browser restriction of POST-ing to a third-party domain. This
        method is used only by the Discovery Engine API JavaScript pixel and
        Google Tag Manager. Users should not call this method directly.
      operationId: discoveryengine.projects.locations.dataStores.userEvents.collect
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: userEvent
          schema:
            type: string
        - in: query
          name: uri
          schema:
            type: string
        - in: query
          name: ets
          schema:
            type: string
            format: int64
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/userEvents:purge:
    parameters: *ref_1
    post:
      description: >-
        Deletes permanently all user events specified by the filter provided.
        Depending on the number of events specified by the filter, this
        operation could take hours or days to complete. To test a filter, use
        the list command first.
      operationId: discoveryengine.projects.locations.dataStores.userEvents.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1PurgeUserEventsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/userEvents:import:
    parameters: *ref_1
    post:
      description: >-
        Bulk import of user events. Request processing might be synchronous.
        Events that already exist are skipped. Use this method for backfilling
        historical user events. Operation.response is of type ImportResponse.
        Note that it is possible for a subset of the items to be successfully
        inserted. Operation.metadata is of type ImportMetadata.
      operationId: discoveryengine.projects.locations.dataStores.userEvents.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1ImportUserEventsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/groundingConfigs/{groundingConfigsId}:check:
    parameters: *ref_1
    post:
      description: Performs a grounding check.
      operationId: discoveryengine.projects.locations.groundingConfigs.check
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDiscoveryengineV1CheckGroundingRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDiscoveryengineV1CheckGroundingResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groundingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/rankingConfigs/{rankingConfigsId}:rank:
    parameters: *ref_1
    post:
      description: Ranks a list of text records based on the given input query.
      operationId: discoveryengine.projects.locations.rankingConfigs.rank
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1RankRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1RankResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: rankingConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/userEvents:write:
    parameters: *ref_1
    post:
      description: Writes a single user event.
      operationId: discoveryengine.projects.locations.userEvents.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1UserEvent'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1UserEvent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: writeAsync
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/userEvents:collect:
    parameters: *ref_1
    get:
      description: >-
        Writes a single user event from the browser. This uses a GET request to
        due to browser restriction of POST-ing to a third-party domain. This
        method is used only by the Discovery Engine API JavaScript pixel and
        Google Tag Manager. Users should not call this method directly.
      operationId: discoveryengine.projects.locations.userEvents.collect
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: userEvent
          schema:
            type: string
        - in: query
          name: uri
          schema:
            type: string
        - in: query
          name: ets
          schema:
            type: string
            format: int64
