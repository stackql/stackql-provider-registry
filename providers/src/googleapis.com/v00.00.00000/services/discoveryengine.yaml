openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Discovery Engine API
  description: Discovery Engine API.
  version: v1beta
  x-discovery-doc-revision: '20230824'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/discovery-engine/docs'
servers:
  - url: 'https://discoveryengine.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudDiscoveryengineV1betaInterval:
      id: GoogleCloudDiscoveryengineV1betaInterval
      description: A floating point interval.
      properties:
        minimum:
          format: double
          type: number
          description: Inclusive lower bound.
        maximum:
          description: Inclusive upper bound.
          type: number
          format: double
        exclusiveMaximum:
          description: Exclusive upper bound.
          format: double
          type: number
        exclusiveMinimum:
          type: number
          format: double
          description: Exclusive lower bound.
      type: object
    GoogleCloudDiscoveryengineV1alphaPurgeUserEventsMetadata:
      properties:
        failureCount:
          type: string
          description: Count of entries that encountered errors while processing.
          format: int64
        createTime:
          type: string
          format: google-datetime
          description: Operation create time.
        updateTime:
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          format: google-datetime
        successCount:
          type: string
          description: Count of entries that were deleted successfully.
          format: int64
      id: GoogleCloudDiscoveryengineV1alphaPurgeUserEventsMetadata
      type: object
      description: Metadata related to the progress of the PurgeUserEvents operation. This will be returned by the google.longrunning.Operation.metadata field.
    GoogleCloudDiscoveryengineV1CreateSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1CreateSchemaMetadata
      type: object
      properties:
        updateTime:
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          format: google-datetime
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
      description: Metadata for Create Schema LRO.
    GoogleCloudDiscoveryengineV1ImportUserEventsResponse:
      description: 'Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.'
      id: GoogleCloudDiscoveryengineV1ImportUserEventsResponse
      properties:
        unjoinedEventsCount:
          format: int64
          description: 'Count of user events imported, but with Document information not found in the existing Branch.'
          type: string
        errorConfig:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig'
          description: Echoes the destination for the complete errors if this field was set in the request.
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        joinedEventsCount:
          type: string
          description: Count of user events imported with complete existing Documents.
          format: int64
      type: object
    GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse:
      id: GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse
      properties:
        errorConfig:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaImportErrorConfig'
          description: Echoes the destination for the complete errors if this field was set in the request.
        unjoinedEventsCount:
          description: 'Count of user events imported, but with Document information not found in the existing Branch.'
          type: string
          format: int64
        errorSamples:
          description: A sample of errors encountered while processing the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        joinedEventsCount:
          format: int64
          description: Count of user events imported with complete existing Documents.
          type: string
      type: object
      description: 'Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.'
    GoogleCloudDiscoveryengineV1betaSearchInfo:
      type: object
      id: GoogleCloudDiscoveryengineV1betaSearchInfo
      description: Detailed search information.
      properties:
        orderBy:
          description: 'The order in which products are returned, if applicable. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          type: string
        searchQuery:
          description: 'The user''s search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. At least one of search_query or PageInfo.page_category is required for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          type: string
        offset:
          format: int32
          description: 'An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an `INVALID_ARGUMENT` is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          type: integer
    GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion:
      id: GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion
      type: object
      description: Suggestions as search queries.
      properties:
        completableFieldPath:
          type: array
          description: The unique document field paths that serve as the source of this suggestion if it was generated from completable fields. This field is only populated for the document-completable model.
          items:
            type: string
        suggestion:
          description: The suggestion for the query.
          type: string
    GoogleCloudDiscoveryengineV1betaImportUserEventsMetadata:
      id: GoogleCloudDiscoveryengineV1betaImportUserEventsMetadata
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          format: google-datetime
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
        successCount:
          format: int64
          description: Count of entries that were processed successfully.
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
      type: object
      description: Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.
    GoogleCloudDiscoveryengineV1betaListDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1betaListDocumentsResponse
      properties:
        nextPageToken:
          type: string
          description: 'A token that can be sent as ListDocumentsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        documents:
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
          type: array
          description: The Documents.
      description: Response message for DocumentService.ListDocuments method.
      type: object
    GoogleCloudDiscoveryengineV1betaConversation:
      description: External conversation proto definition.
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - COMPLETED
          enumDescriptions:
            - Unknown.
            - Conversation is currently open.
            - Conversation has been completed.
          description: The state of the Conversation.
          type: string
        startTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the conversation started.
        name:
          description: 'Immutable. Fully qualified name `project/*/locations/global/collections/{collection}/dataStore/*/conversations/*`'
          type: string
        userPseudoId:
          description: A unique identifier for tracking users.
          type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversationMessage'
          description: Conversation messages.
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the conversation finished.
      type: object
      id: GoogleCloudDiscoveryengineV1betaConversation
    GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo:
      description: Verification information for target sites in advanced site search.
      properties:
        verifyTime:
          format: google-datetime
          type: string
          description: Latest site verification time.
        siteVerificationState:
          type: string
          enumDescriptions:
            - Defaults to VERIFIED.
            - Site ownership verified.
            - Site ownership pending verification or verification failed.
            - 'Site exempt from verification, e.g. a public website that opens to all.'
          description: Site verification state indicating the ownership and validity.
          enum:
            - SITE_VERIFICATION_STATE_UNSPECIFIED
            - VERIFIED
            - UNVERIFIED
            - EXEMPTED
      id: GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec:
      description: A specification for configuring the extractive content in a search response.
      id: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec
      type: object
      properties:
        maxExtractiveAnswerCount:
          type: integer
          description: 'The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim answer extracted from the original document, which provides a precise and contextually relevant answer to the search query. If the number of matching answers is less than the `max_extractive_answer_count`, return all of the answers. Otherwise, return the `max_extractive_answer_count`. At most one answer is returned for each SearchResult.'
          format: int32
        numNextSegments:
          description: Return at most `num_next_segments` segments after each selected segments.
          type: integer
          format: int32
        returnExtractiveSegmentScore:
          description: Specifies whether to return the confidence score from the extractive segments in each search result. The default value is `false`.
          type: boolean
        maxExtractiveSegmentCount:
          format: int32
          type: integer
          description: 'The max number of extractive segments returned in each search result. Only applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original document that is relevant to the search query, and, in general, more verbose than an extractive answer. The segment could then be used as input for LLMs to generate summaries and answers. If the number of matching segments is less than `max_extractive_segment_count`, return all of the segments. Otherwise, return the `max_extractive_segment_count`.'
        numPreviousSegments:
          format: int32
          description: Specifies whether to also include the adjacent from each selected segments. Return at most `num_previous_segments` segments before each selected segments.
          type: integer
    GoogleCloudDiscoveryengineV1betaUserInfo:
      id: GoogleCloudDiscoveryengineV1betaUserInfo
      type: object
      properties:
        userAgent:
          type: string
          description: 'User agent as included in the HTTP header. The field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This should not be set when using the client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if UserEvent.direct_user_request is set.'
        userId:
          description: 'Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don''t set for anonymous users. Always use a hashed value for this ID. Don''t set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          type: string
      description: Information of an end user.
    GoogleCloudDiscoveryengineV1betaCompletionInfo:
      description: Detailed completion information including completion attribution token and clicked completion info.
      properties:
        selectedPosition:
          description: 'End user selected CompleteQueryResponse.QuerySuggestion.suggestion position, starting from 0.'
          format: int32
          type: integer
        selectedSuggestion:
          type: string
          description: End user selected CompleteQueryResponse.QuerySuggestion.suggestion.
      type: object
      id: GoogleCloudDiscoveryengineV1betaCompletionInfo
    GoogleCloudDiscoveryengineV1betaSchema:
      type: object
      id: GoogleCloudDiscoveryengineV1betaSchema
      properties:
        name:
          description: 'Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.'
          type: string
        structSchema:
          description: The structured representation of the schema.
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
        jsonSchema:
          description: The JSON representation of the schema.
          type: string
      description: Defines the structure and layout of a type of document data.
    GoogleCloudDiscoveryengineV1betaImportErrorConfig:
      id: GoogleCloudDiscoveryengineV1betaImportErrorConfig
      description: Configuration of destination for Import related errors.
      properties:
        gcsPrefix:
          type: string
          description: 'Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.'
      type: object
    GoogleCloudDiscoveryengineV1betaRecommendRequest:
      properties:
        userLabels:
          type: object
          additionalProperties:
            type: string
          description: 'The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.'
        params:
          description: 'Additional domain specific parameters for the recommendations. Allowed values: * `returnDocument`: Boolean. If set to true, the associated Document object will be returned in RecommendResponse.RecommendationResult.document. * `returnScore`: Boolean. If set to true, the recommendation ''score'' corresponding to each returned Document will be set in RecommendResponse.RecommendationResult.metadata. The given ''score'' indicates the probability of a Document conversion given the user''s context and history. * `strictFiltering`: Boolean. True by default. If set to false, the service will return generic (unfiltered) popular Documents instead of empty if your filter blocks all recommendation results. * `diversityLevel`: String. Default empty. If set to be non-empty, then it needs to be one of: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` * `auto-diversity` This gives request-level control and adjusts recommendation results based on Document category.'
          additionalProperties:
            type: any
          type: object
        pageSize:
          format: int32
          type: integer
          description: 'Maximum number of results to return. Set this property to the number of recommendation results needed. If zero, the service will choose a reasonable default. The maximum allowed value is 100. Values above 100 will be coerced to 100.'
        validateOnly:
          type: boolean
          description: 'Use validate only mode for this recommendation query. If set to true, a fake model will be used that returns arbitrary Document IDs. Note that the validate only mode should only be used for testing the API, or if the model is not ready.'
        userEvent:
          description: 'Required. Context about the user, what they are looking at and what action they took to trigger the Recommend request. Note that this user event detail won''t be ingested to userEvent logs. Thus, a separate userEvent write request is required for event logging. Don''t set UserEvent.user_pseudo_id or UserEvent.user_info.user_id to the same fixed ID for different users. If you are trying to receive non-personalized recommendations (not recommended; this can negatively impact model performance), instead set UserEvent.user_pseudo_id to a random unique ID and leave UserEvent.user_info.user_id unset.'
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaUserEvent'
        filter:
          type: string
          description: 'Filter for restricting recommendation results with a length limit of 5,000 characters. Currently, only filter expressions on the `filter_tags` attribute is supported. Examples: * `(filter_tags: ANY("Red", "Blue") OR filter_tags: ANY("Hot", "Cold"))` * `(filter_tags: ANY("Red", "Blue")) AND NOT (filter_tags: ANY("Green"))` If your filter blocks all results, the API will return generic (unfiltered) popular Documents. If you only want results strictly matching the filters, set `strictFiltering` to True in RecommendRequest.params to receive empty results instead. Note that the API will never return Documents with `storageStatus` of `EXPIRED` or `DELETED` regardless of filter choices.'
      description: Request message for Recommend method.
      type: object
      id: GoogleCloudDiscoveryengineV1betaRecommendRequest
    GoogleCloudDiscoveryengineV1alphaTargetSite:
      properties:
        name:
          type: string
          readOnly: true
          description: 'Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.'
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The target site's last updated time.
        siteVerificationInfo:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo'
          readOnly: true
          description: Output only. Site ownership and validity verification status.
        providedUriPattern:
          description: Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
          type: string
        type:
          enum:
            - TYPE_UNSPECIFIED
            - INCLUDE
            - EXCLUDE
          type: string
          enumDescriptions:
            - 'This value is unused. In this case, server behavior defaults to Type.INCLUDE.'
            - Include the target site.
            - Exclude the target site.
          description: 'The type of the target site, e.g. whether the site is to be included or excluded.'
        generatedUriPattern:
          type: string
          description: Output only. This is system-generated based on the provided_uri_pattern.
          readOnly: true
        exactMatch:
          description: 'Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.'
          type: boolean
        failureReason:
          description: Output only. Failure reason.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason'
        indexingStatus:
          readOnly: true
          enum:
            - INDEXING_STATUS_UNSPECIFIED
            - PENDING
            - FAILED
            - SUCCEEDED
            - DELETING
          enumDescriptions:
            - Defaults to SUCCEEDED.
            - The target site is in the update queue and will be picked up by indexing pipeline.
            - The target site fails to be indexed.
            - The target site has been indexed.
            - 'The previously indexed target site has been marked to be deleted. This is a transitioning state which will resulted in either: 1. target site deleted if unindexing is successful; 2. state reverts to SUCCEEDED if the unindexing fails.'
          description: Output only. Indexing status.
          type: string
      id: GoogleCloudDiscoveryengineV1alphaTargetSite
      description: A target site for the SiteSearchEngine.
      type: object
    GoogleLongrunningOperation:
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
      id: GoogleLongrunningOperation
    GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery:
      properties:
        imageBytes:
          description: 'Base64 encoded image bytes. Supported image formats: JPEG, PNG, and BMP.'
          type: string
      type: object
      description: Specifies the image query input.
      id: GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery
    GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec:
      description: Boost specification to boost certain documents.
      type: object
      id: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec
      properties:
        conditionBoostSpecs:
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec'
          type: array
          description: 'Condition boost specifications. If a document matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20.'
    GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource:
      type: object
      properties:
        userEvents:
          description: Required. A list of user events to import. Recommended max of 10k items.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaUserEvent'
      id: GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource
      description: The inline source for the input config for ImportUserEvents method.
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      properties: {}
    GoogleCloudDiscoveryengineV1betaCustomAttribute:
      properties:
        numbers:
          description: 'The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          type: array
          items:
            format: double
            type: number
        text:
          description: 'The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          items:
            type: string
          type: array
      type: object
      id: GoogleCloudDiscoveryengineV1betaCustomAttribute
      description: 'A custom attribute that is not explicitly modeled in a resource, e.g. UserEvent.'
    GoogleCloudDiscoveryengineV1betaConversationContext:
      properties:
        contextDocuments:
          type: array
          items:
            type: string
          description: The current list of documents the user is seeing. It contains the document resource references.
        activeDocument:
          type: string
          description: The current active document the user opened. It contains the document resource reference.
      type: object
      id: GoogleCloudDiscoveryengineV1betaConversationContext
      description: Defines context of the conversation
    GoogleCloudDiscoveryengineV1betaConversationMessage:
      description: Defines a conversation message.
      properties:
        userInput:
          description: User text input.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaTextInput'
        createTime:
          description: Output only. Message creation timestamp.
          format: google-datetime
          readOnly: true
          type: string
        reply:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaReply'
          description: Search reply.
      id: GoogleCloudDiscoveryengineV1betaConversationMessage
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec:
      description: A specification for configuring a summary returned in a search response.
      id: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec
      type: object
      properties:
        includeCitations:
          description: 'Specifies whether to include citations in the summary. The default value is `false`. When this field is set to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is Google Cloud''s fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all data types, works across clouds, and has built-in machine learning and business intelligence, all within a unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the sentence is attributed to both the second and third search results.'
          type: boolean
        ignoreNonSummarySeekingQuery:
          type: boolean
          description: 'Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google employs search-query classification to detect summary-seeking queries. No summary is returned if the search query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not. They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for non-summary seeking queries and return fallback messages instead.'
        summaryResultCount:
          format: int32
          description: 'The number of top results to generate the summary from. If the number of results returned is less than `summaryResultCount`, the summary is generated from all of the results. At most five results can be used to generate a summary.'
          type: integer
        languageCode:
          description: Language code for Summary. Use language tags defined by BCP47.
          type: string
        ignoreAdversarialQuery:
          type: boolean
          description: 'Specifies whether to filter out adversarial queries. The default value is `false`. Google employs search-query classification to detect adversarial queries. No summary is returned if the search query is classified as an adversarial query. For example, a user might ask a question regarding negative comments about the company or submit a query designed to generate unsafe, policy-violating output. If this field is set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead.'
    GoogleCloudDiscoveryengineV1betaDocumentContent:
      id: GoogleCloudDiscoveryengineV1betaDocumentContent
      description: Unstructured data linked to this document.
      type: object
      properties:
        uri:
          description: 'The URI of the content. Only Cloud Storage URIs (e.g. `gs://bucket-name/path/to/file`) are supported. The maximum file size is 100 MB.'
          type: string
        mimeType:
          description: 'The MIME type of the content. Supported types: * `application/pdf` (PDF, only native PDFs are supported for now) * `text/html` (HTML) * `application/vnd.openxmlformats-officedocument.wordprocessingml.document` (DOCX) * `application/vnd.openxmlformats-officedocument.presentationml.presentation` (PPTX) * `text/plain` (TXT) See https://www.iana.org/assignments/media-types/media-types.xhtml.'
          type: string
        rawBytes:
          type: string
          description: 'The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB). Note: As with all `bytes` fields, this field is represented as pure binary in Protocol Buffers and base64-encoded string in JSON. For example, `abc123!?$*&()''-=@~` should be represented as `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json.'
          format: byte
    GoogleCloudDiscoveryengineV1ImportDocumentsMetadata:
      type: object
      properties:
        successCount:
          format: int64
          description: Count of entries that were processed successfully.
          type: string
        updateTime:
          format: google-datetime
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
        createTime:
          type: string
          description: Operation create time.
          format: google-datetime
        failureCount:
          type: string
          description: Count of entries that encountered errors while processing.
          format: int64
      description: Metadata related to the progress of the ImportDocuments operation. This is returned by the google.longrunning.Operation.metadata field.
      id: GoogleCloudDiscoveryengineV1ImportDocumentsMetadata
    GoogleCloudDiscoveryengineV1betaPageInfo:
      properties:
        pageviewId:
          description: 'A unique ID of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageview_id` property should be kept the same for all these events so that they can be grouped together properly. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.'
          type: string
        referrerUri:
          type: string
          description: 'The referrer URL of the current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. However, some browser privacy restrictions may cause this field to be empty.'
        uri:
          description: 'Complete URL (window.location.href) of the user''s current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. Maximum length 5,000 characters.'
          type: string
        pageCategory:
          description: 'The most specific category associated with a category page. To represent full path of category, use ''>'' sign to separate different hierarchies. If ''>'' is part of the category name, please replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: `"pageCategory" : "Sales > 2017 Black Friday Deals"`. Required for `view-category-page` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          type: string
      id: GoogleCloudDiscoveryengineV1betaPageInfo
      type: object
      description: Detailed page information.
    GoogleCloudDiscoveryengineV1betaDeleteSchemaMetadata:
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        updateTime:
          format: google-datetime
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          type: string
      type: object
      description: Metadata for DeleteSchema LRO.
      id: GoogleCloudDiscoveryengineV1betaDeleteSchemaMetadata
    GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute:
      type: object
      properties:
        attributeKey:
          description: Attribute key used to refine the results e.g. 'movie_type'.
          type: string
        attributeValue:
          description: Attribute value used to refine the results e.g. 'drama'.
          type: string
      description: Useful attribute for search result refinements.
      id: GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute
    GoogleCloudDiscoveryengineV1betaReply:
      type: object
      properties:
        references:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaReplyReference'
          deprecated: true
          description: References in the reply.
        summary:
          description: Summary based on search results.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSummary'
        reply:
          description: 'DEPRECATED: use `summary` instead. Text reply.'
          deprecated: true
          type: string
      id: GoogleCloudDiscoveryengineV1betaReply
      description: Defines a reply message to user.
    GoogleCloudDiscoveryengineV1betaImportUserEventsRequest:
      type: object
      description: Request message for the ImportUserEvents request.
      id: GoogleCloudDiscoveryengineV1betaImportUserEventsRequest
      properties:
        errorConfig:
          description: The desired location of errors incurred during the Import. Cannot be set for inline user event imports.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig'
        gcsSource:
          description: Cloud Storage location for the input content.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaGcsSource'
        bigquerySource:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaBigQuerySource'
          description: BigQuery input source.
        inlineSource:
          description: The Inline source for the input content for UserEvents.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource'
    GoogleCloudDiscoveryengineV1PurgeDocumentsMetadata:
      properties:
        updateTime:
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          type: string
          format: google-datetime
        successCount:
          description: Count of entries that were deleted successfully.
          format: int64
          type: string
        createTime:
          format: google-datetime
          description: Operation create time.
          type: string
        failureCount:
          type: string
          description: Count of entries that encountered errors while processing.
          format: int64
      type: object
      description: Metadata related to the progress of the PurgeDocuments operation. This will be returned by the google.longrunning.Operation.metadata field.
      id: GoogleCloudDiscoveryengineV1PurgeDocumentsMetadata
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec:
      properties:
        referenceOnly:
          type: boolean
          description: '[DEPRECATED] This field is deprecated and will have no affect on the snippet.'
          deprecated: true
        maxSnippetCount:
          deprecated: true
          description: '[DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards compatibility, we will return snippet if max_snippet_count > 0.'
          format: int32
          type: integer
        returnSnippet:
          type: boolean
          description: 'If `true`, then return snippet. If no snippet can be generated, we return "No snippet is available for this page." A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.'
      type: object
      id: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec
      description: A specification for configuring snippets in a search response.
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec
      properties:
        snippetSpec:
          description: 'If `snippetSpec` is not specified, snippets are not included in the search response.'
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec'
        extractiveContentSpec:
          description: 'If there is no extractive_content_spec provided, there will be no extractive answer in the search response.'
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec'
        summarySpec:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec'
          description: 'If `summarySpec` is not specified, summaries are not included in the search response.'
      description: A specification for configuring the behavior of content search.
      type: object
    GoogleCloudDiscoveryengineV1alphaDeleteSchemaMetadata:
      type: object
      description: Metadata for DeleteSchema LRO.
      properties:
        updateTime:
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          type: string
          format: google-datetime
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
      id: GoogleCloudDiscoveryengineV1alphaDeleteSchemaMetadata
    GoogleCloudDiscoveryengineV1betaDocument:
      id: GoogleCloudDiscoveryengineV1betaDocument
      type: object
      description: Document captures all raw metadata information of items to be recommended or searched.
      properties:
        schemaId:
          description: The identifier of the schema located in the same data store.
          type: string
        parentDocumentId:
          type: string
          description: 'The identifier of the parent document. Currently supports at most two level document hierarchy. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.'
        jsonData:
          description: The JSON string representation of the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
          type: string
        derivedStructData:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
          description: Output only. This field is OUTPUT_ONLY. It contains derived data that are not in the original input document.
          readOnly: true
        structData:
          description: The structured JSON data for the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        id:
          description: 'Immutable. The identifier of the document. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.'
          type: string
        content:
          description: The unstructured data linked to this document. Content must be set if this document is under a `CONTENT_REQUIRED` data store.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentContent'
        name:
          type: string
          description: 'Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.'
    GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey:
      properties:
        caseInsensitive:
          type: boolean
          description: True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
        prefixes:
          description: 'Only get facet values that start with the given string prefix. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to "Action", the "category" facet only contains "Action > 2022" and "Action > 2021". Only supported on textual fields. Maximum is 10.'
          type: array
          items:
            type: string
        intervals:
          description: Set only if values should be bucketed into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 30.
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaInterval'
          type: array
        key:
          type: string
          description: 'Required. Supported textual and numerical facet keys in Document object, over which the facet values are computed. Facet key is case-sensitive.'
        restrictedValues:
          items:
            type: string
          type: array
          description: 'Only get facet for the given restricted values. Only supported on textual fields. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "restricted_values" to "Action > 2022", the "category" facet only contains "Action > 2022". Only supported on textual fields. Maximum is 10.'
        contains:
          description: 'Only get facet values that contains the given strings. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "contains" to "2022", the "category" facet only contains "Action > 2022" and "Sci-Fi > 2022". Only supported on textual fields. Maximum is 10.'
          items:
            type: string
          type: array
        orderBy:
          type: string
          description: 'The order in which documents are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals.'
      id: GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey
      description: Specifies how a facet is computed.
      type: object
    GoogleCloudDiscoveryengineV1betaDoubleList:
      properties:
        values:
          items:
            format: double
            type: number
          type: array
          description: Double values.
      id: GoogleCloudDiscoveryengineV1betaDoubleList
      description: Double list.
      type: object
    GoogleCloudDiscoveryengineV1betaListSchemasResponse:
      id: GoogleCloudDiscoveryengineV1betaListSchemasResponse
      type: object
      properties:
        nextPageToken:
          description: 'A token that can be sent as ListSchemasRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        schemas:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema'
          description: The Schemas.
      description: Response message for SchemaService.ListSchemas method.
    GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason:
      id: GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason
      properties:
        quotaFailure:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure'
          description: Failed due to insufficient quota.
      description: Site search indexing failure reasons.
      type: object
    GoogleCloudDiscoveryengineV1alphaImportDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1alphaImportDocumentsResponse
      properties:
        errorSamples:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: A sample of errors encountered while processing the request.
          type: array
        errorConfig:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaImportErrorConfig'
          description: Echoes the destination for the complete errors in the request if set.
      type: object
      description: 'Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.'
    GoogleCloudDiscoveryengineV1betaSearchRequest:
      id: GoogleCloudDiscoveryengineV1betaSearchRequest
      properties:
        offset:
          format: int32
          type: integer
          description: 'A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the Documents deemed by the API as relevant) in search results. This field is only considered if page_token is unset. If this field is negative, an `INVALID_ARGUMENT` is returned.'
        contentSearchSpec:
          description: A specification for configuring the behavior of content search.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec'
        facetSpecs:
          description: 'Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec'
          type: array
        query:
          description: Raw search query.
          type: string
        orderBy:
          description: 'The order in which documents are returned. Documents can be ordered by a field in an Document object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.'
          type: string
        safeSearch:
          type: boolean
          description: Whether to turn on safe search. This is only supported for website search.
        boostSpec:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec'
          description: Boost specification to boost certain documents.
        userPseudoId:
          description: 'A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          type: string
        embeddingSpec:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec'
          description: 'Uses the provided embedding to do additional semantic document retrieval. The retrieval is based on the dot product of SearchRequest.embedding_spec.embedding_vectors.vector and the document embedding that is provided in SearchRequest.embedding_spec.embedding_vectors.field_path. If SearchRequest.embedding_spec.embedding_vectors.field_path is not provided, it will use ServingConfig.embedding_config.field_paths.'
        pageToken:
          description: 'A page token received from a previous SearchService.Search call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SearchService.Search must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          type: string
        pageSize:
          format: int32
          description: 'Maximum number of Documents to return. If unspecified, defaults to a reasonable value. The maximum allowed value is 100. Values above 100 are coerced to 100. If this field is negative, an `INVALID_ARGUMENT` is returned.'
          type: integer
        params:
          additionalProperties:
            type: any
          description: 'Additional search parameters. For public website search only, supported values are: * `user_country_code`: string. Default empty. If set to non-empty, results are restricted or boosted based on the location provided. * `search_type`: double. Default empty. Enables non-webpage searching depending on the value. The only valid non-default value is 1, which enables image searching.'
          type: object
        filter:
          description: 'The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.'
          type: string
        branch:
          description: 'The branch resource name, such as `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`. Use `default_branch` as the branch ID or leave this field empty, to search documents under the default branch.'
          type: string
        rankingExpression:
          description: 'The ranking expression controls the customized ranking on retrieval documents. This overrides ServingConfig.ranking_expression. The ranking expression is a single function or multiple functions that are joint by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path) Function variables: `relevance_score`: pre-defined keywords, used for measure relevance between query and document. `embedding_field_path`: the document embedding field used with query embedding vector. `dotProduct`: embedding function between embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.'
          type: string
        imageQuery:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery'
          description: Raw image query.
        userLabels:
          description: 'The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.'
          additionalProperties:
            type: string
          type: object
        queryExpansionSpec:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec'
          description: The query expansion specification that specifies the conditions under which query expansion occurs.
        userInfo:
          description: Information about the end user. Highly recommended for analytics. UserInfo.user_agent is used to deduce `device_type` for analytics.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaUserInfo'
        spellCorrectionSpec:
          description: The spell correction specification that specifies the mode under which spell correction takes effect.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec'
      description: Request message for SearchService.Search method.
      type: object
    GoogleLongrunningListOperationsResponse:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: A list of operations that matches the specified filter in the request.
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
      description: The response message for Operations.ListOperations.
      id: GoogleLongrunningListOperationsResponse
    GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse:
      properties:
        purgeCount:
          description: The total count of events purged as a result of the operation.
          format: int64
          type: string
      id: GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse
      type: object
      description: 'Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.'
    GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult:
      description: Guided search result. The guided search helps user to refine the search results and narrow down to the real needs from a broaded search results.
      type: object
      id: GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult
      properties:
        refinementAttributes:
          type: array
          description: A list of ranked refinement attributes.
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute'
        followUpQuestions:
          items:
            type: string
          description: Suggested follow-up questions.
          type: array
    GoogleCloudDiscoveryengineV1betaTextInput:
      id: GoogleCloudDiscoveryengineV1betaTextInput
      properties:
        input:
          description: Text input.
          type: string
        context:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversationContext'
          description: Conversation context of the input.
      description: Defines text input.
      type: object
    GoogleCloudDiscoveryengineV1alphaCreateSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1alphaCreateSchemaMetadata
      type: object
      properties:
        updateTime:
          format: google-datetime
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Operation create time.
      description: Metadata for Create Schema LRO.
    GoogleCloudDiscoveryengineV1betaImportDocumentsMetadata:
      type: object
      properties:
        successCount:
          description: Count of entries that were processed successfully.
          format: int64
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        createTime:
          format: google-datetime
          description: Operation create time.
          type: string
        updateTime:
          format: google-datetime
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          type: string
      id: GoogleCloudDiscoveryengineV1betaImportDocumentsMetadata
      description: Metadata related to the progress of the ImportDocuments operation. This is returned by the google.longrunning.Operation.metadata field.
    GoogleCloudDiscoveryengineV1alphaUpdateSchemaMetadata:
      type: object
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          format: google-datetime
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          type: string
      id: GoogleCloudDiscoveryengineV1alphaUpdateSchemaMetadata
      description: Metadata for UpdateSchema LRO.
    GoogleCloudDiscoveryengineV1alphaSchema:
      description: Defines the structure and layout of a type of document data.
      id: GoogleCloudDiscoveryengineV1alphaSchema
      properties:
        fieldConfigs:
          type: array
          readOnly: true
          description: Output only. Configurations for fields of the schema.
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaFieldConfig'
        structSchema:
          description: The structured representation of the schema.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        jsonSchema:
          type: string
          description: The JSON representation of the schema.
        name:
          type: string
          description: 'Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.'
      type: object
    GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult:
      id: GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult
      type: object
      properties:
        metadata:
          additionalProperties:
            type: any
          description: 'Additional Document metadata / annotations. Possible values: * `score`: Recommendation score in double value. Is set if `returnScore` is set to true in RecommendRequest.params.'
          type: object
        document:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
          description: Set if `returnDocument` is set to true in RecommendRequest.params.
        id:
          description: Resource ID of the recommended Document.
          type: string
      description: RecommendationResult represents a generic recommendation result with associated metadata.
    GoogleCloudDiscoveryengineV1betaRecommendResponse:
      id: GoogleCloudDiscoveryengineV1betaRecommendResponse
      type: object
      description: Response message for Recommend method.
      properties:
        attributionToken:
          description: 'A unique attribution token. This should be included in the UserEvent logs resulting from this recommendation, which enables accurate attribution of recommendation model performance.'
          type: string
        validateOnly:
          description: True if RecommendRequest.validate_only was set.
          type: boolean
        missingIds:
          description: IDs of documents in the request that were missing from the default Branch associated with the requested ServingConfig.
          items:
            type: string
          type: array
        results:
          type: array
          description: A list of recommended Documents. The order represents the ranking (from the most relevant Document to the least).
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult'
    GoogleTypeDate:
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      id: GoogleTypeDate
      properties:
        year:
          type: integer
          format: int32
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
        day:
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          format: int32
          type: integer
        month:
          type: integer
          format: int32
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
      type: object
    GoogleCloudDiscoveryengineV1betaGcsSource:
      type: object
      description: Cloud Storage location for input content.
      id: GoogleCloudDiscoveryengineV1betaGcsSource
      properties:
        dataSchema:
          description: 'The schema to use when parsing the data from the source. Supported values for document imports: * `document` (default): One JSON Document per line. Each document must have a valid Document.id. * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by `input_uris` becomes a document, with the ID set to the first 128 bits of SHA256(URI) encoded as a hex string. * `custom`: One custom data JSON per row in arbitrary format that conforms to the defined Schema of the data store. This can only be used by Gen App Builder. * `csv`: A CSV file with header conforming to the defined Schema of the data store. Each entry after the header is imported as a Document. This can only be used by Gen App Builder. Supported values for user even imports: * `user_event` (default): One JSON UserEvent per line.'
          type: string
        inputUris:
          items:
            type: string
          type: array
          description: 'Required. Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern matching one or more files, such as `gs://bucket/directory/*.json`. A request can contain at most 100 files (or 100,000 files if `data_schema` is `content`). Each file can be up to 2 GB (or 100 MB if `data_schema` is `content`).'
    GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec
      description: The specification that uses customized query embedding vector to do semantic document retrieval.
      type: object
      properties:
        embeddingVectors:
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector'
          description: The embedding vector used for retrieval. Limit to 1.
          type: array
    GoogleCloudDiscoveryengineV1alphaPurgeDocumentsResponse:
      description: 'Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.'
      id: GoogleCloudDiscoveryengineV1alphaPurgeDocumentsResponse
      type: object
      properties:
        purgeCount:
          description: The total count of documents purged as a result of the operation.
          type: string
          format: int64
        purgeSample:
          description: A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.
          items:
            type: string
          type: array
    GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest:
      type: object
      description: Request message for DocumentService.PurgeDocuments method.
      properties:
        filter:
          type: string
          description: Required. Filter matching documents to purge. Only currently supported value is `*` (all items).
        force:
          type: boolean
          description: 'Actually performs the purge. If `force` is set to false, return the expected purge count without deleting any documents.'
      id: GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest
    GoogleCloudDiscoveryengineV1betaBigQuerySource:
      type: object
      description: BigQuery source import data from.
      properties:
        tableId:
          description: 'Required. The BigQuery table to copy the data from with a length limit of 1,024 characters.'
          type: string
        datasetId:
          description: 'Required. The BigQuery data set to copy the data from with a length limit of 1,024 characters.'
          type: string
        projectId:
          type: string
          description: 'The project ID (can be project # or ID) that the BigQuery source is in with a length limit of 128 characters. If not specified, inherits the project ID from the parent request.'
        dataSchema:
          type: string
          description: 'The schema to use when parsing the data from the source. Supported values for user event imports: * `user_event` (default): One UserEvent per row. Supported values for document imports: * `document` (default): One Document format per row. Each document must have a valid Document.id and one of Document.json_data or Document.struct_data. * `custom`: One custom data per row in arbitrary format that conforms to the defined Schema of the data store. This can only be used by Gen App Builder.'
        partitionDate:
          $ref: '#/components/schemas/GoogleTypeDate'
          description: BigQuery time partitioned table's _PARTITIONDATE in YYYY-MM-DD format.
        gcsStagingDir:
          type: string
          description: 'Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory.'
      id: GoogleCloudDiscoveryengineV1betaBigQuerySource
    GoogleCloudDiscoveryengineV1betaSearchResponseFacet:
      properties:
        key:
          description: 'The key for this facet. E.g., "colors" or "price". It matches SearchRequest.FacetSpec.FacetKey.key.'
          type: string
        dynamicFacet:
          type: boolean
          description: Whether the facet is dynamically generated.
        values:
          description: The facet values for this field.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue'
      id: GoogleCloudDiscoveryengineV1betaSearchResponseFacet
      type: object
      description: A facet result.
    GoogleCloudDiscoveryengineV1alphaImportUserEventsMetadata:
      id: GoogleCloudDiscoveryengineV1alphaImportUserEventsMetadata
      description: Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          format: google-datetime
          description: Operation create time.
          type: string
        successCount:
          description: Count of entries that were processed successfully.
          type: string
          format: int64
        updateTime:
          format: google-datetime
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
        failureCount:
          description: Count of entries that encountered errors while processing.
          type: string
          format: int64
      type: object
    GoogleCloudDiscoveryengineV1betaCreateSchemaMetadata:
      type: object
      id: GoogleCloudDiscoveryengineV1betaCreateSchemaMetadata
      description: Metadata for Create Schema LRO.
      properties:
        updateTime:
          type: string
          format: google-datetime
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
        createTime:
          type: string
          format: google-datetime
          description: Operation create time.
    GoogleCloudDiscoveryengineV1betaMediaInfo:
      id: GoogleCloudDiscoveryengineV1betaMediaInfo
      description: Media-specific user event information.
      properties:
        mediaProgressDuration:
          type: string
          description: 'The media progress time in seconds, if applicable. For example, if the end user has finished 90 seconds of a playback video, then MediaInfo.media_progress_duration.seconds should be set to 90.'
          format: google-duration
        mediaProgressPercentage:
          type: number
          format: float
          description: 'Media progress should be computed using only the media_progress_duration relative to the media total length. This value must be between `[0, 1.0]` inclusive. If this is not a playback or the progress cannot be computed (e.g. ongoing livestream), this field should be unset.'
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue:
      properties:
        value:
          description: 'Text value of a facet, such as "Black" for facet "colors".'
          type: string
        interval:
          description: 'Interval value for a facet, such as 10, 20) for facet "price". It matches [SearchRequest.FacetSpec.FacetKey.intervals.'
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaInterval'
        count:
          type: string
          format: int64
          description: Number of items that have this facet value.
      description: A facet value which contains value names and their count.
      type: object
      id: GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue
    GoogleCloudDiscoveryengineV1betaPanelInfo:
      id: GoogleCloudDiscoveryengineV1betaPanelInfo
      properties:
        panelPosition:
          type: integer
          description: 'The ordered position of the panel, if shown to the user with other panels. If set, then total_panels must also be set.'
          format: int32
        totalPanels:
          description: 'The total number of panels, including this one, shown to the user. Must be set if panel_position is set.'
          format: int32
          type: integer
        displayName:
          description: The display name of the panel.
          type: string
        panelId:
          type: string
          description: Required. The panel ID.
      type: object
      description: Detailed panel information associated with a user event.
    GoogleCloudDiscoveryengineV1betaCompleteQueryResponse:
      id: GoogleCloudDiscoveryengineV1betaCompleteQueryResponse
      description: Response message for CompletionService.CompleteQuery method.
      properties:
        tailMatchTriggered:
          description: 'True if the returned suggestions are all tail suggestions. For tail matching to be triggered, include_tail_suggestions in the request must be true and there must be no suggestions that match the full query.'
          type: boolean
        querySuggestions:
          type: array
          description: Results of the matched query suggestions. The result list is ordered and the first result is a top suggestion.
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion'
      type: object
    GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure:
      type: object
      id: GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure
      properties:
        totalRequiredQuota:
          type: string
          description: This number is an estimation on how much total quota this project needs to successfully complete indexing.
          format: int64
    GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo:
      properties:
        pinnedResultCount:
          type: string
          format: int64
          description: Number of pinned results. This field will only be set when expansion happens and SearchRequest.QueryExpansionSpec.pin_unexpanded_results is set to true.
        expandedQuery:
          description: Bool describing whether query expansion has occurred.
          type: boolean
      type: object
      id: GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo
      description: Information describing query expansion including whether expansion has occurred.
    GoogleCloudDiscoveryengineV1betaConverseConversationRequest:
      properties:
        conversation:
          description: The conversation to be used by auto session only. The name field will be ignored as we automatically assign new name for the conversation in auto session.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
        query:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaTextInput'
          description: Required. Current user input.
        userLabels:
          description: 'The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.'
          type: object
          additionalProperties:
            type: string
        servingConfig:
          type: string
          description: 'The resource name of the Serving Config to use. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/servingConfigs/{serving_config_id}` If this is not set, the default serving config will be used.'
        safeSearch:
          type: boolean
          description: Whether to turn on safe search.
      id: GoogleCloudDiscoveryengineV1betaConverseConversationRequest
      description: Request message for ConversationalSearchService.ConverseConversation method.
      type: object
    GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource:
      description: The inline source for the input config for ImportDocuments method.
      id: GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
          description: Required. A list of documents to update/create. Each document must have a valid Document.id. Recommended max of 100 items.
    GoogleCloudDiscoveryengineV1UpdateSchemaMetadata:
      id: GoogleCloudDiscoveryengineV1UpdateSchemaMetadata
      description: Metadata for UpdateSchema LRO.
      properties:
        updateTime:
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          format: google-datetime
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec:
      id: GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec
      description: A facet specification to perform faceted search.
      properties:
        facetKey:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey'
          description: Required. The facet key specification.
        enableDynamicPosition:
          type: boolean
          description: 'Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined automatically. If dynamic facets are enabled, it is ordered together. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it''s not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined automatically. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enabled, which generates a facet `gender`. Then the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how API orders "gender" and "rating" facets. However, notice that "price" and "brands" are always ranked at first and second position because their enable_dynamic_position is false.'
        excludedFilterKeys:
          type: array
          description: 'List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 documents with the color facet "Red" and 200 documents with the color facet "Blue". A query containing the filter "color:ANY("Red")" and having "color" as FacetKey.key would by default return only "Red" documents in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue documents available, "Blue" would not be shown as an available facet value. If "color" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "color" key is now excluded from the filter. Because this field doesn''t affect search results, the search results are still correctly filtered to return only "Red" documents. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.'
          items:
            type: string
        limit:
          format: int32
          description: 'Maximum of facet values that should be returned for this facet. If unspecified, defaults to 20. The maximum allowed value is 300. Values above 300 are coerced to 300. If this field is negative, an `INVALID_ARGUMENT` is returned.'
          type: integer
      type: object
    GoogleCloudDiscoveryengineLoggingHttpRequestContext:
      properties:
        responseStatusCode:
          description: The HTTP response status code for the request.
          type: integer
          format: int32
      type: object
      id: GoogleCloudDiscoveryengineLoggingHttpRequestContext
      description: HTTP request data that is related to a reported error.
    GoogleCloudDiscoveryengineLoggingErrorContext:
      type: object
      description: A description of the context in which an error occurred.
      id: GoogleCloudDiscoveryengineLoggingErrorContext
      properties:
        httpRequest:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineLoggingHttpRequestContext'
          description: The HTTP request which was processed when the error was triggered.
        reportLocation:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineLoggingSourceLocation'
          description: 'The location in the source code where the decision was made to report the error, usually the place where it was logged.'
    GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult:
      description: Represents the search results.
      properties:
        document:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
          description: The document data snippet in the search response. Only fields that are marked as retrievable are populated.
        id:
          type: string
          description: Document.id of the searched Document.
        modelScores:
          description: Google provided available scores.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDoubleList'
      type: object
      id: GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult
    GoogleCloudDiscoveryengineV1betaPurgeDocumentsMetadata:
      properties:
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
        failureCount:
          format: int64
          description: Count of entries that encountered errors while processing.
          type: string
        successCount:
          format: int64
          type: string
          description: Count of entries that were deleted successfully.
        updateTime:
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          format: google-datetime
      description: Metadata related to the progress of the PurgeDocuments operation. This will be returned by the google.longrunning.Operation.metadata field.
      type: object
      id: GoogleCloudDiscoveryengineV1betaPurgeDocumentsMetadata
    GoogleCloudDiscoveryengineV1betaReplyReference:
      description: Defines reference in reply.
      id: GoogleCloudDiscoveryengineV1betaReplyReference
      properties:
        start:
          type: integer
          description: Anchor text start index.
          format: int32
        anchorText:
          description: Anchor text.
          type: string
        uri:
          description: URI link reference.
          type: string
        end:
          description: Anchor text end index.
          format: int32
          type: integer
      type: object
      deprecated: true
    GoogleCloudDiscoveryengineV1betaListConversationsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'Pagination token, if not returned indicates the last page.'
        conversations:
          description: All the Conversations for a given data store.
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
          type: array
      description: Response for ListConversations method.
      id: GoogleCloudDiscoveryengineV1betaListConversationsResponse
      type: object
    GoogleCloudDiscoveryengineV1alphaPurgeDocumentsMetadata:
      description: Metadata related to the progress of the PurgeDocuments operation. This will be returned by the google.longrunning.Operation.metadata field.
      id: GoogleCloudDiscoveryengineV1alphaPurgeDocumentsMetadata
      properties:
        successCount:
          type: string
          format: int64
          description: Count of entries that were deleted successfully.
        failureCount:
          format: int64
          description: Count of entries that encountered errors while processing.
          type: string
        updateTime:
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          format: google-datetime
        createTime:
          format: google-datetime
          description: Operation create time.
          type: string
      type: object
    GoogleCloudDiscoveryengineLoggingImportErrorContext:
      description: 'The error payload that is populated on LRO import APIs, including the following: * `google.cloud.discoveryengine.v1alpha.DocumentService.ImportDocuments` * `google.cloud.discoveryengine.v1alpha.UserEventService.ImportUserEvents`'
      properties:
        document:
          type: string
          description: The detailed content which caused the error on importing a document.
        lineNumber:
          type: string
          description: Line number of the content in file. Should be empty for permission or batch operation error.
        userEvent:
          type: string
          description: The detailed content which caused the error on importing a user event.
        gcsPath:
          description: Google Cloud Storage file path of the import source. Can be set for batch operation error.
          type: string
        operation:
          description: The operation resource name of the LRO.
          type: string
      id: GoogleCloudDiscoveryengineLoggingImportErrorContext
      type: object
    GoogleCloudDiscoveryengineV1betaUpdateSchemaMetadata:
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          type: string
          format: google-datetime
      type: object
      id: GoogleCloudDiscoveryengineV1betaUpdateSchemaMetadata
      description: Metadata for UpdateSchema LRO.
    GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec:
      properties:
        mode:
          enumDescriptions:
            - 'Unspecified spell correction mode. In this case, server behavior defaults to Mode.AUTO.'
            - Search API will try to find a spell suggestion if there is any and put in the SearchResponse.corrected_query. The spell suggestion will not be used as the search query.
            - Automatic spell correction built by the Search API. Search will be based on the corrected query if found.
          description: The mode under which spell correction should take effect to replace the original search query. Default to Mode.AUTO.
          type: string
          enum:
            - MODE_UNSPECIFIED
            - SUGGESTION_ONLY
            - AUTO
      type: object
      description: The specification for query spell correction.
      id: GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec
    GoogleCloudDiscoveryengineV1alphaImportErrorConfig:
      id: GoogleCloudDiscoveryengineV1alphaImportErrorConfig
      properties:
        gcsPrefix:
          description: 'Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.'
          type: string
      type: object
      description: Configuration of destination for Import related errors.
    GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec:
      type: object
      description: Boost applies to documents which match a condition.
      properties:
        condition:
          type: string
          description: 'An expression which specifies a boost condition. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost documents with document ID "doc_1" or "doc_2", and color "Red" or "Blue": * (id: ANY("doc_1", "doc_2")) AND (color: ANY("Red","Blue"))'
        boost:
          format: float
          description: 'Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the document a big promotion. However, it does not necessarily mean that the boosted document will be the top result at all times, nor that other documents will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant documents. Setting to -1.0 gives the document a big demotion. However, results that are deeply relevant might still be shown. The document will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.'
          type: number
      id: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec
    GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesResponse:
      type: object
      properties:
        targetSites:
          type: array
          description: TargetSites created.
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1alphaTargetSite'
      description: Response message for SiteSearchEngineService.BatchCreateTargetSites method.
      id: GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesResponse
    GoogleCloudDiscoveryengineV1betaImportDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1betaImportDocumentsResponse
      properties:
        errorSamples:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: A sample of errors encountered while processing the request.
        errorConfig:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig'
          description: Echoes the destination for the complete errors in the request if set.
      type: object
      description: 'Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.'
    GoogleCloudDiscoveryengineV1ImportUserEventsMetadata:
      properties:
        failureCount:
          format: int64
          description: Count of entries that encountered errors while processing.
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Operation create time.
        updateTime:
          type: string
          format: google-datetime
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
        successCount:
          description: Count of entries that were processed successfully.
          format: int64
          type: string
      type: object
      description: Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.
      id: GoogleCloudDiscoveryengineV1ImportUserEventsMetadata
    GoogleCloudDiscoveryengineV1ImportDocumentsResponse:
      properties:
        errorConfig:
          description: Echoes the destination for the complete errors in the request if set.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig'
        errorSamples:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: A sample of errors encountered while processing the request.
          type: array
      type: object
      id: GoogleCloudDiscoveryengineV1ImportDocumentsResponse
      description: 'Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.'
    GoogleCloudDiscoveryengineLoggingServiceContext:
      properties:
        service:
          type: string
          description: 'An identifier of the service—for example, `discoveryengine.googleapis.com`.'
      type: object
      id: GoogleCloudDiscoveryengineLoggingServiceContext
      description: Describes a running service that sends errors.
    GoogleCloudDiscoveryengineV1PurgeDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1PurgeDocumentsResponse
      description: 'Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.'
      properties:
        purgeCount:
          format: int64
          type: string
          description: The total count of documents purged as a result of the operation.
        purgeSample:
          description: A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.
          type: array
          items:
            type: string
      type: object
    GoogleRpcStatus:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          type: array
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          format: int32
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
      id: GoogleRpcStatus
      type: object
    GoogleCloudDiscoveryengineV1betaPurgeDocumentsResponse:
      id: GoogleCloudDiscoveryengineV1betaPurgeDocumentsResponse
      type: object
      properties:
        purgeCount:
          type: string
          description: The total count of documents purged as a result of the operation.
          format: int64
        purgeSample:
          type: array
          items:
            type: string
          description: A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.
      description: 'Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.'
    GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec:
      description: Specification to determine under which conditions query expansion should occur.
      type: object
      properties:
        pinUnexpandedResults:
          type: boolean
          description: 'Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results.'
        condition:
          enum:
            - CONDITION_UNSPECIFIED
            - DISABLED
            - AUTO
          type: string
          description: The condition under which query expansion should occur. Default to Condition.DISABLED.
          enumDescriptions:
            - 'Unspecified query expansion condition. In this case, server behavior defaults to Condition.DISABLED.'
            - 'Disabled query expansion. Only the exact search query is used, even if SearchResponse.total_size is zero.'
            - Automatic query expansion built by the Search API.
      id: GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec
    GoogleCloudDiscoveryengineLoggingSourceLocation:
      description: Indicates a location in the source code of the service for which errors are reported.
      type: object
      id: GoogleCloudDiscoveryengineLoggingSourceLocation
      properties:
        functionName:
          description: 'Human-readable name of a function or method—for example, `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend`.'
          type: string
    GoogleCloudDiscoveryengineV1betaConverseConversationResponse:
      properties:
        reply:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaReply'
          description: Answer to the current query.
        relatedQuestions:
          type: array
          items:
            type: string
          description: Suggested related questions.
        conversation:
          description: Updated conversation including the answer.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
        searchResults:
          description: Search Results.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult'
      id: GoogleCloudDiscoveryengineV1betaConverseConversationResponse
      description: Response message for ConversationalSearchService.ConverseConversation method.
      type: object
    GoogleCloudDiscoveryengineV1betaImportDocumentsRequest:
      properties:
        errorConfig:
          description: The desired location of errors incurred during the Import.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig'
        autoGenerateIds:
          type: boolean
          description: 'Whether to automatically generate IDs for the documents if absent. If set to `true`, Document.ids are automatically generated based on the hash of the payload, where IDs may not be consistent during multiple imports. In which case ReconciliationMode.FULL is highly recommended to avoid duplicate contents. If unset or set to `false`, Document.ids have to be specified using id_field, otherwise, documents without IDs fail to be imported. Only set this field when using GcsSource or BigQuerySource, and when GcsSource.data_schema or BigQuerySource.data_schema is `custom` or `csv`. Otherwise, an INVALID_ARGUMENT error is thrown.'
        idField:
          type: string
          description: 'The field in the Cloud Storage and BigQuery sources that indicates the unique IDs of the documents. For GcsSource it is the key of the JSON field. For instance, `my_id` for JSON `{"my_id": "some_uuid"}`. For BigQuerySource it is the column name of the BigQuery table where the unique ids are stored. The values of the JSON field or the BigQuery column are used as the Document.ids. The JSON field or the BigQuery column must be of string type, and the values must be set as valid strings conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) with 1-63 characters. Otherwise, documents without valid IDs fail to be imported. Only set this field when using GcsSource or BigQuerySource, and when GcsSource.data_schema or BigQuerySource.data_schema is `custom`. And only set this field when auto_generate_ids is unset or set as `false`. Otherwise, an INVALID_ARGUMENT error is thrown. If it is unset, a default value `_id` is used when importing from the allowed data sources.'
        bigquerySource:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaBigQuerySource'
          description: BigQuery input source.
        reconciliationMode:
          enum:
            - RECONCILIATION_MODE_UNSPECIFIED
            - INCREMENTAL
            - FULL
          description: The mode of reconciliation between existing documents and the documents to be imported. Defaults to ReconciliationMode.INCREMENTAL.
          enumDescriptions:
            - Defaults to `INCREMENTAL`.
            - Inserts new documents or updates existing documents.
            - Calculates diff and replaces the entire document dataset. Existing documents may be deleted if they are not present in the source location.
          type: string
        gcsSource:
          description: Cloud Storage location for the input content.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaGcsSource'
        inlineSource:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource'
          description: The Inline source for the input content for documents.
      type: object
      id: GoogleCloudDiscoveryengineV1betaImportDocumentsRequest
      description: Request message for Import methods.
    GoogleCloudDiscoveryengineV1betaSearchResponseSummary:
      description: Summary of the top N search result specified by the summary spec.
      properties:
        summarySkippedReasons:
          type: array
          items:
            enum:
              - SUMMARY_SKIPPED_REASON_UNSPECIFIED
              - ADVERSARIAL_QUERY_IGNORED
              - NON_SUMMARY_SEEKING_QUERY_IGNORED
              - OUT_OF_DOMAIN_QUERY_IGNORED
              - POTENTIAL_POLICY_VIOLATION
              - LLM_ADDON_NOT_ENABLED
            type: string
            enumDescriptions:
              - Default value. The summary skipped reason is not specified.
              - The adversarial query ignored case. Only populated when SummarySpec.ignore_adversarial_query is set to `true`.
              - The non-summary seeking query ignored case. Only populated when SummarySpec.ignore_non_summary_seeking_query is set to `true`.
              - 'The out-of-domain query ignored case. Google skips the summary if there are no high-relevance search results. For example, the data store contains facts about company A but the user query is asking questions about company B.'
              - The potential policy violation case. Google skips the summary if there is a potential policy violation detected. This includes content that may be violent or toxic.
              - The LLM addon not enabled case. Google skips the summary if the LLM addon is not enabled.
          description: 'Additional summary-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this field is not set.'
        summaryText:
          description: The summary content.
          type: string
      id: GoogleCloudDiscoveryengineV1betaSearchResponseSummary
      type: object
    GoogleCloudDiscoveryengineV1betaTransactionInfo:
      properties:
        cost:
          type: number
          description: 'All the costs associated with the products. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs, such that: * Profit = value - tax - cost'
          format: float
        value:
          format: float
          type: number
          description: 'Required. Total non-zero value associated with the transaction. This value may include shipping, tax, or other adjustments to the total value that you want to include.'
        discountValue:
          type: number
          format: float
          description: 'The total discount(s) value applied to this transaction. This figure should be excluded from TransactionInfo.value For example, if a user paid TransactionInfo.value amount, then nominal (pre-discount) value of the transaction is the sum of TransactionInfo.value and TransactionInfo.discount_value This means that profit is calculated the same way, regardless of the discount value, and that TransactionInfo.discount_value can be larger than TransactionInfo.value: * Profit = value - tax - cost'
        transactionId:
          type: string
          description: The transaction ID with a length limit of 128 characters.
        tax:
          format: float
          description: All the taxes associated with the transaction.
          type: number
        currency:
          description: Required. Currency code. Use three-character ISO-4217 code.
          type: string
      description: A transaction represents the entire purchase transaction.
      id: GoogleCloudDiscoveryengineV1betaTransactionInfo
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector:
      properties:
        fieldPath:
          type: string
          description: Embedding field path in schema.
        vector:
          description: Query embedding vector.
          type: array
          items:
            type: number
            format: float
      description: Embedding vector.
      id: GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector
      type: object
    GoogleCloudDiscoveryengineV1ImportErrorConfig:
      properties:
        gcsPrefix:
          type: string
          description: 'Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.'
      type: object
      id: GoogleCloudDiscoveryengineV1ImportErrorConfig
      description: Configuration of destination for Import related errors.
    GoogleCloudDiscoveryengineV1alphaImportDocumentsMetadata:
      properties:
        updateTime:
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          format: google-datetime
        successCount:
          description: Count of entries that were processed successfully.
          format: int64
          type: string
        failureCount:
          format: int64
          type: string
          description: Count of entries that encountered errors while processing.
        createTime:
          description: Operation create time.
          type: string
          format: google-datetime
      description: Metadata related to the progress of the ImportDocuments operation. This is returned by the google.longrunning.Operation.metadata field.
      id: GoogleCloudDiscoveryengineV1alphaImportDocumentsMetadata
      type: object
    GoogleApiHttpBody:
      properties:
        data:
          format: byte
          description: The HTTP request/response body as raw binary.
          type: string
        extensions:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
          description: Application specific response metadata. Must be set in the first response for streaming APIs.
        contentType:
          description: The HTTP Content-Type header value specifying the content type of the body.
          type: string
      id: GoogleApiHttpBody
      description: 'Message that represents an arbitrary HTTP body. It should only be used for payload formats that can''t be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.'
      type: object
    GoogleCloudDiscoveryengineV1Schema:
      properties:
        structSchema:
          additionalProperties:
            description: Properties of the object.
            type: any
          description: The structured representation of the schema.
          type: object
        jsonSchema:
          type: string
          description: The JSON representation of the schema.
        name:
          description: 'Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.'
          type: string
      description: Defines the structure and layout of a type of document data.
      id: GoogleCloudDiscoveryengineV1Schema
      type: object
    GoogleCloudDiscoveryengineV1DeleteSchemaMetadata:
      description: Metadata for DeleteSchema LRO.
      id: GoogleCloudDiscoveryengineV1DeleteSchemaMetadata
      type: object
      properties:
        createTime:
          type: string
          description: Operation create time.
          format: google-datetime
        updateTime:
          format: google-datetime
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
    GoogleCloudDiscoveryengineV1betaSearchResponse:
      type: object
      properties:
        attributionToken:
          description: 'A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance.'
          type: string
        appliedControls:
          type: array
          description: Controls applied as part of the Control service.
          items:
            type: string
        correctedQuery:
          type: string
          description: 'Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search results are based on corrected_query. Otherwise the original query is used for search.'
        guidedSearchResult:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult'
          description: Guided search result.
        queryExpansionInfo:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo'
          description: Query expansion information for the returned results.
        totalSize:
          description: The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches.
          format: int32
          type: integer
        summary:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSummary'
          description: A summary as part of the search results. This field is only returned if SearchRequest.ContentSearchSpec.summary_spec is set.
        facets:
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseFacet'
          type: array
          description: Results of facets requested by user.
        nextPageToken:
          description: 'A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult'
          description: A list of matched documents. The order represents the ranking.
        redirectUri:
          description: 'The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and only redirect_uri and attribution_token are set in the response.'
          type: string
      id: GoogleCloudDiscoveryengineV1betaSearchResponse
      description: Response message for SearchService.Search method.
    GoogleCloudDiscoveryengineV1betaImportUserEventsResponse:
      id: GoogleCloudDiscoveryengineV1betaImportUserEventsResponse
      properties:
        errorConfig:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig'
          description: Echoes the destination for the complete errors if this field was set in the request.
        unjoinedEventsCount:
          type: string
          description: 'Count of user events imported, but with Document information not found in the existing Branch.'
          format: int64
        joinedEventsCount:
          type: string
          description: Count of user events imported with complete existing Documents.
          format: int64
        errorSamples:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: A sample of errors encountered while processing the request.
          type: array
      type: object
      description: 'Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.'
    GoogleCloudDiscoveryengineV1betaUserEvent:
      id: GoogleCloudDiscoveryengineV1betaUserEvent
      description: UserEvent captures all metadata information Discovery Engine API needs to know about how end users interact with customers' website.
      type: object
      properties:
        transactionInfo:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaTransactionInfo'
          description: The transaction metadata (if any) associated with this user event.
        userInfo:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaUserInfo'
          description: Information about the end user.
        panel:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaPanelInfo'
          description: Panel metadata associated with this user event.
        completionInfo:
          description: CompletionService.CompleteQuery details related to the event. This field should be set for `search` event when autocomplete function is enabled and the user clicks a suggestion for search.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaCompletionInfo'
        directUserRequest:
          description: 'Should set to true if the request is made directly from the end user, in which case the UserEvent.user_info.user_agent can be populated from the HTTP request. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events). This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent.'
          type: boolean
        searchInfo:
          description: SearchService.Search details related to the event. This field should be set for `search` event.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchInfo'
        attributionToken:
          description: 'Token to attribute an API response to user action(s) to trigger the event. Highly recommended for user events that are the result of RecommendationService.Recommend. This field enables accurate attribution of recommendation model performance. The value must be one of: * RecommendResponse.attribution_token for events that are the result of RecommendationService.Recommend. * SearchResponse.attribution_token for events that are the result of SearchService.Search. This token enables us to accurately attribute page view or conversion completion back to the event and the particular predict response containing this clicked/purchased product. If user clicks on product K in the recommendation results, pass RecommendResponse.attribution_token as a URL parameter to product K''s page. When recording events on product K''s page, log the RecommendResponse.attribution_token to this field.'
          type: string
        mediaInfo:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaMediaInfo'
          description: Media-specific info.
        documents:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentInfo'
          description: 'List of Documents associated with this user event. This field is optional except for the following event types: * `view-item` * `add-to-cart` * `purchase` * `media-play` * `media-complete` In a `search` event, this field represents the documents returned to the end user on the current page (the end user may have not finished browsing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new `search` event with different UserEvent.documents is desired.'
        filter:
          type: string
          description: 'The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. One example is for `search` events, the associated SearchRequest may contain a filter expression in SearchRequest.filter conforming to https://google.aip.dev/160#filtering. Similarly, for `view-item-list` events that are generated from a RecommendationService.RecommendRequest, this field may be populated directly from RecommendationService.RecommendRequest.filter conforming to https://google.aip.dev/160#filtering. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.'
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaCustomAttribute'
          description: 'Extra user event features to include in the recommendation model. These attributes must NOT contain data that needs to be parsed or processed further, e.g. JSON or other encodings. If you provide custom attributes for ingested user events, also include them in the user events that you associate with prediction requests. Custom attribute formatting must be consistent between imported events and events provided with prediction requests. This lets the Discovery Engine API use those custom attributes when training models and serving predictions, which helps improve recommendation quality. This field needs to pass all below criteria, otherwise an `INVALID_ARGUMENT` error is returned: * The key must be a UTF-8 encoded string with a length limit of 5,000 characters. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed. For product recommendations, an example of extra user information is `traffic_channel`, which is how a user arrives at the site. Users can arrive at the site by coming to the site directly, coming through Google search, or in other ways.'
          type: object
        userPseudoId:
          type: string
          description: 'Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Do not set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. The field should not contain PII or user-data. We recommend to use Google Analytics [Client ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId) for this field.'
        pageInfo:
          description: Page metadata such as categories and other critical information for certain event types such as `view-category-page`.
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaPageInfo'
        eventType:
          type: string
          description: 'Required. User event type. Allowed values are: Generic values: * `search`: Search for Documents. * `view-item`: Detailed page view of a Document. * `view-item-list`: View of a panel or ordered list of Documents. * `view-home-page`: View of the home page. * `view-category-page`: View of a category page, e.g. Home > Men > Jeans Retail-related values: * `add-to-cart`: Add an item(s) to cart, e.g. in Retail online shopping * `purchase`: Purchase an item(s) Media-related values: * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`: Finished or stopped midway through a video, song, etc.'
        sessionId:
          type: string
          description: 'A unique identifier for tracking a visitor session with a length limit of 128 bytes. A session is an aggregation of an end user behavior in a time span. A general guideline to populate the session_id: 1. If user has no activity for 30 min, a new session_id should be assigned. 2. The session_id should be unique across users, suggest use uuid or add UserEvent.user_pseudo_id as prefix.'
        eventTime:
          type: string
          description: Only required for UserEventService.ImportUserEvents method. Timestamp of when the user event happened.
          format: google-datetime
        promotionIds:
          description: 'The promotion IDs if this is an event associated with promotions. Currently, this field is restricted to at most one ID.'
          type: array
          items:
            type: string
        tagIds:
          type: array
          description: A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups on the customer end.
          items:
            type: string
    GoogleCloudDiscoveryengineV1betaDocumentInfo:
      type: object
      id: GoogleCloudDiscoveryengineV1betaDocumentInfo
      properties:
        promotionIds:
          description: 'The promotion IDs associated with this Document. Currently, this field is restricted to at most one ID.'
          type: array
          items:
            type: string
        uri:
          description: The Document URI - only allowed for website data stores.
          type: string
        quantity:
          format: int32
          type: integer
          description: 'Quantity of the Document associated with the user event. Defaults to 1. For example, this field will be 2 if two quantities of the same Document are involved in a `add-to-cart` event. Required for events of the following event types: * `add-to-cart` * `purchase`'
        id:
          type: string
          description: The Document resource ID.
        name:
          description: 'The Document resource full name, of the form: `projects/{project_id}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/branches/{branch_id}/documents/{document_id}`'
          type: string
      description: Detailed document information associated with a user event.
    GoogleCloudDiscoveryengineV1alphaFieldConfig:
      type: object
      properties:
        completableOption:
          type: string
          description: 'If completable_option is COMPLETABLE_ENABLED, field values are directly used and returned as suggestions for Autocomplete in CompletionService.CompleteQuery. If completable_option is unset, the server behavior defaults to COMPLETABLE_DISABLED for fields that support setting completable options, which are just `string` fields. For those fields that do not support setting completable options, the server will skip completable option setting, and setting completable_option for those fields will throw `INVALID_ARGUMENT` error.'
          enumDescriptions:
            - Value used when unset.
            - Completable option enabled for a schema field.
            - Completable option disabled for a schema field.
          enum:
            - COMPLETABLE_OPTION_UNSPECIFIED
            - COMPLETABLE_ENABLED
            - COMPLETABLE_DISABLED
        recsFilterableOption:
          description: 'If recs_filterable_option is FILTERABLE_ENABLED, field values are filterable by filter expression in RecommendationService.Recommend. If FILTERABLE_ENABLED but the field type is numerical, field values are not filterable by text queries in RecommendationService.Recommend. Only textual fields are supported. If recs_filterable_option is unset, the default setting is FILTERABLE_DISABLED for fields that support setting filterable options. When a field set to [FILTERABLE_DISABLED] is filtered, a warning is generated and an empty result is returned.'
          enumDescriptions:
            - Value used when unset.
            - Filterable option enabled for a schema field.
            - Filterable option disabled for a schema field.
          enum:
            - FILTERABLE_OPTION_UNSPECIFIED
            - FILTERABLE_ENABLED
            - FILTERABLE_DISABLED
          type: string
        retrievableOption:
          enumDescriptions:
            - Value used when unset.
            - Retrievable option enabled for a schema field.
            - Retrievable option disabled for a schema field.
          type: string
          description: 'If retrievable_option is RETRIEVABLE_ENABLED, field values are included in the search results. If retrievable_option is unset, the server behavior defaults to RETRIEVABLE_DISABLED for fields that support setting retrievable options. For those fields that do not support setting retrievable options, such as `object` and `boolean`, the server will skip retrievable option setting, and setting retrievable_option for those fields will throw `INVALID_ARGUMENT` error.'
          enum:
            - RETRIEVABLE_OPTION_UNSPECIFIED
            - RETRIEVABLE_ENABLED
            - RETRIEVABLE_DISABLED
        indexableOption:
          description: 'If indexable_option is INDEXABLE_ENABLED, field values are indexed so that it can be filtered or faceted in SearchService.Search. If indexable_option is unset, the server behavior defaults to INDEXABLE_DISABLED for fields that support setting indexable options. For those fields that do not support setting indexable options, such as `object` and `boolean` and key properties, the server will skip indexable_option setting, and setting indexable_option for those fields will throw `INVALID_ARGUMENT` error.'
          enum:
            - INDEXABLE_OPTION_UNSPECIFIED
            - INDEXABLE_ENABLED
            - INDEXABLE_DISABLED
          type: string
          enumDescriptions:
            - Value used when unset.
            - Indexable option enabled for a schema field.
            - Indexable option disabled for a schema field.
        fieldPath:
          description: 'Required. Field path of the schema field. For example: `title`, `description`, `release_info.release_year`.'
          type: string
        fieldType:
          enumDescriptions:
            - Field type is unspecified.
            - Field value type is Object.
            - Field value type is String.
            - Field value type is Number.
            - Field value type is Integer.
            - Field value type is Boolean.
          enum:
            - FIELD_TYPE_UNSPECIFIED
            - OBJECT
            - STRING
            - NUMBER
            - INTEGER
            - BOOLEAN
          type: string
          readOnly: true
          description: Output only. Raw type of the field.
        searchableOption:
          description: 'If searchable_option is SEARCHABLE_ENABLED, field values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but field type is numerical, field values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical fields. If searchable_option is unset, the server behavior defaults to SEARCHABLE_DISABLED for fields that support setting searchable options. Only `string` fields that have no key property mapping support setting searchable_option. For those fields that do not support setting searchable options, the server will skip searchable option setting, and setting searchable_option for those fields will throw `INVALID_ARGUMENT` error.'
          type: string
          enumDescriptions:
            - Value used when unset.
            - Searchable option enabled for a schema field.
            - Searchable option disabled for a schema field.
          enum:
            - SEARCHABLE_OPTION_UNSPECIFIED
            - SEARCHABLE_ENABLED
            - SEARCHABLE_DISABLED
        keyPropertyType:
          readOnly: true
          type: string
          description: 'Output only. Type of the key property that this field is mapped to. Empty string if this is not annotated as mapped to a key property. Example types are `title`, `description`. Full list is defined by `keyPropertyMapping` in the schema field annotation. If the schema field has a `KeyPropertyMapping` annotation, `indexable_option` and `searchable_option` of this field cannot be modified.'
        dynamicFacetableOption:
          type: string
          enumDescriptions:
            - Value used when unset.
            - Dynamic facetable option enabled for a schema field.
            - Dynamic facetable option disabled for a schema field.
          description: 'If dynamic_facetable_option is DYNAMIC_FACETABLE_ENABLED, field values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if FieldConfig.indexable_option is INDEXABLE_DISABLED. Otherwise, an `INVALID_ARGUMENT` error will be returned. If dynamic_facetable_option is unset, the server behavior defaults to DYNAMIC_FACETABLE_DISABLED for fields that support setting dynamic facetable options. For those fields that do not support setting dynamic facetable options, such as `object` and `boolean`, the server will skip dynamic facetable option setting, and setting dynamic_facetable_option for those fields will throw `INVALID_ARGUMENT` error.'
          enum:
            - DYNAMIC_FACETABLE_OPTION_UNSPECIFIED
            - DYNAMIC_FACETABLE_ENABLED
            - DYNAMIC_FACETABLE_DISABLED
      description: 'Configurations for fields of a schema. For example, configuring a field is indexable, or searchable.'
      id: GoogleCloudDiscoveryengineV1alphaFieldConfig
    GoogleCloudDiscoveryengineLoggingErrorLog:
      description: An error log which is reported to the Error Reporting system.
      properties:
        requestPayload:
          description: 'The API request payload, represented as a protocol buffer. Most API request types are supported—for example: * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.DocumentService.CreateDocumentRequest` * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEventRequest`'
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
        status:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The RPC status associated with the error log.
        context:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineLoggingErrorContext'
          description: A description of the context in which the error occurred.
        message:
          description: A message describing the error.
          type: string
        responsePayload:
          description: 'The API response payload, represented as a protocol buffer. This is used to log some "soft errors", where the response is valid but we consider there are some quality issues like unjoined events. The following API responses are supported, and no PII is included: * `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend` * `google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEvent` * `google.cloud.discoveryengine.v1alpha.UserEventService.CollectUserEvent`'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        serviceContext:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineLoggingServiceContext'
          description: The service context in which this error has occurred.
        importPayload:
          $ref: '#/components/schemas/GoogleCloudDiscoveryengineLoggingImportErrorContext'
          description: The error payload that is populated on LRO import APIs.
      type: object
      id: GoogleCloudDiscoveryengineLoggingErrorLog
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: google.discoveryengine.operations
      name: operations
      title: Operations
      methods:
        projects_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_data_stores_branches_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_data_stores_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_models_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1models~1{modelsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_data_stores_models_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1models~1{modelsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_models_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1models~1{modelsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_engines_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_collections_engines_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1engines~1{enginesId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_collections_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_models_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1models~1{modelsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_models_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1models~1{modelsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_collections_data_stores_models_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1models~1{modelsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_collections_data_stores_schemas_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_collections_data_stores_branches_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_collections_data_stores_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_models_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_schemas_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_branches_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_branches_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_models_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_engines_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_models_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_schemas_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_branches_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_branches_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_models_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_engines_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_data_stores_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_data_stores_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_collections_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_operations_list'
        insert: []
        update: []
        delete: []
    data_stores:
      id: google.discoveryengine.data_stores
      name: data_stores
      title: Data Stores
      methods:
        projects_locations_data_stores_complete_query:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}:completeQuery/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_complete_query:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}:completeQuery/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    conversations:
      id: google.discoveryengine.conversations
      name: conversations
      title: Conversations
      methods:
        projects_locations_data_stores_conversations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_conversations_delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_conversations_patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_conversations_create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_conversations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        _projects_locations_data_stores_conversations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_conversations_converse:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}:converse/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_conversations_patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_conversations_delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_conversations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_conversations_converse:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations~1{conversationsId}:converse/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_conversations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        _projects_locations_collections_data_stores_conversations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_conversations_create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_collections_data_stores_conversations_get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_data_stores_conversations_get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_collections_data_stores_conversations_list'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_data_stores_conversations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_collections_data_stores_conversations_create'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_data_stores_conversations_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_collections_data_stores_conversations_delete'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_data_stores_conversations_delete'
    schemas:
      id: google.discoveryengine.schemas
      name: schemas
      title: Schemas
      methods:
        projects_locations_data_stores_schemas_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schemas
        _projects_locations_data_stores_schemas_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_schemas_create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_schemas_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_schemas_delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_schemas_patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas~1{schemasId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_schemas_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schemas
        _projects_locations_collections_data_stores_schemas_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schemas/methods/projects_locations_collections_data_stores_schemas_get'
          - $ref: '#/components/x-stackQL-resources/schemas/methods/projects_locations_data_stores_schemas_get'
          - $ref: '#/components/x-stackQL-resources/schemas/methods/projects_locations_collections_data_stores_schemas_list'
          - $ref: '#/components/x-stackQL-resources/schemas/methods/projects_locations_data_stores_schemas_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/schemas/methods/projects_locations_collections_data_stores_schemas_create'
          - $ref: '#/components/x-stackQL-resources/schemas/methods/projects_locations_data_stores_schemas_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/schemas/methods/projects_locations_collections_data_stores_schemas_delete'
          - $ref: '#/components/x-stackQL-resources/schemas/methods/projects_locations_data_stores_schemas_delete'
    documents:
      id: google.discoveryengine.documents
      name: documents
      title: Documents
      methods:
        projects_locations_data_stores_branches_documents_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.documents
        _projects_locations_data_stores_branches_documents_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_purge:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents:purge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_branches_documents_import:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_purge:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents:purge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_delete:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_patch:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents~1{documentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.documents
        _projects_locations_collections_data_stores_branches_documents_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_branches_documents_import:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1branches~1{branchesId}~1documents:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/documents/methods/projects_locations_collections_data_stores_branches_documents_get'
          - $ref: '#/components/x-stackQL-resources/documents/methods/projects_locations_data_stores_branches_documents_get'
          - $ref: '#/components/x-stackQL-resources/documents/methods/projects_locations_collections_data_stores_branches_documents_list'
          - $ref: '#/components/x-stackQL-resources/documents/methods/projects_locations_data_stores_branches_documents_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/documents/methods/projects_locations_collections_data_stores_branches_documents_create'
          - $ref: '#/components/x-stackQL-resources/documents/methods/projects_locations_data_stores_branches_documents_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/documents/methods/projects_locations_collections_data_stores_branches_documents_delete'
          - $ref: '#/components/x-stackQL-resources/documents/methods/projects_locations_data_stores_branches_documents_delete'
    user_events:
      id: google.discoveryengine.user_events
      name: user_events
      title: User Events
      methods:
        projects_locations_data_stores_user_events_import:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1userEvents:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_user_events_collect:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1userEvents:collect/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_user_events_write:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1userEvents:write/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_user_events_import:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1userEvents:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_user_events_write:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1userEvents:write/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_user_events_collect:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1userEvents:collect/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    serving_configs:
      id: google.discoveryengine.serving_configs
      name: serving_configs
      title: Serving Configs
      methods:
        projects_locations_data_stores_serving_configs_search:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1servingConfigs~1{servingConfigsId}:search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_stores_serving_configs_recommend:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1dataStores~1{dataStoresId}~1servingConfigs~1{servingConfigsId}:recommend/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_serving_configs_search:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1servingConfigs~1{servingConfigsId}:search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_serving_configs_recommend:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1servingConfigs~1{servingConfigsId}:recommend/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    search_engine_operations:
      id: google.discoveryengine.search_engine_operations
      name: search_engine_operations
      title: Search Engine Operations
      methods:
        projects_locations_collections_data_stores_site_search_engine_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_site_search_engine_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_collections_data_stores_site_search_engine_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/search_engine_operations/methods/projects_locations_collections_data_stores_site_search_engine_operations_get'
          - $ref: '#/components/x-stackQL-resources/search_engine_operations/methods/projects_locations_collections_data_stores_site_search_engine_operations_list'
        insert: []
        update: []
        delete: []
    target_site_operations:
      id: google.discoveryengine.target_site_operations
      name: target_site_operations
      title: Target Site Operations
      methods:
        projects_locations_collections_data_stores_site_search_engine_target_sites_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_collections_data_stores_site_search_engine_target_sites_operations_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_collections_data_stores_site_search_engine_target_sites_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1siteSearchEngine~1targetSites~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/target_site_operations/methods/projects_locations_collections_data_stores_site_search_engine_target_sites_operations_get'
          - $ref: '#/components/x-stackQL-resources/target_site_operations/methods/projects_locations_collections_data_stores_site_search_engine_target_sites_operations_list'
        insert: []
        update: []
        delete: []
    data_store_operations:
      id: google.discoveryengine.data_store_operations
      name: data_store_operations
      title: Data Store Operations
      methods:
        projects_locations_collections_data_stores_operations_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1collections~1{collectionsId}~1dataStores~1{dataStoresId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_store_operations/methods/projects_locations_collections_data_stores_operations_get'
        insert: []
        update: []
        delete: []
paths:
  '/v1beta/projects/{projectsId}/operations':
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: projects_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}:completeQuery':
    parameters: *ref_1
    get:
      description: Completes the specified user input with keyword suggestions.
      operationId: discoveryengine.projects.locations.dataStores.completeQuery
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaCompleteQueryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: queryModel
          schema:
            type: string
        - in: query
          name: includeTailSuggestions
          schema:
            type: boolean
        - in: query
          name: userPseudoId
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
      x-stackQL-resource: data_stores
      x-stackQL-method: projects_locations_data_stores_complete_query
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/conversations/{conversationsId}':
    parameters: *ref_1
    get:
      description: Gets a Conversation.
      operationId: discoveryengine.projects.locations.dataStores.conversations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_data_stores_conversations_get
      x-stackQL-verb: select
    delete:
      description: 'Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is returned.'
      operationId: discoveryengine.projects.locations.dataStores.conversations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_data_stores_conversations_delete
      x-stackQL-verb: delete
    patch:
      description: 'Updates a Conversation. Conversation action type cannot be changed. If the Conversation to update does not exist, a NOT_FOUND error is returned.'
      operationId: discoveryengine.projects.locations.dataStores.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_data_stores_conversations_patch
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/conversations':
    parameters: *ref_1
    post:
      description: 'Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is returned.'
      operationId: discoveryengine.projects.locations.dataStores.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_data_stores_conversations_create
      x-stackQL-verb: insert
    get:
      description: Lists all Conversations by their parent DataStore.
      operationId: discoveryengine.projects.locations.dataStores.conversations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_data_stores_conversations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.conversations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/conversations/{conversationsId}:converse':
    parameters: *ref_1
    post:
      description: Converses a conversation.
      operationId: discoveryengine.projects.locations.dataStores.conversations.converse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConverseConversationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConverseConversationResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_data_stores_conversations_converse
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/schemas':
    parameters: *ref_1
    get:
      description: Gets a list of Schemas.
      operationId: discoveryengine.projects.locations.dataStores.schemas.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaListSchemasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: schemas
      x-stackQL-method: projects_locations_data_stores_schemas_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.schemas
    post:
      description: Creates a Schema.
      operationId: discoveryengine.projects.locations.dataStores.schemas.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: schemaId
          schema:
            type: string
      x-stackQL-resource: schemas
      x-stackQL-method: projects_locations_data_stores_schemas_create
      x-stackQL-verb: insert
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/schemas/{schemasId}':
    parameters: *ref_1
    get:
      description: Gets a Schema.
      operationId: discoveryengine.projects.locations.dataStores.schemas.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
      x-stackQL-resource: schemas
      x-stackQL-method: projects_locations_data_stores_schemas_get
      x-stackQL-verb: select
    delete:
      description: Deletes a Schema.
      operationId: discoveryengine.projects.locations.dataStores.schemas.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
      x-stackQL-resource: schemas
      x-stackQL-method: projects_locations_data_stores_schemas_delete
      x-stackQL-verb: delete
    patch:
      description: Updates a Schema.
      operationId: discoveryengine.projects.locations.dataStores.schemas.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: schemas
      x-stackQL-method: projects_locations_data_stores_schemas_patch
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.dataStores.branches.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_data_stores_branches_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.dataStores.branches.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_data_stores_branches_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents':
    parameters: *ref_1
    get:
      description: Gets a list of Documents.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaListDocumentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_data_stores_branches_documents_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.documents
    post:
      description: Creates a Document.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: documentId
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_data_stores_branches_documents_create
      x-stackQL-verb: insert
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents/{documentsId}':
    parameters: *ref_1
    delete:
      description: Deletes a Document.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_data_stores_branches_documents_delete
      x-stackQL-verb: delete
    get:
      description: Gets a Document.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_data_stores_branches_documents_get
      x-stackQL-verb: select
    patch:
      description: Updates a Document.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_data_stores_branches_documents_patch
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents:purge':
    parameters: *ref_1
    post:
      description: 'Permanently deletes all selected Documents in a branch. This process is asynchronous. Depending on the number of Documents to be deleted, this operation can take hours to complete. Before the delete operation completes, some Documents might still be returned by DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the Documents to be deleted, set PurgeDocumentsRequest.force to false.'
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_data_stores_branches_documents_purge
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents:import':
    parameters: *ref_1
    post:
      description: 'Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items will be created. Note: It is possible for a subset of the Documents to be successfully updated.'
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaImportDocumentsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_data_stores_branches_documents_import
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.dataStores.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_data_stores_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.dataStores.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_data_stores_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/userEvents:import':
    parameters: *ref_1
    post:
      description: Bulk import of User events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata.
      operationId: discoveryengine.projects.locations.dataStores.userEvents.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaImportUserEventsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_data_stores_user_events_import
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/userEvents:collect':
    parameters: *ref_1
    get:
      description: Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a third-party domain. This method is used only by the Discovery Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly.
      operationId: discoveryengine.projects.locations.dataStores.userEvents.collect
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: ets
          schema:
            type: string
        - in: query
          name: userEvent
          schema:
            type: string
        - in: query
          name: uri
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_data_stores_user_events_collect
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/userEvents:write':
    parameters: *ref_1
    post:
      description: Writes a single user event.
      operationId: discoveryengine.projects.locations.dataStores.userEvents.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaUserEvent'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaUserEvent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_data_stores_user_events_write
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/servingConfigs/{servingConfigsId}:search':
    parameters: *ref_1
    post:
      description: Performs a search.
      operationId: discoveryengine.projects.locations.dataStores.servingConfigs.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: serving_configs
      x-stackQL-method: projects_locations_data_stores_serving_configs_search
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/servingConfigs/{servingConfigsId}:recommend':
    parameters: *ref_1
    post:
      description: 'Makes a recommendation, which requires a contextual user event.'
      operationId: discoveryengine.projects.locations.dataStores.servingConfigs.recommend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaRecommendRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaRecommendResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: serving_configs
      x-stackQL-method: projects_locations_data_stores_serving_configs_recommend
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/models/{modelsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.dataStores.models.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_data_stores_models_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/dataStores/{dataStoresId}/models/{modelsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.dataStores.models.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_data_stores_models_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.collections.engines.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_engines_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/engines/{enginesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.collections.engines.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: enginesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_engines_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.collections.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.collections.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/models/{modelsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.collections.dataStores.models.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_data_stores_models_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/models/{modelsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.collections.dataStores.models.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_data_stores_models_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/conversations/{conversationsId}':
    parameters: *ref_1
    patch:
      description: 'Updates a Conversation. Conversation action type cannot be changed. If the Conversation to update does not exist, a NOT_FOUND error is returned.'
      operationId: discoveryengine.projects.locations.collections.dataStores.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_collections_data_stores_conversations_patch
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is returned.'
      operationId: discoveryengine.projects.locations.collections.dataStores.conversations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_collections_data_stores_conversations_delete
      x-stackQL-verb: delete
    get:
      description: Gets a Conversation.
      operationId: discoveryengine.projects.locations.collections.dataStores.conversations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_collections_data_stores_conversations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/conversations/{conversationsId}:converse':
    parameters: *ref_1
    post:
      description: Converses a conversation.
      operationId: discoveryengine.projects.locations.collections.dataStores.conversations.converse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConverseConversationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConverseConversationResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_collections_data_stores_conversations_converse
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/conversations':
    parameters: *ref_1
    get:
      description: Lists all Conversations by their parent DataStore.
      operationId: discoveryengine.projects.locations.collections.dataStores.conversations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_collections_data_stores_conversations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.conversations
    post:
      description: 'Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is returned.'
      operationId: discoveryengine.projects.locations.collections.dataStores.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: projects_locations_collections_data_stores_conversations_create
      x-stackQL-verb: insert
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/servingConfigs/{servingConfigsId}:search':
    parameters: *ref_1
    post:
      description: Performs a search.
      operationId: discoveryengine.projects.locations.collections.dataStores.servingConfigs.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: serving_configs
      x-stackQL-method: projects_locations_collections_data_stores_serving_configs_search
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/servingConfigs/{servingConfigsId}:recommend':
    parameters: *ref_1
    post:
      description: 'Makes a recommendation, which requires a contextual user event.'
      operationId: discoveryengine.projects.locations.collections.dataStores.servingConfigs.recommend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaRecommendRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaRecommendResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: servingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: serving_configs
      x-stackQL-method: projects_locations_collections_data_stores_serving_configs_recommend
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/schemas/{schemasId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_data_stores_schemas_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/schemas/{schemasId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_data_stores_schemas_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/schemas/{schemasId}':
    parameters: *ref_1
    get:
      description: Gets a Schema.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
      x-stackQL-resource: schemas
      x-stackQL-method: projects_locations_collections_data_stores_schemas_get
      x-stackQL-verb: select
    patch:
      description: Updates a Schema.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: schemas
      x-stackQL-method: projects_locations_collections_data_stores_schemas_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a Schema.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: schemasId
          required: true
          schema:
            type: string
      x-stackQL-resource: schemas
      x-stackQL-method: projects_locations_collections_data_stores_schemas_delete
      x-stackQL-verb: delete
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/schemas':
    parameters: *ref_1
    post:
      description: Creates a Schema.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: schemaId
          schema:
            type: string
      x-stackQL-resource: schemas
      x-stackQL-method: projects_locations_collections_data_stores_schemas_create
      x-stackQL-verb: insert
    get:
      description: Gets a list of Schemas.
      operationId: discoveryengine.projects.locations.collections.dataStores.schemas.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaListSchemasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: schemas
      x-stackQL-method: projects_locations_collections_data_stores_schemas_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.schemas
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.collections.dataStores.branches.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_data_stores_branches_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.collections.dataStores.branches.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_data_stores_branches_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents:purge':
    parameters: *ref_1
    post:
      description: 'Permanently deletes all selected Documents in a branch. This process is asynchronous. Depending on the number of Documents to be deleted, this operation can take hours to complete. Before the delete operation completes, some Documents might still be returned by DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the Documents to be deleted, set PurgeDocumentsRequest.force to false.'
      operationId: discoveryengine.projects.locations.collections.dataStores.branches.documents.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_collections_data_stores_branches_documents_purge
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents/{documentsId}':
    parameters: *ref_1
    delete:
      description: Deletes a Document.
      operationId: discoveryengine.projects.locations.collections.dataStores.branches.documents.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_collections_data_stores_branches_documents_delete
      x-stackQL-verb: delete
    get:
      description: Gets a Document.
      operationId: discoveryengine.projects.locations.collections.dataStores.branches.documents.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_collections_data_stores_branches_documents_get
      x-stackQL-verb: select
    patch:
      description: Updates a Document.
      operationId: discoveryengine.projects.locations.collections.dataStores.branches.documents.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_collections_data_stores_branches_documents_patch
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents':
    parameters: *ref_1
    post:
      description: Creates a Document.
      operationId: discoveryengine.projects.locations.collections.dataStores.branches.documents.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: documentId
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_collections_data_stores_branches_documents_create
      x-stackQL-verb: insert
    get:
      description: Gets a list of Documents.
      operationId: discoveryengine.projects.locations.collections.dataStores.branches.documents.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaListDocumentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_collections_data_stores_branches_documents_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.documents
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/branches/{branchesId}/documents:import':
    parameters: *ref_1
    post:
      description: 'Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items will be created. Note: It is possible for a subset of the Documents to be successfully updated.'
      operationId: discoveryengine.projects.locations.collections.dataStores.branches.documents.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaImportDocumentsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: branchesId
          required: true
          schema:
            type: string
      x-stackQL-resource: documents
      x-stackQL-method: projects_locations_collections_data_stores_branches_documents_import
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: search_engine_operations
      x-stackQL-method: projects_locations_collections_data_stores_site_search_engine_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: search_engine_operations
      x-stackQL-method: projects_locations_collections_data_stores_site_search_engine_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/targetSites/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: target_site_operations
      x-stackQL-method: projects_locations_collections_data_stores_site_search_engine_target_sites_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/siteSearchEngine/targetSites/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: target_site_operations
      x-stackQL-method: projects_locations_collections_data_stores_site_search_engine_target_sites_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/userEvents:import':
    parameters: *ref_1
    post:
      description: Bulk import of User events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata.
      operationId: discoveryengine.projects.locations.collections.dataStores.userEvents.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaImportUserEventsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_collections_data_stores_user_events_import
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/userEvents:write':
    parameters: *ref_1
    post:
      description: Writes a single user event.
      operationId: discoveryengine.projects.locations.collections.dataStores.userEvents.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaUserEvent'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaUserEvent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_collections_data_stores_user_events_write
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/userEvents:collect':
    parameters: *ref_1
    get:
      description: Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a third-party domain. This method is used only by the Discovery Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly.
      operationId: discoveryengine.projects.locations.collections.dataStores.userEvents.collect
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: userEvent
          schema:
            type: string
        - in: query
          name: ets
          schema:
            type: string
        - in: query
          name: uri
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_collections_data_stores_user_events_collect
      x-stackQL-verb: exec
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: discoveryengine.projects.locations.collections.dataStores.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_collections_data_stores_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.locations.collections.dataStores.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_store_operations
      x-stackQL-method: projects_locations_collections_data_stores_operations_get
      x-stackQL-verb: select
  '/v1beta/projects/{projectsId}/locations/{locationsId}/collections/{collectionsId}/dataStores/{dataStoresId}:completeQuery':
    parameters: *ref_1
    get:
      description: Completes the specified user input with keyword suggestions.
      operationId: discoveryengine.projects.locations.collections.dataStores.completeQuery
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDiscoveryengineV1betaCompleteQueryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: collectionsId
          required: true
          schema:
            type: string
        - in: path
          name: dataStoresId
          required: true
          schema:
            type: string
        - in: query
          name: includeTailSuggestions
          schema:
            type: boolean
        - in: query
          name: queryModel
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: userPseudoId
          schema:
            type: string
      x-stackQL-resource: data_stores
      x-stackQL-method: projects_locations_collections_data_stores_complete_query
      x-stackQL-verb: exec
