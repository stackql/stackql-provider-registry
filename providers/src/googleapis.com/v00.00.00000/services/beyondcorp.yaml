openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: BeyondCorp API
  description: 'Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.'
  version: v1
  x-discovery-doc-revision: '20230802'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/'
servers:
  - url: 'https://beyondcorp.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig:
      description: AppConnectorInstanceConfig defines the instance config of a AppConnector.
      properties:
        notificationConfig:
          description: NotificationConfig defines the notification mechanism that the remote instance should subscribe to in order to receive notification.
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig'
        sequenceNumber:
          description: 'Required. A monotonically increasing number generated and maintained by the API provider. Every time a config changes in the backend, the sequenceNumber should be bumped up to reflect the change.'
          type: string
          format: int64
        instanceConfig:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: The SLM instance agent configuration.
        imageConfig:
          description: ImageConfig defines the GCR images to run for the remote agent's control plane.
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1ImageConfig'
      type: object
      id: GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig
    Tunnelv1ProtoTunnelerInfo:
      description: TunnelerInfo contains metadata about tunneler launched by connection manager.
      type: object
      properties:
        backoffRetryCount:
          type: integer
          description: backoff_retry_count stores the number of times the tunneler has been retried by tunManager for current backoff sequence. Gets reset to 0 if time difference between 2 consecutive retries exceeds backoffRetryResetTime.
          format: uint32
        id:
          description: id is the unique id of a tunneler.
          type: string
        latestRetryTime:
          format: google-datetime
          type: string
          description: latest_retry_time stores the time when the tunneler was last restarted.
        latestErr:
          $ref: '#/components/schemas/Tunnelv1ProtoTunnelerError'
          description: latest_err stores the Error for the latest tunneler failure. Gets reset everytime the tunneler is retried by tunManager.
        totalRetryCount:
          description: total_retry_count stores the total number of times the tunneler has been retried by tunManager.
          type: integer
          format: uint32
      id: Tunnelv1ProtoTunnelerInfo
    GoogleIamV1Policy:
      properties:
        version:
          format: int32
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
        etag:
          type: string
          format: byte
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
        auditConfigs:
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
          type: array
      type: object
      id: GoogleIamV1Policy
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
    GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig:
      id: GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig
      properties:
        pubsubNotification:
          description: Cloud Pub/Sub Configuration to receive notifications.
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig'
      description: NotificationConfig defines the mechanisms to notify instance agent.
      type: object
    ListAppGatewaysResponse:
      type: object
      properties:
        nextPageToken:
          description: 'A token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
        appGateways:
          description: A list of BeyondCorp AppGateways in the project.
          items:
            $ref: '#/components/schemas/AppGateway'
          type: array
        unreachable:
          type: array
          description: A list of locations that could not be reached.
          items:
            type: string
      id: ListAppGatewaysResponse
      description: Response message for BeyondCorp.ListAppGateways.
    GoogleCloudBeyondcorpAppconnectionsV1AppConnection:
      properties:
        updateTime:
          readOnly: true
          type: string
          description: Output only. Timestamp when the resource was last modified.
          format: google-datetime
        createTime:
          type: string
          readOnly: true
          description: Output only. Timestamp when the resource was created.
          format: google-datetime
        gateway:
          description: Optional. Gateway used by the AppConnection.
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway'
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - CREATED
            - UPDATING
            - DELETING
            - DOWN
          enumDescriptions:
            - Default value. This value is unused.
            - AppConnection is being created.
            - AppConnection has been created.
            - AppConnection's configuration is being updated.
            - AppConnection is being deleted.
            - AppConnection is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF.
          readOnly: true
          type: string
          description: Output only. The current state of the AppConnection.
        type:
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - TCP Proxy based BeyondCorp AppConnection. API will default to this if unset.
          description: Required. The type of network connectivity used by the AppConnection.
          enum:
            - TYPE_UNSPECIFIED
            - TCP_PROXY
        displayName:
          type: string
          description: Optional. An arbitrary user-provided name for the AppConnection. Cannot exceed 64 characters.
        uid:
          type: string
          description: Output only. A unique identifier for the instance generated by the system.
          readOnly: true
        name:
          description: Required. Unique resource name of the AppConnection. The name is ignored when creating a AppConnection.
          type: string
        labels:
          description: Optional. Resource labels to represent user provided metadata.
          type: object
          additionalProperties:
            type: string
        connectors:
          type: array
          description: 'Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this AppConnection.'
          items:
            type: string
        applicationEndpoint:
          description: Required. Address of the remote application endpoint for the BeyondCorp AppConnection.
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint'
      description: A BeyondCorp AppConnection resource represents a BeyondCorp protected AppConnection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppConnection. Multiple connectors can be authorised for a single AppConnection.
      type: object
      id: GoogleCloudBeyondcorpAppconnectionsV1AppConnection
    GoogleCloudLocationListLocationsResponse:
      description: The response message for Locations.ListLocations.
      id: GoogleCloudLocationListLocationsResponse
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
    GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails:
      properties:
        recentMigVms:
          description: 'If type=GCP_REGIONAL_MIG, contains most recent VM instances, like `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone_id}/instances/{instance_id}`.'
          items:
            type: string
          type: array
        appConnection:
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection'
          description: A BeyondCorp AppConnection in the project.
      description: Details of the AppConnection.
      id: GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails
      type: object
    AllocatedConnection:
      properties:
        pscUri:
          type: string
          description: Required. The PSC uri of an allocated connection
        ingressPort:
          description: Required. The ingress port of an allocated connection
          type: integer
          format: int32
      id: AllocatedConnection
      description: Allocated connection of the AppGateway.
      type: object
    GoogleTypeExpr:
      properties:
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: GoogleTypeExpr
    GoogleCloudBeyondcorpAppgatewaysV1alphaAppGatewayOperationMetadata:
      description: Represents the metadata of the long-running operation.
      id: GoogleCloudBeyondcorpAppgatewaysV1alphaAppGatewayOperationMetadata
      type: object
      properties:
        requestedCancellation:
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          type: boolean
        statusMessage:
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
          readOnly: true
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        verb:
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
          type: string
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
    GoogleIamV1TestIamPermissionsRequest:
      properties:
        permissions:
          items:
            type: string
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          type: array
      type: object
      description: Request message for `TestIamPermissions` method.
      id: GoogleIamV1TestIamPermissionsRequest
    CloudSecurityZerotrustApplinkAppConnectorProtoGateway:
      properties:
        port:
          description: port specifies the port of the gateway for tunnel connections from the connectors.
          format: uint32
          type: integer
        name:
          type: string
          description: 'name is the name of an instance running a gateway. It is the unique ID for a gateway. All gateways under the same connection have the same prefix. It is derived from the gateway URL. For example, name=${instance} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}'
        project:
          description: 'project is the tenant project the gateway belongs to. Different from the project in the connection, it is a BeyondCorpAPI internally created project to manage all the gateways. It is sharing the same network with the consumer project user owned. It is derived from the gateway URL. For example, project=${project} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}'
          type: string
        selfLink:
          description: 'self_link is the gateway URL in the form https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}'
          type: string
        zone:
          description: 'zone represents the zone the instance belongs. It is derived from the gateway URL. For example, zone=${zone} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}'
          type: string
        interface:
          description: interface specifies the network interface of the gateway to connect to.
          type: string
      id: CloudSecurityZerotrustApplinkAppConnectorProtoGateway
      type: object
      description: Gateway represents a GCE VM Instance endpoint for use by IAP TCP.
    GoogleCloudBeyondcorpAppconnectorsV1ListAppConnectorsResponse:
      type: object
      description: Response message for BeyondCorp.ListAppConnectors.
      id: GoogleCloudBeyondcorpAppconnectorsV1ListAppConnectorsResponse
      properties:
        unreachable:
          description: A list of locations that could not be reached.
          type: array
          items:
            type: string
        appConnectors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnector'
          description: A list of BeyondCorp AppConnectors in the project.
        nextPageToken:
          description: 'A token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
    Empty:
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
    GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfo:
      type: object
      description: PrincipalInfo represents an Identity oneof.
      id: GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfo
      properties:
        serviceAccount:
          description: A GCP service account.
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount'
    GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest:
      type: object
      properties:
        requestId:
          type: string
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
        resourceInfo:
          description: Required. Resource info of the connector.
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo'
        validateOnly:
          description: 'Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.'
          type: boolean
      id: GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest
      description: Request report the connector status.
    GoogleLongrunningListOperationsResponse:
      type: object
      id: GoogleLongrunningListOperationsResponse
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: A list of operations that matches the specified filter in the request.
          type: array
      description: The response message for Operations.ListOperations.
    GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionOperationMetadata:
      description: Represents the metadata of the long-running operation.
      id: GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionOperationMetadata
      type: object
      properties:
        verb:
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
          type: string
        statusMessage:
          type: string
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        requestedCancellation:
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          type: boolean
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        target:
          type: string
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
    GoogleCloudBeyondcorpAppconnectorsV1AppConnectorOperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        target:
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
        requestedCancellation:
          type: boolean
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        statusMessage:
          readOnly: true
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
        verb:
          readOnly: true
          type: string
          description: Output only. Name of the verb executed by the operation.
      id: GoogleCloudBeyondcorpAppconnectorsV1AppConnectorOperationMetadata
      type: object
    GoogleCloudBeyondcorpAppconnectionsV1AppConnectionOperationMetadata:
      id: GoogleCloudBeyondcorpAppconnectionsV1AppConnectionOperationMetadata
      properties:
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
          readOnly: true
        statusMessage:
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
        requestedCancellation:
          type: boolean
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
      type: object
      description: Represents the metadata of the long-running operation.
    GoogleCloudBeyondcorpConnectionsV1alphaConnectionOperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
        requestedCancellation:
          readOnly: true
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        statusMessage:
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
          type: string
      id: GoogleCloudBeyondcorpConnectionsV1alphaConnectionOperationMetadata
      type: object
    GoogleCloudBeyondcorpAppconnectorsV1AppConnector:
      type: object
      properties:
        displayName:
          description: Optional. An arbitrary user-provided name for the AppConnector. Cannot exceed 64 characters.
          type: string
        state:
          description: Output only. The current state of the AppConnector.
          type: string
          readOnly: true
          enumDescriptions:
            - Default value. This value is unused.
            - AppConnector is being created.
            - AppConnector has been created.
            - AppConnector's configuration is being updated.
            - AppConnector is being deleted.
            - AppConnector is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - CREATED
            - UPDATING
            - DELETING
            - DOWN
        uid:
          readOnly: true
          type: string
          description: Output only. A unique identifier for the instance generated by the system.
        principalInfo:
          description: Required. Principal information about the Identity of the AppConnector.
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfo'
        resourceInfo:
          description: Optional. Resource info of the connector.
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo'
        labels:
          description: Optional. Resource labels to represent user provided metadata.
          additionalProperties:
            type: string
          type: object
        createTime:
          readOnly: true
          description: Output only. Timestamp when the resource was created.
          format: google-datetime
          type: string
        name:
          description: Required. Unique resource name of the AppConnector. The name is ignored when creating a AppConnector.
          type: string
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when the resource was last modified.
      id: GoogleCloudBeyondcorpAppconnectorsV1AppConnector
      description: A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection.
    GoogleIamV1AuditConfig:
      id: GoogleIamV1AuditConfig
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      type: object
      properties:
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
        auditLogConfigs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
          description: The configuration for logging of each type of permission.
    GoogleCloudLocationLocation:
      description: A resource that represents a Google Cloud location.
      properties:
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      id: GoogleCloudLocationLocation
      type: object
    GoogleIamV1Binding:
      properties:
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/GoogleTypeExpr'
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
        members:
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          type: array
      type: object
      id: GoogleIamV1Binding
      description: 'Associates `members`, or principals, with a `role`.'
    GoogleCloudBeyondcorpAppconnectorsV1RemoteAgentDetails:
      description: RemoteAgentDetails reflects the details of a remote agent.
      properties: {}
      type: object
      id: GoogleCloudBeyondcorpAppconnectorsV1RemoteAgentDetails
    GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorOperationMetadata:
      type: object
      properties:
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
        requestedCancellation:
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          readOnly: true
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        statusMessage:
          readOnly: true
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
          readOnly: true
      description: Represents the metadata of the long-running operation.
      id: GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorOperationMetadata
    GoogleIamV1SetIamPolicyRequest:
      properties:
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
          format: google-fieldmask
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/GoogleIamV1Policy'
      description: Request message for `SetIamPolicy` method.
      type: object
      id: GoogleIamV1SetIamPolicyRequest
    GoogleCloudBeyondcorpConnectorsV1alphaConnectorOperationMetadata:
      type: object
      id: GoogleCloudBeyondcorpConnectorsV1alphaConnectorOperationMetadata
      description: Represents the metadata of the long-running operation.
      properties:
        statusMessage:
          type: string
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        verb:
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
          type: string
        target:
          type: string
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
        requestedCancellation:
          readOnly: true
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        endTime:
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
    GoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig:
      id: GoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig
      type: object
      properties:
        pubsubSubscription:
          description: The Pub/Sub subscription the AppConnector uses to receive notifications.
          type: string
      description: The configuration for Pub/Sub messaging for the AppConnector.
    CloudSecurityZerotrustApplinkLogagentProtoLogAgentDetails:
      type: object
      id: CloudSecurityZerotrustApplinkLogagentProtoLogAgentDetails
      description: LogAgentDetails reflects the details of a log agent.
      properties: {}
    GoogleIamV1TestIamPermissionsResponse:
      type: object
      id: GoogleIamV1TestIamPermissionsResponse
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          type: array
          items:
            type: string
      description: Response message for `TestIamPermissions` method.
    GoogleCloudBeyondcorpPartnerservicesV1mainPartnerServiceOperationMetadata:
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        requestedCancellation:
          readOnly: true
          description: 'Output only. Identifies whether the caller has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          type: boolean
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        target:
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
        verb:
          readOnly: true
          type: string
          description: Output only. Name of the verb executed by the operation.
        statusMessage:
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
      id: GoogleCloudBeyondcorpPartnerservicesV1mainPartnerServiceOperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
    CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig:
      properties:
        applicationName:
          type: string
          description: application_name represents the given name of the application the connection is connecting with.
        applicationEndpoint:
          type: string
          description: 'application_endpoint is the endpoint of the application the form of host:port. For example, "localhost:80".'
        tunnelsPerGateway:
          type: integer
          description: tunnels_per_gateway reflects the number of tunnels between a connector and a gateway.
          format: uint32
        name:
          description: 'name is the unique ID for each connection. TODO(b/190732451) returns connection name from user-specified name in config. Now, name = ${application_name}:${application_endpoint}'
          type: string
        userPort:
          format: int32
          description: user_port specifies the reserved port on gateways for user connections.
          type: integer
        project:
          description: project represents the consumer project the connection belongs to.
          type: string
        gateway:
          items:
            $ref: '#/components/schemas/CloudSecurityZerotrustApplinkAppConnectorProtoGateway'
          type: array
          description: gateway lists all instances running a gateway in GCP. They all connect to a connector on the host.
      id: CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig
      description: ConnectionConfig represents a Connection Configuration object.
      type: object
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      properties:
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
    AppGateway:
      description: A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be authorised for a single AppGateway.
      id: AppGateway
      type: object
      properties:
        updateTime:
          format: google-datetime
          description: Output only. Timestamp when the resource was last modified.
          type: string
          readOnly: true
        createTime:
          readOnly: true
          type: string
          description: Output only. Timestamp when the resource was created.
          format: google-datetime
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user provided metadata.
          type: object
        hostType:
          enumDescriptions:
            - Default value. This value is unused.
            - AppGateway hosted in a GCP regional managed instance group.
          description: Required. The type of hosting used by the AppGateway.
          type: string
          enum:
            - HOST_TYPE_UNSPECIFIED
            - GCP_REGIONAL_MIG
        state:
          readOnly: true
          description: Output only. The current state of the AppGateway.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - CREATED
            - UPDATING
            - DELETING
            - DOWN
          enumDescriptions:
            - Default value. This value is unused.
            - AppGateway is being created.
            - AppGateway has been created.
            - AppGateway's configuration is being updated.
            - AppGateway is being deleted.
            - AppGateway is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF.
          type: string
        displayName:
          description: Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.
          type: string
        uid:
          description: Output only. A unique identifier for the instance generated by the system.
          readOnly: true
          type: string
        type:
          description: Required. The type of network connectivity used by the AppGateway.
          enumDescriptions:
            - Default value. This value is unused.
            - TCP Proxy based BeyondCorp Connection. API will default to this if unset.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - TCP_PROXY
        allocatedConnections:
          type: array
          readOnly: true
          description: Output only. A list of connections allocated for the Gateway
          items:
            $ref: '#/components/schemas/AllocatedConnection'
        name:
          description: Required. Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.
          type: string
        uri:
          type: string
          description: Output only. Server-defined URI for this resource.
          readOnly: true
    GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint:
      description: ApplicationEndpoint represents a remote application endpoint.
      type: object
      id: GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint
      properties:
        port:
          format: int32
          type: integer
          description: Required. Port of the remote application endpoint.
        host:
          type: string
          description: Required. Hostname or IP address of the remote application endpoint.
    GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponse:
      id: GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponse
      type: object
      description: Response message for BeyondCorp.ResolveAppConnections.
      properties:
        appConnectionDetails:
          type: array
          description: A list of BeyondCorp AppConnections with details in the project.
          items:
            $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails'
        nextPageToken:
          type: string
          description: 'A token to retrieve the next page of results, or empty if there are no more results in the list.'
        unreachable:
          items:
            type: string
          type: array
          description: A list of locations that could not be reached.
    GoogleLongrunningCancelOperationRequest:
      properties: {}
      type: object
      id: GoogleLongrunningCancelOperationRequest
      description: The request message for Operations.CancelOperation.
    CloudSecurityZerotrustApplinkAppConnectorProtoConnectorDetails:
      id: CloudSecurityZerotrustApplinkAppConnectorProtoConnectorDetails
      type: object
      description: ConnectorDetails reflects the details of a connector.
      properties: {}
    GoogleCloudBeyondcorpAppconnectorsV1ImageConfig:
      id: GoogleCloudBeyondcorpAppconnectorsV1ImageConfig
      type: object
      description: ImageConfig defines the control plane images to run.
      properties:
        targetImage:
          description: 'The initial image the remote agent will attempt to run for the control plane. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1'
          type: string
        stableImage:
          type: string
          description: 'The stable image that the remote agent will fallback to if the target image fails. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1'
    GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount:
      id: GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount
      type: object
      properties:
        email:
          type: string
          description: Email address of the service account.
      description: ServiceAccount represents a GCP service account.
    GoogleCloudBeyondcorpAppconnectionsV1ListAppConnectionsResponse:
      id: GoogleCloudBeyondcorpAppconnectionsV1ListAppConnectionsResponse
      type: object
      properties:
        unreachable:
          items:
            type: string
          description: A list of locations that could not be reached.
          type: array
        nextPageToken:
          description: 'A token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
        appConnections:
          description: A list of BeyondCorp AppConnections in the project.
          items:
            $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection'
          type: array
      description: Response message for BeyondCorp.ListAppConnections.
    GoogleRpcStatus:
      type: object
      id: GoogleRpcStatus
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    GoogleCloudBeyondcorpAppconnectorsV1alphaContainerHealthDetails:
      properties:
        extendedStatus:
          description: 'The extended status. Such as ExitCode, StartedAt, FinishedAt, etc.'
          type: object
          additionalProperties:
            type: string
        errorMsg:
          description: The latest error message.
          type: string
        currentConfigVersion:
          description: The version of the current config.
          type: string
        expectedConfigVersion:
          type: string
          description: The version of the expected config.
      id: GoogleCloudBeyondcorpAppconnectorsV1alphaContainerHealthDetails
      description: ContainerHealthDetails reflects the health details of a container.
      type: object
    Tunnelv1ProtoTunnelerError:
      properties:
        err:
          type: string
          description: Original raw error
        retryable:
          type: boolean
          description: 'retryable isn''t used for now, but we may want to reuse it in the future.'
      type: object
      id: Tunnelv1ProtoTunnelerError
      description: TunnelerError is an error proto for errors returned by the connection manager.
    GoogleCloudBeyondcorpAppconnectorsV1ResolveInstanceConfigResponse:
      properties:
        instanceConfig:
          $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig'
          description: AppConnectorInstanceConfig.
      id: GoogleCloudBeyondcorpAppconnectorsV1ResolveInstanceConfigResponse
      type: object
      description: Response message for BeyondCorp.ResolveInstanceConfig.
    GoogleCloudBeyondcorpConnectorsV1alphaRemoteAgentDetails:
      properties: {}
      description: RemoteAgentDetails reflects the details of a remote agent.
      type: object
      id: GoogleCloudBeyondcorpConnectorsV1alphaRemoteAgentDetails
    GoogleCloudBeyondcorpConnectorsV1alphaContainerHealthDetails:
      type: object
      properties:
        currentConfigVersion:
          type: string
          description: The version of the current config.
        errorMsg:
          description: The latest error message.
          type: string
        extendedStatus:
          description: 'The extended status. Such as ExitCode, StartedAt, FinishedAt, etc.'
          additionalProperties:
            type: string
          type: object
        expectedConfigVersion:
          type: string
          description: The version of the expected config.
      description: ContainerHealthDetails reflects the health details of a container.
      id: GoogleCloudBeyondcorpConnectorsV1alphaContainerHealthDetails
    GoogleIamV1AuditLogConfig:
      id: GoogleIamV1AuditLogConfig
      properties:
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
        exemptedMembers:
          items:
            type: string
          type: array
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      type: object
    GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway:
      type: object
      description: Gateway represents a user facing component that serves as an entrance to enable connectivity.
      id: GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway
      properties:
        ingressPort:
          type: integer
          format: int32
          description: 'Output only. Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.'
          readOnly: true
        type:
          enumDescriptions:
            - Default value. This value is unused.
            - Gateway hosted in a GCP regional managed instance group.
          enum:
            - TYPE_UNSPECIFIED
            - GCP_REGIONAL_MIG
          description: Required. The type of hosting used by the gateway.
          type: string
        l7psc:
          description: Output only. L7 private service connection for this resource.
          readOnly: true
          type: string
        appGateway:
          description: 'Required. AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`'
          type: string
        uri:
          readOnly: true
          type: string
          description: Output only. Server-defined URI for this resource.
    AppGatewayOperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
        statusMessage:
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
        target:
          type: string
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
        requestedCancellation:
          type: boolean
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
      id: AppGatewayOperationMetadata
      type: object
    GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo:
      description: 'ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent'
      properties:
        resource:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Specific details for the resource. This is for internal use only.
          type: object
        sub:
          type: array
          description: List of Info for the sub level resources.
          items:
            $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo'
        time:
          description: The timestamp to collect the info. It is suggested to be set by the topmost level resource only.
          type: string
          format: google-datetime
        id:
          description: Required. Unique Id for the resource.
          type: string
        status:
          type: string
          enum:
            - HEALTH_STATUS_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - UNRESPONSIVE
            - DEGRADED
          description: Overall health status. Overall status is derived based on the status of each sub level resources.
          enumDescriptions:
            - 'Health status is unknown: not initialized or failed to retrieve.'
            - The resource is healthy.
            - The resource is unhealthy.
            - The resource is unresponsive.
            - Some sub-resources are UNHEALTHY.
      id: GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo
      type: object
    GoogleCloudBeyondcorpAppconnectorsV1alphaRemoteAgentDetails:
      description: RemoteAgentDetails reflects the details of a remote agent.
      id: GoogleCloudBeyondcorpAppconnectorsV1alphaRemoteAgentDetails
      properties: {}
      type: object
    GoogleCloudBeyondcorpAppconnectorsV1ContainerHealthDetails:
      properties:
        currentConfigVersion:
          type: string
          description: The version of the current config.
        expectedConfigVersion:
          description: The version of the expected config.
          type: string
        errorMsg:
          type: string
          description: The latest error message.
        extendedStatus:
          type: object
          description: 'The extended status. Such as ExitCode, StartedAt, FinishedAt, etc.'
          additionalProperties:
            type: string
      description: ContainerHealthDetails reflects the health details of a container.
      type: object
      id: GoogleCloudBeyondcorpAppconnectorsV1ContainerHealthDetails
    GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerServiceOperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        statusMessage:
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
          readOnly: true
        requestedCancellation:
          type: boolean
          description: 'Output only. Identifies whether the caller has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          readOnly: true
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
        apiVersion:
          type: string
          readOnly: true
          description: Output only. API version used to start the operation.
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
          readOnly: true
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
      type: object
      id: GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerServiceOperationMetadata
  parameters:
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: google.beyondcorp.operations
      name: operations
      title: Operations
      methods:
        organizations_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _organizations_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/organizations_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/organizations_locations_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/organizations_locations_operations_delete'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    client_gateways_iam_policies:
      id: google.beyondcorp.client_gateways_iam_policies
      name: client_gateways_iam_policies
      title: Client Gateways Iam Policies
      methods:
        projects_locations_client_gateways_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientGateways~1{clientGatewaysId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_client_gateways_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientGateways~1{clientGatewaysId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_client_gateways_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientGateways~1{clientGatewaysId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_client_gateways_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientGateways~1{clientGatewaysId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/client_gateways_iam_policies/methods/projects_locations_client_gateways_get_iam_policy'
        insert: []
        update: []
        delete: []
    app_connections_iam_policies:
      id: google.beyondcorp.app_connections_iam_policies
      name: app_connections_iam_policies
      title: App Connections Iam Policies
      methods:
        projects_locations_app_connections_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections~1{appConnectionsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_app_connections_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections~1{appConnectionsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connections_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections~1{appConnectionsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connections_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections~1{appConnectionsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_connections_iam_policies/methods/projects_locations_app_connections_get_iam_policy'
        insert: []
        update: []
        delete: []
    app_connections:
      id: google.beyondcorp.app_connections
      name: app_connections
      title: App Connections
      methods:
        projects_locations_app_connections_resolve:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections:resolve/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connections_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.appConnections
        _projects_locations_app_connections_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connections_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connections_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections~1{appConnectionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connections_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections~1{appConnectionsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connections_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnections~1{appConnectionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_connections/methods/projects_locations_app_connections_get'
          - $ref: '#/components/x-stackQL-resources/app_connections/methods/projects_locations_app_connections_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/app_connections/methods/projects_locations_app_connections_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/app_connections/methods/projects_locations_app_connections_delete'
    client_connector_services_iam_policies:
      id: google.beyondcorp.client_connector_services_iam_policies
      name: client_connector_services_iam_policies
      title: Client Connector Services Iam Policies
      methods:
        projects_locations_client_connector_services_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientConnectorServices~1{clientConnectorServicesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_client_connector_services_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientConnectorServices~1{clientConnectorServicesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_client_connector_services_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientConnectorServices~1{clientConnectorServicesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_client_connector_services_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clientConnectorServices~1{clientConnectorServicesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/client_connector_services_iam_policies/methods/projects_locations_client_connector_services_get_iam_policy'
        insert: []
        update: []
        delete: []
    app_gateways:
      id: google.beyondcorp.app_gateways
      name: app_gateways
      title: App Gateways
      methods:
        projects_locations_app_gateways_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appGateways~1{appGatewaysId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_gateways_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appGateways~1{appGatewaysId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_gateways_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appGateways/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.appGateways
        _projects_locations_app_gateways_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appGateways/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_gateways_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appGateways/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_gateways/methods/projects_locations_app_gateways_get'
          - $ref: '#/components/x-stackQL-resources/app_gateways/methods/projects_locations_app_gateways_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/app_gateways/methods/projects_locations_app_gateways_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/app_gateways/methods/projects_locations_app_gateways_delete'
    app_gateways_iam_policies:
      id: google.beyondcorp.app_gateways_iam_policies
      name: app_gateways_iam_policies
      title: App Gateways Iam Policies
      methods:
        projects_locations_app_gateways_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appGateways~1{appGatewaysId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_gateways_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appGateways~1{appGatewaysId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_gateways_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appGateways~1{appGatewaysId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_app_gateways_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appGateways~1{appGatewaysId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_gateways_iam_policies/methods/projects_locations_app_gateways_get_iam_policy'
        insert: []
        update: []
        delete: []
    app_connectors:
      id: google.beyondcorp.app_connectors
      name: app_connectors
      title: App Connectors
      methods:
        projects_locations_app_connectors_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connectors_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.appConnectors
        _projects_locations_app_connectors_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connectors_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors~1{appConnectorsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connectors_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors~1{appConnectorsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connectors_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors~1{appConnectorsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connectors_report_status:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors~1{appConnectorsId}:reportStatus/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connectors_resolve_instance_config:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors~1{appConnectorsId}:resolveInstanceConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_connectors/methods/projects_locations_app_connectors_get'
          - $ref: '#/components/x-stackQL-resources/app_connectors/methods/projects_locations_app_connectors_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/app_connectors/methods/projects_locations_app_connectors_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/app_connectors/methods/projects_locations_app_connectors_delete'
    app_connectors_iam_policies:
      id: google.beyondcorp.app_connectors_iam_policies
      name: app_connectors_iam_policies
      title: App Connectors Iam Policies
      methods:
        projects_locations_app_connectors_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors~1{appConnectorsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _projects_locations_app_connectors_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors~1{appConnectorsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connectors_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors~1{appConnectorsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_app_connectors_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1appConnectors~1{appConnectorsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_connectors_iam_policies/methods/projects_locations_app_connectors_get_iam_policy'
        insert: []
        update: []
        delete: []
    locations:
      id: google.beyondcorp.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: beyondcorp.organizations.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: organizations_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: beyondcorp.organizations.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: organizations_locations_operations_get
      x-stackQL-verb: select
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: beyondcorp.organizations.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: organizations_locations_operations_delete
      x-stackQL-verb: delete
  '/v1/organizations/{organizationsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: beyondcorp.organizations.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: organizations_locations_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: beyondcorp.projects.locations.clientGateways.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientGatewaysId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: client_gateways_iam_policies
      x-stackQL-method: projects_locations_client_gateways_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: beyondcorp.projects.locations.clientGateways.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientGatewaysId
          required: true
          schema:
            type: string
      x-stackQL-resource: client_gateways_iam_policies
      x-stackQL-method: projects_locations_client_gateways_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: beyondcorp.projects.locations.clientGateways.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientGatewaysId
          required: true
          schema:
            type: string
      x-stackQL-resource: client_gateways_iam_policies
      x-stackQL-method: projects_locations_client_gateways_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: beyondcorp.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: beyondcorp.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: beyondcorp.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: beyondcorp.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: beyondcorp.projects.locations.appConnections.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: app_connections_iam_policies
      x-stackQL-method: projects_locations_app_connections_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnections:resolve':
    parameters: *ref_1
    get:
      description: Resolves AppConnections details for a given AppConnector. An internal method called by a connector to find AppConnections to connect to.
      operationId: beyondcorp.projects.locations.appConnections.resolve
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: appConnectorId
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: app_connections
      x-stackQL-method: projects_locations_app_connections_resolve
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnections':
    parameters: *ref_1
    get:
      description: Lists AppConnections in a given project and location.
      operationId: beyondcorp.projects.locations.appConnections.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1ListAppConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: app_connections
      x-stackQL-method: projects_locations_app_connections_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.appConnections
    post:
      description: Creates a new AppConnection in a given project and location.
      operationId: beyondcorp.projects.locations.appConnections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: appConnectionId
          schema:
            type: string
      x-stackQL-resource: app_connections
      x-stackQL-method: projects_locations_app_connections_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: beyondcorp.projects.locations.appConnections.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_connections_iam_policies
      x-stackQL-method: projects_locations_app_connections_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}':
    parameters: *ref_1
    delete:
      description: Deletes a single AppConnection.
      operationId: beyondcorp.projects.locations.appConnections.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: app_connections
      x-stackQL-method: projects_locations_app_connections_delete
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of a single AppConnection.
      operationId: beyondcorp.projects.locations.appConnections.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: app_connections
      x-stackQL-method: projects_locations_app_connections_patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single AppConnection.
      operationId: beyondcorp.projects.locations.appConnections.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectionsV1AppConnection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_connections
      x-stackQL-method: projects_locations_app_connections_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: beyondcorp.projects.locations.appConnections.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_connections_iam_policies
      x-stackQL-method: projects_locations_app_connections_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: beyondcorp.projects.locations.clientConnectorServices.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientConnectorServicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: client_connector_services_iam_policies
      x-stackQL-method: projects_locations_client_connector_services_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: beyondcorp.projects.locations.clientConnectorServices.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientConnectorServicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: client_connector_services_iam_policies
      x-stackQL-method: projects_locations_client_connector_services_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: beyondcorp.projects.locations.clientConnectorServices.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clientConnectorServicesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: client_connector_services_iam_policies
      x-stackQL-method: projects_locations_client_connector_services_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}':
    parameters: *ref_1
    get:
      description: Gets details of a single AppGateway.
      operationId: beyondcorp.projects.locations.appGateways.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppGateway'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appGatewaysId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_gateways
      x-stackQL-method: projects_locations_app_gateways_get
      x-stackQL-verb: select
    delete:
      description: Deletes a single AppGateway.
      operationId: beyondcorp.projects.locations.appGateways.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appGatewaysId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: app_gateways
      x-stackQL-method: projects_locations_app_gateways_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: beyondcorp.projects.locations.appGateways.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appGatewaysId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_gateways_iam_policies
      x-stackQL-method: projects_locations_app_gateways_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: beyondcorp.projects.locations.appGateways.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appGatewaysId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_gateways_iam_policies
      x-stackQL-method: projects_locations_app_gateways_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/appGateways':
    parameters: *ref_1
    get:
      description: Lists AppGateways in a given project and location.
      operationId: beyondcorp.projects.locations.appGateways.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppGatewaysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: app_gateways
      x-stackQL-method: projects_locations_app_gateways_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.appGateways
    post:
      description: Creates a new AppGateway in a given project and location.
      operationId: beyondcorp.projects.locations.appGateways.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppGateway'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: appGatewayId
          schema:
            type: string
      x-stackQL-resource: app_gateways
      x-stackQL-method: projects_locations_app_gateways_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: beyondcorp.projects.locations.appGateways.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appGatewaysId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: app_gateways_iam_policies
      x-stackQL-method: projects_locations_app_gateways_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnectors':
    parameters: *ref_1
    post:
      description: Creates a new AppConnector in a given project and location.
      operationId: beyondcorp.projects.locations.appConnectors.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnector'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: appConnectorId
          schema:
            type: string
      x-stackQL-resource: app_connectors
      x-stackQL-method: projects_locations_app_connectors_create
      x-stackQL-verb: insert
    get:
      description: Lists AppConnectors in a given project and location.
      operationId: beyondcorp.projects.locations.appConnectors.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1ListAppConnectorsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: app_connectors
      x-stackQL-method: projects_locations_app_connectors_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.appConnectors
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single AppConnector.
      operationId: beyondcorp.projects.locations.appConnectors.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnector'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_connectors
      x-stackQL-method: projects_locations_app_connectors_get
      x-stackQL-verb: select
    delete:
      description: Deletes a single AppConnector.
      operationId: beyondcorp.projects.locations.appConnectors.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectorsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: app_connectors
      x-stackQL-method: projects_locations_app_connectors_delete
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of a single AppConnector.
      operationId: beyondcorp.projects.locations.appConnectors.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1AppConnector'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectorsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: app_connectors
      x-stackQL-method: projects_locations_app_connectors_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:reportStatus':
    parameters: *ref_1
    post:
      description: Report status for a given connector.
      operationId: beyondcorp.projects.locations.appConnectors.reportStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_connectors
      x-stackQL-method: projects_locations_app_connectors_report_status
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: beyondcorp.projects.locations.appConnectors.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectorsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: app_connectors_iam_policies
      x-stackQL-method: projects_locations_app_connectors_get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: beyondcorp.projects.locations.appConnectors.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_connectors_iam_policies
      x-stackQL-method: projects_locations_app_connectors_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: beyondcorp.projects.locations.appConnectors.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_connectors_iam_policies
      x-stackQL-method: projects_locations_app_connectors_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:resolveInstanceConfig':
    parameters: *ref_1
    get:
      description: Gets instance configuration for a given AppConnector. An internal method called by a AppConnector to get its container config.
      operationId: beyondcorp.projects.locations.appConnectors.resolveInstanceConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudBeyondcorpAppconnectorsV1ResolveInstanceConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: appConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_connectors
      x-stackQL-method: projects_locations_app_connectors_resolve_instance_config
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: beyondcorp.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: beyondcorp.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_get
      x-stackQL-verb: select
