openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Resource Manager API
  description: 'Creates, reads, and updates metadata for Google Cloud Platform resource containers.'
  version: v3
  x-discovery-doc-revision: '20230810'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/resource-manager'
servers:
  - url: 'https://cloudresourcemanager.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud services and see the email address of your Google Account
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    TagBinding:
      description: 'A TagBinding represents a connection between a TagValue and a cloud resource Once a TagBinding is created, the TagValue is applied to all the descendants of the Google Cloud resource.'
      properties:
        tagValueNamespacedName:
          type: string
          description: 'The namespaced name for the TagValue of the TagBinding. Must be in the format `{parent_id}/{tag_key_short_name}/{short_name}`. For methods that support TagValue namespaced name, only one of tag_value_namespaced_name or tag_value may be filled. Requests with both fields will be rejected.'
        parent:
          description: The full resource name of the resource the TagValue is bound to. E.g. `//cloudresourcemanager.googleapis.com/projects/123`
          type: string
        name:
          description: 'Output only. The name of the TagBinding. This is a String of the form: `tagBindings/{full-resource-name}/{tag-value-name}` (e.g. `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`).'
          type: string
          readOnly: true
        tagValue:
          description: The TagValue of the TagBinding. Must be of the form `tagValues/456`.
          type: string
      type: object
      id: TagBinding
    Binding:
      properties:
        members:
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          type: array
          items:
            type: string
        role:
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
          type: string
        condition:
          $ref: '#/components/schemas/Expr'
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
      id: Binding
      type: object
      description: 'Associates `members`, or principals, with a `role`.'
    AuditLogConfig:
      id: AuditLogConfig
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      type: object
      properties:
        exemptedMembers:
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          type: array
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          description: The log type that this config enables.
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
    CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation:
      id: CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation
      description: Metadata describing a long running folder operation
      properties:
        displayName:
          type: string
          description: The display name of the folder.
        destinationParent:
          description: The resource name of the folder or organization we are either creating the folder under or moving the folder to.
          type: string
        sourceParent:
          description: The resource name of the folder's parent. Only applicable when the operation_type is MOVE.
          type: string
        operationType:
          description: The type of this operation.
          enumDescriptions:
            - Operation type not specified.
            - A create folder operation.
            - A move folder operation.
          type: string
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - MOVE
      type: object
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      type: object
      properties:
        permissions:
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          type: array
      description: Response message for `TestIamPermissions` method.
    DeleteTagBindingMetadata:
      description: Runtime operation information for deleting a TagBinding.
      id: DeleteTagBindingMetadata
      properties: {}
      type: object
    MoveFolderRequest:
      description: The MoveFolder request message.
      type: object
      id: MoveFolderRequest
      properties:
        destinationParent:
          type: string
          description: 'Required. The resource name of the folder or organization which should be the folder''s new parent. Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.'
    CreateTagValueMetadata:
      properties: {}
      description: Runtime operation information for creating a TagValue.
      type: object
      id: CreateTagValueMetadata
    CloudresourcemanagerGoogleCloudResourcemanagerV2alpha1FolderOperation:
      id: CloudresourcemanagerGoogleCloudResourcemanagerV2alpha1FolderOperation
      properties:
        destinationParent:
          description: The resource name of the folder or organization we are either creating the folder under or moving the folder to.
          type: string
        sourceParent:
          description: The resource name of the folder's parent. Only applicable when the operation_type is MOVE.
          type: string
        operationType:
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - MOVE
          enumDescriptions:
            - Operation type not specified.
            - A create folder operation.
            - A move folder operation.
          description: The type of this operation.
          type: string
        displayName:
          type: string
          description: The display name of the folder.
      description: Metadata describing a long running folder operation
      type: object
    ListTagHoldsResponse:
      properties:
        tagHolds:
          description: A possibly paginated list of TagHolds.
          type: array
          items:
            $ref: '#/components/schemas/TagHold'
        nextPageToken:
          description: 'Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.'
          type: string
      type: object
      id: ListTagHoldsResponse
      description: The ListTagHolds response.
    MoveFolderMetadata:
      description: Metadata pertaining to the folder move process.
      type: object
      id: MoveFolderMetadata
      properties:
        destinationParent:
          type: string
          description: The resource name of the folder or organization to move the folder to.
        displayName:
          type: string
          description: The display name of the folder.
        sourceParent:
          type: string
          description: The resource name of the folder's parent.
    UndeleteProjectRequest:
      id: UndeleteProjectRequest
      description: The request sent to the UndeleteProject method.
      properties: {}
      type: object
    CreateProjectMetadata:
      id: CreateProjectMetadata
      properties:
        createTime:
          description: Creation time of the project creation workflow.
          type: string
          format: google-datetime
        gettable:
          type: boolean
          description: True if the project can be retrieved using `GetProject`. No other operations on the project are guaranteed to work until the project creation is complete.
        ready:
          description: True if the project creation process is complete.
          type: boolean
      description: A status object which is used as the `metadata` field for the Operation returned by CreateProject. It provides insight for when significant phases of Project creation have completed.
      type: object
    ListTagKeysResponse:
      properties:
        nextPageToken:
          type: string
          description: A pagination token returned from a previous call to `ListTagKeys` that indicates from where listing should continue.
        tagKeys:
          items:
            $ref: '#/components/schemas/TagKey'
          description: List of TagKeys that live under the specified parent in the request.
          type: array
      id: ListTagKeysResponse
      description: The ListTagKeys response message.
      type: object
    DeleteTagKeyMetadata:
      description: Runtime operation information for deleting a TagKey.
      properties: {}
      type: object
      id: DeleteTagKeyMetadata
    ListFoldersResponse:
      properties:
        folders:
          description: A possibly paginated list of folders that are direct descendants of the specified parent resource.
          items:
            $ref: '#/components/schemas/Folder'
          type: array
        nextPageToken:
          description: A pagination token returned from a previous call to `ListFolders` that indicates from where listing should continue.
          type: string
      id: ListFoldersResponse
      type: object
      description: The ListFolders response message.
    SearchFoldersResponse:
      properties:
        nextPageToken:
          description: A pagination token returned from a previous call to `SearchFolders` that indicates from where searching should continue.
          type: string
        folders:
          description: A possibly paginated folder search results. the specified parent resource.
          items:
            $ref: '#/components/schemas/Folder'
          type: array
      description: The response message for searching folders.
      id: SearchFoldersResponse
      type: object
    SearchOrganizationsResponse:
      id: SearchOrganizationsResponse
      properties:
        organizations:
          description: 'The list of Organizations that matched the search query, possibly paginated.'
          items:
            $ref: '#/components/schemas/Organization'
          type: array
        nextPageToken:
          type: string
          description: 'A pagination token to be used to retrieve the next page of results. If the result is too large to fit within the page size specified in the request, this field will be set with a token that can be used to fetch the next page of results. If this field is empty, it indicates that this response contains the last page of results.'
      description: The response returned from the `SearchOrganizations` method.
      type: object
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      properties: {}
      id: Empty
    CreateFolderMetadata:
      properties:
        displayName:
          description: The display name of the folder.
          type: string
        parent:
          description: The resource name of the folder or organization we are creating the folder under.
          type: string
      type: object
      id: CreateFolderMetadata
      description: Metadata pertaining to the Folder creation process.
    UpdateProjectMetadata:
      description: A status object which is used as the `metadata` field for the Operation returned by UpdateProject.
      id: UpdateProjectMetadata
      type: object
      properties: {}
    UpdateFolderMetadata:
      id: UpdateFolderMetadata
      description: A status object which is used as the `metadata` field for the Operation returned by UpdateFolder.
      type: object
      properties: {}
    DeleteTagValueMetadata:
      type: object
      description: Runtime operation information for deleting a TagValue.
      properties: {}
      id: DeleteTagValueMetadata
    TagKey:
      id: TagKey
      description: 'A TagKey, used to group a set of TagValues.'
      type: object
      properties:
        etag:
          description: Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details.
          type: string
        updateTime:
          readOnly: true
          description: Output only. Update time.
          type: string
          format: google-datetime
        name:
          type: string
          description: 'Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey.'
        description:
          type: string
          description: Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write.
        shortName:
          type: string
          description: 'Required. Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.'
        parent:
          type: string
          description: 'Immutable. The resource name of the TagKey''s parent. A TagKey can be parented by an Organization or a Project. For a TagKey parented by an Organization, its parent must be in the form `organizations/{org_id}`. For a TagKey parented by a Project, its parent can be in the form `projects/{project_id}` or `projects/{project_number}`.'
        purpose:
          enumDescriptions:
            - Unspecified purpose.
            - 'Purpose for Compute Engine firewalls. A corresponding `purpose_data` should be set for the network the tag is intended for. The key should be `network` and the value should be in ## either of these two formats: `https://www.googleapis.com/compute/{compute_version}/projects/{project_id}/global/networks/{network_id}` - `{project_id}/{network_name}` ## Examples: `https://www.googleapis.com/compute/staging_v1/projects/fail-closed-load-testing/global/networks/6992953698831725600` - `fail-closed-load-testing/load-testing-network`'
            - Purpose for data governance. Tag Values created under a key with this purpose may have Tag Value children. No `purpose_data` should be set.
          type: string
          enum:
            - PURPOSE_UNSPECIFIED
            - GCE_FIREWALL
            - DATA_GOVERNANCE
          description: 'Optional. A purpose denotes that this Tag is intended for use in policies of a specific policy engine, and will involve that policy engine in management operations involving this Tag. A purpose does not grant a policy engine exclusive rights to the Tag, and it may be referenced by other policy engines. A purpose cannot be changed once set.'
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Creation time.
          type: string
        namespacedName:
          readOnly: true
          type: string
          description: Output only. Immutable. Namespaced name of the TagKey.
        purposeData:
          description: Optional. Purpose data corresponds to the policy system that the tag is intended for. See documentation for `Purpose` for formatting of this field. Purpose data cannot be changed once set.
          additionalProperties:
            type: string
          type: object
    Folder:
      properties:
        state:
          type: string
          readOnly: true
          enumDescriptions:
            - Unspecified state.
            - The normal and active state.
            - The folder has been marked for deletion by the user.
          description: Output only. The lifecycle state of the folder. Updates to the state must be performed using DeleteFolder and UndeleteFolder.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETE_REQUESTED
        etag:
          description: Output only. A checksum computed by the server based on the current value of the folder resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          readOnly: true
          type: string
        displayName:
          description: 'The folder''s display name. A folder''s display name must be unique amongst its siblings. For example, no two folders with the same parent can share the same display name. The display name must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be no longer than 30 characters. This is captured by the regular expression: `[\p{L}\p{N}]([\p{L}\p{N}_- ]{0,28}[\p{L}\p{N}])?`.'
          type: string
        deleteTime:
          description: Output only. Timestamp when the folder was requested to be deleted.
          readOnly: true
          format: google-datetime
          type: string
        parent:
          description: Required. The folder's parent's resource name. Updates to the folder's parent must be performed using MoveFolder.
          type: string
        updateTime:
          description: Output only. Timestamp when the folder was last modified.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp when the folder was created.
        name:
          description: 'Output only. The resource name of the folder. Its format is `folders/{folder_id}`, for example: "folders/1234".'
          type: string
          readOnly: true
      description: 'A folder in an organization''s resource hierarchy, used to organize that organization''s resources.'
      id: Folder
      type: object
    DeleteProjectMetadata:
      type: object
      id: DeleteProjectMetadata
      description: A status object which is used as the `metadata` field for the Operation returned by `DeleteProject`.
      properties: {}
    Lien:
      id: Lien
      description: A Lien represents an encumbrance on the actions that can be performed on a resource.
      properties:
        createTime:
          type: string
          format: google-datetime
          description: The creation time of this Lien.
        restrictions:
          description: 'The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM permission. The server will validate the permissions against those for which Liens are supported. An empty list is meaningless and will be rejected. Example: [''resourcemanager.projects.delete'']'
          items:
            type: string
          type: array
        origin:
          type: string
          description: 'A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically. Maximum length of 200 characters. Example: ''compute.googleapis.com'''
        reason:
          description: 'Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200 characters. Example: ''Holds production API key'''
          type: string
        parent:
          description: 'A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens are supported. Example: `projects/1234`'
          type: string
        name:
          type: string
          description: 'A system-generated unique identifier for this Lien. Example: `liens/1234abcd`'
      type: object
    ListTagValuesResponse:
      properties:
        tagValues:
          description: A possibly paginated list of TagValues that are direct descendants of the specified parent TagKey.
          type: array
          items:
            $ref: '#/components/schemas/TagValue'
        nextPageToken:
          description: 'A pagination token returned from a previous call to `ListTagValues` that indicates from where listing should continue. This is currently not used, but the server may at any point start supplying a valid token.'
          type: string
      description: The ListTagValues response.
      id: ListTagValuesResponse
      type: object
    CreateTagKeyMetadata:
      description: Runtime operation information for creating a TagKey.
      type: object
      id: CreateTagKeyMetadata
      properties: {}
    MoveProjectRequest:
      properties:
        destinationParent:
          type: string
          description: Required. The new parent to move the Project under.
      id: MoveProjectRequest
      description: The request sent to MoveProject method.
      type: object
    TagValue:
      type: object
      description: A TagValue is a child of a particular TagKey. This is used to group cloud resources for the purpose of controlling them using policies.
      id: TagValue
      properties:
        namespacedName:
          type: string
          readOnly: true
          description: 'Output only. The namespaced name of the TagValue. Can be in the form `{organization_id}/{tag_key_short_name}/{tag_value_short_name}` or `{project_id}/{tag_key_short_name}/{tag_value_short_name}` or `{project_number}/{tag_key_short_name}/{tag_value_short_name}`.'
        description:
          description: Optional. User-assigned description of the TagValue. Must not exceed 256 characters. Read-write.
          type: string
        name:
          type: string
          description: Immutable. Resource name for TagValue in the format `tagValues/456`.
        etag:
          description: Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagValueRequest for details.
          type: string
        createTime:
          format: google-datetime
          description: Output only. Creation time.
          type: string
          readOnly: true
        parent:
          type: string
          description: 'Immutable. The resource name of the new TagValue''s parent TagKey. Must be of the form `tagKeys/{tag_key_id}`.'
        shortName:
          type: string
          description: 'Required. Immutable. User-assigned short name for TagValue. The short name should be unique for TagValues within the same parent TagKey. The short name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.'
        updateTime:
          type: string
          format: google-datetime
          description: Output only. Update time.
          readOnly: true
    DeleteOrganizationMetadata:
      type: object
      properties: {}
      description: A status object which is used as the `metadata` field for the operation returned by DeleteOrganization.
      id: DeleteOrganizationMetadata
    MoveProjectMetadata:
      properties: {}
      type: object
      id: MoveProjectMetadata
      description: A status object which is used as the `metadata` field for the Operation returned by MoveProject.
    GetPolicyOptions:
      properties:
        requestedPolicyVersion:
          format: int32
          type: integer
          description: 'Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
      id: GetPolicyOptions
      type: object
      description: Encapsulates settings provided to GetIamPolicy.
    EffectiveTag:
      properties:
        tagKeyParentName:
          description: 'The parent name of the tag key. Must be in the format `organizations/{organization_id}` or `projects/{project_number}`'
          type: string
        namespacedTagKey:
          description: 'The namespaced name of the TagKey. Can be in the form `{organization_id}/{tag_key_short_name}` or `{project_id}/{tag_key_short_name}` or `{project_number}/{tag_key_short_name}`.'
          type: string
        inherited:
          type: boolean
          description: 'Indicates the inheritance status of a tag value attached to the given resource. If the tag value is inherited from one of the resource''s ancestors, inherited will be true. If false, then the tag value is directly attached to the resource, inherited will be false.'
        namespacedTagValue:
          description: 'The namespaced name of the TagValue. Can be in the form `{organization_id}/{tag_key_short_name}/{tag_value_short_name}` or `{project_id}/{tag_key_short_name}/{tag_value_short_name}` or `{project_number}/{tag_key_short_name}/{tag_value_short_name}`.'
          type: string
        tagValue:
          description: Resource name for TagValue in the format `tagValues/456`.
          type: string
        tagKey:
          type: string
          description: 'The name of the TagKey, in the format `tagKeys/{id}`, such as `tagKeys/123`.'
      id: EffectiveTag
      type: object
      description: 'An EffectiveTag represents a tag that applies to a resource during policy evaluation. Tags can be either directly bound to a resource or inherited from its ancestor. EffectiveTag contains the name and namespaced_name of the tag value and tag key, with additional fields of `inherited` to indicate the inheritance status of the effective tag.'
    CreateTagBindingMetadata:
      id: CreateTagBindingMetadata
      type: object
      properties: {}
      description: Runtime operation information for creating a TagValue.
    ListProjectsResponse:
      description: 'A page of the response received from the ListProjects method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page. NOTE: A response may contain fewer elements than the request `page_size` and still have a `next_page_token`.'
      properties:
        projects:
          description: The list of Projects under the parent. This list can be paginated.
          items:
            $ref: '#/components/schemas/Project'
          type: array
        nextPageToken:
          type: string
          description: 'Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.'
      id: ListProjectsResponse
      type: object
    GetIamPolicyRequest:
      description: Request message for `GetIamPolicy` method.
      id: GetIamPolicyRequest
      type: object
      properties:
        options:
          $ref: '#/components/schemas/GetPolicyOptions'
          description: 'OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.'
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
          format: google-fieldmask
      type: object
      id: SetIamPolicyRequest
    Project:
      id: Project
      type: object
      properties:
        projectId:
          type: string
          description: 'Immutable. The unique, user-assigned id of the project. It must be 6 to 30 lowercase ASCII letters, digits, or hyphens. It must start with a letter. Trailing hyphens are prohibited. Example: `tokyo-rain-123`'
        deleteTime:
          type: string
          description: Output only. The time at which this resource was requested for deletion.
          readOnly: true
          format: google-datetime
        createTime:
          readOnly: true
          description: Output only. Creation time.
          type: string
          format: google-datetime
        etag:
          type: string
          readOnly: true
          description: Output only. A checksum computed by the server based on the current value of the Project resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The most recent time this resource was modified.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. The labels associated with this project. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: \[a-z\](\[-a-z0-9\]*\[a-z0-9\])?. Label values must be between 0 and 63 characters long and must conform to the regular expression (\[a-z\](\[-a-z0-9\]*\[a-z0-9\])?)?. No more than 64 labels can be associated with a given resource. Clients should store labels in a representation such as JSON that does not depend on specific characters being disallowed. Example: `"myBusinessDimension" : "businessValue"`'
        state:
          enumDescriptions:
            - Unspecified state. This is only used/useful for distinguishing unset values.
            - The normal and active state.
            - The project has been marked for deletion by the user (by invoking DeleteProject) or by the system (Google Cloud Platform). This can generally be reversed by invoking UndeleteProject.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETE_REQUESTED
          readOnly: true
          type: string
          description: Output only. The project lifecycle state.
        parent:
          type: string
          description: 'Optional. A reference to a parent Resource. eg., `organizations/123` or `folders/876`.'
        displayName:
          type: string
          description: 'Optional. A user-assigned display name of the project. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `My Project`'
        name:
          description: 'Output only. The unique resource name of the project. It is an int64 generated number prefixed by "projects/". Example: `projects/415104041262`'
          type: string
          readOnly: true
      description: 'A project is a high-level Google Cloud entity. It is a container for ACLs, APIs, App Engine Apps, VMs, and other Google Cloud Platform resources.'
    UndeleteProjectMetadata:
      description: A status object which is used as the `metadata` field for the Operation returned by `UndeleteProject`.
      type: object
      properties: {}
      id: UndeleteProjectMetadata
    Status:
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      properties:
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          format: int32
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
    UpdateTagKeyMetadata:
      description: Runtime operation information for updating a TagKey.
      type: object
      id: UpdateTagKeyMetadata
      properties: {}
    DeleteFolderMetadata:
      description: A status object which is used as the `metadata` field for the `Operation` returned by `DeleteFolder`.
      properties: {}
      id: DeleteFolderMetadata
      type: object
    ListLiensResponse:
      id: ListLiensResponse
      properties:
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
        liens:
          description: A list of Liens.
          type: array
          items:
            $ref: '#/components/schemas/Lien'
      description: The response message for Liens.ListLiens.
      type: object
    AuditConfig:
      properties:
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
          type: array
        service:
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
          type: string
      type: object
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      id: AuditConfig
    UndeleteOrganizationMetadata:
      type: object
      description: A status object which is used as the `metadata` field for the Operation returned by UndeleteOrganization.
      id: UndeleteOrganizationMetadata
      properties: {}
    TagHold:
      properties:
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time this TagHold was created.
        origin:
          description: Optional. An optional string representing the origin of this request. This field should include human-understandable information to distinguish origins from each other. Must be less than 200 characters. E.g. `migs-35678234`
          type: string
        helpLink:
          description: 'Optional. A URL where an end user can learn more about removing this hold. E.g. `https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing`'
          type: string
        holder:
          type: string
          description: Required. The name of the resource where the TagValue is being used. Must be less than 200 characters. E.g. `//compute.googleapis.com/compute/projects/myproject/regions/us-east-1/instanceGroupManagers/instance-group`
        name:
          type: string
          readOnly: true
          description: 'Output only. The resource name of a TagHold. This is a String of the form: `tagValues/{tag-value-id}/tagHolds/{tag-hold-id}` (e.g. `tagValues/123/tagHolds/456`). This resource name is generated by the server.'
      id: TagHold
      description: 'A TagHold represents the use of a TagValue that is not captured by TagBindings. If a TagValue has any TagHolds, deletion will be blocked. This resource is intended to be created in the same cloud location as the `holder`.'
      type: object
    Expr:
      type: object
      properties:
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
        description:
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
          type: string
      id: Expr
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      properties:
        permissions:
          items:
            type: string
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          type: array
      type: object
      description: Request message for `TestIamPermissions` method.
    ProjectCreationStatus:
      id: ProjectCreationStatus
      properties:
        createTime:
          type: string
          description: Creation time of the project creation workflow.
          format: google-datetime
        gettable:
          type: boolean
          description: True if the project can be retrieved using GetProject. No other operations on the project are guaranteed to work until the project creation is complete.
        ready:
          type: boolean
          description: True if the project creation process is complete.
      type: object
      description: A status object which is used as the `metadata` field for the Operation returned by CreateProject. It provides insight for when significant phases of Project creation have completed.
    ListTagBindingsResponse:
      description: The ListTagBindings response.
      properties:
        nextPageToken:
          type: string
          description: 'Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.'
        tagBindings:
          type: array
          items:
            $ref: '#/components/schemas/TagBinding'
          description: A possibly paginated list of TagBindings for the specified resource.
      type: object
      id: ListTagBindingsResponse
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
      id: Operation
      type: object
    UpdateTagValueMetadata:
      type: object
      id: UpdateTagValueMetadata
      properties: {}
      description: Runtime operation information for updating a TagValue.
    UndeleteFolderMetadata:
      description: A status object which is used as the `metadata` field for the `Operation` returned by `UndeleteFolder`.
      properties: {}
      type: object
      id: UndeleteFolderMetadata
    SearchProjectsResponse:
      properties:
        nextPageToken:
          description: 'Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.'
          type: string
        projects:
          description: The list of Projects that matched the list filter query. This list can be paginated.
          type: array
          items:
            $ref: '#/components/schemas/Project'
      id: SearchProjectsResponse
      description: A page of the response received from the SearchProjects method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page.
      type: object
    UndeleteFolderRequest:
      id: UndeleteFolderRequest
      description: The UndeleteFolder request message.
      type: object
      properties: {}
    Policy:
      id: Policy
      properties:
        version:
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
          type: integer
        etag:
          format: byte
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
          type: array
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      type: object
    ListEffectiveTagsResponse:
      properties:
        effectiveTags:
          type: array
          items:
            $ref: '#/components/schemas/EffectiveTag'
          description: A possibly paginated list of effective tags for the specified resource.
        nextPageToken:
          description: 'Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.'
          type: string
      description: The response of ListEffectiveTags.
      type: object
      id: ListEffectiveTagsResponse
    FolderOperationError:
      type: object
      properties:
        errorMessageId:
          type: string
          description: The type of operation error experienced.
          enum:
            - ERROR_TYPE_UNSPECIFIED
            - ACTIVE_FOLDER_HEIGHT_VIOLATION
            - MAX_CHILD_FOLDERS_VIOLATION
            - FOLDER_NAME_UNIQUENESS_VIOLATION
            - RESOURCE_DELETED_VIOLATION
            - PARENT_DELETED_VIOLATION
            - CYCLE_INTRODUCED_VIOLATION
            - FOLDER_BEING_MOVED_VIOLATION
            - FOLDER_TO_DELETE_NON_EMPTY_VIOLATION
            - DELETED_FOLDER_HEIGHT_VIOLATION
          enumDescriptions:
            - The error type was unrecognized or unspecified.
            - The attempted action would violate the max folder depth constraint.
            - The attempted action would violate the max child folders constraint.
            - The attempted action would violate the locally-unique folder display_name constraint.
            - The resource being moved has been deleted.
            - The resource a folder was being added to has been deleted.
            - The attempted action would introduce cycle in resource path.
            - The attempted action would move a folder that is already being moved.
            - The folder the caller is trying to delete contains active resources.
            - The attempted action would violate the max deleted folder depth constraint.
      description: A classification of the Folder Operation error.
      id: FolderOperationError
    Organization:
      type: object
      description: 'The root node in the resource hierarchy to which a particular entity''s (a company, for example) resources belong.'
      id: Organization
      properties:
        displayName:
          readOnly: true
          type: string
          description: 'Output only. A human-readable string that refers to the organization in the Google Cloud Console. This string is set by the server and cannot be changed. The string will be set to the primary domain (for example, "google.com") of the Google Workspace customer that owns the organization.'
        directoryCustomerId:
          description: Immutable. The G Suite / Workspace customer id used in the Directory API.
          type: string
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Timestamp when the Organization was last modified.
        etag:
          readOnly: true
          type: string
          description: Output only. A checksum computed by the server based on the current value of the Organization resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        createTime:
          readOnly: true
          description: Output only. Timestamp when the Organization was created.
          type: string
          format: google-datetime
        state:
          type: string
          description: Output only. The organization's current lifecycle state.
          readOnly: true
          enumDescriptions:
            - Unspecified state. This is only useful for distinguishing unset values.
            - The normal and active state.
            - The organization has been marked for deletion by the user.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETE_REQUESTED
        name:
          readOnly: true
          description: 'Output only. The resource name of the organization. This is the organization''s relative path in the API. Its format is "organizations/[organization_id]". For example, "organizations/1234".'
          type: string
        deleteTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp when the Organization was requested for deletion.
    FolderOperation:
      id: FolderOperation
      type: object
      properties:
        displayName:
          description: The display name of the folder.
          type: string
        destinationParent:
          description: The resource name of the folder or organization we are either creating the folder under or moving the folder to.
          type: string
        sourceParent:
          type: string
          description: The resource name of the folder's parent. Only applicable when the operation_type is MOVE.
        operationType:
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - MOVE
          description: The type of this operation.
          type: string
          enumDescriptions:
            - Operation type not specified.
            - A create folder operation.
            - A move folder operation.
      description: Metadata describing a long running folder operation
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  x-stackQL-resources:
    organizations_iam_policies:
      id: google.cloudresourcemanager.organizations_iam_policies
      name: organizations_iam_policies
      title: Organizations Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v3~1organizations~1{organizationsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1organizations~1{organizationsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1organizations~1{organizationsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1organizations~1{organizationsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organizations_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    organizations:
      id: google.cloudresourcemanager.organizations
      name: organizations
      title: Organizations
      methods:
        search:
          operation:
            $ref: '#/paths/~1v3~1organizations:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v3~1organizations~1{organizationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organizations/methods/get'
        insert: []
        update: []
        delete: []
    effective_tags:
      id: google.cloudresourcemanager.effective_tags
      name: effective_tags
      title: Effective Tags
      methods:
        list:
          operation:
            $ref: '#/paths/~1v3~1effectiveTags/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.effectiveTags
        _list:
          operation:
            $ref: '#/paths/~1v3~1effectiveTags/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/effective_tags/methods/list'
        insert: []
        update: []
        delete: []
    tag_bindings:
      id: google.cloudresourcemanager.tag_bindings
      name: tag_bindings
      title: Tag Bindings
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v3~1tagBindings~1{tagBindingsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v3~1tagBindings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v3~1tagBindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tagBindings
        _list:
          operation:
            $ref: '#/paths/~1v3~1tagBindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_bindings/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tag_bindings/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tag_bindings/methods/delete'
    tag_keys_iam_policies:
      id: google.cloudresourcemanager.tag_keys_iam_policies
      name: tag_keys_iam_policies
      title: Tag Keys Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1tagKeys~1{tagKeysId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1tagKeys~1{tagKeysId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v3~1tagKeys~1{tagKeysId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1tagKeys~1{tagKeysId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_keys_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    tag_keys:
      id: google.cloudresourcemanager.tag_keys
      name: tag_keys
      title: Tag Keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1v3~1tagKeys~1{tagKeysId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v3~1tagKeys~1{tagKeysId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v3~1tagKeys~1{tagKeysId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v3~1tagKeys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v3~1tagKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tagKeys
        _list:
          operation:
            $ref: '#/paths/~1v3~1tagKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_keys/methods/get'
          - $ref: '#/components/x-stackQL-resources/tag_keys/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tag_keys/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tag_keys/methods/delete'
    tag_keys_namespaced:
      id: google.cloudresourcemanager.tag_keys_namespaced
      name: tag_keys_namespaced
      title: Tag Keys Namespaced
      methods:
        get_namespaced:
          operation:
            $ref: '#/paths/~1v3~1tagKeys~1namespaced/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_keys_namespaced/methods/get_namespaced'
        insert: []
        update: []
        delete: []
    liens:
      id: google.cloudresourcemanager.liens
      name: liens
      title: Liens
      methods:
        get:
          operation:
            $ref: '#/paths/~1v3~1liens~1{liensId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v3~1liens~1{liensId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v3~1liens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.liens
        _list:
          operation:
            $ref: '#/paths/~1v3~1liens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v3~1liens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/liens/methods/get'
          - $ref: '#/components/x-stackQL-resources/liens/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/liens/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/liens/methods/delete'
    folders:
      id: google.cloudresourcemanager.folders
      name: folders
      title: Folders
      methods:
        get:
          operation:
            $ref: '#/paths/~1v3~1folders~1{foldersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v3~1folders~1{foldersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v3~1folders~1{foldersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v3~1folders/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.folders
        _list:
          operation:
            $ref: '#/paths/~1v3~1folders/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v3~1folders/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search:
          operation:
            $ref: '#/paths/~1v3~1folders:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        move:
          operation:
            $ref: '#/paths/~1v3~1folders~1{foldersId}:move/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: '#/paths/~1v3~1folders~1{foldersId}:undelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/folders/methods/get'
          - $ref: '#/components/x-stackQL-resources/folders/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/folders/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/folders/methods/delete'
    folders_iam_policies:
      id: google.cloudresourcemanager.folders_iam_policies
      name: folders_iam_policies
      title: Folders Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1folders~1{foldersId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1folders~1{foldersId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1folders~1{foldersId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v3~1folders~1{foldersId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/folders_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    projects_iam_policies:
      id: google.cloudresourcemanager.projects_iam_policies
      name: projects_iam_policies
      title: Projects Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    projects:
      id: google.cloudresourcemanager.projects
      name: projects
      title: Projects
      methods:
        move:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}:move/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v3~1projects/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v3~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.projects
        _list:
          operation:
            $ref: '#/paths/~1v3~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}:undelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search:
          operation:
            $ref: '#/paths/~1v3~1projects:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/get'
          - $ref: '#/components/x-stackQL-resources/projects/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/projects/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/projects/methods/delete'
    tag_values_iam_policies:
      id: google.cloudresourcemanager.tag_values_iam_policies
      name: tag_values_iam_policies
      title: Tag Values Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_values_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    tag_values:
      id: google.cloudresourcemanager.tag_values
      name: tag_values
      title: Tag Values
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v3~1tagValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v3~1tagValues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tagValues
        _list:
          operation:
            $ref: '#/paths/~1v3~1tagValues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_values/methods/get'
          - $ref: '#/components/x-stackQL-resources/tag_values/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tag_values/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tag_values/methods/delete'
    tag_values_namespaced:
      id: google.cloudresourcemanager.tag_values_namespaced
      name: tag_values_namespaced
      title: Tag Values Namespaced
      methods:
        get_namespaced:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1namespaced/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_values_namespaced/methods/get_namespaced'
        insert: []
        update: []
        delete: []
    tag_holds:
      id: google.cloudresourcemanager.tag_holds
      name: tag_holds
      title: Tag Holds
      methods:
        create:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}~1tagHolds/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}~1tagHolds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tagHolds
        _list:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}~1tagHolds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v3~1tagValues~1{tagValuesId}~1tagHolds~1{tagHoldsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_holds/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tag_holds/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tag_holds/methods/delete'
    operations:
      id: google.cloudresourcemanager.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v3~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete: []
paths:
  '/v3/organizations/{organizationsId}:testIamPermissions':
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
    post:
      description: 'Returns the permissions that a caller has on the specified organization. The `resource` field should be the organization''s resource name, for example: "organizations/123". There are no permissions required for making this API call.'
      operationId: cloudresourcemanager.organizations.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: organizations_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v3/organizations/{organizationsId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: 'Gets the access control policy for an organization resource. The policy may be empty if no such policy or resource exists. The `resource` field should be the organization''s resource name, for example: "organizations/123". Authorization requires the IAM permission `resourcemanager.organizations.getIamPolicy` on the specified organization.'
      operationId: cloudresourcemanager.organizations.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: organizations_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v3/organizations:search':
    parameters: *ref_1
    get:
      description: 'Searches organization resources that are visible to the user and satisfy the specified filter. This method returns organizations in an unspecified order. New organizations do not necessarily appear at the end of the results, and may take a small amount of time to appear. Search will only return organizations on which the user has the permission `resourcemanager.organizations.get`'
      operationId: cloudresourcemanager.organizations.search
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchOrganizationsResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: organizations
      x-stackQL-method: search
      x-stackQL-verb: exec
  '/v3/organizations/{organizationsId}':
    parameters: *ref_1
    get:
      description: Fetches an organization resource identified by the specified resource name.
      operationId: cloudresourcemanager.organizations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: organizations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v3/organizations/{organizationsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on an organization resource. Replaces any existing policy. The `resource` field should be the organization''s resource name, for example: "organizations/123". Authorization requires the IAM permission `resourcemanager.organizations.setIamPolicy` on the specified organization.'
      operationId: cloudresourcemanager.organizations.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: organizations_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  /v3/effectiveTags:
    parameters: *ref_1
    get:
      description: 'Return a list of effective tags for the given Google Cloud resource, as specified in `parent`.'
      operationId: cloudresourcemanager.effectiveTags.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEffectiveTagsResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: effective_tags
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.effectiveTags
  '/v3/tagBindings/{tagBindingsId}':
    parameters: *ref_1
    delete:
      description: Deletes a TagBinding.
      operationId: cloudresourcemanager.tagBindings.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: tagBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_bindings
      x-stackQL-method: delete
      x-stackQL-verb: delete
  /v3/tagBindings:
    parameters: *ref_1
    post:
      description: Creates a TagBinding between a TagValue and a Google Cloud resource.
      operationId: cloudresourcemanager.tagBindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagBinding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: tag_bindings
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: 'Lists the TagBindings for the given Google Cloud resource, as specified with `parent`. NOTE: The `parent` field is expected to be a full resource name: https://cloud.google.com/apis/design/resource_names#full_resource_name'
      operationId: cloudresourcemanager.tagBindings.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagBindingsResponse'
      parameters:
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: tag_bindings
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tagBindings
  '/v3/tagKeys/{tagKeysId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: 'Gets the access control policy for a TagKey. The returned policy may be empty if no such policy or resource exists. The `resource` field should be the TagKey''s resource name. For example, "tagKeys/1234". The caller must have `cloudresourcemanager.googleapis.com/tagKeys.getIamPolicy` permission on the specified TagKey.'
      operationId: cloudresourcemanager.tagKeys.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: tagKeysId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_keys_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v3/tagKeys/{tagKeysId}':
    parameters: *ref_1
    get:
      description: Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key does not exist or the user does not have permission to view it.
      operationId: cloudresourcemanager.tagKeys.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagKey'
      parameters:
        - in: path
          name: tagKeysId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_keys
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a TagKey. The TagKey cannot be deleted if it has any child TagValues.
      operationId: cloudresourcemanager.tagKeys.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: tagKeysId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: tag_keys
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates the attributes of the TagKey resource.
      operationId: cloudresourcemanager.tagKeys.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagKey'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: tagKeysId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tag_keys
      x-stackQL-method: patch
      x-stackQL-verb: exec
  /v3/tagKeys/namespaced:
    parameters: *ref_1
    get:
      description: Retrieves a TagKey by its namespaced name. This method will return `PERMISSION_DENIED` if the key does not exist or the user does not have permission to view it.
      operationId: cloudresourcemanager.tagKeys.getNamespaced
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagKey'
      parameters:
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: tag_keys_namespaced
      x-stackQL-method: get_namespaced
      x-stackQL-verb: select
  /v3/tagKeys:
    parameters: *ref_1
    post:
      description: 'Creates a new TagKey. If another request with the same parameters is sent while the original request is in process, the second request will receive an error. A maximum of 1000 TagKeys can exist under a parent at any given time.'
      operationId: cloudresourcemanager.tagKeys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagKey'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: tag_keys
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists all TagKeys for a parent resource.
      operationId: cloudresourcemanager.tagKeys.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagKeysResponse'
      parameters:
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: tag_keys
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tagKeys
  '/v3/tagKeys/{tagKeysId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified TagKey. The `resource` field should be the TagKey''s resource name. For example, "tagKeys/1234". There are no permissions required for making this API call.'
      operationId: cloudresourcemanager.tagKeys.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: tagKeysId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_keys_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v3/tagKeys/{tagKeysId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on a TagKey, replacing any existing policy. The `resource` field should be the TagKey''s resource name. For example, "tagKeys/1234". The caller must have `resourcemanager.tagKeys.setIamPolicy` permission on the identified tagValue.'
      operationId: cloudresourcemanager.tagKeys.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: tagKeysId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_keys_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v3/liens/{liensId}':
    parameters: *ref_1
    get:
      description: 'Retrieve a Lien by `name`. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.get`'
      operationId: cloudresourcemanager.liens.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lien'
      parameters:
        - in: path
          name: liensId
          required: true
          schema:
            type: string
      x-stackQL-resource: liens
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: 'Delete a Lien by `name`. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.updateLiens`.'
      operationId: cloudresourcemanager.liens.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: liensId
          required: true
          schema:
            type: string
      x-stackQL-resource: liens
      x-stackQL-method: delete
      x-stackQL-verb: delete
  /v3/liens:
    parameters: *ref_1
    get:
      description: 'List all Liens applied to the `parent` resource. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.get`.'
      operationId: cloudresourcemanager.liens.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLiensResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: liens
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.liens
    post:
      description: 'Create a Lien which applies to the resource denoted by the `parent` field. Callers of this method will require permission on the `parent` resource. For example, applying to `projects/1234` requires permission `resourcemanager.projects.updateLiens`. NOTE: Some resources may limit the number of Liens which may be applied.'
      operationId: cloudresourcemanager.liens.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lien'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lien'
      parameters: []
      x-stackQL-resource: liens
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v3/folders/{foldersId}':
    parameters: *ref_1
    get:
      description: 'Retrieves a folder identified by the supplied resource name. Valid folder resource names have the format `folders/{folder_id}` (for example, `folders/1234`). The caller must have `resourcemanager.folders.get` permission on the identified folder.'
      operationId: cloudresourcemanager.folders.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: 'Updates a folder, changing its `display_name`. Changes to the folder `display_name` will be rejected if they violate either the `display_name` formatting rules or the naming constraints described in the CreateFolder documentation. The folder''s `display_name` must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be between 3 and 30 characters. This is captured by the regular expression: `\p{L}\p{N}{1,28}[\p{L}\p{N}]`. The caller must have `resourcemanager.folders.update` permission on the identified folder. If the update fails due to the unique name constraint then a `PreconditionFailure` explaining this violation will be returned in the Status.details field.'
      operationId: cloudresourcemanager.folders.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: 'Requests deletion of a folder. The folder is moved into the DELETE_REQUESTED state immediately, and is deleted approximately 30 days later. This method may only be called on an empty folder, where a folder is empty if it doesn''t contain any folders or projects in the ACTIVE state. If called on a folder in DELETE_REQUESTED state the operation will result in a no-op success. The caller must have `resourcemanager.folders.delete` permission on the identified folder.'
      operationId: cloudresourcemanager.folders.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-method: delete
      x-stackQL-verb: delete
  /v3/folders:
    parameters: *ref_1
    get:
      description: Lists the folders that are direct descendants of supplied parent resource. `list()` provides a strongly consistent view of the folders underneath the specified parent resource. `list()` returns folders sorted based upon the (ascending) lexical ordering of their display_name. The caller must have `resourcemanager.folders.list` permission on the identified parent.
      operationId: cloudresourcemanager.folders.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFoldersResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
      x-stackQL-resource: folders
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.folders
    post:
      description: 'Creates a folder in the resource hierarchy. Returns an `Operation` which can be used to track the progress of the folder creation workflow. Upon success, the `Operation.response` field will be populated with the created Folder. In order to succeed, the addition of this new folder must not violate the folder naming, height, or fanout constraints. + The folder''s `display_name` must be distinct from all other folders that share its parent. + The addition of the folder must not cause the active folder hierarchy to exceed a height of 10. Note, the full active + deleted folder hierarchy is allowed to reach a height of 20; this provides additional headroom when moving folders that contain deleted folders. + The addition of the folder must not cause the total number of folders under its parent to exceed 300. If the operation fails due to a folder constraint violation, some errors may be returned by the `CreateFolder` request, with status code `FAILED_PRECONDITION` and an error description. Other folder constraint violations will be communicated in the `Operation`, with the specific `PreconditionFailure` returned in the details list in the `Operation.error` field. The caller must have `resourcemanager.folders.create` permission on the identified parent.'
      operationId: cloudresourcemanager.folders.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: folders
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v3/folders:search':
    parameters: *ref_1
    get:
      description: Search for folders that match specific filter criteria. `search()` provides an eventually consistent view of the folders a user has access to which meet the specified filter criteria. This will only return folders on which the caller has the permission `resourcemanager.folders.get`.
      operationId: cloudresourcemanager.folders.search
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchFoldersResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: query
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-method: search
      x-stackQL-verb: exec
  '/v3/folders/{foldersId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: 'Gets the access control policy for a folder. The returned policy may be empty if no such policy or resource exists. The `resource` field should be the folder''s resource name, for example: "folders/1234". The caller must have `resourcemanager.folders.getIamPolicy` permission on the identified folder.'
      operationId: cloudresourcemanager.folders.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: folders_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v3/folders/{foldersId}:move':
    parameters: *ref_1
    post:
      description: 'Moves a folder under a new resource parent. Returns an `Operation` which can be used to track the progress of the folder move workflow. Upon success, the `Operation.response` field will be populated with the moved folder. Upon failure, a `FolderOperationError` categorizing the failure cause will be returned - if the failure occurs synchronously then the `FolderOperationError` will be returned in the `Status.details` field. If it occurs asynchronously, then the FolderOperation will be returned in the `Operation.error` field. In addition, the `Operation.metadata` field will be populated with a `FolderOperation` message as an aid to stateless clients. Folder moves will be rejected if they violate either the naming, height, or fanout constraints described in the CreateFolder documentation. The caller must have `resourcemanager.folders.move` permission on the folder''s current and proposed new parent.'
      operationId: cloudresourcemanager.folders.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveFolderRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-method: move
      x-stackQL-verb: exec
  '/v3/folders/{foldersId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on a folder, replacing any existing policy. The `resource` field should be the folder''s resource name, for example: "folders/1234". The caller must have `resourcemanager.folders.setIamPolicy` permission on the identified folder.'
      operationId: cloudresourcemanager.folders.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: folders_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v3/folders/{foldersId}:undelete':
    parameters: *ref_1
    post:
      description: 'Cancels the deletion request for a folder. This method may be called on a folder in any state. If the folder is in the ACTIVE state the result will be a no-op success. In order to succeed, the folder''s parent must be in the ACTIVE state. In addition, reintroducing the folder into the tree must not violate folder naming, height, and fanout constraints described in the CreateFolder documentation. The caller must have `resourcemanager.folders.undelete` permission on the identified folder.'
      operationId: cloudresourcemanager.folders.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteFolderRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-method: undelete
      x-stackQL-verb: exec
  '/v3/folders/{foldersId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified folder. The `resource` field should be the folder''s resource name, for example: "folders/1234". There are no permissions required for making this API call.'
      operationId: cloudresourcemanager.folders.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: folders_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified project, in the format `projects/{ProjectIdOrNumber}` e.g. projects/123..'
      operationId: cloudresourcemanager.projects.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}:move':
    parameters: *ref_1
    post:
      description: 'Move a project to another place in your resource hierarchy, under a new resource parent. Returns an operation which can be used to track the process of the project move workflow. Upon success, the `Operation.response` field will be populated with the moved project. The caller must have `resourcemanager.projects.move` permission on the project, on the project''s current and proposed new parent. If project has no current parent, or it currently does not have an associated organization resource, you will also need the `resourcemanager.projects.setIamPolicy` permission in the project. '
      operationId: cloudresourcemanager.projects.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveProjectRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: move
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}':
    parameters: *ref_1
    patch:
      description: 'Updates the `display_name` and labels of the project identified by the specified `name` (for example, `projects/415104041262`). Deleting all labels requires an update mask for labels field. The caller must have `resourcemanager.projects.update` permission for this project.'
      operationId: cloudresourcemanager.projects.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: 'Marks the project identified by the specified `name` (for example, `projects/415104041262`) for deletion. This method will only affect the project if it has a lifecycle state of ACTIVE. This method changes the Project''s lifecycle state from ACTIVE to DELETE_REQUESTED. The deletion starts at an unspecified time, at which point the Project is no longer accessible. Until the deletion completes, you can check the lifecycle state checked by retrieving the project with GetProject, and the project remains visible to ListProjects. However, you cannot update the project. After the deletion completes, the project is not retrievable by the GetProject, ListProjects, and SearchProjects methods. This method behaves idempotently, such that deleting a `DELETE_REQUESTED` project will not cause an error, but also won''t do anything. The caller must have `resourcemanager.projects.delete` permissions for this project.'
      operationId: cloudresourcemanager.projects.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: 'Retrieves the project identified by the specified `name` (for example, `projects/415104041262`). The caller must have `resourcemanager.projects.get` permission for this project.'
      operationId: cloudresourcemanager.projects.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v3/projects/{projectsId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: 'Returns the IAM access control policy for the specified project, in the format `projects/{ProjectIdOrNumber}` e.g. projects/123. Permission is denied if the policy or the resource do not exist.'
      operationId: cloudresourcemanager.projects.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  /v3/projects:
    parameters: *ref_1
    post:
      description: 'Request that a new project be created. The result is an `Operation` which can be used to track the creation process. This process usually takes a few seconds, but can sometimes take much longer. The tracking `Operation` is automatically deleted after a few hours, so there is no need to call `DeleteOperation`.'
      operationId: cloudresourcemanager.projects.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: projects
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists projects that are direct children of the specified folder or organization resource. `list()` provides a strongly consistent view of the projects underneath the specified parent resource. `list()` returns projects sorted based upon the (ascending) lexical ordering of their `display_name`. The caller must have `resourcemanager.projects.list` permission on the identified parent.
      operationId: cloudresourcemanager.projects.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResponse'
      parameters:
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: showDeleted
          schema:
            type: boolean
      x-stackQL-resource: projects
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.projects
  '/v3/projects/{projectsId}:undelete':
    parameters: *ref_1
    post:
      description: 'Restores the project identified by the specified `name` (for example, `projects/415104041262`). You can only use this method for a project that has a lifecycle state of DELETE_REQUESTED. After deletion starts, the project cannot be restored. The caller must have `resourcemanager.projects.undelete` permission for this project.'
      operationId: cloudresourcemanager.projects.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteProjectRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: undelete
      x-stackQL-verb: exec
  '/v3/projects:search':
    parameters: *ref_1
    get:
      description: 'Search for projects that the caller has both `resourcemanager.projects.get` permission on, and also satisfy the specified query. This method returns projects in an unspecified order. This method is eventually consistent with project mutations; this means that a newly created project may not appear in the results or recent updates to an existing project may not be reflected in the results. To retrieve the latest state of a project, use the GetProject method.'
      operationId: cloudresourcemanager.projects.search
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProjectsResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: search
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the IAM access control policy for the specified project, in the format `projects/{ProjectIdOrNumber}` e.g. projects/123. CAUTION: This method will replace the existing policy, and cannot be used to append additional IAM settings. Note: Removing service accounts from policies or changing their roles can render services completely inoperable. It is important to understand how the service account is being used before removing or updating its roles. The following constraints apply when using `setIamPolicy()`: + Project does not support `allUsers` and `allAuthenticatedUsers` as `members` in a `Binding` of a `Policy`. + The owner role can be granted to a `user`, `serviceAccount`, or a group that is part of an organization. For example, group@myownpersonaldomain.com could be added as an owner to a project in the myownpersonaldomain.com organization, but not the examplepetstore.com organization. + Service accounts can be made owners of a project directly without any restrictions. However, to be added as an owner, a user must be invited using the Cloud Platform console and must accept the invitation. + A user cannot be granted the owner role using `setIamPolicy()`. The user must be granted the owner role using the Cloud Platform Console and must explicitly accept the invitation. + Invitations to grant the owner role cannot be sent using `setIamPolicy()`; they must be sent only using the Cloud Platform Console. + If the project is not part of an organization, there must be at least one owner who has accepted the Terms of Service (ToS) agreement in the policy. Calling `setIamPolicy()` to remove the last ToS-accepted owner from the policy will fail. This restriction also applies to legacy projects that no longer have owners who have accepted the ToS. Edits to IAM policies will be rejected until the lack of a ToS-accepting owner is rectified. If the project is part of an organization, you can remove all owners, potentially making the organization inaccessible.'
      operationId: cloudresourcemanager.projects.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v3/tagValues/{tagValuesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on a TagValue, replacing any existing policy. The `resource` field should be the TagValue''s resource name. For example: `tagValues/1234`. The caller must have `resourcemanager.tagValues.setIamPolicy` permission on the identified tagValue.'
      operationId: cloudresourcemanager.tagValues.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: tagValuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_values_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v3/tagValues/{tagValuesId}':
    parameters: *ref_1
    delete:
      description: Deletes a TagValue. The TagValue cannot have any bindings when it is deleted.
      operationId: cloudresourcemanager.tagValues.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: tagValuesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: tag_values
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates the attributes of the TagValue resource.
      operationId: cloudresourcemanager.tagValues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagValue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: tagValuesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tag_values
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Retrieves a TagValue. This method will return `PERMISSION_DENIED` if the value does not exist or the user does not have permission to view it.
      operationId: cloudresourcemanager.tagValues.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagValue'
      parameters:
        - in: path
          name: tagValuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_values
      x-stackQL-method: get
      x-stackQL-verb: select
  /v3/tagValues:
    parameters: *ref_1
    post:
      description: Creates a TagValue as a child of the specified TagKey. If a another request with the same parameters is sent while the original request is in process the second request will receive an error. A maximum of 1000 TagValues can exist under a TagKey at any given time.
      operationId: cloudresourcemanager.tagValues.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagValue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: tag_values
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists all TagValues for a specific TagKey.
      operationId: cloudresourcemanager.tagValues.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagValuesResponse'
      parameters:
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: tag_values
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tagValues
  '/v3/tagValues/{tagValuesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified TagValue. The `resource` field should be the TagValue''s resource name. For example: `tagValues/1234`. There are no permissions required for making this API call.'
      operationId: cloudresourcemanager.tagValues.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: tagValuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_values_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v3/tagValues/{tagValuesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: 'Gets the access control policy for a TagValue. The returned policy may be empty if no such policy or resource exists. The `resource` field should be the TagValue''s resource name. For example: `tagValues/1234`. The caller must have the `cloudresourcemanager.googleapis.com/tagValues.getIamPolicy` permission on the identified TagValue to get the access control policy.'
      operationId: cloudresourcemanager.tagValues.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: tagValuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_values_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  /v3/tagValues/namespaced:
    parameters: *ref_1
    get:
      description: Retrieves a TagValue by its namespaced name. This method will return `PERMISSION_DENIED` if the value does not exist or the user does not have permission to view it.
      operationId: cloudresourcemanager.tagValues.getNamespaced
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagValue'
      parameters:
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: tag_values_namespaced
      x-stackQL-method: get_namespaced
      x-stackQL-verb: select
  '/v3/tagValues/{tagValuesId}/tagHolds':
    parameters: *ref_1
    post:
      description: Creates a TagHold. Returns ALREADY_EXISTS if a TagHold with the same resource and origin exists under the same TagValue.
      operationId: cloudresourcemanager.tagValues.tagHolds.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagHold'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: tagValuesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: tag_holds
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists TagHolds under a TagValue.
      operationId: cloudresourcemanager.tagValues.tagHolds.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagHoldsResponse'
      parameters:
        - in: path
          name: tagValuesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: tag_holds
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tagHolds
  '/v3/tagValues/{tagValuesId}/tagHolds/{tagHoldsId}':
    parameters: *ref_1
    delete:
      description: Deletes a TagHold.
      operationId: cloudresourcemanager.tagValues.tagHolds.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: tagValuesId
          required: true
          schema:
            type: string
        - in: path
          name: tagHoldsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: tag_holds
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v3/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: cloudresourcemanager.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
