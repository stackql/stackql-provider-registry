openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: SaaS Runtime API
  description: 'Model, deploy, and operate your SaaS at scale. '
  version: v1beta1
  x-discovery-doc-revision: '20250806'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/saas-runtime/docs
servers:
  - url: https://saasservicemgmt.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListSaasResponse:
      id: ListSaasResponse
      description: The response structure for the ListSaas method.
      type: object
      properties:
        saas:
          description: The resulting saas.
          type: array
          items:
            $ref: '#/components/schemas/Saas'
        nextPageToken:
          description: >-
            If present, the next page token can be provided to a subsequent
            ListSaas call to list the next page. If empty, there are no more
            pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Saas:
      id: Saas
      description: Saas is a representation of a SaaS service managed by the Producer.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name (full URI of the resource) following
            the standard naming scheme:
            "projects/{project}/locations/{location}/saas/{saas}"
          type: string
        locations:
          description: >-
            Optional. List of locations that the service is available in.
            Rollout refers to the list to generate a rollout plan.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        labels:
          description: >-
            Optional. The labels on the resource, which can be used for
            categorization. similar to Kubernetes resource labels.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Annotations is an unstructured key-value map stored with a
            resource that may be set by external tools to store and retrieve
            arbitrary metadata. They are not queryable and should be preserved
            when modifying objects. More info:
            https://kubernetes.io/docs/user-guide/annotations
          type: object
          additionalProperties:
            type: string
        uid:
          description: >-
            Output only. The unique identifier of the resource. UID is unique in
            the time and space for this resource within the scope of the
            service. It is typically generated by the server on successful
            creation of a resource and must not be changed. UID is used to
            uniquely identify resources with resource name reuses. This should
            be a UUID4.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. An opaque value that uniquely identifies a version or
            generation of a resource. It can be used to confirm that the client
            and server agree on the ordering of a resource being written.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when the resource was last updated. Any
            change to the resource made by users must refresh this value.
            Changes to a resource made by the service should refresh this value.
          readOnly: true
          type: string
          format: google-datetime
    Location:
      id: Location
      description: Location information that the service is available in.
      type: object
      properties:
        name:
          description: Optional. Name of location.
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    ListTenantsResponse:
      id: ListTenantsResponse
      description: The response structure for the ListTenants method.
      type: object
      properties:
        tenants:
          description: The resulting tenants.
          type: array
          items:
            $ref: '#/components/schemas/Tenant'
        nextPageToken:
          description: >-
            If present, the next page token can be provided to a subsequent
            ListTenants call to list the next page. If empty, there are no more
            pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Tenant:
      id: Tenant
      description: >-
        Tenant represents the service producer side of an instance of the
        service created based on a request from a consumer. In a typical
        scenario a Tenant has a one-to-one mapping with a resource given out to
        a service consumer. Example: tenant: name:
        "projects/svc1/locations/loc/tenants/inst-068afff8" consumer_resource:
        "projects/gshoe/locations/loc/shoes/black-shoe"
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name (full URI of the resource) following
            the standard naming scheme:
            "projects/{project}/locations/{location}/tenants/{tenant}"
          type: string
        consumerResource:
          description: >-
            Optional. Immutable. A reference to the consumer resource this SaaS
            Tenant is representing. The relationship with a consumer resource
            can be used by SaaS Runtime for retrieving consumer-defined settings
            and policies such as maintenance policies (using Unified Maintenance
            Policy API).
          type: string
        saas:
          description: >-
            Required. Immutable. A reference to the Saas that defines the
            product (managed service) that the producer wants to manage with
            SaaS Runtime. Part of the SaaS Runtime common data model.
          type: string
        labels:
          description: >-
            Optional. The labels on the resource, which can be used for
            categorization. similar to Kubernetes resource labels.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Annotations is an unstructured key-value map stored with a
            resource that may be set by external tools to store and retrieve
            arbitrary metadata. They are not queryable and should be preserved
            when modifying objects. More info:
            https://kubernetes.io/docs/user-guide/annotations
          type: object
          additionalProperties:
            type: string
        uid:
          description: >-
            Output only. The unique identifier of the resource. UID is unique in
            the time and space for this resource within the scope of the
            service. It is typically generated by the server on successful
            creation of a resource and must not be changed. UID is used to
            uniquely identify resources with resource name reuses. This should
            be a UUID4.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. An opaque value that uniquely identifies a version or
            generation of a resource. It can be used to confirm that the client
            and server agree on the ordering of a resource being written.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when the resource was last updated. Any
            change to the resource made by users must refresh this value.
            Changes to a resource made by the service should refresh this value.
          readOnly: true
          type: string
          format: google-datetime
    ListUnitKindsResponse:
      id: ListUnitKindsResponse
      description: The response structure for the ListUnitKinds method.
      type: object
      properties:
        unitKinds:
          description: The resulting unit kinds.
          type: array
          items:
            $ref: '#/components/schemas/UnitKind'
        nextPageToken:
          description: >-
            If present, the next page token can be provided to a subsequent
            ListUnitKinds call to list the next page. If empty, there are no
            more pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    UnitKind:
      id: UnitKind
      description: >-
        Definition of a Unit. Units belonging to the same UnitKind are managed
        together; for example they follow the same release model (blueprints,
        versions etc.) and are typically rolled out together.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name (full URI of the resource) following
            the standard naming scheme:
            "projects/{project}/locations/{location}/unitKinds/{unitKind}"
          type: string
        defaultRelease:
          description: >-
            Optional. A reference to the Release object to use as default for
            creating new units of this UnitKind (optional). If not specified, a
            new unit must explicitly reference which release to use for its
            creation.
          type: string
        dependencies:
          description: >-
            Optional. Immutable. List of other unit kinds that this release will
            depend on. Dependencies will be automatically provisioned if not
            found. Maximum 10.
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
        inputVariableMappings:
          description: >-
            Optional. List of inputVariables for this release that will either
            be retrieved from a dependency’s outputVariables, or will be passed
            on to a dependency’s inputVariables. Maximum 100.
          type: array
          items:
            $ref: '#/components/schemas/VariableMapping'
        outputVariableMappings:
          description: >-
            Optional. List of outputVariables for this unit kind will be passed
            to this unit's outputVariables. Maximum 100.
          type: array
          items:
            $ref: '#/components/schemas/VariableMapping'
        saas:
          description: >-
            Required. Immutable. A reference to the Saas that defines the
            product (managed service) that the producer wants to manage with
            SaaS Runtime. Part of the SaaS Runtime common data model. Immutable
            once set.
          type: string
        labels:
          description: >-
            Optional. The labels on the resource, which can be used for
            categorization. similar to Kubernetes resource labels.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Annotations is an unstructured key-value map stored with a
            resource that may be set by external tools to store and retrieve
            arbitrary metadata. They are not queryable and should be preserved
            when modifying objects. More info:
            https://kubernetes.io/docs/user-guide/annotations
          type: object
          additionalProperties:
            type: string
        uid:
          description: >-
            Output only. The unique identifier of the resource. UID is unique in
            the time and space for this resource within the scope of the
            service. It is typically generated by the server on successful
            creation of a resource and must not be changed. UID is used to
            uniquely identify resources with resource name reuses. This should
            be a UUID4.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. An opaque value that uniquely identifies a version or
            generation of a resource. It can be used to confirm that the client
            and server agree on the ordering of a resource being written.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when the resource was last updated. Any
            change to the resource made by users must refresh this value.
            Changes to a resource made by the service should refresh this value.
          readOnly: true
          type: string
          format: google-datetime
    Dependency:
      id: Dependency
      description: >-
        Dependency represent a single dependency with another unit kind by
        alias.
      type: object
      properties:
        unitKind:
          description: Required. Immutable. The unit kind of the dependency.
          type: string
        alias:
          description: >-
            Required. An alias for the dependency. Used for input variable
            mapping.
          type: string
    VariableMapping:
      id: VariableMapping
      description: >-
        Mapping of input variables to their respective output variable for
        depedenencies
      type: object
      properties:
        from:
          description: >-
            Optional. Output variables which will get their values from
            dependencies
          $ref: '#/components/schemas/FromMapping'
        to:
          description: >-
            Optional. Input variables whose values will be passed on to
            dependencies.
          $ref: '#/components/schemas/ToMapping'
        variable:
          description: Required. name of the variable
          type: string
    FromMapping:
      id: FromMapping
      description: Output variables whose values will be passed on to dependencies
      type: object
      properties:
        dependency:
          description: >-
            Required. Alias of the dependency that the outputVariable will pass
            its value to
          type: string
        outputVariable:
          description: Required. Name of the outputVariable on the dependency
          type: string
    ToMapping:
      id: ToMapping
      description: Input variables whose values will be passed on to dependencies
      type: object
      properties:
        dependency:
          description: >-
            Required. Alias of the dependency that the inputVariable will pass
            its value to
          type: string
        inputVariable:
          description: Required. Name of the inputVariable on the dependency
          type: string
        ignoreForLookup:
          description: >-
            Optional. Tells SaaS Runtime if this mapping should be used during
            lookup or not
          type: boolean
    ListUnitsResponse:
      id: ListUnitsResponse
      description: The response structure for the ListUnits method.
      type: object
      properties:
        units:
          description: The resulting units.
          type: array
          items:
            $ref: '#/components/schemas/Unit'
        nextPageToken:
          description: >-
            If present, the next page token can be provided to a subsequent
            ListUnits call to list the next page. If empty, there are no more
            pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Unit:
      id: Unit
      description: >-
        A unit of deployment that has its lifecycle via a CRUD API using an
        actuation engine under the hood (e.g. based on Terraform, Helm or a
        custom implementation provided by a service producer). A building block
        of a SaaS Tenant.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name (full URI of the resource) following
            the standard naming scheme:
            "projects/{project}/locations/{location}/units/{unit}"
          type: string
        unitKind:
          description: >-
            Optional. Reference to the UnitKind this Unit belongs to. Immutable
            once set.
          type: string
        release:
          description: Optional. Output only. The current Release object for this Unit.
          readOnly: true
          type: string
        tenant:
          description: >-
            Optional. Reference to the Saas Tenant resource this unit belongs
            to. This for example informs the maintenance policies to use for
            scheduling future updates on a unit. (optional and immutable once
            created)
          type: string
        ongoingOperations:
          description: >-
            Optional. Output only. List of concurrent UnitOperations that are
            operating on this Unit.
          readOnly: true
          type: array
          items:
            type: string
        pendingOperations:
          description: >-
            Optional. Output only. List of pending (wait to be executed)
            UnitOperations for this unit.
          readOnly: true
          type: array
          items:
            type: string
        scheduledOperations:
          description: >-
            Optional. Output only. List of scheduled UnitOperations for this
            unit.
          readOnly: true
          type: array
          items:
            type: string
        dependents:
          description: >-
            Optional. Output only. List of Units that depend on this unit. Unit
            can only be deprovisioned if this list is empty. Maximum 1000.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UnitDependency'
        dependencies:
          description: >-
            Optional. Output only. Set of dependencies for this unit. Maximum
            10.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UnitDependency'
        inputVariables:
          description: >-
            Optional. Output only. Indicates the current input variables
            deployed by the unit
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UnitVariable'
        outputVariables:
          description: >-
            Optional. Output only. Set of key/value pairs corresponding to
            output variables from execution of actuation templates. The
            variables are declared in actuation configs (e.g in helm chart or
            terraform) and the values are fetched and returned by the actuation
            engine upon completion of execution.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UnitVariable'
        maintenance:
          description: >-
            Optional. Captures requested directives for performing future
            maintenance on the unit. This includes a request for the unit to
            skip maintenance for a period of time and remain pinned to its
            current release as well as controls for postponing maintenance
            scheduled in future.
          $ref: '#/components/schemas/MaintenanceSettings'
        state:
          description: >-
            Optional. Output only. Current lifecycle state of the resource (e.g.
            if it's being created or ready to use).
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified state.
            - Unit is not provisioned.
            - Unit is being provisioned.
            - >-
              Unit is being updated. This is typically when a unit is being
              upgraded to a new release or some of the input variables on the
              Unit is being changed. Certain kinds of updates may cause the Unit
              to become unusable while the update is in progress.
            - Unit is being deleted.
            - Unit has been provisioned and is ready for use
            - Unit has error, when it is not ready and some error operation
          enum:
            - UNIT_STATE_UNSPECIFIED
            - UNIT_STATE_NOT_PROVISIONED
            - UNIT_STATE_PROVISIONING
            - UNIT_STATE_UPDATING
            - UNIT_STATE_DEPROVISIONING
            - UNIT_STATE_READY
            - UNIT_STATE_ERROR
        conditions:
          description: >-
            Optional. Output only. A set of conditions which indicate the
            various conditions this resource can have.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UnitCondition'
        managementMode:
          description: >-
            Optional. Immutable. Indicates whether the Unit life cycle is
            controlled by the user or by the system. Immutable once created.
          type: string
          enumDescriptions:
            - ''
            - Unit's lifecycle is managed by the user.
            - >-
              The system will decide when to deprovision and delete the unit.
              User still can deprovision or delete the unit manually.
          enum:
            - MANAGEMENT_MODE_UNSPECIFIED
            - MANAGEMENT_MODE_USER
            - MANAGEMENT_MODE_SYSTEM
        systemManagedState:
          description: >-
            Optional. Output only. Indicates the system managed state of the
            unit.
          readOnly: true
          type: string
          enumDescriptions:
            - ''
            - Unit has dependents attached.
            - Unit has no dependencies attached, but attachment is allowed.
            - Unit has no dependencies attached, and attachment is not allowed.
          enum:
            - SYSTEM_MANAGED_STATE_UNSPECIFIED
            - SYSTEM_MANAGED_STATE_ACTIVE
            - SYSTEM_MANAGED_STATE_INACTIVE
            - SYSTEM_MANAGED_STATE_DECOMMISSIONED
        systemCleanupAt:
          description: >-
            Optional. Output only. If set, indicates the time when the system
            will start removing the unit.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional. The labels on the resource, which can be used for
            categorization. similar to Kubernetes resource labels.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Annotations is an unstructured key-value map stored with a
            resource that may be set by external tools to store and retrieve
            arbitrary metadata. They are not queryable and should be preserved
            when modifying objects. More info:
            https://kubernetes.io/docs/user-guide/annotations
          type: object
          additionalProperties:
            type: string
        uid:
          description: >-
            Output only. The unique identifier of the resource. UID is unique in
            the time and space for this resource within the scope of the
            service. It is typically generated by the server on successful
            creation of a resource and must not be changed. UID is used to
            uniquely identify resources with resource name reuses. This should
            be a UUID4.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. An opaque value that uniquely identifies a version or
            generation of a resource. It can be used to confirm that the client
            and server agree on the ordering of a resource being written.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when the resource was last updated. Any
            change to the resource made by users must refresh this value.
            Changes to a resource made by the service should refresh this value.
          readOnly: true
          type: string
          format: google-datetime
    UnitDependency:
      id: UnitDependency
      description: Set of dependencies for this unit. Maximum 10.
      type: object
      properties:
        alias:
          description: Output only. Alias for the name of the dependency.
          readOnly: true
          type: string
        unit:
          description: Output only. A reference to the Unit object.
          readOnly: true
          type: string
    UnitVariable:
      id: UnitVariable
      description: UnitVariable describes a parameter for a Unit.
      type: object
      properties:
        variable:
          description: Required. Immutable. Name of the variable from actuation configs.
          type: string
        type:
          description: >-
            Optional. Immutable. Name of a supported variable type. Supported
            types are string, int, bool.
          type: string
          enumDescriptions:
            - Variable type is unspecified.
            - Variable type is string.
            - Variable type is int.
            - Variable type is bool.
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - INT
            - BOOL
        value:
          description: Optional. String encoded value for the variable.
          type: string
    MaintenanceSettings:
      id: MaintenanceSettings
      description: >-
        Captures requested directives for performing future maintenance on the
        unit. This includes a request for the unit to skip maintenance for a
        period of time and remain pinned to its current release as well as
        controls for postponing maintenance scheduled in future.
      type: object
      properties:
        pinnedUntilTime:
          description: >-
            Optional. If present, it fixes the release on the unit until the
            given time; i.e. changes to the release field will be rejected.
            Rollouts should and will also respect this by not requesting an
            upgrade in the first place.
          type: string
          format: google-datetime
    UnitCondition:
      id: UnitCondition
      description: >-
        UnitCondition describes the status of an Unit. UnitCondition is
        individual components that contribute to an overall state.
      type: object
      properties:
        status:
          description: Required. Status of the condition.
          type: string
          enumDescriptions:
            - Condition status is unspecified.
            - Condition is unknown.
            - Condition is true.
            - Condition is false.
          enum:
            - STATUS_UNSPECIFIED
            - STATUS_UNKNOWN
            - STATUS_TRUE
            - STATUS_FALSE
        type:
          description: Required. Type of the condition.
          type: string
          enumDescriptions:
            - Condition type is unspecified.
            - Condition type is ready.
            - Condition type is updating.
            - Condition type is provisioned.
            - >-
              Condition type is operationError. True when the last unit
              operation fails with a non-ignorable error.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_READY
            - TYPE_UPDATING
            - TYPE_PROVISIONED
            - TYPE_OPERATION_ERROR
        lastTransitionTime:
          description: >-
            Required. Last time the condition transited from one status to
            another.
          type: string
          format: google-datetime
        message:
          description: >-
            Required. Human readable message indicating details about the last
            transition.
          type: string
        reason:
          description: Required. Brief reason for the condition's last transition.
          type: string
    ListUnitOperationsResponse:
      id: ListUnitOperationsResponse
      description: The response structure for the ListUnitOperations method.
      type: object
      properties:
        unitOperations:
          description: The resulting unit operations.
          type: array
          items:
            $ref: '#/components/schemas/UnitOperation'
        nextPageToken:
          description: >-
            If present, the next page token can be provided to a subsequent
            ListUnitOperations call to list the next page. If empty, there are
            no more pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    UnitOperation:
      id: UnitOperation
      description: >-
        UnitOperation encapsulates the intent of changing/interacting with the
        service component represented by the specific Unit. Multiple
        UnitOperations can be created (requested) and scheduled in the future,
        however only one will be allowed to execute at a time (that can change
        in the future for non-mutating operations). UnitOperations allow
        different actors interacting with the same unit to focus only on the
        change they have requested. This is a base object that contains the
        common fields in all unit operations. Next: 19
      type: object
      properties:
        provision:
          $ref: '#/components/schemas/Provision'
        upgrade:
          $ref: '#/components/schemas/Upgrade'
        deprovision:
          $ref: '#/components/schemas/Deprovision'
        name:
          description: >-
            Identifier. The resource name (full URI of the resource) following
            the standard naming scheme:
            "projects/{project}/locations/{location}/unitOperations/{unitOperation}"
          type: string
        unit:
          description: Required. Immutable. The Unit a given UnitOperation will act upon.
          type: string
        parentUnitOperation:
          description: >-
            Optional. Reference to parent resource: UnitOperation. If an
            operation needs to create other operations as part of its workflow,
            each of the child operations should have this field set to the
            parent. This can be used for tracing. (Optional)
          type: string
        rollout:
          description: >-
            Optional. Specifies which rollout created this Unit Operation. This
            cannot be modified and is used for filtering purposes only. If a
            dependent unit and unit operation are created as part of another
            unit operation, they will use the same rolloutId.
          type: string
        cancel:
          description: >-
            Optional. When true, attempt to cancel the operation. Cancellation
            may fail if the operation is already executing. (Optional)
          type: boolean
        state:
          description: >-
            Optional. Output only. UnitOperationState describes the current
            state of the unit operation.
          readOnly: true
          type: string
          enumDescriptions:
            - ''
            - Unit operation is accepted but not ready to run.
            - Unit operation is accepted and scheduled.
            - Unit operation is running.
            - Unit operation has completed successfully.
            - Unit operation has failed.
            - Unit operation was cancelled.
          enum:
            - UNIT_OPERATION_STATE_UNKNOWN
            - UNIT_OPERATION_STATE_PENDING
            - UNIT_OPERATION_STATE_SCHEDULED
            - UNIT_OPERATION_STATE_RUNNING
            - UNIT_OPERATION_STATE_SUCCEEDED
            - UNIT_OPERATION_STATE_FAILED
            - UNIT_OPERATION_STATE_CANCELLED
        conditions:
          description: >-
            Optional. Output only. A set of conditions which indicate the
            various conditions this resource can have.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UnitOperationCondition'
        schedule:
          description: Optional. When to schedule this operation.
          $ref: '#/components/schemas/Schedule'
        engineState:
          description: >-
            Optional. Output only. The engine state for on-going deployment
            engine operation(s). This field is opaque for external usage.
          readOnly: true
          type: string
        errorCategory:
          description: >-
            Optional. Output only. UnitOperationErrorCategory describe the error
            category.
          readOnly: true
          type: string
          enumDescriptions:
            - Unit operation error category is unspecified
            - >-
              Unit operation error category is not applicable, or it is not an
              error
            - Unit operation error category is fatal
            - Unit operation error category is retriable
            - Unit operation error category is ignorable
            - >-
              Unit operation error category is standard, counts towards Rollout
              error budget
          enum:
            - UNIT_OPERATION_ERROR_CATEGORY_UNSPECIFIED
            - NOT_APPLICABLE
            - FATAL
            - RETRIABLE
            - IGNORABLE
            - STANDARD
        labels:
          description: >-
            Optional. The labels on the resource, which can be used for
            categorization. similar to Kubernetes resource labels.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Annotations is an unstructured key-value map stored with a
            resource that may be set by external tools to store and retrieve
            arbitrary metadata. They are not queryable and should be preserved
            when modifying objects. More info:
            https://kubernetes.io/docs/user-guide/annotations
          type: object
          additionalProperties:
            type: string
        uid:
          description: >-
            Output only. The unique identifier of the resource. UID is unique in
            the time and space for this resource within the scope of the
            service. It is typically generated by the server on successful
            creation of a resource and must not be changed. UID is used to
            uniquely identify resources with resource name reuses. This should
            be a UUID4.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. An opaque value that uniquely identifies a version or
            generation of a resource. It can be used to confirm that the client
            and server agree on the ordering of a resource being written.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when the resource was last updated. Any
            change to the resource made by users must refresh this value.
            Changes to a resource made by the service should refresh this value.
          readOnly: true
          type: string
          format: google-datetime
    Provision:
      id: Provision
      description: >-
        Provision is the unit operation that provision the underlying resources
        represented by a Unit. Can only execute if the Unit is not currently
        provisioned.
      type: object
      properties:
        release:
          description: >-
            Optional. Reference to the Release object to use for the Unit.
            (optional).
          type: string
        inputVariables:
          description: Optional. Set of input variables. Maximum 100. (optional)
          type: array
          items:
            $ref: '#/components/schemas/UnitVariable'
    Upgrade:
      id: Upgrade
      description: >-
        Upgrade is the unit operation that upgrades a provisioned unit, which
        may also include the underlying resources represented by a Unit. Can
        only execute if the Unit is currently provisioned.
      type: object
      properties:
        release:
          description: >-
            Optional. Reference to the Release object to use for the Unit.
            (optional).
          type: string
        inputVariables:
          description: Optional. Set of input variables. Maximum 100. (optional)
          type: array
          items:
            $ref: '#/components/schemas/UnitVariable'
    Deprovision:
      id: Deprovision
      description: >-
        Deprovision is the unit operation that deprovision the underlying
        resources represented by a Unit. Can only execute if the Unit is
        currently provisioned.
      type: object
      properties: {}
    UnitOperationCondition:
      id: UnitOperationCondition
      description: >-
        UnitOperationCondition describes the status of an Unit Operation.
        UnitOperationCondition is individual components that contribute to an
        overall state.
      type: object
      properties:
        status:
          description: Required. Status of the condition.
          type: string
          enumDescriptions:
            - Condition status is unspecified.
            - Condition is unknown.
            - Condition is true.
            - Condition is false.
          enum:
            - STATUS_UNSPECIFIED
            - STATUS_UNKNOWN
            - STATUS_TRUE
            - STATUS_FALSE
        type:
          description: Required. Type of the condition.
          type: string
          enumDescriptions:
            - Condition type is unspecified.
            - Condition type is scheduled.
            - Condition type is running.
            - Condition type is succeeded.
            - Condition type is cancelled.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_SCHEDULED
            - TYPE_RUNNING
            - TYPE_SUCCEEDED
            - TYPE_CANCELLED
        lastTransitionTime:
          description: >-
            Required. Last time the condition transited from one status to
            another.
          type: string
          format: google-datetime
        message:
          description: >-
            Required. Human readable message indicating details about the last
            transition.
          type: string
        reason:
          description: Required. Brief reason for the condition's last transition.
          type: string
    Schedule:
      id: Schedule
      description: A time specification to schedule the maintenance.
      type: object
      properties:
        startTime:
          description: >-
            Optional. Start of operation. If not set, will be set to the start
            of the next window. (optional)
          type: string
          format: google-datetime
    ListReleasesResponse:
      id: ListReleasesResponse
      description: The response structure for the ListReleases method.
      type: object
      properties:
        releases:
          description: The resulting releases.
          type: array
          items:
            $ref: '#/components/schemas/Release'
        nextPageToken:
          description: >-
            If present, the next page token can be provided to a subsequent
            ListReleases call to list the next page. If empty, there are no more
            pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Release:
      id: Release
      description: >-
        A new version to be propagated and deployed to units. This includes
        pointers to packaged blueprints for actuation (e.g Helm or Terraform
        configuration packages) via artifact registry.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name (full URI of the resource) following
            the standard naming scheme:
            "projects/{project}/locations/{location}/releases/{release}"
          type: string
        unitKind:
          description: >-
            Required. Immutable. Reference to the UnitKind this Release
            corresponds to (required and immutable once created).
          type: string
        blueprint:
          description: >-
            Optional. Blueprints are OCI Images that contain all of the
            artifacts needed to provision a unit.
          $ref: '#/components/schemas/Blueprint'
        releaseRequirements:
          description: >-
            Optional. Set of requirements to be fulfilled on the Unit when using
            this Release.
          $ref: '#/components/schemas/ReleaseRequirements'
        inputVariables:
          description: >-
            Optional. Output only. List of input variables declared on the
            blueprint and can be present with their values on the unit spec
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UnitVariable'
        outputVariables:
          description: >-
            Optional. Output only. List of output variables declared on the
            blueprint and can be present with their values on the unit status
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UnitVariable'
        inputVariableDefaults:
          description: Optional. Mapping of input variables to default values. Maximum 100
          type: array
          items:
            $ref: '#/components/schemas/UnitVariable'
        labels:
          description: >-
            Optional. The labels on the resource, which can be used for
            categorization. similar to Kubernetes resource labels.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Annotations is an unstructured key-value map stored with a
            resource that may be set by external tools to store and retrieve
            arbitrary metadata. They are not queryable and should be preserved
            when modifying objects. More info:
            https://kubernetes.io/docs/user-guide/annotations
          type: object
          additionalProperties:
            type: string
        uid:
          description: >-
            Output only. The unique identifier of the resource. UID is unique in
            the time and space for this resource within the scope of the
            service. It is typically generated by the server on successful
            creation of a resource and must not be changed. UID is used to
            uniquely identify resources with resource name reuses. This should
            be a UUID4.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. An opaque value that uniquely identifies a version or
            generation of a resource. It can be used to confirm that the client
            and server agree on the ordering of a resource being written.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when the resource was last updated. Any
            change to the resource made by users must refresh this value.
            Changes to a resource made by the service should refresh this value.
          readOnly: true
          type: string
          format: google-datetime
    Blueprint:
      id: Blueprint
      description: >-
        Blueprints are OCI Images that contain all of the artifacts needed to
        provision a unit. Metadata such as, type of the engine used to actuate
        the blueprint (e.g. terraform, helm etc) and version will come from the
        image manifest. If the hostname is omitted, it will be assumed to be the
        regional path to Artifact Registry (eg. us-east1-docker.pkg.dev).
      type: object
      properties:
        package:
          description: >-
            Optional. Immutable. URI to a blueprint used by the Unit (required
            unless unitKind or release is set).
          type: string
        engine:
          description: >-
            Output only. Type of the engine used to actuate the blueprint. e.g.
            terraform, helm etc.
          readOnly: true
          type: string
        version:
          description: Output only. Version metadata if present on the blueprint.
          readOnly: true
          type: string
    ReleaseRequirements:
      id: ReleaseRequirements
      description: Set of requirements to be fulfilled on the Unit when using this Release.
      type: object
      properties:
        upgradeableFromReleases:
          description: >-
            Optional. A list of releases from which a unit can be upgraded to
            this one (optional). If left empty no constraints will be applied.
            When provided, unit upgrade requests to this release will check and
            enforce this constraint.
          type: array
          items:
            type: string
    ListRolloutsResponse:
      id: ListRolloutsResponse
      description: The response structure for the ListRollouts method.
      type: object
      properties:
        rollouts:
          description: The resulting rollouts.
          type: array
          items:
            $ref: '#/components/schemas/Rollout'
        nextPageToken:
          description: >-
            If present, the next page token can be provided to a subsequent
            ListRollouts call to list the next page. If empty, there are no more
            pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Rollout:
      id: Rollout
      description: Represents a single rollout execution and its results
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name (full URI of the resource) following
            the standard naming scheme:
            "projects/{project}/locations/{location}/rollout/{rollout_id}"
          type: string
        release:
          description: >-
            Optional. Immutable. Name of the Release that gets rolled out to
            target Units. Required if no other type of release is specified.
          type: string
        startTime:
          description: >-
            Optional. Output only. The time when the rollout started executing.
            Will be empty if the rollout hasn't started yet.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: >-
            Optional. Output only. The time when the rollout finished execution
            (regardless of success, failure, or cancellation). Will be empty if
            the rollout hasn't finished yet. Once set, the rollout is in
            terminal state and all the results are final.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. Current state of the rollout.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified state.
            - Rollout is in progress.
            - Rollout has been paused.
            - Rollout completed successfully.
            - Rollout has failed.
            - Rollout has been canceled.
            - Rollout is waiting for some condition to be met before starting.
            - Rollout is being canceled.
            - Rollout is being resumed.
            - Rollout is being paused.
          enum:
            - ROLLOUT_STATE_UNSPECIFIED
            - ROLLOUT_STATE_RUNNING
            - ROLLOUT_STATE_PAUSED
            - ROLLOUT_STATE_SUCCEEDED
            - ROLLOUT_STATE_FAILED
            - ROLLOUT_STATE_CANCELLED
            - ROLLOUT_STATE_WAITING
            - ROLLOUT_STATE_CANCELLING
            - ROLLOUT_STATE_RESUMING
            - ROLLOUT_STATE_PAUSING
        stateMessage:
          description: >-
            Output only. Human readable message indicating details about the
            last state transition.
          readOnly: true
          type: string
        stateTransitionTime:
          description: >-
            Optional. Output only. The time when the rollout transitioned into
            its current state.
          readOnly: true
          type: string
          format: google-datetime
        rootRollout:
          description: >-
            Optional. Output only. The root rollout that this rollout is
            stemming from. The resource name (full URI of the resource)
            following the standard naming scheme:
            "projects/{project}/locations/{location}/rollouts/{rollout_id}"
          readOnly: true
          type: string
        parentRollout:
          description: >-
            Optional. Output only. The direct parent rollout that this rollout
            is stemming from. The resource name (full URI of the resource)
            following the standard naming scheme:
            "projects/{project}/locations/{location}/rollouts/{rollout_id}"
          readOnly: true
          type: string
        rolloutOrchestrationStrategy:
          description: >-
            Optional. The strategy used for executing this Rollout. This
            strategy will override whatever strategy is specified in the
            RolloutType. If not specified on creation, the strategy from
            RolloutType will be used. There are two supported values strategies
            which are used to control - "Google.Cloud.Simple.AllAtOnce" -
            "Google.Cloud.Simple.OneLocationAtATime" A rollout with one of these
            simple strategies will rollout across all locations defined in the
            targeted UnitKind's Saas Locations.
          type: string
        unitFilter:
          description: >-
            Optional. CEL(https://github.com/google/cel-spec) formatted filter
            string against Unit. The filter will be applied to determine the
            eligible unit population. This filter can only reduce, but not
            expand the scope of the rollout. If not provided, the unit_filter
            from the RolloutType will be used.
          type: string
        rolloutKind:
          description: >-
            Optional. Immutable. Name of the RolloutKind this rollout is
            stemming from and adhering to.
          type: string
        stats:
          description: Optional. Output only. Details about the progress of the rollout.
          readOnly: true
          $ref: '#/components/schemas/RolloutStats'
        control:
          description: >-
            Optional. Requested change to the execution of this rollout. Default
            RolloutControl.action is ROLLOUT_ACTION_RUN meaning the rollout will
            be executed to completion while progressing through all natural
            Rollout States (such as RUNNING -> SUCCEEDED or RUNNING -> FAILED).
            Requests can only be made when the Rollout is in a non-terminal
            state.
          $ref: '#/components/schemas/RolloutControl'
        labels:
          description: >-
            Optional. The labels on the resource, which can be used for
            categorization. similar to Kubernetes resource labels.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Annotations is an unstructured key-value map stored with a
            resource that may be set by external tools to store and retrieve
            arbitrary metadata. They are not queryable and should be preserved
            when modifying objects. More info:
            https://kubernetes.io/docs/user-guide/annotations
          type: object
          additionalProperties:
            type: string
        uid:
          description: >-
            Output only. The unique identifier of the resource. UID is unique in
            the time and space for this resource within the scope of the
            service. It is typically generated by the server on successful
            creation of a resource and must not be changed. UID is used to
            uniquely identify resources with resource name reuses. This should
            be a UUID4.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. An opaque value that uniquely identifies a version or
            generation of a resource. It can be used to confirm that the client
            and server agree on the ordering of a resource being written.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when the resource was last updated. Any
            change to the resource made by users must refresh this value.
            Changes to a resource made by the service should refresh this value.
          readOnly: true
          type: string
          format: google-datetime
    RolloutStats:
      id: RolloutStats
      description: RolloutStats contains information about the progress of a rollout.
      type: object
      properties:
        operationsByState:
          description: >-
            Output only. A breakdown of the progress of operations triggered by
            the rollout. Provides a count of Operations by their state. This can
            be used to determine the number of units which have been updated, or
            are scheduled to be updated. There will be at most one entry per
            group. Possible values for operation groups are: - "SCHEDULED" -
            "PENDING" - "RUNNING" - "SUCCEEDED" - "FAILED" - "CANCELLED"
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Aggregate'
    Aggregate:
      id: Aggregate
      description: >-
        Represents the aggregation of a set of population of like records by a
        certain group. For example, a collection of unit counts can be
        aggregated and grouped by their state.
      type: object
      properties:
        group:
          description: Required. Group by which to aggregate.
          type: string
        count:
          description: Required. Number of records in the group.
          type: integer
          format: int32
    RolloutControl:
      id: RolloutControl
      description: >-
        RolloutControl provides a way to request a change to the execution of a
        Rollout by pausing or canceling it.
      type: object
      properties:
        runParams:
          description: >-
            Optional. Parameters for the RUN action. It is an error to specify
            this if the RolloutAction is not set to RUN. By default, the rollout
            will retry failed operations when resumed.
          $ref: '#/components/schemas/RunRolloutActionParams'
        action:
          description: >-
            Required. Action to be performed on the Rollout. The default
            behavior is to run the rollout until it naturally reaches a terminal
            state.
          type: string
          enumDescriptions:
            - Unspecified action, will be treated as RUN by default.
            - >-
              Run the Rollout until it naturally reaches a terminal state. A
              rollout requested to run will progress through all natural Rollout
              States (such as RUNNING -> SUCCEEDED or RUNNING -> FAILED). If
              retriable errors are encountered during the rollout, the rollout
              will paused by default and can be resumed by re-requesting this
              RUN action.
            - Pause the Rollout until it is resumed (i.e. RUN is requested).
            - Cancel the Rollout permanently.
          enum:
            - ROLLOUT_ACTION_UNSPECIFIED
            - ROLLOUT_ACTION_RUN
            - ROLLOUT_ACTION_PAUSE
            - ROLLOUT_ACTION_CANCEL
    RunRolloutActionParams:
      id: RunRolloutActionParams
      description: >-
        Parameters for the RUN action controlling the behavior of the rollout
        when it is resumed from a PAUSED state.
      type: object
      properties:
        retryFailedOperations:
          description: >-
            Required. If true, the rollout will retry failed operations when
            resumed. This is applicable only the current state of the Rollout is
            PAUSED and the requested action is RUN.
          type: boolean
    ListRolloutKindsResponse:
      id: ListRolloutKindsResponse
      description: The response structure for the ListRolloutKinds method.
      type: object
      properties:
        rolloutKinds:
          description: The resulting rollout kinds.
          type: array
          items:
            $ref: '#/components/schemas/RolloutKind'
        nextPageToken:
          description: >-
            If present, the next page token can be provided to a subsequent
            ListRolloutKinds call to list the next page. If empty, there are no
            more pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    RolloutKind:
      id: RolloutKind
      description: >-
        An object that describes various settings of Rollout execution. Includes
        built-in policies across GCP and GDC, and customizable policies.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name (full URI of the resource) following
            the standard naming scheme:
            "projects/{project}/locations/{location}/rolloutKinds/{rollout_kind_id}"
          type: string
        unitKind:
          description: >-
            Required. Immutable. UnitKind that this rollout kind corresponds to.
            Rollouts stemming from this rollout kind will target the units of
            this unit kind. In other words, this defines the population of
            target units to be upgraded by rollouts.
          type: string
        rolloutOrchestrationStrategy:
          description: >-
            Optional. The strategy used for executing a Rollout. This is a
            required field. There are two supported values strategies which are
            used to control - "Google.Cloud.Simple.AllAtOnce" -
            "Google.Cloud.Simple.OneLocationAtATime" A rollout with one of these
            simple strategies will rollout across all locations defined in the
            associated UnitKind's Saas Locations.
          type: string
        unitFilter:
          description: >-
            Optional. CEL(https://github.com/google/cel-spec) formatted filter
            string against Unit. The filter will be applied to determine the
            eligible unit population. This filter can only reduce, but not
            expand the scope of the rollout.
          type: string
        updateUnitKindStrategy:
          description: >-
            Optional. The config for updating the unit kind. By default, the
            unit kind will be updated on the rollout start.
          type: string
          enumDescriptions:
            - Strategy unspecified.
            - Update the unit kind strategy on the rollout start.
            - Never update the unit kind.
          enum:
            - UPDATE_UNIT_KIND_STRATEGY_UNSPECIFIED
            - UPDATE_UNIT_KIND_STRATEGY_ON_START
            - UPDATE_UNIT_KIND_STRATEGY_NEVER
        errorBudget:
          description: >-
            Optional. The configuration for error budget. If the number of
            failed units exceeds max(allowed_count, allowed_ratio *
            total_units), the rollout will be paused. If not set, all units will
            be attempted to be updated regardless of the number of failures
            encountered.
          $ref: '#/components/schemas/ErrorBudget'
        labels:
          description: >-
            Optional. The labels on the resource, which can be used for
            categorization. similar to Kubernetes resource labels.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Annotations is an unstructured key-value map stored with a
            resource that may be set by external tools to store and retrieve
            arbitrary metadata. They are not queryable and should be preserved
            when modifying objects. More info:
            https://kubernetes.io/docs/user-guide/annotations
          type: object
          additionalProperties:
            type: string
        uid:
          description: >-
            Output only. The unique identifier of the resource. UID is unique in
            the time and space for this resource within the scope of the
            service. It is typically generated by the server on successful
            creation of a resource and must not be changed. UID is used to
            uniquely identify resources with resource name reuses. This should
            be a UUID4.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. An opaque value that uniquely identifies a version or
            generation of a resource. It can be used to confirm that the client
            and server agree on the ordering of a resource being written.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when the resource was last updated. Any
            change to the resource made by users must refresh this value.
            Changes to a resource made by the service should refresh this value.
          readOnly: true
          type: string
          format: google-datetime
    ErrorBudget:
      id: ErrorBudget
      description: >-
        The configuration for error budget. If the number of failed units
        exceeds max(allowed_count, allowed_ratio * total_units), the rollout
        will be paused.
      type: object
      properties:
        allowedCount:
          description: >-
            Optional. The maximum number of failed units allowed in a location
            without pausing the rollout.
          type: integer
          format: int32
        allowedPercentage:
          description: >-
            Optional. The maximum percentage of units allowed to fail (0, 100]
            within a location without pausing the rollout.
          type: integer
          format: int32
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleCloudLocationLocation:
      id: GoogleCloudLocationLocation
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.saasservicemgmt.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    saas:
      id: google.saasservicemgmt.saas
      name: saas
      title: Saas
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1saas/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.saas
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1saas/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1saas~1{saasId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1saas~1{saasId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1saas~1{saasId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/saas/methods/get'
          - $ref: '#/components/x-stackQL-resources/saas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/saas/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/saas/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/saas/methods/delete'
    tenants:
      id: google.saasservicemgmt.tenants
      name: tenants
      title: Tenants
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1tenants/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tenants
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1tenants/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1tenants~1{tenantsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1tenants~1{tenantsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1tenants~1{tenantsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tenants/methods/get'
          - $ref: '#/components/x-stackQL-resources/tenants/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tenants/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/tenants/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tenants/methods/delete'
    unit_kinds:
      id: google.saasservicemgmt.unit_kinds
      name: unit_kinds
      title: Unit_kinds
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1unitKinds/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.unitKinds
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1unitKinds/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1unitKinds~1{unitKindsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1unitKinds~1{unitKindsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1unitKinds~1{unitKindsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/unit_kinds/methods/get'
          - $ref: '#/components/x-stackQL-resources/unit_kinds/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/unit_kinds/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/unit_kinds/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/unit_kinds/methods/delete'
    units:
      id: google.saasservicemgmt.units
      name: units
      title: Units
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1units/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.units
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1units/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1units~1{unitsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1units~1{unitsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1units~1{unitsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/units/methods/get'
          - $ref: '#/components/x-stackQL-resources/units/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/units/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/units/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/units/methods/delete'
    unit_operations:
      id: google.saasservicemgmt.unit_operations
      name: unit_operations
      title: Unit_operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1unitOperations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.unitOperations
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1unitOperations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1unitOperations~1{unitOperationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1unitOperations~1{unitOperationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1unitOperations~1{unitOperationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/unit_operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/unit_operations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/unit_operations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/unit_operations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/unit_operations/methods/delete'
    releases:
      id: google.saasservicemgmt.releases
      name: releases
      title: Releases
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1releases/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.releases
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1releases/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1releases~1{releasesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1releases~1{releasesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1releases~1{releasesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/releases/methods/get'
          - $ref: '#/components/x-stackQL-resources/releases/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/releases/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/releases/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/releases/methods/delete'
    rollouts:
      id: google.saasservicemgmt.rollouts
      name: rollouts
      title: Rollouts
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1rollouts/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rollouts
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1rollouts/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1rollouts~1{rolloutsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1rollouts~1{rolloutsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1rollouts~1{rolloutsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/get'
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/delete'
    rollout_kinds:
      id: google.saasservicemgmt.rollout_kinds
      name: rollout_kinds
      title: Rollout_kinds
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1rolloutKinds/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rolloutKinds
        create:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1rolloutKinds/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1rolloutKinds~1{rolloutKindsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1rolloutKinds~1{rolloutKindsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1rolloutKinds~1{rolloutKindsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rollout_kinds/methods/get'
          - $ref: '#/components/x-stackQL-resources/rollout_kinds/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/rollout_kinds/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/rollout_kinds/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/rollout_kinds/methods/delete'
paths:
  /v1beta1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: saasservicemgmt.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: saasservicemgmt.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/saas:
    parameters: *ref_1
    get:
      description: Retrieve a collection of saas.
      operationId: saasservicemgmt.projects.locations.saas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSaasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Create a new saas.
      operationId: saasservicemgmt.projects.locations.saas.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Saas'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saas'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: saasId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/saas/{saasId}:
    parameters: *ref_1
    get:
      description: Retrieve a single saas.
      operationId: saasservicemgmt.projects.locations.saas.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saas'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: saasId
          required: true
          schema:
            type: string
    patch:
      description: Update a single saas.
      operationId: saasservicemgmt.projects.locations.saas.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Saas'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saas'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: saasId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete a single saas.
      operationId: saasservicemgmt.projects.locations.saas.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: saasId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tenants:
    parameters: *ref_1
    get:
      description: Retrieve a collection of tenants.
      operationId: saasservicemgmt.projects.locations.tenants.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTenantsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Create a new tenant.
      operationId: saasservicemgmt.projects.locations.tenants.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: tenantId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tenants/{tenantsId}:
    parameters: *ref_1
    get:
      description: Retrieve a single tenant.
      operationId: saasservicemgmt.projects.locations.tenants.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tenantsId
          required: true
          schema:
            type: string
    patch:
      description: Update a single tenant.
      operationId: saasservicemgmt.projects.locations.tenants.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tenantsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete a single tenant.
      operationId: saasservicemgmt.projects.locations.tenants.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tenantsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/unitKinds:
    parameters: *ref_1
    get:
      description: Retrieve a collection of unit kinds.
      operationId: saasservicemgmt.projects.locations.unitKinds.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUnitKindsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Create a new unit kind.
      operationId: saasservicemgmt.projects.locations.unitKinds.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitKind'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitKind'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: unitKindId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/unitKinds/{unitKindsId}:
    parameters: *ref_1
    get:
      description: Retrieve a single unit kind.
      operationId: saasservicemgmt.projects.locations.unitKinds.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitKind'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: unitKindsId
          required: true
          schema:
            type: string
    patch:
      description: Update a single unit kind.
      operationId: saasservicemgmt.projects.locations.unitKinds.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitKind'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitKind'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: unitKindsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete a single unit kind.
      operationId: saasservicemgmt.projects.locations.unitKinds.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: unitKindsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/units:
    parameters: *ref_1
    get:
      description: Retrieve a collection of units.
      operationId: saasservicemgmt.projects.locations.units.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUnitsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Create a new unit.
      operationId: saasservicemgmt.projects.locations.units.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: unitId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/units/{unitsId}:
    parameters: *ref_1
    get:
      description: Retrieve a single unit.
      operationId: saasservicemgmt.projects.locations.units.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: unitsId
          required: true
          schema:
            type: string
    patch:
      description: Update a single unit.
      operationId: saasservicemgmt.projects.locations.units.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: unitsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete a single unit.
      operationId: saasservicemgmt.projects.locations.units.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: unitsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/unitOperations:
    parameters: *ref_1
    get:
      description: Retrieve a collection of unit operations.
      operationId: saasservicemgmt.projects.locations.unitOperations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUnitOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Create a new unit operation.
      operationId: saasservicemgmt.projects.locations.unitOperations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitOperation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: unitOperationId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/unitOperations/{unitOperationsId}:
    parameters: *ref_1
    get:
      description: Retrieve a single unit operation.
      operationId: saasservicemgmt.projects.locations.unitOperations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: unitOperationsId
          required: true
          schema:
            type: string
    patch:
      description: Update a single unit operation.
      operationId: saasservicemgmt.projects.locations.unitOperations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitOperation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: unitOperationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete a single unit operation.
      operationId: saasservicemgmt.projects.locations.unitOperations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: unitOperationsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/releases:
    parameters: *ref_1
    get:
      description: Retrieve a collection of releases.
      operationId: saasservicemgmt.projects.locations.releases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Create a new release.
      operationId: saasservicemgmt.projects.locations.releases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: releaseId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/releases/{releasesId}:
    parameters: *ref_1
    get:
      description: Retrieve a single release.
      operationId: saasservicemgmt.projects.locations.releases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
    patch:
      description: Update a single release.
      operationId: saasservicemgmt.projects.locations.releases.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete a single release.
      operationId: saasservicemgmt.projects.locations.releases.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/rollouts:
    parameters: *ref_1
    get:
      description: Retrieve a collection of rollouts.
      operationId: saasservicemgmt.projects.locations.rollouts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolloutsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Create a new rollout.
      operationId: saasservicemgmt.projects.locations.rollouts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rollout'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rollout'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: rolloutId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/rollouts/{rolloutsId}:
    parameters: *ref_1
    get:
      description: Retrieve a single rollout.
      operationId: saasservicemgmt.projects.locations.rollouts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rollout'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
    patch:
      description: Update a single rollout.
      operationId: saasservicemgmt.projects.locations.rollouts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rollout'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rollout'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete a single rollout.
      operationId: saasservicemgmt.projects.locations.rollouts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/rolloutKinds:
    parameters: *ref_1
    get:
      description: Retrieve a collection of rollout kinds.
      operationId: saasservicemgmt.projects.locations.rolloutKinds.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolloutKindsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Create a new rollout kind.
      operationId: saasservicemgmt.projects.locations.rolloutKinds.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolloutKind'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolloutKind'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: rolloutKindId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/rolloutKinds/{rolloutKindsId}:
    parameters: *ref_1
    get:
      description: Retrieve a single rollout kind.
      operationId: saasservicemgmt.projects.locations.rolloutKinds.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolloutKind'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutKindsId
          required: true
          schema:
            type: string
    patch:
      description: Update a single rollout kind.
      operationId: saasservicemgmt.projects.locations.rolloutKinds.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolloutKind'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolloutKind'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutKindsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete a single rollout kind.
      operationId: saasservicemgmt.projects.locations.rolloutKinds.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutKindsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
