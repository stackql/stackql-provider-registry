openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Monitoring API
  description: Manages your Cloud Monitoring data and configurations.
  version: v3
  x-discovery-doc-revision: '20230102'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/monitoring/api/
servers:
  - url: https://monitoring.googleapis.com
components:
  schemas:
    Distribution:
      description: Distribution contains summary statistics for a population of values. It optionally contains a histogram representing the distribution of those values across a set of buckets.The summary statistics are the count, mean, sum of the squared deviation from the mean, the minimum, and the maximum of the set of population of values. The histogram is based on a sequence of buckets and gives a count of values that fall into each bucket. The boundaries of the buckets are given either explicitly or by formulas for buckets of fixed or exponentially increasing widths.Although it is not forbidden, it is generally a bad idea to include non-finite values (infinities or NaNs) in the population of values, as this will render the mean and sum_of_squared_deviation fields meaningless.
      id: Distribution
      type: object
      properties:
        exemplars:
          items:
            $ref: '#/components/schemas/Exemplar'
          description: Must be in increasing order of value field.
          type: array
        bucketOptions:
          description: Required in the Cloud Monitoring API v3. Defines the histogram bucket boundaries.
          $ref: '#/components/schemas/BucketOptions'
        range:
          description: If specified, contains the range of the population values. The field must not be present if the count is zero. This field is presently ignored by the Cloud Monitoring API v3.
          $ref: '#/components/schemas/Range'
        count:
          type: string
          description: The number of values in the population. Must be non-negative. This value must equal the sum of the values in bucket_counts if a histogram is provided.
          format: int64
        bucketCounts:
          items:
            format: int64
            type: string
          type: array
          description: Required in the Cloud Monitoring API v3. The values for each bucket specified in bucket_options. The sum of the values in bucketCounts must equal the value in the count field of the Distribution object. The order of the bucket counts follows the numbering schemes described for the three bucket types. The underflow bucket has number 0; the finite buckets, if any, have numbers 1 through N-2; and the overflow bucket has number N-1. The size of bucket_counts must not be greater than N. If the size is less than N, then the remaining buckets are assigned values of zero.
        mean:
          format: double
          type: number
          description: The arithmetic mean of the values in the population. If count is zero then this field must be zero.
        sumOfSquaredDeviation:
          description: 'The sum of squared deviations from the mean of the values in the population. For values x_i this is: Sum[i=1..n]((x_i - mean)^2) Knuth, "The Art of Computer Programming", Vol. 2, page 232, 3rd edition describes Welford''s method for accumulating this sum in one pass.If count is zero then this field must be zero.'
          type: number
          format: double
    TimeSeries:
      type: object
      id: TimeSeries
      description: A collection of data points that describes the time-varying values of a metric. A time series is identified by a combination of a fully-specified monitored resource and a fully-specified metric. This type is used for both listing and creating time series.
      properties:
        points:
          type: array
          description: The data points of this time series. When listing time series, points are returned in reverse time order.When creating a time series, this field must contain exactly one point and the point's type must be the same as the value type of the associated metric. If the associated metric's descriptor must be auto-created, then the value type of the descriptor is determined by the point's type, which must be BOOL, INT64, DOUBLE, or DISTRIBUTION.
          items:
            $ref: '#/components/schemas/Point'
        unit:
          type: string
          description: The units in which the metric value is reported. It is only applicable if the value_type is INT64, DOUBLE, or DISTRIBUTION. The unit defines the representation of the stored metric values.
        resource:
          $ref: '#/components/schemas/MonitoredResource'
          description: The associated monitored resource. Custom metrics can use only certain monitored resource types in their time series data. For more information, see Monitored resources for custom metrics (https://cloud.google.com/monitoring/custom-metrics/creating-metrics#custom-metric-resources).
        metadata:
          description: Output only. The associated monitored resource metadata. When reading a time series, this field will include metadata labels that are explicitly named in the reduction. When creating a time series, this field is ignored.
          $ref: '#/components/schemas/MonitoredResourceMetadata'
        valueType:
          description: The value type of the time series. When listing time series, this value type might be different from the value type of the associated metric if this time series is an alignment or reduction of other time series.When creating a time series, this field is optional. If present, it must be the same as the type of the data in the points field.
          type: string
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - BOOL
            - INT64
            - DOUBLE
            - STRING
            - DISTRIBUTION
            - MONEY
          enumDescriptions:
            - Do not use this default value.
            - The value is a boolean. This value type can be used only if the metric kind is GAUGE.
            - The value is a signed 64-bit integer.
            - The value is a double precision floating point number.
            - The value is a text string. This value type can be used only if the metric kind is GAUGE.
            - The value is a Distribution.
            - The value is money.
        metric:
          $ref: '#/components/schemas/Metric'
          description: The associated metric. A fully-specified metric used to identify the time series.
        metricKind:
          type: string
          enumDescriptions:
            - Do not use this default value.
            - An instantaneous measurement of a value.
            - The change in a value during a time interval.
            - A value accumulated over a time interval. Cumulative measurements in a time series should have the same start time and increasing end times, until an event resets the cumulative value to zero and sets a new start time for the following points.
          description: The metric kind of the time series. When listing time series, this metric kind might be different from the metric kind of the associated metric if this time series is an alignment or reduction of other time series.When creating a time series, this field is optional. If present, it must be the same as the metric kind of the associated metric. If the associated metric's descriptor must be auto-created, then this field specifies the metric kind of the new descriptor and must be either GAUGE (the default) or CUMULATIVE.
          enum:
            - METRIC_KIND_UNSPECIFIED
            - GAUGE
            - DELTA
            - CUMULATIVE
    Condition:
      type: object
      id: Condition
      properties:
        conditionMonitoringQueryLanguage:
          $ref: '#/components/schemas/MonitoringQueryLanguageCondition'
          description: A condition that uses the Monitoring Query Language to define alerts.
        displayName:
          type: string
          description: A short name or phrase used to identify the condition in dashboards, notifications, and incidents. To avoid confusion, don't use the same display name for multiple conditions in the same policy.
        conditionAbsent:
          $ref: '#/components/schemas/MetricAbsence'
          description: A condition that checks that a time series continues to receive new data points.
        conditionMatchedLog:
          $ref: '#/components/schemas/LogMatch'
          description: A condition that checks for log messages matching given constraints. If set, no other conditions can be present.
        name:
          type: string
          description: 'Required if the condition exists. The unique resource name for this condition. Its format is: projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID] [CONDITION_ID] is assigned by Cloud Monitoring when the condition is created as part of a new or updated alerting policy.When calling the alertPolicies.create method, do not include the name field in the conditions of the requested alerting policy. Cloud Monitoring creates the condition identifiers and includes them in the new policy.When calling the alertPolicies.update method to update a policy, including a condition name causes the existing condition to be updated. Conditions without names are added to the updated policy. Existing conditions are deleted if they are not updated.Best practice is to preserve [CONDITION_ID] if you make only small changes, such as those to condition thresholds, durations, or trigger values. Otherwise, treat the change as a new condition and let the existing condition be deleted.'
        conditionThreshold:
          $ref: '#/components/schemas/MetricThreshold'
          description: A condition that compares a time series against a threshold.
      description: A condition is a true/false test that determines when an alerting policy should open an incident. If a condition evaluates to true, it signifies that something is wrong.
    ServiceLevelIndicator:
      description: A Service-Level Indicator (SLI) describes the "performance" of a service. For some services, the SLI is well-defined. In such cases, the SLI can be described easily by referencing the well-known SLI and providing the needed parameters. Alternatively, a "custom" SLI can be defined with a query to the underlying metric store. An SLI is defined to be good_service / total_service over any queried time interval. The value of performance always falls into the range 0 <= performance <= 1. A custom SLI describes how to compute this ratio, whether this is by dividing values from a pair of time series, cutting a Distribution into good and bad counts, or counting time windows in which the service complies with a criterion. For separation of concerns, a single Service-Level Indicator measures performance for only one aspect of service quality, such as fraction of successful queries or fast-enough queries.
      id: ServiceLevelIndicator
      properties:
        basicSli:
          $ref: '#/components/schemas/BasicSli'
          description: Basic SLI on a well-known service type.
        windowsBased:
          description: Windows-based SLIs
          $ref: '#/components/schemas/WindowsBasedSli'
        requestBased:
          description: Request-based SLIs
          $ref: '#/components/schemas/RequestBasedSli'
      type: object
    PointData:
      description: A point's value columns and time interval. Each point has one or more point values corresponding to the entries in point_descriptors field in the TimeSeriesDescriptor associated with this object.
      properties:
        timeInterval:
          description: The time interval associated with the point.
          $ref: '#/components/schemas/TimeInterval'
        values:
          description: The values that make up the point.
          items:
            $ref: '#/components/schemas/TypedValue'
          type: array
      id: PointData
      type: object
    BasicService:
      description: A well-known service type, defined by its service type and service labels. Documentation and examples here (https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli).
      id: BasicService
      properties:
        serviceLabels:
          additionalProperties:
            type: string
          type: object
          description: Labels that specify the resource that emits the monitoring data which is used for SLO reporting of this Service. Documentation and valid values for given service types here (https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli).
        serviceType:
          type: string
          description: The type of service that this basic service defines, e.g. APP_ENGINE service type. Documentation and valid values here (https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli).
      type: object
    Telemetry:
      id: Telemetry
      properties:
        resourceName:
          type: string
          description: The full name of the resource that defines this service. Formatted as described in https://cloud.google.com/apis/design/resource_names.
      type: object
      description: Configuration for how to query telemetry on a Service.
    Explicit:
      properties:
        bounds:
          description: The values must be monotonically increasing.
          type: array
          items:
            type: number
            format: double
      type: object
      id: Explicit
      description: 'Specifies a set of buckets with arbitrary widths.There are size(bounds) + 1 (= N) buckets. Bucket i has the following boundaries:Upper bound (0 <= i < N-1): boundsi Lower bound (1 <= i < N); boundsi - 1The bounds field must contain at least one element. If bounds has only one element, then there are no finite buckets, and that single element is the common boundary of the overflow and underflow buckets.'
    SendNotificationChannelVerificationCodeRequest:
      description: The SendNotificationChannelVerificationCode request.
      properties: {}
      id: SendNotificationChannelVerificationCodeRequest
      type: object
    ListNotificationChannelsResponse:
      description: The ListNotificationChannels response.
      type: object
      id: ListNotificationChannelsResponse
      properties:
        nextPageToken:
          description: If not empty, indicates that there may be more results that match the request. Use the value in the page_token field in a subsequent request to fetch the next set of results. If empty, all results have been returned.
          type: string
        totalSize:
          format: int32
          description: The total number of notification channels in all pages. This number is only an estimate, and may change in subsequent pages. https://aip.dev/158
          type: integer
        notificationChannels:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannel'
          description: The notification channels defined for the specified project.
    Type:
      description: A protocol buffer message type.
      id: Type
      type: object
      properties:
        sourceContext:
          $ref: '#/components/schemas/SourceContext'
          description: The source context.
        oneofs:
          description: The list of types appearing in oneof definitions in this type.
          type: array
          items:
            type: string
        syntax:
          enum:
            - SYNTAX_PROTO2
            - SYNTAX_PROTO3
          description: The source syntax.
          enumDescriptions:
            - Syntax proto2.
            - Syntax proto3.
          type: string
        name:
          description: The fully qualified message name.
          type: string
        fields:
          description: The list of fields.
          items:
            $ref: '#/components/schemas/Field'
          type: array
        options:
          description: The protocol buffer options.
          type: array
          items:
            $ref: '#/components/schemas/Option'
    RequestBasedSli:
      description: Service Level Indicators for which atomic units of service are counted directly.
      id: RequestBasedSli
      type: object
      properties:
        distributionCut:
          $ref: '#/components/schemas/DistributionCut'
          description: distribution_cut is used when good_service is a count of values aggregated in a Distribution that fall into a good range. The total_service is the total count of all values aggregated in the Distribution.
        goodTotalRatio:
          description: good_total_ratio is used when the ratio of good_service to total_service is computed from two TimeSeries.
          $ref: '#/components/schemas/TimeSeriesRatio'
    ServiceLevelObjective:
      description: A Service-Level Objective (SLO) describes a level of desired good service. It consists of a service-level indicator (SLI), a performance goal, and a period over which the objective is to be evaluated against that goal. The SLO can use SLIs defined in a number of different manners. Typical SLOs might include "99% of requests in each rolling week have latency below 200 milliseconds" or "99.5% of requests in each calendar month return successfully."
      type: object
      properties:
        goal:
          description: The fraction of service that must be good in order for this objective to be met. 0 < goal <= 0.999.
          type: number
          format: double
        name:
          type: string
          description: 'Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME] '
        userLabels:
          type: object
          description: Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
          additionalProperties:
            type: string
        rollingPeriod:
          format: google-duration
          type: string
          description: A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no larger than 30 days.
        displayName:
          description: Name used for UI elements listing this SLO.
          type: string
        calendarPeriod:
          enum:
            - CALENDAR_PERIOD_UNSPECIFIED
            - DAY
            - WEEK
            - FORTNIGHT
            - MONTH
            - QUARTER
            - HALF
            - YEAR
          description: A calendar period, semantically "since the start of the current ". At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
          type: string
          enumDescriptions:
            - Undefined period, raises an error.
            - A day.
            - A week. Weeks begin on Monday, following ISO 8601 (https://en.wikipedia.org/wiki/ISO_week_date).
            - A fortnight. The first calendar fortnight of the year begins at the start of week 1 according to ISO 8601 (https://en.wikipedia.org/wiki/ISO_week_date).
            - A month.
            - A quarter. Quarters start on dates 1-Jan, 1-Apr, 1-Jul, and 1-Oct of each year.
            - A half-year. Half-years start on dates 1-Jan and 1-Jul.
            - A year.
        serviceLevelIndicator:
          $ref: '#/components/schemas/ServiceLevelIndicator'
          description: The definition of good service, used to measure and calculate the quality of the Service's performance with respect to a single aspect of service quality.
      id: ServiceLevelObjective
    ListTimeSeriesResponse:
      description: The ListTimeSeries response.
      id: ListTimeSeriesResponse
      type: object
      properties:
        nextPageToken:
          description: If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
          type: string
        unit:
          description: The unit in which all time_series point values are reported. unit follows the UCUM format for units as seen in https://unitsofmeasure.org/ucum.html. If different time_series have different units (for example, because they come from different metric types, or a unit is absent), then unit will be "{not_a_unit}".
          type: string
        timeSeries:
          type: array
          description: One or more time series that match the filter included in the request.
          items:
            $ref: '#/components/schemas/TimeSeries'
        executionErrors:
          type: array
          description: Query execution errors that may have caused the time series data returned to be incomplete.
          items:
            $ref: '#/components/schemas/Status'
    SourceContext:
      type: object
      id: SourceContext
      properties:
        fileName:
          type: string
          description: 'The path-qualified name of the .proto file that contained the associated protobuf element. For example: "google/protobuf/source_context.proto".'
      description: SourceContext represents information about the source of a protobuf element, like the file in which it is defined.
    ListGroupsResponse:
      type: object
      description: The ListGroups response.
      properties:
        nextPageToken:
          type: string
          description: If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
        group:
          items:
            $ref: '#/components/schemas/Group'
          description: The groups that match the specified filters.
          type: array
      id: ListGroupsResponse
    BucketOptions:
      type: object
      id: BucketOptions
      description: 'BucketOptions describes the bucket boundaries used to create a histogram for the distribution. The buckets can be in a linear sequence, an exponential sequence, or each bucket can be specified explicitly. BucketOptions does not include the number of values in each bucket.A bucket has an inclusive lower bound and exclusive upper bound for the values that are counted for that bucket. The upper bound of a bucket must be strictly greater than the lower bound. The sequence of N buckets for a distribution consists of an underflow bucket (number 0), zero or more finite buckets (number 1 through N - 2) and an overflow bucket (number N - 1). The buckets are contiguous: the lower bound of bucket i (i > 0) is the same as the upper bound of bucket i - 1. The buckets span the whole range of finite values: lower bound of the underflow bucket is -infinity and the upper bound of the overflow bucket is +infinity. The finite buckets are so-called because both bounds are finite.'
      properties:
        explicitBuckets:
          description: The explicit buckets.
          $ref: '#/components/schemas/Explicit'
        linearBuckets:
          $ref: '#/components/schemas/Linear'
          description: The linear bucket.
        exponentialBuckets:
          description: The exponential buckets.
          $ref: '#/components/schemas/Exponential'
    TimeSeriesRatio:
      type: object
      id: TimeSeriesRatio
      properties:
        goodServiceFilter:
          description: A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying good service provided. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
          type: string
        badServiceFilter:
          description: A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying bad service, either demanded service that was not provided or demanded service that was of inadequate quality. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
          type: string
        totalServiceFilter:
          type: string
          description: A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying total demanded service. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
      description: A TimeSeriesRatio specifies two TimeSeries to use for computing the good_service / total_service ratio. The specified TimeSeries must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE. The TimeSeriesRatio must specify exactly two of good, bad, and total, and the relationship good_service + bad_service = total_service will be assumed.
    Linear:
      id: Linear
      type: object
      properties:
        width:
          format: double
          description: Must be greater than 0.
          type: number
        offset:
          format: double
          type: number
          description: Lower bound of the first bucket.
        numFiniteBuckets:
          format: int32
          type: integer
          description: Must be greater than 0.
      description: 'Specifies a linear sequence of buckets that all have the same width (except overflow and underflow). Each bucket represents a constant absolute uncertainty on the specific value in the bucket.There are num_finite_buckets + 2 (= N) buckets. Bucket i has the following boundaries:Upper bound (0 <= i < N-1): offset + (width * i). Lower bound (1 <= i < N): offset + (width * (i - 1)).'
    ListMetricDescriptorsResponse:
      id: ListMetricDescriptorsResponse
      properties:
        nextPageToken:
          type: string
          description: If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
        metricDescriptors:
          items:
            $ref: '#/components/schemas/MetricDescriptor'
          description: The metric descriptors that are available to the project and that match the value of filter, if present.
          type: array
      type: object
      description: The ListMetricDescriptors response.
    InternalChecker:
      type: object
      id: InternalChecker
      description: An internal checker allows Uptime checks to run on private/internal GCP resources.
      properties:
        name:
          type: string
          description: 'A unique resource name for this InternalChecker. The format is: projects/[PROJECT_ID_OR_NUMBER]/internalCheckers/[INTERNAL_CHECKER_ID] [PROJECT_ID_OR_NUMBER] is the Cloud Monitoring Metrics Scope project for the Uptime check config associated with the internal checker.'
        network:
          type: string
          description: 'The GCP VPC network (https://cloud.google.com/vpc/docs/vpc) where the internal resource lives (ex: "default").'
        state:
          enumDescriptions:
            - An internal checker should never be in the unspecified state.
            - The checker is being created, provisioned, and configured. A checker in this state can be returned by ListInternalCheckers or GetInternalChecker, as well as by examining the long running Operation (https://cloud.google.com/apis/design/design_patterns#long_running_operations) that created it.
            - The checker is running and available for use. A checker in this state can be returned by ListInternalCheckers or GetInternalChecker as well as by examining the long running Operation (https://cloud.google.com/apis/design/design_patterns#long_running_operations) that created it. If a checker is being torn down, it is neither visible nor usable, so there is no "deleting" or "down" state.
          description: The current operational state of the internal checker.
          type: string
          enum:
            - UNSPECIFIED
            - CREATING
            - RUNNING
        gcpZone:
          description: The GCP zone the Uptime check should egress from. Only respected for internal Uptime checks, where internal_network is specified.
          type: string
        peerProjectId:
          description: The GCP project ID where the internal checker lives. Not necessary the same as the Metrics Scope project.
          type: string
        displayName:
          description: The checker's human-readable name. The display name should be unique within a Cloud Monitoring Metrics Scope in order to make it easier to identify; however, uniqueness is not enforced.
          type: string
    Criteria:
      type: object
      id: Criteria
      description: Criteria specific to the AlertPolicys that this Snooze applies to. The Snooze will suppress alerts that come from one of the AlertPolicys whose names are supplied.
      properties:
        policies:
          description: 'The specific AlertPolicy names for the alert that should be snoozed. The format is: projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[POLICY_ID] There is a limit of 10 policies per snooze. This limit is checked during snooze creation.'
          type: array
          items:
            type: string
    ForecastOptions:
      description: Options used when forecasting the time series and testing the predicted value against the threshold.
      properties:
        forecastHorizon:
          description: Required. The length of time into the future to forecast whether a time series will violate the threshold. If the predicted value is found to violate the threshold, and the violation is observed in all forecasts made for the configured duration, then the time series is considered to be failing.
          type: string
          format: google-duration
      id: ForecastOptions
      type: object
    VerifyNotificationChannelRequest:
      id: VerifyNotificationChannelRequest
      type: object
      properties:
        code:
          type: string
          description: Required. The verification code that was delivered to the channel as a result of invoking the SendNotificationChannelVerificationCode API method or that was retrieved from a verified channel via GetNotificationChannelVerificationCode. For example, one might have "G-123456" or "TKNZGhhd2EyN3I1MnRnMjRv" (in general, one is only guaranteed that the code is valid UTF-8; one should not make any assumptions regarding the structure or format of the code).
      description: The VerifyNotificationChannel request.
    CollectdPayloadError:
      description: Describes the error status for payloads that were not written.
      properties:
        index:
          type: integer
          description: The zero-based index in CreateCollectdTimeSeriesRequest.collectd_payloads.
          format: int32
        error:
          description: Records the error status for the payload. If this field is present, the partial errors for nested values won't be populated.
          $ref: '#/components/schemas/Status'
        valueErrors:
          items:
            $ref: '#/components/schemas/CollectdValueError'
          description: Records the error status for values that were not written due to an error.Failed payloads for which nothing is written will not include partial value errors.
          type: array
      type: object
      id: CollectdPayloadError
    ClusterIstio:
      description: Istio service scoped to a single Kubernetes cluster. Learn more at https://istio.io. Clusters running OSS Istio will have their services ingested as this type.
      properties:
        clusterName:
          description: The name of the Kubernetes cluster in which this Istio service is defined. Corresponds to the cluster_name resource label in k8s_cluster resources.
          type: string
        location:
          description: The location of the Kubernetes cluster in which this Istio service is defined. Corresponds to the location resource label in k8s_cluster resources.
          type: string
        serviceNamespace:
          type: string
          description: The namespace of the Istio service underlying this service. Corresponds to the destination_service_namespace metric label in Istio metrics.
        serviceName:
          description: The name of the Istio service underlying this service. Corresponds to the destination_service_name metric label in Istio metrics.
          type: string
      type: object
      id: ClusterIstio
    ListSnoozesResponse:
      description: The results of a successful ListSnoozes call, containing the matching Snoozes.
      properties:
        nextPageToken:
          type: string
          description: Page token for repeated calls to ListSnoozes, to fetch additional pages of results. If this is empty or missing, there are no more pages.
        snoozes:
          type: array
          description: Snoozes matching this list call.
          items:
            $ref: '#/components/schemas/Snooze'
      id: ListSnoozesResponse
      type: object
    MutationRecord:
      properties:
        mutateTime:
          type: string
          description: When the change occurred.
          format: google-datetime
        mutatedBy:
          description: The email address of the user making the change.
          type: string
      type: object
      description: Describes a change made to a configuration.
      id: MutationRecord
    BasicAuthentication:
      type: object
      properties:
        password:
          description: The password to use when authenticating with the HTTP server.
          type: string
        username:
          type: string
          description: The username to use when authenticating with the HTTP server.
      id: BasicAuthentication
      description: The authentication parameters to provide to the specified resource or URL that requires a username and password. Currently, only Basic HTTP authentication (https://tools.ietf.org/html/rfc7617) is supported in Uptime checks.
    Aggregation:
      description: Describes how to combine multiple time series to provide a different view of the data. Aggregation of time series is done in two steps. First, each time series in the set is aligned to the same time interval boundaries, then the set of time series is optionally reduced in number.Alignment consists of applying the per_series_aligner operation to each time series after its data has been divided into regular alignment_period time intervals. This process takes all of the data points in an alignment period, applies a mathematical transformation such as averaging, minimum, maximum, delta, etc., and converts them into a single data point per period.Reduction is when the aligned and transformed time series can optionally be combined, reducing the number of time series through similar mathematical transformations. Reduction involves applying a cross_series_reducer to all the time series, optionally sorting the time series into subsets with group_by_fields, and applying the reducer to each subset.The raw time series data can contain a huge amount of information from multiple sources. Alignment and reduction transforms this mass of data into a more manageable and representative collection of data, for example "the 95% latency across the average of all tasks in a cluster". This representative data can be more easily graphed and comprehended, and the individual time series data is still available for later drilldown. For more details, see Filtering and aggregation (https://cloud.google.com/monitoring/api/v3/aggregation).
      properties:
        alignmentPeriod:
          format: google-duration
          type: string
          description: The alignment_period specifies a time interval, in seconds, that is used to divide the data in all the time series into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.The value must be at least 60 seconds. If a per-series aligner other than ALIGN_NONE is specified, this field is required or an error is returned. If no per-series aligner is specified, or the aligner ALIGN_NONE is specified, then this field is ignored.The maximum value of the alignment_period is 104 weeks (2 years) for charts, and 90,000 seconds (25 hours) for alerting policies.
        groupByFields:
          type: array
          description: The set of fields to preserve when cross_series_reducer is specified. The group_by_fields determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The cross_series_reducer is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains resource.type. Fields not specified in group_by_fields are aggregated away. If group_by_fields is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If cross_series_reducer is not defined, this field is ignored.
          items:
            type: string
        crossSeriesReducer:
          description: The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.Not all reducer operations can be applied to all time series. The valid choices depend on the metric_kind and the value_type of the original time series. Reduction can yield a time series with a different metric_kind or value_type than the input time series.Time series data must first be aligned (see per_series_aligner) in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified, and must not be ALIGN_NONE. An alignment_period must also be specified; otherwise, an error is returned.
          enumDescriptions:
            - No cross-time series reduction. The output of the Aligner is returned.
            - Reduce by computing the mean value across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric or distribution values. The value_type of the output is DOUBLE.
            - Reduce by computing the minimum value across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric values. The value_type of the output is the same as the value_type of the input.
            - Reduce by computing the maximum value across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric values. The value_type of the output is the same as the value_type of the input.
            - Reduce by computing the sum across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric and distribution values. The value_type of the output is the same as the value_type of the input.
            - Reduce by computing the standard deviation across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric or distribution values. The value_type of the output is DOUBLE.
            - Reduce by computing the number of data points across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics of numeric, Boolean, distribution, and string value_type. The value_type of the output is INT64.
            - Reduce by computing the number of True-valued data points across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics of Boolean value_type. The value_type of the output is INT64.
            - Reduce by computing the number of False-valued data points across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics of Boolean value_type. The value_type of the output is INT64.
            - Reduce by computing the ratio of the number of True-valued data points to the total number of data points for each alignment period. This reducer is valid for DELTA and GAUGE metrics of Boolean value_type. The output value is in the range 0.0, 1.0 and has value_type DOUBLE.
            - Reduce by computing the 99th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE.
            - Reduce by computing the 95th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE.
            - Reduce by computing the 50th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE.
            - Reduce by computing the 5th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE.
          type: string
          enum:
            - REDUCE_NONE
            - REDUCE_MEAN
            - REDUCE_MIN
            - REDUCE_MAX
            - REDUCE_SUM
            - REDUCE_STDDEV
            - REDUCE_COUNT
            - REDUCE_COUNT_TRUE
            - REDUCE_COUNT_FALSE
            - REDUCE_FRACTION_TRUE
            - REDUCE_PERCENTILE_99
            - REDUCE_PERCENTILE_95
            - REDUCE_PERCENTILE_50
            - REDUCE_PERCENTILE_05
        perSeriesAligner:
          enumDescriptions:
            - No alignment. Raw data is returned. Not valid if cross-series reduction is requested. The value_type of the result is the same as the value_type of the input.
            - Align and convert to DELTA. The output is delta = y1 - y0.This alignment is valid for CUMULATIVE and DELTA metrics. If the selected alignment period results in periods with no data, then the aligned value for such a period is created by interpolation. The value_type of the aligned result is the same as the value_type of the input.
            - Align and convert to a rate. The result is computed as rate = (y1 - y0)/(t1 - t0), or "delta over time". Think of this aligner as providing the slope of the line that passes through the value at the start and at the end of the alignment_period.This aligner is valid for CUMULATIVE and DELTA metrics with numeric values. If the selected alignment period results in periods with no data, then the aligned value for such a period is created by interpolation. The output is a GAUGE metric with value_type DOUBLE.If, by "rate", you mean "percentage change", see the ALIGN_PERCENT_CHANGE aligner instead.
            - Align by interpolating between adjacent points around the alignment period boundary. This aligner is valid for GAUGE metrics with numeric values. The value_type of the aligned result is the same as the value_type of the input.
            - Align by moving the most recent data point before the end of the alignment period to the boundary at the end of the alignment period. This aligner is valid for GAUGE metrics. The value_type of the aligned result is the same as the value_type of the input.
            - Align the time series by returning the minimum value in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the aligned result is the same as the value_type of the input.
            - Align the time series by returning the maximum value in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the aligned result is the same as the value_type of the input.
            - Align the time series by returning the mean value in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the aligned result is DOUBLE.
            - Align the time series by returning the number of values in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric or Boolean values. The value_type of the aligned result is INT64.
            - Align the time series by returning the sum of the values in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric and distribution values. The value_type of the aligned result is the same as the value_type of the input.
            - Align the time series by returning the standard deviation of the values in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the output is DOUBLE.
            - Align the time series by returning the number of True values in each alignment period. This aligner is valid for GAUGE metrics with Boolean values. The value_type of the output is INT64.
            - Align the time series by returning the number of False values in each alignment period. This aligner is valid for GAUGE metrics with Boolean values. The value_type of the output is INT64.
            - Align the time series by returning the ratio of the number of True values to the total number of values in each alignment period. This aligner is valid for GAUGE metrics with Boolean values. The output value is in the range 0.0, 1.0 and has value_type DOUBLE.
            - Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 99th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.
            - Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 95th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.
            - Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 50th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.
            - Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 5th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.
            - Align and convert to a percentage change. This aligner is valid for GAUGE and DELTA metrics with numeric values. This alignment returns ((current - previous)/previous) * 100, where the value of previous is determined based on the alignment_period.If the values of current and previous are both 0, then the returned value is 0. If only previous is 0, the returned value is infinity.A 10-minute moving mean is computed at each point of the alignment period prior to the above calculation to smooth the metric and prevent false positives from very short-lived spikes. The moving mean is only applicable for data whose values are >= 0. Any values < 0 are treated as a missing datapoint, and are ignored. While DELTA metrics are accepted by this alignment, special care should be taken that the values for the metric will always be positive. The output is a GAUGE metric with value_type DOUBLE.
          description: An Aligner describes how to bring the data points in a single time series into temporal alignment. Except for ALIGN_NONE, all alignments cause all the data points in an alignment_period to be mathematically grouped together, resulting in a single data point for each alignment_period with end timestamp at the end of the period.Not all alignment operations may be applied to all time series. The valid choices depend on the metric_kind and value_type of the original time series. Alignment can change the metric_kind or the value_type of the time series.Time series data must be aligned in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified and not equal to ALIGN_NONE and alignment_period must be specified; otherwise, an error is returned.
          enum:
            - ALIGN_NONE
            - ALIGN_DELTA
            - ALIGN_RATE
            - ALIGN_INTERPOLATE
            - ALIGN_NEXT_OLDER
            - ALIGN_MIN
            - ALIGN_MAX
            - ALIGN_MEAN
            - ALIGN_COUNT
            - ALIGN_SUM
            - ALIGN_STDDEV
            - ALIGN_COUNT_TRUE
            - ALIGN_COUNT_FALSE
            - ALIGN_FRACTION_TRUE
            - ALIGN_PERCENTILE_99
            - ALIGN_PERCENTILE_95
            - ALIGN_PERCENTILE_50
            - ALIGN_PERCENTILE_05
            - ALIGN_PERCENT_CHANGE
          type: string
      id: Aggregation
      type: object
    IstioCanonicalService:
      properties:
        meshUid:
          description: Identifier for the Istio mesh in which this canonical service is defined. Corresponds to the mesh_uid metric label in Istio metrics (https://cloud.google.com/monitoring/api/metrics_istio).
          type: string
        canonicalServiceNamespace:
          type: string
          description: The namespace of the canonical service underlying this service. Corresponds to the destination_canonical_service_namespace metric label in Istio metrics (https://cloud.google.com/monitoring/api/metrics_istio).
        canonicalService:
          type: string
          description: The name of the canonical service underlying this service. Corresponds to the destination_canonical_service_name metric label in label in Istio metrics (https://cloud.google.com/monitoring/api/metrics_istio).
      description: Canonical service scoped to an Istio mesh. Anthos clusters running ASM >= 1.6.8 will have their services ingested as this type.
      type: object
      id: IstioCanonicalService
    LabelDescriptor:
      description: A description of a label.
      type: object
      id: LabelDescriptor
      properties:
        description:
          description: A human-readable description for the label.
          type: string
        valueType:
          description: The type of data that can be assigned to the label.
          enum:
            - STRING
            - BOOL
            - INT64
          enumDescriptions:
            - A variable-length string, not to exceed 1,024 characters. This is the default value type.
            - Boolean; true or false.
            - A 64-bit signed integer.
          type: string
        key:
          description: 'The key for this label. The key must meet the following criteria: Does not exceed 100 characters. Matches the following regular expression: [a-zA-Z][a-zA-Z0-9_]* The first character must be an upper- or lower-case letter. The remaining characters must be letters, digits, or underscores.'
          type: string
    TcpCheck:
      properties:
        port:
          format: int32
          type: integer
          description: The TCP port on the server against which to run the check. Will be combined with host (specified within the monitored_resource) to construct the full URL. Required.
        pingConfig:
          description: Contains information needed to add pings to a TCP check.
          $ref: '#/components/schemas/PingConfig'
      description: Information required for a TCP Uptime check request.
      id: TcpCheck
      type: object
    Metric:
      properties:
        type:
          description: An existing metric type, see google.api.MetricDescriptor. For example, custom.googleapis.com/invoice/paid/amount.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: The set of label values that uniquely identify this metric. All labels listed in the MetricDescriptor must be assigned values.
      description: A specific metric, identified by specifying values for all of the labels of a MetricDescriptor.
      type: object
      id: Metric
    PerformanceThreshold:
      id: PerformanceThreshold
      description: A PerformanceThreshold is used when each window is good when that window has a sufficiently high performance.
      properties:
        threshold:
          description: If window performance >= threshold, the window is counted as good.
          type: number
          format: double
        performance:
          $ref: '#/components/schemas/RequestBasedSli'
          description: RequestBasedSli to evaluate to judge window quality.
        basicSliPerformance:
          $ref: '#/components/schemas/BasicSli'
          description: BasicSli to evaluate to judge window quality.
      type: object
    Snooze:
      id: Snooze
      properties:
        criteria:
          description: Required. This defines the criteria for applying the Snooze. See Criteria for more information.
          $ref: '#/components/schemas/Criteria'
        name:
          type: string
          description: 'Required. The name of the Snooze. The format is: projects/[PROJECT_ID_OR_NUMBER]/snoozes/[SNOOZE_ID] The ID of the Snooze will be generated by the system.'
        interval:
          description: Required. The Snooze will be active from interval.start_time through interval.end_time. interval.start_time cannot be in the past. There is a 15 second clock skew to account for the time it takes for a request to reach the API from the UI.
          $ref: '#/components/schemas/TimeInterval'
        displayName:
          description: Required. A display name for the Snooze. This can be, at most, 512 unicode characters.
          type: string
      type: object
      description: A Snooze will prevent any alerts from being opened, and close any that are already open. The Snooze will work on alerts that match the criteria defined in the Snooze. The Snooze will be active from interval.start_time through interval.end_time.
    MetricThreshold:
      id: MetricThreshold
      properties:
        thresholdValue:
          type: number
          description: A value against which to compare the time series.
          format: double
        denominatorFilter:
          description: A filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies a time series that should be used as the denominator of a ratio that will be compared with the threshold. If a denominator_filter is specified, the time series specified by the filter field will be used as the numerator.The filter must specify the metric type and optionally may contain restrictions on resource type, resource labels, and metric labels. This field may not exceed 2048 Unicode characters in length.
          type: string
        comparison:
          type: string
          enum:
            - COMPARISON_UNSPECIFIED
            - COMPARISON_GT
            - COMPARISON_GE
            - COMPARISON_LT
            - COMPARISON_LE
            - COMPARISON_EQ
            - COMPARISON_NE
          enumDescriptions:
            - No ordering relationship is specified.
            - True if the left argument is greater than the right argument.
            - True if the left argument is greater than or equal to the right argument.
            - True if the left argument is less than the right argument.
            - True if the left argument is less than or equal to the right argument.
            - True if the left argument is equal to the right argument.
            - True if the left argument is not equal to the right argument.
          description: The comparison to apply between the time series (indicated by filter and aggregation) and the threshold (indicated by threshold_value). The comparison is applied on each time series, with the time series on the left-hand side and the threshold on the right-hand side.Only COMPARISON_LT and COMPARISON_GT are supported currently.
        aggregations:
          description: Specifies the alignment of data points in individual time series as well as how to combine the retrieved time series together (such as when aggregating multiple streams on each resource to a single stream for each resource or when aggregating streams across all members of a group of resources). Multiple aggregations are applied in the order specified.This field is similar to the one in the ListTimeSeries request (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list). It is advisable to use the ListTimeSeries method when debugging this field.
          items:
            $ref: '#/components/schemas/Aggregation'
          type: array
        denominatorAggregations:
          description: Specifies the alignment of data points in individual time series selected by denominatorFilter as well as how to combine the retrieved time series together (such as when aggregating multiple streams on each resource to a single stream for each resource or when aggregating streams across all members of a group of resources).When computing ratios, the aggregations and denominator_aggregations fields must use the same alignment period and produce time series that have the same periodicity and labels.
          items:
            $ref: '#/components/schemas/Aggregation'
          type: array
        duration:
          format: google-duration
          type: string
          description: The amount of time that a time series must violate the threshold to be considered failing. Currently, only values that are a multiple of a minute--e.g., 0, 60, 120, or 300 seconds--are supported. If an invalid value is given, an error will be returned. When choosing a duration, it is useful to keep in mind the frequency of the underlying time series data (which may also be affected by any alignments specified in the aggregations field); a good duration is long enough so that a single outlier does not generate spurious alerts, but short enough that unhealthy states are detected and alerted on quickly.
        filter:
          description: Required. A filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies which time series should be compared with the threshold.The filter is similar to the one that is specified in the ListTimeSeries request (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) (that call is useful to verify the time series that will be retrieved / processed). The filter must specify the metric type and the resource type. Optionally, it can specify resource labels and metric labels. This field must not exceed 2048 Unicode characters in length.
          type: string
        evaluationMissingData:
          type: string
          description: A condition control that determines how metric-threshold conditions are evaluated when data stops arriving.
          enum:
            - EVALUATION_MISSING_DATA_UNSPECIFIED
            - EVALUATION_MISSING_DATA_INACTIVE
            - EVALUATION_MISSING_DATA_ACTIVE
            - EVALUATION_MISSING_DATA_NO_OP
          enumDescriptions:
            - An unspecified evaluation missing data option. Equivalent to EVALUATION_MISSING_DATA_NO_OP.
            - If there is no data to evaluate the condition, then evaluate the condition as false.
            - If there is no data to evaluate the condition, then evaluate the condition as true.
            - Do not evaluate the condition to any value if there is no data.
        forecastOptions:
          description: When this field is present, the MetricThreshold condition forecasts whether the time series is predicted to violate the threshold within the forecast_horizion. When this field is not set, the MetricThreshold tests the current value of the timeseries against the threshold.
          $ref: '#/components/schemas/ForecastOptions'
        trigger:
          $ref: '#/components/schemas/Trigger'
          description: The number/percent of time series for which the comparison must hold in order for the condition to trigger. If unspecified, then the condition will trigger if the comparison is true for any of the time series that have been identified by filter and aggregations, or by the ratio, if denominator_filter and denominator_aggregations are specified.
      type: object
      description: A condition type that compares a collection of time series against a threshold.
    ResourceGroup:
      description: The resource submessage for group checks. It can be used instead of a monitored resource, when multiple resources are being monitored.
      properties:
        resourceType:
          description: The resource type of the group members.
          type: string
          enumDescriptions:
            - Default value (not valid).
            - A group of instances from Google Cloud Platform (GCP) or Amazon Web Services (AWS).
            - A group of Amazon ELB load balancers.
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - INSTANCE
            - AWS_ELB_LOAD_BALANCER
        groupId:
          description: The group of resources being monitored. Should be only the [GROUP_ID], and not the full-path projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID].
          type: string
      type: object
      id: ResourceGroup
    MonitoringQueryLanguageCondition:
      properties:
        query:
          type: string
          description: Monitoring Query Language (https://cloud.google.com/monitoring/mql) query that outputs a boolean stream.
        trigger:
          description: The number/percent of time series for which the comparison must hold in order for the condition to trigger. If unspecified, then the condition will trigger if the comparison is true for any of the time series that have been identified by filter and aggregations, or by the ratio, if denominator_filter and denominator_aggregations are specified.
          $ref: '#/components/schemas/Trigger'
        evaluationMissingData:
          description: A condition control that determines how metric-threshold conditions are evaluated when data stops arriving.
          type: string
          enumDescriptions:
            - An unspecified evaluation missing data option. Equivalent to EVALUATION_MISSING_DATA_NO_OP.
            - If there is no data to evaluate the condition, then evaluate the condition as false.
            - If there is no data to evaluate the condition, then evaluate the condition as true.
            - Do not evaluate the condition to any value if there is no data.
          enum:
            - EVALUATION_MISSING_DATA_UNSPECIFIED
            - EVALUATION_MISSING_DATA_INACTIVE
            - EVALUATION_MISSING_DATA_ACTIVE
            - EVALUATION_MISSING_DATA_NO_OP
        duration:
          description: The amount of time that a time series must violate the threshold to be considered failing. Currently, only values that are a multiple of a minute--e.g., 0, 60, 120, or 300 seconds--are supported. If an invalid value is given, an error will be returned. When choosing a duration, it is useful to keep in mind the frequency of the underlying time series data (which may also be affected by any alignments specified in the aggregations field); a good duration is long enough so that a single outlier does not generate spurious alerts, but short enough that unhealthy states are detected and alerted on quickly.
          type: string
          format: google-duration
      id: MonitoringQueryLanguageCondition
      description: A condition type that allows alert policies to be defined using Monitoring Query Language (https://cloud.google.com/monitoring/mql).
      type: object
    AlertPolicy:
      description: A description of the conditions under which some aspect of your system is considered to be "unhealthy" and the ways to notify people or services about this state. For an overview of alert policies, see Introduction to Alerting (https://cloud.google.com/monitoring/alerts/).
      id: AlertPolicy
      properties:
        combiner:
          description: How to combine the results of multiple conditions to determine if an incident should be opened. If condition_time_series_query_language is present, this must be COMBINE_UNSPECIFIED.
          enumDescriptions:
            - An unspecified combiner.
            - Combine conditions using the logical AND operator. An incident is created only if all the conditions are met simultaneously. This combiner is satisfied if all conditions are met, even if they are met on completely different resources.
            - Combine conditions using the logical OR operator. An incident is created if any of the listed conditions is met.
            - Combine conditions using logical AND operator, but unlike the regular AND option, an incident is created only if all conditions are met simultaneously on at least one resource.
          enum:
            - COMBINE_UNSPECIFIED
            - AND
            - OR
            - AND_WITH_MATCHING_RESOURCE
          type: string
        displayName:
          description: A short name or phrase used to identify the policy in dashboards, notifications, and incidents. To avoid confusion, don't use the same display name for multiple policies in the same project. The name is limited to 512 Unicode characters.
          type: string
        alertStrategy:
          $ref: '#/components/schemas/AlertStrategy'
          description: Control over how this alert policy's notification channels are notified.
        notificationChannels:
          type: array
          description: 'Identifies the notification channels to which notifications should be sent when incidents are opened or closed or when new violations occur on an already opened incident. Each element of this array corresponds to the name field in each of the NotificationChannel objects that are returned from the ListNotificationChannels method. The format of the entries in this field is: projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID] '
          items:
            type: string
        validity:
          description: Read-only description of how the alert policy is invalid. OK if the alert policy is valid. If not OK, the alert policy will not generate incidents.
          $ref: '#/components/schemas/Status'
        enabled:
          type: boolean
          description: Whether or not the policy is enabled. On write, the default interpretation if unset is that the policy is enabled. On read, clients should not make any assumption about the state if it has not been populated. The field should always be populated on List and Get operations, unless a field projection has been specified that strips it out.
        mutationRecord:
          $ref: '#/components/schemas/MutationRecord'
          description: A read-only record of the most recent change to the alerting policy. If provided in a call to create or update, this field will be ignored.
        userLabels:
          type: object
          additionalProperties:
            type: string
          description: User-supplied key/value data to be used for organizing and identifying the AlertPolicy objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
        documentation:
          description: Documentation that is included with notifications and incidents related to this policy. Best practice is for the documentation to include information to help responders understand, mitigate, escalate, and correct the underlying problems detected by the alerting policy. Notification channels that have limited capacity might not show this documentation.
          $ref: '#/components/schemas/Documentation'
        conditions:
          description: A list of conditions for the policy. The conditions are combined by AND or OR according to the combiner field. If the combined conditions evaluate to true, then an incident is created. A policy can have from one to six conditions. If condition_time_series_query_language is present, it must be the only condition.
          type: array
          items:
            $ref: '#/components/schemas/Condition'
        creationRecord:
          description: A read-only record of the creation of the alerting policy. If provided in a call to create or update, this field will be ignored.
          $ref: '#/components/schemas/MutationRecord'
        name:
          type: string
          description: 'Required if the policy exists. The resource name for this policy. The format is: projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID] [ALERT_POLICY_ID] is assigned by Cloud Monitoring when the policy is created. When calling the alertPolicies.create method, do not include the name field in the alerting policy passed as part of the request.'
      type: object
    AvailabilityCriteria:
      properties: {}
      type: object
      id: AvailabilityCriteria
      description: Future parameters for the availability SLI.
    GoogleMonitoringV3Range:
      description: Range of numerical values within min and max.
      properties:
        max:
          type: number
          format: double
          description: Range maximum.
        min:
          description: Range minimum.
          format: double
          type: number
      id: GoogleMonitoringV3Range
      type: object
    Documentation:
      properties:
        content:
          type: string
          description: The body of the documentation, interpreted according to mime_type. The content may not exceed 8,192 Unicode characters and may not exceed more than 10,240 bytes when encoded in UTF-8 format, whichever is smaller. This text can be templatized by using variables (https://cloud.google.com/monitoring/alerts/doc-variables).
        mimeType:
          type: string
          description: The format of the content field. Presently, only the value "text/markdown" is supported. See Markdown (https://en.wikipedia.org/wiki/Markdown) for more information.
      description: A content string and a MIME type that describes the content string's format.
      id: Documentation
      type: object
    Option:
      id: Option
      type: object
      properties:
        value:
          description: The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        name:
          description: The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, "map_entry". For custom options, it should be the fully-qualified name. For example, "google.api.http".
          type: string
      description: A protocol buffer option, which can be attached to a message, field, enumeration, etc.
    MetricDescriptor:
      id: MetricDescriptor
      properties:
        type:
          description: 'The metric type, including its DNS name prefix. The type is not URL-encoded. All user-defined metric types have the DNS name custom.googleapis.com or external.googleapis.com. Metric types should use a natural hierarchical grouping. For example: "custom.googleapis.com/invoice/paid/amount" "external.googleapis.com/prometheus/up" "appengine.googleapis.com/http/server/response_latencies" '
          type: string
        launchStage:
          type: string
          enumDescriptions:
            - Do not use this default value.
            - The feature is not yet implemented. Users can not use it.
            - Prelaunch features are hidden from users and are only visible internally.
            - Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.
            - Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.
            - Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.
            - GA features are open to all developers and are considered stable and fully qualified for production use.
            - Deprecated features are scheduled to be shut down and removed. For more information, see the "Deprecation Policy" section of our Terms of Service (https://cloud.google.com/terms/) and the Google Cloud Platform Subject to the Deprecation Policy (https://cloud.google.com/terms/deprecation) documentation.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - UNIMPLEMENTED
            - PRELAUNCH
            - EARLY_ACCESS
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
          description: Optional. The launch stage of the metric definition.
        name:
          description: The resource name of the metric descriptor.
          type: string
        metricKind:
          enumDescriptions:
            - Do not use this default value.
            - An instantaneous measurement of a value.
            - The change in a value during a time interval.
            - A value accumulated over a time interval. Cumulative measurements in a time series should have the same start time and increasing end times, until an event resets the cumulative value to zero and sets a new start time for the following points.
          enum:
            - METRIC_KIND_UNSPECIFIED
            - GAUGE
            - DELTA
            - CUMULATIVE
          description: Whether the metric records instantaneous values, changes to a value, etc. Some combinations of metric_kind and value_type might not be supported.
          type: string
        monitoredResourceTypes:
          type: array
          items:
            type: string
          description: Read-only. If present, then a time series, which is identified partially by a metric type and a MonitoredResourceDescriptor, that is associated with this metric type can only be associated with one of the monitored resource types listed here.
        valueType:
          enumDescriptions:
            - Do not use this default value.
            - The value is a boolean. This value type can be used only if the metric kind is GAUGE.
            - The value is a signed 64-bit integer.
            - The value is a double precision floating point number.
            - The value is a text string. This value type can be used only if the metric kind is GAUGE.
            - The value is a Distribution.
            - The value is money.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - BOOL
            - INT64
            - DOUBLE
            - STRING
            - DISTRIBUTION
            - MONEY
          type: string
          description: Whether the measurement is an integer, a floating-point number, etc. Some combinations of metric_kind and value_type might not be supported.
        labels:
          description: The set of labels that can be used to describe a specific instance of this metric type. For example, the appengine.googleapis.com/http/server/response_latencies metric type has a label for the HTTP response code, response_code, so you can look at latencies for successful responses or just for responses that failed.
          type: array
          items:
            $ref: '#/components/schemas/LabelDescriptor'
        metadata:
          description: Optional. Metadata which can be used to guide usage of the metric.
          $ref: '#/components/schemas/MetricDescriptorMetadata'
        displayName:
          type: string
          description: A concise name for the metric, which can be displayed in user interfaces. Use sentence case without an ending period, for example "Request count". This field is optional but it is recommended to be set for any metrics associated with user-visible concepts, such as Quota.
        unit:
          type: string
          description: 'The units in which the metric value is reported. It is only applicable if the value_type is INT64, DOUBLE, or DISTRIBUTION. The unit defines the representation of the stored metric values.Different systems might scale the values to be more easily displayed (so a value of 0.02kBy might be displayed as 20By, and a value of 3523kBy might be displayed as 3.5MBy). However, if the unit is kBy, then the value of the metric is always in thousands of bytes, no matter how it might be displayed.If you want a custom metric to record the exact number of CPU-seconds used by a job, you can create an INT64 CUMULATIVE metric whose unit is s{CPU} (or equivalently 1s{CPU} or just s). If the job uses 12,005 CPU-seconds, then the value is written as 12005.Alternatively, if you want a custom metric to record data in a more granular way, you can create a DOUBLE CUMULATIVE metric whose unit is ks{CPU}, and then write the value 12.005 (which is 12005/1000), or use Kis{CPU} and write 11.723 (which is 12005/1024).The supported units are a subset of The Unified Code for Units of Measure (https://unitsofmeasure.org/ucum.html) standard:Basic units (UNIT) bit bit By byte s second min minute h hour d day 1 dimensionlessPrefixes (PREFIX) k kilo (10^3) M mega (10^6) G giga (10^9) T tera (10^12) P peta (10^15) E exa (10^18) Z zetta (10^21) Y yotta (10^24) m milli (10^-3) u micro (10^-6) n nano (10^-9) p pico (10^-12) f femto (10^-15) a atto (10^-18) z zepto (10^-21) y yocto (10^-24) Ki kibi (2^10) Mi mebi (2^20) Gi gibi (2^30) Ti tebi (2^40) Pi pebi (2^50)GrammarThe grammar also includes these connectors: / division or ratio (as an infix operator). For examples, kBy/{email} or MiBy/10ms (although you should almost never have /s in a metric unit; rates should always be computed at query time from the underlying cumulative or delta value). . multiplication or composition (as an infix operator). For examples, GBy.d or k{watt}.h.The grammar for a unit is as follows: Expression = Component { "." Component } { "/" Component } ; Component = ( [ PREFIX ] UNIT | "%" ) [ Annotation ] | Annotation | "1" ; Annotation = "{" NAME "}" ; Notes: Annotation is just a comment if it follows a UNIT. If the annotation is used alone, then the unit is equivalent to 1. For examples, {request}/s == 1/s, By{transmitted}/s == By/s. NAME is a sequence of non-blank printable ASCII characters not containing { or }. 1 represents a unitary dimensionless unit (https://en.wikipedia.org/wiki/Dimensionless_quantity) of 1, such as in 1/s. It is typically used when none of the basic units are appropriate. For example, "new users per day" can be represented as 1/d or {new-users}/d (and a metric value 5 would mean "5 new users). Alternatively, "thousands of page views per day" would be represented as 1000/d or k1/d or k{page_views}/d (and a metric value of 5.3 would mean "5300 page views per day"). % represents dimensionless value of 1/100, and annotates values giving a percentage (so the metric values are typically in the range of 0..100, and a metric value 3 means "3 percent"). 10^2.% indicates a metric contains a ratio, typically in the range 0..1, that will be multiplied by 100 and displayed as a percentage (so a metric value 0.03 means "3 percent").'
        description:
          type: string
          description: A detailed description of the metric, which can be used in documentation.
      description: Defines a metric type and its schema. Once a metric descriptor is created, deleting or altering it stops data collection and makes the metric type's existing data unusable.
      type: object
    HttpCheck:
      type: object
      description: Information involved in an HTTP/HTTPS Uptime check request.
      id: HttpCheck
      properties:
        validateSsl:
          description: Boolean specifying whether to include SSL certificate validation as a part of the Uptime check. Only applies to checks where monitored_resource is set to uptime_url. If use_ssl is false, setting validate_ssl to true has no effect.
          type: boolean
        requestMethod:
          type: string
          description: The HTTP request method to use for the check. If set to METHOD_UNSPECIFIED then request_method defaults to GET.
          enum:
            - METHOD_UNSPECIFIED
            - GET
            - POST
          enumDescriptions:
            - No request method specified.
            - GET request.
            - POST request.
        useSsl:
          type: boolean
          description: If true, use HTTPS instead of HTTP to run the check.
        pingConfig:
          $ref: '#/components/schemas/PingConfig'
          description: Contains information needed to add pings to an HTTP check.
        headers:
          type: object
          additionalProperties:
            type: string
          description: The list of headers to send as part of the Uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second. The maximum number of headers allowed is 100.
        maskHeaders:
          type: boolean
          description: Boolean specifying whether to encrypt the header information. Encryption should be specified for any headers related to authentication that you do not wish to be seen when retrieving the configuration. The server will be responsible for encrypting the headers. On Get/List calls, if mask_headers is set to true then the headers will be obscured with ******.
        port:
          format: int32
          description: Optional (defaults to 80 when use_ssl is false, and 443 when use_ssl is true). The TCP port on the HTTP server against which to run the check. Will be combined with host (specified within the monitored_resource) and path to construct the full URL.
          type: integer
        authInfo:
          $ref: '#/components/schemas/BasicAuthentication'
          description: The authentication information. Optional when creating an HTTP check; defaults to empty.
        body:
          type: string
          description: 'The request body associated with the HTTP POST request. If content_type is URL_ENCODED, the body passed in must be URL-encoded. Users can provide a Content-Length header via the headers field or the API will do so. If the request_method is GET and body is not empty, the API will return an error. The maximum byte size is 1 megabyte.Note: If client libraries aren''t used (which performs the conversion automatically) base64 encode your body data since the field is of bytes type.'
          format: byte
        acceptedResponseStatusCodes:
          items:
            $ref: '#/components/schemas/ResponseStatusCode'
          type: array
          description: If present, the check will only pass if the HTTP response status code is in this set of status codes. If empty, the HTTP status code will only pass if the HTTP status code is 200-299.
        contentType:
          enum:
            - TYPE_UNSPECIFIED
            - URL_ENCODED
          type: string
          enumDescriptions:
            - No content type specified.
            - body is in URL-encoded form. Equivalent to setting the Content-Type to application/x-www-form-urlencoded in the HTTP request.
          description: 'The content type header to use for the check. The following configurations result in errors: 1. Content type is specified in both the headers field and the content_type field. 2. Request method is GET and content_type is not TYPE_UNSPECIFIED 3. Request method is POST and content_type is TYPE_UNSPECIFIED. 4. Request method is POST and a "Content-Type" header is provided via headers field. The content_type field should be used instead.'
        path:
          type: string
          description: Optional (defaults to "/"). The path to the page against which to run the check. Will be combined with the host (specified within the monitored_resource) and port to construct the full URL. If the provided path does not begin with "/", a "/" will be prepended automatically.
    UptimeCheckIp:
      type: object
      properties:
        ipAddress:
          type: string
          description: The IP address from which the Uptime check originates. This is a fully specified IP address (not an IP address range). Most IP addresses, as of this publication, are in IPv4 format; however, one should not rely on the IP addresses being in IPv4 format indefinitely, and should support interpreting this field in either IPv4 or IPv6 format.
        region:
          description: A broad region category in which the IP address is located.
          type: string
          enum:
            - REGION_UNSPECIFIED
            - USA
            - EUROPE
            - SOUTH_AMERICA
            - ASIA_PACIFIC
          enumDescriptions:
            - Default value if no region is specified. Will result in Uptime checks running from all regions.
            - Allows checks to run from locations within the United States of America.
            - Allows checks to run from locations within the continent of Europe.
            - Allows checks to run from locations within the continent of South America.
            - 'Allows checks to run from locations within the Asia Pacific area (ex: Singapore).'
        location:
          description: A more specific location within the region that typically encodes a particular city/town/metro (and its containing state/province or country) within the broader umbrella region category.
          type: string
      description: Contains the region, location, and list of IP addresses where checkers in the location run from.
      id: UptimeCheckIp
    TypedValue:
      description: A single strongly-typed value.
      properties:
        boolValue:
          type: boolean
          description: 'A Boolean value: true or false.'
        distributionValue:
          description: A distribution value.
          $ref: '#/components/schemas/Distribution'
        stringValue:
          description: A variable-length string value.
          type: string
        int64Value:
          description: A 64-bit integer. Its range is approximately ±9.2x1018.
          type: string
          format: int64
        doubleValue:
          type: number
          description: A 64-bit double-precision floating-point number. Its magnitude is approximately ±10±300 and it has 16 significant digits of precision.
          format: double
      type: object
      id: TypedValue
    ListGroupMembersResponse:
      properties:
        totalSize:
          format: int32
          description: The total number of elements matching this request.
          type: integer
        members:
          description: A set of monitored resources in the group.
          type: array
          items:
            $ref: '#/components/schemas/MonitoredResource'
        nextPageToken:
          type: string
          description: If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
      id: ListGroupMembersResponse
      type: object
      description: The ListGroupMembers response.
    ListUptimeCheckConfigsResponse:
      type: object
      properties:
        totalSize:
          description: The total number of Uptime check configurations for the project, irrespective of any pagination.
          type: integer
          format: int32
        uptimeCheckConfigs:
          type: array
          description: The returned Uptime check configurations.
          items:
            $ref: '#/components/schemas/UptimeCheckConfig'
        nextPageToken:
          description: This field represents the pagination token to retrieve the next page of results. If the value is empty, it means no further results for the request. To retrieve the next page of results, the value of the next_page_token is passed to the subsequent List method call (in the request message's page_token field).
          type: string
      id: ListUptimeCheckConfigsResponse
      description: The protocol for the ListUptimeCheckConfigs response.
    NotificationRateLimit:
      properties:
        period:
          type: string
          description: Not more than one notification per period.
          format: google-duration
      id: NotificationRateLimit
      type: object
      description: Control over the rate of notifications sent to this alert policy's notification channels.
    MeshIstio:
      id: MeshIstio
      type: object
      properties:
        meshUid:
          description: Identifier for the mesh in which this Istio service is defined. Corresponds to the mesh_uid metric label in Istio metrics.
          type: string
        serviceName:
          description: The name of the Istio service underlying this service. Corresponds to the destination_service_name metric label in Istio metrics.
          type: string
        serviceNamespace:
          description: The namespace of the Istio service underlying this service. Corresponds to the destination_service_namespace metric label in Istio metrics.
          type: string
      description: Istio service scoped to an Istio mesh. Anthos clusters running ASM < 1.6.8 will have their services ingested as this type.
    Group:
      properties:
        parentName:
          type: string
          description: 'The name of the group''s parent, if it has one. The format is: projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID] For groups with no parent, parent_name is the empty string, "".'
        displayName:
          description: A user-assigned name for this group, used only for display purposes.
          type: string
        isCluster:
          type: boolean
          description: If true, the members of this group are considered to be a cluster. The system can perform additional analysis on groups that are clusters.
        filter:
          type: string
          description: The filter used to determine which monitored resources belong to this group.
        name:
          type: string
          description: 'Output only. The name of this group. The format is: projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID] When creating a group, this field is ignored and a new name is created consisting of the project specified in the call to CreateGroup and a unique [GROUP_ID] that is generated automatically.'
      id: Group
      description: 'The description of a dynamic collection of monitored resources. Each group has a filter that is matched against monitored resources and their associated metadata. If a group''s filter matches an available monitored resource, then that resource is a member of that group. Groups can contain any number of monitored resources, and each monitored resource can be a member of any number of groups.Groups can be nested in parent-child hierarchies. The parentName field identifies an optional parent for each group. If a group has a parent, then the only monitored resources available to be matched by the group''s filter are the resources contained in the parent group. In other words, a group contains the monitored resources that match its filter and the filters of all the group''s ancestors. A group without a parent can contain any monitored resource.For example, consider an infrastructure running a set of instances with two user-defined tags: "environment" and "role". A parent group has a filter, environment="production". A child of that parent group has a filter, role="transcoder". The parent group contains all instances in the production environment, regardless of their roles. The child group contains instances that have the transcoder role and are in the production environment.The monitored resources contained in a group can change at any moment, depending on what resources exist and what filters are associated with the group and its ancestors.'
      type: object
    SpanContext:
      type: object
      id: SpanContext
      description: 'The context of a span. This is attached to an Exemplar in Distribution values during aggregation.It contains the name of a span with format: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID] '
      properties:
        spanName:
          description: 'The resource name of the span. The format is: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID] [TRACE_ID] is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array.[SPAN_ID] is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.'
          type: string
    NotificationChannelDescriptor:
      description: A description of a notification channel. The descriptor includes the properties of the channel and the set of labels or fields that must be specified to configure channels of a given type.
      properties:
        labels:
          items:
            $ref: '#/components/schemas/LabelDescriptor'
          type: array
          description: The set of labels that must be defined to identify a particular channel of the corresponding type. Each label includes a description for how that field should be populated.
        description:
          type: string
          description: A human-readable description of the notification channel type. The description may include a description of the properties of the channel and pointers to external documentation.
        name:
          type: string
          description: 'The full REST resource name for this descriptor. The format is: projects/[PROJECT_ID_OR_NUMBER]/notificationChannelDescriptors/[TYPE] In the above, [TYPE] is the value of the type field.'
        launchStage:
          type: string
          enumDescriptions:
            - Do not use this default value.
            - The feature is not yet implemented. Users can not use it.
            - Prelaunch features are hidden from users and are only visible internally.
            - Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.
            - Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.
            - Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.
            - GA features are open to all developers and are considered stable and fully qualified for production use.
            - Deprecated features are scheduled to be shut down and removed. For more information, see the "Deprecation Policy" section of our Terms of Service (https://cloud.google.com/terms/) and the Google Cloud Platform Subject to the Deprecation Policy (https://cloud.google.com/terms/deprecation) documentation.
          description: The product launch stage for channels of this type.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - UNIMPLEMENTED
            - PRELAUNCH
            - EARLY_ACCESS
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
        supportedTiers:
          items:
            enumDescriptions:
              - An invalid sentinel value, used to indicate that a tier has not been provided explicitly.
              - The Cloud Monitoring Basic tier, a free tier of service that provides basic features, a moderate allotment of logs, and access to built-in metrics. A number of features are not available in this tier. For more details, see the service tiers documentation (https://cloud.google.com/monitoring/workspaces/tiers).
              - The Cloud Monitoring Premium tier, a higher, more expensive tier of service that provides access to all Cloud Monitoring features, lets you use Cloud Monitoring with AWS accounts, and has a larger allotments for logs and metrics. For more details, see the service tiers documentation (https://cloud.google.com/monitoring/workspaces/tiers).
            enum:
              - SERVICE_TIER_UNSPECIFIED
              - SERVICE_TIER_BASIC
              - SERVICE_TIER_PREMIUM
            type: string
          type: array
          description: The tiers that support this notification channel; the project service tier must be one of the supported_tiers.
        type:
          description: The type of notification channel, such as "email" and "sms". To view the full list of channels, see Channel descriptors (https://cloud.google.com/monitoring/alerts/using-channels-api#ncd). Notification channel types are globally unique.
          type: string
        displayName:
          description: A human-readable name for the notification channel type. This form of the name is suitable for a user interface.
          type: string
      type: object
      id: NotificationChannelDescriptor
    TimeInterval:
      properties:
        endTime:
          type: string
          format: google-datetime
          description: Required. The end of the time interval.
        startTime:
          description: Optional. The beginning of the time interval. The default value for the start time is the end time. The start time must not be later than the end time.
          type: string
          format: google-datetime
      id: TimeInterval
      description: 'Describes a time interval: Reads: A half-open time interval. It includes the end time but excludes the start time: (startTime, endTime]. The start time must be specified, must be earlier than the end time, and should be no older than the data retention period for the metric. Writes: A closed time interval. It extends from the start time to the end time, and includes both: [startTime, endTime]. Valid time intervals depend on the MetricKind (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors#MetricKind) of the metric value. The end time must not be earlier than the start time, and the end time must not be more than 25 hours in the past or more than five minutes in the future. For GAUGE metrics, the startTime value is technically optional; if no value is specified, the start time defaults to the value of the end time, and the interval represents a single point in time. If both start and end times are specified, they must be identical. Such an interval is valid only for GAUGE metrics, which are point-in-time measurements. The end time of a new interval must be at least a millisecond after the end time of the previous interval. For DELTA metrics, the start time and end time must specify a non-zero interval, with subsequent points specifying contiguous and non-overlapping intervals. For DELTA metrics, the start time of the next interval must be at least a millisecond after the end time of the previous interval. For CUMULATIVE metrics, the start time and end time must specify a non-zero interval, with subsequent points specifying the same start time and increasing end times, until an event resets the cumulative value to zero and sets a new start time for the following points. The new start time must be at least a millisecond after the end time of the previous interval. The start time of a new interval must be at least a millisecond after the end time of the previous interval because intervals are closed. If the start time of a new interval is the same as the end time of the previous interval, then data written at the new start time could overwrite data written at the previous end time.'
      type: object
    GkeNamespace:
      properties:
        clusterName:
          description: The name of the parent cluster.
          type: string
        namespaceName:
          type: string
          description: The name of this namespace.
        location:
          description: The location of the parent cluster. This may be a zone or region.
          type: string
        projectId:
          description: Output only. The project this resource lives in. For legacy services migrated from the Custom type, this may be a distinct project from the one parenting the service itself.
          type: string
          readOnly: true
      id: GkeNamespace
      type: object
      description: GKE Namespace. The field names correspond to the resource metadata labels on monitored resources that fall under a namespace (for example, k8s_container or k8s_pod).
    Range:
      properties:
        max:
          format: double
          description: The maximum of the population values.
          type: number
        min:
          format: double
          description: The minimum of the population values.
          type: number
      description: The range of the population values.
      type: object
      id: Range
    GkeWorkload:
      properties:
        location:
          description: The location of the parent cluster. This may be a zone or region.
          type: string
        topLevelControllerName:
          type: string
          description: The name of this workload.
        projectId:
          type: string
          description: Output only. The project this resource lives in. For legacy services migrated from the Custom type, this may be a distinct project from the one parenting the service itself.
          readOnly: true
        topLevelControllerType:
          type: string
          description: The type of this workload (for example, "Deployment" or "DaemonSet")
        clusterName:
          type: string
          description: The name of the parent cluster.
        namespaceName:
          type: string
          description: The name of the parent namespace.
      description: A GKE Workload (Deployment, StatefulSet, etc). The field names correspond to the metadata labels on monitored resources that fall under a workload (for example, k8s_container or k8s_pod).
      id: GkeWorkload
      type: object
    MonitoredResourceDescriptor:
      type: object
      properties:
        displayName:
          type: string
          description: Optional. A concise name for the monitored resource type that might be displayed in user interfaces. It should be a Title Cased Noun Phrase, without any article or other determiners. For example, "Google Cloud SQL Database".
        name:
          type: string
          description: 'Optional. The resource name of the monitored resource descriptor: "projects/{project_id}/monitoredResourceDescriptors/{type}" where {type} is the value of the type field in this object and {project_id} is a project ID that provides API-specific context for accessing the type. APIs that do not use project information can use the resource name format "monitoredResourceDescriptors/{type}".'
        launchStage:
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - UNIMPLEMENTED
            - PRELAUNCH
            - EARLY_ACCESS
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
          enumDescriptions:
            - Do not use this default value.
            - The feature is not yet implemented. Users can not use it.
            - Prelaunch features are hidden from users and are only visible internally.
            - Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.
            - Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.
            - Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.
            - GA features are open to all developers and are considered stable and fully qualified for production use.
            - Deprecated features are scheduled to be shut down and removed. For more information, see the "Deprecation Policy" section of our Terms of Service (https://cloud.google.com/terms/) and the Google Cloud Platform Subject to the Deprecation Policy (https://cloud.google.com/terms/deprecation) documentation.
          description: Optional. The launch stage of the monitored resource definition.
          type: string
        type:
          type: string
          description: Required. The monitored resource type. For example, the type "cloudsql_database" represents databases in Google Cloud SQL. For a list of types, see Monitoring resource types (https://cloud.google.com/monitoring/api/resources) and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).
        description:
          type: string
          description: Optional. A detailed description of the monitored resource type that might be used in documentation.
        labels:
          type: array
          description: Required. A set of labels used to describe instances of this monitored resource type. For example, an individual Google Cloud SQL database is identified by values for the labels "database_id" and "zone".
          items:
            $ref: '#/components/schemas/LabelDescriptor'
      description: An object that describes the schema of a MonitoredResource object using a type name and a set of labels. For example, the monitored resource descriptor for Google Compute Engine VM instances has a type of "gce_instance" and specifies the use of the labels "instance_id" and "zone" to identify particular VM instances.Different APIs can support different monitored resource types. APIs generally provide a list method that returns the monitored resource descriptors used by the API.
      id: MonitoredResourceDescriptor
    Field:
      id: Field
      type: object
      description: A single field of a message type.
      properties:
        cardinality:
          description: The field cardinality.
          type: string
          enumDescriptions:
            - For fields with unknown cardinality.
            - For optional fields.
            - For required fields. Proto2 syntax only.
            - For repeated fields.
          enum:
            - CARDINALITY_UNKNOWN
            - CARDINALITY_OPTIONAL
            - CARDINALITY_REQUIRED
            - CARDINALITY_REPEATED
        packed:
          type: boolean
          description: Whether to use alternative packed wire representation.
        typeUrl:
          type: string
          description: 'The field type URL, without the scheme, for message or enumeration types. Example: "type.googleapis.com/google.protobuf.Timestamp".'
        jsonName:
          description: The field JSON name.
          type: string
        name:
          type: string
          description: The field name.
        number:
          type: integer
          description: The field number.
          format: int32
        options:
          items:
            $ref: '#/components/schemas/Option'
          type: array
          description: The protocol buffer options.
        kind:
          type: string
          enumDescriptions:
            - Field type unknown.
            - Field type double.
            - Field type float.
            - Field type int64.
            - Field type uint64.
            - Field type int32.
            - Field type fixed64.
            - Field type fixed32.
            - Field type bool.
            - Field type string.
            - Field type group. Proto2 syntax only, and deprecated.
            - Field type message.
            - Field type bytes.
            - Field type uint32.
            - Field type enum.
            - Field type sfixed32.
            - Field type sfixed64.
            - Field type sint32.
            - Field type sint64.
          enum:
            - TYPE_UNKNOWN
            - TYPE_DOUBLE
            - TYPE_FLOAT
            - TYPE_INT64
            - TYPE_UINT64
            - TYPE_INT32
            - TYPE_FIXED64
            - TYPE_FIXED32
            - TYPE_BOOL
            - TYPE_STRING
            - TYPE_GROUP
            - TYPE_MESSAGE
            - TYPE_BYTES
            - TYPE_UINT32
            - TYPE_ENUM
            - TYPE_SFIXED32
            - TYPE_SFIXED64
            - TYPE_SINT32
            - TYPE_SINT64
          description: The field type.
        oneofIndex:
          type: integer
          description: The index of the field type in Type.oneofs, for message or enumeration types. The first type has index 1; zero means the type is not in the list.
          format: int32
        defaultValue:
          type: string
          description: The string value of the default value of this field. Proto2 syntax only.
    CreateCollectdTimeSeriesRequest:
      description: The CreateCollectdTimeSeries request.
      properties:
        collectdPayloads:
          items:
            $ref: '#/components/schemas/CollectdPayload'
          description: The collectd payloads representing the time series data. You must not include more than a single point for each time series, so no two payloads can have the same values for all of the fields plugin, plugin_instance, type, and type_instance.
          type: array
        resource:
          $ref: '#/components/schemas/MonitoredResource'
          description: The monitored resource associated with the time series.
        collectdVersion:
          description: 'The version of collectd that collected the data. Example: "5.3.0-192.el6".'
          type: string
      type: object
      id: CreateCollectdTimeSeriesRequest
    QueryTimeSeriesRequest:
      properties:
        pageSize:
          format: int32
          description: A positive number that is the maximum number of time_series_data to return.
          type: integer
        query:
          type: string
          description: Required. The query in the Monitoring Query Language (https://cloud.google.com/monitoring/mql/reference) format. The default time zone is in UTC.
        pageToken:
          type: string
          description: If this field is not empty then it must contain the nextPageToken value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call.
      description: The QueryTimeSeries request.
      type: object
      id: QueryTimeSeriesRequest
    TimeSeriesData:
      description: Represents the values of a time series associated with a TimeSeriesDescriptor.
      type: object
      id: TimeSeriesData
      properties:
        labelValues:
          items:
            $ref: '#/components/schemas/LabelValue'
          description: The values of the labels in the time series identifier, given in the same order as the label_descriptors field of the TimeSeriesDescriptor associated with this object. Each value must have a value of the type given in the corresponding entry of label_descriptors.
          type: array
        pointData:
          items:
            $ref: '#/components/schemas/PointData'
          description: The points in the time series.
          type: array
    MetricRange:
      properties:
        timeSeries:
          type: string
          description: A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying the TimeSeries to use for evaluating window quality.
        range:
          $ref: '#/components/schemas/GoogleMonitoringV3Range'
          description: Range of values considered "good." For a one-sided range, set one bound to an infinite value.
      description: A MetricRange is used when each window is good when the value x of a single TimeSeries satisfies range.min <= x <= range.max. The provided TimeSeries must have ValueType = INT64 or ValueType = DOUBLE and MetricKind = GAUGE.
      type: object
      id: MetricRange
    JsonPathMatcher:
      properties:
        jsonMatcher:
          description: The type of JSONPath match that will be applied to the JSON output (ContentMatcher.content)
          enumDescriptions:
            - No JSONPath matcher type specified (not valid).
            - Selects 'exact string' matching. The match succeeds if the content at the json_path within the output is exactly the same as the content string.
            - Selects regular-expression matching. The match succeeds if the content at the json_path within the output matches the regular expression specified in the content string.
          enum:
            - JSON_PATH_MATCHER_OPTION_UNSPECIFIED
            - EXACT_MATCH
            - REGEX_MATCH
          type: string
        jsonPath:
          type: string
          description: JSONPath within the response output pointing to the expected ContentMatcher::content to match against.
      id: JsonPathMatcher
      description: Information needed to perform a JSONPath content match. Used for ContentMatcherOption::MATCHES_JSON_PATH and ContentMatcherOption::NOT_MATCHES_JSON_PATH.
      type: object
    CreateCollectdTimeSeriesResponse:
      description: The CreateCollectdTimeSeries response.
      id: CreateCollectdTimeSeriesResponse
      type: object
      properties:
        payloadErrors:
          items:
            $ref: '#/components/schemas/CollectdPayloadError'
          type: array
          description: Records the error status for points that were not written due to an error in the request.Failed requests for which nothing is written will return an error response instead. Requests where data points were rejected by the backend will set summary instead.
        summary:
          description: Aggregate statistics from writing the payloads. This field is omitted if all points were successfully written, so that the response is empty. This is for backwards compatibility with clients that log errors on any non-empty response.
          $ref: '#/components/schemas/CreateTimeSeriesSummary'
    CollectdPayload:
      type: object
      id: CollectdPayload
      properties:
        typeInstance:
          type: string
          description: 'The measurement type instance. Example: "used".'
        metadata:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TypedValue'
          description: 'The measurement metadata. Example: "process_id" -> 12345'
        endTime:
          format: google-datetime
          type: string
          description: The end time of the interval.
        plugin:
          description: 'The name of the plugin. Example: "disk".'
          type: string
        startTime:
          format: google-datetime
          description: The start time of the interval.
          type: string
        values:
          description: The measured values during this time interval. Each value must have a different data_source_name.
          type: array
          items:
            $ref: '#/components/schemas/CollectdValue'
        pluginInstance:
          type: string
          description: 'The instance name of the plugin Example: "hdcl".'
        type:
          type: string
          description: 'The measurement type. Example: "memory".'
      description: A collection of data points sent from a collectd-based plugin. See the collectd documentation for more information.
    PingConfig:
      description: Information involved in sending ICMP pings alongside public HTTP/TCP checks. For HTTP, the pings are performed for each part of the redirect chain.
      properties:
        pingsCount:
          type: integer
          description: Number of ICMP pings. A maximum of 3 ICMP pings is currently supported.
          format: int32
      id: PingConfig
      type: object
    Point:
      id: Point
      properties:
        value:
          $ref: '#/components/schemas/TypedValue'
          description: The value of the data point.
        interval:
          description: The time interval to which the data point applies. For GAUGE metrics, the start time is optional, but if it is supplied, it must equal the end time. For DELTA metrics, the start and end time should specify a non-zero interval, with subsequent points specifying contiguous and non-overlapping intervals. For CUMULATIVE metrics, the start and end time should specify a non-zero interval, with subsequent points specifying the same start time and increasing end times, until an event resets the cumulative value to zero and sets a new start time for the following points.
          $ref: '#/components/schemas/TimeInterval'
      description: A single data point in a time series.
      type: object
    DistributionCut:
      type: object
      properties:
        distributionFilter:
          type: string
          description: A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries aggregating values. Must have ValueType = DISTRIBUTION and MetricKind = DELTA or MetricKind = CUMULATIVE.
        range:
          description: Range of values considered "good." For a one-sided range, set one bound to an infinite value.
          $ref: '#/components/schemas/GoogleMonitoringV3Range'
      id: DistributionCut
      description: A DistributionCut defines a TimeSeries and thresholds used for measuring good service and total service. The TimeSeries must have ValueType = DISTRIBUTION and MetricKind = DELTA or MetricKind = CUMULATIVE. The computed good_service will be the estimated count of values in the Distribution that fall within the specified min and max.
    Error:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the requested write operation.
        pointCount:
          format: int32
          description: The number of points that couldn't be written because of status.
          type: integer
      description: Detailed information about an error category.
      id: Error
    TimeSeriesDescriptor:
      type: object
      properties:
        pointDescriptors:
          items:
            $ref: '#/components/schemas/ValueDescriptor'
          type: array
          description: Descriptors for the point data value columns.
        labelDescriptors:
          type: array
          description: Descriptors for the labels.
          items:
            $ref: '#/components/schemas/LabelDescriptor'
      description: A descriptor for the labels and points in a time series.
      id: TimeSeriesDescriptor
    ListUptimeCheckIpsResponse:
      description: The protocol for the ListUptimeCheckIps response.
      type: object
      id: ListUptimeCheckIpsResponse
      properties:
        nextPageToken:
          description: 'This field represents the pagination token to retrieve the next page of results. If the value is empty, it means no further results for the request. To retrieve the next page of results, the value of the next_page_token is passed to the subsequent List method call (in the request message''s page_token field). NOTE: this field is not yet implemented'
          type: string
        uptimeCheckIps:
          items:
            $ref: '#/components/schemas/UptimeCheckIp'
          type: array
          description: The returned list of IP addresses (including region and location) that the checkers run from.
    ContentMatcher:
      properties:
        jsonPathMatcher:
          description: Matcher information for MATCHES_JSON_PATH and NOT_MATCHES_JSON_PATH
          $ref: '#/components/schemas/JsonPathMatcher'
        matcher:
          enum:
            - CONTENT_MATCHER_OPTION_UNSPECIFIED
            - CONTAINS_STRING
            - NOT_CONTAINS_STRING
            - MATCHES_REGEX
            - NOT_MATCHES_REGEX
            - MATCHES_JSON_PATH
            - NOT_MATCHES_JSON_PATH
          enumDescriptions:
            - No content matcher type specified (maintained for backward compatibility, but deprecated for future use). Treated as CONTAINS_STRING.
            - Selects substring matching. The match succeeds if the output contains the content string. This is the default value for checks without a matcher option, or where the value of matcher is CONTENT_MATCHER_OPTION_UNSPECIFIED.
            - Selects negation of substring matching. The match succeeds if the output does NOT contain the content string.
            - Selects regular-expression matching. The match succeeds if the output matches the regular expression specified in the content string. Regex matching is only supported for HTTP/HTTPS checks.
            - Selects negation of regular-expression matching. The match succeeds if the output does NOT match the regular expression specified in the content string. Regex matching is only supported for HTTP/HTTPS checks.
            - Selects JSONPath matching. See JsonPathMatcher for details on when the match succeeds. JSONPath matching is only supported for HTTP/HTTPS checks.
            - Selects JSONPath matching. See JsonPathMatcher for details on when the match succeeds. Succeeds when output does NOT match as specified. JSONPath is only supported for HTTP/HTTPS checks.
          type: string
          description: The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
        content:
          type: string
          description: String, regex or JSON content to match. Maximum 1024 bytes. An empty content string indicates no content matching is to be performed.
      description: Optional. Used to perform content matching. This allows matching based on substrings and regular expressions, together with their negations. Only the first 4 MB of an HTTP or HTTPS check's response (and the first 1 MB of a TCP check's response) are examined for purposes of content matching.
      id: ContentMatcher
      type: object
    OperationMetadata:
      description: Contains metadata for longrunning operation for the edit Metrics Scope endpoints.
      type: object
      properties:
        state:
          enumDescriptions:
            - Invalid.
            - Request has been received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          description: Current state of the batch operation.
        createTime:
          description: The time when the batch request was received.
          type: string
          format: google-datetime
        updateTime:
          type: string
          format: google-datetime
          description: The time when the operation result was last updated.
      id: OperationMetadata
    ListNotificationChannelDescriptorsResponse:
      properties:
        channelDescriptors:
          description: The monitored resource descriptors supported for the specified project, optionally filtered.
          items:
            $ref: '#/components/schemas/NotificationChannelDescriptor'
          type: array
        nextPageToken:
          description: If not empty, indicates that there may be more results that match the request. Use the value in the page_token field in a subsequent request to fetch the next set of results. If empty, all results have been returned.
          type: string
      id: ListNotificationChannelDescriptorsResponse
      description: The ListNotificationChannelDescriptors response.
      type: object
    LabelValue:
      properties:
        int64Value:
          description: An int64 label value.
          format: int64
          type: string
        stringValue:
          description: A string label value.
          type: string
        boolValue:
          type: boolean
          description: A bool label value.
      id: LabelValue
      type: object
      description: A label value.
    Service:
      properties:
        displayName:
          description: Name used for UI elements listing this Service.
          type: string
        cloudEndpoints:
          $ref: '#/components/schemas/CloudEndpoints'
          description: Type used for Cloud Endpoints services.
        gkeWorkload:
          description: Type used for GKE Workloads.
          $ref: '#/components/schemas/GkeWorkload'
        basicService:
          description: Message that contains the service type and service labels of this service if it is a basic service. Documentation and examples here (https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli).
          $ref: '#/components/schemas/BasicService'
        userLabels:
          additionalProperties:
            type: string
          description: Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
          type: object
        istioCanonicalService:
          $ref: '#/components/schemas/IstioCanonicalService'
          description: Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
        name:
          type: string
          description: 'Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID] '
        telemetry:
          description: Configuration for how to query telemetry on a Service.
          $ref: '#/components/schemas/Telemetry'
        meshIstio:
          $ref: '#/components/schemas/MeshIstio'
          description: Type used for Istio services scoped to an Istio mesh.
        gkeService:
          $ref: '#/components/schemas/GkeService'
          description: Type used for GKE Services (the Kubernetes concept of a service).
        cloudRun:
          $ref: '#/components/schemas/CloudRun'
          description: Type used for Cloud Run services.
        gkeNamespace:
          description: Type used for GKE Namespaces.
          $ref: '#/components/schemas/GkeNamespace'
        custom:
          $ref: '#/components/schemas/Custom'
          description: Custom service type.
        appEngine:
          description: Type used for App Engine services.
          $ref: '#/components/schemas/AppEngine'
        clusterIstio:
          $ref: '#/components/schemas/ClusterIstio'
          description: Type used for Istio services that live in a Kubernetes cluster.
      type: object
      description: A Service is a discrete, autonomous, and network-accessible unit, designed to solve an individual concern (Wikipedia (https://en.wikipedia.org/wiki/Service-orientation)). In Cloud Monitoring, a Service acts as the root resource under which operational aspects of the service are accessible.
      id: Service
    Status:
      properties:
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
      id: Status
      type: object
      description: 'The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).'
    ListMonitoredResourceDescriptorsResponse:
      description: The ListMonitoredResourceDescriptors response.
      type: object
      properties:
        nextPageToken:
          type: string
          description: If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
        resourceDescriptors:
          type: array
          description: The monitored resource descriptors that are available to this project and that match filter, if present.
          items:
            $ref: '#/components/schemas/MonitoredResourceDescriptor'
      id: ListMonitoredResourceDescriptorsResponse
    LatencyCriteria:
      properties:
        threshold:
          description: Good service is defined to be the count of requests made to this service that return in no more than threshold.
          type: string
          format: google-duration
      description: Parameters for a latency threshold SLI.
      type: object
      id: LatencyCriteria
    AppEngine:
      type: object
      description: App Engine service. Learn more at https://cloud.google.com/appengine.
      id: AppEngine
      properties:
        moduleId:
          type: string
          description: The ID of the App Engine module underlying this service. Corresponds to the module_id resource label in the gae_app monitored resource (https://cloud.google.com/monitoring/api/resources#tag_gae_app).
    ListServiceLevelObjectivesResponse:
      id: ListServiceLevelObjectivesResponse
      properties:
        nextPageToken:
          type: string
          description: If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
        serviceLevelObjectives:
          description: The ServiceLevelObjectives matching the specified filter.
          type: array
          items:
            $ref: '#/components/schemas/ServiceLevelObjective'
      description: The ListServiceLevelObjectives response.
      type: object
    ValueDescriptor:
      id: ValueDescriptor
      properties:
        metricKind:
          type: string
          enum:
            - METRIC_KIND_UNSPECIFIED
            - GAUGE
            - DELTA
            - CUMULATIVE
          enumDescriptions:
            - Do not use this default value.
            - An instantaneous measurement of a value.
            - The change in a value during a time interval.
            - A value accumulated over a time interval. Cumulative measurements in a time series should have the same start time and increasing end times, until an event resets the cumulative value to zero and sets a new start time for the following points.
          description: The value stream kind.
        valueType:
          type: string
          enumDescriptions:
            - Do not use this default value.
            - The value is a boolean. This value type can be used only if the metric kind is GAUGE.
            - The value is a signed 64-bit integer.
            - The value is a double precision floating point number.
            - The value is a text string. This value type can be used only if the metric kind is GAUGE.
            - The value is a Distribution.
            - The value is money.
          description: The value type.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - BOOL
            - INT64
            - DOUBLE
            - STRING
            - DISTRIBUTION
            - MONEY
        unit:
          type: string
          description: The unit in which time_series point values are reported. unit follows the UCUM format for units as seen in https://unitsofmeasure.org/ucum.html. unit is only valid if value_type is INTEGER, DOUBLE, DISTRIBUTION.
        key:
          type: string
          description: The value key.
      type: object
      description: A descriptor for the value columns in a data point.
    Trigger:
      properties:
        count:
          format: int32
          description: The absolute number of time series that must fail the predicate for the condition to be triggered.
          type: integer
        percent:
          format: double
          description: The percentage of time series that must fail the predicate for the condition to be triggered.
          type: number
      id: Trigger
      type: object
      description: 'Specifies how many time series must fail a predicate to trigger a condition. If not specified, then a {count: 1} trigger is used.'
    CloudEndpoints:
      type: object
      id: CloudEndpoints
      properties:
        service:
          type: string
          description: The name of the Cloud Endpoints service underlying this service. Corresponds to the service resource label in the api monitored resource (https://cloud.google.com/monitoring/api/resources#tag_api).
      description: Cloud Endpoints service. Learn more at https://cloud.google.com/endpoints.
    CollectdValue:
      type: object
      description: A single data point from a collectd-based plugin.
      id: CollectdValue
      properties:
        dataSourceType:
          enum:
            - UNSPECIFIED_DATA_SOURCE_TYPE
            - GAUGE
            - COUNTER
            - DERIVE
            - ABSOLUTE
          description: The type of measurement.
          enumDescriptions:
            - An unspecified data source type. This corresponds to google.api.MetricDescriptor.MetricKind.METRIC_KIND_UNSPECIFIED.
            - An instantaneous measurement of a varying quantity. This corresponds to google.api.MetricDescriptor.MetricKind.GAUGE.
            - A cumulative value over time. This corresponds to google.api.MetricDescriptor.MetricKind.CUMULATIVE.
            - A rate of change of the measurement.
            - An amount of change since the last measurement interval. This corresponds to google.api.MetricDescriptor.MetricKind.DELTA.
          type: string
        value:
          description: The measurement value.
          $ref: '#/components/schemas/TypedValue'
        dataSourceName:
          type: string
          description: 'The data source for the collectd value. For example, there are two data sources for network measurements: "rx" and "tx".'
    LogMatch:
      description: A condition type that checks whether a log message in the scoping project (https://cloud.google.com/monitoring/api/v3#project_name) satisfies the given filter. Logs from other projects in the metrics scope are not evaluated.
      id: LogMatch
      type: object
      properties:
        filter:
          type: string
          description: Required. A logs-based filter. See Advanced Logs Queries (https://cloud.google.com/logging/docs/view/advanced-queries) for how this filter should be constructed.
        labelExtractors:
          description: Optional. A map from a label key to an extractor expression, which is used to extract the value for this label key. Each entry in this map is a specification for how data should be extracted from log entries that match filter. Each combination of extracted values is treated as a separate rule for the purposes of triggering notifications. Label keys and corresponding values can be used in notifications generated by this condition.Please see the documentation on logs-based metric valueExtractors (https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects.metrics#LogMetric.FIELDS.value_extractor) for syntax and examples.
          additionalProperties:
            type: string
          type: object
    ResponseStatusCode:
      properties:
        statusValue:
          type: integer
          description: A status code to accept.
          format: int32
        statusClass:
          description: A class of status codes to accept.
          enumDescriptions:
            - Default value that matches no status codes.
            - The class of status codes between 100 and 199.
            - The class of status codes between 200 and 299.
            - The class of status codes between 300 and 399.
            - The class of status codes between 400 and 499.
            - The class of status codes between 500 and 599.
            - The class of all status codes.
          type: string
          enum:
            - STATUS_CLASS_UNSPECIFIED
            - STATUS_CLASS_1XX
            - STATUS_CLASS_2XX
            - STATUS_CLASS_3XX
            - STATUS_CLASS_4XX
            - STATUS_CLASS_5XX
            - STATUS_CLASS_ANY
      type: object
      description: A status to accept. Either a status code class like "2xx", or an integer status code like "200".
      id: ResponseStatusCode
    MetricAbsence:
      description: A condition type that checks that monitored resources are reporting data. The configuration defines a metric and a set of monitored resources. The predicate is considered in violation when a time series for the specified metric of a monitored resource does not include any data in the specified duration.
      type: object
      properties:
        aggregations:
          description: Specifies the alignment of data points in individual time series as well as how to combine the retrieved time series together (such as when aggregating multiple streams on each resource to a single stream for each resource or when aggregating streams across all members of a group of resources). Multiple aggregations are applied in the order specified.This field is similar to the one in the ListTimeSeries request (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list). It is advisable to use the ListTimeSeries method when debugging this field.
          items:
            $ref: '#/components/schemas/Aggregation'
          type: array
        duration:
          type: string
          format: google-duration
          description: The amount of time that a time series must fail to report new data to be considered failing. The minimum value of this field is 120 seconds. Larger values that are a multiple of a minute--for example, 240 or 300 seconds--are supported. If an invalid value is given, an error will be returned. The Duration.nanos field is ignored.
        filter:
          type: string
          description: Required. A filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies which time series should be compared with the threshold.The filter is similar to the one that is specified in the ListTimeSeries request (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) (that call is useful to verify the time series that will be retrieved / processed). The filter must specify the metric type and the resource type. Optionally, it can specify resource labels and metric labels. This field must not exceed 2048 Unicode characters in length.
        trigger:
          description: The number/percent of time series for which the comparison must hold in order for the condition to trigger. If unspecified, then the condition will trigger if the comparison is true for any of the time series that have been identified by filter and aggregations.
          $ref: '#/components/schemas/Trigger'
      id: MetricAbsence
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } '
      id: Empty
      properties: {}
      type: object
    Exemplar:
      type: object
      properties:
        timestamp:
          type: string
          format: google-datetime
          description: The observation (sampling) time of the above value.
        value:
          format: double
          description: Value of the exemplar point. This value determines to which bucket the exemplar belongs.
          type: number
        attachments:
          description: 'Contextual information about the example value. Examples are:Trace: type.googleapis.com/google.monitoring.v3.SpanContextLiteral string: type.googleapis.com/google.protobuf.StringValueLabels dropped during aggregation: type.googleapis.com/google.monitoring.v3.DroppedLabelsThere may be only a single attachment of any given message type in a single exemplar, and this is enforced by the system.'
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
      id: Exemplar
      description: Exemplars are example points that may be used to annotate aggregated distribution values. They are metadata that gives information about a particular value added to a Distribution bucket, such as a trace ID that was active when a value was added. They may contain further information, such as a example values and timestamps, origin, etc.
    Custom:
      properties: {}
      id: Custom
      description: Use a custom service to designate a service that you want to monitor when none of the other service types (like App Engine, Cloud Run, or a GKE type) matches your intended service.
      type: object
    WindowsBasedSli:
      id: WindowsBasedSli
      type: object
      properties:
        goodTotalRatioThreshold:
          description: A window is good if its performance is high enough.
          $ref: '#/components/schemas/PerformanceThreshold'
        windowPeriod:
          type: string
          description: Duration over which window quality is evaluated. Must be an integer fraction of a day and at least 60s.
          format: google-duration
        metricSumInRange:
          description: A window is good if the metric's value is in a good range, summed across returned streams.
          $ref: '#/components/schemas/MetricRange'
        metricMeanInRange:
          $ref: '#/components/schemas/MetricRange'
          description: A window is good if the metric's value is in a good range, averaged across returned streams.
        goodBadMetricFilter:
          type: string
          description: A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries with ValueType = BOOL. The window is good if any true values appear in the window.
      description: A WindowsBasedSli defines good_service as the count of time windows for which the provided service was of good quality. Criteria for determining if service was good are embedded in the window_criterion.
    CloudRun:
      properties:
        serviceName:
          type: string
          description: The name of the Cloud Run service. Corresponds to the service_name resource label in the cloud_run_revision monitored resource (https://cloud.google.com/monitoring/api/resources#tag_cloud_run_revision).
        location:
          description: The location the service is run. Corresponds to the location resource label in the cloud_run_revision monitored resource (https://cloud.google.com/monitoring/api/resources#tag_cloud_run_revision).
          type: string
      type: object
      id: CloudRun
      description: Cloud Run service. Learn more at https://cloud.google.com/run.
    GetNotificationChannelVerificationCodeRequest:
      description: The GetNotificationChannelVerificationCode request.
      type: object
      id: GetNotificationChannelVerificationCodeRequest
      properties:
        expireTime:
          format: google-datetime
          description: The desired expiration time. If specified, the API will guarantee that the returned code will not be valid after the specified timestamp; however, the API cannot guarantee that the returned code will be valid for at least as long as the requested time (the API puts an upper bound on the amount of time for which a code may be valid). If omitted, a default expiration will be used, which may be less than the max permissible expiration (so specifying an expiration may extend the code's lifetime over omitting an expiration, even though the API does impose an upper limit on the maximum expiration that is permitted).
          type: string
    MetricDescriptorMetadata:
      id: MetricDescriptorMetadata
      description: Additional annotations that can be used to guide the usage of a metric.
      properties:
        samplePeriod:
          description: The sampling period of metric data points. For metrics which are written periodically, consecutive data points are stored at this time interval, excluding data loss due to errors. Metrics with a higher granularity have a smaller sampling period.
          type: string
          format: google-duration
        launchStage:
          description: Deprecated. Must use the MetricDescriptor.launch_stage instead.
          type: string
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - UNIMPLEMENTED
            - PRELAUNCH
            - EARLY_ACCESS
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
          enumDescriptions:
            - Do not use this default value.
            - The feature is not yet implemented. Users can not use it.
            - Prelaunch features are hidden from users and are only visible internally.
            - Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.
            - Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.
            - Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.
            - GA features are open to all developers and are considered stable and fully qualified for production use.
            - Deprecated features are scheduled to be shut down and removed. For more information, see the "Deprecation Policy" section of our Terms of Service (https://cloud.google.com/terms/) and the Google Cloud Platform Subject to the Deprecation Policy (https://cloud.google.com/terms/deprecation) documentation.
        ingestDelay:
          description: The delay of data points caused by ingestion. Data points older than this age are guaranteed to be ingested and available to be read, excluding data loss due to errors.
          format: google-duration
          type: string
      type: object
    DroppedLabels:
      id: DroppedLabels
      properties:
        label:
          description: Map from label to its value, for all labels dropped in any aggregation.
          type: object
          additionalProperties:
            type: string
      description: A set of (label, value) pairs that were removed from a Distribution time series during aggregation and then added as an attachment to a Distribution.Exemplar.The full label set for the exemplars is constructed by using the dropped pairs in combination with the label values that remain on the aggregated Distribution time series. The constructed full label set can be used to identify the specific entity, such as the instance or job, which might be contributing to a long-tail. However, with dropped labels, the storage requirements are reduced because only the aggregated distribution values for a large group of time series are stored.Note that there are no guarantees on ordering of the labels from exemplar-to-exemplar and from distribution-to-distribution in the same stream, and there may be duplicates. It is up to clients to resolve any ambiguities.
      type: object
    CreateTimeSeriesRequest:
      properties:
        timeSeries:
          description: Required. The new data to be added to a list of time series. Adds at most one data point to each of several time series. The new data point must be more recent than any other point in its time series. Each TimeSeries value must fully specify a unique time series by supplying all label values for the metric and the monitored resource.The maximum number of TimeSeries objects per Create request is 200.
          items:
            $ref: '#/components/schemas/TimeSeries'
          type: array
      description: The CreateTimeSeries request.
      id: CreateTimeSeriesRequest
      type: object
    ListAlertPoliciesResponse:
      id: ListAlertPoliciesResponse
      properties:
        totalSize:
          format: int32
          type: integer
          description: The total number of alert policies in all pages. This number is only an estimate, and may change in subsequent pages. https://aip.dev/158
        nextPageToken:
          description: If there might be more results than were returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
          type: string
        alertPolicies:
          description: The returned alert policies.
          type: array
          items:
            $ref: '#/components/schemas/AlertPolicy'
      type: object
      description: The protocol for the ListAlertPolicies response.
    QueryTimeSeriesResponse:
      description: The QueryTimeSeries response.
      type: object
      id: QueryTimeSeriesResponse
      properties:
        nextPageToken:
          type: string
          description: If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
        timeSeriesDescriptor:
          $ref: '#/components/schemas/TimeSeriesDescriptor'
          description: The descriptor for the time series data.
        timeSeriesData:
          description: The time series data.
          items:
            $ref: '#/components/schemas/TimeSeriesData'
          type: array
        partialErrors:
          items:
            $ref: '#/components/schemas/Status'
          type: array
          description: Query execution errors that may have caused the time series data returned to be incomplete. The available data will be available in the response.
    AlertStrategy:
      properties:
        autoClose:
          format: google-duration
          description: If an alert policy that was active has no data for this long, any open incidents will close
          type: string
        notificationRateLimit:
          description: Required for alert policies with a LogMatch condition.This limit is not implemented for alert policies that are not log-based.
          $ref: '#/components/schemas/NotificationRateLimit'
      description: Control over how the notification channels in notification_channels are notified when this alert fires.
      type: object
      id: AlertStrategy
    GkeService:
      properties:
        location:
          description: The location of the parent cluster. This may be a zone or region.
          type: string
        serviceName:
          type: string
          description: The name of this service.
        projectId:
          description: Output only. The project this resource lives in. For legacy services migrated from the Custom type, this may be a distinct project from the one parenting the service itself.
          readOnly: true
          type: string
        clusterName:
          type: string
          description: The name of the parent cluster.
        namespaceName:
          description: The name of the parent namespace.
          type: string
      description: GKE Service. The "service" here represents a Kubernetes service object (https://kubernetes.io/docs/concepts/services-networking/service). The field names correspond to the resource labels on k8s_service monitored resources (https://cloud.google.com/monitoring/api/resources#tag_k8s_service).
      type: object
      id: GkeService
    MonitoredResourceMetadata:
      description: Auxiliary metadata for a MonitoredResource object. MonitoredResource objects contain the minimum set of information to uniquely identify a monitored resource instance. There is some other useful auxiliary metadata. Monitoring and Logging use an ingestion pipeline to extract metadata for cloud resources of all types, and store the metadata in this message.
      type: object
      id: MonitoredResourceMetadata
      properties:
        userLabels:
          description: Output only. A map of user-defined metadata labels.
          additionalProperties:
            type: string
          type: object
        systemLabels:
          description: 'Output only. Values for predefined system metadata labels. System labels are a kind of metadata extracted by Google, including "machine_image", "vpc", "subnet_id", "security_group", "name", etc. System label values can be only strings, Boolean values, or a list of strings. For example: { "name": "my-test-instance", "security_group": ["a", "b", "c"], "spot_instance": false } '
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
    Exponential:
      type: object
      properties:
        growthFactor:
          format: double
          description: Must be greater than 1.
          type: number
        numFiniteBuckets:
          format: int32
          description: Must be greater than 0.
          type: integer
        scale:
          type: number
          format: double
          description: Must be greater than 0.
      description: 'Specifies an exponential sequence of buckets that have a width that is proportional to the value of the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.There are num_finite_buckets + 2 (= N) buckets. Bucket i has the following boundaries:Upper bound (0 <= i < N-1): scale * (growth_factor ^ i). Lower bound (1 <= i < N): scale * (growth_factor ^ (i - 1)).'
      id: Exponential
    CreateTimeSeriesSummary:
      properties:
        successPointCount:
          type: integer
          format: int32
          description: The number of points that were successfully written.
        totalPointCount:
          description: The number of points in the request.
          type: integer
          format: int32
        errors:
          type: array
          description: The number of points that failed to be written. Order is not guaranteed.
          items:
            $ref: '#/components/schemas/Error'
      type: object
      id: CreateTimeSeriesSummary
      description: Summary of the result of a failed request to write data to a time series.
    NotificationChannel:
      properties:
        mutationRecords:
          items:
            $ref: '#/components/schemas/MutationRecord'
          description: Records of the modification of this channel.
          type: array
        name:
          type: string
          description: 'The full REST resource name for this channel. The format is: projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID] The [CHANNEL_ID] is automatically assigned by the server on creation.'
        description:
          description: An optional human-readable description of this notification channel. This description may provide additional details, beyond the display name, for the channel. This may not exceed 1024 Unicode characters.
          type: string
        type:
          type: string
          description: The type of the notification channel. This field matches the value of the NotificationChannelDescriptor.type field.
        displayName:
          type: string
          description: An optional human-readable name for this notification channel. It is recommended that you specify a non-empty and unique name in order to make it easier to identify the channels in your project, though this is not enforced. The display name is limited to 512 Unicode characters.
        creationRecord:
          description: Record of the creation of this channel.
          $ref: '#/components/schemas/MutationRecord'
        userLabels:
          type: object
          additionalProperties:
            type: string
          description: User-supplied key/value data that does not need to conform to the corresponding NotificationChannelDescriptor's schema, unlike the labels field. This field is intended to be used for organizing and identifying the NotificationChannel objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
        enabled:
          description: Whether notifications are forwarded to the described channel. This makes it possible to disable delivery of notifications to a particular channel without removing the channel from all alerting policies that reference the channel. This is a more convenient approach when the change is temporary and you want to receive notifications from the same set of alerting policies on the channel at some point in the future.
          type: boolean
        verificationStatus:
          enumDescriptions:
            - Sentinel value used to indicate that the state is unknown, omitted, or is not applicable (as in the case of channels that neither support nor require verification in order to function).
            - The channel has yet to be verified and requires verification to function. Note that this state also applies to the case where the verification process has been initiated by sending a verification code but where the verification code has not been submitted to complete the process.
            - It has been proven that notifications can be received on this notification channel and that someone on the project has access to messages that are delivered to that channel.
          description: Indicates whether this channel has been verified or not. On a ListNotificationChannels or GetNotificationChannel operation, this field is expected to be populated.If the value is UNVERIFIED, then it indicates that the channel is non-functioning (it both requires verification and lacks verification); otherwise, it is assumed that the channel works.If the channel is neither VERIFIED nor UNVERIFIED, it implies that the channel is of a type that does not require verification or that this specific channel has been exempted from verification because it was created prior to verification being required for channels of this type.This field cannot be modified using a standard UpdateNotificationChannel operation. To change the value of this field, you must call VerifyNotificationChannel.
          enum:
            - VERIFICATION_STATUS_UNSPECIFIED
            - UNVERIFIED
            - VERIFIED
          type: string
        labels:
          description: Configuration fields that define the channel and its behavior. The permissible and required labels are specified in the NotificationChannelDescriptor.labels of the NotificationChannelDescriptor corresponding to the type field.
          type: object
          additionalProperties:
            type: string
      type: object
      description: A NotificationChannel is a medium through which an alert is delivered when a policy violation is detected. Examples of channels include email, SMS, and third-party messaging applications. Fields containing sensitive information like authentication tokens or contact info are only partially populated on retrieval.
      id: NotificationChannel
    GetNotificationChannelVerificationCodeResponse:
      id: GetNotificationChannelVerificationCodeResponse
      type: object
      properties:
        expireTime:
          description: The expiration time associated with the code that was returned. If an expiration was provided in the request, this is the minimum of the requested expiration in the request and the max permitted expiration.
          format: google-datetime
          type: string
        code:
          type: string
          description: The verification code, which may be used to verify other channels that have an equivalent identity (i.e. other channels of the same type with the same fingerprint such as other email channels with the same email address or other sms channels with the same number).
      description: The GetNotificationChannelVerificationCode request.
    MonitoredResource:
      id: MonitoredResource
      properties:
        type:
          type: string
          description: Required. The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance. For a list of types, see Monitoring resource types (https://cloud.google.com/monitoring/api/resources) and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).
        labels:
          type: object
          additionalProperties:
            type: string
          description: Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels "project_id", "instance_id", and "zone".
      description: 'An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples include virtual machine instances, databases, and storage devices such as disks. The type field identifies a MonitoredResourceDescriptor object that describes the resource''s schema. Information in the labels field identifies the actual resource and its attributes according to the schema. For example, a particular Compute Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for "gce_instance" has labels "project_id", "instance_id" and "zone": { "type": "gce_instance", "labels": { "project_id": "my-project", "instance_id": "12345678901234", "zone": "us-central1-a" }} '
      type: object
    ListServicesResponse:
      type: object
      id: ListServicesResponse
      description: The ListServices response.
      properties:
        services:
          description: The Services matching the specified filter.
          items:
            $ref: '#/components/schemas/Service'
          type: array
        nextPageToken:
          description: If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
          type: string
    BasicSli:
      description: An SLI measuring performance on a well-known service type. Performance will be computed on the basis of pre-defined metrics. The type of the service_resource determines the metrics to use and the service_resource.labels and metric_labels are used to construct a monitoring filter to filter that metric down to just the data relevant to this service.
      type: object
      properties:
        method:
          items:
            type: string
          description: 'OPTIONAL: The set of RPCs to which this SLI is relevant. Telemetry from other methods will not be used to calculate performance for this SLI. If omitted, this SLI applies to all the Service''s methods. For service types that don''t support breaking down by method, setting this field will result in an error.'
          type: array
        availability:
          description: Good service is defined to be the count of requests made to this service that return successfully.
          $ref: '#/components/schemas/AvailabilityCriteria'
        version:
          description: 'OPTIONAL: The set of API versions to which this SLI is relevant. Telemetry from other API versions will not be used to calculate performance for this SLI. If omitted, this SLI applies to all API versions. For service types that don''t support breaking down by version, setting this field will result in an error.'
          items:
            type: string
          type: array
        location:
          type: array
          description: 'OPTIONAL: The set of locations to which this SLI is relevant. Telemetry from other locations will not be used to calculate performance for this SLI. If omitted, this SLI applies to all locations in which the Service has activity. For service types that don''t support breaking down by location, setting this field will result in an error.'
          items:
            type: string
        latency:
          description: Good service is defined to be the count of requests made to this service that are fast enough with respect to latency.threshold.
          $ref: '#/components/schemas/LatencyCriteria'
      id: BasicSli
    UptimeCheckConfig:
      type: object
      description: This message configures which resources and services to monitor for availability.
      id: UptimeCheckConfig
      properties:
        timeout:
          description: The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Required.
          format: google-duration
          type: string
        httpCheck:
          $ref: '#/components/schemas/HttpCheck'
          description: Contains information needed to make an HTTP or HTTPS check.
        period:
          format: google-duration
          type: string
          description: How often, in seconds, the Uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 60s.
        resourceGroup:
          $ref: '#/components/schemas/ResourceGroup'
          description: The group resource associated with the configuration.
        checkerType:
          enum:
            - CHECKER_TYPE_UNSPECIFIED
            - STATIC_IP_CHECKERS
            - VPC_CHECKERS
          type: string
          enumDescriptions:
            - The default checker type. Currently converted to STATIC_IP_CHECKERS on creation, the default conversion behavior may change in the future.
            - STATIC_IP_CHECKERS are used for uptime checks that perform egress across the public internet. STATIC_IP_CHECKERS use the static IP addresses returned by ListUptimeCheckIps.
            - VPC_CHECKERS are used for uptime checks that perform egress using Service Directory and private network access. When using VPC_CHECKERS, the monitored resource type must be servicedirectory_service.
          description: The type of checkers to use to execute the Uptime check.
        isInternal:
          type: boolean
          description: If this is true, then checks are made only from the 'internal_checkers'. If it is false, then checks are made only from the 'selected_regions'. It is an error to provide 'selected_regions' when is_internal is true, or to provide 'internal_checkers' when is_internal is false.
        displayName:
          type: string
          description: A human-friendly name for the Uptime check configuration. The display name should be unique within a Cloud Monitoring Workspace in order to make it easier to identify; however, uniqueness is not enforced. Required.
        name:
          type: string
          description: 'A unique resource name for this Uptime check configuration. The format is: projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID] [PROJECT_ID_OR_NUMBER] is the Workspace host project associated with the Uptime check.This field should be omitted when creating the Uptime check configuration; on create, the resource name is assigned by the server and included in the response.'
        contentMatchers:
          items:
            $ref: '#/components/schemas/ContentMatcher'
          type: array
          description: The content that is expected to appear in the data returned by the target server against which the check is run. Currently, only the first entry in the content_matchers list is supported, and additional entries will be ignored. This field is optional and should only be specified if a content match is required as part of the/ Uptime check.
        monitoredResource:
          description: 'The monitored resource (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The following monitored resource types are valid for this field: uptime_url, gce_instance, gae_app, aws_ec2_instance, aws_elb_load_balancer k8s_service servicedirectory_service cloud_run_revision'
          $ref: '#/components/schemas/MonitoredResource'
        internalCheckers:
          items:
            $ref: '#/components/schemas/InternalChecker'
          description: The internal checkers that this check will egress from. If is_internal is true and this list is empty, the check will egress from all the InternalCheckers configured for the project that owns this UptimeCheckConfig.
          type: array
        userLabels:
          type: object
          additionalProperties:
            type: string
          description: User-supplied key/value data to be used for organizing and identifying the UptimeCheckConfig objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
        tcpCheck:
          description: Contains information needed to make a TCP check.
          $ref: '#/components/schemas/TcpCheck'
        selectedRegions:
          type: array
          description: The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions must be provided to include a minimum of 3 locations. Not specifying this field will result in Uptime checks running from all available regions.
          items:
            enumDescriptions:
              - Default value if no region is specified. Will result in Uptime checks running from all regions.
              - Allows checks to run from locations within the United States of America.
              - Allows checks to run from locations within the continent of Europe.
              - Allows checks to run from locations within the continent of South America.
              - 'Allows checks to run from locations within the Asia Pacific area (ex: Singapore).'
            enum:
              - REGION_UNSPECIFIED
              - USA
              - EUROPE
              - SOUTH_AMERICA
              - ASIA_PACIFIC
            type: string
    CollectdValueError:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: Records the error status for the value.
        index:
          type: integer
          format: int32
          description: The zero-based index in CollectdPayload.values within the parent CreateCollectdTimeSeriesRequest.collectd_payloads.
      id: CollectdValueError
      description: Describes the error status for values that were not written.
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/monitoring: View and write monitoring data for all of your Google and third-party Cloud and API projects
            https://www.googleapis.com/auth/monitoring.read: View monitoring data for all of your Google Cloud and third-party projects
            https://www.googleapis.com/auth/monitoring.write: Publish metric data to your Google Cloud projects
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    time_series:
      id: google.monitoring.time_series
      name: time_series
      title: Time_series
      methods:
        folders_timeSeries_list:
          operation:
            $ref: '#/paths/~1v3~1folders~1{foldersId}~1timeSeries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_timeSeries_list:
          operation:
            $ref: '#/paths/~1v3~1organizations~1{organizationsId}~1timeSeries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_timeSeries_query:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1timeSeries:query/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_timeSeries_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1timeSeries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_timeSeries_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1timeSeries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/time_series/methods/folders_timeSeries_list'
          - $ref: '#/components/x-stackQL-resources/time_series/methods/organizations_timeSeries_list'
          - $ref: '#/components/x-stackQL-resources/time_series/methods/projects_timeSeries_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/time_series/methods/projects_timeSeries_create'
        update: []
        delete: []
    services:
      id: google.monitoring.services
      name: services
      title: Services
      methods:
        get:
          operation:
            $ref: '#/paths/~1v3~1{name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v3~1{name}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v3~1{name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v3~1{parent}~1services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: services
        create:
          operation:
            $ref: '#/paths/~1v3~1{parent}~1services/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/get'
          - $ref: '#/components/x-stackQL-resources/services/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/services/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/services/methods/delete'
    service_level_objectives:
      id: google.monitoring.service_level_objectives
      name: service_level_objectives
      title: Service_level_objectives
      methods:
        services_serviceLevelObjectives_list:
          operation:
            $ref: '#/paths/~1v3~1{parent}~1serviceLevelObjectives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: serviceLevelObjectives
        services_serviceLevelObjectives_create:
          operation:
            $ref: '#/paths/~1v3~1{parent}~1serviceLevelObjectives/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_level_objectives/methods/services_serviceLevelObjectives_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_level_objectives/methods/services_serviceLevelObjectives_create'
        update: []
        delete: []
    metric_descriptors:
      id: google.monitoring.metric_descriptors
      name: metric_descriptors
      title: Metric_descriptors
      methods:
        projects_metricDescriptors_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1metricDescriptors~1{metricDescriptorsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_metricDescriptors_delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1metricDescriptors~1{metricDescriptorsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_metricDescriptors_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1metricDescriptors/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_metricDescriptors_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1metricDescriptors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: metricDescriptors
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metric_descriptors/methods/projects_metricDescriptors_get'
          - $ref: '#/components/x-stackQL-resources/metric_descriptors/methods/projects_metricDescriptors_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/metric_descriptors/methods/projects_metricDescriptors_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/metric_descriptors/methods/projects_metricDescriptors_delete'
    collectd_time_series:
      id: google.monitoring.collectd_time_series
      name: collectd_time_series
      title: Collectd_time_series
      methods:
        projects_collectdTimeSeries_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1collectdTimeSeries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/collectd_time_series/methods/projects_collectdTimeSeries_create'
        update: []
        delete: []
    uptime_check_configs:
      id: google.monitoring.uptime_check_configs
      name: uptime_check_configs
      title: Uptime_check_configs
      methods:
        projects_uptimeCheckConfigs_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1uptimeCheckConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_uptimeCheckConfigs_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1uptimeCheckConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: uptimeCheckConfigs
        projects_uptimeCheckConfigs_delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1uptimeCheckConfigs~1{uptimeCheckConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_uptimeCheckConfigs_patch:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1uptimeCheckConfigs~1{uptimeCheckConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_uptimeCheckConfigs_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1uptimeCheckConfigs~1{uptimeCheckConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/uptime_check_configs/methods/projects_uptimeCheckConfigs_get'
          - $ref: '#/components/x-stackQL-resources/uptime_check_configs/methods/projects_uptimeCheckConfigs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/uptime_check_configs/methods/projects_uptimeCheckConfigs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/uptime_check_configs/methods/projects_uptimeCheckConfigs_delete'
    notification_channels:
      id: google.monitoring.notification_channels
      name: notification_channels
      title: Notification_channels
      methods:
        projects_notificationChannels_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1notificationChannels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: notificationChannels
        projects_notificationChannels_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1notificationChannels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_notificationChannels_patch:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1notificationChannels~1{notificationChannelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_notificationChannels_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1notificationChannels~1{notificationChannelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_notificationChannels_delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1notificationChannels~1{notificationChannelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_notificationChannels_sendVerificationCode:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1notificationChannels~1{notificationChannelsId}:sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_notificationChannels_verify:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1notificationChannels~1{notificationChannelsId}:verify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/projects_notificationChannels_get'
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/projects_notificationChannels_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/projects_notificationChannels_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/projects_notificationChannels_delete'
    notification_channels_verification_code:
      id: google.monitoring.notification_channels_verification_code
      name: notification_channels_verification_code
      title: Notification_channels_verification_code
      methods:
        projects_notificationChannels_getVerificationCode:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1notificationChannels~1{notificationChannelsId}:getVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification_channels_verification_code/methods/projects_notificationChannels_getVerificationCode'
        insert: []
        update: []
        delete: []
    members:
      id: google.monitoring.members
      name: members
      title: Members
      methods:
        projects_groups_members_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1groups~1{groupsId}~1members/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: members
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/members/methods/projects_groups_members_list'
        insert: []
        update: []
        delete: []
    groups:
      id: google.monitoring.groups
      name: groups
      title: Groups
      methods:
        projects_groups_delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1groups~1{groupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_groups_update:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1groups~1{groupsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_groups_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1groups~1{groupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_groups_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_groups_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: group
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/projects_groups_get'
          - $ref: '#/components/x-stackQL-resources/groups/methods/projects_groups_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/projects_groups_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/projects_groups_delete'
    monitored_resource_descriptors:
      id: google.monitoring.monitored_resource_descriptors
      name: monitored_resource_descriptors
      title: Monitored_resource_descriptors
      methods:
        projects_monitoredResourceDescriptors_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1monitoredResourceDescriptors~1{monitoredResourceDescriptorsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_monitoredResourceDescriptors_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1monitoredResourceDescriptors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: resourceDescriptors
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitored_resource_descriptors/methods/projects_monitoredResourceDescriptors_get'
          - $ref: '#/components/x-stackQL-resources/monitored_resource_descriptors/methods/projects_monitoredResourceDescriptors_list'
        insert: []
        update: []
        delete: []
    time_series_service:
      id: google.monitoring.time_series_service
      name: time_series_service
      title: Time_series_service
      methods:
        projects_timeSeries_createService:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1timeSeries:createService/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/time_series_service/methods/projects_timeSeries_createService'
        update: []
        delete: []
    snoozes:
      id: google.monitoring.snoozes
      name: snoozes
      title: Snoozes
      methods:
        projects_snoozes_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1snoozes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snoozes_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1snoozes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: snoozes
        projects_snoozes_patch:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1snoozes~1{snoozesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_snoozes_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1snoozes~1{snoozesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snoozes/methods/projects_snoozes_get'
          - $ref: '#/components/x-stackQL-resources/snoozes/methods/projects_snoozes_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/snoozes/methods/projects_snoozes_create'
        update: []
        delete: []
    alert_policies:
      id: google.monitoring.alert_policies
      name: alert_policies
      title: Alert_policies
      methods:
        projects_alertPolicies_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1alertPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_alertPolicies_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1alertPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: alertPolicies
        projects_alertPolicies_patch:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1alertPolicies~1{alertPoliciesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_alertPolicies_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1alertPolicies~1{alertPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_alertPolicies_delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1alertPolicies~1{alertPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_policies/methods/projects_alertPolicies_get'
          - $ref: '#/components/x-stackQL-resources/alert_policies/methods/projects_alertPolicies_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/alert_policies/methods/projects_alertPolicies_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/alert_policies/methods/projects_alertPolicies_delete'
    notification_channel_descriptors:
      id: google.monitoring.notification_channel_descriptors
      name: notification_channel_descriptors
      title: Notification_channel_descriptors
      methods:
        projects_notificationChannelDescriptors_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1notificationChannelDescriptors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: channelDescriptors
        projects_notificationChannelDescriptors_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1notificationChannelDescriptors~1{notificationChannelDescriptorsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification_channel_descriptors/methods/projects_notificationChannelDescriptors_get'
          - $ref: '#/components/x-stackQL-resources/notification_channel_descriptors/methods/projects_notificationChannelDescriptors_list'
        insert: []
        update: []
        delete: []
    uptime_check_ips:
      id: google.monitoring.uptime_check_ips
      name: uptime_check_ips
      title: Uptime_check_ips
      methods:
        uptimeCheckIps_list:
          operation:
            $ref: '#/paths/~1v3~1uptimeCheckIps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: uptimeCheckIps
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/uptime_check_ips/methods/uptimeCheckIps_list'
        insert: []
        update: []
        delete: []
paths:
  /v3/folders/{foldersId}/timeSeries:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: Lists time series that match a filter.
      operationId: monitoring.folders.timeSeries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTimeSeriesResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: secondaryAggregation.groupByFields
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: aggregation.groupByFields
          schema:
            type: string
        - in: query
          name: secondaryAggregation.alignmentPeriod
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: secondaryAggregation.crossSeriesReducer
          schema:
            type: string
        - in: query
          name: aggregation.perSeriesAligner
          schema:
            type: string
        - in: query
          name: interval.startTime
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: aggregation.alignmentPeriod
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: interval.endTime
          schema:
            type: string
        - in: query
          name: secondaryAggregation.perSeriesAligner
          schema:
            type: string
        - in: query
          name: aggregation.crossSeriesReducer
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-verb: select
  /v3/{name}:
    parameters: *ref_1
    get:
      description: Get the named Service.
      operationId: monitoring.services.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: select
    patch:
      description: Update this Service.
      operationId: monitoring.services.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: exec
    delete:
      description: Soft delete this Service.
      operationId: monitoring.services.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: delete
  /v3/{parent}/serviceLevelObjectives:
    parameters: *ref_1
    get:
      description: List the ServiceLevelObjectives for the given Service.
      operationId: monitoring.services.serviceLevelObjectives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceLevelObjectivesResponse'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: service_level_objectives
      x-stackQL-verb: select
    post:
      description: Create a ServiceLevelObjective for the given Service.
      operationId: monitoring.services.serviceLevelObjectives.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLevelObjective'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLevelObjective'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: serviceLevelObjectiveId
          schema:
            type: string
      x-stackQL-resource: service_level_objectives
      x-stackQL-verb: insert
  /v3/{parent}/services:
    parameters: *ref_1
    get:
      description: List Services for this Metrics Scope.
      operationId: monitoring.services.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: select
    post:
      description: Create a Service.
      operationId: monitoring.services.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      parameters:
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: serviceId
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: insert
  /v3/organizations/{organizationsId}/timeSeries:
    parameters: *ref_1
    get:
      description: Lists time series that match a filter.
      operationId: monitoring.organizations.timeSeries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTimeSeriesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: secondaryAggregation.perSeriesAligner
          schema:
            type: string
        - in: query
          name: secondaryAggregation.crossSeriesReducer
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: interval.endTime
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: aggregation.crossSeriesReducer
          schema:
            type: string
        - in: query
          name: secondaryAggregation.alignmentPeriod
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: aggregation.groupByFields
          schema:
            type: string
        - in: query
          name: aggregation.alignmentPeriod
          schema:
            type: string
        - in: query
          name: aggregation.perSeriesAligner
          schema:
            type: string
        - in: query
          name: secondaryAggregation.groupByFields
          schema:
            type: string
        - in: query
          name: interval.startTime
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-verb: select
  /v3/projects/{projectsId}/metricDescriptors/{metricDescriptorsId}:
    parameters: *ref_1
    get:
      description: Gets a single metric descriptor.
      operationId: monitoring.projects.metricDescriptors.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.write
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDescriptor'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: metricDescriptorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: metric_descriptors
      x-stackQL-verb: select
    delete:
      description: Deletes a metric descriptor. Only user-created custom metrics (https://cloud.google.com/monitoring/custom-metrics) can be deleted.
      operationId: monitoring.projects.metricDescriptors.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: metricDescriptorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: metric_descriptors
      x-stackQL-verb: delete
  /v3/projects/{projectsId}/metricDescriptors:
    parameters: *ref_1
    post:
      description: Creates a new metric descriptor. The creation is executed asynchronously. User-created metric descriptors define custom metrics (https://cloud.google.com/monitoring/custom-metrics). The metric descriptor is updated if it already exists, except that metric labels are never removed.
      operationId: monitoring.projects.metricDescriptors.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricDescriptor'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.write
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDescriptor'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: metric_descriptors
      x-stackQL-verb: insert
    get:
      description: Lists metric descriptors that match a filter.
      operationId: monitoring.projects.metricDescriptors.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.write
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMetricDescriptorsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: metric_descriptors
      x-stackQL-verb: select
  /v3/projects/{projectsId}/collectdTimeSeries:
    parameters: *ref_1
    post:
      description: 'Cloud Monitoring Agent only: Creates a new time series.This method is only for use by the Cloud Monitoring Agent. Use projects.timeSeries.create instead.'
      operationId: monitoring.projects.collectdTimeSeries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollectdTimeSeriesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.write
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCollectdTimeSeriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: collectd_time_series
      x-stackQL-verb: insert
  /v3/projects/{projectsId}/uptimeCheckConfigs:
    parameters: *ref_1
    post:
      description: Creates a new Uptime check configuration.
      operationId: monitoring.projects.uptimeCheckConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UptimeCheckConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UptimeCheckConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: uptime_check_configs
      x-stackQL-verb: insert
    get:
      description: Lists the existing valid Uptime check configurations for the project (leaving out any invalid configurations).
      operationId: monitoring.projects.uptimeCheckConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUptimeCheckConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: uptime_check_configs
      x-stackQL-verb: select
  /v3/projects/{projectsId}/uptimeCheckConfigs/{uptimeCheckConfigsId}:
    parameters: *ref_1
    delete:
      description: Deletes an Uptime check configuration. Note that this method will fail if the Uptime check configuration is referenced by an alert policy or other dependent configs that would be rendered invalid by the deletion.
      operationId: monitoring.projects.uptimeCheckConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: uptimeCheckConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: uptime_check_configs
      x-stackQL-verb: delete
    patch:
      description: Updates an Uptime check configuration. You can either replace the entire configuration with a new one or replace only certain fields in the current configuration by specifying the fields to be updated via updateMask. Returns the updated configuration.
      operationId: monitoring.projects.uptimeCheckConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UptimeCheckConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UptimeCheckConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: uptimeCheckConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: uptime_check_configs
      x-stackQL-verb: exec
    get:
      description: Gets a single Uptime check configuration.
      operationId: monitoring.projects.uptimeCheckConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UptimeCheckConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: uptimeCheckConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: uptime_check_configs
      x-stackQL-verb: select
  /v3/projects/{projectsId}/notificationChannels:
    parameters: *ref_1
    get:
      description: Lists the notification channels that have been created for the project.
      operationId: monitoring.projects.notificationChannels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotificationChannelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: notification_channels
      x-stackQL-verb: select
    post:
      description: Creates a new notification channel, representing a single notification endpoint such as an email address, SMS number, or PagerDuty service.Design your application to single-thread API calls that modify the state of notification channels in a single project. This includes calls to CreateNotificationChannel, DeleteNotificationChannel and UpdateNotificationChannel.
      operationId: monitoring.projects.notificationChannels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationChannel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_channels
      x-stackQL-verb: insert
  /v3/projects/{projectsId}/notificationChannels/{notificationChannelsId}:getVerificationCode:
    parameters: *ref_1
    post:
      description: Requests a verification code for an already verified channel that can then be used in a call to VerifyNotificationChannel() on a different channel with an equivalent identity in the same or in a different project. This makes it possible to copy a channel between projects without requiring manual reverification of the channel. If the channel is not in the verified state, this method will fail (in other words, this may only be used if the SendNotificationChannelVerificationCode and VerifyNotificationChannel paths have already been used to put the given channel into the verified state).There is no guarantee that the verification codes returned by this method will be of a similar structure or form as the ones that are delivered to the channel via SendNotificationChannelVerificationCode; while VerifyNotificationChannel() will recognize both the codes delivered via SendNotificationChannelVerificationCode() and returned from GetNotificationChannelVerificationCode(), it is typically the case that the verification codes delivered via SendNotificationChannelVerificationCode() will be shorter and also have a shorter expiration (e.g. codes such as "G-123456") whereas GetVerificationCode() will typically return a much longer, websafe base 64 encoded string that has a longer expiration time.
      operationId: monitoring.projects.notificationChannels.getVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNotificationChannelVerificationCodeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationChannelVerificationCodeResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationChannelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_channels_verification_code
      x-stackQL-verb: select
  /v3/projects/{projectsId}/notificationChannels/{notificationChannelsId}:
    parameters: *ref_1
    patch:
      description: Updates a notification channel. Fields not specified in the field mask remain unchanged.Design your application to single-thread API calls that modify the state of notification channels in a single project. This includes calls to CreateNotificationChannel, DeleteNotificationChannel and UpdateNotificationChannel.
      operationId: monitoring.projects.notificationChannels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationChannel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationChannelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: notification_channels
      x-stackQL-verb: exec
    get:
      description: Gets a single notification channel. The channel includes the relevant configuration details with which the channel was created. However, the response may truncate or omit passwords, API keys, or other private key matter and thus the response may not be 100% identical to the information that was supplied in the call to the create method.
      operationId: monitoring.projects.notificationChannels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationChannelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_channels
      x-stackQL-verb: select
    delete:
      description: Deletes a notification channel.Design your application to single-thread API calls that modify the state of notification channels in a single project. This includes calls to CreateNotificationChannel, DeleteNotificationChannel and UpdateNotificationChannel.
      operationId: monitoring.projects.notificationChannels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationChannelsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: notification_channels
      x-stackQL-verb: delete
  /v3/projects/{projectsId}/notificationChannels/{notificationChannelsId}:sendVerificationCode:
    parameters: *ref_1
    post:
      description: Causes a verification code to be delivered to the channel. The code can then be supplied in VerifyNotificationChannel to verify the channel.
      operationId: monitoring.projects.notificationChannels.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendNotificationChannelVerificationCodeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationChannelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_channels
      x-stackQL-verb: exec
  /v3/projects/{projectsId}/notificationChannels/{notificationChannelsId}:verify:
    parameters: *ref_1
    post:
      description: Verifies a NotificationChannel by proving receipt of the code delivered to the channel as a result of calling SendNotificationChannelVerificationCode.
      operationId: monitoring.projects.notificationChannels.verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyNotificationChannelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationChannelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_channels
      x-stackQL-verb: exec
  /v3/projects/{projectsId}/groups/{groupsId}/members:
    parameters: *ref_1
    get:
      description: Lists the monitored resources that are members of a group.
      operationId: monitoring.projects.groups.members.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupMembersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: interval.startTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: interval.endTime
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: members
      x-stackQL-verb: select
  /v3/projects/{projectsId}/groups/{groupsId}:
    parameters: *ref_1
    delete:
      description: Deletes an existing group.
      operationId: monitoring.projects.groups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: recursive
          schema:
            type: boolean
      x-stackQL-resource: groups
      x-stackQL-verb: delete
    put:
      description: Updates an existing group. You can change any group attributes except name.
      operationId: monitoring.projects.groups.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: groups
      x-stackQL-verb: exec
    get:
      description: Gets a single group.
      operationId: monitoring.projects.groups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
  /v3/projects/{projectsId}/groups:
    parameters: *ref_1
    post:
      description: Creates a new group.
      operationId: monitoring.projects.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: groups
      x-stackQL-verb: insert
    get:
      description: Lists the existing groups.
      operationId: monitoring.projects.groups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: childrenOfGroup
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: descendantsOfGroup
          schema:
            type: string
        - in: query
          name: ancestorsOfGroup
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
  /v3/projects/{projectsId}/monitoredResourceDescriptors/{monitoredResourceDescriptorsId}:
    parameters: *ref_1
    get:
      description: Gets a single monitored resource descriptor.
      operationId: monitoring.projects.monitoredResourceDescriptors.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.write
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredResourceDescriptor'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: monitoredResourceDescriptorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: monitored_resource_descriptors
      x-stackQL-verb: select
  /v3/projects/{projectsId}/monitoredResourceDescriptors:
    parameters: *ref_1
    get:
      description: Lists monitored resource descriptors that match a filter.
      operationId: monitoring.projects.monitoredResourceDescriptors.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.write
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMonitoredResourceDescriptorsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: monitored_resource_descriptors
      x-stackQL-verb: select
  /v3/projects/{projectsId}/timeSeries:query:
    parameters: *ref_1
    post:
      description: Queries time series using Monitoring Query Language.
      operationId: monitoring.projects.timeSeries.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTimeSeriesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTimeSeriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-verb: exec
  /v3/projects/{projectsId}/timeSeries:createService:
    parameters: *ref_1
    post:
      description: Creates or adds data to one or more service time series. A service time series is a time series for a metric from a Google Cloud service. The response is empty if all time series in the request were written. If any time series could not be written, a corresponding failure message is included in the error response. This endpoint rejects writes to user-defined metrics. This method is only for use by Google Cloud services. Use projects.timeSeries.create instead.
      operationId: monitoring.projects.timeSeries.createService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeSeriesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.write
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: time_series_service
      x-stackQL-verb: insert
  /v3/projects/{projectsId}/timeSeries:
    parameters: *ref_1
    post:
      description: Creates or adds data to one or more time series. The response is empty if all time series in the request were written. If any time series could not be written, a corresponding failure message is included in the error response.
      operationId: monitoring.projects.timeSeries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeSeriesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.write
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-verb: insert
    get:
      description: Lists time series that match a filter.
      operationId: monitoring.projects.timeSeries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTimeSeriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: aggregation.alignmentPeriod
          schema:
            type: string
        - in: query
          name: interval.endTime
          schema:
            type: string
        - in: query
          name: aggregation.crossSeriesReducer
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: aggregation.perSeriesAligner
          schema:
            type: string
        - in: query
          name: secondaryAggregation.groupByFields
          schema:
            type: string
        - in: query
          name: secondaryAggregation.crossSeriesReducer
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: secondaryAggregation.alignmentPeriod
          schema:
            type: string
        - in: query
          name: secondaryAggregation.perSeriesAligner
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: interval.startTime
          schema:
            type: string
        - in: query
          name: aggregation.groupByFields
          schema:
            type: string
      x-stackQL-resource: time_series
      x-stackQL-verb: select
  /v3/projects/{projectsId}/snoozes:
    parameters: *ref_1
    post:
      description: Creates a Snooze that will prevent alerts, which match the provided criteria, from being opened. The Snooze applies for a specific time interval.
      operationId: monitoring.projects.snoozes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snooze'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snooze'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snoozes
      x-stackQL-verb: insert
    get:
      description: Lists the Snoozes associated with a project. Can optionally pass in filter, which specifies predicates to match Snoozes.
      operationId: monitoring.projects.snoozes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnoozesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: snoozes
      x-stackQL-verb: select
  /v3/projects/{projectsId}/snoozes/{snoozesId}:
    parameters: *ref_1
    patch:
      description: Updates a Snooze, identified by its name, with the parameters in the given Snooze object.
      operationId: monitoring.projects.snoozes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snooze'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snooze'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: snoozesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: snoozes
      x-stackQL-verb: exec
    get:
      description: Retrieves a Snooze by name.
      operationId: monitoring.projects.snoozes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snooze'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: snoozesId
          required: true
          schema:
            type: string
      x-stackQL-resource: snoozes
      x-stackQL-verb: select
  /v3/projects/{projectsId}/alertPolicies:
    parameters: *ref_1
    post:
      description: Creates a new alerting policy.Design your application to single-thread API calls that modify the state of alerting policies in a single project. This includes calls to CreateAlertPolicy, DeleteAlertPolicy and UpdateAlertPolicy.
      operationId: monitoring.projects.alertPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: alert_policies
      x-stackQL-verb: insert
    get:
      description: Lists the existing alerting policies for the workspace.
      operationId: monitoring.projects.alertPolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlertPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: alert_policies
      x-stackQL-verb: select
  /v3/projects/{projectsId}/alertPolicies/{alertPoliciesId}:
    parameters: *ref_1
    patch:
      description: Updates an alerting policy. You can either replace the entire policy with a new one or replace only certain fields in the current alerting policy by specifying the fields to be updated via updateMask. Returns the updated alerting policy.Design your application to single-thread API calls that modify the state of alerting policies in a single project. This includes calls to CreateAlertPolicy, DeleteAlertPolicy and UpdateAlertPolicy.
      operationId: monitoring.projects.alertPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: alertPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: alert_policies
      x-stackQL-verb: exec
    get:
      description: Gets a single alerting policy.
      operationId: monitoring.projects.alertPolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: alertPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: alert_policies
      x-stackQL-verb: select
    delete:
      description: Deletes an alerting policy.Design your application to single-thread API calls that modify the state of alerting policies in a single project. This includes calls to CreateAlertPolicy, DeleteAlertPolicy and UpdateAlertPolicy.
      operationId: monitoring.projects.alertPolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: alertPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: alert_policies
      x-stackQL-verb: delete
  /v3/projects/{projectsId}/notificationChannelDescriptors:
    parameters: *ref_1
    get:
      description: Lists the descriptors for supported channel types. The use of descriptors makes it possible for new channel types to be dynamically added.
      operationId: monitoring.projects.notificationChannelDescriptors.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotificationChannelDescriptorsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: notification_channel_descriptors
      x-stackQL-verb: select
  /v3/projects/{projectsId}/notificationChannelDescriptors/{notificationChannelDescriptorsId}:
    parameters: *ref_1
    get:
      description: Gets a single channel descriptor. The descriptor indicates which fields are expected / permitted for a notification channel of the given type.
      operationId: monitoring.projects.notificationChannelDescriptors.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannelDescriptor'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationChannelDescriptorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_channel_descriptors
      x-stackQL-verb: select
  /v3/uptimeCheckIps:
    parameters: *ref_1
    get:
      description: Returns the list of IP addresses that checkers run from
      operationId: monitoring.uptimeCheckIps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring
        - Oauth2:
            - https://www.googleapis.com/auth/monitoring.read
          Oauth2c:
            - https://www.googleapis.com/auth/monitoring.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUptimeCheckIpsResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: uptime_check_ips
      x-stackQL-verb: select
