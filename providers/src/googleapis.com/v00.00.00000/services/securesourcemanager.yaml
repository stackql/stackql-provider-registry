openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Secure Source Manager API
  description: >-
    Regionally deployed, single-tenant managed source code repository hosted on
    Google Cloud.
  version: v1
  x-discovery-doc-revision: '0'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/secure-source-manager
servers:
  - url: https://securesourcemanager.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListInstancesResponse:
      id: ListInstancesResponse
      type: object
      properties:
        instances:
          description: The list of instances.
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Instance:
      id: Instance
      description: A resource that represents a Secure Source Manager instance.
      type: object
      properties:
        name:
          description: >-
            Optional. A unique identifier for an instance. The name should be of
            the format:
            `projects/{project_number}/locations/{location_id}/instances/{instance_id}`
            `project_number`: Maps to a unique int64 id assigned to each
            project. `location_id`: Refers to the region where the instance will
            be deployed. Since Secure Source Manager is a regional service, it
            must be one of the valid GCP regions. `instance_id`: User provided
            name for the instance, must be unique for a project_number and
            location_id combination.
          type: string
        createTime:
          description: Output only. Create timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update timestamp.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        privateConfig:
          description: Optional. Private settings for private instance.
          $ref: '#/components/schemas/PrivateConfig'
        state:
          description: Output only. Current state of the instance.
          readOnly: true
          type: string
          enumDescriptions:
            - Not set. This should only be the case for incoming requests.
            - Instance is being created.
            - Instance is ready.
            - Instance is being deleted.
            - Instance is paused.
            - Instance is unknown, we are not sure if it's functioning.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - PAUSED
            - UNKNOWN
        stateNote:
          description: >-
            Output only. An optional field providing information about the
            current instance state.
          readOnly: true
          type: string
          enumDescriptions:
            - STATE_NOTE_UNSPECIFIED as the first value of State.
            - CMEK access is unavailable.
            - >-
              INSTANCE_RESUMING indicates that the instance was previously
              paused and is under the process of being brought back.
          enumDeprecated:
            - false
            - false
            - true
          enum:
            - STATE_NOTE_UNSPECIFIED
            - PAUSED_CMEK_UNAVAILABLE
            - INSTANCE_RESUMING
        kmsKey:
          description: >-
            Optional. Immutable. Customer-managed encryption key name, in the
            format projects/*/locations/*/keyRings/*/cryptoKeys/*.
          type: string
        hostConfig:
          description: Output only. A list of hostnames for this instance.
          readOnly: true
          $ref: '#/components/schemas/HostConfig'
        workforceIdentityFederationConfig:
          description: >-
            Optional. Configuration for Workforce Identity Federation to support
            third party identity provider. If unset, defaults to the Google OIDC
            IdP.
          $ref: '#/components/schemas/WorkforceIdentityFederationConfig'
    PrivateConfig:
      id: PrivateConfig
      description: PrivateConfig includes settings for private instance.
      type: object
      properties:
        isPrivate:
          description: Required. Immutable. Indicate if it's private instance.
          type: boolean
        caPool:
          description: >-
            Optional. Immutable. CA pool resource, resource must in the format
            of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
          type: string
        httpServiceAttachment:
          description: >-
            Output only. Service Attachment for HTTP, resource is in the format
            of
            `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
          readOnly: true
          type: string
        sshServiceAttachment:
          description: >-
            Output only. Service Attachment for SSH, resource is in the format
            of
            `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
          readOnly: true
          type: string
        pscAllowedProjects:
          description: >-
            Optional. Additional allowed projects for setting up PSC
            connections. Instance host project is automatically allowed and does
            not need to be included in this list.
          type: array
          items:
            type: string
    HostConfig:
      id: HostConfig
      description: HostConfig has different instance endpoints.
      type: object
      properties:
        html:
          description: Output only. HTML hostname.
          readOnly: true
          type: string
        api:
          description: Output only. API hostname.
          readOnly: true
          type: string
        gitHttp:
          description: Output only. Git HTTP hostname.
          readOnly: true
          type: string
        gitSsh:
          description: Output only. Git SSH hostname.
          readOnly: true
          type: string
    WorkforceIdentityFederationConfig:
      id: WorkforceIdentityFederationConfig
      description: >-
        WorkforceIdentityFederationConfig allows this instance to support users
        from external identity providers.
      type: object
      properties:
        enabled:
          description: >-
            Optional. Immutable. Whether Workforce Identity Federation is
            enabled.
          type: boolean
    ListRepositoriesResponse:
      id: ListRepositoriesResponse
      type: object
      properties:
        repositories:
          description: The list of repositories.
          type: array
          items:
            $ref: '#/components/schemas/Repository'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    Repository:
      id: Repository
      description: Metadata of a Secure Source Manager repository.
      type: object
      properties:
        name:
          description: >-
            Optional. A unique identifier for a repository. The name should be
            of the format:
            `projects/{project}/locations/{location_id}/repositories/{repository_id}`
          type: string
        description:
          description: >-
            Optional. Description of the repository, which cannot exceed 500
            characters.
          type: string
        instance:
          description: >-
            Optional. The name of the instance in which the repository is
            hosted, formatted as
            `projects/{project_number}/locations/{location_id}/instances/{instance_id}`
            When creating repository via securesourcemanager.googleapis.com,
            this field is used as input. When creating repository via
            *.sourcemanager.dev, this field is output only.
          type: string
        uid:
          description: Output only. Unique identifier of the repository.
          readOnly: true
          type: string
        createTime:
          description: Output only. Create timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update timestamp.
          readOnly: true
          type: string
          format: google-datetime
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
        uris:
          description: Output only. URIs for the repository.
          readOnly: true
          $ref: '#/components/schemas/URIs'
        initialConfig:
          description: Input only. Initial configurations for the repository.
          $ref: '#/components/schemas/InitialConfig'
    URIs:
      id: URIs
      description: URIs for the repository.
      type: object
      properties:
        html:
          description: >-
            Output only. HTML is the URI for user to view the repository in a
            browser.
          readOnly: true
          type: string
        gitHttps:
          description: Output only. git_https is the git HTTPS URI for git operations.
          readOnly: true
          type: string
        api:
          description: Output only. API is the URI for API access.
          readOnly: true
          type: string
    InitialConfig:
      id: InitialConfig
      description: Repository initialization configuration.
      type: object
      properties:
        defaultBranch:
          description: Default branch name of the repository.
          type: string
        gitignores:
          description: >-
            List of gitignore template names user can choose from. Valid values:
            actionscript, ada, agda, android, anjuta, ansible,
            appcelerator-titanium, app-engine, archives, arch-linux-packages,
            atmel-studio, autotools, backup, bazaar, bazel, bitrix, bricx-cc, c,
            cake-php, calabash, cf-wheels, chef-cookbook, clojure, cloud9,
            c-make, code-igniter, code-kit, code-sniffer, common-lisp, composer,
            concrete5, coq, cordova, cpp, craft-cms, cuda, cvs, d, dart,
            dart-editor, delphi, diff, dm, dreamweaver, dropbox, drupal,
            drupal-7, eagle, eclipse, eiffel-studio, elisp, elixir, elm, emacs,
            ensime, epi-server, erlang, esp-idf, espresso, exercism,
            expression-engine, ext-js, fancy, finale, flex-builder,
            force-dot-com, fortran, fuel-php, gcov, git-book,
            gnome-shell-extension, go, godot, gpg, gradle, grails, gwt, haskell,
            hugo, iar-ewarm, idris, igor-pro, images, infor-cms, java, jboss,
            jboss-4, jboss-6, jdeveloper, jekyll, jenkins-home, jenv,
            jet-brains, jigsaw, joomla, julia, jupyter-notebooks, kate,
            kdevelop4, kentico, ki-cad, kohana, kotlin, lab-view, laravel,
            lazarus, leiningen, lemon-stand, libre-office, lilypond, linux,
            lithium, logtalk, lua, lyx, mac-os, magento, magento-1, magento-2,
            matlab, maven, mercurial, mercury, metals, meta-programming-system,
            meteor, microsoft-office, model-sim, momentics, mono-develop, nanoc,
            net-beans, nikola, nim, ninja, node, notepad-pp, nwjs, objective--c,
            ocaml, octave, opa, open-cart, openssl, oracle-forms, otto, packer,
            patch, perl, perl6, phalcon, phoenix, pimcore, play-framework,
            plone, prestashop, processing, psoc-creator, puppet, pure-script,
            putty, python, qooxdoo, qt, r, racket, rails, raku, red, redcar,
            redis, rhodes-rhomobile, ros, ruby, rust, sam, sass, sbt, scala,
            scheme, scons, scrivener, sdcc, seam-gen, sketch-up, slick-edit,
            smalltalk, snap, splunk, stata, stella, sublime-text, sugar-crm,
            svn, swift, symfony, symphony-cms, synopsys-vcs, tags, terraform,
            tex, text-mate, textpattern, think-php, tortoise-git, turbo-gears-2,
            typo3, umbraco, unity, unreal-engine, vagrant, vim, virtual-env,
            virtuoso, visual-studio, visual-studio-code, vue, vvvv, waf,
            web-methods, windows, word-press, xcode, xilinx, xilinx-ise, xojo,
            yeoman, yii, zend-framework, zephir.
          type: array
          items:
            type: string
        license:
          description: >-
            License template name user can choose from. Valid values:
            license-0bsd, license-389-exception, aal, abstyles, adobe-2006,
            adobe-glyph, adsl, afl-1-1, afl-1-2, afl-2-0, afl-2-1, afl-3-0,
            afmparse, agpl-1-0, agpl-1-0-only, agpl-1-0-or-later, agpl-3-0-only,
            agpl-3-0-or-later, aladdin, amdplpa, aml, ampas, antlr-pd,
            antlr-pd-fallback, apache-1-0, apache-1-1, apache-2-0, apafml,
            apl-1-0, apsl-1-0, apsl-1-1, apsl-1-2, apsl-2-0, artistic-1-0,
            artistic-1-0-cl8, artistic-1-0-perl, artistic-2-0,
            autoconf-exception-2-0, autoconf-exception-3-0, bahyph, barr,
            beerware, bison-exception-2-2, bittorrent-1-0, bittorrent-1-1,
            blessing, blueoak-1-0-0, bootloader-exception, borceux,
            bsd-1-clause, bsd-2-clause, bsd-2-clause-freebsd,
            bsd-2-clause-netbsd, bsd-2-clause-patent, bsd-2-clause-views,
            bsd-3-clause, bsd-3-clause-attribution, bsd-3-clause-clear,
            bsd-3-clause-lbnl, bsd-3-clause-modification,
            bsd-3-clause-no-nuclear-license,
            bsd-3-clause-no-nuclear-license-2014,
            bsd-3-clause-no-nuclear-warranty, bsd-3-clause-open-mpi,
            bsd-4-clause, bsd-4-clause-shortened, bsd-4-clause-uc,
            bsd-protection, bsd-source-code, bsl-1-0, busl-1-1, cal-1-0,
            cal-1-0-combined-work-exception, caldera, catosl-1-1, cc0-1-0,
            cc-by-1-0, cc-by-2-0, cc-by-3-0, cc-by-3-0-at, cc-by-3-0-us,
            cc-by-4-0, cc-by-nc-1-0, cc-by-nc-2-0, cc-by-nc-3-0, cc-by-nc-4-0,
            cc-by-nc-nd-1-0, cc-by-nc-nd-2-0, cc-by-nc-nd-3-0,
            cc-by-nc-nd-3-0-igo, cc-by-nc-nd-4-0, cc-by-nc-sa-1-0,
            cc-by-nc-sa-2-0, cc-by-nc-sa-3-0, cc-by-nc-sa-4-0, cc-by-nd-1-0,
            cc-by-nd-2-0, cc-by-nd-3-0, cc-by-nd-4-0, cc-by-sa-1-0,
            cc-by-sa-2-0, cc-by-sa-2-0-uk, cc-by-sa-2-1-jp, cc-by-sa-3-0,
            cc-by-sa-3-0-at, cc-by-sa-4-0, cc-pddc, cddl-1-0, cddl-1-1,
            cdla-permissive-1-0, cdla-sharing-1-0, cecill-1-0, cecill-1-1,
            cecill-2-0, cecill-2-1, cecill-b, cecill-c, cern-ohl-1-1,
            cern-ohl-1-2, cern-ohl-p-2-0, cern-ohl-s-2-0, cern-ohl-w-2-0,
            clartistic, classpath-exception-2-0, clisp-exception-2-0,
            cnri-jython, cnri-python, cnri-python-gpl-compatible, condor-1-1,
            copyleft-next-0-3-0, copyleft-next-0-3-1, cpal-1-0, cpl-1-0,
            cpol-1-02, crossword, crystal-stacker, cua-opl-1-0, cube, c-uda-1-0,
            curl, d-fsl-1-0, diffmark, digirule-foss-exception, doc, dotseqn,
            drl-1-0, dsdp, dvipdfm, ecl-1-0, ecl-2-0, ecos-exception-2-0,
            efl-1-0, efl-2-0, egenix, entessa, epics, epl-1-0, epl-2-0,
            erlpl-1-1, etalab-2-0, eu-datagrid, eupl-1-0, eupl-1-1, eupl-1-2,
            eurosym, fair, fawkes-runtime-exception, fltk-exception,
            font-exception-2-0, frameworx-1-0, freebsd-doc, freeimage,
            freertos-exception-2-0, fsfap, fsful, fsfullr, ftl,
            gcc-exception-2-0, gcc-exception-3-1, gd, gfdl-1-1-invariants-only,
            gfdl-1-1-invariants-or-later, gfdl-1-1-no-invariants-only,
            gfdl-1-1-no-invariants-or-later, gfdl-1-1-only, gfdl-1-1-or-later,
            gfdl-1-2-invariants-only, gfdl-1-2-invariants-or-later,
            gfdl-1-2-no-invariants-only, gfdl-1-2-no-invariants-or-later,
            gfdl-1-2-only, gfdl-1-2-or-later, gfdl-1-3-invariants-only,
            gfdl-1-3-invariants-or-later, gfdl-1-3-no-invariants-only,
            gfdl-1-3-no-invariants-or-later, gfdl-1-3-only, gfdl-1-3-or-later,
            giftware, gl2ps, glide, glulxe, glwtpl, gnu-javamail-exception,
            gnuplot, gpl-1-0-only, gpl-1-0-or-later, gpl-2-0-only,
            gpl-2-0-or-later, gpl-3-0-linking-exception,
            gpl-3-0-linking-source-exception, gpl-3-0-only, gpl-3-0-or-later,
            gpl-cc-1-0, gsoap-1-3b, haskell-report, hippocratic-2-1, hpnd,
            hpnd-sell-variant, htmltidy, i2p-gpl-java-exception, ibm-pibs, icu,
            ijg, image-magick, imatix, imlib2, info-zip, intel, intel-acpi,
            interbase-1-0, ipa, ipl-1-0, isc, jasper-2-0, jpnic, json, lal-1-2,
            lal-1-3, latex2e, leptonica, lgpl-2-0-only, lgpl-2-0-or-later,
            lgpl-2-1-only, lgpl-2-1-or-later, lgpl-3-0-linking-exception,
            lgpl-3-0-only, lgpl-3-0-or-later, lgpllr, libpng, libpng-2-0,
            libselinux-1-0, libtiff, libtool-exception, liliq-p-1-1,
            liliq-r-1-1, liliq-rplus-1-1, linux-openib, linux-syscall-note,
            llvm-exception, lpl-1-0, lpl-1-02, lppl-1-0, lppl-1-1, lppl-1-2,
            lppl-1-3a, lppl-1-3c, lzma-exception, make-index, mif-exception,
            miros, mit, mit-0, mit-advertising, mit-cmu, mit-enna, mit-feh,
            mit-modern-variant, mitnfa, mit-open-group, motosoto, mpich2,
            mpl-1-0, mpl-1-1, mpl-2-0, mpl-2-0-no-copyleft-exception, ms-pl,
            ms-rl, mtll, mulanpsl-1-0, mulanpsl-2-0, multics, mup, naist-2003,
            nasa-1-3, naumen, nbpl-1-0, ncgl-uk-2-0, ncsa, netcdf, net-snmp,
            newsletr, ngpl, nist-pd, nist-pd-fallback, nlod-1-0, nlpl, nokia,
            nokia-qt-exception-1-1, nosl, noweb, npl-1-0, npl-1-1, nposl-3-0,
            nrl, ntp, ntp-0, ocaml-lgpl-linking-exception, occt-exception-1-0,
            occt-pl, oclc-2-0, odbl-1-0, odc-by-1-0, ofl-1-0, ofl-1-0-no-rfn,
            ofl-1-0-rfn, ofl-1-1, ofl-1-1-no-rfn, ofl-1-1-rfn, ogc-1-0,
            ogdl-taiwan-1-0, ogl-canada-2-0, ogl-uk-1-0, ogl-uk-2-0, ogl-uk-3-0,
            ogtsl, oldap-1-1, oldap-1-2, oldap-1-3, oldap-1-4, oldap-2-0,
            oldap-2-0-1, oldap-2-1, oldap-2-2, oldap-2-2-1, oldap-2-2-2,
            oldap-2-3, oldap-2-4, oldap-2-7, oml,
            openjdk-assembly-exception-1-0, openssl, openvpn-openssl-exception,
            opl-1-0, oset-pl-2-1, osl-1-0, osl-1-1, osl-2-0, osl-2-1, osl-3-0,
            o-uda-1-0, parity-6-0-0, parity-7-0-0, pddl-1-0, php-3-0, php-3-01,
            plexus, polyform-noncommercial-1-0-0, polyform-small-business-1-0-0,
            postgresql, psf-2-0, psfrag, ps-or-pdf-font-exception-20170817,
            psutils, python-2-0, qhull, qpl-1-0, qt-gpl-exception-1-0,
            qt-lgpl-exception-1-1, qwt-exception-1-0, rdisc, rhecos-1-1,
            rpl-1-1, rpsl-1-0, rsa-md, rscpl, ruby, saxpath, sax-pd, scea,
            sendmail, sendmail-8-23, sgi-b-1-0, sgi-b-1-1, sgi-b-2-0, shl-0-51,
            shl-2-0, shl-2-1, simpl-2-0, sissl, sissl-1-2, sleepycat, smlnj,
            smppl, snia, spencer-86, spencer-94, spencer-99, spl-1-0,
            ssh-openssh, ssh-short, sspl-1-0, sugarcrm-1-1-3, swift-exception,
            swl, tapr-ohl-1-0, tcl, tcp-wrappers, tmate, torque-1-1, tosl,
            tu-berlin-1-0, tu-berlin-2-0, u-boot-exception-2-0, ucl-1-0,
            unicode-dfs-2015, unicode-dfs-2016, unicode-tou,
            universal-foss-exception-1-0, unlicense, upl-1-0, vim, vostrom,
            vsl-1-0, w3c, w3c-19980720, w3c-20150513, watcom-1-0, wsuipa, wtfpl,
            wxwindows-exception-3-1, x11, xerox, xfree86-1-1, xinetd, xnet, xpp,
            xskat, ypl-1-0, ypl-1-1, zed, zend-2-0, zimbra-1-3, zimbra-1-4,
            zlib, zlib-acknowledgement, zpl-1-1, zpl-2-0, zpl-2-1.
          type: string
        readme:
          description: 'README template name. Valid template name(s) are: default.'
          type: string
    ListHooksResponse:
      id: ListHooksResponse
      description: ListHooksResponse is response to list hooks.
      type: object
      properties:
        hooks:
          description: The list of hooks.
          type: array
          items:
            $ref: '#/components/schemas/Hook'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    Hook:
      id: Hook
      description: Metadata of a Secure Source Manager Hook.
      type: object
      properties:
        name:
          description: >-
            Identifier. A unique identifier for a Hook. The name should be of
            the format:
            `projects/{project}/locations/{location_id}/repositories/{repository_id}/hooks/{hook_id}`
          type: string
        targetUri:
          description: Required. The target URI to which the payloads will be delivered.
          type: string
        disabled:
          description: >-
            Optional. Determines if the hook disabled or not. Set to true to
            stop sending traffic.
          type: boolean
        events:
          description: Optional. The events that trigger hook on.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified.
              - Push events are triggered when pushing to the repository.
              - >-
                Pull request events are triggered when a pull request is opened,
                closed, reopened, or edited.
            enum:
              - UNSPECIFIED
              - PUSH
              - PULL_REQUEST
        createTime:
          description: Output only. Create timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update timestamp.
          readOnly: true
          type: string
          format: google-datetime
        uid:
          description: Output only. Unique identifier of the hook.
          readOnly: true
          type: string
        pushOption:
          description: Optional. The trigger option for push events.
          $ref: '#/components/schemas/PushOption'
        sensitiveQueryString:
          description: >-
            Optional. The sensitive query string to be appended to the target
            URI.
          type: string
    PushOption:
      id: PushOption
      type: object
      properties:
        branchFilter:
          description: >-
            Optional. Trigger hook for matching branches only. Specified as glob
            pattern. If empty or *, events for all branches are reported.
            Examples: main, {main,release*}. See
            https://pkg.go.dev/github.com/gobwas/glob documentation.
          type: string
    BranchRule:
      id: BranchRule
      description: >-
        Metadata of a BranchRule. BranchRule is the protection rule to enforce
        pre-defined rules on designated branches within a repository.
      type: object
      properties:
        name:
          description: >-
            Optional. A unique identifier for a BranchRule. The name should be
            of the format:
            `projects/{project}/locations/{location}/repositories/{repository}/branchRules/{branch_rule}`
          type: string
        uid:
          description: Output only. Unique identifier of the repository.
          readOnly: true
          type: string
        createTime:
          description: Output only. Create timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update timestamp.
          readOnly: true
          type: string
          format: google-datetime
        annotations:
          description: >-
            Optional. User annotations. These attributes can only be set and
            used by the user. See https://google.aip.dev/128#annotations for
            more details such as format and size limitations.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
        includePattern:
          description: >-
            Optional. The pattern of the branch that can match to this
            BranchRule. Specified as regex. .* for all branches. Examples: main,
            (main|release.*). Current MVP phase only support `.*` for wildcard.
          type: string
        disabled:
          description: Optional. Determines if the branch rule is disabled or not.
          type: boolean
        requirePullRequest:
          description: >-
            Optional. Determines if the branch rule requires a pull request or
            not.
          type: boolean
        minimumReviewsCount:
          description: >-
            Optional. The minimum number of reviews required for the branch rule
            to be matched.
          type: integer
          format: int32
        minimumApprovalsCount:
          description: >-
            Optional. The minimum number of approvals required for the branch
            rule to be matched.
          type: integer
          format: int32
        requireCommentsResolved:
          description: >-
            Optional. Determines if require comments resolved before merging to
            the branch.
          type: boolean
        allowStaleReviews:
          description: >-
            Optional. Determines if allow stale reviews or approvals before
            merging to the branch.
          type: boolean
        requireLinearHistory:
          description: >-
            Optional. Determines if require linear history before merging to the
            branch.
          type: boolean
        requiredStatusChecks:
          description: >-
            Optional. List of required status checks before merging to the
            branch.
          type: array
          items:
            $ref: '#/components/schemas/Check'
    Check:
      id: Check
      description: Check is a type for status check.
      type: object
      properties:
        context:
          description: Required. The context of the check.
          type: string
    ListBranchRulesResponse:
      id: ListBranchRulesResponse
      description: ListBranchRulesResponse is the response to listing branchRules.
      type: object
      properties:
        branchRules:
          description: The list of branch rules.
          type: array
          items:
            $ref: '#/components/schemas/BranchRule'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    PullRequest:
      id: PullRequest
      description: >-
        Metadata of a PullRequest. PullRequest is the request from a user to
        merge a branch (head) into another branch (base).
      type: object
      properties:
        name:
          description: >-
            Output only. A unique identifier for a PullRequest. The number
            appended at the end is generated by the server. Format:
            `projects/{project}/locations/{location}/repositories/{repository}/pullRequests/{pull_request_id}`
          readOnly: true
          type: string
        title:
          description: Required. The pull request title.
          type: string
        body:
          description: >-
            Optional. The pull request body. Provides a detailed description of
            the changes.
          type: string
        base:
          description: Required. The branch to merge changes in.
          $ref: '#/components/schemas/Branch'
        head:
          description: Immutable. The branch containing the changes to be merged.
          $ref: '#/components/schemas/Branch'
        state:
          description: Output only. State of the pull request (open, closed or merged).
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - An open pull request.
            - A closed pull request.
            - A merged pull request.
          enum:
            - STATE_UNSPECIFIED
            - OPEN
            - CLOSED
            - MERGED
        createTime:
          description: Output only. Creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last updated timestamp.
          readOnly: true
          type: string
          format: google-datetime
        closeTime:
          description: >-
            Output only. Close timestamp (if closed or merged). Cleared when
            pull request is re-opened.
          readOnly: true
          type: string
          format: google-datetime
    Branch:
      id: Branch
      description: Branch represents a branch involved in a pull request.
      type: object
      properties:
        ref:
          description: Required. Name of the branch.
          type: string
        sha:
          description: Output only. The commit at the tip of the branch.
          readOnly: true
          type: string
    ListPullRequestsResponse:
      id: ListPullRequestsResponse
      description: ListPullRequestsResponse is the response to list pull requests.
      type: object
      properties:
        pullRequests:
          description: The list of pull requests.
          type: array
          items:
            $ref: '#/components/schemas/PullRequest'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    MergePullRequestRequest:
      id: MergePullRequestRequest
      description: MergePullRequestRequest is the request to merge a pull request.
      type: object
      properties: {}
    OpenPullRequestRequest:
      id: OpenPullRequestRequest
      description: OpenPullRequestRequest is the request to open a pull request.
      type: object
      properties: {}
    ClosePullRequestRequest:
      id: ClosePullRequestRequest
      description: ClosePullRequestRequest is the request to close a pull request.
      type: object
      properties: {}
    ListPullRequestFileDiffsResponse:
      id: ListPullRequestFileDiffsResponse
      description: >-
        ListPullRequestFileDiffsResponse is the response containing file diffs
        returned from ListPullRequestFileDiffs.
      type: object
      properties:
        fileDiffs:
          description: The list of pull request file diffs.
          type: array
          items:
            $ref: '#/components/schemas/FileDiff'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    FileDiff:
      id: FileDiff
      description: >-
        Metadata of a FileDiff. FileDiff represents a single file diff in a pull
        request.
      type: object
      properties:
        name:
          description: Output only. The name of the file.
          readOnly: true
          type: string
        action:
          description: >-
            Output only. The action taken on the file (eg. added, modified,
            deleted).
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - The file was added.
            - The file was modified.
            - The file was deleted.
          enum:
            - ACTION_UNSPECIFIED
            - ADDED
            - MODIFIED
            - DELETED
        sha:
          description: Output only. The commit pointing to the file changes.
          readOnly: true
          type: string
        patch:
          description: Output only. The git patch containing the file changes.
          readOnly: true
          type: string
    FetchTreeResponse:
      id: FetchTreeResponse
      description: Response message containing a list of TreeEntry objects.
      type: object
      properties:
        treeEntries:
          description: The list of TreeEntry objects.
          type: array
          items:
            $ref: '#/components/schemas/TreeEntry'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    TreeEntry:
      id: TreeEntry
      description: Represents an entry within a tree structure (like a Git tree).
      type: object
      properties:
        type:
          description: >-
            Output only. The type of the object (TREE, BLOB, COMMIT).
            Output-only.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value, indicating the object type is unspecified.
            - Represents a directory (folder).
            - Represents a file (contains file data).
            - Represents a pointer to another repository (submodule).
          enum:
            - OBJECT_TYPE_UNSPECIFIED
            - TREE
            - BLOB
            - COMMIT
        sha:
          description: >-
            Output only. The SHA-1 hash of the object (unique identifier).
            Output-only.
          readOnly: true
          type: string
        path:
          description: >-
            Output only. The path of the file or directory within the tree
            (e.g., "src/main/java/MyClass.java"). Output-only.
          readOnly: true
          type: string
        mode:
          description: >-
            Output only. The file mode as a string (e.g., "100644"). Indicates
            file type. Output-only.
          readOnly: true
          type: string
        size:
          description: >-
            Output only. The size of the object in bytes (only for blobs).
            Output-only.
          readOnly: true
          type: string
          format: int64
    FetchBlobResponse:
      id: FetchBlobResponse
      description: Response message containing the content of a blob.
      type: object
      properties:
        sha:
          description: The SHA-1 hash of the blob.
          type: string
        content:
          description: The content of the blob, encoded as base64.
          type: string
    Issue:
      id: Issue
      description: Metadata of an Issue.
      type: object
      properties:
        name:
          description: >-
            Identifier. Unique identifier for an issue. The issue id is
            generated by the server. Format:
            `projects/{project}/locations/{location}/repositories/{repository}/issues/{issue_id}`
          type: string
        title:
          description: Required. Issue title.
          type: string
        body:
          description: Optional. Issue body. Provides a detailed description of the issue.
          type: string
        state:
          description: Output only. State of the issue.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - An open issue.
            - A closed issue.
          enum:
            - STATE_UNSPECIFIED
            - OPEN
            - CLOSED
        createTime:
          description: Output only. Creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last updated timestamp.
          readOnly: true
          type: string
          format: google-datetime
        closeTime:
          description: Output only. Close timestamp (if closed). Cleared when is re-opened.
          readOnly: true
          type: string
          format: google-datetime
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
    ListIssuesResponse:
      id: ListIssuesResponse
      description: The response to list issues.
      type: object
      properties:
        issues:
          description: The list of issues.
          type: array
          items:
            $ref: '#/components/schemas/Issue'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    OpenIssueRequest:
      id: OpenIssueRequest
      description: The request to open an issue.
      type: object
      properties:
        etag:
          description: >-
            Optional. The current etag of the issue. If the etag is provided and
            does not match the current etag of the issue, opening will be
            blocked and an ABORTED error will be returned.
          type: string
    CloseIssueRequest:
      id: CloseIssueRequest
      description: The request to close an issue.
      type: object
      properties:
        etag:
          description: >-
            Optional. The current etag of the issue. If the etag is provided and
            does not match the current etag of the issue, closing will be
            blocked and an ABORTED error will be returned.
          type: string
    PullRequestComment:
      id: PullRequestComment
      description: PullRequestComment represents a comment on a pull request.
      type: object
      properties:
        name:
          description: >-
            Identifier. Unique identifier for the pull request comment. The
            comment id is generated by the server. Format:
            `projects/{project}/locations/{location}/repositories/{repository}/pullRequests/{pull_request}/pullRequestComments/{comment_id}`
          type: string
        createTime:
          description: Output only. Creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last updated timestamp.
          readOnly: true
          type: string
          format: google-datetime
        review:
          description: Optional. The review summary comment.
          $ref: '#/components/schemas/Review'
        comment:
          description: Optional. The general pull request comment.
          $ref: '#/components/schemas/Comment'
        code:
          description: Optional. The comment on a code line.
          $ref: '#/components/schemas/Code'
    Review:
      id: Review
      description: The review summary comment.
      type: object
      properties:
        actionType:
          description: Required. The review action type.
          type: string
          enumDescriptions:
            - Unspecified.
            - A general review comment.
            - Change required from this review.
            - Change approved from this review.
          enum:
            - ACTION_TYPE_UNSPECIFIED
            - COMMENT
            - CHANGE_REQUESTED
            - APPROVED
        body:
          description: Optional. The comment body.
          type: string
        effectiveCommitSha:
          description: Output only. The effective commit sha this review is pointing to.
          readOnly: true
          type: string
    Comment:
      id: Comment
      description: The general pull request comment.
      type: object
      properties:
        body:
          description: Required. The comment body.
          type: string
    Code:
      id: Code
      description: The comment on a code line.
      type: object
      properties:
        body:
          description: Required. The comment body.
          type: string
        reply:
          description: >-
            Optional. Input only. The PullRequestComment resource name that this
            comment is replying to.
          type: string
        position:
          description: Optional. The position of the comment.
          $ref: '#/components/schemas/Position'
        effectiveRootComment:
          description: >-
            Output only. The root comment of the conversation, derived from the
            reply field.
          readOnly: true
          type: string
        resolved:
          description: Output only. Boolean indicator if the comment is resolved.
          readOnly: true
          type: boolean
        effectiveCommitSha:
          description: >-
            Output only. The effective commit sha this code comment is pointing
            to.
          readOnly: true
          type: string
    Position:
      id: Position
      description: The position of the code comment.
      type: object
      properties:
        path:
          description: Required. The path of the file.
          type: string
        line:
          description: >-
            Required. The line number of the comment. Positive value means it's
            on the new side of the diff, negative value means it's on the old
            side.
          type: string
          format: int64
    ListPullRequestCommentsResponse:
      id: ListPullRequestCommentsResponse
      description: The response to list pull request comments.
      type: object
      properties:
        pullRequestComments:
          description: The list of pull request comments.
          type: array
          items:
            $ref: '#/components/schemas/PullRequestComment'
        nextPageToken:
          description: >-
            A token to set as page_token to retrieve the next page. If this
            field is omitted, there are no subsequent pages.
          type: string
    BatchCreatePullRequestCommentsRequest:
      id: BatchCreatePullRequestCommentsRequest
      description: The request to batch create pull request comments.
      type: object
      properties:
        requests:
          description: >-
            Required. The request message specifying the resources to create.
            There should be exactly one CreatePullRequestCommentRequest with
            CommentDetail being REVIEW in the list, and no more than 100
            CreatePullRequestCommentRequests with CommentDetail being CODE in
            the list
          type: array
          items:
            $ref: '#/components/schemas/CreatePullRequestCommentRequest'
    CreatePullRequestCommentRequest:
      id: CreatePullRequestCommentRequest
      description: The request to create a pull request comment.
      type: object
      properties:
        parent:
          description: >-
            Required. The pull request in which to create the pull request
            comment. Format:
            `projects/{project_number}/locations/{location_id}/repositories/{repository_id}/pullRequests/{pull_request_id}`
          type: string
        pullRequestComment:
          description: Required. The pull request comment to create.
          $ref: '#/components/schemas/PullRequestComment'
    ResolvePullRequestCommentsRequest:
      id: ResolvePullRequestCommentsRequest
      description: The request to resolve multiple pull request comments.
      type: object
      properties:
        names:
          description: >-
            Required. The names of the pull request comments to resolve. Format:
            `projects/{project_number}/locations/{location_id}/repositories/{repository_id}/pullRequests/{pull_request_id}/pullRequestComments/{comment_id}`
            Only comments from the same threads are allowed in the same request.
          type: array
          items:
            type: string
        autoFill:
          description: >-
            Optional. If set, at least one comment in a thread is required, rest
            of the comments in the same thread will be automatically updated to
            resolved. If unset, all comments in the same thread need be present.
          type: boolean
    UnresolvePullRequestCommentsRequest:
      id: UnresolvePullRequestCommentsRequest
      description: The request to unresolve multiple pull request comments.
      type: object
      properties:
        names:
          description: >-
            Required. The names of the pull request comments to unresolve.
            Format:
            `projects/{project_number}/locations/{location_id}/repositories/{repository_id}/pullRequests/{pull_request_id}/pullRequestComments/{comment_id}`
            Only comments from the same threads are allowed in the same request.
          type: array
          items:
            type: string
        autoFill:
          description: >-
            Optional. If set, at least one comment in a thread is required, rest
            of the comments in the same thread will be automatically updated to
            unresolved. If unset, all comments in the same thread need be
            present.
          type: boolean
    IssueComment:
      id: IssueComment
      description: IssueComment represents a comment on an issue.
      type: object
      properties:
        name:
          description: >-
            Identifier. Unique identifier for an issue comment. The comment id
            is generated by the server. Format:
            `projects/{project}/locations/{location}/repositories/{repository}/issues/{issue}/issueComments/{comment_id}`
          type: string
        body:
          description: Required. The comment body.
          type: string
        createTime:
          description: Output only. Creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last updated timestamp.
          readOnly: true
          type: string
          format: google-datetime
    ListIssueCommentsResponse:
      id: ListIssueCommentsResponse
      description: The response to list issue comments.
      type: object
      properties:
        issueComments:
          description: The list of issue comments.
          type: array
          items:
            $ref: '#/components/schemas/IssueComment'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    BatchCreatePullRequestCommentsResponse:
      id: BatchCreatePullRequestCommentsResponse
      description: The response to batch create pull request comments.
      type: object
      properties:
        pullRequestComments:
          description: The list of pull request comments created.
          type: array
          items:
            $ref: '#/components/schemas/PullRequestComment'
    ResolvePullRequestCommentsResponse:
      id: ResolvePullRequestCommentsResponse
      description: The response to resolve multiple pull request comments.
      type: object
      properties:
        pullRequestComments:
          description: The list of pull request comments resolved.
          type: array
          items:
            $ref: '#/components/schemas/PullRequestComment'
    UnresolvePullRequestCommentsResponse:
      id: UnresolvePullRequestCommentsResponse
      description: The response to unresolve multiple pull request comments.
      type: object
      properties:
        pullRequestComments:
          description: The list of pull request comments unresolved.
          type: array
          items:
            $ref: '#/components/schemas/PullRequestComment'
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.securesourcemanager.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    instances_iam_policies:
      id: google.securesourcemanager.instances_iam_policies
      name: instances_iam_policies
      title: Instances_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/instances_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/instances_iam_policies/methods/set_iam_policy
        delete: []
    instances:
      id: google.securesourcemanager.instances
      name: instances
      title: Instances
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    operations:
      id: google.securesourcemanager.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    repositories:
      id: google.securesourcemanager.repositories
      name: repositories
      title: Repositories
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.repositories
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/get'
          - $ref: '#/components/x-stackQL-resources/repositories/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/delete'
    repositories_iam_policies:
      id: google.securesourcemanager.repositories_iam_policies
      name: repositories_iam_policies
      title: Repositories_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/repositories_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/repositories_iam_policies/methods/set_iam_policy
        delete: []
    repositories_tree:
      id: google.securesourcemanager.repositories_tree
      name: repositories_tree
      title: Repositories_tree
      methods:
        fetch_tree:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:fetchTree/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/repositories_tree/methods/fetch_tree
        insert: []
        update: []
        replace: []
        delete: []
    repositories_blob:
      id: google.securesourcemanager.repositories_blob
      name: repositories_blob
      title: Repositories_blob
      methods:
        fetch_blob:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}:fetchBlob/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/repositories_blob/methods/fetch_blob
        insert: []
        update: []
        replace: []
        delete: []
    hooks:
      id: google.securesourcemanager.hooks
      name: hooks
      title: Hooks
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1hooks/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.hooks
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1hooks/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1hooks~1{hooksId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1hooks~1{hooksId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1hooks~1{hooksId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hooks/methods/get'
          - $ref: '#/components/x-stackQL-resources/hooks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/hooks/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/hooks/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hooks/methods/delete'
    branch_rules:
      id: google.securesourcemanager.branch_rules
      name: branch_rules
      title: Branch_rules
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1branchRules/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1branchRules/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.branchRules
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1branchRules~1{branchRulesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1branchRules~1{branchRulesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1branchRules~1{branchRulesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/branch_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/branch_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/branch_rules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/branch_rules/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/branch_rules/methods/delete'
    pull_requests:
      id: google.securesourcemanager.pull_requests
      name: pull_requests
      title: Pull_requests
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.pullRequests
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        merge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}:merge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        open:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}:open/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        close:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}:close/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pull_requests/methods/get'
          - $ref: '#/components/x-stackQL-resources/pull_requests/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pull_requests/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/pull_requests/methods/patch'
        replace: []
        delete: []
    pull_requests_file_diffs:
      id: google.securesourcemanager.pull_requests_file_diffs
      name: pull_requests_file_diffs
      title: Pull_requests_file_diffs
      methods:
        list_file_diffs:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}:listFileDiffs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.fileDiffs
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/pull_requests_file_diffs/methods/list_file_diffs
        insert: []
        update: []
        replace: []
        delete: []
    pull_request_comments:
      id: google.securesourcemanager.pull_request_comments
      name: pull_request_comments
      title: Pull_request_comments
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}~1pullRequestComments~1{pullRequestCommentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}~1pullRequestComments~1{pullRequestCommentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}~1pullRequestComments~1{pullRequestCommentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}~1pullRequestComments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.pullRequestComments
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}~1pullRequestComments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}~1pullRequestComments:batchCreate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resolve:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}~1pullRequestComments:resolve/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unresolve:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1pullRequests~1{pullRequestsId}~1pullRequestComments:unresolve/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pull_request_comments/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/pull_request_comments/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/pull_request_comments/methods/create
          - $ref: >-
              #/components/x-stackQL-resources/pull_request_comments/methods/batch_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/pull_request_comments/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/pull_request_comments/methods/delete
    issues:
      id: google.securesourcemanager.issues
      name: issues
      title: Issues
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.issues
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues~1{issuesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues~1{issuesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues~1{issuesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        open:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues~1{issuesId}:open/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        close:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues~1{issuesId}:close/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issues/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/issues/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    issue_comments:
      id: google.securesourcemanager.issue_comments
      name: issue_comments
      title: Issue_comments
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues~1{issuesId}~1issueComments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues~1{issuesId}~1issueComments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.issueComments
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues~1{issuesId}~1issueComments~1{issueCommentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues~1{issuesId}~1issueComments~1{issueCommentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1repositories~1{repositoriesId}~1issues~1{issuesId}~1issueComments~1{issueCommentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_comments/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_comments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_comments/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/issue_comments/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_comments/methods/delete'
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: securesourcemanager.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: securesourcemanager.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: securesourcemanager.projects.locations.instances.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: securesourcemanager.projects.locations.instances.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: securesourcemanager.projects.locations.instances.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances:
    parameters: *ref_1
    get:
      description: Lists Instances in a given project and location.
      operationId: securesourcemanager.projects.locations.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new instance in a given project and location.
      operationId: securesourcemanager.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single instance.
      operationId: securesourcemanager.projects.locations.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single instance.
      operationId: securesourcemanager.projects.locations.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: securesourcemanager.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: securesourcemanager.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: securesourcemanager.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: securesourcemanager.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories:
    parameters: *ref_1
    get:
      description: >-
        Lists Repositories in a given project and location. The instance field
        is required in the query parameter for requests using the
        securesourcemanager.googleapis.com endpoint.
      operationId: securesourcemanager.projects.locations.repositories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: instance
          schema:
            type: string
    post:
      description: >-
        Creates a new repository in a given project and location. The
        Repository.Instance field is required in the request body for requests
        using the securesourcemanager.googleapis.com endpoint.
      operationId: securesourcemanager.projects.locations.repositories.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: repositoryId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:
    parameters: *ref_1
    get:
      description: Gets metadata of a repository.
      operationId: securesourcemanager.projects.locations.repositories.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the metadata of a repository.
      operationId: securesourcemanager.projects.locations.repositories.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a Repository.
      operationId: securesourcemanager.projects.locations.repositories.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Get IAM policy for a repository.
      operationId: securesourcemanager.projects.locations.repositories.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Set IAM policy on a repository.
      operationId: securesourcemanager.projects.locations.repositories.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Test IAM permissions on a repository. IAM permission checks are not
        required on this method.
      operationId: securesourcemanager.projects.locations.repositories.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:fetchTree:
    parameters: *ref_1
    get:
      description: Fetches a tree from a repository.
      operationId: securesourcemanager.projects.locations.repositories.fetchTree
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchTreeResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: ref
          schema:
            type: string
        - in: query
          name: recursive
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:fetchBlob:
    parameters: *ref_1
    get:
      description: Fetches a blob from a repository.
      operationId: securesourcemanager.projects.locations.repositories.fetchBlob
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchBlobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: sha
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/hooks:
    parameters: *ref_1
    get:
      description: Lists hooks in a given repository.
      operationId: securesourcemanager.projects.locations.repositories.hooks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHooksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new hook in a given repository.
      operationId: securesourcemanager.projects.locations.repositories.hooks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hook'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: hookId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/hooks/{hooksId}:
    parameters: *ref_1
    get:
      description: Gets metadata of a hook.
      operationId: securesourcemanager.projects.locations.repositories.hooks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: hooksId
          required: true
          schema:
            type: string
    patch:
      description: Updates the metadata of a hook.
      operationId: securesourcemanager.projects.locations.repositories.hooks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hook'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: hooksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a Hook.
      operationId: securesourcemanager.projects.locations.repositories.hooks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: hooksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/branchRules:
    parameters: *ref_1
    post:
      description: CreateBranchRule creates a branch rule in a given repository.
      operationId: securesourcemanager.projects.locations.repositories.branchRules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchRule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: branchRuleId
          schema:
            type: string
    get:
      description: ListBranchRules lists branch rules in a given repository.
      operationId: securesourcemanager.projects.locations.repositories.branchRules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBranchRulesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/branchRules/{branchRulesId}:
    parameters: *ref_1
    get:
      description: GetBranchRule gets a branch rule.
      operationId: securesourcemanager.projects.locations.repositories.branchRules.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchRule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: branchRulesId
          required: true
          schema:
            type: string
    patch:
      description: UpdateBranchRule updates a branch rule.
      operationId: securesourcemanager.projects.locations.repositories.branchRules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchRule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: branchRulesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: DeleteBranchRule deletes a branch rule.
      operationId: securesourcemanager.projects.locations.repositories.branchRules.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: branchRulesId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests:
    parameters: *ref_1
    post:
      description: Creates a pull request.
      operationId: securesourcemanager.projects.locations.repositories.pullRequests.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
    get:
      description: Lists pull requests in a repository.
      operationId: securesourcemanager.projects.locations.repositories.pullRequests.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPullRequestsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests/{pullRequestsId}:
    parameters: *ref_1
    get:
      description: Gets a pull request.
      operationId: securesourcemanager.projects.locations.repositories.pullRequests.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequest'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a pull request.
      operationId: securesourcemanager.projects.locations.repositories.pullRequests.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests/{pullRequestsId}:merge:
    parameters: *ref_1
    post:
      description: Merges a pull request.
      operationId: securesourcemanager.projects.locations.repositories.pullRequests.merge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergePullRequestRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests/{pullRequestsId}:open:
    parameters: *ref_1
    post:
      description: Opens a pull request.
      operationId: securesourcemanager.projects.locations.repositories.pullRequests.open
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenPullRequestRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests/{pullRequestsId}:close:
    parameters: *ref_1
    post:
      description: Closes a pull request without merging.
      operationId: securesourcemanager.projects.locations.repositories.pullRequests.close
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosePullRequestRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests/{pullRequestsId}:listFileDiffs:
    parameters: *ref_1
    get:
      description: Lists a pull request's file diffs.
      operationId: >-
        securesourcemanager.projects.locations.repositories.pullRequests.listFileDiffs
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPullRequestFileDiffsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests/{pullRequestsId}/pullRequestComments/{pullRequestCommentsId}:
    parameters: *ref_1
    get:
      description: Gets a pull request comment.
      operationId: >-
        securesourcemanager.projects.locations.repositories.pullRequests.pullRequestComments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequestComment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestCommentsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a pull request comment.
      operationId: >-
        securesourcemanager.projects.locations.repositories.pullRequests.pullRequestComments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequestComment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestCommentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a pull request comment.
      operationId: >-
        securesourcemanager.projects.locations.repositories.pullRequests.pullRequestComments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestCommentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests/{pullRequestsId}/pullRequestComments:
    parameters: *ref_1
    get:
      description: Lists pull request comments.
      operationId: >-
        securesourcemanager.projects.locations.repositories.pullRequests.pullRequestComments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPullRequestCommentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates a pull request comment. This function is used to create a single
        PullRequestComment of type Comment, or a single PullRequestComment of
        type Code that's replying to another PullRequestComment of type Code.
        Use BatchCreatePullRequestComments to create multiple
        PullRequestComments for code reviews.
      operationId: >-
        securesourcemanager.projects.locations.repositories.pullRequests.pullRequestComments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequestComment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests/{pullRequestsId}/pullRequestComments:batchCreate:
    parameters: *ref_1
    post:
      description: >-
        Batch creates pull request comments. This function is used to create
        multiple PullRequestComments for code review. There needs to be exactly
        one PullRequestComment of type Review, and at most 100
        PullRequestComments of type Code per request. The Position of the code
        comments must be unique within the request.
      operationId: >-
        securesourcemanager.projects.locations.repositories.pullRequests.pullRequestComments.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreatePullRequestCommentsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests/{pullRequestsId}/pullRequestComments:resolve:
    parameters: *ref_1
    post:
      description: >-
        Resolves pull request comments. A list of PullRequestComment names must
        be provided. The PullRequestComment names must be in the same
        conversation thread. If auto_fill is set, all comments in the
        conversation thread will be resolved.
      operationId: >-
        securesourcemanager.projects.locations.repositories.pullRequests.pullRequestComments.resolve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolvePullRequestCommentsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pullRequests/{pullRequestsId}/pullRequestComments:unresolve:
    parameters: *ref_1
    post:
      description: >-
        Unresolves pull request comments. A list of PullRequestComment names
        must be provided. The PullRequestComment names must be in the same
        conversation thread. If auto_fill is set, all comments in the
        conversation thread will be unresolved.
      operationId: >-
        securesourcemanager.projects.locations.repositories.pullRequests.pullRequestComments.unresolve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnresolvePullRequestCommentsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: pullRequestsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/issues:
    parameters: *ref_1
    post:
      description: Creates an issue.
      operationId: securesourcemanager.projects.locations.repositories.issues.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Issue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
    get:
      description: Lists issues in a repository.
      operationId: securesourcemanager.projects.locations.repositories.issues.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIssuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/issues/{issuesId}:
    parameters: *ref_1
    get:
      description: Gets an issue.
      operationId: securesourcemanager.projects.locations.repositories.issues.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a issue.
      operationId: securesourcemanager.projects.locations.repositories.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Issue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an issue.
      operationId: securesourcemanager.projects.locations.repositories.issues.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/issues/{issuesId}:open:
    parameters: *ref_1
    post:
      description: Opens an issue.
      operationId: securesourcemanager.projects.locations.repositories.issues.open
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenIssueRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/issues/{issuesId}:close:
    parameters: *ref_1
    post:
      description: Closes an issue.
      operationId: securesourcemanager.projects.locations.repositories.issues.close
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseIssueRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/issues/{issuesId}/issueComments:
    parameters: *ref_1
    post:
      description: Creates an issue comment.
      operationId: >-
        securesourcemanager.projects.locations.repositories.issues.issueComments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueComment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
    get:
      description: Lists comments in an issue.
      operationId: >-
        securesourcemanager.projects.locations.repositories.issues.issueComments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIssueCommentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/issues/{issuesId}/issueComments/{issueCommentsId}:
    parameters: *ref_1
    get:
      description: Gets an issue comment.
      operationId: >-
        securesourcemanager.projects.locations.repositories.issues.issueComments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueComment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: path
          name: issueCommentsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an issue comment.
      operationId: >-
        securesourcemanager.projects.locations.repositories.issues.issueComments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueComment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: path
          name: issueCommentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an issue comment.
      operationId: >-
        securesourcemanager.projects.locations.repositories.issues.issueComments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: path
          name: issueCommentsId
          required: true
          schema:
            type: string
