openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Pub/Sub Lite API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230818'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/pubsub/lite/docs'
servers:
  - url: 'https://pubsublite.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ComputeTimeCursorResponse:
      type: object
      description: Response containing the cursor corresponding to a publish or event time in a topic partition.
      properties:
        cursor:
          description: 'If present, the cursor references the first message with time greater than or equal to the specified target time. If such a message cannot be found, the cursor will be unset (i.e. `cursor` is not present).'
          $ref: '#/components/schemas/Cursor'
      id: ComputeTimeCursorResponse
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      id: Status
      properties:
        code:
          format: int32
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
    ListSubscriptionsResponse:
      type: object
      id: ListSubscriptionsResponse
      description: Response for ListSubscriptions.
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
          description: The list of subscriptions in the requested parent. The order of the subscriptions is unspecified.
        nextPageToken:
          type: string
          description: 'A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.'
    ExportConfig:
      properties:
        currentState:
          description: 'Output only. The current state of the export, which may be different to the desired state due to errors. This field is output only.'
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
            - PERMISSION_DENIED
            - NOT_FOUND
          enumDescriptions:
            - Default value. This value is unused.
            - Messages are being exported.
            - Exporting messages is suspended.
            - Messages cannot be exported due to permission denied errors. Output only.
            - Messages cannot be exported due to missing resources. Output only.
          type: string
          readOnly: true
        deadLetterTopic:
          type: string
          description: 'Optional. The name of an optional Pub/Sub Lite topic to publish messages that can not be exported to the destination. For example, the message can not be published to the Pub/Sub service because it does not satisfy the constraints documented at https://cloud.google.com/pubsub/docs/publisher. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}. Must be within the same project and location as the subscription. The topic may be changed or removed.'
        desiredState:
          type: string
          description: The desired state of this export. Setting this to values other than `ACTIVE` and `PAUSED` will result in an error.
          enumDescriptions:
            - Default value. This value is unused.
            - Messages are being exported.
            - Exporting messages is suspended.
            - Messages cannot be exported due to permission denied errors. Output only.
            - Messages cannot be exported due to missing resources. Output only.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
            - PERMISSION_DENIED
            - NOT_FOUND
        pubsubConfig:
          description: Messages are automatically written from the Pub/Sub Lite topic associated with this subscription to a Pub/Sub topic.
          $ref: '#/components/schemas/PubSubConfig'
      id: ExportConfig
      description: Configuration for a Pub/Sub Lite subscription that writes messages to a destination. User subscriber clients must not connect to this subscription.
      type: object
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
      id: Empty
    ReservationConfig:
      type: object
      description: The settings for this topic's Reservation usage.
      properties:
        throughputReservation:
          description: 'The Reservation to use for this topic''s throughput capacity. Structured like: projects/{project_number}/locations/{location}/reservations/{reservation_id}'
          type: string
      id: ReservationConfig
    CommitCursorRequest:
      description: Request for CommitCursor.
      type: object
      id: CommitCursorRequest
      properties:
        cursor:
          description: The new value for the committed cursor.
          $ref: '#/components/schemas/Cursor'
        partition:
          format: int64
          description: 'The partition for which to update the cursor. Partitions are zero indexed, so `partition` must be in the range [0, topic.num_partitions).'
          type: string
    ComputeHeadCursorResponse:
      type: object
      description: Response containing the head cursor for the requested topic and partition.
      id: ComputeHeadCursorResponse
      properties:
        headCursor:
          $ref: '#/components/schemas/Cursor'
          description: The head cursor.
    ComputeHeadCursorRequest:
      type: object
      id: ComputeHeadCursorRequest
      description: Compute the current head cursor for a partition.
      properties:
        partition:
          description: Required. The partition for which we should compute the head cursor.
          format: int64
          type: string
    ListTopicSubscriptionsResponse:
      description: Response for ListTopicSubscriptions.
      properties:
        subscriptions:
          items:
            type: string
          type: array
          description: The names of subscriptions attached to the topic. The order of the subscriptions is unspecified.
        nextPageToken:
          description: 'A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.'
          type: string
      type: object
      id: ListTopicSubscriptionsResponse
    ComputeMessageStatsRequest:
      id: ComputeMessageStatsRequest
      properties:
        partition:
          description: Required. The partition for which we should compute message stats.
          format: int64
          type: string
        endCursor:
          $ref: '#/components/schemas/Cursor'
          description: The exclusive end of the range. The range is empty if end_cursor <= start_cursor. Specifying a start_cursor before the first message and an end_cursor after the last message will retrieve all messages.
        startCursor:
          description: The inclusive start of the range.
          $ref: '#/components/schemas/Cursor'
      description: Compute statistics about a range of messages in a given topic and partition.
      type: object
    SeekSubscriptionResponse:
      id: SeekSubscriptionResponse
      description: Response for SeekSubscription long running operation.
      type: object
      properties: {}
    PubSubConfig:
      id: PubSubConfig
      type: object
      description: Configuration for exporting to a Pub/Sub topic.
      properties:
        topic:
          description: 'The name of the Pub/Sub topic. Structured like: projects/{project_number}/topics/{topic_id}. The topic may be changed.'
          type: string
    Subscription:
      properties:
        topic:
          type: string
          description: 'The name of the topic this subscription is attached to. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}'
        deliveryConfig:
          description: The settings for this subscription's message delivery.
          $ref: '#/components/schemas/DeliveryConfig'
        name:
          description: 'The name of the subscription. Structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}'
          type: string
        exportConfig:
          $ref: '#/components/schemas/ExportConfig'
          description: 'If present, messages are automatically written from the Pub/Sub Lite topic associated with this subscription to a destination.'
      description: Metadata about a subscription resource.
      type: object
      id: Subscription
    CancelOperationRequest:
      properties: {}
      description: The request message for Operations.CancelOperation.
      type: object
      id: CancelOperationRequest
    Capacity:
      description: The throughput capacity configuration for each partition.
      id: Capacity
      type: object
      properties:
        subscribeMibPerSec:
          format: int32
          description: Subscribe throughput capacity per partition in MiB/s. Must be >= 4 and <= 32.
          type: integer
        publishMibPerSec:
          description: Publish throughput capacity per partition in MiB/s. Must be >= 4 and <= 16.
          type: integer
          format: int32
    TimeTarget:
      id: TimeTarget
      type: object
      properties:
        eventTime:
          type: string
          format: google-datetime
          description: 'Request the cursor of the first message with event time greater than or equal to `event_time`. If messages are missing an event time, the publish time is used as a fallback. As event times are user supplied, subsequent messages may have event times less than `event_time` and should be filtered by the client, if necessary.'
        publishTime:
          format: google-datetime
          type: string
          description: Request the cursor of the first message with publish time greater than or equal to `publish_time`. All messages thereafter are guaranteed to have publish times >= `publish_time`.
      description: A target publish or event time. Can be used for seeking to or retrieving the corresponding cursor.
    Operation:
      properties:
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
    ListPartitionCursorsResponse:
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        partitionCursors:
          items:
            $ref: '#/components/schemas/PartitionCursor'
          type: array
          description: The partition cursors from this request.
      type: object
      id: ListPartitionCursorsResponse
      description: Response for ListPartitionCursors
    DeliveryConfig:
      id: DeliveryConfig
      properties:
        deliveryRequirement:
          type: string
          description: The DeliveryRequirement for this subscription.
          enumDescriptions:
            - Default value. This value is unused.
            - The server does not wait for a published message to be successfully written to storage before delivering it to subscribers.
            - 'The server will not deliver a published message to subscribers until the message has been successfully written to storage. This will result in higher end-to-end latency, but consistent delivery.'
          enum:
            - DELIVERY_REQUIREMENT_UNSPECIFIED
            - DELIVER_IMMEDIATELY
            - DELIVER_AFTER_STORED
      description: The settings for a subscription's message delivery.
      type: object
    RetentionConfig:
      id: RetentionConfig
      description: The settings for a topic's message retention.
      properties:
        period:
          format: google-duration
          description: 'How long a published message is retained. If unset, messages will be retained as long as the bytes retained for each partition is below `per_partition_bytes`.'
          type: string
        perPartitionBytes:
          format: int64
          type: string
          description: 'The provisioned storage, in bytes, per partition. If the number of bytes stored in any of the topic''s partitions grows beyond this value, older messages will be dropped to make room for newer ones, regardless of the value of `period`.'
      type: object
    Cursor:
      description: A cursor that describes the position of a message within a topic partition.
      properties:
        offset:
          type: string
          description: The offset of a message within a topic partition. Must be greater than or equal 0.
          format: int64
      type: object
      id: Cursor
    ListReservationTopicsResponse:
      description: Response for ListReservationTopics.
      type: object
      id: ListReservationTopicsResponse
      properties:
        topics:
          items:
            type: string
          type: array
          description: The names of topics attached to the reservation. The order of the topics is unspecified.
        nextPageToken:
          description: 'A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.'
          type: string
    ComputeTimeCursorRequest:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/TimeTarget'
          description: Required. The target publish or event time. Specifying a future time will return an unset cursor.
        partition:
          format: int64
          type: string
          description: Required. The partition for which we should compute the cursor.
      id: ComputeTimeCursorRequest
      description: Compute the corresponding cursor for a publish or event time in a topic partition.
    ListReservationsResponse:
      id: ListReservationsResponse
      properties:
        nextPageToken:
          type: string
          description: 'A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.'
        reservations:
          items:
            $ref: '#/components/schemas/Reservation'
          type: array
          description: The list of reservation in the requested parent. The order of the reservations is unspecified.
      description: Response for ListReservations.
      type: object
    ListTopicsResponse:
      id: ListTopicsResponse
      type: object
      properties:
        nextPageToken:
          description: 'A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.'
          type: string
        topics:
          items:
            $ref: '#/components/schemas/Topic'
          description: The list of topic in the requested parent. The order of the topics is unspecified.
          type: array
      description: Response for ListTopics.
    TopicPartitions:
      type: object
      id: TopicPartitions
      description: Response for GetTopicPartitions.
      properties:
        partitionCount:
          type: string
          format: int64
          description: The number of partitions in the topic.
    ComputeMessageStatsResponse:
      id: ComputeMessageStatsResponse
      properties:
        messageCount:
          type: string
          description: The count of messages.
          format: int64
        minimumPublishTime:
          type: string
          description: The minimum publish timestamp across these messages. Note that publish timestamps within a partition are not guaranteed to be non-decreasing. The timestamp will be unset if there are no messages.
          format: google-datetime
        minimumEventTime:
          description: 'The minimum event timestamp across these messages. For the purposes of this computation, if a message does not have an event time, we use the publish time. The timestamp will be unset if there are no messages.'
          format: google-datetime
          type: string
        messageBytes:
          description: The number of quota bytes accounted to these messages.
          type: string
          format: int64
      description: Response containing stats for messages in the requested topic and partition.
      type: object
    PartitionCursor:
      properties:
        partition:
          description: The partition this is for.
          format: int64
          type: string
        cursor:
          $ref: '#/components/schemas/Cursor'
          description: The value of the cursor.
      description: A pair of a Cursor and the partition it is for.
      type: object
      id: PartitionCursor
    Reservation:
      description: Metadata about a reservation resource.
      properties:
        name:
          type: string
          description: 'The name of the reservation. Structured like: projects/{project_number}/locations/{location}/reservations/{reservation_id}'
        throughputCapacity:
          format: int64
          description: The reserved throughput capacity. Every unit of throughput capacity is equivalent to 1 MiB/s of published messages or 2 MiB/s of subscribed messages. Any topics which are declared as using capacity from a Reservation will consume resources from this reservation instead of being charged individually.
          type: string
      id: Reservation
      type: object
    SeekSubscriptionRequest:
      type: object
      id: SeekSubscriptionRequest
      description: Request for SeekSubscription.
      properties:
        namedTarget:
          description: Seek to a named position with respect to the message backlog.
          enum:
            - NAMED_TARGET_UNSPECIFIED
            - TAIL
            - HEAD
          enumDescriptions:
            - Unspecified named target. Do not use.
            - Seek to the oldest retained message.
            - 'Seek past all recently published messages, skipping the entire message backlog.'
          type: string
        timeTarget:
          description: 'Seek to the first message whose publish or event time is greater than or equal to the specified query time. If no such message can be located, will seek to the end of the message backlog.'
          $ref: '#/components/schemas/TimeTarget'
    Topic:
      type: object
      description: Metadata about a topic resource.
      properties:
        name:
          type: string
          description: 'The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}'
        partitionConfig:
          $ref: '#/components/schemas/PartitionConfig'
          description: The settings for this topic's partitions.
        reservationConfig:
          description: The settings for this topic's Reservation usage.
          $ref: '#/components/schemas/ReservationConfig'
        retentionConfig:
          description: The settings for this topic's message retention.
          $ref: '#/components/schemas/RetentionConfig'
      id: Topic
    CommitCursorResponse:
      id: CommitCursorResponse
      type: object
      description: Response for CommitCursor.
      properties: {}
    OperationMetadata:
      description: Metadata for long running operations.
      id: OperationMetadata
      type: object
      properties:
        createTime:
          type: string
          description: The time the operation was created.
          format: google-datetime
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running. Not set if the operation has not completed.
        verb:
          description: Name of the verb executed by the operation.
          type: string
        target:
          description: 'Resource path for the target of the operation. For example, targets of seeks are subscription resources, structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}'
          type: string
    PartitionConfig:
      properties:
        capacity:
          description: The capacity configuration.
          $ref: '#/components/schemas/Capacity'
        scale:
          description: 'DEPRECATED: Use capacity instead which can express a superset of configurations. Every partition in the topic is allocated throughput equivalent to `scale` times the standard partition throughput (4 MiB/s). This is also reflected in the cost of this topic; a topic with `scale` of 2 and count of 10 is charged for 20 partitions. This value must be in the range [1,4].'
          deprecated: true
          type: integer
          format: int32
        count:
          description: 'The number of partitions in the topic. Must be at least 1. Once a topic has been created the number of partitions can be increased but not decreased. Message ordering is not guaranteed across a topic resize. For more information see https://cloud.google.com/pubsub/lite/docs/topics#scaling_capacity'
          format: int64
          type: string
      description: The settings for a topic's partitions.
      type: object
      id: PartitionConfig
  parameters:
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  x-stackQL-resources:
    subscriptions:
      id: google.pubsublite.subscriptions
      name: subscriptions
      title: Subscriptions
      methods:
        admin_projects_locations_topics_subscriptions_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1topics~1{topicsId}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.subscriptions
        _admin_projects_locations_topics_subscriptions_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1topics~1{topicsId}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_subscriptions_get:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_subscriptions_patch:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_subscriptions_delete:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_subscriptions_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.subscriptions
        _admin_projects_locations_subscriptions_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_subscriptions_create:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_subscriptions_seek:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}:seek/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cursor_projects_locations_subscriptions_commit_cursor:
          operation:
            $ref: '#/paths/~1v1~1cursor~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}:commitCursor/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/admin_projects_locations_topics_subscriptions_list'
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/admin_projects_locations_subscriptions_get'
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/admin_projects_locations_subscriptions_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/admin_projects_locations_subscriptions_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/admin_projects_locations_subscriptions_delete'
    topics:
      id: google.pubsublite.topics
      name: topics
      title: Topics
      methods:
        admin_projects_locations_topics_patch:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1topics~1{topicsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_topics_get:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1topics~1{topicsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_topics_delete:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1topics~1{topicsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_topics_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1topics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.topics
        _admin_projects_locations_topics_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1topics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_topics_create:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1topics/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_reservations_topics_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1topics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.topics
        _admin_projects_locations_reservations_topics_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1topics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        topic_stats_projects_locations_topics_compute_time_cursor:
          operation:
            $ref: '#/paths/~1v1~1topicStats~1projects~1{projectsId}~1locations~1{locationsId}~1topics~1{topicsId}:computeTimeCursor/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        topic_stats_projects_locations_topics_compute_head_cursor:
          operation:
            $ref: '#/paths/~1v1~1topicStats~1projects~1{projectsId}~1locations~1{locationsId}~1topics~1{topicsId}:computeHeadCursor/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        topic_stats_projects_locations_topics_compute_message_stats:
          operation:
            $ref: '#/paths/~1v1~1topicStats~1projects~1{projectsId}~1locations~1{locationsId}~1topics~1{topicsId}:computeMessageStats/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topics/methods/admin_projects_locations_topics_get'
          - $ref: '#/components/x-stackQL-resources/topics/methods/admin_projects_locations_reservations_topics_list'
          - $ref: '#/components/x-stackQL-resources/topics/methods/admin_projects_locations_topics_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/topics/methods/admin_projects_locations_topics_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/topics/methods/admin_projects_locations_topics_delete'
    topics_partitions:
      id: google.pubsublite.topics_partitions
      name: topics_partitions
      title: Topics Partitions
      methods:
        admin_projects_locations_topics_get_partitions:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1topics~1{topicsId}~1partitions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topics_partitions/methods/admin_projects_locations_topics_get_partitions'
        insert: []
        update: []
        delete: []
    operations:
      id: google.pubsublite.operations
      name: operations
      title: Operations
      methods:
        admin_projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _admin_projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/admin_projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/admin_projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/admin_projects_locations_operations_delete'
    reservations:
      id: google.pubsublite.reservations
      name: reservations
      title: Reservations
      methods:
        admin_projects_locations_reservations_create:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1reservations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_reservations_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1reservations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reservations
        _admin_projects_locations_reservations_list:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1reservations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_reservations_delete:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_reservations_patch:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        admin_projects_locations_reservations_get:
          operation:
            $ref: '#/paths/~1v1~1admin~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reservations/methods/admin_projects_locations_reservations_get'
          - $ref: '#/components/x-stackQL-resources/reservations/methods/admin_projects_locations_reservations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/reservations/methods/admin_projects_locations_reservations_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reservations/methods/admin_projects_locations_reservations_delete'
    cursors:
      id: google.pubsublite.cursors
      name: cursors
      title: Cursors
      methods:
        cursor_projects_locations_subscriptions_cursors_list:
          operation:
            $ref: '#/paths/~1v1~1cursor~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}~1cursors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.partitionCursors
        _cursor_projects_locations_subscriptions_cursors_list:
          operation:
            $ref: '#/paths/~1v1~1cursor~1projects~1{projectsId}~1locations~1{locationsId}~1subscriptions~1{subscriptionsId}~1cursors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cursors/methods/cursor_projects_locations_subscriptions_cursors_list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}/subscriptions':
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
    get:
      description: Lists the subscriptions attached to the specified topic.
      operationId: pubsublite.admin.projects.locations.topics.subscriptions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: admin_projects_locations_topics_subscriptions_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.subscriptions
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}':
    parameters: *ref_1
    patch:
      description: Updates properties of the specified topic.
      operationId: pubsublite.admin.projects.locations.topics.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-method: admin_projects_locations_topics_patch
      x-stackQL-verb: exec
    get:
      description: Returns the topic configuration.
      operationId: pubsublite.admin.projects.locations.topics.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-method: admin_projects_locations_topics_get
      x-stackQL-verb: select
    delete:
      description: Deletes the specified topic.
      operationId: pubsublite.admin.projects.locations.topics.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-method: admin_projects_locations_topics_delete
      x-stackQL-verb: delete
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/topics':
    parameters: *ref_1
    get:
      description: Returns the list of topics for the given project.
      operationId: pubsublite.admin.projects.locations.topics.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-method: admin_projects_locations_topics_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.topics
    post:
      description: Creates a new topic.
      operationId: pubsublite.admin.projects.locations.topics.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: topicId
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-method: admin_projects_locations_topics_create
      x-stackQL-verb: insert
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}/partitions':
    parameters: *ref_1
    get:
      description: Returns the partition information for the requested topic.
      operationId: pubsublite.admin.projects.locations.topics.getPartitions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicPartitions'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
      x-stackQL-resource: topics_partitions
      x-stackQL-method: admin_projects_locations_topics_get_partitions
      x-stackQL-verb: select
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: pubsublite.admin.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: admin_projects_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: pubsublite.admin.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: admin_projects_locations_operations_delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: pubsublite.admin.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: admin_projects_locations_operations_get
      x-stackQL-verb: select
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: pubsublite.admin.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: admin_projects_locations_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}':
    parameters: *ref_1
    get:
      description: Returns the subscription configuration.
      operationId: pubsublite.admin.projects.locations.subscriptions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: admin_projects_locations_subscriptions_get
      x-stackQL-verb: select
    patch:
      description: Updates properties of the specified subscription.
      operationId: pubsublite.admin.projects.locations.subscriptions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: admin_projects_locations_subscriptions_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes the specified subscription.
      operationId: pubsublite.admin.projects.locations.subscriptions.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: admin_projects_locations_subscriptions_delete
      x-stackQL-verb: delete
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions':
    parameters: *ref_1
    get:
      description: Returns the list of subscriptions for the given project.
      operationId: pubsublite.admin.projects.locations.subscriptions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: admin_projects_locations_subscriptions_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.subscriptions
    post:
      description: Creates a new subscription.
      operationId: pubsublite.admin.projects.locations.subscriptions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: skipBacklog
          schema:
            type: boolean
        - in: query
          name: subscriptionId
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: admin_projects_locations_subscriptions_create
      x-stackQL-verb: insert
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:seek':
    parameters: *ref_1
    post:
      description: 'Performs an out-of-band seek for a subscription to a specified target, which may be timestamps or named positions within the message backlog. Seek translates these targets to cursors for each partition and orchestrates subscribers to start consuming messages from these seek cursors. If an operation is returned, the seek has been registered and subscribers will eventually receive messages from the seek cursors (i.e. eventual consistency), as long as they are using a minimum supported client library version and not a system that tracks cursors independently of Pub/Sub Lite (e.g. Apache Beam, Dataflow, Spark). The seek operation will fail for unsupported clients. If clients would like to know when subscribers react to the seek (or not), they can poll the operation. The seek operation will succeed and complete once subscribers are ready to receive messages from the seek cursors for all partitions of the topic. This means that the seek operation will not complete until all subscribers come online. If the previous seek operation has not yet completed, it will be aborted and the new invocation of seek will supersede it.'
      operationId: pubsublite.admin.projects.locations.subscriptions.seek
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeekSubscriptionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: admin_projects_locations_subscriptions_seek
      x-stackQL-verb: exec
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/reservations':
    parameters: *ref_1
    post:
      description: Creates a new reservation.
      operationId: pubsublite.admin.projects.locations.reservations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: reservationId
          schema:
            type: string
      x-stackQL-resource: reservations
      x-stackQL-method: admin_projects_locations_reservations_create
      x-stackQL-verb: insert
    get:
      description: Returns the list of reservations for the given project.
      operationId: pubsublite.admin.projects.locations.reservations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReservationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: reservations
      x-stackQL-method: admin_projects_locations_reservations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.reservations
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}':
    parameters: *ref_1
    delete:
      description: Deletes the specified reservation.
      operationId: pubsublite.admin.projects.locations.reservations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: reservations
      x-stackQL-method: admin_projects_locations_reservations_delete
      x-stackQL-verb: delete
    patch:
      description: Updates properties of the specified reservation.
      operationId: pubsublite.admin.projects.locations.reservations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: reservations
      x-stackQL-method: admin_projects_locations_reservations_patch
      x-stackQL-verb: exec
    get:
      description: Returns the reservation configuration.
      operationId: pubsublite.admin.projects.locations.reservations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: reservations
      x-stackQL-method: admin_projects_locations_reservations_get
      x-stackQL-verb: select
  '/v1/admin/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/topics':
    parameters: *ref_1
    get:
      description: Lists the topics attached to the specified reservation.
      operationId: pubsublite.admin.projects.locations.reservations.topics.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReservationTopicsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: topics
      x-stackQL-method: admin_projects_locations_reservations_topics_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.topics
  '/v1/topicStats/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}:computeTimeCursor':
    parameters: *ref_1
    post:
      description: Compute the corresponding cursor for a publish or event time in a topic partition.
      operationId: pubsublite.topicStats.projects.locations.topics.computeTimeCursor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputeTimeCursorRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeTimeCursorResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-method: topic_stats_projects_locations_topics_compute_time_cursor
      x-stackQL-verb: exec
  '/v1/topicStats/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}:computeHeadCursor':
    parameters: *ref_1
    post:
      description: 'Compute the head cursor for the partition. The head cursor''s offset is guaranteed to be less than or equal to all messages which have not yet been acknowledged as published, and greater than the offset of any message whose publish has already been acknowledged. It is zero if there have never been messages in the partition.'
      operationId: pubsublite.topicStats.projects.locations.topics.computeHeadCursor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputeHeadCursorRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeHeadCursorResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-method: topic_stats_projects_locations_topics_compute_head_cursor
      x-stackQL-verb: exec
  '/v1/topicStats/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}:computeMessageStats':
    parameters: *ref_1
    post:
      description: Compute statistics about a range of messages in a given topic and partition.
      operationId: pubsublite.topicStats.projects.locations.topics.computeMessageStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputeMessageStatsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeMessageStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: topicsId
          required: true
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-method: topic_stats_projects_locations_topics_compute_message_stats
      x-stackQL-verb: exec
  '/v1/cursor/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}:commitCursor':
    parameters: *ref_1
    post:
      description: Updates the committed cursor.
      operationId: pubsublite.cursor.projects.locations.subscriptions.commitCursor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitCursorRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitCursorResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-method: cursor_projects_locations_subscriptions_commit_cursor
      x-stackQL-verb: exec
  '/v1/cursor/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}/cursors':
    parameters: *ref_1
    get:
      description: Returns all committed cursor information for a subscription.
      operationId: pubsublite.cursor.projects.locations.subscriptions.cursors.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPartitionCursorsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: cursors
      x-stackQL-method: cursor_projects_locations_subscriptions_cursors_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.partitionCursors
