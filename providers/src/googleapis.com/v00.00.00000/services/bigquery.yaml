openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: BigQuery API
  description: 'A data platform for customers to create, manage, share and query data.'
  version: v2
  x-discovery-doc-revision: '20230715'
  x-generated-date: '2023-08-01'
externalDocs:
  url: 'https://cloud.google.com/bigquery/'
servers:
  - url: 'https://bigquery.googleapis.com/bigquery/v2'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/bigquery.insertdata': Insert data into Google BigQuery
            'https://www.googleapis.com/auth/devstorage.read_only': View your data in Google Cloud Storage
            'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud services and see the email address of your Google Account
            'https://www.googleapis.com/auth/devstorage.full_control': Manage your data and permissions in Cloud Storage and see the email address for your Google Account
            'https://www.googleapis.com/auth/devstorage.read_write': Manage your data in Cloud Storage and see the email address of your Google Account
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/bigquery': View and manage your data in Google BigQuery and see the email address for your Google Account
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    CategoryCount:
      id: CategoryCount
      description: Represents the count of a single category within the cluster.
      properties:
        category:
          type: string
          description: The name of category.
        count:
          description: The count of training samples matching the category within the cluster.
          format: int64
          type: string
      type: object
    DoubleHparamSearchSpace:
      properties:
        candidates:
          $ref: '#/components/schemas/DoubleCandidates'
          description: Candidates of the double hyperparameter.
        range:
          $ref: '#/components/schemas/DoubleRange'
          description: Range of the double hyperparameter.
      type: object
      id: DoubleHparamSearchSpace
      description: Search space for a double hyperparameter.
    RankingMetrics:
      properties:
        normalizedDiscountedCumulativeGain:
          format: double
          description: A metric to determine the goodness of a ranking calculated from the predicted confidence by comparing it to an ideal rank measured by the original ratings.
          type: number
        meanSquaredError:
          format: double
          type: number
          description: 'Similar to the mean squared error computed in regression and explicit recommendation models except instead of computing the rating directly, the output from evaluate is computed against a preference which is 1 or 0 depending on if the rating exists or not.'
        meanAveragePrecision:
          description: Calculates a precision per user for all the items by ranking them and then averages all the precisions across all the users.
          format: double
          type: number
        averageRank:
          type: number
          description: Determines the goodness of a ranking by computing the percentile rank from the predicted confidence and dividing it by the original rank.
          format: double
      id: RankingMetrics
      type: object
      description: Evaluation metrics used by weighted-ALS models specified by feedback_type=implicit.
    BinaryClassificationMetrics:
      properties:
        positiveLabel:
          description: Label representing the positive class.
          type: string
        aggregateClassificationMetrics:
          description: Aggregate classification metrics.
          $ref: '#/components/schemas/AggregateClassificationMetrics'
        binaryConfusionMatrixList:
          items:
            $ref: '#/components/schemas/BinaryConfusionMatrix'
          description: Binary confusion matrix at multiple thresholds.
          type: array
        negativeLabel:
          description: Label representing the negative class.
          type: string
      id: BinaryClassificationMetrics
      description: Evaluation metrics for binary classification/classifier models.
      type: object
    JsonValue:
      id: JsonValue
      type: any
    Binding:
      id: Binding
      type: object
      properties:
        role:
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
          type: string
        members:
          type: array
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
      description: 'Associates `members`, or principals, with a `role`.'
    CsvOptions:
      type: object
      id: CsvOptions
      properties:
        preserveAsciiControlCharacters:
          description: '[Optional] Preserves the embedded ASCII control characters (the first 32 characters in the ASCII-table, from ''\x00'' to ''\x1F'') when loading from CSV. Only applicable to CSV, ignored for other formats.'
          type: boolean
        quote:
          description: '[Optional] The value that is used to quote data sections in a CSV file. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. The default value is a double-quote (''"''). If your data does not contain quoted sections, set the property value to an empty string. If your data contains quoted newline characters, you must also set the allowQuotedNewlines property to true.'
          type: string
          pattern: .?
          default: '"'
        null_marker:
          description: '[Optional] An custom string that will represent a NULL value in CSV import data.'
          type: string
        fieldDelimiter:
          description: '[Optional] The separator for fields in a CSV file. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. BigQuery also supports the escape sequence "\t" to specify a tab separator. The default value is a comma ('','').'
          type: string
        skipLeadingRows:
          description: '[Optional] The number of rows at the top of a CSV file that BigQuery will skip when reading the data. The default value is 0. This property is useful if you have header rows in the file that should be skipped. When autodetect is on, the behavior is the following: * skipLeadingRows unspecified - Autodetect tries to detect headers in the first row. If they are not detected, the row is read as data. Otherwise data is read starting from the second row. * skipLeadingRows is 0 - Instructs autodetect that there are no headers and data should be read starting from the first row. * skipLeadingRows = N > 0 - Autodetect skips N-1 rows and tries to detect headers in row N. If headers are not detected, row N is just skipped. Otherwise row N is used to extract column names for the detected schema.'
          type: string
          format: int64
        allowQuotedNewlines:
          type: boolean
          description: '[Optional] Indicates if BigQuery should allow quoted data sections that contain newline characters in a CSV file. The default value is false.'
        encoding:
          description: '[Optional] The character encoding of the data. The supported values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery decodes the data after the raw, binary data has been split using the values of the quote and fieldDelimiter properties.'
          type: string
        allowJaggedRows:
          description: '[Optional] Indicates if BigQuery should accept rows that are missing trailing optional columns. If true, BigQuery treats missing trailing columns as null values. If false, records with missing trailing columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false.'
          type: boolean
    ViewDefinition:
      properties:
        useExplicitColumnNames:
          type: boolean
          description: 'True if the column names are explicitly specified. For example by using the ''CREATE VIEW v(c1, c2) AS ...'' syntax. Can only be set using BigQuery''s standard SQL: https://cloud.google.com/bigquery/sql-reference/'
        userDefinedFunctionResources:
          description: Describes user-defined function resources used in the query.
          type: array
          items:
            $ref: '#/components/schemas/UserDefinedFunctionResource'
        useLegacySql:
          description: 'Specifies whether to use BigQuery''s legacy SQL for this view. The default value is true. If set to false, the view will use BigQuery''s standard SQL: https://cloud.google.com/bigquery/sql-reference/ Queries and views that reference this view must use the same flag value.'
          type: boolean
        query:
          description: '[Required] A query that BigQuery executes when the view is referenced.'
          type: string
      type: object
      id: ViewDefinition
    DataMaskingStatistics:
      properties:
        dataMaskingApplied:
          description: '[Output-only] [Preview] Whether any accessed data was protected by data masking. The actual evaluation is done by accessStats.masked_field_count > 0. Since this is only used for the discovery_doc generation purpose, as long as the type (boolean) matches, client library can leverage this. The actual evaluation of the variable is done else-where.'
          default: 'false'
          type: boolean
      id: DataMaskingStatistics
      type: object
    ConfusionMatrix:
      id: ConfusionMatrix
      description: Confusion matrix for multi-class classification models.
      properties:
        rows:
          description: One row per actual label.
          items:
            $ref: '#/components/schemas/Row'
          type: array
        confidenceThreshold:
          type: number
          description: Confidence threshold used when computing the entries of the confusion matrix.
          format: double
      type: object
    JobConfiguration:
      id: JobConfiguration
      type: object
      properties:
        extract:
          $ref: '#/components/schemas/JobConfigurationExtract'
          description: '[Pick one] Configures an extract job.'
        copy:
          $ref: '#/components/schemas/JobConfigurationTableCopy'
          description: '[Pick one] Copies a table.'
        query:
          $ref: '#/components/schemas/JobConfigurationQuery'
          description: '[Pick one] Configures a query job.'
        jobType:
          description: '[Output-only] The type of the job. Can be QUERY, LOAD, EXTRACT, COPY or UNKNOWN.'
          type: string
        load:
          description: '[Pick one] Configures a load job.'
          $ref: '#/components/schemas/JobConfigurationLoad'
        dryRun:
          description: '[Optional] If set, don''t actually run this job. A valid query will return a mostly empty response with some processing statistics, while an invalid query will return the same error it would if it wasn''t a dry run. Behavior of non-query jobs is undefined.'
          type: boolean
        jobTimeoutMs:
          description: '[Optional] Job timeout in milliseconds. If this time limit is exceeded, BigQuery may attempt to terminate the job.'
          format: int64
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'The labels associated with this job. You can use these to organize and group your jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.'
    BqmlIterationResult:
      type: object
      id: BqmlIterationResult
      properties:
        index:
          type: integer
          format: int32
          description: '[Output-only, Beta] Index of the ML training iteration, starting from zero for each training run.'
        evalLoss:
          description: '[Output-only, Beta] Eval loss computed on the eval data at the end of the iteration. The eval loss is used for early stopping to avoid overfitting. No eval loss if eval_split_method option is specified as no_split or auto_split with input data size less than 500 rows.'
          type: number
          format: double
        durationMs:
          type: string
          format: int64
          description: '[Output-only, Beta] Time taken to run the training iteration in milliseconds.'
        trainingLoss:
          description: '[Output-only, Beta] Training loss computed on the training data at the end of the iteration. The training loss function is defined by model type.'
          format: double
          type: number
        learnRate:
          type: number
          description: '[Output-only, Beta] Learning rate used for this iteration, it varies for different training iterations if learn_rate_strategy option is not constant.'
          format: double
    TableDataList:
      properties:
        totalRows:
          description: The total number of rows in the complete table.
          type: string
          format: int64
        etag:
          type: string
          description: A hash of this page of results.
        rows:
          description: Rows of results.
          items:
            $ref: '#/components/schemas/TableRow'
          type: array
        kind:
          type: string
          default: bigquery#tableDataList
          description: The resource type of the response.
        pageToken:
          type: string
          description: A token used for paging results. Providing this token instead of the startIndex parameter can help you retrieve stable results when an underlying table is changing.
      id: TableDataList
      type: object
    GlobalExplanation:
      id: GlobalExplanation
      properties:
        classLabel:
          description: Class label for this set of global explanations. Will be empty/null for binary logistic and linear regression models. Sorted alphabetically in descending order.
          type: string
        explanations:
          type: array
          description: A list of the top global explanations. Sorted by absolute value of attribution in descending order.
          items:
            $ref: '#/components/schemas/Explanation'
      type: object
      description: Global explanations containing the top most important features after training.
    QueryParameter:
      id: QueryParameter
      type: object
      properties:
        name:
          description: '[Optional] If unset, this is a positional parameter. Otherwise, should be unique within a query.'
          type: string
        parameterType:
          description: '[Required] The type of this parameter.'
          $ref: '#/components/schemas/QueryParameterType'
        parameterValue:
          $ref: '#/components/schemas/QueryParameterValue'
          description: '[Required] The value of this parameter.'
    ProjectReference:
      properties:
        projectId:
          description: '[Required] ID of the project. Can be either the numeric ID or the assigned ID of the project.'
          type: string
      type: object
      id: ProjectReference
    Policy:
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      id: Policy
      type: object
      properties:
        auditConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
          format: byte
        version:
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
    ArimaForecastingMetrics:
      id: ArimaForecastingMetrics
      description: Model evaluation metrics for ARIMA forecasting models.
      properties:
        arimaSingleModelForecastingMetrics:
          description: Repeated as there can be many metric sets (one for each model) in auto-arima and the large-scale case.
          type: array
          items:
            $ref: '#/components/schemas/ArimaSingleModelForecastingMetrics'
        nonSeasonalOrder:
          description: Non-seasonal order.
          type: array
          deprecated: true
          items:
            $ref: '#/components/schemas/ArimaOrder'
        arimaFittingMetrics:
          type: array
          deprecated: true
          items:
            $ref: '#/components/schemas/ArimaFittingMetrics'
          description: Arima model fitting metrics.
        timeSeriesId:
          items:
            type: string
          type: array
          description: Id to differentiate different time series for the large-scale case.
          deprecated: true
        hasDrift:
          items:
            type: boolean
          description: Whether Arima model fitted with drift or not. It is always false when d is not 1.
          type: array
          deprecated: true
        seasonalPeriods:
          description: Seasonal periods. Repeated because multiple periods are supported for one time series.
          type: array
          deprecated: true
          items:
            enumDescriptions:
              - Unspecified seasonal period.
              - No seasonality
              - 'Daily period, 24 hours.'
              - 'Weekly period, 7 days.'
              - 'Monthly period, 30 days or irregular.'
              - 'Quarterly period, 90 days or irregular.'
              - 'Yearly period, 365 days or irregular.'
            type: string
            enum:
              - SEASONAL_PERIOD_TYPE_UNSPECIFIED
              - NO_SEASONALITY
              - DAILY
              - WEEKLY
              - MONTHLY
              - QUARTERLY
              - YEARLY
      type: object
    MlStatistics:
      properties:
        iterationResults:
          type: array
          description: Results for all completed iterations.
          items:
            $ref: '#/components/schemas/IterationResult'
        maxIterations:
          description: Maximum number of iterations specified as max_iterations in the 'CREATE MODEL' query. The actual number of iterations may be less than this number due to early stop.
          type: string
          format: int64
      type: object
      id: MlStatistics
    RangePartitioning:
      type: object
      id: RangePartitioning
      properties:
        range:
          type: object
          properties:
            interval:
              format: int64
              type: string
              description: '[TrustedTester] [Required] The width of each interval.'
            end:
              format: int64
              type: string
              description: '[TrustedTester] [Required] The end of range partitioning, exclusive.'
            start:
              format: int64
              type: string
              description: '[TrustedTester] [Required] The start of range partitioning, inclusive.'
          description: '[TrustedTester] [Required] Defines the ranges for range partitioning.'
        field:
          description: '[TrustedTester] [Required] The table is partitioned by this field. The field must be a top-level NULLABLE/REQUIRED field. The only supported type is INTEGER/INT64.'
          type: string
    IntArray:
      description: An array of int.
      type: object
      properties:
        elements:
          description: Elements in the int array.
          items:
            type: string
            format: int64
          type: array
      id: IntArray
    SessionInfo:
      id: SessionInfo
      properties:
        sessionId:
          description: '[Output-only] // [Preview] Id of the session.'
          type: string
      type: object
    TableDataInsertAllResponse:
      properties:
        insertErrors:
          items:
            type: object
            properties:
              errors:
                items:
                  $ref: '#/components/schemas/ErrorProto'
                type: array
                description: Error information for the row indicated by the index property.
              index:
                description: The index of the row that error applies to.
                type: integer
                format: uint32
          description: An array of errors for rows that were not inserted.
          type: array
        kind:
          description: The resource type of the response.
          type: string
          default: bigquery#tableDataInsertAllResponse
      type: object
      id: TableDataInsertAllResponse
    StandardSqlTableType:
      id: StandardSqlTableType
      description: A table type
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/StandardSqlField'
          description: The columns in this table type
      type: object
    IndexUnusedReason:
      type: object
      id: IndexUnusedReason
      properties:
        code:
          description: '[Output-only] Specifies the high-level reason for the scenario when no search index was used.'
          type: string
          default: $(reason.code)
        index_name:
          description: '[Output-only] Specifies the name of the unused search index, if available.'
          default: $(reason.index_name)
          type: string
        base_table:
          $ref: '#/components/schemas/TableReference'
          description: '[Output-only] Specifies the base table involved in the reason that no search index was used.'
        message:
          description: '[Output-only] Free form human-readable reason for the scenario when no search index was used.'
          type: string
          default: $(reason.message)
    StringHparamSearchSpace:
      id: StringHparamSearchSpace
      type: object
      properties:
        candidates:
          items:
            type: string
          type: array
          description: Canididates for the string or enum parameter in lower case.
      description: Search space for string and enum.
    PrincipalComponentInfo:
      description: 'Principal component infos, used only for eigen decomposition based models, e.g., PCA. Ordered by explained_variance in the descending order.'
      type: object
      id: PrincipalComponentInfo
      properties:
        principalComponentId:
          type: string
          format: int64
          description: Id of the principal component.
        cumulativeExplainedVarianceRatio:
          description: The explained_variance is pre-ordered in the descending order to compute the cumulative explained variance ratio.
          format: double
          type: number
        explainedVarianceRatio:
          format: double
          description: Explained_variance over the total explained variance.
          type: number
        explainedVariance:
          description: 'Explained variance by this principal component, which is simply the eigenvalue.'
          format: double
          type: number
    JsonOptions:
      properties:
        encoding:
          description: '[Optional] The character encoding of the data. The supported values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is UTF-8.'
          type: string
      type: object
      id: JsonOptions
    RemoteModelInfo:
      properties:
        maxBatchingRows:
          format: int64
          readOnly: true
          type: string
          description: 'Output only. Max number of rows in each batch sent to the remote service. If unset, the number of rows in each batch is set dynamically.'
        remoteServiceType:
          readOnly: true
          description: Output only. The remote service type for remote model.
          enum:
            - REMOTE_SERVICE_TYPE_UNSPECIFIED
            - CLOUD_AI_TRANSLATE_V3
            - CLOUD_AI_VISION_V1
            - CLOUD_AI_NATURAL_LANGUAGE_V1
          enumDescriptions:
            - Unspecified remote service type.
            - 'V3 Cloud AI Translation API. See more details at [Cloud Translation API] (https://cloud.google.com/translate/docs/reference/rest).'
            - 'V1 Cloud AI Vision API See more details at [Cloud Vision API] (https://cloud.google.com/vision/docs/reference/rest).'
            - 'V1 Cloud AI Natural Language API. See more details at [REST Resource: documents](https://cloud.google.com/natural-language/docs/reference/rest/v1/documents).'
          type: string
        endpoint:
          readOnly: true
          description: Output only. The endpoint for remote model.
          type: string
        connection:
          type: string
          description: 'Output only. Fully qualified name of the user-provided connection object of the remote model. Format: ```"projects/{project_id}/locations/{location_id}/connections/{connection_id}"```'
          readOnly: true
      description: Remote Model Info
      id: RemoteModelInfo
      type: object
    CategoricalValue:
      properties:
        categoryCounts:
          items:
            $ref: '#/components/schemas/CategoryCount'
          type: array
          description: 'Counts of all categories for the categorical feature. If there are more than ten categories, we return top ten (by count) and return one more CategoryCount with category "_OTHER_" and count as aggregate counts of remaining categories.'
      type: object
      description: Representative value of a categorical feature.
      id: CategoricalValue
    TableDataInsertAllRequest:
      id: TableDataInsertAllRequest
      properties:
        kind:
          type: string
          description: The resource type of the response.
          default: bigquery#tableDataInsertAllRequest
        templateSuffix:
          type: string
          description: 'If specified, treats the destination table as a base template, and inserts the rows into an instance table named "{destination}{templateSuffix}". BigQuery will manage creation of the instance table, using the schema of the base template table. See https://cloud.google.com/bigquery/streaming-data-into-bigquery#template-tables for considerations when working with templates tables.'
        rows:
          items:
            properties:
              insertId:
                description: '[Optional] A unique ID for each row. BigQuery uses this property to detect duplicate insertion requests on a best-effort basis.'
                type: string
              json:
                $ref: '#/components/schemas/JsonObject'
                description: '[Required] A JSON object that contains a row of data. The object''s properties and values must match the destination table''s schema.'
            type: object
          description: The rows to insert.
          type: array
        skipInvalidRows:
          type: boolean
          description: '[Optional] Insert all valid rows of a request, even if invalid rows exist. The default value is false, which causes the entire request to fail if any invalid rows exist.'
        ignoreUnknownValues:
          description: '[Optional] Accept rows that contain values that do not match the schema. The unknown values are ignored. Default is false, which treats unknown values as errors.'
          type: boolean
      type: object
    RoutineReference:
      id: RoutineReference
      type: object
      properties:
        routineId:
          description: 'Required. The ID of the routine. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 256 characters.'
          type: string
        projectId:
          description: Required. The ID of the project containing this routine.
          type: string
        datasetId:
          description: Required. The ID of the dataset containing this routine.
          type: string
    JobConfigurationQuery:
      properties:
        destinationTable:
          description: '[Optional] Describes the table where the query results should be stored. If not present, a new table will be created to store the results. This property must be set for large results that exceed the maximum response size.'
          $ref: '#/components/schemas/TableReference'
        allowLargeResults:
          type: boolean
          default: 'false'
          description: '[Optional] If true and query uses legacy SQL dialect, allows the query to produce arbitrarily large result tables at a slight cost in performance. Requires destinationTable to be set. For standard SQL queries, this flag is ignored and large results are always allowed. However, you must still set destinationTable when result size exceeds the allowed maximum response size.'
        clustering:
          description: '[Beta] Clustering specification for the destination table. Must be specified with time-based partitioning, data in the table will be first partitioned and subsequently clustered.'
          $ref: '#/components/schemas/Clustering'
        defaultDataset:
          description: '[Optional] Specifies the default dataset to use for unqualified table names in the query. Note that this does not alter behavior of unqualified dataset names.'
          $ref: '#/components/schemas/DatasetReference'
        flattenResults:
          type: boolean
          description: '[Optional] If true and query uses legacy SQL dialect, flattens all nested and repeated fields in the query results. allowLargeResults must be true if this is set to false. For standard SQL queries, this flag is ignored and results are never flattened.'
          default: 'true'
        parameterMode:
          description: Standard SQL only. Set to POSITIONAL to use positional (?) query parameters or to NAMED to use named (@myparam) query parameters in this query.
          type: string
        timePartitioning:
          $ref: '#/components/schemas/TimePartitioning'
          description: Time-based partitioning specification for the destination table. Only one of timePartitioning and rangePartitioning should be specified.
        query:
          description: '[Required] SQL query text to execute. The useLegacySql field can be used to indicate whether the query uses legacy SQL or standard SQL.'
          type: string
        preserveNulls:
          description: '[Deprecated] This property is deprecated.'
          type: boolean
        maximumBytesBilled:
          description: '[Optional] Limits the bytes billed for this job. Queries that will have bytes billed beyond this limit will fail (without incurring a charge). If unspecified, this will be set to your project default.'
          type: string
          format: int64
        destinationEncryptionConfiguration:
          description: 'Custom encryption configuration (e.g., Cloud KMS keys).'
          $ref: '#/components/schemas/EncryptionConfiguration'
        userDefinedFunctionResources:
          description: Describes user-defined function resources used in the query.
          items:
            $ref: '#/components/schemas/UserDefinedFunctionResource'
          type: array
        useLegacySql:
          type: boolean
          description: 'Specifies whether to use BigQuery''s legacy SQL dialect for this query. The default value is true. If set to false, the query will use BigQuery''s standard SQL: https://cloud.google.com/bigquery/sql-reference/ When useLegacySql is set to false, the value of flattenResults is ignored; query will be run as if flattenResults is false.'
          default: 'true'
        createSession:
          description: 'If true, creates a new session, where session id will be a server generated random id. If false, runs query with an existing session_id passed in ConnectionProperty, otherwise runs query in non-session mode.'
          type: boolean
        createDisposition:
          type: string
          description: '[Optional] Specifies whether the job is allowed to create new tables. The following values are supported: CREATE_IF_NEEDED: If the table does not exist, BigQuery creates the table. CREATE_NEVER: The table must already exist. If it does not, a ''notFound'' error is returned in the job result. The default value is CREATE_IF_NEEDED. Creation, truncation and append actions occur as one atomic update upon job completion.'
        queryParameters:
          description: Query parameters for standard SQL queries.
          type: array
          items:
            $ref: '#/components/schemas/QueryParameter'
        continuous:
          description: '[Optional] Specifies whether the query should be executed as a continuous query. The default value is false.'
          type: boolean
        writeDisposition:
          description: '[Optional] Specifies the action that occurs if the destination table already exists. The following values are supported: WRITE_TRUNCATE: If the table already exists, BigQuery overwrites the table data and uses the schema from the query result. WRITE_APPEND: If the table already exists, BigQuery appends the data to the table. WRITE_EMPTY: If the table already exists and contains data, a ''duplicate'' error is returned in the job result. The default value is WRITE_EMPTY. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Creation, truncation and append actions occur as one atomic update upon job completion.'
          type: string
        maximumBillingTier:
          type: integer
          format: int32
          default: '1'
          description: '[Optional] Limits the billing tier for this job. Queries that have resource usage beyond this tier will fail (without incurring a charge). If unspecified, this will be set to your project default.'
        schemaUpdateOptions:
          type: array
          description: 'Allows the schema of the destination table to be updated as a side effect of the query job. Schema update options are supported in two cases: when writeDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination table is a partition of a table, specified by partition decorators. For normal tables, WRITE_TRUNCATE will always overwrite the schema. One or more of the following values are specified: ALLOW_FIELD_ADDITION: allow adding a nullable field to the schema. ALLOW_FIELD_RELAXATION: allow relaxing a required field in the original schema to nullable.'
          items:
            type: string
        rangePartitioning:
          $ref: '#/components/schemas/RangePartitioning'
          description: '[TrustedTester] Range partitioning specification for this table. Only one of timePartitioning and rangePartitioning should be specified.'
        useQueryCache:
          default: 'true'
          description: '[Optional] Whether to look for the result in the query cache. The query cache is a best-effort cache that will be flushed whenever tables in the query are modified. Moreover, the query cache is only available when a query does not have a destination table specified. The default value is true.'
          type: boolean
        tableDefinitions:
          additionalProperties:
            $ref: '#/components/schemas/ExternalDataConfiguration'
          description: '[Optional] If querying an external data source outside of BigQuery, describes the data format, location and other properties of the data source. By defining these properties, the data source can then be queried as if it were a standard BigQuery table.'
          type: object
        connectionProperties:
          description: Connection properties.
          items:
            $ref: '#/components/schemas/ConnectionProperty'
          type: array
        priority:
          description: '[Optional] Specifies a priority for the query. Possible values include INTERACTIVE and BATCH. The default value is INTERACTIVE.'
          type: string
      id: JobConfigurationQuery
      type: object
    ExplainQueryStep:
      properties:
        kind:
          description: Machine-readable operation type.
          type: string
        substeps:
          items:
            type: string
          description: Human-readable stage descriptions.
          type: array
      type: object
      id: ExplainQueryStep
    ArimaCoefficients:
      properties:
        movingAverageCoefficients:
          type: array
          description: 'Moving-average coefficients, an array of double.'
          items:
            type: number
            format: double
        autoRegressiveCoefficients:
          description: 'Auto-regressive coefficients, an array of double.'
          type: array
          items:
            format: double
            type: number
        interceptCoefficient:
          type: number
          format: double
          description: 'Intercept coefficient, just a double not an array.'
      type: object
      description: Arima coefficients.
      id: ArimaCoefficients
    TransformColumn:
      type: object
      id: TransformColumn
      description: Information about a single transform column.
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/StandardSqlDataType'
          description: Output only. Data type of the column after the transform.
        transformSql:
          type: string
          description: Output only. The SQL expression used in the column transform.
          readOnly: true
        name:
          type: string
          readOnly: true
          description: Output only. Name of the column.
    ScriptStatistics:
      properties:
        evaluationKind:
          type: string
          description: '[Output-only] Whether this child job was a statement or expression.'
        stackFrames:
          description: 'Stack trace showing the line/column/procedure name of each frame on the stack at the point where the current evaluation happened. The leaf frame is first, the primary script is last. Never empty.'
          items:
            $ref: '#/components/schemas/ScriptStackFrame'
          type: array
      type: object
      id: ScriptStatistics
    StandardSqlStructType:
      type: object
      id: StandardSqlStructType
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/StandardSqlField'
    TableCell:
      properties:
        v:
          type: any
      type: object
      id: TableCell
    ConnectionProperty:
      id: ConnectionProperty
      type: object
      properties:
        value:
          type: string
          description: '[Required] Value of the connection property.'
        key:
          type: string
          description: '[Required] Name of the connection property to set.'
    JobStatistics4:
      id: JobStatistics4
      type: object
      properties:
        inputBytes:
          type: string
          format: int64
          description: '[Output-only] Number of user bytes extracted into the result. This is the byte count as computed by BigQuery for billing purposes.'
        destinationUriFileCounts:
          type: array
          description: '[Output-only] Number of files per destination URI or URI pattern specified in the extract configuration. These values will be in the same order as the URIs specified in the ''destinationUris'' field.'
          items:
            format: int64
            type: string
    DestinationTableProperties:
      id: DestinationTableProperties
      properties:
        expirationTime:
          description: '[Internal] This field is for Google internal use only.'
          type: string
          format: date-time
        friendlyName:
          type: string
          description: '[Optional] The friendly name for the destination table. This will only be used if the destination table is newly created. If the table already exists and a value different than the current friendly name is provided, the job will fail.'
        labels:
          additionalProperties:
            type: string
          description: '[Optional] The labels associated with this table. You can use these to organize and group your tables. This will only be used if the destination table is newly created. If the table already exists and labels are different than the current labels are provided, the job will fail.'
          type: object
        description:
          description: '[Optional] The description for the destination table. This will only be used if the destination table is newly created. If the table already exists and a value different than the current description is provided, the job will fail.'
          type: string
      type: object
    IntHparamSearchSpace:
      id: IntHparamSearchSpace
      properties:
        range:
          description: Range of the int hyperparameter.
          $ref: '#/components/schemas/IntRange'
        candidates:
          $ref: '#/components/schemas/IntCandidates'
          description: Candidates of the int hyperparameter.
      type: object
      description: Search space for an int hyperparameter.
    QueryParameterValue:
      type: object
      properties:
        structValues:
          additionalProperties:
            $ref: '#/components/schemas/QueryParameterValue'
          type: object
          description: '[Optional] The struct field values, in order of the struct type''s declaration.'
        arrayValues:
          description: '[Optional] The array values, if this is an array type.'
          items:
            $ref: '#/components/schemas/QueryParameterValue'
          type: array
        value:
          type: string
          description: '[Optional] The value of this value, if a simple scalar type.'
      id: QueryParameterValue
    BigQueryModelTraining:
      id: BigQueryModelTraining
      type: object
      properties:
        expectedTotalIterations:
          description: '[Output-only, Beta] Expected number of iterations for the create model query job specified as num_iterations in the input query. The actual total number of iterations may be less than this number due to early stop.'
          format: int64
          type: string
        currentIteration:
          format: int32
          type: integer
          description: '[Output-only, Beta] Index of current ML training iteration. Updated during create model query job to show job progress.'
    TrainingRun:
      description: Information about a single training query run for the model.
      type: object
      properties:
        dataSplitResult:
          description: Output only. Data split result of the training run. Only set when the input data is actually split.
          readOnly: true
          $ref: '#/components/schemas/DataSplitResult'
        modelLevelGlobalExplanation:
          description: Output only. Global explanation contains the explanation of top features on the model level. Applies to both regression and classification models.
          $ref: '#/components/schemas/GlobalExplanation'
          readOnly: true
        results:
          description: 'Output only. Output of each iteration run, results.size() <= max_iterations.'
          readOnly: true
          items:
            $ref: '#/components/schemas/IterationResult'
          type: array
        evaluationMetrics:
          readOnly: true
          $ref: '#/components/schemas/EvaluationMetrics'
          description: Output only. The evaluation metrics over training/eval data that were computed at the end of training.
        startTime:
          description: Output only. The start time of this training run.
          format: google-datetime
          type: string
          readOnly: true
        vertexAiModelId:
          description: 'The model id in the [Vertex AI Model Registry](https://cloud.google.com/vertex-ai/docs/model-registry/introduction) for this training run.'
          type: string
        trainingOptions:
          readOnly: true
          $ref: '#/components/schemas/TrainingOptions'
          description: 'Output only. Options that were used for this training run, includes user specified and default options that were used.'
        classLevelGlobalExplanations:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GlobalExplanation'
          description: Output only. Global explanation contains the explanation of top features on the class level. Applies to classification models only.
        trainingStartTime:
          description: 'Output only. The start time of this training run, in milliseconds since epoch.'
          readOnly: true
          format: int64
          deprecated: true
          type: string
        vertexAiModelVersion:
          readOnly: true
          type: string
          description: 'Output only. The model version in the [Vertex AI Model Registry](https://cloud.google.com/vertex-ai/docs/model-registry/introduction) for this training run.'
      id: TrainingRun
    RowLevelSecurityStatistics:
      id: RowLevelSecurityStatistics
      type: object
      properties:
        rowLevelSecurityApplied:
          type: boolean
          description: '[Output-only] [Preview] Whether any accessed data was protected by row access policies.'
    JobStatistics:
      id: JobStatistics
      type: object
      properties:
        extract:
          $ref: '#/components/schemas/JobStatistics4'
          description: '[Output-only] Statistics for an extract job.'
        completionRatio:
          description: '[TrustedTester] [Output-only] Job progress (0.0 -> 1.0) for LOAD and EXTRACT jobs.'
          format: double
          type: number
        query:
          description: '[Output-only] Statistics for a query job.'
          $ref: '#/components/schemas/JobStatistics2'
        reservation_id:
          type: string
          description: '[Output-only] Name of the primary reservation assigned to this job. Note that this could be different than reservations reported in the reservation usage field if parent reservations were used to execute this job.'
        totalSlotMs:
          format: int64
          description: '[Output-only] Slot-milliseconds for the job.'
          type: string
        endTime:
          format: int64
          type: string
          description: '[Output-only] End time of this job, in milliseconds since the epoch. This field will be present whenever a job is in the DONE state.'
        totalBytesProcessed:
          format: int64
          description: '[Output-only] [Deprecated] Use the bytes processed in the query statistics instead.'
          type: string
        rowLevelSecurityStatistics:
          description: '[Output-only] [Preview] Statistics for row-level security. Present only for query and extract jobs.'
          $ref: '#/components/schemas/RowLevelSecurityStatistics'
        reservationUsage:
          description: '[Output-only] Job resource usage breakdown by reservation.'
          type: array
          items:
            properties:
              slotMs:
                type: string
                description: '[Output-only] Slot-milliseconds the job spent in the given reservation.'
                format: int64
              name:
                type: string
                description: '[Output-only] Reservation name or "unreserved" for on-demand resources usage.'
            type: object
        parentJobId:
          type: string
          description: '[Output-only] If this is a child job, the id of the parent.'
        dataMaskingStatistics:
          description: '[Output-only] Statistics for data masking. Present only for query and extract jobs.'
          $ref: '#/components/schemas/DataMaskingStatistics'
        quotaDeferments:
          items:
            type: string
          description: '[Output-only] Quotas which delayed this job''s start time.'
          type: array
        creationTime:
          format: int64
          description: '[Output-only] Creation time of this job, in milliseconds since the epoch. This field will be present on all jobs.'
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
          description: '[Output-only] [Preview] Information of the session if this job is part of one.'
        scriptStatistics:
          $ref: '#/components/schemas/ScriptStatistics'
          description: '[Output-only] Statistics for a child job of a script.'
        load:
          $ref: '#/components/schemas/JobStatistics3'
          description: '[Output-only] Statistics for a load job.'
        startTime:
          format: int64
          description: '[Output-only] Start time of this job, in milliseconds since the epoch. This field will be present when the job transitions from the PENDING state to either RUNNING or DONE.'
          type: string
        numChildJobs:
          format: int64
          type: string
          description: '[Output-only] Number of child jobs executed.'
        transactionInfo:
          $ref: '#/components/schemas/TransactionInfo'
          description: '[Output-only] [Alpha] Information of the multi-statement transaction if this job is part of one.'
        copy:
          description: '[Output-only] Statistics for a copy job.'
          $ref: '#/components/schemas/JobStatistics5'
    TimePartitioning:
      properties:
        requirePartitionFilter:
          type: boolean
        field:
          description: '[Beta] [Optional] If not set, the table is partitioned by pseudo column, referenced via either ''_PARTITIONTIME'' as TIMESTAMP type, or ''_PARTITIONDATE'' as DATE type. If field is specified, the table is instead partitioned by this field. The field must be a top-level TIMESTAMP or DATE field. Its mode must be NULLABLE or REQUIRED.'
          type: string
        expirationMs:
          type: string
          description: '[Optional] Number of milliseconds for which to keep the storage for partitions in the table. The storage in a partition will have an expiration time of its partition time plus this value.'
          format: int64
        type:
          description: '[Required] The supported types are DAY, HOUR, MONTH, and YEAR, which will generate one partition per day, hour, month, and year, respectively. When the type is not specified, the default behavior is DAY.'
          type: string
      id: TimePartitioning
      type: object
    SearchStatistics:
      id: SearchStatistics
      type: object
      properties:
        indexUnusedReason:
          items:
            $ref: '#/components/schemas/IndexUnusedReason'
          type: array
          description: 'When index_usage_mode is UNUSED or PARTIALLY_USED, this field explains why index was not used in all or part of the search query. If index_usage_mode is FULLLY_USED, this field is not populated.'
        indexUsageMode:
          type: string
          description: Specifies index usage mode for the query.
    BqmlTrainingRun:
      type: object
      id: BqmlTrainingRun
      properties:
        startTime:
          format: date-time
          type: string
          description: '[Output-only, Beta] Training run start time in milliseconds since the epoch.'
        trainingOptions:
          type: object
          description: '[Output-only, Beta] Training options used by this training run. These options are mutable for subsequent training runs. Default values are explicitly stored for options not specified in the input query of the first training run. For subsequent training runs, any option not explicitly specified in the input query will be copied from the previous training run.'
          properties:
            warmStart:
              type: boolean
            learnRateStrategy:
              type: string
            lineSearchInitLearnRate:
              type: number
              format: double
            learnRate:
              type: number
              format: double
            maxIteration:
              type: string
              format: int64
            minRelProgress:
              type: number
              format: double
            l1Reg:
              type: number
              format: double
            earlyStop:
              type: boolean
            l2Reg:
              type: number
              format: double
        iterationResults:
          type: array
          items:
            $ref: '#/components/schemas/BqmlIterationResult'
          description: '[Output-only, Beta] List of each iteration results.'
        state:
          description: '[Output-only, Beta] Different state applicable for a training run. IN PROGRESS: Training run is in progress. FAILED: Training run ended due to a non-retryable failure. SUCCEEDED: Training run successfully completed. CANCELLED: Training run cancelled by the user.'
          type: string
    ProjectList:
      properties:
        totalItems:
          format: int32
          type: integer
          description: The total number of projects in the list.
        etag:
          description: A hash of the page of results
          type: string
        kind:
          default: bigquery#projectList
          description: The type of list.
          type: string
        projects:
          description: Projects to which you have at least READ access.
          items:
            properties:
              friendlyName:
                description: A descriptive name for this project.
                type: string
              kind:
                default: bigquery#project
                description: The resource type.
                type: string
              id:
                type: string
                description: An opaque ID of this project.
              projectReference:
                description: A unique reference to this project.
                $ref: '#/components/schemas/ProjectReference'
              numericId:
                description: The numeric ID of this project.
                type: string
                format: uint64
            type: object
          type: array
        nextPageToken:
          type: string
          description: A token to request the next page of results.
      type: object
      id: ProjectList
    ArimaModelInfo:
      type: object
      id: ArimaModelInfo
      properties:
        timeSeriesId:
          type: string
          description: The time_series_id value for this time series. It will be one of the unique values from the time_series_id_column specified during ARIMA model training. Only present when time_series_id_column training option was used.
        timeSeriesIds:
          description: The tuple of time_series_ids identifying this time series. It will be one of the unique tuples of values present in the time_series_id_columns specified during ARIMA model training. Only present when time_series_id_columns training option was used and the order of values here are same as the order of time_series_id_columns.
          type: array
          items:
            type: string
        hasStepChanges:
          type: boolean
          description: 'If true, step_changes is a part of time series decomposition result.'
        arimaFittingMetrics:
          description: Arima fitting metrics.
          $ref: '#/components/schemas/ArimaFittingMetrics'
        seasonalPeriods:
          items:
            enumDescriptions:
              - Unspecified seasonal period.
              - No seasonality
              - 'Daily period, 24 hours.'
              - 'Weekly period, 7 days.'
              - 'Monthly period, 30 days or irregular.'
              - 'Quarterly period, 90 days or irregular.'
              - 'Yearly period, 365 days or irregular.'
            type: string
            enum:
              - SEASONAL_PERIOD_TYPE_UNSPECIFIED
              - NO_SEASONALITY
              - DAILY
              - WEEKLY
              - MONTHLY
              - QUARTERLY
              - YEARLY
          description: Seasonal periods. Repeated because multiple periods are supported for one time series.
          type: array
        hasSpikesAndDips:
          description: 'If true, spikes_and_dips is a part of time series decomposition result.'
          type: boolean
        arimaCoefficients:
          description: Arima coefficients.
          $ref: '#/components/schemas/ArimaCoefficients'
        nonSeasonalOrder:
          description: Non-seasonal order.
          $ref: '#/components/schemas/ArimaOrder'
        hasDrift:
          description: Whether Arima model fitted with drift or not. It is always false when d is not 1.
          type: boolean
        hasHolidayEffect:
          description: 'If true, holiday_effect is a part of time series decomposition result.'
          type: boolean
      description: Arima model information.
    QueryParameterType:
      type: object
      id: QueryParameterType
      properties:
        structTypes:
          type: array
          description: '[Optional] The types of the fields of this struct, in order, if this is a struct.'
          items:
            properties:
              type:
                $ref: '#/components/schemas/QueryParameterType'
                description: '[Required] The type of this field.'
              description:
                description: '[Optional] Human-oriented description of the field.'
                type: string
              name:
                type: string
                description: '[Optional] The name of this field.'
            type: object
        type:
          type: string
          description: '[Required] The top level type of this field.'
        arrayType:
          description: '[Optional] The type of the array''s elements, if this is an array.'
          $ref: '#/components/schemas/QueryParameterType'
    Dataset:
      id: Dataset
      type: object
      properties:
        defaultTableExpirationMs:
          type: string
          format: int64
          description: '[Optional] The default lifetime of all tables in the dataset, in milliseconds. The minimum value is 3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table''s expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property.'
        defaultEncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        defaultCollation:
          type: string
          description: '[Output-only] The default collation of the dataset.'
        defaultPartitionExpirationMs:
          format: int64
          type: string
          description: '[Optional] The default partition expiration for all partitioned tables in the dataset, in milliseconds. Once this property is set, all newly-created partitioned tables in the dataset will have an expirationMs property in the timePartitioning settings set to this value, and changing the value will only affect new tables, not existing ones. The storage in a partition will have an expiration time of its partition time plus this value. Setting this property overrides the use of defaultTableExpirationMs for partitioned tables: only one of defaultTableExpirationMs and defaultPartitionExpirationMs will be used for any new partitioned table. If you provide an explicit timePartitioning.expirationMs when creating or updating a partitioned table, that value takes precedence over the default partition expiration time indicated by this property.'
        friendlyName:
          type: string
          description: '[Optional] A descriptive name for the dataset.'
        isCaseInsensitive:
          type: boolean
          description: '[Optional] Indicates if table names are case insensitive in the dataset.'
        maxTimeTravelHours:
          format: int64
          description: '[Optional] Number of hours for the max time travel for all tables in the dataset.'
          type: string
        defaultRoundingMode:
          type: string
          description: '[Output-only] The default rounding mode of the dataset.'
        access:
          description: '[Optional] An array of objects that define dataset access for one or more entities. You can set this property when inserting or updating a dataset in order to control who is allowed to access the data. If unspecified at dataset creation time, BigQuery adds default dataset access for the following entities: access.specialGroup: projectReaders; access.role: READER; access.specialGroup: projectWriters; access.role: WRITER; access.specialGroup: projectOwners; access.role: OWNER; access.userByEmail: [dataset creator email]; access.role: OWNER;'
          type: array
          items:
            properties:
              domain:
                description: '[Pick one] A domain to grant access to. Any users signed in with the domain specified will be granted the specified access. Example: "example.com". Maps to IAM policy member "domain:DOMAIN".'
                type: string
              view:
                $ref: '#/components/schemas/TableReference'
                description: '[Pick one] A view from a different dataset to grant access to. Queries executed against that view will have read access to tables in this dataset. The role field is not required when this field is set. If that view is updated by any user, access to the view needs to be granted again via an update operation.'
              groupByEmail:
                description: '[Pick one] An email address of a Google Group to grant access to. Maps to IAM policy member "group:GROUP".'
                type: string
              role:
                description: '[Required] An IAM role ID that should be granted to the user, group, or domain specified in this access entry. The following legacy mappings will be applied: OWNER  roles/bigquery.dataOwner WRITER  roles/bigquery.dataEditor READER  roles/bigquery.dataViewer This field will accept any of the above formats, but will return only the legacy format. For example, if you set this field to "roles/bigquery.dataOwner", it will be returned back as "OWNER".'
                type: string
              dataset:
                description: '[Pick one] A grant authorizing all resources of a particular type in a particular dataset access to this dataset. Only views are supported for now. The role field is not required when this field is set. If that dataset is deleted and re-created, its access needs to be granted again via an update operation.'
                $ref: '#/components/schemas/DatasetAccessEntry'
              userByEmail:
                type: string
                description: '[Pick one] An email address of a user to grant access to. For example: fred@example.com. Maps to IAM policy member "user:EMAIL" or "serviceAccount:EMAIL".'
              iamMember:
                type: string
                description: '[Pick one] Some other type of member that appears in the IAM Policy but isn''t a user, group, domain, or special group.'
              specialGroup:
                description: '[Pick one] A special group to grant access to. Possible values include: projectOwners: Owners of the enclosing project. projectReaders: Readers of the enclosing project. projectWriters: Writers of the enclosing project. allAuthenticatedUsers: All authenticated BigQuery users. Maps to similarly-named IAM members.'
                type: string
              routine:
                description: '[Pick one] A routine from a different dataset to grant access to. Queries executed against that routine will have read access to views/tables/routines in this dataset. Only UDF is supported for now. The role field is not required when this field is set. If that routine is updated by any user, access to the routine needs to be granted again via an update operation.'
                $ref: '#/components/schemas/RoutineReference'
            type: object
        labels:
          description: The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See Creating and Updating Dataset Labels for more information.
          additionalProperties:
            type: string
          type: object
        location:
          type: string
          description: 'The geographic location where the dataset should reside. The default value is US. See details at https://cloud.google.com/bigquery/docs/locations.'
        selfLink:
          type: string
          description: '[Output-only] A URL that can be used to access the resource again. You can use this URL in Get or Update requests to the resource.'
        storageBillingModel:
          description: '[Optional] Storage billing model to be used for all tables in the dataset. Can be set to PHYSICAL. Default is LOGICAL.'
          type: string
        tags:
          items:
            type: object
            properties:
              tagKey:
                description: '[Required] The namespaced friendly name of the tag key, e.g. "12345/environment" where 12345 is org id.'
                type: string
              tagValue:
                description: '[Required] Friendly short name of the tag value, e.g. "production".'
                type: string
          type: array
          description: '[Optional]The tags associated with this dataset. Tag keys are globally unique.'
        lastModifiedTime:
          type: string
          description: '[Output-only] The date when this dataset or any of its tables was last modified, in milliseconds since the epoch.'
          format: int64
        kind:
          default: bigquery#dataset
          type: string
          description: '[Output-only] The resource type.'
        creationTime:
          type: string
          description: '[Output-only] The time when this dataset was created, in milliseconds since the epoch.'
          format: int64
        datasetReference:
          description: '[Required] A reference that identifies the dataset.'
          $ref: '#/components/schemas/DatasetReference'
        id:
          type: string
          description: '[Output-only] The fully-qualified unique name of the dataset in the format projectId:datasetId. The dataset name without the project name is given in the datasetId field. When creating a new dataset, leave this field blank, and instead specify the datasetId field.'
        etag:
          type: string
          description: '[Output-only] A hash of the resource.'
        description:
          type: string
          description: '[Optional] A user-friendly description of the dataset.'
        satisfiesPzs:
          type: boolean
          description: '[Output-only] Reserved for future use.'
    GetQueryResultsResponse:
      properties:
        jobReference:
          description: 'Reference to the BigQuery Job that was created to run the query. This field will be present even if the original request timed out, in which case GetQueryResults can be used to read the results once the query has completed. Since this API only returns the first page of results, subsequent pages can be fetched via the same mechanism (GetQueryResults).'
          $ref: '#/components/schemas/JobReference'
        kind:
          default: bigquery#getQueryResultsResponse
          type: string
          description: The resource type of the response.
        schema:
          $ref: '#/components/schemas/TableSchema'
          description: The schema of the results. Present only when the query completes successfully.
        etag:
          type: string
          description: A hash of this response.
        rows:
          items:
            $ref: '#/components/schemas/TableRow'
          description: 'An object with as many results as can be contained within the maximum permitted reply size. To get any additional rows, you can call GetQueryResults and specify the jobReference returned above. Present only when the query completes successfully.'
          type: array
        jobComplete:
          description: 'Whether the query has completed or not. If rows or totalRows are present, this will always be true. If this is false, totalRows will not be available.'
          type: boolean
        totalRows:
          type: string
          format: uint64
          description: 'The total number of rows in the complete query result set, which can be more than the number of rows in this single page of results. Present only when the query completes successfully.'
        pageToken:
          type: string
          description: A token used for paging results.
        numDmlAffectedRows:
          description: '[Output-only] The number of rows affected by a DML statement. Present only for DML statements INSERT, UPDATE or DELETE.'
          type: string
          format: int64
        cacheHit:
          type: boolean
          description: Whether the query result was fetched from the query cache.
        errors:
          description: '[Output-only] The first errors or warnings encountered during the running of the job. The final message includes the number of errors that caused the process to stop. Errors here do not necessarily mean that the job has completed or was unsuccessful.'
          items:
            $ref: '#/components/schemas/ErrorProto'
          type: array
        totalBytesProcessed:
          format: int64
          description: The total number of bytes processed for this query.
          type: string
      id: GetQueryResultsResponse
      type: object
    HivePartitioningOptions:
      type: object
      properties:
        requirePartitionFilter:
          type: boolean
          description: '[Optional] If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified. Note that this field should only be true when creating a permanent external table or querying a temporary external table. Hive-partitioned loads with requirePartitionFilter explicitly set to true will fail.'
        sourceUriPrefix:
          type: string
          description: '[Optional] When hive partition detection is requested, a common prefix for all source uris should be supplied. The prefix must end immediately before the partition key encoding begins. For example, consider files following this data layout. gs://bucket/path_to_table/dt=2019-01-01/country=BR/id=7/file.avro gs://bucket/path_to_table/dt=2018-12-31/country=CA/id=3/file.avro When hive partitioning is requested with either AUTO or STRINGS detection, the common prefix can be either of gs://bucket/path_to_table or gs://bucket/path_to_table/ (trailing slash does not matter).'
        fields:
          type: array
          items:
            type: string
          description: '[Output-only] For permanent external tables, this field is populated with the hive partition keys in the order they were inferred. The types of the partition keys can be deduced by checking the table schema (which will include the partition keys). Not every API will populate this field in the output. For example, Tables.Get will populate it, but Tables.List will not contain this field.'
        mode:
          description: '[Optional] When set, what mode of hive partitioning to use when reading data. The following modes are supported. (1) AUTO: automatically infer partition key name(s) and type(s). (2) STRINGS: automatically infer partition key name(s). All types are interpreted as strings. (3) CUSTOM: partition key schema is encoded in the source URI prefix. Not all storage formats support hive partitioning. Requesting hive partitioning on an unsupported format will lead to an error. Currently supported types include: AVRO, CSV, JSON, ORC and Parquet.'
          type: string
      id: HivePartitioningOptions
    DoubleCandidates:
      type: object
      id: DoubleCandidates
      description: Discrete candidates of a double hyperparameter.
      properties:
        candidates:
          items:
            type: number
            format: double
          type: array
          description: Candidates for the double parameter in increasing order.
    BigtableColumn:
      id: BigtableColumn
      properties:
        qualifierEncoded:
          description: '[Required] Qualifier of the column. Columns in the parent column family that has this exact qualifier are exposed as . field. If the qualifier is valid UTF-8 string, it can be specified in the qualifier_string field. Otherwise, a base-64 encoded value must be set to qualifier_encoded. The column field name is the same as the column qualifier. However, if the qualifier is not a valid BigQuery field identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid identifier must be provided as field_name.'
          format: byte
          type: string
        fieldName:
          description: '[Optional] If the qualifier is not a valid BigQuery field identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid identifier must be provided as the column field name and is used as field name in queries.'
          type: string
        qualifierString:
          type: string
        type:
          type: string
          description: '[Optional] The type to convert the value in cells of this column. The values are expected to be encoded using HBase Bytes.toBytes function when using the BINARY encoding value. Following BigQuery types are allowed (case-sensitive) - BYTES STRING INTEGER FLOAT BOOLEAN Default type is BYTES. ''type'' can also be set at the column family level. However, the setting at this level takes precedence if ''type'' is set at both levels.'
        onlyReadLatest:
          type: boolean
          description: '[Optional] If this is set, only the latest version of value in this column are exposed. ''onlyReadLatest'' can also be set at the column family level. However, the setting at this level takes precedence if ''onlyReadLatest'' is set at both levels.'
        encoding:
          description: '[Optional] The encoding of the values when the type is not STRING. Acceptable encoding values are: TEXT - indicates values are alphanumeric text strings. BINARY - indicates values are encoded using HBase Bytes.toBytes family of functions. ''encoding'' can also be set at the column family level. However, the setting at this level takes precedence if ''encoding'' is set at both levels.'
          type: string
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      properties:
        requestedPolicyVersion:
          description: 'Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
      id: GetPolicyOptions
      type: object
    Row:
      properties:
        actualLabel:
          description: The original label of this row.
          type: string
        entries:
          items:
            $ref: '#/components/schemas/Entry'
          type: array
          description: Info describing predicted label distribution.
      type: object
      description: A single row in the confusion matrix.
      id: Row
    JobStatistics2:
      properties:
        referencedTables:
          description: '[Output only] Referenced tables for the job. Queries that reference more than 50 tables will not have a complete list.'
          items:
            $ref: '#/components/schemas/TableReference'
          type: array
        timeline:
          items:
            $ref: '#/components/schemas/QueryTimelineSample'
          type: array
          description: '[Output only] [Beta] Describes a timeline of job execution.'
        totalPartitionsProcessed:
          format: int64
          description: '[Output only] Total number of partitions processed from all partitioned tables referenced in the job.'
          type: string
        totalSlotMs:
          type: string
          format: int64
          description: '[Output only] Slot-milliseconds for the job.'
        mlStatistics:
          $ref: '#/components/schemas/MlStatistics'
          description: '[Output only] Statistics of a BigQuery ML training job.'
        referencedRoutines:
          description: '[Output only] Referenced routines (persistent user-defined functions and stored procedures) for the job.'
          type: array
          items:
            $ref: '#/components/schemas/RoutineReference'
        modelTrainingExpectedTotalIteration:
          format: int64
          description: '[Output only, Beta] Deprecated; do not use.'
          type: string
        estimatedBytesProcessed:
          type: string
          description: '[Output only] The original estimate of bytes processed for the job.'
          format: int64
        modelTraining:
          description: '[Output only, Beta] Information about create model query job progress.'
          $ref: '#/components/schemas/BigQueryModelTraining'
        schema:
          description: '[Output only] The schema of the results. Present only for successful dry run of non-legacy SQL queries.'
          $ref: '#/components/schemas/TableSchema'
        cacheHit:
          type: boolean
          description: '[Output only] Whether the query result was fetched from the query cache.'
        transferredBytes:
          format: int64
          description: '[Output-only] Total bytes transferred for cross-cloud queries such as Cross Cloud Transfer and CREATE TABLE AS SELECT (CTAS).'
          type: string
        searchStatistics:
          description: '[Output only] Search query specific statistics.'
          $ref: '#/components/schemas/SearchStatistics'
        ddlTargetRowAccessPolicy:
          description: '[Output only] [Preview] The DDL target row access policy. Present only for CREATE/DROP ROW ACCESS POLICY queries.'
          $ref: '#/components/schemas/RowAccessPolicyReference'
        statementType:
          type: string
          description: 'The type of query statement, if valid. Possible values (new values might be added in the future): "SELECT": SELECT query. "INSERT": INSERT query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language. "UPDATE": UPDATE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language. "DELETE": DELETE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language. "MERGE": MERGE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language. "ALTER_TABLE": ALTER TABLE query. "ALTER_VIEW": ALTER VIEW query. "ASSERT": ASSERT condition AS ''description''. "CREATE_FUNCTION": CREATE FUNCTION query. "CREATE_MODEL": CREATE [OR REPLACE] MODEL ... AS SELECT ... . "CREATE_PROCEDURE": CREATE PROCEDURE query. "CREATE_TABLE": CREATE [OR REPLACE] TABLE without AS SELECT. "CREATE_TABLE_AS_SELECT": CREATE [OR REPLACE] TABLE ... AS SELECT ... . "CREATE_VIEW": CREATE [OR REPLACE] VIEW ... AS SELECT ... . "DROP_FUNCTION" : DROP FUNCTION query. "DROP_PROCEDURE": DROP PROCEDURE query. "DROP_TABLE": DROP TABLE query. "DROP_VIEW": DROP VIEW query.'
        ddlDestinationTable:
          $ref: '#/components/schemas/TableReference'
          description: '[Output only] The DDL destination table. Present only for ALTER TABLE RENAME TO queries. Note that ddl_target_table is used just for its type information.'
        numDmlAffectedRows:
          format: int64
          type: string
          description: '[Output only] The number of rows affected by a DML statement. Present only for DML statements INSERT, UPDATE or DELETE.'
        biEngineStatistics:
          description: 'BI Engine specific Statistics. [Output only] BI Engine specific Statistics.'
          $ref: '#/components/schemas/BiEngineStatistics'
        sparkStatistics:
          description: '[Output only] Statistics of a Spark procedure job.'
          $ref: '#/components/schemas/SparkStatistics'
        ddlTargetTable:
          $ref: '#/components/schemas/TableReference'
          description: '[Output only] The DDL target table. Present only for CREATE/DROP TABLE/VIEW and DROP ALL ROW ACCESS POLICIES queries.'
        totalBytesProcessedAccuracy:
          type: string
          description: '[Output only] For dry-run jobs, totalBytesProcessed is an estimate and this field specifies the accuracy of the estimate. Possible values can be: UNKNOWN: accuracy of the estimate is unknown. PRECISE: estimate is precise. LOWER_BOUND: estimate is lower bound of what the query would cost. UPPER_BOUND: estimate is upper bound of what the query would cost.'
        modelTrainingCurrentIteration:
          type: integer
          description: '[Output only, Beta] Deprecated; do not use.'
          format: int32
        queryPlan:
          items:
            $ref: '#/components/schemas/ExplainQueryStage'
          description: '[Output only] Describes execution plan for the query.'
          type: array
        totalBytesBilled:
          format: int64
          type: string
          description: '[Output only] Total bytes billed for the job.'
        ddlOperationPerformed:
          type: string
          description: 'The DDL operation performed, possibly dependent on the pre-existence of the DDL target. Possible values (new values might be added in the future): "CREATE": The query created the DDL target. "SKIP": No-op. Example cases: the query is CREATE TABLE IF NOT EXISTS while the table already exists, or the query is DROP TABLE IF EXISTS while the table does not exist. "REPLACE": The query replaced the DDL target. Example case: the query is CREATE OR REPLACE TABLE, and the table already exists. "DROP": The query deleted the DDL target.'
        dmlStats:
          description: '[Output only] Detailed statistics for DML statements Present only for DML statements INSERT, UPDATE, DELETE or TRUNCATE.'
          $ref: '#/components/schemas/DmlStatistics'
        reservationUsage:
          type: array
          description: '[Output only] Job resource usage breakdown by reservation.'
          items:
            properties:
              slotMs:
                format: int64
                type: string
                description: '[Output only] Slot-milliseconds the job spent in the given reservation.'
              name:
                description: '[Output only] Reservation name or "unreserved" for on-demand resources usage.'
                type: string
            type: object
        totalBytesProcessed:
          description: '[Output only] Total bytes processed for the job.'
          format: int64
          type: string
        billingTier:
          type: integer
          description: '[Output only] Billing tier for the job.'
          format: int32
        ddlTargetDataset:
          $ref: '#/components/schemas/DatasetReference'
          description: '[Output only] The DDL target dataset. Present only for CREATE/ALTER/DROP SCHEMA queries.'
        ddlAffectedRowAccessPolicyCount:
          format: int64
          type: string
          description: '[Output only] [Preview] The number of row access policies affected by a DDL statement. Present only for DROP ALL ROW ACCESS POLICIES queries.'
        undeclaredQueryParameters:
          description: 'Standard SQL only: list of undeclared query parameters detected during a dry run validation.'
          type: array
          items:
            $ref: '#/components/schemas/QueryParameter'
        ddlTargetRoutine:
          $ref: '#/components/schemas/RoutineReference'
          description: The DDL target routine. Present only for CREATE/DROP FUNCTION/PROCEDURE queries.
      type: object
      id: JobStatistics2
    IntCandidates:
      properties:
        candidates:
          type: array
          description: Candidates for the int parameter in increasing order.
          items:
            type: string
            format: int64
      description: Discrete candidates of an int hyperparameter.
      type: object
      id: IntCandidates
    LocationMetadata:
      id: LocationMetadata
      properties:
        legacyLocationId:
          type: string
          description: 'The legacy BigQuery location ID, e.g. “EU” for the “europe” location. This is for any API consumers that need the legacy “US” and “EU” locations.'
      type: object
      description: BigQuery-specific metadata about a location. This will be set on google.cloud.location.Location.metadata in Cloud Location API responses.
    DatasetAccessEntry:
      id: DatasetAccessEntry
      properties:
        dataset:
          description: '[Required] The dataset this entry applies to.'
          $ref: '#/components/schemas/DatasetReference'
        targetTypes:
          items:
            type: string
            enum:
              - TARGET_TYPE_UNSPECIFIED
              - VIEWS
              - ROUTINES
            enumDescriptions:
              - Do not use. You must set a target type explicitly.
              - This entry applies to views in the dataset.
              - This entry applies to routines in the dataset.
          type: array
      type: object
    DmlStatistics:
      properties:
        deletedRowCount:
          type: string
          description: 'Number of deleted Rows. populated by DML DELETE, MERGE and TRUNCATE statements.'
          format: int64
        insertedRowCount:
          description: Number of inserted Rows. Populated by DML INSERT and MERGE statements.
          type: string
          format: int64
        updatedRowCount:
          format: int64
          type: string
          description: Number of updated Rows. Populated by DML UPDATE and MERGE statements.
      id: DmlStatistics
      type: object
    DimensionalityReductionMetrics:
      type: object
      description: Model evaluation metrics for dimensionality reduction models.
      properties:
        totalExplainedVarianceRatio:
          format: double
          description: Total percentage of variance explained by the selected principal components.
          type: number
      id: DimensionalityReductionMetrics
    EncryptionConfiguration:
      id: EncryptionConfiguration
      properties:
        kmsKeyName:
          type: string
          description: Optional. Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key.
      type: object
    GoogleSheetsOptions:
      properties:
        skipLeadingRows:
          format: int64
          description: '[Optional] The number of rows at the top of a sheet that BigQuery will skip when reading the data. The default value is 0. This property is useful if you have header rows that should be skipped. When autodetect is on, behavior is the following: * skipLeadingRows unspecified - Autodetect tries to detect headers in the first row. If they are not detected, the row is read as data. Otherwise data is read starting from the second row. * skipLeadingRows is 0 - Instructs autodetect that there are no headers and data should be read starting from the first row. * skipLeadingRows = N > 0 - Autodetect skips N-1 rows and tries to detect headers in row N. If headers are not detected, row N is just skipped. Otherwise row N is used to extract column names for the detected schema.'
          type: string
        range:
          type: string
          description: '[Optional] Range of a sheet to query from. Only used when non-empty. Typical format: sheet_name!top_left_cell_id:bottom_right_cell_id For example: sheet1!A1:B20'
      type: object
      id: GoogleSheetsOptions
    Entry:
      id: Entry
      description: A single entry in the confusion matrix.
      properties:
        predictedLabel:
          description: 'The predicted label. For confidence_threshold > 0, we will also add an entry indicating the number of items under the confidence threshold.'
          type: string
        itemCount:
          format: int64
          type: string
          description: Number of items being predicted as this label.
      type: object
    ListRowAccessPoliciesResponse:
      properties:
        nextPageToken:
          type: string
          description: A token to request the next page of results.
        rowAccessPolicies:
          items:
            $ref: '#/components/schemas/RowAccessPolicy'
          type: array
          description: Row access policies on the requested table.
      id: ListRowAccessPoliciesResponse
      description: Response message for the ListRowAccessPolicies method.
      type: object
    TableSchema:
      properties:
        fields:
          description: Describes the fields in a table.
          items:
            $ref: '#/components/schemas/TableFieldSchema'
          type: array
      id: TableSchema
      type: object
    StandardSqlDataType:
      properties:
        typeKind:
          description: 'Required. The top level type of this field. Can be any GoogleSQL data type (e.g., "INT64", "DATE", "ARRAY").'
          type: string
          enumDescriptions:
            - Invalid type.
            - Encoded as a string in decimal format.
            - Encoded as a boolean "false" or "true".
            - 'Encoded as a number, or string "NaN", "Infinity" or "-Infinity".'
            - Encoded as a string value.
            - 'Encoded as a base64 string per RFC 4648, section 4.'
            - 'Encoded as an RFC 3339 timestamp with mandatory "Z" time zone string: 1985-04-12T23:20:50.52Z'
            - 'Encoded as RFC 3339 full-date format string: 1985-04-12'
            - 'Encoded as RFC 3339 partial-time format string: 23:20:50.52'
            - 'Encoded as RFC 3339 full-date "T" partial-time: 1985-04-12T23:20:50.52'
            - 'Encoded as fully qualified 3 part: 0-5 15 2:30:45.6'
            - Encoded as WKT
            - Encoded as a decimal string.
            - Encoded as a decimal string.
            - Encoded as a string.
            - Encoded as a list with types matching Type.array_type.
            - 'Encoded as a list with fields of type Type.struct_type[i]. List is used because a JSON object cannot have duplicate field names.'
          enum:
            - TYPE_KIND_UNSPECIFIED
            - INT64
            - BOOL
            - FLOAT64
            - STRING
            - BYTES
            - TIMESTAMP
            - DATE
            - TIME
            - DATETIME
            - INTERVAL
            - GEOGRAPHY
            - NUMERIC
            - BIGNUMERIC
            - JSON
            - ARRAY
            - STRUCT
        structType:
          description: 'The fields of this struct, in order, if type_kind = "STRUCT".'
          $ref: '#/components/schemas/StandardSqlStructType'
        arrayElementType:
          $ref: '#/components/schemas/StandardSqlDataType'
          description: 'The type of the array''s elements, if type_kind = "ARRAY".'
      type: object
      id: StandardSqlDataType
      description: 'The data type of a variable such as a function argument. Examples include: * INT64: `{"typeKind": "INT64"}` * ARRAY: { "typeKind": "ARRAY", "arrayElementType": {"typeKind": "STRING"} } * STRUCT>: { "typeKind": "STRUCT", "structType": { "fields": [ { "name": "x", "type": {"typeKind": "STRING"} }, { "name": "y", "type": { "typeKind": "ARRAY", "arrayElementType": {"typeKind": "DATE"} } } ] } }'
    SparkLoggingInfo:
      type: object
      id: SparkLoggingInfo
      properties:
        project_id:
          description: '[Output-only] Project ID used for logging'
          type: string
        resource_type:
          description: '[Output-only] Resource type used for logging'
          type: string
    JobConfigurationLoad:
      type: object
      id: JobConfigurationLoad
      properties:
        parquetOptions:
          $ref: '#/components/schemas/ParquetOptions'
          description: '[Optional] Options to configure parquet support.'
        sourceUris:
          items:
            type: string
          description: '[Required] The fully-qualified URIs that point to your data in Google Cloud. For Google Cloud Storage URIs: Each URI can contain one ''*'' wildcard character and it must come after the ''bucket'' name. Size limits related to load jobs apply to external data sources. For Google Cloud Bigtable URIs: Exactly one URI can be specified and it has be a fully specified and valid HTTPS URL for a Google Cloud Bigtable table. For Google Cloud Datastore backups: Exactly one URI can be specified. Also, the ''*'' wildcard character is not allowed.'
          type: array
        decimalTargetTypes:
          type: array
          description: '[Optional] Defines the list of possible SQL data types to which the source decimal values are converted. This list and the precision and the scale parameters of the decimal field determine the target type. In the order of NUMERIC, BIGNUMERIC, and STRING, a type is picked if it is in the specified list and if it supports the precision and the scale. STRING supports all precision and scale values. If none of the listed types supports the precision and the scale, the type supporting the widest range in the specified list is picked, and if a value exceeds the supported range when reading the data, an error will be thrown. Example: Suppose the value of this field is ["NUMERIC", "BIGNUMERIC"]. If (precision,scale) is: (38,9) -> NUMERIC; (39,9) -> BIGNUMERIC (NUMERIC cannot hold 30 integer digits); (38,10) -> BIGNUMERIC (NUMERIC cannot hold 10 fractional digits); (76,38) -> BIGNUMERIC; (77,38) -> BIGNUMERIC (error if value exeeds supported range). This field cannot contain duplicate types. The order of the types in this field is ignored. For example, ["BIGNUMERIC", "NUMERIC"] is the same as ["NUMERIC", "BIGNUMERIC"] and NUMERIC always takes precedence over BIGNUMERIC. Defaults to ["NUMERIC", "STRING"] for ORC and ["NUMERIC"] for the other file formats.'
          items:
            type: string
        schemaInline:
          description: '[Deprecated] The inline schema. For CSV schemas, specify as "Field1:Type1[,Field2:Type2]*". For example, "foo:STRING, bar:INTEGER, baz:FLOAT".'
          type: string
        fieldDelimiter:
          type: string
          description: '[Optional] The separator for fields in a CSV file. The separator can be any ISO-8859-1 single-byte character. To use a character in the range 128-255, you must encode the character as UTF8. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. BigQuery also supports the escape sequence "\t" to specify a tab separator. The default value is a comma ('','').'
        sourceFormat:
          type: string
          description: '[Optional] The format of the data files. For CSV files, specify "CSV". For datastore backups, specify "DATASTORE_BACKUP". For newline-delimited JSON, specify "NEWLINE_DELIMITED_JSON". For Avro, specify "AVRO". For parquet, specify "PARQUET". For orc, specify "ORC". The default value is CSV.'
        autodetect:
          description: '[Optional] Indicates if we should automatically infer the options and schema for CSV and JSON sources.'
          type: boolean
        maxBadRecords:
          description: '[Optional] The maximum number of bad records that BigQuery can ignore when running the job. If the number of bad records exceeds this value, an invalid error is returned in the job result. This is only valid for CSV and JSON. The default value is 0, which requires that all records are valid.'
          type: integer
          format: int32
        fileSetSpecType:
          type: string
          description: '[Optional] Specifies how source URIs are interpreted for constructing the file set to load. By default source URIs are expanded against the underlying storage. Other options include specifying manifest files. Only applicable to object storage systems.'
        createSession:
          type: boolean
          description: 'If true, creates a new session, where session id will be a server generated random id. If false, runs query with an existing session_id passed in ConnectionProperty, otherwise runs the load job in non-session mode.'
        preserveAsciiControlCharacters:
          type: boolean
          description: '[Optional] Preserves the embedded ASCII control characters (the first 32 characters in the ASCII-table, from ''\x00'' to ''\x1F'') when loading from CSV. Only applicable to CSV, ignored for other formats.'
        rangePartitioning:
          description: '[TrustedTester] Range partitioning specification for this table. Only one of timePartitioning and rangePartitioning should be specified.'
          $ref: '#/components/schemas/RangePartitioning'
        schemaInlineFormat:
          description: '[Deprecated] The format of the schemaInline property.'
          type: string
        ignoreUnknownValues:
          type: boolean
          description: '[Optional] Indicates if BigQuery should allow extra values that are not represented in the table schema. If true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false. The sourceFormat property determines what BigQuery treats as an extra value: CSV: Trailing columns JSON: Named values that don''t match any column names'
        nullMarker:
          type: string
          description: '[Optional] Specifies a string that represents a null value in a CSV file. For example, if you specify "\N", BigQuery interprets "\N" as a null value when loading a CSV file. The default value is the empty string. If you set this property to a custom value, BigQuery throws an error if an empty string is present for all data types except for STRING and BYTE. For STRING and BYTE columns, BigQuery interprets the empty string as an empty value.'
        encoding:
          type: string
          description: '[Optional] The character encoding of the data. The supported values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery decodes the data after the raw, binary data has been split using the values of the quote and fieldDelimiter properties.'
        allowJaggedRows:
          type: boolean
          description: '[Optional] Accept rows that are missing trailing optional columns. The missing values are treated as nulls. If false, records with missing trailing columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false. Only applicable to CSV, ignored for other formats.'
        quote:
          pattern: .?
          default: '"'
          type: string
          description: '[Optional] The value that is used to quote data sections in a CSV file. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. The default value is a double-quote (''"''). If your data does not contain quoted sections, set the property value to an empty string. If your data contains quoted newline characters, you must also set the allowQuotedNewlines property to true.'
        referenceFileSchemaUri:
          description: 'User provided referencing file with the expected reader schema, Available for the format: AVRO, PARQUET, ORC.'
          type: string
        hivePartitioningOptions:
          description: '[Optional] Options to configure hive partitioning support.'
          $ref: '#/components/schemas/HivePartitioningOptions'
        schema:
          description: '[Optional] The schema for the destination table. The schema can be omitted if the destination table already exists, or if you''re loading data from Google Cloud Datastore.'
          $ref: '#/components/schemas/TableSchema'
        connectionProperties:
          items:
            $ref: '#/components/schemas/ConnectionProperty'
          type: array
          description: Connection properties.
        jsonExtension:
          description: '[Optional] If sourceFormat is set to newline-delimited JSON, indicates whether it should be processed as a JSON variant such as GeoJSON. For a sourceFormat other than JSON, omit this field. If the sourceFormat is newline-delimited JSON: - for newline-delimited GeoJSON: set to GEOJSON.'
          type: string
        destinationTableProperties:
          $ref: '#/components/schemas/DestinationTableProperties'
          description: '[Beta] [Optional] Properties with which to create the destination table if it is new.'
        destinationTable:
          $ref: '#/components/schemas/TableReference'
          description: '[Required] The destination table to load the data into.'
        writeDisposition:
          description: '[Optional] Specifies the action that occurs if the destination table already exists. The following values are supported: WRITE_TRUNCATE: If the table already exists, BigQuery overwrites the table data. WRITE_APPEND: If the table already exists, BigQuery appends the data to the table. WRITE_EMPTY: If the table already exists and contains data, a ''duplicate'' error is returned in the job result. The default value is WRITE_APPEND. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Creation, truncation and append actions occur as one atomic update upon job completion.'
          type: string
        skipLeadingRows:
          format: int32
          description: '[Optional] The number of rows at the top of a CSV file that BigQuery will skip when loading the data. The default value is 0. This property is useful if you have header rows in the file that should be skipped.'
          type: integer
        schemaUpdateOptions:
          description: 'Allows the schema of the destination table to be updated as a side effect of the load job if a schema is autodetected or supplied in the job configuration. Schema update options are supported in two cases: when writeDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination table is a partition of a table, specified by partition decorators. For normal tables, WRITE_TRUNCATE will always overwrite the schema. One or more of the following values are specified: ALLOW_FIELD_ADDITION: allow adding a nullable field to the schema. ALLOW_FIELD_RELAXATION: allow relaxing a required field in the original schema to nullable.'
          type: array
          items:
            type: string
        createDisposition:
          description: '[Optional] Specifies whether the job is allowed to create new tables. The following values are supported: CREATE_IF_NEEDED: If the table does not exist, BigQuery creates the table. CREATE_NEVER: The table must already exist. If it does not, a ''notFound'' error is returned in the job result. The default value is CREATE_IF_NEEDED. Creation, truncation and append actions occur as one atomic update upon job completion.'
          type: string
        destinationEncryptionConfiguration:
          description: 'Custom encryption configuration (e.g., Cloud KMS keys).'
          $ref: '#/components/schemas/EncryptionConfiguration'
        timePartitioning:
          $ref: '#/components/schemas/TimePartitioning'
          description: Time-based partitioning specification for the destination table. Only one of timePartitioning and rangePartitioning should be specified.
        projectionFields:
          description: 'If sourceFormat is set to "DATASTORE_BACKUP", indicates which entity properties to load into BigQuery from a Cloud Datastore backup. Property names are case sensitive and must be top-level properties. If no properties are specified, BigQuery loads all properties. If any named property isn''t found in the Cloud Datastore backup, an invalid error is returned in the job result.'
          items:
            type: string
          type: array
        clustering:
          $ref: '#/components/schemas/Clustering'
          description: '[Beta] Clustering specification for the destination table. Must be specified with time-based partitioning, data in the table will be first partitioned and subsequently clustered.'
        allowQuotedNewlines:
          type: boolean
          description: Indicates if BigQuery should allow quoted data sections that contain newline characters in a CSV file. The default value is false.
        useAvroLogicalTypes:
          type: boolean
          description: '[Optional] If sourceFormat is set to "AVRO", indicates whether to interpret logical types as the corresponding BigQuery data type (for example, TIMESTAMP), instead of using the raw type (for example, INTEGER).'
    JobReference:
      id: JobReference
      properties:
        projectId:
          description: '[Required] The ID of the project containing this job.'
          annotations:
            required:
              - bigquery.jobs.getQueryResults
          type: string
        location:
          type: string
          description: 'The geographic location of the job. See details at https://cloud.google.com/bigquery/docs/locations#specifying_your_location.'
        jobId:
          type: string
          annotations:
            required:
              - bigquery.jobs.getQueryResults
          description: '[Required] The ID of the job. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-). The maximum length is 1,024 characters.'
      type: object
    JobStatistics5:
      id: JobStatistics5
      type: object
      properties:
        copied_logical_bytes:
          description: '[Output-only] Number of logical bytes copied to the destination table.'
          format: int64
          type: string
        copied_rows:
          format: int64
          description: '[Output-only] Number of rows copied to the destination table.'
          type: string
    TableRow:
      id: TableRow
      type: object
      properties:
        f:
          description: 'Represents a single row in the result set, consisting of one or more fields.'
          type: array
          items:
            $ref: '#/components/schemas/TableCell'
    DatasetReference:
      id: DatasetReference
      properties:
        datasetId:
          description: '[Required] A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.'
          annotations:
            required:
              - bigquery.datasets.update
          type: string
        projectId:
          type: string
          description: '[Optional] The ID of the project containing this dataset.'
          annotations:
            required:
              - bigquery.datasets.update
      type: object
    Argument:
      type: object
      description: Input/output argument of a function or a stored procedure.
      id: Argument
      properties:
        dataType:
          $ref: '#/components/schemas/StandardSqlDataType'
          description: Required unless argument_kind = ANY_TYPE.
        name:
          type: string
          description: Optional. The name of this argument. Can be absent for function return argument.
        argumentKind:
          enumDescriptions:
            - ''
            - 'The argument is a variable with fully specified type, which can be a struct or an array, but not a table.'
            - 'The argument is any type, including struct or array, but not a table. To be added: FIXED_TABLE, ANY_TABLE'
          enum:
            - ARGUMENT_KIND_UNSPECIFIED
            - FIXED_TYPE
            - ANY_TYPE
          description: Optional. Defaults to FIXED_TYPE.
          type: string
        mode:
          enumDescriptions:
            - ''
            - The argument is input-only.
            - The argument is output-only.
            - The argument is both an input and an output.
          type: string
          description: Optional. Specifies whether the argument is input or output. Can be set for procedures only.
          enum:
            - MODE_UNSPECIFIED
            - IN
            - OUT
            - INOUT
    DoubleRange:
      description: Range of a double hyperparameter.
      id: DoubleRange
      properties:
        max:
          format: double
          type: number
          description: Max value of the double parameter.
        min:
          description: Min value of the double parameter.
          format: double
          type: number
      type: object
    ClusteringMetrics:
      type: object
      id: ClusteringMetrics
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
          description: Information for all clusters.
        meanSquaredDistance:
          type: number
          format: double
          description: Mean of squared distances between each sample to its cluster centroid.
        daviesBouldinIndex:
          format: double
          description: Davies-Bouldin index.
          type: number
      description: Evaluation metrics for clustering models.
    ModelReference:
      id: ModelReference
      type: object
      properties:
        modelId:
          type: string
          description: 'Required. The ID of the model. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.'
        datasetId:
          description: Required. The ID of the dataset containing this model.
          type: string
        projectId:
          description: Required. The ID of the project containing this model.
          type: string
    RowAccessPolicy:
      type: object
      properties:
        creationTime:
          format: google-datetime
          type: string
          readOnly: true
          description: 'Output only. The time when this row access policy was created, in milliseconds since the epoch.'
        rowAccessPolicyReference:
          description: Required. Reference describing the ID of this row access policy.
          $ref: '#/components/schemas/RowAccessPolicyReference'
        lastModifiedTime:
          readOnly: true
          type: string
          description: 'Output only. The time when this row access policy was last modified, in milliseconds since the epoch.'
          format: google-datetime
        filterPredicate:
          description: 'Required. A SQL boolean expression that represents the rows defined by this row access policy, similar to the boolean expression in a WHERE clause of a SELECT query on a table. References to other tables, routines, and temporary functions are not supported. Examples: region="EU" date_field = CAST(''2019-9-27'' as DATE) nullable_field is not NULL numeric_field BETWEEN 1.0 AND 5.0'
          type: string
        etag:
          description: Output only. A hash of this resource.
          readOnly: true
          type: string
      id: RowAccessPolicy
      description: 'Represents access on a subset of rows on the specified table, defined by its filter predicate. Access to the subset of rows is controlled by its IAM policy.'
    GetIamPolicyRequest:
      properties:
        options:
          $ref: '#/components/schemas/GetPolicyOptions'
          description: 'OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.'
      type: object
      id: GetIamPolicyRequest
      description: Request message for `GetIamPolicy` method.
    BinaryConfusionMatrix:
      type: object
      properties:
        accuracy:
          format: double
          description: The fraction of predictions given the correct label.
          type: number
        trueNegatives:
          type: string
          description: Number of true samples predicted as false.
          format: int64
        recall:
          type: number
          format: double
          description: The fraction of actual positive labels that were given a positive prediction.
        falseNegatives:
          description: Number of false samples predicted as false.
          format: int64
          type: string
        positiveClassThreshold:
          format: double
          type: number
          description: Threshold value used when computing each of the following metric.
        precision:
          description: The fraction of actual positive predictions that had positive actual labels.
          type: number
          format: double
        falsePositives:
          type: string
          description: Number of false samples predicted as true.
          format: int64
        truePositives:
          type: string
          description: Number of true samples predicted as true.
          format: int64
        f1Score:
          description: The equally weighted average of recall and precision.
          type: number
          format: double
      id: BinaryConfusionMatrix
      description: Confusion matrix for binary classification models.
    CloneDefinition:
      type: object
      id: CloneDefinition
      properties:
        baseTableReference:
          description: '[Required] Reference describing the ID of the table that was cloned.'
          $ref: '#/components/schemas/TableReference'
        cloneTime:
          type: string
          format: date-time
          description: '[Required] The time at which the base table was cloned. This value is reported in the JSON response using RFC3339 format.'
    FeatureValue:
      id: FeatureValue
      properties:
        featureColumn:
          type: string
          description: The feature column name.
        numericalValue:
          type: number
          description: The numerical feature value. This is the centroid value for this feature.
          format: double
        categoricalValue:
          description: The categorical feature value.
          $ref: '#/components/schemas/CategoricalValue'
      description: Representative value of a single feature within the cluster.
      type: object
    TestIamPermissionsRequest:
      type: object
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          type: array
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          items:
            type: string
    TestIamPermissionsResponse:
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
      type: object
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
    SparkStatistics:
      type: object
      properties:
        spark_job_id:
          type: string
          description: '[Output-only] Spark job id if a Spark job is created successfully.'
        endpoints:
          description: '[Output-only] Endpoints generated for the Spark job.'
          additionalProperties:
            type: string
          type: object
        logging_info:
          $ref: '#/components/schemas/SparkLoggingInfo'
          description: '[Output-only] Logging info is used to generate a link to Cloud Logging.'
        spark_job_location:
          description: '[Output-only] Location where the Spark job is executed.'
          type: string
      id: SparkStatistics
    ListRoutinesResponse:
      type: object
      properties:
        nextPageToken:
          description: A token to request the next page of results.
          type: string
        routines:
          items:
            $ref: '#/components/schemas/Routine'
          description: 'Routines in the requested dataset. Unless read_mask is set in the request, only the following fields are populated: etag, project_id, dataset_id, routine_id, routine_type, creation_time, last_modified_time, language, and remote_function_options.'
          type: array
      id: ListRoutinesResponse
    HparamSearchSpaces:
      id: HparamSearchSpaces
      properties:
        dropout:
          description: Dropout probability for dnn model training and boosted tree models using dart booster.
          $ref: '#/components/schemas/DoubleHparamSearchSpace'
        numFactors:
          description: Number of latent factors to train on.
          $ref: '#/components/schemas/IntHparamSearchSpace'
        numParallelTree:
          description: Number of parallel trees for boosted tree models.
          $ref: '#/components/schemas/IntHparamSearchSpace'
        activationFn:
          description: Activation functions of neural network models.
          $ref: '#/components/schemas/StringHparamSearchSpace'
        l1Reg:
          $ref: '#/components/schemas/DoubleHparamSearchSpace'
          description: L1 regularization coefficient.
        hiddenUnits:
          description: Hidden units for neural network models.
          $ref: '#/components/schemas/IntArrayHparamSearchSpace'
        subsample:
          $ref: '#/components/schemas/DoubleHparamSearchSpace'
          description: Subsample the training data to grow tree to prevent overfitting for boosted tree models.
        minTreeChildWeight:
          $ref: '#/components/schemas/IntHparamSearchSpace'
          description: Minimum sum of instance weight needed in a child for boosted tree models.
        walsAlpha:
          description: Hyperparameter for matrix factoration when implicit feedback type is specified.
          $ref: '#/components/schemas/DoubleHparamSearchSpace'
        learnRate:
          $ref: '#/components/schemas/DoubleHparamSearchSpace'
          description: Learning rate of training jobs.
        minSplitLoss:
          $ref: '#/components/schemas/DoubleHparamSearchSpace'
          description: Minimum split loss for boosted tree models.
        batchSize:
          description: Mini batch sample size.
          $ref: '#/components/schemas/IntHparamSearchSpace'
        treeMethod:
          description: Tree construction algorithm for boosted tree models.
          $ref: '#/components/schemas/StringHparamSearchSpace'
        dartNormalizeType:
          description: Dart normalization type for boosted tree models.
          $ref: '#/components/schemas/StringHparamSearchSpace'
        l2Reg:
          description: L2 regularization coefficient.
          $ref: '#/components/schemas/DoubleHparamSearchSpace'
        numClusters:
          $ref: '#/components/schemas/IntHparamSearchSpace'
          description: Number of clusters for k-means.
        colsampleBynode:
          $ref: '#/components/schemas/DoubleHparamSearchSpace'
          description: Subsample ratio of columns for each node(split) for boosted tree models.
        colsampleBytree:
          $ref: '#/components/schemas/DoubleHparamSearchSpace'
          description: Subsample ratio of columns when constructing each tree for boosted tree models.
        boosterType:
          $ref: '#/components/schemas/StringHparamSearchSpace'
          description: Booster type for boosted tree models.
        maxTreeDepth:
          $ref: '#/components/schemas/IntHparamSearchSpace'
          description: Maximum depth of a tree for boosted tree models.
        optimizer:
          $ref: '#/components/schemas/StringHparamSearchSpace'
          description: Optimizer of TF models.
        colsampleBylevel:
          $ref: '#/components/schemas/DoubleHparamSearchSpace'
          description: Subsample ratio of columns for each level for boosted tree models.
      description: Hyperparameter search spaces. These should be a subset of training_options.
      type: object
    JsonObject:
      type: object
      id: JsonObject
      description: Represents a single JSON object.
      additionalProperties:
        $ref: '#/components/schemas/JsonValue'
    AuditConfig:
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
        service:
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
          type: string
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      id: AuditConfig
      type: object
    ExternalDataConfiguration:
      type: object
      properties:
        decimalTargetTypes:
          items:
            type: string
          description: '[Optional] Defines the list of possible SQL data types to which the source decimal values are converted. This list and the precision and the scale parameters of the decimal field determine the target type. In the order of NUMERIC, BIGNUMERIC, and STRING, a type is picked if it is in the specified list and if it supports the precision and the scale. STRING supports all precision and scale values. If none of the listed types supports the precision and the scale, the type supporting the widest range in the specified list is picked, and if a value exceeds the supported range when reading the data, an error will be thrown. Example: Suppose the value of this field is ["NUMERIC", "BIGNUMERIC"]. If (precision,scale) is: (38,9) -> NUMERIC; (39,9) -> BIGNUMERIC (NUMERIC cannot hold 30 integer digits); (38,10) -> BIGNUMERIC (NUMERIC cannot hold 10 fractional digits); (76,38) -> BIGNUMERIC; (77,38) -> BIGNUMERIC (error if value exeeds supported range). This field cannot contain duplicate types. The order of the types in this field is ignored. For example, ["BIGNUMERIC", "NUMERIC"] is the same as ["NUMERIC", "BIGNUMERIC"] and NUMERIC always takes precedence over BIGNUMERIC. Defaults to ["NUMERIC", "STRING"] for ORC and ["NUMERIC"] for the other file formats.'
          type: array
        connectionId:
          type: string
          description: '[Optional, Trusted Tester] Connection for external data source.'
        autodetect:
          description: Try to detect schema and format options automatically. Any option specified explicitly will be honored.
          type: boolean
        fileSetSpecType:
          description: '[Optional] Specifies how source URIs are interpreted for constructing the file set to load. By default source URIs are expanded against the underlying storage. Other options include specifying manifest files. Only applicable to object storage systems.'
          type: string
        sourceFormat:
          description: '[Required] The data format. For CSV files, specify "CSV". For Google sheets, specify "GOOGLE_SHEETS". For newline-delimited JSON, specify "NEWLINE_DELIMITED_JSON". For Avro files, specify "AVRO". For Google Cloud Datastore backups, specify "DATASTORE_BACKUP". [Beta] For Google Cloud Bigtable, specify "BIGTABLE".'
          type: string
        compression:
          description: '[Optional] The compression type of the data source. Possible values include GZIP and NONE. The default value is NONE. This setting is ignored for Google Cloud Bigtable, Google Cloud Datastore backups and Avro formats.'
          type: string
        hivePartitioningOptions:
          description: '[Optional] Options to configure hive partitioning support.'
          $ref: '#/components/schemas/HivePartitioningOptions'
        parquetOptions:
          description: Additional properties to set if sourceFormat is set to Parquet.
          $ref: '#/components/schemas/ParquetOptions'
        schema:
          $ref: '#/components/schemas/TableSchema'
          description: '[Optional] The schema for the data. Schema is required for CSV and JSON formats. Schema is disallowed for Google Cloud Bigtable, Cloud Datastore backups, and Avro formats.'
        avroOptions:
          description: Additional properties to set if sourceFormat is set to Avro.
          $ref: '#/components/schemas/AvroOptions'
        csvOptions:
          description: Additional properties to set if sourceFormat is set to CSV.
          $ref: '#/components/schemas/CsvOptions'
        ignoreUnknownValues:
          description: '[Optional] Indicates if BigQuery should allow extra values that are not represented in the table schema. If true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false. The sourceFormat property determines what BigQuery treats as an extra value: CSV: Trailing columns JSON: Named values that don''t match any column names Google Cloud Bigtable: This setting is ignored. Google Cloud Datastore backups: This setting is ignored. Avro: This setting is ignored.'
          type: boolean
        sourceUris:
          type: array
          description: '[Required] The fully-qualified URIs that point to your data in Google Cloud. For Google Cloud Storage URIs: Each URI can contain one ''*'' wildcard character and it must come after the ''bucket'' name. Size limits related to load jobs apply to external data sources. For Google Cloud Bigtable URIs: Exactly one URI can be specified and it has be a fully specified and valid HTTPS URL for a Google Cloud Bigtable table. For Google Cloud Datastore backups, exactly one URI can be specified. Also, the ''*'' wildcard character is not allowed.'
          items:
            type: string
        objectMetadata:
          description: 'ObjectMetadata is used to create Object Tables. Object Tables contain a listing of objects (with their metadata) found at the source_uris. If ObjectMetadata is set, source_format should be omitted. Currently SIMPLE is the only supported Object Metadata type.'
          type: string
        maxBadRecords:
          format: int32
          description: '[Optional] The maximum number of bad records that BigQuery can ignore when reading data. If the number of bad records exceeds this value, an invalid error is returned in the job result. This is only valid for CSV, JSON, and Google Sheets. The default value is 0, which requires that all records are valid. This setting is ignored for Google Cloud Bigtable, Google Cloud Datastore backups and Avro formats.'
          type: integer
        metadataCacheMode:
          description: '[Optional] Metadata Cache Mode for the table. Set this to enable caching of metadata from external data source.'
          type: string
        bigtableOptions:
          $ref: '#/components/schemas/BigtableOptions'
          description: '[Optional] Additional options if sourceFormat is set to BIGTABLE.'
        referenceFileSchemaUri:
          description: '[Optional] Provide a referencing file with the expected table schema. Enabled for the format: AVRO, PARQUET, ORC.'
          type: string
        jsonOptions:
          description: Additional properties to set if `sourceFormat` is set to `NEWLINE_DELIMITED_JSON`.
          $ref: '#/components/schemas/JsonOptions'
        googleSheetsOptions:
          description: '[Optional] Additional options if sourceFormat is set to GOOGLE_SHEETS.'
          $ref: '#/components/schemas/GoogleSheetsOptions'
      id: ExternalDataConfiguration
    QueryResponse:
      id: QueryResponse
      properties:
        jobReference:
          description: 'Reference to the Job that was created to run the query. This field will be present even if the original request timed out, in which case GetQueryResults can be used to read the results once the query has completed. Since this API only returns the first page of results, subsequent pages can be fetched via the same mechanism (GetQueryResults).'
          $ref: '#/components/schemas/JobReference'
        cacheHit:
          description: Whether the query result was fetched from the query cache.
          type: boolean
        jobComplete:
          description: 'Whether the query has completed or not. If rows or totalRows are present, this will always be true. If this is false, totalRows will not be available.'
          type: boolean
        kind:
          default: bigquery#queryResponse
          type: string
          description: The resource type.
        totalRows:
          description: 'The total number of rows in the complete query result set, which can be more than the number of rows in this single page of results.'
          type: string
          format: uint64
        dmlStats:
          description: '[Output-only] Detailed statistics for DML statements Present only for DML statements INSERT, UPDATE, DELETE or TRUNCATE.'
          $ref: '#/components/schemas/DmlStatistics'
        schema:
          $ref: '#/components/schemas/TableSchema'
          description: The schema of the results. Present only when the query completes successfully.
        errors:
          description: '[Output-only] The first errors or warnings encountered during the running of the job. The final message includes the number of errors that caused the process to stop. Errors here do not necessarily mean that the job has completed or was unsuccessful.'
          items:
            $ref: '#/components/schemas/ErrorProto'
          type: array
        totalBytesProcessed:
          description: 'The total number of bytes processed for this query. If this query was a dry run, this is the number of bytes that would be processed if the query were run.'
          format: int64
          type: string
        rows:
          items:
            $ref: '#/components/schemas/TableRow'
          description: 'An object with as many results as can be contained within the maximum permitted reply size. To get any additional rows, you can call GetQueryResults and specify the jobReference returned above.'
          type: array
        numDmlAffectedRows:
          description: '[Output-only] The number of rows affected by a DML statement. Present only for DML statements INSERT, UPDATE or DELETE.'
          type: string
          format: int64
        sessionInfo:
          description: '[Output-only] [Preview] Information of the session if this job is part of one.'
          $ref: '#/components/schemas/SessionInfo'
        pageToken:
          type: string
          description: A token used for paging results.
      type: object
    ModelDefinition:
      type: object
      id: ModelDefinition
      properties:
        trainingRuns:
          type: array
          description: '[Output-only, Beta] Information about ml training runs, each training run comprises of multiple iterations and there may be multiple training runs for the model if warm start is used or if a user decides to continue a previously cancelled query.'
          items:
            $ref: '#/components/schemas/BqmlTrainingRun'
        modelOptions:
          description: '[Output-only, Beta] Model options used for the first training run. These options are immutable for subsequent training runs. Default values are used for any options not specified in the input query.'
          properties:
            lossType:
              type: string
            labels:
              items:
                type: string
              type: array
            modelType:
              type: string
          type: object
    BigtableColumnFamily:
      type: object
      properties:
        familyId:
          type: string
          description: Identifier of the column family.
        encoding:
          type: string
          description: '[Optional] The encoding of the values when the type is not STRING. Acceptable encoding values are: TEXT - indicates values are alphanumeric text strings. BINARY - indicates values are encoded using HBase Bytes.toBytes family of functions. This can be overridden for a specific column by listing that column in ''columns'' and specifying an encoding for it.'
        onlyReadLatest:
          type: boolean
          description: '[Optional] If this is set only the latest version of value are exposed for all columns in this column family. This can be overridden for a specific column by listing that column in ''columns'' and specifying a different setting for that column.'
        type:
          type: string
          description: '[Optional] The type to convert the value in cells of this column family. The values are expected to be encoded using HBase Bytes.toBytes function when using the BINARY encoding value. Following BigQuery types are allowed (case-sensitive) - BYTES STRING INTEGER FLOAT BOOLEAN Default type is BYTES. This can be overridden for a specific column by listing that column in ''columns'' and specifying a type for it.'
        columns:
          type: array
          items:
            $ref: '#/components/schemas/BigtableColumn'
          description: '[Optional] Lists of columns that should be exposed as individual fields as opposed to a list of (column name, value) pairs. All columns whose qualifier matches a qualifier in this list can be accessed as .. Other columns can be accessed as a list through .Column field.'
      id: BigtableColumnFamily
    AggregateClassificationMetrics:
      description: 'Aggregate metrics for classification/classifier models. For multi-class models, the metrics are either macro-averaged or micro-averaged. When macro-averaged, the metrics are calculated for each label and then an unweighted average is taken of those values. When micro-averaged, the metric is calculated globally by counting the total number of correctly predicted rows.'
      id: AggregateClassificationMetrics
      type: object
      properties:
        recall:
          type: number
          description: Recall is the fraction of actual positive labels that were given a positive prediction. For multiclass this is a macro-averaged metric.
          format: double
        threshold:
          format: double
          description: Threshold at which the metrics are computed. For binary classification models this is the positive class threshold. For multi-class classfication models this is the confidence threshold.
          type: number
        accuracy:
          description: Accuracy is the fraction of predictions given the correct label. For multiclass this is a micro-averaged metric.
          format: double
          type: number
        rocAuc:
          type: number
          description: Area Under a ROC Curve. For multiclass this is a macro-averaged metric.
          format: double
        precision:
          description: Precision is the fraction of actual positive predictions that had positive actual labels. For multiclass this is a macro-averaged metric treating each class as a binary classifier.
          type: number
          format: double
        f1Score:
          type: number
          description: The F1 score is an average of recall and precision. For multiclass this is a macro-averaged metric.
          format: double
        logLoss:
          format: double
          type: number
          description: Logarithmic Loss. For multiclass this is a macro-averaged metric.
    Job:
      type: object
      properties:
        jobReference:
          $ref: '#/components/schemas/JobReference'
          description: '[Optional] Reference describing the unique-per-user name of the job.'
        user_email:
          description: '[Output-only] Email address of the user who ran the job.'
          type: string
        kind:
          default: bigquery#job
          type: string
          description: '[Output-only] The type of the resource.'
        configuration:
          $ref: '#/components/schemas/JobConfiguration'
          description: '[Required] Describes the job configuration.'
        selfLink:
          description: '[Output-only] A URL that can be used to access this resource again.'
          type: string
        etag:
          description: '[Output-only] A hash of this resource.'
          type: string
        status:
          description: '[Output-only] The status of this job. Examine this value when polling an asynchronous job to see if the job is complete.'
          $ref: '#/components/schemas/JobStatus'
        id:
          description: '[Output-only] Opaque ID field of the job'
          type: string
        statistics:
          $ref: '#/components/schemas/JobStatistics'
          description: '[Output-only] Information about the job, including starting time and ending time of the job.'
      id: Job
    ArimaResult:
      id: ArimaResult
      properties:
        arimaModelInfo:
          type: array
          description: 'This message is repeated because there are multiple arima models fitted in auto-arima. For non-auto-arima model, its size is one.'
          items:
            $ref: '#/components/schemas/ArimaModelInfo'
        seasonalPeriods:
          items:
            enum:
              - SEASONAL_PERIOD_TYPE_UNSPECIFIED
              - NO_SEASONALITY
              - DAILY
              - WEEKLY
              - MONTHLY
              - QUARTERLY
              - YEARLY
            type: string
            enumDescriptions:
              - Unspecified seasonal period.
              - No seasonality
              - 'Daily period, 24 hours.'
              - 'Weekly period, 7 days.'
              - 'Monthly period, 30 days or irregular.'
              - 'Quarterly period, 90 days or irregular.'
              - 'Yearly period, 365 days or irregular.'
          description: Seasonal periods. Repeated because multiple periods are supported for one time series.
          type: array
      type: object
      description: (Auto-)arima fitting result. Wrap everything in ArimaResult for easier refactoring if we want to use model-specific iteration results.
    ParquetOptions:
      type: object
      properties:
        enableListInference:
          type: boolean
          description: '[Optional] Indicates whether to use schema inference specifically for Parquet LIST logical type.'
        enumAsString:
          description: '[Optional] Indicates whether to infer Parquet ENUM logical type as STRING instead of BYTES by default.'
          type: boolean
      id: ParquetOptions
    ListModelsResponse:
      id: ListModelsResponse
      type: object
      properties:
        models:
          type: array
          description: 'Models in the requested dataset. Only the following fields are populated: model_reference, model_type, creation_time, last_modified_time and labels.'
          items:
            $ref: '#/components/schemas/Model'
        nextPageToken:
          type: string
          description: A token to request the next page of results.
    DataSplitResult:
      description: Data split result. This contains references to the training and evaluation data tables that were used to train the model.
      type: object
      id: DataSplitResult
      properties:
        trainingTable:
          description: Table reference of the training data after split.
          $ref: '#/components/schemas/TableReference'
        testTable:
          description: Table reference of the test data after split.
          $ref: '#/components/schemas/TableReference'
        evaluationTable:
          description: Table reference of the evaluation data after split.
          $ref: '#/components/schemas/TableReference'
    ArimaOrder:
      id: ArimaOrder
      type: object
      description: 'Arima order, can be used for both non-seasonal and seasonal parts.'
      properties:
        d:
          description: Order of the differencing part.
          type: string
          format: int64
        q:
          format: int64
          description: Order of the moving-average part.
          type: string
        p:
          description: Order of the autoregressive part.
          format: int64
          type: string
    BiEngineReason:
      properties:
        code:
          type: string
          default: ''
          description: '[Output-only] High-level BI Engine reason for partial or disabled acceleration.'
        message:
          type: string
          description: '[Output-only] Free form human-readable reason for partial or disabled acceleration.'
          default: ''
      type: object
      id: BiEngineReason
    IntRange:
      type: object
      description: Range of an int hyperparameter.
      id: IntRange
      properties:
        max:
          description: Max value of the int parameter.
          format: int64
          type: string
        min:
          type: string
          description: Min value of the int parameter.
          format: int64
    Table:
      id: Table
      properties:
        tableReference:
          $ref: '#/components/schemas/TableReference'
          description: '[Required] Reference describing the ID of this table.'
        creationTime:
          format: int64
          type: string
          description: '[Output-only] The time when this table was created, in milliseconds since the epoch.'
        numPartitions:
          description: '[Output-only] The number of partitions present in the table or materialized view. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.'
          format: int64
          type: string
        numActiveLogicalBytes:
          format: int64
          description: '[Output-only] Number of logical bytes that are less than 90 days old.'
          type: string
        description:
          type: string
          description: '[Optional] A user-friendly description of this table.'
        numRows:
          type: string
          description: '[Output-only] The number of rows of data in this table, excluding any data in the streaming buffer.'
          format: uint64
        maxStaleness:
          format: byte
          type: string
          description: '[Optional] Max staleness of data that could be returned when table or materialized view is queried (formatted as Google SQL Interval type).'
        numActivePhysicalBytes:
          format: int64
          description: '[Output-only] Number of physical bytes less than 90 days old. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.'
          type: string
        defaultCollation:
          type: string
          description: '[Output-only] The default collation of the table.'
        rangePartitioning:
          $ref: '#/components/schemas/RangePartitioning'
          description: '[TrustedTester] Range partitioning specification for this table. Only one of timePartitioning and rangePartitioning should be specified.'
        numLongTermBytes:
          type: string
          description: '[Output-only] The number of bytes in the table that are considered "long-term storage".'
          format: int64
        kind:
          default: bigquery#table
          description: '[Output-only] The type of the resource.'
          type: string
        numTimeTravelPhysicalBytes:
          description: '[Output-only] Number of physical bytes used by time travel storage (deleted or changed data). This data is not kept in real time, and might be delayed by a few seconds to a few minutes.'
          format: int64
          type: string
        tableConstraints:
          description: '[Optional] The table constraints on the table.'
          $ref: '#/components/schemas/TableConstraints'
        streamingBuffer:
          description: '[Output-only] Contains information regarding this table''s streaming buffer, if one is present. This field will be absent if the table is not being streamed to or if there is no data in the streaming buffer.'
          $ref: '#/components/schemas/Streamingbuffer'
        numTotalLogicalBytes:
          description: '[Output-only] Total number of logical bytes in the table or materialized view.'
          type: string
          format: int64
        defaultRoundingMode:
          description: '[Output-only] The default rounding mode of the table.'
          type: string
        cloneDefinition:
          description: '[Output-only] Clone definition.'
          $ref: '#/components/schemas/CloneDefinition'
        encryptionConfiguration:
          description: 'Custom encryption configuration (e.g., Cloud KMS keys).'
          $ref: '#/components/schemas/EncryptionConfiguration'
        numLongTermLogicalBytes:
          format: int64
          description: '[Output-only] Number of logical bytes that are more than 90 days old.'
          type: string
        numBytes:
          description: '[Output-only] The size of this table in bytes, excluding any data in the streaming buffer.'
          format: int64
          type: string
        selfLink:
          description: '[Output-only] A URL that can be used to access this resource again.'
          type: string
        location:
          description: '[Output-only] The geographic location where the table resides. This value is inherited from the dataset.'
          type: string
        expirationTime:
          description: '[Optional] The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed. The defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime on newly created tables.'
          format: int64
          type: string
        friendlyName:
          type: string
          description: '[Optional] A descriptive name for this table.'
        timePartitioning:
          $ref: '#/components/schemas/TimePartitioning'
          description: Time-based partitioning specification for this table. Only one of timePartitioning and rangePartitioning should be specified.
        labels:
          additionalProperties:
            type: string
          description: 'The labels associated with this table. You can use these to organize and group your tables. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.'
          type: object
        numLongTermPhysicalBytes:
          format: int64
          description: '[Output-only] Number of physical bytes more than 90 days old. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.'
          type: string
        type:
          type: string
          description: '[Output-only] Describes the table type. The following values are supported: TABLE: A normal BigQuery table. VIEW: A virtual table defined by a SQL query. SNAPSHOT: An immutable, read-only table that is a copy of another table. [TrustedTester] MATERIALIZED_VIEW: SQL query whose result is persisted. EXTERNAL: A table that references data stored in an external storage system, such as Google Cloud Storage. The default value is TABLE.'
        id:
          description: '[Output-only] An opaque ID uniquely identifying the table.'
          type: string
        snapshotDefinition:
          description: '[Output-only] Snapshot definition.'
          $ref: '#/components/schemas/SnapshotDefinition'
        model:
          $ref: '#/components/schemas/ModelDefinition'
          description: '[Output-only, Beta] Present iff this table represents a ML model. Describes the training information for the model, and it is required to run ''PREDICT'' queries.'
        clustering:
          $ref: '#/components/schemas/Clustering'
          description: '[Beta] Clustering specification for the table. Must be specified with partitioning, data in the table will be first partitioned and subsequently clustered.'
        view:
          $ref: '#/components/schemas/ViewDefinition'
          description: '[Optional] The view definition.'
        lastModifiedTime:
          format: uint64
          type: string
          description: '[Output-only] The time when this table was last modified, in milliseconds since the epoch.'
        etag:
          description: '[Output-only] A hash of the table metadata. Used to ensure there were no concurrent modifications to the resource when attempting an update. Not guaranteed to change when the table contents or the fields numRows, numBytes, numLongTermBytes or lastModifiedTime change.'
          type: string
        numPhysicalBytes:
          type: string
          format: int64
          description: '[Output-only] [TrustedTester] The physical size of this table in bytes, excluding any data in the streaming buffer. This includes compression and storage used for time travel.'
        requirePartitionFilter:
          default: 'false'
          type: boolean
          description: '[Optional] If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified.'
        materializedView:
          description: '[Optional] Materialized view definition.'
          $ref: '#/components/schemas/MaterializedViewDefinition'
        numTotalPhysicalBytes:
          format: int64
          type: string
          description: '[Output-only] The physical size of this table in bytes. This also includes storage used for time travel. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.'
        schema:
          $ref: '#/components/schemas/TableSchema'
          description: '[Optional] Describes the schema of this table.'
        externalDataConfiguration:
          $ref: '#/components/schemas/ExternalDataConfiguration'
          description: '[Optional] Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these properties, the data source can then be queried as if it were a standard BigQuery table.'
      type: object
    StandardSqlField:
      id: StandardSqlField
      description: A field or a column.
      type: object
      properties:
        name:
          description: Optional. The name of this field. Can be absent for struct fields.
          type: string
        type:
          $ref: '#/components/schemas/StandardSqlDataType'
          description: 'Optional. The type of this parameter. Absent if not explicitly specified (e.g., CREATE FUNCTION statement can omit the return type; in this case the output parameter does not have this "type" field).'
    HparamTuningTrial:
      properties:
        trainingLoss:
          description: Loss computed on the training data at the end of trial.
          type: number
          format: double
        status:
          description: The status of the trial.
          type: string
          enum:
            - TRIAL_STATUS_UNSPECIFIED
            - NOT_STARTED
            - RUNNING
            - SUCCEEDED
            - FAILED
            - INFEASIBLE
            - STOPPED_EARLY
          enumDescriptions:
            - ''
            - Scheduled but not started.
            - Running state.
            - The trial succeeded.
            - The trial failed.
            - The trial is infeasible due to the invalid params.
            - Trial stopped early because it's not promising.
        trialId:
          description: 1-based index of the trial.
          format: int64
          type: string
        startTimeMs:
          description: Starting time of the trial.
          type: string
          format: int64
        evaluationMetrics:
          description: Evaluation metrics of this trial calculated on the test data. Empty in Job API.
          $ref: '#/components/schemas/EvaluationMetrics'
        endTimeMs:
          description: Ending time of the trial.
          format: int64
          type: string
        errorMessage:
          type: string
          description: Error message for FAILED and INFEASIBLE trial.
        hparams:
          $ref: '#/components/schemas/TrainingOptions'
          description: The hyperprameters selected for this trial.
        hparamTuningEvaluationMetrics:
          description: 'Hyperparameter tuning evaluation metrics of this trial calculated on the eval data. Unlike evaluation_metrics, only the fields corresponding to the hparam_tuning_objectives are set.'
          $ref: '#/components/schemas/EvaluationMetrics'
        evalLoss:
          type: number
          format: double
          description: Loss computed on the eval data at the end of trial.
      type: object
      id: HparamTuningTrial
      description: 'Training info of a trial in [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models.'
    Model:
      id: Model
      properties:
        labels:
          type: object
          description: 'The labels associated with this model. You can use these to organize and group your models. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.'
          additionalProperties:
            type: string
        creationTime:
          format: int64
          description: 'Output only. The time when this model was created, in millisecs since the epoch.'
          type: string
          readOnly: true
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - LINEAR_REGRESSION
            - LOGISTIC_REGRESSION
            - KMEANS
            - MATRIX_FACTORIZATION
            - DNN_CLASSIFIER
            - TENSORFLOW
            - DNN_REGRESSOR
            - XGBOOST
            - BOOSTED_TREE_REGRESSOR
            - BOOSTED_TREE_CLASSIFIER
            - ARIMA
            - AUTOML_REGRESSOR
            - AUTOML_CLASSIFIER
            - PCA
            - DNN_LINEAR_COMBINED_CLASSIFIER
            - DNN_LINEAR_COMBINED_REGRESSOR
            - AUTOENCODER
            - ARIMA_PLUS
            - ARIMA_PLUS_XREG
            - RANDOM_FOREST_REGRESSOR
            - RANDOM_FOREST_CLASSIFIER
            - TENSORFLOW_LITE
            - ONNX
          type: string
          description: Output only. Type of the model resource.
          readOnly: true
          enumDescriptions:
            - ''
            - Linear regression model.
            - Logistic regression based classification model.
            - K-means clustering model.
            - Matrix factorization model.
            - DNN classifier model.
            - An imported TensorFlow model.
            - DNN regressor model.
            - An imported XGBoost model.
            - Boosted tree regressor model.
            - Boosted tree classifier model.
            - ARIMA model.
            - AutoML Tables regression model.
            - AutoML Tables classification model.
            - Prinpical Component Analysis model.
            - Wide-and-deep classifier model.
            - Wide-and-deep regressor model.
            - Autoencoder model.
            - New name for the ARIMA model.
            - ARIMA with external regressors.
            - Random forest regressor model.
            - Random forest classifier model.
            - An imported TensorFlow Lite model.
            - An imported ONNX model.
        transformColumns:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/TransformColumn'
          description: Output only. This field will be populated if a TRANSFORM clause was used to train a model. TRANSFORM clause (if used) takes feature_columns as input and outputs transform_columns. transform_columns then are used to train the model.
        featureColumns:
          description: 'Output only. Input feature columns for the model inference. If the model is trained with TRANSFORM clause, these are the input of the TRANSFORM clause.'
          items:
            $ref: '#/components/schemas/StandardSqlField'
          type: array
          readOnly: true
        modelReference:
          $ref: '#/components/schemas/ModelReference'
          description: Required. Unique identifier for this model.
        friendlyName:
          description: Optional. A descriptive name for this model.
          type: string
        lastModifiedTime:
          format: int64
          readOnly: true
          description: 'Output only. The time when this model was last modified, in millisecs since the epoch.'
          type: string
        expirationTime:
          type: string
          format: int64
          description: 'Optional. The time when this model expires, in milliseconds since the epoch. If not present, the model will persist indefinitely. Expired models will be deleted and their storage reclaimed. The defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime on newly created models.'
        encryptionConfiguration:
          description: 'Custom encryption configuration (e.g., Cloud KMS keys). This shows the encryption configuration of the model data while stored in BigQuery storage. This field can be used with PatchModel to update encryption key for an already encrypted model.'
          $ref: '#/components/schemas/EncryptionConfiguration'
        hparamTrials:
          description: 'Output only. Trials of a [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) model sorted by trial_id.'
          readOnly: true
          items:
            $ref: '#/components/schemas/HparamTuningTrial'
          type: array
        trainingRuns:
          description: Information for all training runs in increasing order of start_time.
          items:
            $ref: '#/components/schemas/TrainingRun'
          type: array
        remoteModelInfo:
          readOnly: true
          $ref: '#/components/schemas/RemoteModelInfo'
          description: Output only. Remote model info
        bestTrialId:
          type: string
          description: The best trial_id across all training runs.
          format: int64
          deprecated: true
        etag:
          type: string
          description: Output only. A hash of this resource.
          readOnly: true
        hparamSearchSpaces:
          $ref: '#/components/schemas/HparamSearchSpaces'
          description: Output only. All hyperparameter search spaces in this model.
          readOnly: true
        labelColumns:
          readOnly: true
          description: Output only. Label columns that were used to train this model. The output of the model will have a "predicted_" prefix to these columns.
          type: array
          items:
            $ref: '#/components/schemas/StandardSqlField'
        location:
          description: Output only. The geographic location where the model resides. This value is inherited from the dataset.
          type: string
          readOnly: true
        optimalTrialIds:
          readOnly: true
          items:
            format: int64
            type: string
          type: array
          description: 'Output only. For single-objective [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, it only contains the best trial. For multi-objective [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, it contains all Pareto optimal trials sorted by trial_id.'
        description:
          description: Optional. A user-friendly description of this model.
          type: string
        defaultTrialId:
          format: int64
          type: string
          readOnly: true
          description: 'Output only. The default trial_id to use in TVFs when the trial_id is not passed in. For single-objective [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, this is the best trial ID. For multi-objective [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, this is the smallest trial ID among all Pareto optimal trials.'
      type: object
    Streamingbuffer:
      id: Streamingbuffer
      type: object
      properties:
        oldestEntryTime:
          format: uint64
          type: string
          description: '[Output-only] Contains the timestamp of the oldest entry in the streaming buffer, in milliseconds since the epoch, if the streaming buffer is available.'
        estimatedRows:
          type: string
          format: uint64
          description: '[Output-only] A lower-bound estimate of the number of rows currently in the streaming buffer.'
        estimatedBytes:
          type: string
          format: uint64
          description: '[Output-only] A lower-bound estimate of the number of bytes currently in the streaming buffer.'
    ScriptStackFrame:
      type: object
      id: ScriptStackFrame
      properties:
        startColumn:
          type: integer
          description: '[Output-only] One-based start column.'
          format: int32
        startLine:
          description: '[Output-only] One-based start line.'
          format: int32
          type: integer
        endLine:
          description: '[Output-only] One-based end line.'
          type: integer
          format: int32
        text:
          type: string
          description: '[Output-only] Text of the current statement/expression.'
        procedureId:
          description: '[Output-only] Name of the active procedure, empty if in a top-level script.'
          type: string
        endColumn:
          type: integer
          format: int32
          description: '[Output-only] One-based end column.'
    TableReference:
      id: TableReference
      properties:
        tableId:
          description: '[Required] The ID of the table. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.'
          type: string
          annotations:
            required:
              - bigquery.tables.update
        datasetId:
          type: string
          annotations:
            required:
              - bigquery.tables.update
          description: '[Required] The ID of the dataset containing this table.'
        projectId:
          annotations:
            required:
              - bigquery.tables.update
          description: '[Required] The ID of the project containing this table.'
          type: string
      type: object
    UserDefinedFunctionResource:
      type: object
      properties:
        resourceUri:
          type: string
          description: '[Pick one] A code resource to load from a Google Cloud Storage URI (gs://bucket/path).'
        inlineCode:
          type: string
          description: '[Pick one] An inline resource that contains code for a user-defined function (UDF). Providing a inline code resource is equivalent to providing a URI for a file containing the same code.'
      description: 'This is used for defining User Defined Function (UDF) resources only when using legacy SQL. Users of Standard SQL should leverage either DDL (e.g. CREATE [TEMPORARY] FUNCTION ... ) or the Routines API to define UDF resources. For additional information on migrating, see: https://cloud.google.com/bigquery/docs/reference/standard-sql/migrating-from-legacy-sql#differences_in_user-defined_javascript_functions'
      id: UserDefinedFunctionResource
    ClusterInfo:
      type: object
      description: Information about a single cluster for clustering model.
      properties:
        centroidId:
          description: Centroid id.
          format: int64
          type: string
        clusterRadius:
          description: 'Cluster radius, the average distance from centroid to each point assigned to the cluster.'
          type: number
          format: double
        clusterSize:
          description: 'Cluster size, the total number of points assigned to the cluster.'
          format: int64
          type: string
      id: ClusterInfo
    TableList:
      properties:
        kind:
          type: string
          default: bigquery#tableList
          description: The type of list.
        etag:
          description: A hash of this page of results.
          type: string
        nextPageToken:
          description: A token to request the next page of results.
          type: string
        tables:
          description: Tables in the requested dataset.
          items:
            properties:
              friendlyName:
                description: The user-friendly name for this table.
                type: string
              creationTime:
                format: int64
                type: string
                description: 'The time when this table was created, in milliseconds since the epoch.'
              clustering:
                $ref: '#/components/schemas/Clustering'
                description: '[Beta] Clustering specification for this table, if configured.'
              type:
                description: 'The type of table. Possible values are: TABLE, VIEW.'
                type: string
              kind:
                default: bigquery#table
                type: string
                description: The resource type.
              labels:
                additionalProperties:
                  type: string
                type: object
                description: The labels associated with this table. You can use these to organize and group your tables.
              rangePartitioning:
                $ref: '#/components/schemas/RangePartitioning'
                description: 'The range partitioning specification for this table, if configured.'
              id:
                description: An opaque ID of the table
                type: string
              expirationTime:
                description: '[Optional] The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.'
                type: string
                format: int64
              timePartitioning:
                $ref: '#/components/schemas/TimePartitioning'
                description: 'The time-based partitioning specification for this table, if configured.'
              tableReference:
                $ref: '#/components/schemas/TableReference'
                description: A reference uniquely identifying the table.
              view:
                properties:
                  useLegacySql:
                    description: 'True if view is defined in legacy SQL dialect, false if in standard SQL.'
                    type: boolean
                type: object
                description: Additional details for a view.
            type: object
          type: array
        totalItems:
          format: int32
          type: integer
          description: The total number of tables in the dataset.
      id: TableList
      type: object
    JobStatistics3:
      properties:
        inputFileBytes:
          description: '[Output-only] Number of bytes of source data in a load job.'
          type: string
          format: int64
        badRecords:
          format: int64
          type: string
          description: '[Output-only] The number of bad records encountered. Note that if the job has failed because of more bad records encountered than the maximum allowed in the load job configuration, then this number can be less than the total number of bad records present in the input data.'
        outputBytes:
          description: '[Output-only] Size of the loaded data in bytes. Note that while a load job is in the running state, this value may change.'
          format: int64
          type: string
        outputRows:
          type: string
          format: int64
          description: '[Output-only] Number of rows imported in a load job. Note that while an import job is in the running state, this value may change.'
        inputFiles:
          description: '[Output-only] Number of source files in a load job.'
          format: int64
          type: string
      type: object
      id: JobStatistics3
    RegressionMetrics:
      properties:
        meanSquaredLogError:
          type: number
          description: Mean squared log error.
          format: double
        meanSquaredError:
          format: double
          type: number
          description: Mean squared error.
        meanAbsoluteError:
          description: Mean absolute error.
          format: double
          type: number
        rSquared:
          format: double
          description: R^2 score. This corresponds to r2_score in ML.EVALUATE.
          type: number
        medianAbsoluteError:
          type: number
          format: double
          description: Median absolute error.
      id: RegressionMetrics
      description: Evaluation metrics for regression and explicit feedback type matrix factorization models.
      type: object
    ArimaSingleModelForecastingMetrics:
      id: ArimaSingleModelForecastingMetrics
      type: object
      description: Model evaluation metrics for a single ARIMA forecasting model.
      properties:
        hasDrift:
          description: Is arima model fitted with drift or not. It is always false when d is not 1.
          type: boolean
        hasStepChanges:
          description: 'If true, step_changes is a part of time series decomposition result.'
          type: boolean
        seasonalPeriods:
          items:
            enum:
              - SEASONAL_PERIOD_TYPE_UNSPECIFIED
              - NO_SEASONALITY
              - DAILY
              - WEEKLY
              - MONTHLY
              - QUARTERLY
              - YEARLY
            enumDescriptions:
              - Unspecified seasonal period.
              - No seasonality
              - 'Daily period, 24 hours.'
              - 'Weekly period, 7 days.'
              - 'Monthly period, 30 days or irregular.'
              - 'Quarterly period, 90 days or irregular.'
              - 'Yearly period, 365 days or irregular.'
            type: string
          type: array
          description: Seasonal periods. Repeated because multiple periods are supported for one time series.
        nonSeasonalOrder:
          $ref: '#/components/schemas/ArimaOrder'
          description: Non-seasonal order.
        hasSpikesAndDips:
          type: boolean
          description: 'If true, spikes_and_dips is a part of time series decomposition result.'
        timeSeriesIds:
          items:
            type: string
          description: The tuple of time_series_ids identifying this time series. It will be one of the unique tuples of values present in the time_series_id_columns specified during ARIMA model training. Only present when time_series_id_columns training option was used and the order of values here are same as the order of time_series_id_columns.
          type: array
        timeSeriesId:
          type: string
          description: The time_series_id value for this time series. It will be one of the unique values from the time_series_id_column specified during ARIMA model training. Only present when time_series_id_column training option was used.
        hasHolidayEffect:
          type: boolean
          description: 'If true, holiday_effect is a part of time series decomposition result.'
        arimaFittingMetrics:
          $ref: '#/components/schemas/ArimaFittingMetrics'
          description: Arima fitting metrics.
    TableFieldSchema:
      id: TableFieldSchema
      type: object
      properties:
        description:
          type: string
          description: '[Optional] The field description. The maximum length is 1,024 characters.'
        maxLength:
          type: string
          description: '[Optional] Maximum length of values of this field for STRINGS or BYTES. If max_length is not specified, no maximum length constraint is imposed on this field. If type = "STRING", then max_length represents the maximum UTF-8 length of strings in this field. If type = "BYTES", then max_length represents the maximum number of bytes in this field. It is invalid to set this field if type ≠ "STRING" and ≠ "BYTES".'
          format: int64
        type:
          type: string
          description: '[Required] The field data type. Possible values include STRING, BYTES, INTEGER, INT64 (same as INTEGER), FLOAT, FLOAT64 (same as FLOAT), NUMERIC, BIGNUMERIC, BOOLEAN, BOOL (same as BOOLEAN), TIMESTAMP, DATE, TIME, DATETIME, INTERVAL, RECORD (where RECORD indicates that the field contains a nested schema) or STRUCT (same as RECORD).'
        precision:
          format: int64
          description: '[Optional] Precision (maximum number of total digits in base 10) and scale (maximum number of digits in the fractional part in base 10) constraints for values of this field for NUMERIC or BIGNUMERIC. It is invalid to set precision or scale if type ≠ "NUMERIC" and ≠ "BIGNUMERIC". If precision and scale are not specified, no value range constraint is imposed on this field insofar as values are permitted by the type. Values of this NUMERIC or BIGNUMERIC field must be in this range when: - Precision (P) and scale (S) are specified: [-10P-S + 10-S, 10P-S - 10-S] - Precision (P) is specified but not scale (and thus scale is interpreted to be equal to zero): [-10P + 1, 10P - 1]. Acceptable values for precision and scale if both are specified: - If type = "NUMERIC": 1 ≤ precision - scale ≤ 29 and 0 ≤ scale ≤ 9. - If type = "BIGNUMERIC": 1 ≤ precision - scale ≤ 38 and 0 ≤ scale ≤ 38. Acceptable values for precision if only precision is specified but not scale (and thus scale is interpreted to be equal to zero): - If type = "NUMERIC": 1 ≤ precision ≤ 29. - If type = "BIGNUMERIC": 1 ≤ precision ≤ 38. If scale is specified but not precision, then it is invalid.'
          type: string
        scale:
          description: '[Optional] See documentation for precision.'
          type: string
          format: int64
        name:
          description: '[Required] The field name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 300 characters.'
          type: string
        collation:
          type: string
          description: Optional. Collation specification of the field. It only can be set on string type field.
        policyTags:
          properties:
            names:
              description: 'A list of category resource names. For example, "projects/1/location/eu/taxonomies/2/policyTags/3". At most 1 policy tag is allowed.'
              items:
                type: string
              type: array
          type: object
        fields:
          items:
            $ref: '#/components/schemas/TableFieldSchema'
          description: '[Optional] Describes the nested schema fields if the type property is set to RECORD.'
          type: array
        defaultValueExpression:
          description: 'Optional. A SQL expression to specify the default value for this field. It can only be set for top level fields (columns). You can use struct or array expression to specify default value for the entire struct or array. The valid SQL expressions are: - Literals for all data types, including STRUCT and ARRAY. - Following functions: - CURRENT_TIMESTAMP - CURRENT_TIME - CURRENT_DATE - CURRENT_DATETIME - GENERATE_UUID - RAND - SESSION_USER - ST_GEOGPOINT - Struct or array composed with the above allowed functions, for example, [CURRENT_DATE(), DATE ''2020-01-01'']'
          type: string
        categories:
          properties:
            names:
              items:
                type: string
              type: array
              description: 'A list of category resource names. For example, "projects/1/taxonomies/2/categories/3". At most 5 categories are allowed.'
          description: '[Optional] The categories attached to this field, used for field-level access control.'
          type: object
        roundingMode:
          description: Optional. Rounding Mode specification of the field. It only can be set on NUMERIC or BIGNUMERIC type fields.
          type: string
        mode:
          type: string
          description: '[Optional] The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default value is NULLABLE.'
    TrainingOptions:
      properties:
        colsampleBylevel:
          format: double
          type: number
          description: Subsample ratio of columns for each level for boosted tree models.
        l1Regularization:
          description: L1 regularization coefficient.
          format: double
          type: number
        minTreeChildWeight:
          description: Minimum sum of instance weight needed in a child for boosted tree models.
          type: string
          format: int64
        standardizeFeatures:
          description: Whether to standardize numerical features. Default to true.
          type: boolean
        dartNormalizeType:
          type: string
          enum:
            - DART_NORMALIZE_TYPE_UNSPECIFIED
            - TREE
            - FOREST
          description: Type of normalization algorithm for boosted tree models using dart booster.
          enumDescriptions:
            - Unspecified dart normalize type.
            - New trees have the same weight of each of dropped trees.
            - New trees have the same weight of sum of dropped trees.
        autoArimaMinOrder:
          type: string
          format: int64
          description: The min value of the sum of non-seasonal p and q.
        earlyStop:
          description: Whether to stop early when the loss doesn't improve significantly any more (compared to min_relative_progress). Used only for iterative training algorithms.
          type: boolean
        itemColumn:
          type: string
          description: Item column specified for matrix factorization models.
        instanceWeightColumn:
          type: string
          description: Name of the instance weight column for training data. This column isn't be used as a feature.
        scaleFeatures:
          type: boolean
          description: 'If true, scale the feature values by dividing the feature standard deviation. Currently only apply to PCA.'
        minRelativeProgress:
          description: 'When early_stop is true, stops training when accuracy improvement is less than ''min_relative_progress''. Used only for iterative training algorithms.'
          type: number
          format: double
        dropout:
          type: number
          description: Dropout probability for dnn models.
          format: double
        batchSize:
          format: int64
          type: string
          description: Batch size for dnn models.
        horizon:
          type: string
          description: The number of periods ahead that need to be forecasted.
          format: int64
        activationFn:
          type: string
          description: Activation function of the neural nets.
        minSplitLoss:
          type: number
          format: double
          description: Minimum split loss for boosted tree models.
        fitIntercept:
          type: boolean
          description: Whether the model should include intercept during model training.
        maxParallelTrials:
          type: string
          format: int64
          description: Maximum number of trials to run in parallel.
        cleanSpikesAndDips:
          type: boolean
          description: 'If true, clean spikes and dips in the input time series.'
        dataFrequency:
          type: string
          enum:
            - DATA_FREQUENCY_UNSPECIFIED
            - AUTO_FREQUENCY
            - YEARLY
            - QUARTERLY
            - MONTHLY
            - WEEKLY
            - DAILY
            - HOURLY
            - PER_MINUTE
          enumDescriptions:
            - ''
            - Automatically inferred from timestamps.
            - Yearly data.
            - Quarterly data.
            - Monthly data.
            - Weekly data.
            - Daily data.
            - Hourly data.
            - Per-minute data.
          description: The data frequency of a time series.
        treeMethod:
          enum:
            - TREE_METHOD_UNSPECIFIED
            - AUTO
            - EXACT
            - APPROX
            - HIST
          enumDescriptions:
            - Unspecified tree method.
            - Use heuristic to choose the fastest method.
            - Exact greedy algorithm.
            - Approximate greedy algorithm using quantile sketch and gradient histogram.
            - Fast histogram optimized approximate greedy algorithm.
          description: Tree construction algorithm for boosted tree models.
          type: string
        kmeansInitializationMethod:
          type: string
          enum:
            - KMEANS_INITIALIZATION_METHOD_UNSPECIFIED
            - RANDOM
            - CUSTOM
            - KMEANS_PLUS_PLUS
          enumDescriptions:
            - Unspecified initialization method.
            - Initializes the centroids randomly.
            - Initializes the centroids using data specified in kmeans_initialization_column.
            - Initializes with kmeans++.
          description: The method used to initialize the centroids for kmeans algorithm.
        timeSeriesIdColumn:
          description: The time series id column that was used during ARIMA model training.
          type: string
        labelClassWeights:
          description: 'Weights associated with each label class, for rebalancing the training data. Only applicable for classification models.'
          type: object
          additionalProperties:
            type: number
            format: double
        hiddenUnits:
          items:
            type: string
            format: int64
          description: Hidden units for dnn models.
          type: array
        inputLabelColumns:
          type: array
          items:
            type: string
          description: Name of input label columns in training data.
        lossType:
          enumDescriptions:
            - ''
            - 'Mean squared loss, used for linear regression.'
            - 'Mean log loss, used for logistic regression.'
          description: Type of loss function used during training run.
          type: string
          enum:
            - LOSS_TYPE_UNSPECIFIED
            - MEAN_SQUARED_LOSS
            - MEAN_LOG_LOSS
        colsampleBynode:
          type: number
          format: double
          description: Subsample ratio of columns for each node(split) for boosted tree models.
        calculatePValues:
          type: boolean
          description: Whether or not p-value test should be computed for this model. Only available for linear and logistic regression models.
        colorSpace:
          type: string
          description: 'Enums for color space, used for processing images in Object Table. See more details at https://www.tensorflow.org/io/tutorials/colorspace.'
          enumDescriptions:
            - Unspecified color space
            - RGB
            - HSV
            - YIQ
            - YUV
            - GRAYSCALE
          enum:
            - COLOR_SPACE_UNSPECIFIED
            - RGB
            - HSV
            - YIQ
            - YUV
            - GRAYSCALE
        approxGlobalFeatureContrib:
          description: Whether to use approximate feature contribution method in XGBoost model explanation for global explain.
          type: boolean
        trendSmoothingWindowSize:
          description: The smoothing window size for the trend component of the time series.
          format: int64
          type: string
        dataSplitEvalFraction:
          format: double
          description: The fraction of evaluation data over the whole input data. The rest of data will be used as training data. The format should be double. Accurate to two decimal places. Default value is 0.2.
          type: number
        enableGlobalExplain:
          type: boolean
          description: 'If true, enable global explanation during training.'
        modelRegistry:
          type: string
          enumDescriptions:
            - ''
            - Vertex AI.
          description: The model registry.
          enum:
            - MODEL_REGISTRY_UNSPECIFIED
            - VERTEX_AI
        feedbackType:
          description: Feedback type that specifies which algorithm to run for matrix factorization.
          enumDescriptions:
            - ''
            - Use weighted-als for implicit feedback problems.
            - Use nonweighted-als for explicit feedback problems.
          enum:
            - FEEDBACK_TYPE_UNSPECIFIED
            - IMPLICIT
            - EXPLICIT
          type: string
        boosterType:
          enum:
            - BOOSTER_TYPE_UNSPECIFIED
            - GBTREE
            - DART
          type: string
          enumDescriptions:
            - Unspecified booster type.
            - Gbtree booster.
            - Dart booster.
          description: Booster type for boosted tree models.
        budgetHours:
          type: number
          description: Budget in hours for AutoML training.
          format: double
        hparamTuningObjectives:
          type: array
          items:
            enum:
              - HPARAM_TUNING_OBJECTIVE_UNSPECIFIED
              - MEAN_ABSOLUTE_ERROR
              - MEAN_SQUARED_ERROR
              - MEAN_SQUARED_LOG_ERROR
              - MEDIAN_ABSOLUTE_ERROR
              - R_SQUARED
              - EXPLAINED_VARIANCE
              - PRECISION
              - RECALL
              - ACCURACY
              - F1_SCORE
              - LOG_LOSS
              - ROC_AUC
              - DAVIES_BOULDIN_INDEX
              - MEAN_AVERAGE_PRECISION
              - NORMALIZED_DISCOUNTED_CUMULATIVE_GAIN
              - AVERAGE_RANK
            enumDescriptions:
              - Unspecified evaluation metric.
              - Mean absolute error. mean_absolute_error = AVG(ABS(label - predicted))
              - 'Mean squared error. mean_squared_error = AVG(POW(label - predicted, 2))'
              - 'Mean squared log error. mean_squared_log_error = AVG(POW(LN(1 + label) - LN(1 + predicted), 2))'
              - 'Mean absolute error. median_absolute_error = APPROX_QUANTILES(absolute_error, 2)[OFFSET(1)]'
              - R^2 score. This corresponds to r2_score in ML.EVALUATE. r_squared = 1 - SUM(squared_error)/(COUNT(label)*VAR_POP(label))
              - Explained variance. explained_variance = 1 - VAR_POP(label_error)/VAR_POP(label)
              - Precision is the fraction of actual positive predictions that had positive actual labels. For multiclass this is a macro-averaged metric treating each class as a binary classifier.
              - Recall is the fraction of actual positive labels that were given a positive prediction. For multiclass this is a macro-averaged metric.
              - Accuracy is the fraction of predictions given the correct label. For multiclass this is a globally micro-averaged metric.
              - The F1 score is an average of recall and precision. For multiclass this is a macro-averaged metric.
              - Logorithmic Loss. For multiclass this is a macro-averaged metric.
              - Area Under an ROC Curve. For multiclass this is a macro-averaged metric.
              - Davies-Bouldin Index.
              - Mean Average Precision.
              - Normalized Discounted Cumulative Gain.
              - Average Rank.
            type: string
          description: The target evaluation metrics to optimize the hyperparameters for.
        modelUri:
          description: Google Cloud Storage URI from which the model was imported. Only applicable for imported models.
          type: string
        userColumn:
          description: User column specified for matrix factorization models.
          type: string
        optimizer:
          description: Optimizer used for training the neural nets.
          type: string
        sampledShapleyNumPaths:
          type: string
          format: int64
          description: Number of paths for the sampled Shapley explain method.
        vertexAiModelVersionAliases:
          items:
            type: string
          description: The version aliases to apply in Vertex AI model registry. Always overwrite if the version aliases exists in a existing model.
          type: array
        numParallelTree:
          type: string
          format: int64
          description: Number of parallel trees constructed during each iteration for boosted tree models.
        dataSplitMethod:
          description: 'The data split type for training and evaluation, e.g. RANDOM.'
          enumDescriptions:
            - ''
            - Splits data randomly.
            - Splits data with the user provided tags.
            - Splits data sequentially.
            - Data split will be skipped.
            - 'Splits data automatically: Uses NO_SPLIT if the data size is small. Otherwise uses RANDOM.'
          type: string
          enum:
            - DATA_SPLIT_METHOD_UNSPECIFIED
            - RANDOM
            - CUSTOM
            - SEQUENTIAL
            - NO_SPLIT
            - AUTO_SPLIT
        distanceType:
          description: Distance type for clustering models.
          enumDescriptions:
            - ''
            - Eculidean distance.
            - Cosine distance.
          enum:
            - DISTANCE_TYPE_UNSPECIFIED
            - EUCLIDEAN
            - COSINE
          type: string
        optimizationStrategy:
          enumDescriptions:
            - ''
            - Uses an iterative batch gradient descent algorithm.
            - Uses a normal equation to solve linear regression problem.
          type: string
          enum:
            - OPTIMIZATION_STRATEGY_UNSPECIFIED
            - BATCH_GRADIENT_DESCENT
            - NORMAL_EQUATION
          description: Optimization strategy for training linear regression models.
        pcaExplainedVarianceRatio:
          type: number
          format: double
          description: The minimum ratio of cumulative explained variance that needs to be given by the PCA model.
        timeSeriesDataColumn:
          type: string
          description: Column to be designated as time series data for ARIMA model.
        xgboostVersion:
          description: User-selected XGBoost versions for training of XGBoost models.
          type: string
        holidayRegion:
          type: string
          enum:
            - HOLIDAY_REGION_UNSPECIFIED
            - GLOBAL
            - NA
            - JAPAC
            - EMEA
            - LAC
            - AE
            - AR
            - AT
            - AU
            - BE
            - BR
            - CA
            - CH
            - CL
            - CN
            - CO
            - CS
            - CZ
            - DE
            - DK
            - DZ
            - EC
            - EE
            - EG
            - ES
            - FI
            - FR
            - GB
            - GR
            - HK
            - HU
            - ID
            - IE
            - IL
            - IN
            - IR
            - IT
            - JP
            - KR
            - LV
            - MA
            - MX
            - MY
            - NG
            - NL
            - 'NO'
            - NZ
            - PE
            - PH
            - PK
            - PL
            - PT
            - RO
            - RS
            - RU
            - SA
            - SE
            - SG
            - SI
            - SK
            - TH
            - TR
            - TW
            - UA
            - US
            - VE
            - VN
            - ZA
          description: 'The geographical region based on which the holidays are considered in time series modeling. If a valid value is specified, then holiday effects modeling is enabled.'
          enumDescriptions:
            - Holiday region unspecified.
            - Global.
            - North America.
            - 'Japan and Asia Pacific: Korea, Greater China, India, Australia, and New Zealand.'
            - 'Europe, the Middle East and Africa.'
            - Latin America and the Caribbean.
            - United Arab Emirates
            - Argentina
            - Austria
            - Australia
            - Belgium
            - Brazil
            - Canada
            - Switzerland
            - Chile
            - China
            - Colombia
            - Czechoslovakia
            - Czech Republic
            - Germany
            - Denmark
            - Algeria
            - Ecuador
            - Estonia
            - Egypt
            - Spain
            - Finland
            - France
            - Great Britain (United Kingdom)
            - Greece
            - Hong Kong
            - Hungary
            - Indonesia
            - Ireland
            - Israel
            - India
            - Iran
            - Italy
            - Japan
            - Korea (South)
            - Latvia
            - Morocco
            - Mexico
            - Malaysia
            - Nigeria
            - Netherlands
            - Norway
            - New Zealand
            - Peru
            - Philippines
            - Pakistan
            - Poland
            - Portugal
            - Romania
            - Serbia
            - Russian Federation
            - Saudi Arabia
            - Sweden
            - Singapore
            - Slovenia
            - Slovakia
            - Thailand
            - Turkey
            - Taiwan
            - Ukraine
            - United States
            - Venezuela
            - Viet Nam
            - South Africa
        autoArimaMaxOrder:
          format: int64
          type: string
          description: The max value of the sum of non-seasonal p and q.
        numPrincipalComponents:
          format: int64
          type: string
          description: Number of principal components to keep in the PCA model. Must be <= the number of features.
        numTrials:
          type: string
          format: int64
          description: Number of trials to run this hyperparameter tuning job.
        numClusters:
          format: int64
          description: Number of clusters for clustering models.
          type: string
        decomposeTimeSeries:
          type: boolean
          description: 'If true, perform decompose time series and save the results.'
        walsAlpha:
          description: Hyperparameter for matrix factoration when implicit feedback type is specified.
          format: double
          type: number
        includeDrift:
          description: Include drift when fitting an ARIMA model.
          type: boolean
        dataSplitColumn:
          type: string
          description: 'The column to split data with. This column won''t be used as a feature. 1. When data_split_method is CUSTOM, the corresponding column should be boolean. The rows with true value tag are eval data, and the false are training data. 2. When data_split_method is SEQ, the first DATA_SPLIT_EVAL_FRACTION rows (from smallest to largest) in the corresponding column are used as training data, and the rest are eval data. It respects the order in Orderable data types: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#data-type-properties'
        learnRate:
          description: Learning rate in training. Used only for iterative training algorithms.
          type: number
          format: double
        subsample:
          type: number
          description: Subsample fraction of the training data to grow tree to prevent overfitting for boosted tree models.
          format: double
        timeSeriesLengthFraction:
          description: Get truncated length by fraction in time series.
          format: double
          type: number
        integratedGradientsNumSteps:
          format: int64
          description: Number of integral steps for the integrated gradients explain method.
          type: string
        initialLearnRate:
          format: double
          type: number
          description: Specifies the initial learning rate for the line search learn rate strategy.
        maxTimeSeriesLength:
          type: string
          format: int64
          description: Get truncated length by last n points in time series. Use separately from time_series_length_fraction and min_time_series_length.
        nonSeasonalOrder:
          description: 'A specification of the non-seasonal part of the ARIMA model: the three components (p, d, q) are the AR order, the degree of differencing, and the MA order.'
          $ref: '#/components/schemas/ArimaOrder'
        timeSeriesIdColumns:
          type: array
          description: The time series id columns that were used during ARIMA model training.
          items:
            type: string
        tfVersion:
          type: string
          description: 'Based on the selected TF version, the corresponding docker image is used to train external models.'
        autoArima:
          description: Whether to enable auto ARIMA or not.
          type: boolean
        pcaSolver:
          enumDescriptions:
            - ''
            - Full eigen-decoposition.
            - Randomized SVD.
            - Auto.
          enum:
            - UNSPECIFIED
            - FULL
            - RANDOMIZED
            - AUTO
          type: string
          description: The solver for PCA.
        warmStart:
          description: Whether to train a model from the last checkpoint.
          type: boolean
        maxTreeDepth:
          description: Maximum depth of a tree for boosted tree models.
          format: int64
          type: string
        timeSeriesTimestampColumn:
          description: Column to be designated as time series timestamp for ARIMA model.
          type: string
        numFactors:
          format: int64
          description: Num factors specified for matrix factorization models.
          type: string
        kmeansInitializationColumn:
          type: string
          description: The column used to provide the initial centroids for kmeans algorithm when kmeans_initialization_method is CUSTOM.
        adjustStepChanges:
          type: boolean
          description: 'If true, detect step changes and make data adjustment in the input time series.'
        l2Regularization:
          type: number
          format: double
          description: L2 regularization coefficient.
        autoClassWeights:
          description: Whether to calculate class weights automatically based on the popularity of each label.
          type: boolean
        maxIterations:
          description: The maximum number of iterations in training. Used only for iterative training algorithms.
          format: int64
          type: string
        colsampleBytree:
          format: double
          description: Subsample ratio of columns when constructing each tree for boosted tree models.
          type: number
        minTimeSeriesLength:
          type: string
          description: Set fast trend ARIMA_PLUS model minimum training length. Use in pair with time_series_length_fraction.
          format: int64
        l1RegActivation:
          format: double
          description: L1 regularization coefficient to activations.
          type: number
        learnRateStrategy:
          enumDescriptions:
            - ''
            - Use line search to determine learning rate.
            - Use a constant learning rate.
          description: The strategy to determine learn rate for the current iteration.
          enum:
            - LEARN_RATE_STRATEGY_UNSPECIFIED
            - LINE_SEARCH
            - CONSTANT
          type: string
      type: object
      description: Options used in model training.
      id: TrainingOptions
    TableConstraints:
      id: TableConstraints
      properties:
        foreignKeys:
          description: '[Optional] The foreign keys of the tables.'
          items:
            type: object
            properties:
              name:
                type: string
              referencedTable:
                properties:
                  datasetId:
                    type: string
                  projectId:
                    type: string
                  tableId:
                    type: string
                type: object
              columnReferences:
                type: array
                items:
                  properties:
                    referencingColumn:
                      type: string
                    referencedColumn:
                      type: string
                  type: object
          type: array
        primaryKey:
          type: object
          properties:
            columns:
              type: array
              items:
                type: string
          description: '[Optional] The primary key of the table.'
      type: object
    Routine:
      id: Routine
      properties:
        description:
          description: 'Optional. The description of the routine, if defined.'
          type: string
        remoteFunctionOptions:
          description: Optional. Remote function specific options.
          $ref: '#/components/schemas/RemoteFunctionOptions'
        language:
          description: 'Optional. Defaults to "SQL" if remote_function_options field is absent, not set otherwise.'
          type: string
          enumDescriptions:
            - ''
            - SQL language.
            - JavaScript language.
            - Python language.
            - Java language.
            - Scala language.
          enum:
            - LANGUAGE_UNSPECIFIED
            - SQL
            - JAVASCRIPT
            - PYTHON
            - JAVA
            - SCALA
        lastModifiedTime:
          type: string
          format: int64
          readOnly: true
          description: 'Output only. The time when this routine was last modified, in milliseconds since the epoch.'
        definitionBody:
          description: 'Required. The body of the routine. For functions, this is the expression in the AS clause. If language=SQL, it is the substring inside (but excluding) the parentheses. For example, for the function created with the following statement: `CREATE FUNCTION JoinLines(x string, y string) as (concat(x, "\n", y))` The definition_body is `concat(x, "\n", y)` (\n is not replaced with linebreak). If language=JAVASCRIPT, it is the evaluated string in the AS clause. For example, for the function created with the following statement: `CREATE FUNCTION f() RETURNS STRING LANGUAGE js AS ''return "\n";\n''` The definition_body is `return "\n";\n` Note that both \n are replaced with linebreaks.'
          type: string
        sparkOptions:
          description: Optional. Spark specific options.
          $ref: '#/components/schemas/SparkOptions'
        strictMode:
          description: 'Optional. Can be set for procedures only. If true (default), the definition body will be validated in the creation and the updates of the procedure. For procedures with an argument of ANY TYPE, the definition body validtion is not supported at creation/update time, and thus this field must be set to false explicitly.'
          type: boolean
        returnTableType:
          $ref: '#/components/schemas/StandardSqlTableType'
          description: 'Optional. Can be set only if routine_type = "TABLE_VALUED_FUNCTION". If absent, the return table type is inferred from definition_body at query time in each query that references this routine. If present, then the columns in the evaluated table result will be cast to match the column types specified in return table type, at query time.'
        importedLibraries:
          type: array
          items:
            type: string
          description: 'Optional. If language = "JAVASCRIPT", this field stores the path of the imported JAVASCRIPT libraries.'
        returnType:
          $ref: '#/components/schemas/StandardSqlDataType'
          description: 'Optional if language = "SQL"; required otherwise. Cannot be set if routine_type = "TABLE_VALUED_FUNCTION". If absent, the return type is inferred from definition_body at query time in each query that references this routine. If present, then the evaluated result will be cast to the specified returned type at query time. For example, for the functions created with the following statements: * `CREATE FUNCTION Add(x FLOAT64, y FLOAT64) RETURNS FLOAT64 AS (x + y);` * `CREATE FUNCTION Increment(x FLOAT64) AS (Add(x, 1));` * `CREATE FUNCTION Decrement(x FLOAT64) RETURNS FLOAT64 AS (Add(x, -1));` The return_type is `{type_kind: "FLOAT64"}` for `Add` and `Decrement`, and is absent for `Increment` (inferred as FLOAT64 at query time). Suppose the function `Add` is replaced by `CREATE OR REPLACE FUNCTION Add(x INT64, y INT64) AS (x + y);` Then the inferred return type of `Increment` is automatically changed to INT64 at query time, while the return type of `Decrement` remains FLOAT64.'
        routineReference:
          description: Required. Reference describing the ID of this routine.
          $ref: '#/components/schemas/RoutineReference'
        determinismLevel:
          enum:
            - DETERMINISM_LEVEL_UNSPECIFIED
            - DETERMINISTIC
            - NOT_DETERMINISTIC
          type: string
          description: 'Optional. The determinism level of the JavaScript UDF, if defined.'
          enumDescriptions:
            - The determinism of the UDF is unspecified.
            - 'The UDF is deterministic, meaning that 2 function calls with the same inputs always produce the same result, even across 2 query runs.'
            - The UDF is not deterministic.
        creationTime:
          readOnly: true
          format: int64
          description: 'Output only. The time when this routine was created, in milliseconds since the epoch.'
          type: string
        routineType:
          enum:
            - ROUTINE_TYPE_UNSPECIFIED
            - SCALAR_FUNCTION
            - PROCEDURE
            - TABLE_VALUED_FUNCTION
            - AGGREGATE_FUNCTION
          type: string
          enumDescriptions:
            - ''
            - Non-built-in persistent scalar function.
            - Stored procedure.
            - Non-built-in persistent TVF.
            - Non-built-in persistent aggregate function.
          description: Required. The type of routine.
        arguments:
          type: array
          items:
            $ref: '#/components/schemas/Argument'
          description: Optional.
        etag:
          description: Output only. A hash of this resource.
          readOnly: true
          type: string
      type: object
      description: A user-defined function or a stored procedure.
    JobList:
      type: object
      id: JobList
      properties:
        etag:
          type: string
          description: A hash of this page of results.
        nextPageToken:
          description: A token to request the next page of results.
          type: string
        jobs:
          type: array
          description: List of jobs that were requested.
          items:
            type: object
            properties:
              errorResult:
                $ref: '#/components/schemas/ErrorProto'
                description: A result object that will be present only if the job has failed.
              jobReference:
                description: Job reference uniquely identifying the job.
                $ref: '#/components/schemas/JobReference'
              kind:
                type: string
                default: bigquery#job
                description: The resource type.
              user_email:
                type: string
                description: '[Full-projection-only] Email address of the user who ran the job.'
              status:
                description: '[Full-projection-only] Describes the state of the job.'
                $ref: '#/components/schemas/JobStatus'
              configuration:
                $ref: '#/components/schemas/JobConfiguration'
                description: '[Full-projection-only] Specifies the job configuration.'
              state:
                description: 'Running state of the job. When the state is DONE, errorResult can be checked to determine whether the job succeeded or failed.'
                type: string
              statistics:
                description: '[Output-only] Information about the job, including starting time and ending time of the job.'
                $ref: '#/components/schemas/JobStatistics'
              id:
                type: string
                description: Unique opaque ID of the job.
        kind:
          type: string
          description: The resource type of the response.
          default: bigquery#jobList
    MaterializedViewDefinition:
      type: object
      properties:
        query:
          type: string
          description: '[Required] A query whose result is persisted.'
        refreshIntervalMs:
          format: int64
          description: '[Optional] [TrustedTester] The maximum frequency at which this materialized view will be refreshed. The default value is "1800000" (30 minutes).'
          type: string
        maxStaleness:
          format: byte
          type: string
          description: '[Optional] Max staleness of data that could be returned when materizlized view is queried (formatted as Google SQL Interval type).'
        enableRefresh:
          type: boolean
          description: '[Optional] [TrustedTester] Enable automatic refresh of the materialized view when the base table is updated. The default value is "true".'
        lastRefreshTime:
          type: string
          format: int64
          description: '[Output-only] [TrustedTester] The time when this materialized view was last modified, in milliseconds since the epoch.'
        allow_non_incremental_definition:
          type: boolean
          description: '[Optional] Allow non incremental materialized view definition. The default value is "false".'
      id: MaterializedViewDefinition
    JobConfigurationExtract:
      id: JobConfigurationExtract
      type: object
      properties:
        printHeader:
          description: '[Optional] Whether to print out a header row in the results. Default is true. Not applicable when extracting models.'
          type: boolean
          default: 'true'
        destinationFormat:
          type: string
          description: '[Optional] The exported file format. Possible values include CSV, NEWLINE_DELIMITED_JSON, PARQUET or AVRO for tables and ML_TF_SAVED_MODEL or ML_XGBOOST_BOOSTER for models. The default value for tables is CSV. Tables with nested or repeated fields cannot be exported as CSV. The default value for models is ML_TF_SAVED_MODEL.'
        useAvroLogicalTypes:
          type: boolean
          description: '[Optional] If destinationFormat is set to "AVRO", this flag indicates whether to enable extracting applicable column types (such as TIMESTAMP) to their corresponding AVRO logical types (timestamp-micros), instead of only using their raw types (avro-long). Not applicable when extracting models.'
        sourceModel:
          description: A reference to the model being exported.
          $ref: '#/components/schemas/ModelReference'
        fieldDelimiter:
          description: '[Optional] Delimiter to use between fields in the exported data. Default is '',''. Not applicable when extracting models.'
          type: string
        compression:
          type: string
          description: '[Optional] The compression type to use for exported files. Possible values include GZIP, DEFLATE, SNAPPY, and NONE. The default value is NONE. DEFLATE and SNAPPY are only supported for Avro. Not applicable when extracting models.'
        sourceTable:
          $ref: '#/components/schemas/TableReference'
          description: A reference to the table being exported.
        destinationUris:
          type: array
          items:
            type: string
          description: '[Pick one] A list of fully-qualified Google Cloud Storage URIs where the extracted table should be written.'
        destinationUri:
          description: '[Pick one] DEPRECATED: Use destinationUris instead, passing only one URI as necessary. The fully-qualified Google Cloud Storage URI where the extracted table should be written.'
          type: string
    ExplainQueryStage:
      properties:
        parallelInputs:
          format: int64
          description: Number of parallel input segments to be processed.
          type: string
        completedParallelInputs:
          type: string
          description: Number of parallel input segments completed.
          format: int64
        writeRatioMax:
          description: Relative amount of time the slowest shard spent on writing output.
          type: number
          format: double
        waitMsMax:
          description: Milliseconds the slowest shard spent waiting to be scheduled.
          type: string
          format: int64
        endMs:
          type: string
          format: int64
          description: Stage end time represented as milliseconds since epoch.
        recordsWritten:
          format: int64
          description: Number of records written by the stage.
          type: string
        id:
          description: Unique ID for stage within plan.
          type: string
          format: int64
        computeMsAvg:
          format: int64
          type: string
          description: Milliseconds the average shard spent on CPU-bound tasks.
        readRatioMax:
          type: number
          format: double
          description: Relative amount of time the slowest shard spent reading input.
        startMs:
          description: Stage start time represented as milliseconds since epoch.
          format: int64
          type: string
        shuffleOutputBytesSpilled:
          description: Total number of bytes written to shuffle and spilled to disk.
          format: int64
          type: string
        waitRatioMax:
          description: Relative amount of time the slowest shard spent waiting to be scheduled.
          format: double
          type: number
        writeMsAvg:
          description: Milliseconds the average shard spent on writing output.
          format: int64
          type: string
        computeRatioAvg:
          type: number
          description: Relative amount of time the average shard spent on CPU-bound tasks.
          format: double
        shuffleOutputBytes:
          format: int64
          type: string
          description: Total number of bytes written to shuffle.
        computeMsMax:
          description: Milliseconds the slowest shard spent on CPU-bound tasks.
          format: int64
          type: string
        computeRatioMax:
          description: Relative amount of time the slowest shard spent on CPU-bound tasks.
          type: number
          format: double
        readMsMax:
          format: int64
          description: Milliseconds the slowest shard spent reading input.
          type: string
        waitRatioAvg:
          type: number
          description: Relative amount of time the average shard spent waiting to be scheduled.
          format: double
        recordsRead:
          description: Number of records read into the stage.
          type: string
          format: int64
        writeRatioAvg:
          format: double
          description: Relative amount of time the average shard spent on writing output.
          type: number
        waitMsAvg:
          type: string
          description: Milliseconds the average shard spent waiting to be scheduled.
          format: int64
        writeMsMax:
          description: Milliseconds the slowest shard spent on writing output.
          format: int64
          type: string
        name:
          description: Human-readable name for stage.
          type: string
        readMsAvg:
          type: string
          description: Milliseconds the average shard spent reading input.
          format: int64
        readRatioAvg:
          description: Relative amount of time the average shard spent reading input.
          type: number
          format: double
        steps:
          description: List of operations within the stage in dependency order (approximately chronological).
          type: array
          items:
            $ref: '#/components/schemas/ExplainQueryStep'
        status:
          description: Current status for the stage.
          type: string
        inputStages:
          type: array
          description: IDs for stages that are inputs to this stage.
          items:
            type: string
            format: int64
        slotMs:
          type: string
          description: Slot-milliseconds used by the stage.
          format: int64
      id: ExplainQueryStage
      type: object
    MultiClassClassificationMetrics:
      description: Evaluation metrics for multi-class classification/classifier models.
      id: MultiClassClassificationMetrics
      type: object
      properties:
        aggregateClassificationMetrics:
          $ref: '#/components/schemas/AggregateClassificationMetrics'
          description: Aggregate classification metrics.
        confusionMatrixList:
          items:
            $ref: '#/components/schemas/ConfusionMatrix'
          description: Confusion matrix at different thresholds.
          type: array
    SparkOptions:
      id: SparkOptions
      description: Options for a user-defined Spark routine.
      properties:
        pyFileUris:
          type: array
          items:
            type: string
          description: 'Python files to be placed on the PYTHONPATH for PySpark application. Supported file types: `.py`, `.egg`, and `.zip`. For more information about Apache Spark, see [Apache Spark](https://spark.apache.org/docs/latest/index.html).'
        properties:
          type: object
          description: 'Configuration properties as a set of key/value pairs, which will be passed on to the Spark application. For more information, see [Apache Spark](https://spark.apache.org/docs/latest/index.html) and the [procedure option list](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language#procedure_option_list).'
          additionalProperties:
            type: string
        containerImage:
          description: Custom container image for the runtime environment.
          type: string
        mainFileUri:
          description: The main file/jar URI of the Spark application. Exactly one of the definition_body field and the main_file_uri field must be set for Python. Exactly one of main_class and main_file_uri field should be set for Java/Scala language type.
          type: string
        jarUris:
          type: array
          description: 'JARs to include on the driver and executor CLASSPATH. For more information about Apache Spark, see [Apache Spark](https://spark.apache.org/docs/latest/index.html).'
          items:
            type: string
        fileUris:
          type: array
          description: 'Files to be placed in the working directory of each executor. For more information about Apache Spark, see [Apache Spark](https://spark.apache.org/docs/latest/index.html).'
          items:
            type: string
        mainClass:
          type: string
          description: 'The fully qualified name of a class in jar_uris, for example, com.example.wordcount. Exactly one of main_class and main_jar_uri field should be set for Java/Scala language type.'
        connection:
          type: string
          description: 'Fully qualified name of the user-provided Spark connection object. Format: ```"projects/{project_id}/locations/{location_id}/connections/{connection_id}"```'
        archiveUris:
          items:
            type: string
          type: array
          description: 'Archive files to be extracted into the working directory of each executor. For more information about Apache Spark, see [Apache Spark](https://spark.apache.org/docs/latest/index.html).'
        runtimeVersion:
          description: 'Runtime version. If not specified, the default runtime version is used.'
          type: string
      type: object
    Clustering:
      properties:
        fields:
          description: '[Repeated] One or more fields on which data should be clustered. Only top-level, non-repeated, simple-type fields are supported. When you cluster a table using multiple columns, the order of columns you specify is important. The order of the specified columns determines the sort order of the data.'
          type: array
          items:
            type: string
      type: object
      id: Clustering
    Cluster:
      type: object
      id: Cluster
      properties:
        featureValues:
          type: array
          items:
            $ref: '#/components/schemas/FeatureValue'
          description: Values of highly variant features for this cluster.
        centroidId:
          format: int64
          type: string
          description: Centroid id.
        count:
          description: Count of training data rows that were assigned to this cluster.
          type: string
          format: int64
      description: Message containing the information about one cluster.
    Expr:
      type: object
      properties:
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        location:
          type: string
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: Expr
    TransactionInfo:
      id: TransactionInfo
      type: object
      properties:
        transactionId:
          type: string
          description: '[Output-only] // [Alpha] Id of the transaction.'
    JobStatus:
      type: object
      id: JobStatus
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ErrorProto'
          description: '[Output-only] The first errors encountered during the running of the job. The final message includes the number of errors that caused the process to stop. Errors here do not necessarily mean that the job has completed or was unsuccessful.'
          type: array
        errorResult:
          $ref: '#/components/schemas/ErrorProto'
          description: '[Output-only] Final error result of the job. If present, indicates that the job has completed and was unsuccessful.'
        state:
          type: string
          description: '[Output-only] Running state of the job.'
    ErrorProto:
      id: ErrorProto
      properties:
        message:
          description: A human-readable description of the error.
          type: string
        debugInfo:
          description: Debugging information. This property is internal to Google and should not be used.
          type: string
        location:
          description: 'Specifies where the error occurred, if present.'
          type: string
        reason:
          type: string
          description: A short error code that summarizes the error.
      type: object
    ArimaFittingMetrics:
      id: ArimaFittingMetrics
      type: object
      description: ARIMA model fitting metrics.
      properties:
        logLikelihood:
          type: number
          format: double
          description: Log-likelihood.
        aic:
          type: number
          description: AIC.
          format: double
        variance:
          description: Variance.
          format: double
          type: number
    JobConfigurationTableCopy:
      id: JobConfigurationTableCopy
      type: object
      properties:
        destinationTable:
          description: '[Required] The destination table'
          $ref: '#/components/schemas/TableReference'
        destinationEncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
          description: 'Custom encryption configuration (e.g., Cloud KMS keys).'
        sourceTables:
          description: '[Pick one] Source tables to copy.'
          items:
            $ref: '#/components/schemas/TableReference'
          type: array
        sourceTable:
          $ref: '#/components/schemas/TableReference'
          description: '[Pick one] Source table to copy.'
        writeDisposition:
          description: '[Optional] Specifies the action that occurs if the destination table already exists. The following values are supported: WRITE_TRUNCATE: If the table already exists, BigQuery overwrites the table data. WRITE_APPEND: If the table already exists, BigQuery appends the data to the table. WRITE_EMPTY: If the table already exists and contains data, a ''duplicate'' error is returned in the job result. The default value is WRITE_EMPTY. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Creation, truncation and append actions occur as one atomic update upon job completion.'
          type: string
        createDisposition:
          description: '[Optional] Specifies whether the job is allowed to create new tables. The following values are supported: CREATE_IF_NEEDED: If the table does not exist, BigQuery creates the table. CREATE_NEVER: The table must already exist. If it does not, a ''notFound'' error is returned in the job result. The default value is CREATE_IF_NEEDED. Creation, truncation and append actions occur as one atomic update upon job completion.'
          type: string
        operationType:
          type: string
          description: '[Optional] Supported operation types in table copy job.'
        destinationExpirationTime:
          description: '[Optional] The time when the destination table expires. Expired tables will be deleted and their storage reclaimed.'
          type: any
    IntArrayHparamSearchSpace:
      description: Search space for int array.
      type: object
      properties:
        candidates:
          type: array
          description: Candidates for the int array parameter.
          items:
            $ref: '#/components/schemas/IntArray'
      id: IntArrayHparamSearchSpace
    RemoteFunctionOptions:
      type: object
      properties:
        endpoint:
          description: 'Endpoint of the user-provided remote service, e.g. ```https://us-east1-my_gcf_project.cloudfunctions.net/remote_add```'
          type: string
        userDefinedContext:
          type: object
          additionalProperties:
            type: string
          description: 'User-defined context as a set of key/value pairs, which will be sent as function invocation context together with batched arguments in the requests to the remote service. The total number of bytes of keys and values must be less than 8KB.'
        maxBatchingRows:
          type: string
          description: 'Max number of rows in each batch sent to the remote service. If absent or if 0, BigQuery dynamically decides the number of rows in a batch.'
          format: int64
        connection:
          description: 'Fully qualified name of the user-provided connection object which holds the authentication information to send requests to the remote service. Format: ```"projects/{projectId}/locations/{locationId}/connections/{connectionId}"```'
          type: string
      id: RemoteFunctionOptions
      description: Options for a remote user-defined function.
    EvaluationMetrics:
      type: object
      properties:
        multiClassClassificationMetrics:
          description: Populated for multi-class classification/classifier models.
          $ref: '#/components/schemas/MultiClassClassificationMetrics'
        clusteringMetrics:
          description: Populated for clustering models.
          $ref: '#/components/schemas/ClusteringMetrics'
        regressionMetrics:
          $ref: '#/components/schemas/RegressionMetrics'
          description: Populated for regression models and explicit feedback type matrix factorization models.
        dimensionalityReductionMetrics:
          $ref: '#/components/schemas/DimensionalityReductionMetrics'
          description: 'Evaluation metrics when the model is a dimensionality reduction model, which currently includes PCA.'
        rankingMetrics:
          description: Populated for implicit feedback type matrix factorization models.
          $ref: '#/components/schemas/RankingMetrics'
        binaryClassificationMetrics:
          description: Populated for binary classification/classifier models.
          $ref: '#/components/schemas/BinaryClassificationMetrics'
        arimaForecastingMetrics:
          description: Populated for ARIMA models.
          $ref: '#/components/schemas/ArimaForecastingMetrics'
      id: EvaluationMetrics
      description: Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
    JobCancelResponse:
      properties:
        kind:
          type: string
          default: bigquery#jobCancelResponse
          description: The resource type of the response.
        job:
          $ref: '#/components/schemas/Job'
          description: The final state of the job.
      type: object
      id: JobCancelResponse
    IterationResult:
      id: IterationResult
      type: object
      properties:
        learnRate:
          description: Learn rate used for this iteration.
          type: number
          format: double
        trainingLoss:
          description: Loss computed on the training data at the end of iteration.
          format: double
          type: number
        durationMs:
          description: Time taken to run the iteration in milliseconds.
          type: string
          format: int64
        evalLoss:
          type: number
          description: Loss computed on the eval data at the end of iteration.
          format: double
        index:
          format: int32
          type: integer
          description: 'Index of the iteration, 0 based.'
    SnapshotDefinition:
      id: SnapshotDefinition
      properties:
        baseTableReference:
          description: '[Required] Reference describing the ID of the table that was snapshot.'
          $ref: '#/components/schemas/TableReference'
        snapshotTime:
          format: date-time
          type: string
          description: '[Required] The time at which the base table was snapshot. This value is reported in the JSON response using RFC3339 format.'
      type: object
    BigtableOptions:
      properties:
        ignoreUnspecifiedColumnFamilies:
          description: '[Optional] If field is true, then the column families that are not specified in columnFamilies list are not exposed in the table schema. Otherwise, they are read with BYTES type values. The default value is false.'
          type: boolean
        readRowkeyAsString:
          type: boolean
          description: '[Optional] If field is true, then the rowkey column families will be read and converted to string. Otherwise they are read with BYTES type values and users need to manually cast them with CAST if necessary. The default value is false.'
        columnFamilies:
          type: array
          items:
            $ref: '#/components/schemas/BigtableColumnFamily'
          description: '[Optional] List of column families to expose in the table schema along with their types. This list restricts the column families that can be referenced in queries and specifies their value types. You can use this list to do type conversions - see the ''type'' field for more details. If you leave this list empty, all column families are present in the table schema and their values are read as BYTES. During a query only the column families referenced in that query are read from Bigtable.'
      id: BigtableOptions
      type: object
    Explanation:
      description: Explanation for a single feature.
      properties:
        featureName:
          description: 'The full feature name. For non-numerical features, will be formatted like `.`. Overall size of feature name will always be truncated to first 120 characters.'
          type: string
        attribution:
          description: Attribution of feature.
          type: number
          format: double
      type: object
      id: Explanation
    BiEngineStatistics:
      properties:
        biEngineReasons:
          type: array
          description: 'In case of DISABLED or PARTIAL bi_engine_mode, these contain the explanatory reasons as to why BI Engine could not accelerate. In case the full query was accelerated, this field is not populated.'
          items:
            $ref: '#/components/schemas/BiEngineReason'
        accelerationMode:
          default: ''
          type: string
          description: '[Output-only] Specifies which mode of BI Engine acceleration was performed (if any).'
        biEngineMode:
          type: string
          default: ''
          description: '[Output-only] Specifies which mode of BI Engine acceleration was performed (if any).'
      id: BiEngineStatistics
      type: object
    QueryTimelineSample:
      id: QueryTimelineSample
      type: object
      properties:
        elapsedMs:
          format: int64
          description: Milliseconds elapsed since the start of query execution.
          type: string
        estimatedRunnableUnits:
          description: 'Units of work that can be scheduled immediately. Providing additional slots for these units of work will speed up the query, provided no other query in the reservation needs additional slots.'
          format: int64
          type: string
        activeUnits:
          description: Total number of units currently being processed by workers. This does not correspond directly to slot usage. This is the largest value observed since the last sample.
          type: string
          format: int64
        totalSlotMs:
          type: string
          format: int64
          description: Cumulative slot-ms consumed by the query.
        completedUnits:
          format: int64
          type: string
          description: Total parallel units of work completed by this query.
        pendingUnits:
          type: string
          description: Total units of work remaining for the query. This number can be revised (increased or decreased) while the query is running.
          format: int64
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
        updateMask:
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
      type: object
      id: SetIamPolicyRequest
    DatasetList:
      properties:
        nextPageToken:
          type: string
          description: A token that can be used to request the next results page. This property is omitted on the final results page.
        etag:
          description: A hash value of the results page. You can use this property to determine if the page has changed since the last request.
          type: string
        datasets:
          items:
            properties:
              kind:
                default: bigquery#dataset
                type: string
                description: The resource type. This property always returns the value "bigquery#dataset".
              friendlyName:
                description: 'A descriptive name for the dataset, if one exists.'
                type: string
              datasetReference:
                description: 'The dataset reference. Use this property to access specific parts of the dataset''s ID, such as project ID or dataset ID.'
                $ref: '#/components/schemas/DatasetReference'
              labels:
                additionalProperties:
                  type: string
                description: The labels associated with this dataset. You can use these to organize and group your datasets.
                type: object
              location:
                type: string
                description: The geographic location where the data resides.
              id:
                description: 'The fully-qualified, unique, opaque ID of the dataset.'
                type: string
            type: object
          type: array
          description: 'An array of the dataset resources in the project. Each resource contains basic information. For full information about a particular dataset resource, use the Datasets: get method. This property is omitted when there are no datasets in the project.'
        kind:
          type: string
          description: The list type. This property always returns the value "bigquery#datasetList".
          default: bigquery#datasetList
      type: object
      id: DatasetList
    AuditLogConfig:
      type: object
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      properties:
        exemptedMembers:
          type: array
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
          description: The log type that this config enables.
      id: AuditLogConfig
    AvroOptions:
      id: AvroOptions
      properties:
        useAvroLogicalTypes:
          type: boolean
          description: '[Optional] If sourceFormat is set to "AVRO", indicates whether to interpret logical types as the corresponding BigQuery data type (for example, TIMESTAMP), instead of using the raw type (for example, INTEGER).'
      type: object
    RowAccessPolicyReference:
      properties:
        tableId:
          type: string
          description: Required. The ID of the table containing this row access policy.
        policyId:
          type: string
          description: 'Required. The ID of the row access policy. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 256 characters.'
        datasetId:
          description: Required. The ID of the dataset containing this row access policy.
          type: string
        projectId:
          description: Required. The ID of the project containing this row access policy.
          type: string
      type: object
      id: RowAccessPolicyReference
    QueryRequest:
      properties:
        createSession:
          description: 'If true, creates a new session, where session id will be a server generated random id. If false, runs query with an existing session_id passed in ConnectionProperty, otherwise runs query in non-session mode.'
          type: boolean
        parameterMode:
          description: Standard SQL only. Set to POSITIONAL to use positional (?) query parameters or to NAMED to use named (@myparam) query parameters in this query.
          type: string
        timeoutMs:
          description: '[Optional] How long to wait for the query to complete, in milliseconds, before the request times out and returns. Note that this is only a timeout for the request, not the query. If the query takes longer to run than the timeout value, the call returns without any results and with the ''jobComplete'' flag set to false. You can call GetQueryResults() to wait for the query to complete and read the results. The default value is 10000 milliseconds (10 seconds).'
          format: uint32
          type: integer
        query:
          description: '[Required] A query string, following the BigQuery query syntax, of the query to execute. Example: "SELECT count(f1) FROM [myProjectId:myDatasetId.myTableId]".'
          type: string
          annotations:
            required:
              - bigquery.jobs.query
        kind:
          type: string
          default: bigquery#queryRequest
          description: The resource type of the request.
        preserveNulls:
          description: '[Deprecated] This property is deprecated.'
          type: boolean
        defaultDataset:
          description: '[Optional] Specifies the default datasetId and projectId to assume for any unqualified table names in the query. If not set, all table names in the query string must be qualified in the format ''datasetId.tableId''.'
          $ref: '#/components/schemas/DatasetReference'
        queryParameters:
          type: array
          description: Query parameters for Standard SQL queries.
          items:
            $ref: '#/components/schemas/QueryParameter'
        useQueryCache:
          default: 'true'
          description: '[Optional] Whether to look for the result in the query cache. The query cache is a best-effort cache that will be flushed whenever tables in the query are modified. The default value is true.'
          type: boolean
        maximumBytesBilled:
          description: '[Optional] Limits the bytes billed for this job. Queries that will have bytes billed beyond this limit will fail (without incurring a charge). If unspecified, this will be set to your project default.'
          type: string
          format: int64
        connectionProperties:
          type: array
          description: Connection properties.
          items:
            $ref: '#/components/schemas/ConnectionProperty'
        useLegacySql:
          default: 'true'
          description: 'Specifies whether to use BigQuery''s legacy SQL dialect for this query. The default value is true. If set to false, the query will use BigQuery''s standard SQL: https://cloud.google.com/bigquery/sql-reference/ When useLegacySql is set to false, the value of flattenResults is ignored; query will be run as if flattenResults is false.'
          type: boolean
        requestId:
          type: string
          description: 'A unique user provided identifier to ensure idempotent behavior for queries. Note that this is different from the job_id. It has the following properties: 1. It is case-sensitive, limited to up to 36 ASCII characters. A UUID is recommended. 2. Read only queries can ignore this token since they are nullipotent by definition. 3. For the purposes of idempotency ensured by the request_id, a request is considered duplicate of another only if they have the same request_id and are actually duplicates. When determining whether a request is a duplicate of the previous request, all parameters in the request that may affect the behavior are considered. For example, query, connection_properties, query_parameters, use_legacy_sql are parameters that affect the result and are considered when determining whether a request is a duplicate, but properties like timeout_ms don''t affect the result and are thus not considered. Dry run query requests are never considered duplicate of another request. 4. When a duplicate mutating query request is detected, it returns: a. the results of the mutation if it completes successfully within the timeout. b. the running operation if it is still in progress at the end of the timeout. 5. Its lifetime is limited to 15 minutes. In other words, if two requests are sent with the same request_id, but more than 15 minutes apart, idempotency is not guaranteed.'
        maxResults:
          type: integer
          format: uint32
          description: '[Optional] The maximum number of rows of data to return per page of results. Setting this flag to a small value such as 1000 and then paging through results might improve reliability when the query result set is large. In addition to this limit, responses are also limited to 10 MB. By default, there is no maximum row count, and only the byte limit applies.'
        location:
          type: string
          description: 'The geographic location where the job should run. See details at https://cloud.google.com/bigquery/docs/locations#specifying_your_location.'
        labels:
          additionalProperties:
            type: string
          description: 'The labels associated with this job. You can use these to organize and group your jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.'
          type: object
        dryRun:
          type: boolean
          description: '[Optional] If set to true, BigQuery doesn''t run the job. Instead, if the query is valid, BigQuery returns statistics about the job such as how many bytes would be processed. If the query is invalid, an error returns. The default value is false.'
        continuous:
          description: '[Optional] Specifies whether the query should be executed as a continuous query. The default value is false.'
          type: boolean
      id: QueryRequest
      type: object
    GetServiceAccountResponse:
      properties:
        kind:
          description: The resource type of the response.
          type: string
          default: bigquery#getServiceAccountResponse
        email:
          type: string
          description: The service account email address.
      type: object
      id: GetServiceAccountResponse
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    tables:
      id: google.bigquery.tables
      name: tables
      title: Tables
      methods:
        patch:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}~1tables~1{tableId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}~1tables~1{tableId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}~1tables~1{tableId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}~1tables~1{tableId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}~1tables/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}~1tables/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tables/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tables/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tables/methods/delete'
    row_access_policies_iam_policies:
      id: google.bigquery.row_access_policies_iam_policies
      name: row_access_policies_iam_policies
      title: Row Access Policies Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1{resource}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    routines:
      id: google.bigquery.routines
      name: routines
      title: Routines
      methods:
        get:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{+datasetId}~1routines~1{+routineId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{+datasetId}~1routines~1{+routineId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{+datasetId}~1routines~1{+routineId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{+datasetId}~1routines/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{+datasetId}~1routines/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/routines/methods/get'
          - $ref: '#/components/x-stackQL-resources/routines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/routines/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/routines/methods/delete'
    models:
      id: google.bigquery.models
      name: models
      title: Models
      methods:
        patch:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{+datasetId}~1models~1{+modelId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{+datasetId}~1models~1{+modelId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{+datasetId}~1models~1{+modelId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{+datasetId}~1models/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/models/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/models/methods/delete'
    tabledata:
      id: google.bigquery.tabledata
      name: tabledata
      title: Tabledata
      methods:
        insert_all:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}~1tables~1{tableId}~1insertAll/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}~1tables~1{tableId}~1data/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tabledata/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tabledata/methods/insert_all'
        update: []
        delete: []
    row_access_policies:
      id: google.bigquery.row_access_policies
      name: row_access_policies
      title: Row Access Policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{+datasetId}~1tables~1{+tableId}~1rowAccessPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/row_access_policies/methods/list'
        insert: []
        update: []
        delete: []
    datasets:
      id: google.bigquery.datasets
      name: datasets
      title: Datasets
      methods:
        patch:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets~1{datasetId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1datasets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/delete'
    service_account:
      id: google.bigquery.service_account
      name: service_account
      title: Service Account
      methods:
        get_service_account:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1serviceAccount/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_account/methods/get_service_account'
        insert: []
        update: []
        delete: []
    projects:
      id: google.bigquery.projects
      name: projects
      title: Projects
      methods:
        list:
          operation:
            $ref: '#/paths/~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/list'
        insert: []
        update: []
        delete: []
    jobs:
      id: google.bigquery.jobs
      name: jobs
      title: Jobs
      methods:
        get:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1jobs~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1jobs~1{jobId}~1cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1jobs~1{+jobId}~1delete/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1queries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/delete'
    jobs_query_results:
      id: google.bigquery.jobs_query_results
      name: jobs_query_results
      title: Jobs Query Results
      methods:
        get_query_results:
          operation:
            $ref: '#/paths/~1projects~1{projectId}~1queries~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_query_results/methods/get_query_results'
        insert: []
        update: []
        delete: []
paths:
  '/projects/{projectId}/datasets/{datasetId}/tables/{tableId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
    patch:
      description: 'Updates information in an existing table. The update method replaces the entire table resource, whereas the patch method only replaces fields that are provided in the submitted table resource. This method supports patch semantics.'
      operationId: bigquery.tables.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
        - in: path
          name: tableId
          required: true
          schema:
            type: string
        - in: query
          name: autodetect_schema
          schema:
            type: boolean
      x-stackQL-resource: tables
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: 'Deletes the table specified by tableId from the dataset. If the table contains data, all the data will be deleted.'
      operationId: bigquery.tables.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
        - in: path
          name: tableId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: delete
      x-stackQL-verb: delete
    put:
      description: 'Updates information in an existing table. The update method replaces the entire table resource, whereas the patch method only replaces fields that are provided in the submitted table resource.'
      operationId: bigquery.tables.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
        - in: path
          name: tableId
          required: true
          schema:
            type: string
        - in: query
          name: autodetect_schema
          schema:
            type: boolean
      x-stackQL-resource: tables
      x-stackQL-method: update
      x-stackQL-verb: exec
    get:
      description: 'Gets the specified table resource by table ID. This method does not return the data in the table, it only returns the table resource, which describes the structure of this table.'
      operationId: bigquery.tables.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
        - in: path
          name: tableId
          required: true
          schema:
            type: string
        - in: query
          name: selectedFields
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/projects/{projectId}/datasets/{datasetId}/tables':
    parameters: *ref_1
    post:
      description: 'Creates a new, empty table in the dataset.'
      operationId: bigquery.tables.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: insert
      x-stackQL-verb: insert
    get:
      description: Lists all tables in the specified dataset. Requires the READER dataset role.
      operationId: bigquery.tables.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableList'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: tables
      x-stackQL-method: list
      x-stackQL-verb: select
  '/{resource}':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: bigquery.rowAccessPolicies.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: resource
          required: true
          schema:
            type: string
      x-stackQL-resource: row_access_policies_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: exec
  '/projects/{projectId}/datasets/{+datasetId}/routines/{+routineId}':
    parameters: *ref_1
    get:
      description: Gets the specified routine resource by routine ID.
      operationId: bigquery.routines.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routine'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +datasetId
          required: true
          schema:
            type: string
        - in: path
          name: +routineId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: routines
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      description: Updates information in an existing routine. The update method replaces the entire Routine resource.
      operationId: bigquery.routines.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Routine'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routine'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +datasetId
          required: true
          schema:
            type: string
        - in: path
          name: +routineId
          required: true
          schema:
            type: string
      x-stackQL-resource: routines
      x-stackQL-method: update
      x-stackQL-verb: exec
    delete:
      description: Deletes the routine specified by routineId from the dataset.
      operationId: bigquery.routines.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +datasetId
          required: true
          schema:
            type: string
        - in: path
          name: +routineId
          required: true
          schema:
            type: string
      x-stackQL-resource: routines
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/projects/{projectId}/datasets/{+datasetId}/routines':
    parameters: *ref_1
    get:
      description: Lists all routines in the specified dataset. Requires the READER dataset role.
      operationId: bigquery.routines.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutinesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +datasetId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: routines
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates a new routine in the dataset.
      operationId: bigquery.routines.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Routine'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routine'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +datasetId
          required: true
          schema:
            type: string
      x-stackQL-resource: routines
      x-stackQL-method: insert
      x-stackQL-verb: insert
  '/projects/{projectId}/datasets/{+datasetId}/models/{+modelId}':
    parameters: *ref_1
    patch:
      description: Patch specific fields in the specified model.
      operationId: bigquery.models.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +datasetId
          required: true
          schema:
            type: string
        - in: path
          name: +modelId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes the model specified by modelId from the dataset.
      operationId: bigquery.models.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +datasetId
          required: true
          schema:
            type: string
        - in: path
          name: +modelId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the specified model resource by model ID.
      operationId: bigquery.models.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +datasetId
          required: true
          schema:
            type: string
        - in: path
          name: +modelId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/projects/{projectId}/datasets/{+datasetId}/models':
    parameters: *ref_1
    get:
      description: 'Lists all models in the specified dataset. Requires the READER dataset role. After retrieving the list of models, you can get information about a particular model by calling the models.get method.'
      operationId: bigquery.models.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +datasetId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: models
      x-stackQL-method: list
      x-stackQL-verb: select
  '/projects/{projectId}/datasets/{datasetId}/tables/{tableId}/insertAll':
    parameters: *ref_1
    post:
      description: Streams data into BigQuery one record at a time without needing to run a load job. Requires the WRITER dataset role.
      operationId: bigquery.tabledata.insertAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableDataInsertAllRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery.insertdata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery.insertdata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableDataInsertAllResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
        - in: path
          name: tableId
          required: true
          schema:
            type: string
      x-stackQL-resource: tabledata
      x-stackQL-method: insert_all
      x-stackQL-verb: insert
  '/projects/{projectId}/datasets/{datasetId}/tables/{tableId}/data':
    parameters: *ref_1
    get:
      description: Retrieves table data from a specified set of rows. Requires the READER dataset role.
      operationId: bigquery.tabledata.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableDataList'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
        - in: path
          name: tableId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: string
        - in: query
          name: selectedFields
          schema:
            type: string
      x-stackQL-resource: tabledata
      x-stackQL-method: list
      x-stackQL-verb: select
  '/projects/{projectId}/datasets/{+datasetId}/tables/{+tableId}/rowAccessPolicies':
    parameters: *ref_1
    get:
      description: Lists all row access policies on the specified table.
      operationId: bigquery.rowAccessPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRowAccessPoliciesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +datasetId
          required: true
          schema:
            type: string
        - in: path
          name: +tableId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: row_access_policies
      x-stackQL-method: list
      x-stackQL-verb: select
  '/projects/{projectId}/datasets/{datasetId}':
    parameters: *ref_1
    patch:
      description: 'Updates information in an existing dataset. The update method replaces the entire dataset resource, whereas the patch method only replaces fields that are provided in the submitted dataset resource. This method supports patch semantics.'
      operationId: bigquery.datasets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: 'Deletes the dataset specified by the datasetId value. Before you can delete a dataset, you must delete all its tables, either manually or by specifying deleteContents. Immediately after deletion, you can create another dataset with the same name.'
      operationId: bigquery.datasets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
        - in: query
          name: deleteContents
          schema:
            type: boolean
      x-stackQL-resource: datasets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Returns the dataset specified by datasetID.
      operationId: bigquery.datasets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: get
      x-stackQL-verb: exec
    put:
      description: 'Updates information in an existing dataset. The update method replaces the entire dataset resource, whereas the patch method only replaces fields that are provided in the submitted dataset resource.'
      operationId: bigquery.datasets.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: datasetId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/projects/{projectId}/datasets':
    parameters: *ref_1
    get:
      description: Lists all datasets in the specified project to which you have been granted the READER dataset role.
      operationId: bigquery.datasets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetList'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: all
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: datasets
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates a new empty dataset.
      operationId: bigquery.datasets.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: insert
      x-stackQL-verb: insert
  '/projects/{projectId}/serviceAccount':
    parameters: *ref_1
    get:
      description: Returns the email address of the service account for your project used for interactions with Google Cloud KMS.
      operationId: bigquery.projects.getServiceAccount
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceAccountResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_account
      x-stackQL-method: get_service_account
      x-stackQL-verb: select
  /projects:
    parameters: *ref_1
    get:
      description: Lists all projects to which you have been granted any project role.
      operationId: bigquery.projects.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
      parameters:
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: list
      x-stackQL-verb: select
  '/projects/{projectId}/jobs/{jobId}':
    parameters: *ref_1
    get:
      description: 'Returns information about a specific job. Job information is available for a six month period after creation. Requires that you''re the person who ran the job, or have the Is Owner project role.'
      operationId: bigquery.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: get
      x-stackQL-verb: select
  '/projects/{projectId}/jobs':
    parameters: *ref_1
    get:
      description: 'Lists all jobs that you started in the specified project. Job information is available for a six month period after creation. The job list is sorted in reverse chronological order, by job creation time. Requires the Can View project role, or the Is Owner project role if you set the allUsers property.'
      operationId: bigquery.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobList'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: allUsers
          schema:
            type: boolean
        - in: query
          name: minCreationTime
          schema:
            type: string
        - in: query
          name: maxCreationTime
          schema:
            type: string
        - in: query
          name: parentJobId
          schema:
            type: string
        - in: query
          name: stateFilter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: jobs
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Starts a new asynchronous job. Requires the Can View project role.
      operationId: bigquery.jobs.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
          Oauth2c:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: insert
      x-stackQL-verb: insert
  '/projects/{projectId}/jobs/{jobId}/cancel':
    parameters: *ref_1
    post:
      description: 'Requests that a job be cancelled. This call will return immediately, and the client will need to poll for the job status to see if the cancel completed successfully. Cancelled jobs may still incur costs.'
      operationId: bigquery.jobs.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCancelResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/projects/{projectId}/jobs/{+jobId}/delete':
    parameters: *ref_1
    delete:
      description: Requests the deletion of the metadata of a job. This call returns when the job's metadata is deleted.
      operationId: bigquery.jobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: +jobId
          required: true
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/projects/{projectId}/queries/{jobId}':
    parameters: *ref_1
    get:
      description: Retrieves the results of a query job.
      operationId: bigquery.jobs.getQueryResults
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueryResultsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: timeoutMs
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs_query_results
      x-stackQL-method: get_query_results
      x-stackQL-verb: select
  '/projects/{projectId}/queries':
    parameters: *ref_1
    post:
      description: Runs a BigQuery SQL query synchronously and returns query results if the query completes within a specified timeout.
      operationId: bigquery.jobs.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: query
      x-stackQL-verb: exec
