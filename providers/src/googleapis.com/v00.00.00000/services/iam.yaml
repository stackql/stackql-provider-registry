openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Identity and Access Management (IAM) API
  description: >-
    Manages identity and access control for Google Cloud resources, including
    the creation of service accounts, which you can use to authenticate to
    Google and make API calls. Enabling this API also enables the IAM Service
    Account Credentials API (iamcredentials.googleapis.com). However, disabling
    this API doesn't disable the IAM Service Account Credentials API. 
  version: v1
  x-discovery-doc-revision: '20240912'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/iam/
servers:
  - url: https://iam.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    ListServiceAccountsResponse:
      id: ListServiceAccountsResponse
      description: The service account list response.
      type: object
      properties:
        accounts:
          description: The list of matching service accounts.
          type: array
          items:
            $ref: '#/components/schemas/ServiceAccount'
        nextPageToken:
          description: >-
            To retrieve the next page of results, set
            ListServiceAccountsRequest.page_token to this value.
          type: string
    ServiceAccount:
      id: ServiceAccount
      description: >-
        An IAM service account. A service account is an account for an
        application or a virtual machine (VM) instance, not a person. You can
        use a service account to call Google APIs. To learn more, read the
        [overview of service
        accounts](https://cloud.google.com/iam/help/service-accounts/overview).
        When you create a service account, you specify the project ID that owns
        the service account, as well as a name that must be unique within the
        project. IAM uses these values to create an email address that
        identifies the service account. //
      type: object
      properties:
        name:
          description: >-
            The resource name of the service account. Use one of the following
            formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` *
            `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an
            alternative, you can use the `-` wildcard character instead of the
            project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` *
            `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using
            the `-` wildcard character, because it can cause response messages
            to contain misleading error codes. For example, if you try to access
            the service account `projects/-/serviceAccounts/fake@example.com`,
            which does not exist, the response contains an HTTP `403 Forbidden`
            error instead of a `404 Not Found` error.
          type: string
        projectId:
          description: Output only. The ID of the project that owns the service account.
          readOnly: true
          type: string
        uniqueId:
          description: >-
            Output only. The unique, stable numeric ID for the service account.
            Each service account retains its unique ID even if you delete the
            service account. For example, if you delete a service account, then
            create a new service account with the same name, the new service
            account has a different unique ID than the deleted service account.
          readOnly: true
          type: string
        email:
          description: Output only. The email address of the service account.
          readOnly: true
          type: string
        displayName:
          description: >-
            Optional. A user-specified, human-readable name for the service
            account. The maximum length is 100 UTF-8 bytes.
          type: string
        etag:
          description: Deprecated. Do not use.
          deprecated: true
          type: string
          format: byte
        description:
          description: >-
            Optional. A user-specified, human-readable description of the
            service account. The maximum length is 256 UTF-8 bytes.
          type: string
        oauth2ClientId:
          description: Output only. The OAuth 2.0 client ID for the service account.
          readOnly: true
          type: string
        disabled:
          description: Output only. Whether the service account is disabled.
          readOnly: true
          type: boolean
    CreateServiceAccountRequest:
      id: CreateServiceAccountRequest
      description: The service account create request.
      type: object
      properties:
        accountId:
          description: >-
            Required. The account id that is used to generate the service
            account email address and a stable unique id. It is unique within a
            project, must be 6-30 characters long, and match the regular
            expression `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.
          type: string
        serviceAccount:
          description: >-
            The ServiceAccount resource to create. Currently, only the following
            values are user assignable: `display_name` and `description`.
          $ref: '#/components/schemas/ServiceAccount'
    PatchServiceAccountRequest:
      id: PatchServiceAccountRequest
      description: >-
        The service account patch request. You can patch only the `display_name`
        and `description` fields. You must use the `update_mask` field to
        specify which of these fields you want to patch. Only the fields
        specified in the request are guaranteed to be returned in the response.
        Other fields may be empty in the response.
      type: object
      properties:
        serviceAccount:
          $ref: '#/components/schemas/ServiceAccount'
        updateMask:
          type: string
          format: google-fieldmask
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    UndeleteServiceAccountRequest:
      id: UndeleteServiceAccountRequest
      description: The service account undelete request.
      type: object
      properties: {}
    UndeleteServiceAccountResponse:
      id: UndeleteServiceAccountResponse
      type: object
      properties:
        restoredAccount:
          description: Metadata for the restored service account.
          $ref: '#/components/schemas/ServiceAccount'
    EnableServiceAccountRequest:
      id: EnableServiceAccountRequest
      description: The service account enable request.
      type: object
      properties: {}
    DisableServiceAccountRequest:
      id: DisableServiceAccountRequest
      description: The service account disable request.
      type: object
      properties: {}
    ListServiceAccountKeysResponse:
      id: ListServiceAccountKeysResponse
      description: The service account keys list response.
      type: object
      properties:
        keys:
          description: The public keys for the service account.
          type: array
          items:
            $ref: '#/components/schemas/ServiceAccountKey'
    ServiceAccountKey:
      id: ServiceAccountKey
      description: >-
        Represents a service account key. A service account has two sets of
        key-pairs: user-managed, and system-managed. User-managed key-pairs can
        be created and deleted by users. Users are responsible for rotating
        these keys periodically to ensure security of their service accounts.
        Users retain the private key of these key-pairs, and Google retains ONLY
        the public key. System-managed keys are automatically rotated by Google,
        and are used for signing for a maximum of two weeks. The rotation
        process is probabilistic, and usage of the new key will gradually ramp
        up and down over the key's lifetime. If you cache the public key set for
        a service account, we recommend that you update the cache every 15
        minutes. User-managed keys can be added and removed at any time, so it
        is important to update the cache frequently. For Google-managed keys,
        Google will publish a key at least 6 hours before it is first used for
        signing and will keep publishing it for at least 6 hours after it was
        last used for signing. Public keys for all service accounts are also
        published at the OAuth2 Service Account API.
      type: object
      properties:
        name:
          description: >-
            The resource name of the service account key in the following format
            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
          type: string
        privateKeyType:
          description: >-
            The output format for the private key. Only provided in
            `CreateServiceAccountKey` responses, not in `GetServiceAccountKey`
            or `ListServiceAccountKey` responses. Google never exposes
            system-managed private keys, and never retains user-managed private
            keys.
          type: string
          enumDescriptions:
            - Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.
            - >-
              PKCS12 format. The password for the PKCS12 file is `notasecret`.
              For more information, see https://tools.ietf.org/html/rfc7292.
            - Google Credentials File format.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PKCS12_FILE
            - TYPE_GOOGLE_CREDENTIALS_FILE
        keyAlgorithm:
          description: Specifies the algorithm (and possibly key size) for the key.
          type: string
          enumDescriptions:
            - An unspecified key algorithm.
            - 1k RSA Key.
            - 2k RSA Key.
          enum:
            - KEY_ALG_UNSPECIFIED
            - KEY_ALG_RSA_1024
            - KEY_ALG_RSA_2048
        privateKeyData:
          description: >-
            The private key data. Only provided in `CreateServiceAccountKey`
            responses. Make sure to keep the private key data secure because it
            allows for the assertion of the service account identity. When
            base64 decoded, the private key data can be used to authenticate
            with Google API client libraries and with gcloud auth
            activate-service-account.
          type: string
          format: byte
        publicKeyData:
          description: >-
            The public key data. Only provided in `GetServiceAccountKey`
            responses.
          type: string
          format: byte
        validAfterTime:
          description: The key can be used after this timestamp.
          type: string
          format: google-datetime
        validBeforeTime:
          description: >-
            The key can be used before this timestamp. For system-managed key
            pairs, this timestamp is the end time for the private key signing
            operation. The public key could still be used for verification for a
            few hours after this time.
          type: string
          format: google-datetime
        keyOrigin:
          description: The key origin.
          type: string
          enumDescriptions:
            - Unspecified key origin.
            - Key is provided by user.
            - Key is provided by Google.
          enum:
            - ORIGIN_UNSPECIFIED
            - USER_PROVIDED
            - GOOGLE_PROVIDED
        keyType:
          description: The key type.
          type: string
          enumDescriptions:
            - >-
              Unspecified key type. The presence of this in the message will
              immediately result in an error.
            - User-managed keys (managed and rotated by the user).
            - System-managed keys (managed and rotated by Google).
          enum:
            - KEY_TYPE_UNSPECIFIED
            - USER_MANAGED
            - SYSTEM_MANAGED
        disabled:
          description: The key status.
          type: boolean
        disableReason:
          description: >-
            Output only. optional. If the key is disabled, it may have a
            DisableReason describing why it was disabled.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified disable reason
            - Disabled by the user
            - >-
              Google detected this Service Account external key's private key
              data as exposed, typically in a public repository on GitHub or
              similar.
            - >-
              This service account external key was detected as compromised and
              used by an attacker.
          enum:
            - SERVICE_ACCOUNT_KEY_DISABLE_REASON_UNSPECIFIED
            - SERVICE_ACCOUNT_KEY_DISABLE_REASON_USER_INITIATED
            - SERVICE_ACCOUNT_KEY_DISABLE_REASON_EXPOSED
            - SERVICE_ACCOUNT_KEY_DISABLE_REASON_COMPROMISE_DETECTED
        extendedStatus:
          description: >-
            Output only. Extended Status provides permanent information about a
            service account key. For example, if this key was detected as
            exposed or compromised, that information will remain for the
            lifetime of the key in the extended_status.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ExtendedStatus'
    ExtendedStatus:
      id: ExtendedStatus
      description: >-
        Extended status can store additional metadata. For example, for keys
        disabled due to their private key data being expoesed we may include a
        message with more information about the exposure.
      type: object
      properties:
        key:
          description: The key for this extended status.
          type: string
          enumDescriptions:
            - Unspecified extended status, should not be used.
            - >-
              This key has been detected as exposed. extended_status_value may
              contain information about the exposure (public GitHub repo, open
              internet, etc.)
            - >-
              This key was implicated in a compromise or other attack.
              extended_status_value may contain information about the abuse
              perpetrated.
          enum:
            - SERVICE_ACCOUNT_KEY_EXTENDED_STATUS_KEY_UNSPECIFIED
            - SERVICE_ACCOUNT_KEY_EXTENDED_STATUS_KEY_EXPOSED
            - SERVICE_ACCOUNT_KEY_EXTENDED_STATUS_KEY_COMPROMISE_DETECTED
        value:
          description: The value for the extended status.
          type: string
    CreateServiceAccountKeyRequest:
      id: CreateServiceAccountKeyRequest
      description: The service account key create request.
      type: object
      properties:
        privateKeyType:
          description: >-
            The output format of the private key. The default value is
            `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File
            format.
          type: string
          enumDescriptions:
            - Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.
            - >-
              PKCS12 format. The password for the PKCS12 file is `notasecret`.
              For more information, see https://tools.ietf.org/html/rfc7292.
            - Google Credentials File format.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PKCS12_FILE
            - TYPE_GOOGLE_CREDENTIALS_FILE
        keyAlgorithm:
          description: >-
            Which type of key and algorithm to use for the key. The default is
            currently a 2K RSA key. However this may change in the future.
          type: string
          enumDescriptions:
            - An unspecified key algorithm.
            - 1k RSA Key.
            - 2k RSA Key.
          enum:
            - KEY_ALG_UNSPECIFIED
            - KEY_ALG_RSA_1024
            - KEY_ALG_RSA_2048
    UploadServiceAccountKeyRequest:
      id: UploadServiceAccountKeyRequest
      description: The service account key upload request.
      type: object
      properties:
        publicKeyData:
          description: >-
            The public key to associate with the service account. Must be an RSA
            public key that is wrapped in an X.509 v3 certificate. Include the
            first line, `-----BEGIN CERTIFICATE-----`, and the last line,
            `-----END CERTIFICATE-----`.
          type: string
          format: byte
    DisableServiceAccountKeyRequest:
      id: DisableServiceAccountKeyRequest
      description: The service account key disable request.
      type: object
      properties:
        serviceAccountKeyDisableReason:
          description: >-
            Optional. Describes the reason this key is being disabled. If
            unspecified, the default value of
            SERVICE_ACCOUNT_KEY_DISABLE_REASON_USER_INITIATED will be used.
          type: string
          enumDescriptions:
            - Unspecified disable reason
            - Disabled by the user
            - >-
              Google detected this Service Account external key's private key
              data as exposed, typically in a public repository on GitHub or
              similar.
            - >-
              This service account external key was detected as compromised and
              used by an attacker.
          enum:
            - SERVICE_ACCOUNT_KEY_DISABLE_REASON_UNSPECIFIED
            - SERVICE_ACCOUNT_KEY_DISABLE_REASON_USER_INITIATED
            - SERVICE_ACCOUNT_KEY_DISABLE_REASON_EXPOSED
            - SERVICE_ACCOUNT_KEY_DISABLE_REASON_COMPROMISE_DETECTED
        extendedStatusMessage:
          description: >-
            Optional. Usable by internal google services only. An
            extended_status_message can be used to include additional
            information about the key, such as its private key data being
            exposed on a public repository like GitHub.
          type: string
    EnableServiceAccountKeyRequest:
      id: EnableServiceAccountKeyRequest
      description: The service account key enable request.
      type: object
      properties: {}
    SignBlobRequest:
      id: SignBlobRequest
      description: >-
        Deprecated. [Migrate to Service Account Credentials
        API](https://cloud.google.com/iam/help/credentials/migrate-api). The
        service account sign blob request.
      type: object
      properties:
        bytesToSign:
          description: >-
            Required. Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            bytes to sign.
          deprecated: true
          type: string
          format: byte
    SignBlobResponse:
      id: SignBlobResponse
      description: >-
        Deprecated. [Migrate to Service Account Credentials
        API](https://cloud.google.com/iam/help/credentials/migrate-api). The
        service account sign blob response.
      type: object
      properties:
        keyId:
          description: >-
            Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            id of the key used to sign the blob.
          deprecated: true
          type: string
        signature:
          description: >-
            Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            signed blob.
          deprecated: true
          type: string
          format: byte
    SignJwtRequest:
      id: SignJwtRequest
      description: >-
        Deprecated. [Migrate to Service Account Credentials
        API](https://cloud.google.com/iam/help/credentials/migrate-api). The
        service account sign JWT request.
      type: object
      properties:
        payload:
          description: >-
            Required. Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            JWT payload to sign. Must be a serialized JSON object that contains
            a JWT Claims Set. For example: `{"sub": "user@example.com", "iat":
            313435}` If the JWT Claims Set contains an expiration time (`exp`)
            claim, it must be an integer timestamp that is not in the past and
            no more than 12 hours in the future. If the JWT Claims Set does not
            contain an expiration time (`exp`) claim, this claim is added
            automatically, with a timestamp that is 1 hour in the future.
          deprecated: true
          type: string
    SignJwtResponse:
      id: SignJwtResponse
      description: >-
        Deprecated. [Migrate to Service Account Credentials
        API](https://cloud.google.com/iam/help/credentials/migrate-api). The
        service account sign JWT response.
      type: object
      properties:
        keyId:
          description: >-
            Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            id of the key used to sign the JWT.
          deprecated: true
          type: string
        signedJwt:
          description: >-
            Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            signed JWT.
          deprecated: true
          type: string
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    QueryGrantableRolesRequest:
      id: QueryGrantableRolesRequest
      description: The grantable role query request.
      type: object
      properties:
        fullResourceName:
          description: >-
            Required. The full resource name to query from the list of grantable
            roles. The name follows the Google Cloud Platform resource format.
            For example, a Cloud Platform project with id `my-project` will be
            named `//cloudresourcemanager.googleapis.com/projects/my-project`.
          type: string
        view:
          type: string
          enumDescriptions:
            - Omits the `included_permissions` field. This is the default value.
            - Returns all fields.
          enum:
            - BASIC
            - FULL
        pageSize:
          description: >-
            Optional limit on the number of roles to include in the response.
            The default is 300, and the maximum is 2,000.
          type: integer
          format: int32
        pageToken:
          description: >-
            Optional pagination token returned in an earlier
            QueryGrantableRolesResponse.
          type: string
    QueryGrantableRolesResponse:
      id: QueryGrantableRolesResponse
      description: The grantable role query response.
      type: object
      properties:
        roles:
          description: The list of matching roles.
          type: array
          items:
            $ref: '#/components/schemas/Role'
        nextPageToken:
          description: >-
            To retrieve the next page of results, set
            `QueryGrantableRolesRequest.page_token` to this value.
          type: string
    Role:
      id: Role
      description: A role in the Identity and Access Management API.
      type: object
      properties:
        name:
          description: >-
            The name of the role. When `Role` is used in `CreateRole`, the role
            name must not be set. When `Role` is used in output and other input
            such as `UpdateRole`, the role name is the complete path. For
            example, `roles/logging.viewer` for predefined roles,
            `organizations/{ORGANIZATION_ID}/roles/myRole` for
            organization-level custom roles, and
            `projects/{PROJECT_ID}/roles/myRole` for project-level custom roles.
          type: string
        title:
          description: >-
            Optional. A human-readable title for the role. Typically this is
            limited to 100 UTF-8 bytes.
          type: string
        description:
          description: Optional. A human-readable description for the role.
          type: string
        includedPermissions:
          description: >-
            The names of the permissions this role grants when bound in an IAM
            policy.
          type: array
          items:
            type: string
        stage:
          description: >-
            The current launch stage of the role. If the `ALPHA` launch stage
            has been selected for a role, the `stage` field will not be included
            in the returned definition for the role.
          type: string
          enumDescriptions:
            - >-
              The user has indicated this role is currently in an Alpha phase.
              If this launch stage is selected, the `stage` field will not be
              included when requesting the definition for a given role.
            - The user has indicated this role is currently in a Beta phase.
            - The user has indicated this role is generally available.
            - The user has indicated this role is being deprecated.
            - >-
              This role is disabled and will not contribute permissions to any
              principals it is granted to in policies.
            - The user has indicated this role is currently in an EAP phase.
          enum:
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
            - DISABLED
            - EAP
        etag:
          description: Used to perform a consistent read-modify-write.
          type: string
          format: byte
        deleted:
          description: >-
            The current deleted state of the role. This field is read only. It
            will be ignored in calls to CreateRole and UpdateRole.
          type: boolean
    ListRolesResponse:
      id: ListRolesResponse
      description: The response containing the roles defined under a resource.
      type: object
      properties:
        roles:
          description: The Roles defined on this resource.
          type: array
          items:
            $ref: '#/components/schemas/Role'
        nextPageToken:
          description: >-
            To retrieve the next page of results, set
            `ListRolesRequest.page_token` to this value.
          type: string
    CreateRoleRequest:
      id: CreateRoleRequest
      description: The request to create a new role.
      type: object
      properties:
        roleId:
          description: >-
            The role ID to use for this role. A role ID may contain alphanumeric
            characters, underscores (`_`), and periods (`.`). It must contain a
            minimum of 3 characters and a maximum of 64 characters.
          type: string
        role:
          description: The Role resource to create.
          $ref: '#/components/schemas/Role'
    UndeleteRoleRequest:
      id: UndeleteRoleRequest
      description: The request to undelete an existing role.
      type: object
      properties:
        etag:
          description: Used to perform a consistent read-modify-write.
          type: string
          format: byte
    QueryTestablePermissionsRequest:
      id: QueryTestablePermissionsRequest
      description: A request to get permissions which can be tested on a resource.
      type: object
      properties:
        fullResourceName:
          description: >-
            Required. The full resource name to query from the list of testable
            permissions. The name follows the Google Cloud Platform resource
            format. For example, a Cloud Platform project with id `my-project`
            will be named
            `//cloudresourcemanager.googleapis.com/projects/my-project`.
          type: string
        pageSize:
          description: >-
            Optional limit on the number of permissions to include in the
            response. The default is 100, and the maximum is 1,000.
          type: integer
          format: int32
        pageToken:
          description: >-
            Optional pagination token returned in an earlier
            QueryTestablePermissionsRequest.
          type: string
    QueryTestablePermissionsResponse:
      id: QueryTestablePermissionsResponse
      description: The response containing permissions which can be tested on a resource.
      type: object
      properties:
        permissions:
          description: The Permissions testable on the requested resource.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        nextPageToken:
          description: >-
            To retrieve the next page of results, set
            `QueryTestableRolesRequest.page_token` to this value.
          type: string
    Permission:
      id: Permission
      description: A permission which can be included by a role.
      type: object
      properties:
        name:
          description: The name of this Permission.
          type: string
        title:
          description: The title of this Permission.
          type: string
        description:
          description: >-
            A brief description of what this Permission is used for. This
            permission can ONLY be used in predefined roles.
          type: string
        onlyInPredefinedRoles:
          deprecated: true
          type: boolean
        stage:
          description: The current launch stage of the permission.
          type: string
          enumDescriptions:
            - The permission is currently in an alpha phase.
            - The permission is currently in a beta phase.
            - The permission is generally available.
            - The permission is being deprecated.
          enum:
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
        customRolesSupportLevel:
          description: The current custom role support level.
          type: string
          enumDescriptions:
            - Default state. Permission is fully supported for custom role use.
            - Permission is being tested to check custom role compatibility.
            - Permission is not supported for custom role use.
          enum:
            - SUPPORTED
            - TESTING
            - NOT_SUPPORTED
        apiDisabled:
          description: The service API associated with the permission is not enabled.
          type: boolean
        primaryPermission:
          description: >-
            The preferred name for this permission. If present, then this
            permission is an alias of, and equivalent to, the listed
            primary_permission.
          type: string
    QueryAuditableServicesRequest:
      id: QueryAuditableServicesRequest
      description: A request to get the list of auditable services for a resource.
      type: object
      properties:
        fullResourceName:
          description: >-
            Required. The full resource name to query from the list of auditable
            services. The name follows the Google Cloud Platform resource
            format. For example, a Cloud Platform project with id `my-project`
            will be named
            `//cloudresourcemanager.googleapis.com/projects/my-project`.
          type: string
    QueryAuditableServicesResponse:
      id: QueryAuditableServicesResponse
      description: A response containing a list of auditable services for a resource.
      type: object
      properties:
        services:
          description: The auditable services for a resource.
          type: array
          items:
            $ref: '#/components/schemas/AuditableService'
    AuditableService:
      id: AuditableService
      description: Contains information about an auditable service.
      type: object
      properties:
        name:
          description: >-
            Public name of the service. For example, the service name for IAM is
            'iam.googleapis.com'.
          type: string
    LintPolicyRequest:
      id: LintPolicyRequest
      description: The request to lint an IAM policy object.
      type: object
      properties:
        fullResourceName:
          description: >-
            The full resource name of the policy this lint request is about. The
            name follows the Google Cloud format for full resource names. For
            example, a Google Cloud project with ID `my-project` will be named
            `//cloudresourcemanager.googleapis.com/projects/my-project`. The
            resource name is not used to read a policy from IAM. Only the data
            in the request object is linted.
          type: string
        condition:
          description: google.iam.v1.Binding.condition object to be linted.
          $ref: '#/components/schemas/Expr'
    LintPolicyResponse:
      id: LintPolicyResponse
      description: >-
        The response of a lint operation. An empty response indicates the
        operation was able to fully execute and no lint issue was found.
      type: object
      properties:
        lintResults:
          description: List of lint results sorted by `severity` in descending order.
          type: array
          items:
            $ref: '#/components/schemas/LintResult'
    LintResult:
      id: LintResult
      description: Structured response of a single validation unit.
      type: object
      properties:
        level:
          description: The validation unit level.
          type: string
          enumDescriptions:
            - Level is unspecified.
            - >-
              A validation unit which operates on an individual condition within
              a binding.
          enum:
            - LEVEL_UNSPECIFIED
            - CONDITION
        validationUnitName:
          description: >-
            The validation unit name, for instance
            "lintValidationUnits/ConditionComplexityCheck".
          type: string
        severity:
          description: The validation unit severity.
          type: string
          enumDescriptions:
            - Severity is unspecified.
            - >-
              A validation unit returns an error only for critical issues. If an
              attempt is made to set the problematic policy without rectifying
              the critical issue, it causes the `setPolicy` operation to fail.
            - >-
              Any issue which is severe enough but does not cause an error. For
              example, suspicious constructs in the input object will not
              necessarily fail `setPolicy`, but there is a high likelihood that
              they won't behave as expected during policy evaluation in
              `checkPolicy`. This includes the following common scenarios: -
              Unsatisfiable condition: Expired timestamp in date/time condition.
              - Ineffective condition: Condition on a pair which is granted
              unconditionally in another binding of the same policy.
            - >-
              Reserved for the issues that are not severe as `ERROR`/`WARNING`,
              but need special handling. For instance, messages about skipped
              validation units are issued as `NOTICE`.
            - >-
              Any informative statement which is not severe enough to raise
              `ERROR`/`WARNING`/`NOTICE`, like auto-correction recommendations
              on the input content. Note that current version of the linter does
              not utilize `INFO`.
            - Deprecated severity level.
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - NOTICE
            - INFO
            - DEPRECATED
        fieldName:
          description: >-
            The name of the field for which this lint result is about. For
            nested messages `field_name` consists of names of the embedded
            fields separated by period character. The top-level qualifier is the
            input object to lint in the request. For example, the `field_name`
            value `condition.expression` identifies a lint result for the
            `expression` field of the provided condition.
          type: string
        locationOffset:
          description: >-
            0-based character position of problematic construct within the
            object identified by `field_name`. Currently, this is populated only
            for condition expression.
          type: integer
          format: int32
        debugMessage:
          description: Human readable debug message associated with the issue.
          type: string
    ListOauthClientsResponse:
      id: ListOauthClientsResponse
      description: Response message for ListOauthClients.
      type: object
      properties:
        oauthClients:
          description: A list of OauthClients.
          type: array
          items:
            $ref: '#/components/schemas/OauthClient'
        nextPageToken:
          description: >-
            Optional. A token, which can be sent as `page_token` to retrieve the
            next page. If this field is omitted, there are no subsequent pages.
          type: string
    OauthClient:
      id: OauthClient
      description: >-
        Represents an OauthClient. Used to access Google Cloud resources on
        behalf of a Workforce Identity Federation user by using OAuth 2.0
        Protocol to obtain an access token from Google Cloud.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the OauthClient.
            Format:`projects/{project}/locations/{location}/oauthClients/{oauth_client}`.
          type: string
        state:
          description: Output only. The state of the OauthClient.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The OauthClient is active.
            - >-
              The OauthClient is soft-deleted. Soft-deleted OauthClient is
              permanently deleted after approximately 30 days unless restored
              via `UndeleteOauthClient`.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
        disabled:
          description: >-
            Optional. Whether the OauthClient is disabled. You cannot use a
            disabled OAuth client.
          type: boolean
        clientId:
          description: Output only. The system-generated OauthClient id.
          readOnly: true
          type: string
        displayName:
          description: >-
            Optional. A user-specified display name of the OauthClient. Cannot
            exceed 32 characters.
          type: string
        description:
          description: >-
            Optional. A user-specified description of the OauthClient. Cannot
            exceed 256 characters.
          type: string
        clientType:
          description: >-
            Immutable. The type of OauthClient. Either public or private. For
            private clients, the client secret can be managed using the
            dedicated OauthClientCredential resource.
          type: string
          enumDescriptions:
            - Should not be used.
            - Public client has no secret.
            - Private client.
          enum:
            - CLIENT_TYPE_UNSPECIFIED
            - PUBLIC_CLIENT
            - CONFIDENTIAL_CLIENT
        allowedGrantTypes:
          description: >-
            Required. The list of OAuth grant types is allowed for the
            OauthClient.
          type: array
          items:
            type: string
            enumDescriptions:
              - Should not be used.
              - Authorization code grant.
              - Refresh token grant.
            enum:
              - GRANT_TYPE_UNSPECIFIED
              - AUTHORIZATION_CODE_GRANT
              - REFRESH_TOKEN_GRANT
        allowedScopes:
          description: >-
            Required. The list of scopes that the OauthClient is allowed to
            request during OAuth flows. The following scopes are supported: *
            `https://www.googleapis.com/auth/cloud-platform`: See, edit,
            configure, and delete your Google Cloud data and see the email
            address for your Google Account.
          type: array
          items:
            type: string
        allowedRedirectUris:
          description: >-
            Required. The list of redirect uris that is allowed to redirect back
            when authorization process is completed.
          type: array
          items:
            type: string
        expireTime:
          description: >-
            Output only. Time after which the OauthClient will be permanently
            purged and cannot be recovered.
          readOnly: true
          type: string
          format: google-datetime
    UndeleteOauthClientRequest:
      id: UndeleteOauthClientRequest
      description: Request message for UndeleteOauthClient.
      type: object
      properties: {}
    ListOauthClientCredentialsResponse:
      id: ListOauthClientCredentialsResponse
      description: Response message for ListOauthClientCredentials.
      type: object
      properties:
        oauthClientCredentials:
          description: A list of OauthClientCredentials.
          type: array
          items:
            $ref: '#/components/schemas/OauthClientCredential'
    OauthClientCredential:
      id: OauthClientCredential
      description: >-
        Represents an OauthClientCredential. Used to authenticate an OauthClient
        while accessing Google Cloud resources on behalf of a user by using
        OAuth 2.0 Protocol.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the OauthClientCredential. Format:
            `projects/{project}/locations/{location}/oauthClients/{oauth_client}/credentials/{credential}`
          type: string
        disabled:
          description: >-
            Optional. Whether the OauthClientCredential is disabled. You cannot
            use a disabled OauthClientCredential.
          type: boolean
        clientSecret:
          description: >-
            Output only. The system-generated OAuth client secret. The client
            secret must be stored securely. If the client secret is leaked, you
            must delete and re-create the client credential. To learn more, see
            [OAuth client and credential security risks and
            mitigations](https://cloud.google.com/iam/docs/workforce-oauth-app#security)
          readOnly: true
          type: string
        displayName:
          description: >-
            Optional. A user-specified display name of the
            OauthClientCredential. Cannot exceed 32 characters.
          type: string
    ListWorkforcePoolsResponse:
      id: ListWorkforcePoolsResponse
      description: Response message for ListWorkforcePools.
      type: object
      properties:
        workforcePools:
          description: A list of pools.
          type: array
          items:
            $ref: '#/components/schemas/WorkforcePool'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    WorkforcePool:
      id: WorkforcePool
      description: >-
        Represents a collection of external workforces. Provides namespaces for
        federated users that can be referenced in IAM policies.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the pool. Format:
            `locations/{location}/workforcePools/{workforce_pool_id}`
          readOnly: true
          type: string
        parent:
          description: >-
            Immutable. The resource name of the parent. Format:
            `organizations/{org-id}`.
          type: string
        displayName:
          description: >-
            A user-specified display name of the pool in Google Cloud Console.
            Cannot exceed 32 characters.
          type: string
        description:
          description: >-
            A user-specified description of the pool. Cannot exceed 256
            characters.
          type: string
        state:
          description: Output only. The state of the pool.
          readOnly: true
          type: string
          enumDescriptions:
            - State unspecified.
            - The pool is active and may be used in Google Cloud policies.
            - >-
              The pool is soft-deleted. Soft-deleted pools are permanently
              deleted after approximately 30 days. You can restore a
              soft-deleted pool using UndeleteWorkforcePool. You cannot reuse
              the ID of a soft-deleted pool until it is permanently deleted.
              While a pool is deleted, you cannot use it to exchange tokens, or
              use existing tokens to access resources. If the pool is undeleted,
              existing tokens grant access again.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
        disabled:
          description: >-
            Disables the workforce pool. You cannot use a disabled pool to
            exchange tokens, or use existing tokens to access resources. If the
            pool is re-enabled, existing tokens grant access again.
          type: boolean
        sessionDuration:
          description: >-
            Duration that the Google Cloud access tokens, console sign-in
            sessions, and `gcloud` sign-in sessions from this pool are valid.
            Must be greater than 15 minutes (900s) and less than 12 hours
            (43200s). If `session_duration` is not configured, minted
            credentials have a default duration of one hour (3600s). For SAML
            providers, the lifetime of the token is the minimum of the
            `session_duration` and the `SessionNotOnOrAfter` claim in the SAML
            assertion.
          type: string
          format: google-duration
        expireTime:
          description: >-
            Output only. Time after which the workforce pool will be permanently
            purged and cannot be recovered.
          readOnly: true
          type: string
          format: google-datetime
        accessRestrictions:
          description: >-
            Optional. Configure access restrictions on the workforce pool users.
            This is an optional field. If specified web sign-in can be
            restricted to given set of services or programmatic sign-in can be
            disabled for pool users.
          $ref: '#/components/schemas/AccessRestrictions'
    AccessRestrictions:
      id: AccessRestrictions
      description: Access related restrictions on the workforce pool.
      type: object
      properties:
        allowedServices:
          description: >-
            Optional. Immutable. Services allowed for web sign-in with the
            workforce pool. If not set by default there are no restrictions.
          type: array
          items:
            $ref: '#/components/schemas/ServiceConfig'
        disableProgrammaticSignin:
          description: >-
            Optional. Disable programmatic sign-in by disabling token issue via
            the Security Token API endpoint. See [Security Token Service API]
            (https://cloud.google.com/iam/docs/reference/sts/rest).
          type: boolean
    ServiceConfig:
      id: ServiceConfig
      description: Configuration for a service.
      type: object
      properties:
        domain:
          description: 'Optional. Domain name of the service. Example: console.cloud.google'
          type: string
    UndeleteWorkforcePoolRequest:
      id: UndeleteWorkforcePoolRequest
      description: Request message for UndeleteWorkforcePool.
      type: object
      properties: {}
    GetIamPolicyRequest:
      id: GetIamPolicyRequest
      description: Request message for `GetIamPolicy` method.
      type: object
      properties:
        options:
          description: >-
            OPTIONAL: A `GetPolicyOptions` object for specifying options to
            `GetIamPolicy`.
          $ref: '#/components/schemas/GetPolicyOptions'
    GetPolicyOptions:
      id: GetPolicyOptions
      description: Encapsulates settings provided to GetIamPolicy.
      type: object
      properties:
        requestedPolicyVersion:
          description: >-
            Optional. The maximum policy version that will be used to format the
            policy. Valid values are 0, 1, and 3. Requests specifying an invalid
            value will be rejected. Requests for policies with any conditional
            role bindings must specify version 3. Policies with no conditional
            role bindings may specify any valid value or leave the field unset.
            The policy in the response might use the policy version that you
            specified, or it might use a lower policy version. For example, if
            you specify version 3, but the policy has no conditional role
            bindings, the response uses version 1. To learn which resources
            support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
    ListWorkforcePoolProvidersResponse:
      id: ListWorkforcePoolProvidersResponse
      description: Response message for ListWorkforcePoolProviders.
      type: object
      properties:
        workforcePoolProviders:
          description: A list of providers.
          type: array
          items:
            $ref: '#/components/schemas/WorkforcePoolProvider'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    WorkforcePoolProvider:
      id: WorkforcePoolProvider
      description: A configuration for an external identity provider.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the provider. Format:
            `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}`
          readOnly: true
          type: string
        displayName:
          description: >-
            A user-specified display name for the provider. Cannot exceed 32
            characters.
          type: string
        description:
          description: >-
            A user-specified description of the provider. Cannot exceed 256
            characters.
          type: string
        state:
          description: Output only. The state of the provider.
          readOnly: true
          type: string
          enumDescriptions:
            - State unspecified.
            - >-
              The provider is active and may be used to validate authentication
              credentials.
            - >-
              The provider is soft-deleted. Soft-deleted providers are
              permanently deleted after approximately 30 days. You can restore a
              soft-deleted provider using UndeleteWorkforcePoolProvider.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
        disabled:
          description: >-
            Disables the workforce pool provider. You cannot use a disabled
            provider to exchange tokens. However, existing tokens still grant
            access.
          type: boolean
        attributeMapping:
          description: >-
            Required. Maps attributes from the authentication credentials issued
            by an external identity provider to Google Cloud attributes, such as
            `subject` and `segment`. Each key must be a string specifying the
            Google Cloud IAM attribute to map to. The following keys are
            supported: * `google.subject`: The principal IAM is authenticating.
            You can reference this value in IAM bindings. This is also the
            subject that appears in Cloud Logging logs. This is a required field
            and the mapped subject cannot exceed 127 bytes. * `google.groups`:
            Groups the authenticating user belongs to. You can grant groups
            access to resources using an IAM `principalSet` binding; access
            applies to all members of the group. * `google.display_name`: The
            name of the authenticated user. This is an optional field and the
            mapped display name cannot exceed 100 bytes. If not set,
            `google.subject` will be displayed instead. This attribute cannot be
            referenced in IAM bindings. * `google.profile_photo`: The URL that
            specifies the authenticated user's thumbnail photo. This is an
            optional field. When set, the image will be visible as the user's
            profile picture. If not set, a generic user icon will be displayed
            instead. This attribute cannot be referenced in IAM bindings. *
            `google.posix_username`: The Linux username used by OS Login. This
            is an optional field and the mapped POSIX username cannot exceed 32
            characters, The key must match the regex "^a-zA-Z0-9._{0,31}$". This
            attribute cannot be referenced in IAM bindings. You can also provide
            custom attributes by specifying `attribute.{custom_attribute}`,
            where {custom_attribute} is the name of the custom attribute to be
            mapped. You can define a maximum of 50 custom attributes. The
            maximum length of a mapped attribute key is 100 characters, and the
            key may only contain the characters [a-z0-9_]. You can reference
            these attributes in IAM policies to define fine-grained access for a
            workforce pool to Google Cloud resources. For example: *
            `google.subject`:
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool}/subject/{value}`
            * `google.groups`:
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool}/group/{value}`
            * `attribute.{custom_attribute}`:
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool}/attribute.{custom_attribute}/{value}`
            Each value must be a [Common Expression Language]
            (https://opensource.google/projects/cel) function that maps an
            identity provider credential to the normalized attribute specified
            by the corresponding map key. You can use the `assertion` keyword in
            the expression to access a JSON representation of the authentication
            credential issued by the provider. The maximum length of an
            attribute mapping expression is 2048 characters. When evaluated, the
            total size of all mapped attributes must not exceed 4KB. For OIDC
            providers, you must supply a custom mapping that includes the
            `google.subject` attribute. For example, the following maps the
            `sub` claim of the incoming credential to the `subject` attribute on
            a Google token: ``` {"google.subject": "assertion.sub"} ```
          type: object
          additionalProperties:
            type: string
        attributeCondition:
          description: >-
            A [Common Expression
            Language](https://opensource.google/projects/cel) expression, in
            plain text, to restrict what otherwise valid authentication
            credentials issued by the provider should not be accepted. The
            expression must output a boolean representing whether to allow the
            federation. The following keywords may be referenced in the
            expressions: * `assertion`: JSON representing the authentication
            credential issued by the provider. * `google`: The Google attributes
            mapped from the assertion in the `attribute_mappings`.
            `google.profile_photo`, `google.display_name` and
            `google.posix_username` are not supported. * `attribute`: The custom
            attributes mapped from the assertion in the `attribute_mappings`.
            The maximum length of the attribute condition expression is 4096
            characters. If unspecified, all valid authentication credentials
            will be accepted. The following example shows how to only allow
            credentials with a mapped `google.groups` value of `admins`: ```
            "'admins' in google.groups" ```
          type: string
        saml:
          description: A SAML identity provider configuration.
          $ref: '#/components/schemas/GoogleIamAdminV1WorkforcePoolProviderSaml'
        oidc:
          description: An OpenId Connect 1.0 identity provider configuration.
          $ref: '#/components/schemas/GoogleIamAdminV1WorkforcePoolProviderOidc'
        expireTime:
          description: >-
            Output only. Time after which the workload pool provider will be
            permanently purged and cannot be recovered.
          readOnly: true
          type: string
          format: google-datetime
        extraAttributesOauth2Client:
          description: >-
            Optional. The configuration for OAuth 2.0 client used to get the
            additional user attributes. This should be used when users can't get
            the desired claims in authentication credentials. Currently this
            configuration is only supported with OIDC protocol.
          $ref: >-
            #/components/schemas/GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2Client
    GoogleIamAdminV1WorkforcePoolProviderSaml:
      id: GoogleIamAdminV1WorkforcePoolProviderSaml
      description: Represents a SAML identity provider.
      type: object
      properties:
        idpMetadataXml:
          description: >-
            Required. SAML Identity provider configuration metadata xml doc. The
            xml document should comply with [SAML 2.0
            specification](https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf).
            The max size of the acceptable xml document will be bounded to 128k
            characters. The metadata xml document should satisfy the following
            constraints: 1) Must contain an Identity Provider Entity ID. 2) Must
            contain at least one non-expired signing key certificate. 3) For
            each signing key: a) Valid from should be no more than 7 days from
            now. b) Valid to should be no more than 20 years in the future. 4)
            Up to 3 IdP signing keys are allowed in the metadata xml. When
            updating the provider's metadata xml, at least one non-expired
            signing key must overlap with the existing metadata. This
            requirement is skipped if there are no non-expired signing keys
            present in the existing metadata.
          type: string
    GoogleIamAdminV1WorkforcePoolProviderOidc:
      id: GoogleIamAdminV1WorkforcePoolProviderOidc
      description: Represents an OpenId Connect 1.0 identity provider.
      type: object
      properties:
        issuerUri:
          description: >-
            Required. The OIDC issuer URI. Must be a valid URI using the `https`
            scheme.
          type: string
        clientId:
          description: >-
            Required. The client ID. Must match the audience claim of the JWT
            issued by the identity provider.
          type: string
        clientSecret:
          description: >-
            The optional client secret. Required to enable Authorization Code
            flow for web sign-in.
          $ref: >-
            #/components/schemas/GoogleIamAdminV1WorkforcePoolProviderOidcClientSecret
        webSsoConfig:
          description: >-
            Required. Configuration for web single sign-on for the OIDC
            provider. Here, web sign-in refers to console sign-in and gcloud
            sign-in through the browser.
          $ref: >-
            #/components/schemas/GoogleIamAdminV1WorkforcePoolProviderOidcWebSsoConfig
        jwksJson:
          description: >-
            OIDC JWKs in JSON String format. For details on the definition of a
            JWK, see https://tools.ietf.org/html/rfc7517. If not set, the
            `jwks_uri` from the discovery document(fetched from the .well-known
            path of the `issuer_uri`) will be used. Currently, RSA and EC
            asymmetric keys are supported. The JWK must use following format and
            include only the following fields: { "keys": [ { "kty": "RSA/EC",
            "alg": "", "use": "sig", "kid": "", "n": "", "e": "", "x": "", "y":
            "", "crv": "" } ] }
          type: string
    GoogleIamAdminV1WorkforcePoolProviderOidcClientSecret:
      id: GoogleIamAdminV1WorkforcePoolProviderOidcClientSecret
      description: Representation of a client secret configured for the OIDC provider.
      type: object
      properties:
        value:
          description: The value of the client secret.
          $ref: >-
            #/components/schemas/GoogleIamAdminV1WorkforcePoolProviderOidcClientSecretValue
    GoogleIamAdminV1WorkforcePoolProviderOidcClientSecretValue:
      id: GoogleIamAdminV1WorkforcePoolProviderOidcClientSecretValue
      description: Representation of the value of the client secret.
      type: object
      properties:
        plainText:
          description: >-
            Input only. The plain text of the client secret value. For security
            reasons, this field is only used for input and will never be
            populated in any response.
          type: string
        thumbprint:
          description: >-
            Output only. A thumbprint to represent the current client secret
            value.
          readOnly: true
          type: string
    GoogleIamAdminV1WorkforcePoolProviderOidcWebSsoConfig:
      id: GoogleIamAdminV1WorkforcePoolProviderOidcWebSsoConfig
      description: Configuration for web single sign-on for the OIDC provider.
      type: object
      properties:
        responseType:
          description: >-
            Required. The Response Type to request for in the OIDC Authorization
            Request for web sign-in. The `CODE` Response Type is recommended to
            avoid the Implicit Flow, for security reasons.
          type: string
          enumDescriptions:
            - No Response Type specified.
            - >-
              The `response_type=code` selection uses the Authorization Code
              Flow for web sign-in. Requires a configured client secret.
            - >-
              The `response_type=id_token` selection uses the Implicit Flow for
              web sign-in.
          enum:
            - RESPONSE_TYPE_UNSPECIFIED
            - CODE
            - ID_TOKEN
        assertionClaimsBehavior:
          description: >-
            Required. The behavior for how OIDC Claims are included in the
            `assertion` object used for attribute mapping and attribute
            condition.
          type: string
          enumDescriptions:
            - No assertion claims behavior specified.
            - >-
              Merge the UserInfo Endpoint Claims with ID Token Claims,
              preferring UserInfo Claim Values for the same Claim Name. This
              option is available only for the Authorization Code Flow.
            - Only include ID Token Claims.
          enum:
            - ASSERTION_CLAIMS_BEHAVIOR_UNSPECIFIED
            - MERGE_USER_INFO_OVER_ID_TOKEN_CLAIMS
            - ONLY_ID_TOKEN_CLAIMS
        additionalScopes:
          description: >-
            Additional scopes to request for in the OIDC authentication request
            on top of scopes requested by default. By default, the `openid`,
            `profile` and `email` scopes that are supported by the identity
            provider are requested. Each additional scope may be at most 256
            characters. A maximum of 10 additional scopes may be configured.
          type: array
          items:
            type: string
    GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2Client:
      id: GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2Client
      description: >-
        Represents the OAuth 2.0 client credential configuration for retrieving
        additional user attributes that are not present in the initial
        authentication credentials from the identity provider, e.g. groups. See
        https://datatracker.ietf.org/doc/html/rfc6749#section-4.4 for more
        details on client credentials grant flow.
      type: object
      properties:
        issuerUri:
          description: >-
            Required. The OIDC identity provider's issuer URI. Must be a valid
            URI using the `https` scheme. Required to get the OIDC discovery
            document.
          type: string
        clientId:
          description: >-
            Required. The OAuth 2.0 client ID for retrieving extra attributes
            from the identity provider. Required to get the Access Token using
            client credentials grant flow.
          type: string
        clientSecret:
          description: >-
            Required. The OAuth 2.0 client secret for retrieving extra
            attributes from the identity provider. Required to get the Access
            Token using client credentials grant flow.
          $ref: >-
            #/components/schemas/GoogleIamAdminV1WorkforcePoolProviderOidcClientSecret
        attributesType:
          description: >-
            Required. Represents the IdP and type of claims that should be
            fetched.
          type: string
          enumDescriptions:
            - No AttributesType specified.
            - >-
              Used to get the user's group claims from the Azure AD identity
              provider using configuration provided in
              ExtraAttributesOAuth2Client and `mail` property of the
              `microsoft.graph.group` object is used for claim mapping. See
              https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties
              for more details on `microsoft.graph.group` properties. The
              attributes obtained from idntity provider are mapped to
              `assertion.groups`.
          enum:
            - ATTRIBUTES_TYPE_UNSPECIFIED
            - AZURE_AD_GROUPS_MAIL
        queryParameters:
          description: >-
            Optional. Represents the parameters to control which claims are
            fetched from an IdP.
          $ref: >-
            #/components/schemas/GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2ClientQueryParameters
    GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2ClientQueryParameters:
      id: >-
        GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2ClientQueryParameters
      description: >-
        Represents the parameters to control which claims are fetched from an
        IdP.
      type: object
      properties:
        filter:
          description: >-
            Optional. The filter used to request specific records from IdP. In
            case of attributes type as AZURE_AD_GROUPS_MAIL, it represents the
            filter used to request specific groups for users from IdP. By
            default, all of the groups associated with the user are fetched. The
            groups should be mail enabled and security enabled. See
            https://learn.microsoft.com/en-us/graph/search-query-parameter for
            more details.
          type: string
    UndeleteWorkforcePoolProviderRequest:
      id: UndeleteWorkforcePoolProviderRequest
      description: Request message for UndeleteWorkforcePoolProvider.
      type: object
      properties: {}
    ListWorkforcePoolProviderKeysResponse:
      id: ListWorkforcePoolProviderKeysResponse
      description: Response message for ListWorkforcePoolProviderKeys.
      type: object
      properties:
        workforcePoolProviderKeys:
          description: A list of WorkforcePoolProviderKeys.
          type: array
          items:
            $ref: '#/components/schemas/WorkforcePoolProviderKey'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    WorkforcePoolProviderKey:
      id: WorkforcePoolProviderKey
      description: >-
        Represents a public key configuration for a Workforce Pool Provider. The
        key can be configured in your identity provider to encrypt SAML
        assertions. Google holds the corresponding private key, which it uses to
        decrypt encrypted tokens.
      type: object
      properties:
        name:
          description: Output only. The resource name of the key.
          readOnly: true
          type: string
        keyData:
          description: Immutable. Public half of the asymmetric key.
          $ref: '#/components/schemas/KeyData'
        state:
          description: Output only. The state of the key.
          readOnly: true
          type: string
          enumDescriptions:
            - State unspecified.
            - The key is active.
            - >-
              The key is soft-deleted. Soft-deleted keys are permanently deleted
              after approximately 30 days. You can restore a soft-deleted key
              using UndeleteWorkforcePoolProviderKey.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
        use:
          description: Required. The purpose of the key.
          type: string
          enumDescriptions:
            - KeyUse unspecified.
            - The key is used for encryption.
          enum:
            - KEY_USE_UNSPECIFIED
            - ENCRYPTION
        expireTime:
          description: >-
            Output only. The time after which the key will be permanently
            deleted and cannot be recovered. Note that the key may get purged
            before this time if the total limit of keys per provider is
            exceeded.
          readOnly: true
          type: string
          format: google-datetime
    KeyData:
      id: KeyData
      description: Represents a public key data along with its format.
      type: object
      properties:
        format:
          description: Output only. The format of the key.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              No format has been specified. This is an invalid format and must
              not be used.
            - >-
              A RSA public key wrapped in an X.509v3 certificate ([RFC5280] (
              https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and
              wrapped in [public certificate
              label](https://datatracker.ietf.org/doc/html/rfc7468#section-5.1).
          enum:
            - KEY_FORMAT_UNSPECIFIED
            - RSA_X509_PEM
        notBeforeTime:
          description: >-
            Output only. Earliest timestamp when this key is valid. Attempts to
            use this key before this time will fail. Only present if the key
            data represents a X.509 certificate.
          readOnly: true
          type: string
          format: google-datetime
        notAfterTime:
          description: >-
            Output only. Latest timestamp when this key is valid. Attempts to
            use this key after this time will fail. Only present if the key data
            represents a X.509 certificate.
          readOnly: true
          type: string
          format: google-datetime
        key:
          description: >-
            Output only. The key data. The format of the key is represented by
            the format field.
          readOnly: true
          type: string
        keySpec:
          description: Required. The specifications for the key.
          type: string
          enumDescriptions:
            - No key specification specified.
            - A 2048 bit RSA key.
            - A 3072 bit RSA key.
            - A 4096 bit RSA key.
          enum:
            - KEY_SPEC_UNSPECIFIED
            - RSA_2048
            - RSA_3072
            - RSA_4096
    UndeleteWorkforcePoolProviderKeyRequest:
      id: UndeleteWorkforcePoolProviderKeyRequest
      description: Request message for UndeleteWorkforcePoolProviderKey.
      type: object
      properties: {}
    UndeleteWorkforcePoolSubjectRequest:
      id: UndeleteWorkforcePoolSubjectRequest
      description: Request message for UndeleteWorkforcePoolSubject.
      type: object
      properties: {}
    ListWorkloadIdentityPoolsResponse:
      id: ListWorkloadIdentityPoolsResponse
      description: Response message for ListWorkloadIdentityPools.
      type: object
      properties:
        workloadIdentityPools:
          description: A list of pools.
          type: array
          items:
            $ref: '#/components/schemas/WorkloadIdentityPool'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    WorkloadIdentityPool:
      id: WorkloadIdentityPool
      description: >-
        Represents a collection of workload identities. You can define IAM
        policies to grant these identities access to Google Cloud resources.
      type: object
      properties:
        name:
          description: Output only. The resource name of the pool.
          readOnly: true
          type: string
        displayName:
          description: A display name for the pool. Cannot exceed 32 characters.
          type: string
        description:
          description: A description of the pool. Cannot exceed 256 characters.
          type: string
        state:
          description: Output only. The state of the pool.
          readOnly: true
          type: string
          enumDescriptions:
            - State unspecified.
            - The pool is active, and may be used in Google Cloud policies.
            - >-
              The pool is soft-deleted. Soft-deleted pools are permanently
              deleted after approximately 30 days. You can restore a
              soft-deleted pool using UndeleteWorkloadIdentityPool. You cannot
              reuse the ID of a soft-deleted pool until it is permanently
              deleted. While a pool is deleted, you cannot use it to exchange
              tokens, or use existing tokens to access resources. If the pool is
              undeleted, existing tokens grant access again.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
        disabled:
          description: >-
            Whether the pool is disabled. You cannot use a disabled pool to
            exchange tokens, or use existing tokens to access resources. If the
            pool is re-enabled, existing tokens grant access again.
          type: boolean
        expireTime:
          description: >-
            Output only. Time after which the workload identity pool will be
            permanently purged and cannot be recovered.
          readOnly: true
          type: string
          format: google-datetime
    UndeleteWorkloadIdentityPoolRequest:
      id: UndeleteWorkloadIdentityPoolRequest
      description: Request message for UndeleteWorkloadIdentityPool.
      type: object
      properties: {}
    ListWorkloadIdentityPoolProvidersResponse:
      id: ListWorkloadIdentityPoolProvidersResponse
      description: Response message for ListWorkloadIdentityPoolProviders.
      type: object
      properties:
        workloadIdentityPoolProviders:
          description: A list of providers.
          type: array
          items:
            $ref: '#/components/schemas/WorkloadIdentityPoolProvider'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    WorkloadIdentityPoolProvider:
      id: WorkloadIdentityPoolProvider
      description: A configuration for an external identity provider.
      type: object
      properties:
        name:
          description: Output only. The resource name of the provider.
          readOnly: true
          type: string
        displayName:
          description: A display name for the provider. Cannot exceed 32 characters.
          type: string
        description:
          description: A description for the provider. Cannot exceed 256 characters.
          type: string
        state:
          description: Output only. The state of the provider.
          readOnly: true
          type: string
          enumDescriptions:
            - State unspecified.
            - >-
              The provider is active, and may be used to validate authentication
              credentials.
            - >-
              The provider is soft-deleted. Soft-deleted providers are
              permanently deleted after approximately 30 days. You can restore a
              soft-deleted provider using UndeleteWorkloadIdentityPoolProvider.
              You cannot reuse the ID of a soft-deleted provider until it is
              permanently deleted.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
        disabled:
          description: >-
            Whether the provider is disabled. You cannot use a disabled provider
            to exchange tokens. However, existing tokens still grant access.
          type: boolean
        attributeMapping:
          description: ' Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such as `subject` and `segment`. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following keys are supported: * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 bytes. * `google.groups`: Groups the external identity belongs to. You can grant groups access to resources using an IAM `principalSet` binding; access applies to all members of the group. You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where `{custom_attribute}` is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained access for a workload to Google Cloud resources. For example: * `google.subject`: `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}` * `google.groups`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}` * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}` Each value must be a [Common Expression Language] (https://opensource.google/projects/cel) function that maps an identity provider credential to the normalized attribute specified by the corresponding map key. You can use the `assertion` keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped attributes must not exceed 8KB. For AWS providers, if no attribute mapping is defined, the following default mapping applies: ``` { "google.subject":"assertion.arn", "attribute.aws_role": "assertion.arn.contains(''assumed-role'')" " ? assertion.arn.extract(''{account_arn}assumed-role/'')" " + ''assumed-role/''" " + assertion.arn.extract(''assumed-role/{role_name}/'')" " : assertion.arn", } ``` If any custom attribute mappings are defined, they must include a mapping to the `google.subject` attribute. For OIDC providers, you must supply a custom mapping, which must include the `google.subject` attribute. For example, the following maps the `sub` claim of the incoming credential to the `subject` attribute on a Google token: ``` {"google.subject": "assertion.sub"} ```'
          type: object
          additionalProperties:
            type: string
        attributeCondition:
          description: >-
            [A Common Expression
            Language](https://opensource.google/projects/cel) expression, in
            plain text, to restrict what otherwise valid authentication
            credentials issued by the provider should not be accepted. The
            expression must output a boolean representing whether to allow the
            federation. The following keywords may be referenced in the
            expressions: * `assertion`: JSON representing the authentication
            credential issued by the provider. * `google`: The Google attributes
            mapped from the assertion in the `attribute_mappings`. *
            `attribute`: The custom attributes mapped from the assertion in the
            `attribute_mappings`. The maximum length of the attribute condition
            expression is 4096 characters. If unspecified, all valid
            authentication credential are accepted. The following example shows
            how to only allow credentials with a mapped `google.groups` value of
            `admins`: ``` "'admins' in google.groups" ```
          type: string
        aws:
          description: An Amazon Web Services identity provider.
          $ref: '#/components/schemas/Aws'
        oidc:
          description: An OpenId Connect 1.0 identity provider.
          $ref: '#/components/schemas/Oidc'
        saml:
          description: An SAML 2.0 identity provider.
          $ref: '#/components/schemas/Saml'
        expireTime:
          description: >-
            Output only. Time after which the workload identity pool provider
            will be permanently purged and cannot be recovered.
          readOnly: true
          type: string
          format: google-datetime
    Aws:
      id: Aws
      description: Represents an Amazon Web Services identity provider.
      type: object
      properties:
        accountId:
          description: Required. The AWS account ID.
          type: string
    Oidc:
      id: Oidc
      description: Represents an OpenId Connect 1.0 identity provider.
      type: object
      properties:
        issuerUri:
          description: Required. The OIDC issuer URL. Must be an HTTPS endpoint.
          type: string
        allowedAudiences:
          description: >-
            Acceptable values for the `aud` field (audience) in the OIDC token.
            Token exchange requests are rejected if the token audience does not
            match one of the configured values. Each audience may be at most 256
            characters. A maximum of 10 audiences may be configured. If this
            list is empty, the OIDC token audience must be equal to the full
            canonical resource name of the WorkloadIdentityPoolProvider, with or
            without the HTTPS prefix. For example: ```
            //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/
            https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/
            ```
          type: array
          items:
            type: string
        jwksJson:
          description: >-
            Optional. OIDC JWKs in JSON String format. For details on the
            definition of a JWK, see https://tools.ietf.org/html/rfc7517. If not
            set, the `jwks_uri` from the discovery document(fetched from the
            .well-known path of the `issuer_uri`) will be used. Currently, RSA
            and EC asymmetric keys are supported. The JWK must use following
            format and include only the following fields: { "keys": [ { "kty":
            "RSA/EC", "alg": "", "use": "sig", "kid": "", "n": "", "e": "", "x":
            "", "y": "", "crv": "" } ] }
          type: string
    Saml:
      id: Saml
      description: Represents an SAML 2.0 identity provider.
      type: object
      properties:
        idpMetadataXml:
          description: >-
            Required. SAML identity provider (IdP) configuration metadata XML
            doc. The XML document must comply with the [SAML 2.0
            specification](https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf).
            The maximum size of an acceptable XML document is 128K characters.
            The SAML metadata XML document must satisfy the following
            constraints: * Must contain an IdP Entity ID. * Must contain at
            least one non-expired signing certificate. * For each signing
            certificate, the expiration must be: * From no more than 7 days in
            the future. * To no more than 20 years in the future. * Up to three
            IdP signing keys are allowed. When updating the provider's metadata
            XML, at least one non-expired signing key must overlap with the
            existing metadata. This requirement is skipped if there are no
            non-expired signing keys present in the existing metadata.
          type: string
    UndeleteWorkloadIdentityPoolProviderRequest:
      id: UndeleteWorkloadIdentityPoolProviderRequest
      description: Request message for UndeleteWorkloadIdentityPoolProvider.
      type: object
      properties: {}
    ListWorkloadIdentityPoolProviderKeysResponse:
      id: ListWorkloadIdentityPoolProviderKeysResponse
      description: Response message for ListWorkloadIdentityPoolProviderKeys.
      type: object
      properties:
        workloadIdentityPoolProviderKeys:
          description: A list of WorkloadIdentityPoolProviderKey
          type: array
          items:
            $ref: '#/components/schemas/WorkloadIdentityPoolProviderKey'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    WorkloadIdentityPoolProviderKey:
      id: WorkloadIdentityPoolProviderKey
      description: >-
        Represents a public key configuration for your workload identity pool
        provider. The key can be configured in your identity provider to encrypt
        the SAML assertions. Google holds the corresponding private key which it
        uses to decrypt encrypted tokens.
      type: object
      properties:
        name:
          description: Output only. The resource name of the key.
          readOnly: true
          type: string
        keyData:
          description: Immutable. Public half of the asymmetric key.
          $ref: '#/components/schemas/KeyData'
        state:
          description: Output only. The state of the key.
          readOnly: true
          type: string
          enumDescriptions:
            - State unspecified.
            - The key is active.
            - >-
              The key is soft-deleted. Soft-deleted keys are permanently deleted
              after approximately 30 days. You can restore a soft-deleted key
              using UndeleteWorkloadIdentityPoolProviderKey. While a key is
              deleted, you cannot use it during the federation.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
        use:
          description: Required. The purpose of the key.
          type: string
          enumDescriptions:
            - The key use is not known.
            - The public key is used for encryption purposes.
          enum:
            - KEY_USE_UNSPECIFIED
            - ENCRYPTION
        expireTime:
          description: >-
            Output only. Time after which the key will be permanently purged and
            cannot be recovered. Note that the key may get purged before this
            timestamp if the total limit of keys per provider is crossed.
          readOnly: true
          type: string
          format: google-datetime
    UndeleteWorkloadIdentityPoolProviderKeyRequest:
      id: UndeleteWorkloadIdentityPoolProviderKeyRequest
      description: Request message for UndeleteWorkloadIdentityPoolProviderKey.
      type: object
      properties: {}
    AdminAuditData:
      id: AdminAuditData
      description: >-
        Audit log information specific to Cloud IAM admin APIs. This message is
        serialized as an `Any` type in the `ServiceData` message of an
        `AuditLog` message.
      type: object
      properties:
        permissionDelta:
          description: The permission_delta when when creating or updating a Role.
          $ref: '#/components/schemas/PermissionDelta'
    PermissionDelta:
      id: PermissionDelta
      description: >-
        A PermissionDelta message to record the added_permissions and
        removed_permissions inside a role.
      type: object
      properties:
        addedPermissions:
          description: Added permissions.
          type: array
          items:
            type: string
        removedPermissions:
          description: Removed permissions.
          type: array
          items:
            type: string
    AuditData:
      id: AuditData
      description: >-
        Audit log information specific to Cloud IAM. This message is serialized
        as an `Any` type in the `ServiceData` message of an `AuditLog` message.
      type: object
      properties:
        policyDelta:
          description: Policy delta between the original policy and the newly set policy.
          $ref: '#/components/schemas/PolicyDelta'
    PolicyDelta:
      id: PolicyDelta
      description: The difference delta between two policies.
      type: object
      properties:
        bindingDeltas:
          description: The delta for Bindings between two policies.
          type: array
          items:
            $ref: '#/components/schemas/BindingDelta'
    BindingDelta:
      id: BindingDelta
      description: >-
        One delta entry for Binding. Each individual change (only one member in
        each entry) to a binding will be a separate entry.
      type: object
      properties:
        action:
          description: The action that was performed on a Binding. Required
          type: string
          enumDescriptions:
            - Unspecified.
            - Addition of a Binding.
            - Removal of a Binding.
          enum:
            - ACTION_UNSPECIFIED
            - ADD
            - REMOVE
        role:
          description: >-
            Role that is assigned to `members`. For example, `roles/viewer`,
            `roles/editor`, or `roles/owner`. Required
          type: string
        member:
          description: >-
            A single identity requesting access for a Google Cloud resource.
            Follows the same format of Binding.members. Required
          type: string
        condition:
          description: The condition that is associated with this binding.
          $ref: '#/components/schemas/Expr'
    WorkloadIdentityPoolOperationMetadata:
      id: WorkloadIdentityPoolOperationMetadata
      description: Metadata for long-running WorkloadIdentityPool operations.
      type: object
      properties: {}
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        cancelRequested:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    ReconciliationOperationMetadata:
      id: ReconciliationOperationMetadata
      description: >-
        Operation metadata returned by the CLH during resource state
        reconciliation.
      type: object
      properties:
        deleteResource:
          description: DEPRECATED. Use exclusive_action instead.
          deprecated: true
          type: boolean
        exclusiveAction:
          description: Excluisive action returned by the CLH.
          type: string
          enumDescriptions:
            - Unknown repair action.
            - >-
              The resource has to be deleted. When using this bit, the CLH
              should fail the operation. DEPRECATED. Instead use DELETE_RESOURCE
              OperationSignal in SideChannel.
            - >-
              This resource could not be repaired but the repair should be tried
              again at a later time. This can happen if there is a dependency
              that needs to be resolved first- e.g. if a parent resource must be
              repaired before a child resource.
          enumDeprecated:
            - false
            - true
            - false
          enum:
            - UNKNOWN_REPAIR_ACTION
            - DELETE
            - RETRY
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    oauth_clients:
      id: google.iam.oauth_clients
      name: oauth_clients
      title: Oauth_clients
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.oauthClients
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients~1{oauthClientsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients~1{oauthClientsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients~1{oauthClientsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients~1{oauthClientsId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/oauth_clients/methods/get'
          - $ref: '#/components/x-stackQL-resources/oauth_clients/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/oauth_clients/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/oauth_clients/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/oauth_clients/methods/delete'
    oauth_client_credentials:
      id: google.iam.oauth_client_credentials
      name: oauth_client_credentials
      title: Oauth_client_credentials
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients~1{oauthClientsId}~1credentials/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients~1{oauthClientsId}~1credentials/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients~1{oauthClientsId}~1credentials~1{credentialsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients~1{oauthClientsId}~1credentials~1{credentialsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1oauthClients~1{oauthClientsId}~1credentials~1{credentialsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/oauth_client_credentials/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/oauth_client_credentials/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/oauth_client_credentials/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/oauth_client_credentials/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/oauth_client_credentials/methods/delete
    workload_identity_pools:
      id: google.iam.workload_identity_pools
      name: workload_identity_pools
      title: Workload_identity_pools
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workloadIdentityPools
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pools/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pools/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pools/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pools/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pools/methods/delete
    operations:
      id: google.iam.operations
      name: operations
      title: Operations
      methods:
        get_workload_identity_pool_operations:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_workload_identity_pool_namespace_operations:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1namespaces~1{namespacesId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_workload_identity_pool_namespace_managed_identity_operations:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1namespaces~1{namespacesId}~1managedIdentities~1{managedIdentitiesId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_workload_identity_pool_namespace_managed_identity_workload_source_operations:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1namespaces~1{namespacesId}~1managedIdentities~1{managedIdentitiesId}~1workloadSources~1{workloadSourcesId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_workload_identity_pool_provider_operations:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_workload_identity_pool_provider_key_operations:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}~1keys~1{keysId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_workforce_pool_operations:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_workforce_pool_provider_operations:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_workforce_pool_provider_key_operations:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}~1keys~1{keysId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_workforce_pool_subject_operations:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1subjects~1{subjectsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/get_workload_identity_pool_namespace_managed_identity_workload_source_operations
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/get_workload_identity_pool_namespace_managed_identity_operations
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/get_workload_identity_pool_provider_key_operations
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/get_workload_identity_pool_namespace_operations
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/get_workload_identity_pool_provider_operations
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/get_workforce_pool_provider_key_operations
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/get_workload_identity_pool_operations
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/get_workforce_pool_provider_operations
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/get_workforce_pool_subject_operations
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/get_workforce_pool_operations
        insert: []
        update: []
        replace: []
        delete: []
    workload_identity_pool_providers:
      id: google.iam.workload_identity_pool_providers
      name: workload_identity_pool_providers
      title: Workload_identity_pool_providers
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workloadIdentityPoolProviders
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pool_providers/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pool_providers/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pool_providers/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pool_providers/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pool_providers/methods/delete
    workload_identity_pool_provider_keys:
      id: google.iam.workload_identity_pool_provider_keys
      name: workload_identity_pool_provider_keys
      title: Workload_identity_pool_provider_keys
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}~1keys/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workloadIdentityPoolProviderKeys
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}~1keys/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}~1keys~1{keysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}~1keys~1{keysId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workloadIdentityPools~1{workloadIdentityPoolsId}~1providers~1{providersId}~1keys~1{keysId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pool_provider_keys/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pool_provider_keys/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pool_provider_keys/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/workload_identity_pool_provider_keys/methods/delete
    service_accounts:
      id: google.iam.service_accounts
      name: service_accounts
      title: Service_accounts
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1serviceAccounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.accounts
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1serviceAccounts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}:enable/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}:disable/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_blob:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}:signBlob/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_jwt:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}:signJwt/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_accounts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_accounts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/service_accounts/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/service_accounts/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/service_accounts/methods/delete'
    service_accounts_iam_policies:
      id: google.iam.service_accounts_iam_policies
      name: service_accounts_iam_policies
      title: Service_accounts_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/service_accounts_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/service_accounts_iam_policies/methods/set_iam_policy
        delete: []
    service_account_keys:
      id: google.iam.service_account_keys
      name: service_account_keys
      title: Service_account_keys
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}~1keys/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.keys
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}~1keys/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}~1keys~1{keysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}~1keys~1{keysId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}~1keys:upload/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}~1keys~1{keysId}:disable/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1serviceAccounts~1{serviceAccountsId}~1keys~1{keysId}:enable/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_account_keys/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_account_keys/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/service_account_keys/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/service_account_keys/methods/delete
    roles:
      id: google.iam.roles
      name: roles
      title: Roles
      methods:
        list_project_roles:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.roles
        create_project_roles:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1roles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_project_roles:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1roles~1{rolesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch_project_roles:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1roles~1{rolesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_project_roles:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1roles~1{rolesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete_project_roles:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1roles~1{rolesId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_grantable_roles:
          operation:
            $ref: '#/paths/~1v1~1roles:queryGrantableRoles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.roles
        get:
          operation:
            $ref: '#/paths/~1v1~1roles~1{rolesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_org_roles:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.roles
        create_org_roles:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1roles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_org_roles:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1roles~1{rolesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch_org_roles:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1roles~1{rolesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_org_roles:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1roles~1{rolesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete_org_roles:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1roles~1{rolesId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/roles/methods/get_project_roles'
          - $ref: '#/components/x-stackQL-resources/roles/methods/get_org_roles'
          - $ref: '#/components/x-stackQL-resources/roles/methods/list_project_roles'
          - $ref: '#/components/x-stackQL-resources/roles/methods/get'
          - $ref: '#/components/x-stackQL-resources/roles/methods/list_org_roles'
          - $ref: '#/components/x-stackQL-resources/roles/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/roles/methods/create_project_roles
          - $ref: '#/components/x-stackQL-resources/roles/methods/create_org_roles'
        update:
          - $ref: '#/components/x-stackQL-resources/roles/methods/patch_project_roles'
          - $ref: '#/components/x-stackQL-resources/roles/methods/patch_org_roles'
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/roles/methods/delete_project_roles
          - $ref: '#/components/x-stackQL-resources/roles/methods/delete_org_roles'
    workforce_pools:
      id: google.iam.workforce_pools
      name: workforce_pools
      title: Workforce_pools
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1workforcePools/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workforcePools
        create:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1workforcePools/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workforce_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/workforce_pools/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workforce_pools/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/workforce_pools/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workforce_pools/methods/delete'
    workforce_pools_iam_policies:
      id: google.iam.workforce_pools_iam_policies
      name: workforce_pools_iam_policies
      title: Workforce_pools_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pools_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pools_iam_policies/methods/set_iam_policy
        delete: []
    workforce_pool_providers:
      id: google.iam.workforce_pool_providers
      name: workforce_pool_providers
      title: Workforce_pool_providers
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workforcePoolProviders
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pool_providers/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pool_providers/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pool_providers/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pool_providers/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pool_providers/methods/delete
    workforce_pool_provider_keys:
      id: google.iam.workforce_pool_provider_keys
      name: workforce_pool_provider_keys
      title: Workforce_pool_provider_keys
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}~1keys/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workforcePoolProviderKeys
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}~1keys/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}~1keys~1{keysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}~1keys~1{keysId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1providers~1{providersId}~1keys~1{keysId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pool_provider_keys/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pool_provider_keys/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pool_provider_keys/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pool_provider_keys/methods/delete
    workforce_pool_subjects:
      id: google.iam.workforce_pool_subjects
      name: workforce_pool_subjects
      title: Workforce_pool_subjects
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1subjects~1{subjectsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1locations~1{locationsId}~1workforcePools~1{workforcePoolsId}~1subjects~1{subjectsId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/workforce_pool_subjects/methods/delete
    permissions:
      id: google.iam.permissions
      name: permissions
      title: Permissions
      methods:
        query_testable_permissions:
          operation:
            $ref: '#/paths/~1v1~1permissions:queryTestablePermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    iam_policies:
      id: google.iam.iam_policies
      name: iam_policies
      title: Iam_policies
      methods:
        query_auditable_services:
          operation:
            $ref: '#/paths/~1v1~1iamPolicies:queryAuditableServices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lint_policy:
          operation:
            $ref: '#/paths/~1v1~1iamPolicies:lintPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/oauthClients:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Lists all non-deleted OauthClients in a project. If `show_deleted` is
        set to `true`, then deleted OauthClients are also listed.
      operationId: iam.projects.locations.oauthClients.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOauthClientsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: >-
        Creates a new OauthClient. You cannot reuse the name of a deleted
        OauthClient until 30 days after deletion.
      operationId: iam.projects.locations.oauthClients.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthClient'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthClient'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: oauthClientId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/oauthClients/{oauthClientsId}:
    parameters: *ref_1
    get:
      description: Gets an individual OauthClient.
      operationId: iam.projects.locations.oauthClients.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthClient'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing OauthClient.
      operationId: iam.projects.locations.oauthClients.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthClient'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthClient'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes an OauthClient. You cannot use a deleted OauthClient. However,
        deletion does not revoke access tokens that have already been issued.
        They continue to grant access. Deletion does revoke refresh tokens that
        have already been issued. They cannot be used to renew an access token.
        If the OauthClient is undeleted, and the refresh tokens are not expired,
        they are valid for token exchange again. You can undelete an OauthClient
        for 30 days. After 30 days, deletion is permanent. You cannot update
        deleted OauthClients. However, you can view and list them.
      operationId: iam.projects.locations.oauthClients.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthClient'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/oauthClients/{oauthClientsId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes an OauthClient, as long as it was deleted fewer than 30 days
        ago.
      operationId: iam.projects.locations.oauthClients.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteOauthClientRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthClient'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/oauthClients/{oauthClientsId}/credentials:
    parameters: *ref_1
    get:
      description: Lists all OauthClientCredentials in an OauthClient.
      operationId: iam.projects.locations.oauthClients.credentials.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOauthClientCredentialsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
    post:
      description: Creates a new OauthClientCredential.
      operationId: iam.projects.locations.oauthClients.credentials.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthClientCredential'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthClientCredential'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
        - in: query
          name: oauthClientCredentialId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/oauthClients/{oauthClientsId}/credentials/{credentialsId}:
    parameters: *ref_1
    get:
      description: Gets an individual OauthClientCredential.
      operationId: iam.projects.locations.oauthClients.credentials.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthClientCredential'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
        - in: path
          name: credentialsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing OauthClientCredential.
      operationId: iam.projects.locations.oauthClients.credentials.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthClientCredential'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthClientCredential'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
        - in: path
          name: credentialsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes an OauthClientCredential. Before deleting an
        OauthClientCredential, it should first be disabled.
      operationId: iam.projects.locations.oauthClients.credentials.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
        - in: path
          name: credentialsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools:
    parameters: *ref_1
    get:
      description: >-
        Lists all non-deleted WorkloadIdentityPools in a project. If
        `show_deleted` is set to `true`, then deleted pools are also listed.
      operationId: iam.projects.locations.workloadIdentityPools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkloadIdentityPoolsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: >-
        Creates a new WorkloadIdentityPool. You cannot reuse the name of a
        deleted pool until 30 days after deletion.
      operationId: iam.projects.locations.workloadIdentityPools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadIdentityPool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: workloadIdentityPoolId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}:
    parameters: *ref_1
    get:
      description: Gets an individual WorkloadIdentityPool.
      operationId: iam.projects.locations.workloadIdentityPools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadIdentityPool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing WorkloadIdentityPool.
      operationId: iam.projects.locations.workloadIdentityPools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadIdentityPool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a WorkloadIdentityPool. You cannot use a deleted pool to
        exchange external credentials for Google Cloud credentials. However,
        deletion does not revoke credentials that have already been issued.
        Credentials issued for a deleted pool do not grant access to resources.
        If the pool is undeleted, and the credentials are not expired, they
        grant access again. You can undelete a pool for 30 days. After 30 days,
        deletion is permanent. You cannot update deleted pools. However, you can
        view and list them.
      operationId: iam.projects.locations.workloadIdentityPools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkloadIdentityPool, as long as it was deleted fewer than
        30 days ago.
      operationId: iam.projects.locations.workloadIdentityPools.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkloadIdentityPoolRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.projects.locations.workloadIdentityPools.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/namespaces/{namespacesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.projects.locations.workloadIdentityPools.namespaces.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/namespaces/{namespacesId}/managedIdentities/{managedIdentitiesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: managedIdentitiesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/namespaces/{namespacesId}/managedIdentities/{managedIdentitiesId}/workloadSources/{workloadSourcesId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.workloadSources.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: managedIdentitiesId
          required: true
          schema:
            type: string
        - in: path
          name: workloadSourcesId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers:
    parameters: *ref_1
    get:
      description: >-
        Lists all non-deleted WorkloadIdentityPoolProviders in a
        WorkloadIdentityPool. If `show_deleted` is set to `true`, then deleted
        providers are also listed.
      operationId: iam.projects.locations.workloadIdentityPools.providers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkloadIdentityPoolProvidersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: >-
        Creates a new WorkloadIdentityPoolProvider in a WorkloadIdentityPool.
        You cannot reuse the name of a deleted provider until 30 days after
        deletion.
      operationId: iam.projects.locations.workloadIdentityPools.providers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadIdentityPoolProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: workloadIdentityPoolProviderId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}:
    parameters: *ref_1
    get:
      description: Gets an individual WorkloadIdentityPoolProvider.
      operationId: iam.projects.locations.workloadIdentityPools.providers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadIdentityPoolProvider'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing WorkloadIdentityPoolProvider.
      operationId: iam.projects.locations.workloadIdentityPools.providers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadIdentityPoolProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a WorkloadIdentityPoolProvider. Deleting a provider does not
        revoke credentials that have already been issued; they continue to grant
        access. You can undelete a provider for 30 days. After 30 days, deletion
        is permanent. You cannot update deleted providers. However, you can view
        and list them.
      operationId: iam.projects.locations.workloadIdentityPools.providers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkloadIdentityPoolProvider, as long as it was deleted
        fewer than 30 days ago.
      operationId: iam.projects.locations.workloadIdentityPools.providers.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkloadIdentityPoolProviderRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.projects.locations.workloadIdentityPools.providers.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/keys:
    parameters: *ref_1
    get:
      description: >-
        Lists all non-deleted WorkloadIdentityPoolProviderKeys in a project. If
        show_deleted is set to `true`, then deleted pools are also listed.
      operationId: iam.projects.locations.workloadIdentityPools.providers.keys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ListWorkloadIdentityPoolProviderKeysResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: >-
        Create a new WorkloadIdentityPoolProviderKey in a
        WorkloadIdentityPoolProvider.
      operationId: iam.projects.locations.workloadIdentityPools.providers.keys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadIdentityPoolProviderKey'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: workloadIdentityPoolProviderKeyId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/keys/{keysId}:
    parameters: *ref_1
    get:
      description: Gets an individual WorkloadIdentityPoolProviderKey.
      operationId: iam.projects.locations.workloadIdentityPools.providers.keys.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadIdentityPoolProviderKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes an WorkloadIdentityPoolProviderKey. You can undelete a key for
        30 days. After 30 days, deletion is permanent.
      operationId: iam.projects.locations.workloadIdentityPools.providers.keys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/keys/{keysId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes an WorkloadIdentityPoolProviderKey, as long as it was deleted
        fewer than 30 days ago.
      operationId: iam.projects.locations.workloadIdentityPools.providers.keys.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UndeleteWorkloadIdentityPoolProviderKeyRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/keys/{keysId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        iam.projects.locations.workloadIdentityPools.providers.keys.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts:
    parameters: *ref_1
    get:
      description: Lists every ServiceAccount that belongs to a specific project.
      operationId: iam.projects.serviceAccounts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceAccountsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a ServiceAccount.
      operationId: iam.projects.serviceAccounts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:
    parameters: *ref_1
    get:
      description: Gets a ServiceAccount.
      operationId: iam.projects.serviceAccounts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
    put:
      description: >-
        **Note:** We are in the process of deprecating this method. Use
        PatchServiceAccount instead. Updates a ServiceAccount. You can update
        only the `display_name` field.
      operationId: iam.projects.serviceAccounts.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccount'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
    patch:
      description: Patches a ServiceAccount.
      operationId: iam.projects.serviceAccounts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchServiceAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a ServiceAccount. **Warning:** After you delete a service
        account, you might not be able to undelete it. If you know that you need
        to re-enable the service account in the future, use
        DisableServiceAccount instead. If you delete a service account, IAM
        permanently removes the service account 30 days later. Google Cloud
        cannot recover the service account after it is permanently removed, even
        if you file a support request. To help avoid unplanned outages, we
        recommend that you disable the service account before you delete it. Use
        DisableServiceAccount to disable the service account, then wait at least
        24 hours and watch for unintended consequences. If there are no
        unintended consequences, you can delete the service account.
      operationId: iam.projects.serviceAccounts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Restores a deleted ServiceAccount. **Important:** It is not always
        possible to restore a deleted service account. Use this method only as a
        last resort. After you delete a service account, IAM permanently removes
        the service account 30 days later. There is no way to restore a deleted
        service account that has been permanently removed.
      operationId: iam.projects.serviceAccounts.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteServiceAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UndeleteServiceAccountResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:enable:
    parameters: *ref_1
    post:
      description: >-
        Enables a ServiceAccount that was disabled by DisableServiceAccount. If
        the service account is already enabled, then this method has no effect.
        If the service account was disabled by other means—for example, if
        Google disabled the service account because it was compromised—you
        cannot use this method to enable the service account.
      operationId: iam.projects.serviceAccounts.enable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableServiceAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:disable:
    parameters: *ref_1
    post:
      description: >-
        Disables a ServiceAccount immediately. If an application uses the
        service account to authenticate, that application can no longer call
        Google APIs or access Google Cloud resources. Existing access tokens for
        the service account are rejected, and requests for new access tokens
        will fail. To re-enable the service account, use EnableServiceAccount.
        After you re-enable the service account, its existing access tokens will
        be accepted, and you can request new access tokens. To help avoid
        unplanned outages, we recommend that you disable the service account
        before you delete it. Use this method to disable the service account,
        then wait at least 24 hours and watch for unintended consequences. If
        there are no unintended consequences, you can delete the service account
        with DeleteServiceAccount.
      operationId: iam.projects.serviceAccounts.disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableServiceAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signBlob:
    parameters: *ref_1
    post:
      description: >-
        **Note:** This method is deprecated. Use the
        [signBlob](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signBlob)
        method in the IAM Service Account Credentials API instead. If you
        currently use this method, see the [migration
        guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
        instructions. Signs a blob using the system-managed private key for a
        ServiceAccount.
      operationId: iam.projects.serviceAccounts.signBlob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignBlobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignBlobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signJwt:
    parameters: *ref_1
    post:
      description: >-
        **Note:** This method is deprecated. Use the
        [signJwt](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signJwt)
        method in the IAM Service Account Credentials API instead. If you
        currently use this method, see the [migration
        guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
        instructions. Signs a JSON Web Token (JWT) using the system-managed
        private key for a ServiceAccount.
      operationId: iam.projects.serviceAccounts.signJwt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignJwtRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignJwtResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the IAM policy that is attached to a ServiceAccount. This IAM
        policy specifies which principals have access to the service account.
        This method does not tell you whether the service account has been
        granted any roles on other resources. To check whether a service account
        has role grants on a resource, use the `getIamPolicy` method for that
        resource. For example, to view the role grants for a project, call the
        Resource Manager API's
        [projects.getIamPolicy](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy)
        method.
      operationId: iam.projects.serviceAccounts.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the IAM policy that is attached to a ServiceAccount. Use this
        method to grant or revoke access to the service account. For example,
        you could grant a principal the ability to impersonate the service
        account. This method does not enable the service account to access other
        resources. To grant roles to a service account on a resource, follow
        these steps: 1. Call the resource's `getIamPolicy` method to get its
        current IAM policy. 2. Edit the policy so that it binds the service
        account to an IAM role for the resource. 3. Call the resource's
        `setIamPolicy` method to update its IAM policy. For detailed
        instructions, see [Manage access to project, folders, and
        organizations](https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts)
        or [Manage access to other
        resources](https://cloud.google.com/iam/help/access/manage-other-resources).
      operationId: iam.projects.serviceAccounts.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Tests whether the caller has the specified permissions on a
        ServiceAccount.
      operationId: iam.projects.serviceAccounts.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys:
    parameters: *ref_1
    get:
      description: Lists every ServiceAccountKey for a service account.
      operationId: iam.projects.serviceAccounts.keys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceAccountKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: query
          name: keyTypes
          schema:
            type: string
    post:
      description: Creates a ServiceAccountKey.
      operationId: iam.projects.serviceAccounts.keys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceAccountKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}:
    parameters: *ref_1
    get:
      description: Gets a ServiceAccountKey.
      operationId: iam.projects.serviceAccounts.keys.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: query
          name: publicKeyType
          schema:
            type: string
    delete:
      description: >-
        Deletes a ServiceAccountKey. Deleting a service account key does not
        revoke short-lived credentials that have been issued based on the
        service account key.
      operationId: iam.projects.serviceAccounts.keys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys:upload:
    parameters: *ref_1
    post:
      description: >-
        Uploads the public key portion of a key pair that you manage, and
        associates the public key with a ServiceAccount. After you upload the
        public key, you can use the private key from the key pair as a service
        account key.
      operationId: iam.projects.serviceAccounts.keys.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadServiceAccountKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}:disable:
    parameters: *ref_1
    post:
      description: >-
        Disable a ServiceAccountKey. A disabled service account key can be
        re-enabled with EnableServiceAccountKey.
      operationId: iam.projects.serviceAccounts.keys.disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableServiceAccountKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}:enable:
    parameters: *ref_1
    post:
      description: Enable a ServiceAccountKey.
      operationId: iam.projects.serviceAccounts.keys.enable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableServiceAccountKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/roles:
    parameters: *ref_1
    get:
      description: >-
        Lists every predefined Role that IAM supports, or every custom role that
        is defined for an organization or project.
      operationId: iam.projects.roles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: Creates a new custom Role.
      operationId: iam.projects.roles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/roles/{rolesId}:
    parameters: *ref_1
    get:
      description: Gets the definition of a Role.
      operationId: iam.projects.roles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the definition of a custom Role.
      operationId: iam.projects.roles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a custom Role. When you delete a custom role, the following
        changes occur immediately: * You cannot bind a principal to the custom
        role in an IAM Policy. * Existing bindings to the custom role are not
        changed, but they have no effect. * By default, the response from
        ListRoles does not include the custom role. A deleted custom role still
        counts toward the [custom role
        limit](https://cloud.google.com/iam/help/limits) until it is permanently
        deleted. You have 7 days to undelete the custom role. After 7 days, the
        following changes occur: * The custom role is permanently deleted and
        cannot be recovered. * If an IAM policy contains a binding to the custom
        role, the binding is permanently removed. * The custom role no longer
        counts toward your custom role limit.
      operationId: iam.projects.roles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
            format: byte
  /v1/projects/{projectsId}/roles/{rolesId}:undelete:
    parameters: *ref_1
    post:
      description: Undeletes a custom Role.
      operationId: iam.projects.roles.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteRoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools:
    parameters: *ref_1
    get:
      description: >-
        Lists all non-deleted WorkforcePools under the specified parent. If
        `show_deleted` is set to `true`, then deleted pools are also listed.
      operationId: iam.locations.workforcePools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkforcePoolsResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: >-
        Creates a new WorkforcePool. You cannot reuse the name of a deleted pool
        until 30 days after deletion.
      operationId: iam.locations.workforcePools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkforcePool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: workforcePoolId
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}:
    parameters: *ref_1
    get:
      description: Gets an individual WorkforcePool.
      operationId: iam.locations.workforcePools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkforcePool'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing WorkforcePool.
      operationId: iam.locations.workforcePools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkforcePool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a WorkforcePool. You cannot use a deleted WorkforcePool to
        exchange external credentials for Google Cloud credentials. However,
        deletion does not revoke credentials that have already been issued.
        Credentials issued for a deleted pool do not grant access to resources.
        If the pool is undeleted, and the credentials are not expired, they
        grant access again. You can undelete a pool for 30 days. After 30 days,
        deletion is permanent. You cannot update deleted pools. However, you can
        view and list them.
      operationId: iam.locations.workforcePools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkforcePool, as long as it was deleted fewer than 30 days
        ago.
      operationId: iam.locations.workforcePools.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkforcePoolRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets IAM policies on a WorkforcePool.
      operationId: iam.locations.workforcePools.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets IAM policies on a WorkforcePool.
      operationId: iam.locations.workforcePools.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns the caller's permissions on the WorkforcePool. If the pool
        doesn't exist, this call returns an empty set of permissions. It doesn't
        return a `NOT_FOUND` error.
      operationId: iam.locations.workforcePools.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.locations.workforcePools.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers:
    parameters: *ref_1
    get:
      description: >-
        Lists all non-deleted WorkforcePoolProviders in a WorkforcePool. If
        `show_deleted` is set to `true`, then deleted providers are also listed.
      operationId: iam.locations.workforcePools.providers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkforcePoolProvidersResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: >-
        Creates a new WorkforcePoolProvider in a WorkforcePool. You cannot reuse
        the name of a deleted provider until 30 days after deletion.
      operationId: iam.locations.workforcePools.providers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkforcePoolProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: workforcePoolProviderId
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}:
    parameters: *ref_1
    get:
      description: Gets an individual WorkforcePoolProvider.
      operationId: iam.locations.workforcePools.providers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkforcePoolProvider'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing WorkforcePoolProvider.
      operationId: iam.locations.workforcePools.providers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkforcePoolProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a WorkforcePoolProvider. Deleting a provider does not revoke
        credentials that have already been issued; they continue to grant
        access. You can undelete a provider for 30 days. After 30 days, deletion
        is permanent. You cannot update deleted providers. However, you can view
        and list them.
      operationId: iam.locations.workforcePools.providers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkforcePoolProvider, as long as it was deleted fewer than
        30 days ago.
      operationId: iam.locations.workforcePools.providers.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkforcePoolProviderRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.locations.workforcePools.providers.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}/keys:
    parameters: *ref_1
    get:
      description: >-
        Lists all non-deleted WorkforcePoolProviderKeys in a
        WorkforcePoolProvider. If `show_deleted` is set to `true`, then deleted
        keys are also listed.
      operationId: iam.locations.workforcePools.providers.keys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkforcePoolProviderKeysResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: Creates a new WorkforcePoolProviderKey in a WorkforcePoolProvider.
      operationId: iam.locations.workforcePools.providers.keys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkforcePoolProviderKey'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: workforcePoolProviderKeyId
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}/keys/{keysId}:
    parameters: *ref_1
    get:
      description: Gets a WorkforcePoolProviderKey.
      operationId: iam.locations.workforcePools.providers.keys.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkforcePoolProviderKey'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a WorkforcePoolProviderKey. You can undelete a key for 30 days.
        After 30 days, deletion is permanent.
      operationId: iam.locations.workforcePools.providers.keys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}/keys/{keysId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkforcePoolProviderKey, as long as it was deleted fewer
        than 30 days ago.
      operationId: iam.locations.workforcePools.providers.keys.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkforcePoolProviderKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}/keys/{keysId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.locations.workforcePools.providers.keys.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/subjects/{subjectsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a WorkforcePoolSubject. Subject must not already be in a deleted
        state. A WorkforcePoolSubject is automatically created the first time an
        external credential is exchanged for a Google Cloud credential using a
        mapped `google.subject` attribute. There is no endpoint to manually
        create a WorkforcePoolSubject. For 30 days after a WorkforcePoolSubject
        is deleted, using the same `google.subject` attribute in token exchanges
        with Google Cloud STS fails. Call UndeleteWorkforcePoolSubject to
        undelete a WorkforcePoolSubject that has been deleted, within within 30
        days of deleting it. After 30 days, the WorkforcePoolSubject is
        permanently deleted. At this point, a token exchange with Google Cloud
        STS that uses the same mapped `google.subject` attribute automatically
        creates a new WorkforcePoolSubject that is unrelated to the previously
        deleted WorkforcePoolSubject but has the same `google.subject` value.
      operationId: iam.locations.workforcePools.subjects.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: subjectsId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/subjects/{subjectsId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkforcePoolSubject, as long as it was deleted fewer than
        30 days ago.
      operationId: iam.locations.workforcePools.subjects.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkforcePoolSubjectRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: subjectsId
          required: true
          schema:
            type: string
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/subjects/{subjectsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.locations.workforcePools.subjects.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: subjectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/roles:queryGrantableRoles:
    parameters: *ref_1
    post:
      description: >-
        Lists roles that can be granted on a Google Cloud resource. A role is
        grantable if the IAM policy for the resource can contain bindings to the
        role.
      operationId: iam.roles.queryGrantableRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryGrantableRolesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryGrantableRolesResponse'
      parameters: []
  /v1/roles:
    parameters: *ref_1
    get:
      description: >-
        Lists every predefined Role that IAM supports, or every custom role that
        is defined for an organization or project.
      operationId: iam.roles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
      parameters:
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
  /v1/roles/{rolesId}:
    parameters: *ref_1
    get:
      description: Gets the definition of a Role.
      operationId: iam.roles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/roles:
    parameters: *ref_1
    get:
      description: >-
        Lists every predefined Role that IAM supports, or every custom role that
        is defined for an organization or project.
      operationId: iam.organizations.roles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: Creates a new custom Role.
      operationId: iam.organizations.roles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/roles/{rolesId}:
    parameters: *ref_1
    get:
      description: Gets the definition of a Role.
      operationId: iam.organizations.roles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the definition of a custom Role.
      operationId: iam.organizations.roles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes a custom Role. When you delete a custom role, the following
        changes occur immediately: * You cannot bind a principal to the custom
        role in an IAM Policy. * Existing bindings to the custom role are not
        changed, but they have no effect. * By default, the response from
        ListRoles does not include the custom role. A deleted custom role still
        counts toward the [custom role
        limit](https://cloud.google.com/iam/help/limits) until it is permanently
        deleted. You have 7 days to undelete the custom role. After 7 days, the
        following changes occur: * The custom role is permanently deleted and
        cannot be recovered. * If an IAM policy contains a binding to the custom
        role, the binding is permanently removed. * The custom role no longer
        counts toward your custom role limit.
      operationId: iam.organizations.roles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
            format: byte
  /v1/organizations/{organizationsId}/roles/{rolesId}:undelete:
    parameters: *ref_1
    post:
      description: Undeletes a custom Role.
      operationId: iam.organizations.roles.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteRoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
  /v1/permissions:queryTestablePermissions:
    parameters: *ref_1
    post:
      description: >-
        Lists every permission that you can test on a resource. A permission is
        testable if you can check whether a principal has that permission on the
        resource.
      operationId: iam.permissions.queryTestablePermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTestablePermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTestablePermissionsResponse'
      parameters: []
  /v1/iamPolicies:queryAuditableServices:
    parameters: *ref_1
    post:
      description: >-
        Returns a list of services that allow you to opt into audit logs that
        are not generated by default. To learn more about audit logs, see the
        [Logging documentation](https://cloud.google.com/logging/docs/audit).
      operationId: iam.iamPolicies.queryAuditableServices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAuditableServicesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryAuditableServicesResponse'
      parameters: []
  /v1/iamPolicies:lintPolicy:
    parameters: *ref_1
    post:
      description: >-
        Lints, or validates, an IAM policy. Currently checks the
        google.iam.v1.Binding.condition field, which contains a condition
        expression for a role binding. Successful calls to this method always
        return an HTTP `200 OK` status code, even if the linter detects an issue
        in the IAM policy.
      operationId: iam.iamPolicies.lintPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LintPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LintPolicyResponse'
      parameters: []
