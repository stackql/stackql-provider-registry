openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-08-10'
externalDocs:
  url: 'https://developers.google.com/identity-toolkit/v3/'
servers:
  - url: 'https://www.googleapis.com/identitytoolkit/v3/relyingparty'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
            'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    IdentitytoolkitRelyingpartySignOutUserResponse:
      description: Response of signing out user.
      type: object
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      properties:
        localId:
          type: string
          description: The local ID of the user.
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      properties:
        maxResults:
          format: uint32
          type: integer
          description: The max number of results to return in the response.
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        targetProjectId:
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
          type: string
        nextPageToken:
          description: The token for the next page. This should be taken from the previous response.
          type: string
      type: object
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
      description: Request to download user account in batch.
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      description: Response for Identitytoolkit-VerifyPhoneNumber
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
      properties:
        idToken:
          type: string
        phoneNumber:
          type: string
        expiresIn:
          format: int64
          type: string
        temporaryProofExpiresIn:
          format: int64
          type: string
        isNewUser:
          type: boolean
        temporaryProof:
          type: string
        refreshToken:
          type: string
        verificationProofExpiresIn:
          type: string
          format: int64
        localId:
          type: string
        verificationProof:
          type: string
      type: object
    UploadAccountResponse:
      properties:
        kind:
          description: The fixed string "identitytoolkit#UploadAccountResponse".
          type: string
          default: identitytoolkit#UploadAccountResponse
        error:
          type: array
          description: The error encountered while processing the account info.
          items:
            type: object
            properties:
              message:
                description: Detailed error message for the account info.
                type: string
              index:
                type: integer
                format: int32
                description: 'The index of the malformed account, starting from 0.'
      type: object
      description: Respone of uploading accounts in batch.
      id: UploadAccountResponse
    DownloadAccountResponse:
      id: DownloadAccountResponse
      properties:
        nextPageToken:
          type: string
          description: The next page token. To be used in a subsequent request to return the next page of results.
        kind:
          default: identitytoolkit#DownloadAccountResponse
          type: string
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
        users:
          description: The user accounts data.
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
      description: Response of downloading accounts in batch.
      type: object
    EmailLinkSigninResponse:
      id: EmailLinkSigninResponse
      properties:
        refreshToken:
          type: string
          description: The refresh token for the signed in user.
        expiresIn:
          type: string
          description: Expiration time of STS id token in seconds.
          format: int64
        kind:
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          default: identitytoolkit#EmailLinkSigninResponse
          type: string
        isNewUser:
          description: Whether the user is new.
          type: boolean
        idToken:
          description: The STS id token to login the newly signed in user.
          type: string
        email:
          description: The user's email.
          type: string
        localId:
          description: The RP local ID of the user.
          type: string
      type: object
      description: Response of email signIn.
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      type: object
      description: Response of setting the project configuration.
      properties:
        projectId:
          description: Project ID of the relying party.
          type: string
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
    VerifyAssertionResponse:
      type: object
      id: VerifyAssertionResponse
      description: Response of verifying the IDP assertion.
      properties:
        kind:
          default: identitytoolkit#VerifyAssertionResponse
          type: string
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
        originalEmail:
          type: string
          description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
        oauthRequestToken:
          description: The user approved request token for the OpenID OAuth extension.
          type: string
        firstName:
          description: The first name of the user.
          type: string
        lastName:
          description: The last name of the user.
          type: string
        action:
          description: The action code.
          type: string
        rawUserInfo:
          description: Raw IDP-returned user info.
          type: string
        localId:
          type: string
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        photoUrl:
          description: The URI of the public accessible profiel picture.
          type: string
        idToken:
          description: The ID token.
          type: string
        screenName:
          description: The screen_name of a Twitter user or the login name at Github.
          type: string
        language:
          description: The language preference of the user.
          type: string
        verifiedProvider:
          type: array
          items:
            type: string
          description: 'When action is ''map'', contains the idps which can be used for confirmation.'
        oauthExpireIn:
          type: integer
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
        errorMessage:
          type: string
          description: Client error code.
        email:
          type: string
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
        providerId:
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.'
          type: string
        fullName:
          description: The full name of the user.
          type: string
        emailRecycled:
          type: boolean
          description: It's true if the email is recycled.
        needEmail:
          type: boolean
          description: Whether need client to supply email to complete the federated login flow.
        context:
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
          type: string
        needConfirmation:
          type: boolean
          description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
        oauthScope:
          type: string
          description: The scope for the OpenID OAuth extension.
        timeZone:
          type: string
          description: The timezone of the user.
        oauthTokenSecret:
          description: The OAuth1 access token secret.
          type: string
        appScheme:
          description: The custom scheme used by mobile app.
          type: string
        displayName:
          type: string
          description: The display name of the user.
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        dateOfBirth:
          description: The birth date of the IdP account.
          type: string
        emailVerified:
          description: The value is true if the IDP is also the email provider. It means the user owns the email.
          type: boolean
        inputEmail:
          description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
          type: string
        federatedId:
          description: The unique ID identifies the IdP account.
          type: string
        oauthIdToken:
          type: string
          description: The OIDC id token.
        nickName:
          description: The nick name of the user.
          type: string
        expiresIn:
          type: string
          format: int64
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        appInstallationUrl:
          type: string
          description: URL for OTA app installation.
        isNewUser:
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
          type: boolean
        oauthAccessToken:
          description: The OAuth2 access token.
          type: string
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      description: Request to set the account information.
      properties:
        deleteAttribute:
          description: The attributes users request to delete.
          items:
            type: string
          type: array
        validSince:
          description: Timestamp in seconds for valid login token.
          type: string
          format: int64
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        customAttributes:
          type: string
          description: The custom attributes to be set in the user's id token.
        deleteProvider:
          items:
            type: string
          type: array
          description: The IDPs the user request to delete.
        provider:
          description: The associated IDPs of the user.
          items:
            type: string
          type: array
        disableUser:
          type: boolean
          description: Whether to disable the user.
        lastLoginAt:
          type: string
          format: int64
          description: Last login timestamp.
        displayName:
          type: string
          description: The name of the user.
        captchaResponse:
          description: Response to the captcha.
          type: string
        oobCode:
          type: string
          description: The out-of-band code of the change email request.
        createdAt:
          type: string
          description: The timestamp when the account is created.
          format: int64
        upgradeToFederatedLogin:
          type: boolean
          description: Mark the user to upgrade to federated login.
        instanceId:
          description: Instance id token of the app.
          type: string
        photoUrl:
          type: string
          description: The photo url of the user.
        phoneNumber:
          type: string
          description: Privileged caller can update user with specified phone number.
        password:
          description: The new password of the user.
          type: string
        email:
          description: The email of the user.
          type: string
        localId:
          type: string
          description: The local ID of the user.
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        captchaChallenge:
          description: The captcha challenge.
          type: string
        emailVerified:
          description: Mark the email as verified or not.
          type: boolean
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
      type: object
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      properties:
        oobCode:
          type: string
          description: The confirmation code.
        email:
          description: The email address of the user.
          type: string
        idToken:
          type: string
          description: Token for linking flow.
      type: object
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      description: Request to sign in with email.
    SignupNewUserResponse:
      description: 'Response of signing up new user, creating anonymous user or anonymous user reauth.'
      id: SignupNewUserResponse
      type: object
      properties:
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        email:
          description: The email of the user.
          type: string
        kind:
          default: identitytoolkit#SignupNewUserResponse
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
          type: string
        localId:
          type: string
          description: The RP local ID of the user.
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        displayName:
          description: The name of the user.
          type: string
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      type: object
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
      description: Request to verify the IDP assertion.
      properties:
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
          format: int64
        returnRefreshToken:
          type: boolean
          description: Whether to return refresh tokens.
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        autoCreate:
          type: boolean
          description: 'When it''s true, automatically creates a new account if the user doesn''t exist. When it''s false, allows existing user to sign in normally and throws exception if the user doesn''t exist.'
        tenantProjectNumber:
          format: uint64
          type: string
          description: Tenant project number to be used for idp discovery.
        sessionId:
          description: 'Session ID, which should match the one in previous createAuthUri request.'
          type: string
        pendingIdToken:
          description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
          type: string
        returnIdpCredential:
          type: boolean
          description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
        requestUri:
          type: string
          description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        postBody:
          description: The post body if the request is a HTTP POST.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
    Relyingparty:
      type: object
      properties:
        androidInstallApp:
          description: whether or not to install the android app on the device where the link is opened
          type: boolean
        userIp:
          type: string
          description: The IP address of the user.
        kind:
          default: identitytoolkit#relyingparty
          description: The fixed string "identitytoolkit#relyingparty".
          type: string
        androidMinimumVersion:
          type: string
          description: minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
        captchaResp:
          description: The recaptcha response from the user.
          type: string
        email:
          description: The email of the user.
          type: string
        requestType:
          description: The request type.
          type: string
        androidPackageName:
          description: android package name of the android app to handle the action code
          type: string
        canHandleCodeInApp:
          description: whether or not the app can handle the oob code without first going to web
          type: boolean
        iOSAppStoreId:
          description: iOS app store id to download the app if it's not already installed
          type: string
        newEmail:
          type: string
          description: The new email if the code is for email change.
        challenge:
          description: The recaptcha challenge presented to the user.
          type: string
        iOSBundleId:
          description: the iOS bundle id of iOS app to handle the action code
          type: string
        idToken:
          type: string
          description: The user's Gitkit login token for email change.
        continueUrl:
          description: The url to continue to the Gitkit app
          type: string
      id: Relyingparty
      description: 'Request of getting a code for user confirmation (reset password, change email etc.)'
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      type: object
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
      description: Respone of getting public keys.
      additionalProperties:
        type: string
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      properties:
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          type: boolean
        enableAnonymousUser:
          type: boolean
          description: Whether anonymous user is enabled.
        projectId:
          type: string
          description: Project ID of the relying party.
        dynamicLinksDomain:
          type: string
        authorizedDomains:
          type: array
          description: Authorized domains.
          items:
            type: string
        idpConfig:
          description: OAuth2 provider configuration.
          type: array
          items:
            $ref: '#/components/schemas/IdpConfig'
        apiKey:
          description: 'Browser API key, needed when making http request to Apiary.'
          type: string
        verifyEmailTemplate:
          description: Verify email template.
          $ref: '#/components/schemas/EmailTemplate'
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        resetPasswordTemplate:
          description: Reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
      description: Response of getting the project configuration.
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      type: object
    IdentitytoolkitRelyingpartySignOutUserRequest:
      properties:
        instanceId:
          description: Instance id token of the app.
          type: string
        localId:
          type: string
          description: The local ID of the user.
      description: Request to sign out user.
      type: object
      id: IdentitytoolkitRelyingpartySignOutUserRequest
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      description: Request to reset the password.
      properties:
        oobCode:
          type: string
          description: The confirmation code.
        email:
          type: string
          description: The email address of the user.
        oldPassword:
          type: string
          description: The old password inputted by the user.
        newPassword:
          description: The new password inputted by the user.
          type: string
      type: object
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
    GetRecaptchaParamResponse:
      type: object
      id: GetRecaptchaParamResponse
      properties:
        recaptchaSiteKey:
          description: Site key registered at recaptcha.
          type: string
        recaptchaStoken:
          type: string
          description: 'The stoken field for the recaptcha widget, used to request captcha challenge.'
        kind:
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          default: identitytoolkit#GetRecaptchaParamResponse
          type: string
      description: Response of getting recaptcha param.
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      type: object
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      description: Request for Identitytoolkit-VerifyPhoneNumber
      properties:
        phoneNumber:
          type: string
        sessionInfo:
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
          type: string
        temporaryProof:
          type: string
        verificationProof:
          type: string
        idToken:
          type: string
        code:
          type: string
        operation:
          type: string
    UserInfo:
      properties:
        emailVerified:
          type: boolean
          description: Whether the email has been verified.
        version:
          type: integer
          description: Version of the user's password.
          format: int32
        localId:
          type: string
          description: The local ID of the user.
        disabled:
          description: Whether the user is disabled.
          type: boolean
        phoneNumber:
          description: User's phone number.
          type: string
        lastLoginAt:
          description: last login timestamp.
          type: string
          format: int64
        createdAt:
          format: int64
          type: string
          description: User creation timestamp.
        customAuth:
          type: boolean
          description: Whether the user is authenticated by the developer.
        passwordUpdatedAt:
          description: The timestamp when the password was last updated.
          format: double
          type: number
        rawPassword:
          description: The user's plain text password.
          type: string
        validSince:
          format: int64
          description: Timestamp in seconds for valid login token.
          type: string
        displayName:
          description: The name of the user.
          type: string
        screenName:
          type: string
          description: User's screen name at Twitter or login name at Github.
        providerUserInfo:
          description: The IDP of the user.
          type: array
          items:
            properties:
              phoneNumber:
                description: User's phone number.
                type: string
              federatedId:
                description: User's identifier at IDP.
                type: string
              email:
                type: string
                description: User's email at IDP.
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
              rawId:
                description: User's raw identifier directly returned from IDP.
                type: string
              screenName:
                description: User's screen name at Twitter or login name at Github.
                type: string
              displayName:
                description: The user's display name at the IDP.
                type: string
              providerId:
                description: 'The IdP ID. For white listed IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
                type: string
            type: object
        passwordHash:
          description: The user's hashed password.
          format: byte
          type: string
        email:
          description: The email of the user.
          type: string
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        salt:
          format: byte
          description: The user's password salt.
          type: string
        photoUrl:
          type: string
          description: The URL of the user profile photo.
      description: Template for an individual account info.
      id: UserInfo
      type: object
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      type: object
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
      properties:
        recaptchaToken:
          description: Recaptcha solution.
          type: string
        phoneNumber:
          description: The phone number to send the verification code to in E.164 format.
          type: string
        iosSecret:
          description: Secret delivered to iOS app via APNS.
          type: string
        iosReceipt:
          type: string
          description: Receipt of successful app token validation with APNS.
      description: Request for Identitytoolkit-SendVerificationCode
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      description: Request to verify a custom token
      type: object
      properties:
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        token:
          type: string
          description: The custom token to verify
        instanceId:
          description: Instance id token of the app.
          type: string
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      description: Request to delete account.
      properties:
        idToken:
          description: The GITKit token or STS id token of the authenticated user.
          type: string
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        localId:
          type: string
          description: The local ID of the user.
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      description: Request to verify the password.
      type: object
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
      properties:
        email:
          type: string
          description: The email of the user.
        captchaResponse:
          description: Response to the captcha.
          type: string
        password:
          type: string
          description: The password inputed by the user.
        pendingIdToken:
          description: 'The GITKit token for the non-trusted IDP, which is to be confirmed by the user.'
          type: string
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
        captchaChallenge:
          description: The captcha challenge.
          type: string
        tenantProjectNumber:
          format: uint64
          description: Tenant project number to be used for idp discovery.
          type: string
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      description: Request to get the IDP authentication URL.
      properties:
        authFlowType:
          type: string
          description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
        sessionId:
          type: string
          description: The session_id passed by client.
        oauthScope:
          description: 'Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant'
          type: string
        otaApp:
          description: The native app package for OTA installation.
          type: string
        openidRealm:
          description: 'Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.'
          type: string
        providerId:
          type: string
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
        clientId:
          description: The relying party OAuth client ID.
          type: string
        tenantProjectNumber:
          format: uint64
          description: Tenant project number to be used for idp discovery.
          type: string
        hostedDomain:
          description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
          type: string
        oauthConsumerKey:
          description: The developer's consumer key for OpenId OAuth Extension
          type: string
        customParameter:
          description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
          additionalProperties:
            description: The customized query parameter.
            type: string
          type: object
        appId:
          type: string
          description: 'The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.'
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        continueUri:
          description: The URI to which the IDP redirects the user after the federated login flow.
          type: string
        identifier:
          type: string
          description: The email or federated ID of the user.
      type: object
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
    GetOobConfirmationCodeResponse:
      type: object
      properties:
        oobCode:
          description: The code to be send to the user.
          type: string
        email:
          description: The email address that the email is sent to.
          type: string
        kind:
          type: string
          default: identitytoolkit#GetOobConfirmationCodeResponse
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
      id: GetOobConfirmationCodeResponse
      description: 'Response of getting a code for user confirmation (reset password, change email etc.).'
    ResetPasswordResponse:
      description: Response of resetting the password.
      type: object
      id: ResetPasswordResponse
      properties:
        email:
          type: string
          description: 'The user''s email. If the out-of-band code is for email recovery, the user''s original email.'
        kind:
          type: string
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          default: identitytoolkit#ResetPasswordResponse
        newEmail:
          type: string
          description: 'If the out-of-band code is for email recovery, the user''s new email.'
        requestType:
          description: The request type.
          type: string
    SetAccountInfoResponse:
      properties:
        newEmail:
          type: string
          description: The new email the user attempts to change to.
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        kind:
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
          type: string
          default: identitytoolkit#SetAccountInfoResponse
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        emailVerified:
          type: boolean
          description: If email has been verified.
        photoUrl:
          description: The photo url of the user.
          type: string
        email:
          type: string
          description: The email of the user.
        passwordHash:
          format: byte
          description: The user's hashed password.
          type: string
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
        providerUserInfo:
          description: The user's profiles at the associated IdPs.
          items:
            type: object
            properties:
              federatedId:
                type: string
                description: User's identifier at IDP.
              providerId:
                type: string
                description: 'The IdP ID. For whitelisted IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
              displayName:
                description: The user's display name at the IDP.
                type: string
          type: array
        localId:
          type: string
          description: The local ID of the user.
        displayName:
          type: string
          description: The name of the user.
      id: SetAccountInfoResponse
      description: Respone of setting the account information.
      type: object
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      type: object
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
      properties:
        memoryCost:
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
          type: integer
          format: int32
        rounds:
          type: integer
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
          format: int32
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The account info to be stored.
        dkLen:
          format: int32
          type: integer
        signerKey:
          description: The key for to hash the password.
          format: byte
          type: string
        blockSize:
          format: int32
          type: integer
        saltSeparator:
          type: string
          description: The salt separator.
          format: byte
        hashAlgorithm:
          description: The password hash algorithm.
          type: string
        cpuMemCost:
          type: integer
          description: The following 4 fields are for standard scrypt algorithm.
          format: int32
        targetProjectId:
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
          type: string
        allowOverwrite:
          description: Whether allow overwrite existing account when user local_id exists.
          type: boolean
        sanityCheck:
          description: 'If true, backend will do sanity check(including duplicate email and federated id) when uploading account.'
          type: boolean
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        parallelization:
          format: int32
          type: integer
      description: Request to upload user account in batch.
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      description: Response for Identitytoolkit-SendVerificationCode
      type: object
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      properties:
        sessionInfo:
          description: Encrypted session information
          type: string
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      type: object
      properties:
        emailVerified:
          type: boolean
          description: Mark the email as verified or not. Only can be used by service account.
        captchaChallenge:
          description: The captcha challenge.
          type: string
        password:
          type: string
          description: The new password of the user.
        phoneNumber:
          type: string
          description: Privileged caller can create user with specified phone number.
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        captchaResponse:
          description: Response to the captcha.
          type: string
        displayName:
          type: string
          description: The name of the user.
        photoUrl:
          description: The photo url of the user.
          type: string
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          format: uint64
          type: string
        email:
          type: string
          description: The email of the user.
        instanceId:
          type: string
          description: Instance id token of the app.
        disabled:
          type: boolean
          description: Whether to disable the user. Only can be used by service account.
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
      description: 'Request to signup new user, create anonymous user or anonymous user reauth.'
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      type: object
      properties:
        localId:
          description: The list of local ID's of the users to inquiry.
          type: array
          items:
            type: string
        phoneNumber:
          items:
            type: string
          type: array
          description: Privileged caller can query users by specified phone number.
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        email:
          description: The list of emails of the users to inquiry.
          items:
            type: string
          type: array
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
      description: Request to get the account information.
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
    VerifyPasswordResponse:
      id: VerifyPasswordResponse
      properties:
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
        registered:
          type: boolean
          description: Whether the email is registered.
        photoUrl:
          type: string
          description: The URI of the user's photo at IdP
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          type: integer
          format: int32
        displayName:
          description: The name of the user.
          type: string
        kind:
          default: identitytoolkit#VerifyPasswordResponse
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
          type: string
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        localId:
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
          type: string
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
      description: Request of verifying the password.
      type: object
    EmailTemplate:
      id: EmailTemplate
      properties:
        from:
          type: string
          description: From address of the email.
        fromDisplayName:
          description: From display name.
          type: string
        format:
          description: Email body format.
          type: string
        replyTo:
          type: string
          description: Reply-to address.
        subject:
          description: Subject of the email.
          type: string
        body:
          type: string
          description: Email body.
      description: Template for an email template.
      type: object
    CreateAuthUriResponse:
      properties:
        kind:
          default: identitytoolkit#CreateAuthUriResponse
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          type: string
        captchaRequired:
          type: boolean
          description: True if captcha is required.
        sessionId:
          type: string
          description: Session ID which should be passed in the following verifyAssertion request.
        allProviders:
          type: array
          items:
            type: string
          description: all providers the user has once used to do federated login
        forExistingProvider:
          type: boolean
          description: True if the authUri is for user's existing provider.
        authUri:
          type: string
          description: The URI used by the IDP to authenticate the user.
        registered:
          description: Whether the user is registered if the identifier is an email.
          type: boolean
        signinMethods:
          description: All sign-in methods this user has used.
          type: array
          items:
            type: string
        providerId:
          type: string
          description: The provider ID of the auth URI.
      id: CreateAuthUriResponse
      description: Response of creating the IDP authentication URL.
      type: object
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      properties:
        apiKey:
          description: 'Browser API key, needed when making http request to Apiary.'
          type: string
        allowPasswordUser:
          type: boolean
          description: Whether to allow password user sign in or sign up.
        enableAnonymousUser:
          description: Whether to enable anonymous user.
          type: boolean
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        legacyResetPasswordTemplate:
          description: Legacy reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        idpConfig:
          type: array
          items:
            $ref: '#/components/schemas/IdpConfig'
          description: Oauth2 provider configuration.
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
          format: int64
        authorizedDomains:
          description: Authorized domains for widget redirect.
          items:
            type: string
          type: array
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
      type: object
      description: Request to set the project configuration.
    DeleteAccountResponse:
      properties:
        kind:
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
          type: string
          default: identitytoolkit#DeleteAccountResponse
      type: object
      id: DeleteAccountResponse
      description: Respone of deleting account.
    VerifyCustomTokenResponse:
      type: object
      id: VerifyCustomTokenResponse
      description: Response from verifying a custom token
      properties:
        idToken:
          type: string
          description: The GITKit token for authenticated user.
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        kind:
          default: identitytoolkit#VerifyCustomTokenResponse
          type: string
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
    GetAccountInfoResponse:
      type: object
      id: GetAccountInfoResponse
      properties:
        kind:
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          default: identitytoolkit#GetAccountInfoResponse
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The info of the users.
      description: Response of getting account information.
    IdpConfig:
      description: Template for a single idp configuration.
      type: object
      id: IdpConfig
      properties:
        secret:
          type: string
          description: OAuth2 client secret.
        clientId:
          type: string
          description: OAuth2 client ID.
        enabled:
          type: boolean
          description: Whether this IDP is enabled.
        provider:
          description: OAuth2 provider.
          type: string
        whitelistedAudiences:
          type: array
          description: Whitelisted client IDs for audience check.
          items:
            type: string
        experimentPercent:
          format: int32
          type: integer
          description: Percent of users who will be prompted/redirected federated login for this IDP.
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  x-stackQL-resources:
    relyingparty_project_config:
      id: google.identitytoolkit.relyingparty_project_config
      name: relyingparty_project_config
      title: Relyingparty Project Config
      methods:
        get_project_config:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_project_config/methods/get_project_config'
        insert: []
        update: []
        delete: []
    relyingparty_recaptcha_param:
      id: google.identitytoolkit.relyingparty_recaptcha_param
      name: relyingparty_recaptcha_param
      title: Relyingparty Recaptcha Param
      methods:
        get_recaptcha_param:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_recaptcha_param/methods/get_recaptcha_param'
        insert: []
        update: []
        delete: []
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        verify_assertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_account_info:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        email_link_signin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_phone_number:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_account:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_out_user:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_account:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_verification_code:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signup_new_user:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_custom_token:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_project_config:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_password:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_auth_uri:
      id: google.identitytoolkit.relyingparty_auth_uri
      name: relyingparty_auth_uri
      title: Relyingparty Auth Uri
      methods:
        create_auth_uri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/relyingparty_auth_uri/methods/create_auth_uri'
        update: []
        delete: []
    relyingparty_account:
      id: google.identitytoolkit.relyingparty_account
      name: relyingparty_account
      title: Relyingparty Account
      methods:
        delete_account:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_oob_confirmation_code:
      id: google.identitytoolkit.relyingparty_oob_confirmation_code
      name: relyingparty_oob_confirmation_code
      title: Relyingparty Oob Confirmation Code
      methods:
        get_oob_confirmation_code:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_account_info:
      id: google.identitytoolkit.relyingparty_account_info
      name: relyingparty_account_info
      title: Relyingparty Account Info
      methods:
        get_account_info:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_public_keys:
      id: google.identitytoolkit.relyingparty_public_keys
      name: relyingparty_public_keys
      title: Relyingparty Public Keys
      methods:
        get_public_keys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /getProjectConfig:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/userIp'
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
      parameters:
        - in: query
          name: projectNumber
          schema:
            type: string
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty_project_config
      x-stackQL-method: get_project_config
      x-stackQL-verb: select
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty_recaptcha_param
      x-stackQL-method: get_recaptcha_param
      x-stackQL-verb: select
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_assertion
      x-stackQL-verb: exec
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_account_info
      x-stackQL-verb: exec
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: email_link_signin
      x-stackQL-verb: exec
  /verifyPhoneNumber:
    parameters: *ref_1
    post:
      description: Verifies ownership of a phone number and creates/updates the user account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_phone_number
      x-stackQL-verb: exec
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: upload_account
      x-stackQL-verb: exec
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: sign_out_user
      x-stackQL-verb: exec
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: download_account
      x-stackQL-verb: exec
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty_auth_uri
      x-stackQL-method: create_auth_uri
      x-stackQL-verb: insert
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty_account
      x-stackQL-method: delete_account
      x-stackQL-verb: exec
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: send_verification_code
      x-stackQL-verb: exec
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: signup_new_user
      x-stackQL-verb: exec
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty_oob_confirmation_code
      x-stackQL-method: get_oob_confirmation_code
      x-stackQL-verb: exec
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_custom_token
      x-stackQL-verb: exec
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_project_config
      x-stackQL-verb: exec
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: reset_password
      x-stackQL-verb: exec
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty_account_info
      x-stackQL-method: get_account_info
      x-stackQL-verb: exec
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
      x-stackQL-resource: relyingparty_public_keys
      x-stackQL-method: get_public_keys
      x-stackQL-verb: exec
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_password
      x-stackQL-verb: exec
