openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-08-22'
externalDocs:
  url: 'https://developers.google.com/identity-toolkit/v3/'
servers:
  - url: 'https://www.googleapis.com/identitytoolkit/v3/relyingparty'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
            'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    UserInfo:
      type: object
      description: Template for an individual account info.
      id: UserInfo
      properties:
        lastLoginAt:
          format: int64
          description: last login timestamp.
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        photoUrl:
          type: string
          description: The URL of the user profile photo.
        customAuth:
          type: boolean
          description: Whether the user is authenticated by the developer.
        emailVerified:
          type: boolean
          description: Whether the email has been verified.
        screenName:
          description: User's screen name at Twitter or login name at Github.
          type: string
        customAttributes:
          type: string
          description: The custom attributes to be set in the user's id token.
        version:
          format: int32
          type: integer
          description: Version of the user's password.
        validSince:
          type: string
          description: Timestamp in seconds for valid login token.
          format: int64
        salt:
          type: string
          format: byte
          description: The user's password salt.
        rawPassword:
          description: The user's plain text password.
          type: string
        displayName:
          type: string
          description: The name of the user.
        createdAt:
          format: int64
          description: User creation timestamp.
          type: string
        passwordUpdatedAt:
          format: double
          description: The timestamp when the password was last updated.
          type: number
        providerUserInfo:
          description: The IDP of the user.
          items:
            properties:
              displayName:
                type: string
                description: The user's display name at the IDP.
              email:
                description: User's email at IDP.
                type: string
              providerId:
                description: 'The IdP ID. For white listed IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
                type: string
              screenName:
                type: string
                description: User's screen name at Twitter or login name at Github.
              phoneNumber:
                type: string
                description: User's phone number.
              federatedId:
                description: User's identifier at IDP.
                type: string
              rawId:
                description: User's raw identifier directly returned from IDP.
                type: string
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
            type: object
          type: array
        localId:
          description: The local ID of the user.
          type: string
        email:
          type: string
          description: The email of the user.
        passwordHash:
          format: byte
          description: The user's hashed password.
          type: string
        phoneNumber:
          description: User's phone number.
          type: string
    IdentitytoolkitRelyingpartySignOutUserRequest:
      type: object
      properties:
        localId:
          description: The local ID of the user.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
      description: Request to sign out user.
      id: IdentitytoolkitRelyingpartySignOutUserRequest
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      properties:
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        postBody:
          type: string
          description: The post body if the request is a HTTP POST.
        requestUri:
          description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
          type: string
        autoCreate:
          type: boolean
          description: 'When it''s true, automatically creates a new account if the user doesn''t exist. When it''s false, allows existing user to sign in normally and throws exception if the user doesn''t exist.'
        returnIdpCredential:
          type: boolean
          description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        pendingIdToken:
          description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
          type: string
        returnRefreshToken:
          description: Whether to return refresh tokens.
          type: boolean
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        instanceId:
          type: string
          description: Instance id token of the app.
        sessionId:
          description: 'Session ID, which should match the one in previous createAuthUri request.'
          type: string
      type: object
      description: Request to verify the IDP assertion.
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      type: object
      properties:
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        phoneNumber:
          items:
            type: string
          description: Privileged caller can query users by specified phone number.
          type: array
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        localId:
          items:
            type: string
          description: The list of local ID's of the users to inquiry.
          type: array
        email:
          type: array
          description: The list of emails of the users to inquiry.
          items:
            type: string
      description: Request to get the account information.
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
    Relyingparty:
      description: 'Request of getting a code for user confirmation (reset password, change email etc.)'
      id: Relyingparty
      type: object
      properties:
        requestType:
          type: string
          description: The request type.
        continueUrl:
          type: string
          description: The url to continue to the Gitkit app
        idToken:
          description: The user's Gitkit login token for email change.
          type: string
        challenge:
          description: The recaptcha challenge presented to the user.
          type: string
        androidMinimumVersion:
          description: minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
          type: string
        canHandleCodeInApp:
          description: whether or not the app can handle the oob code without first going to web
          type: boolean
        kind:
          description: The fixed string "identitytoolkit#relyingparty".
          type: string
          default: identitytoolkit#relyingparty
        userIp:
          type: string
          description: The IP address of the user.
        iOSAppStoreId:
          description: iOS app store id to download the app if it's not already installed
          type: string
        iOSBundleId:
          type: string
          description: the iOS bundle id of iOS app to handle the action code
        captchaResp:
          description: The recaptcha response from the user.
          type: string
        email:
          description: The email of the user.
          type: string
        androidPackageName:
          description: android package name of the android app to handle the action code
          type: string
        androidInstallApp:
          type: boolean
          description: whether or not to install the android app on the device where the link is opened
        newEmail:
          description: The new email if the code is for email change.
          type: string
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      description: Request to set the project configuration.
      type: object
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
      properties:
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        enableAnonymousUser:
          type: boolean
          description: Whether to enable anonymous user.
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        idpConfig:
          description: Oauth2 provider configuration.
          type: array
          items:
            $ref: '#/components/schemas/IdpConfig'
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          type: boolean
        legacyResetPasswordTemplate:
          description: Legacy reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        apiKey:
          description: 'Browser API key, needed when making http request to Apiary.'
          type: string
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
        authorizedDomains:
          description: Authorized domains for widget redirect.
          type: array
          items:
            type: string
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      type: object
      description: Request to set the account information.
      properties:
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        captchaResponse:
          description: Response to the captcha.
          type: string
        displayName:
          type: string
          description: The name of the user.
        password:
          description: The new password of the user.
          type: string
        validSince:
          type: string
          format: int64
          description: Timestamp in seconds for valid login token.
        provider:
          items:
            type: string
          description: The associated IDPs of the user.
          type: array
        photoUrl:
          type: string
          description: The photo url of the user.
        phoneNumber:
          type: string
          description: Privileged caller can update user with specified phone number.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        upgradeToFederatedLogin:
          type: boolean
          description: Mark the user to upgrade to federated login.
        deleteAttribute:
          description: The attributes users request to delete.
          type: array
          items:
            type: string
        captchaChallenge:
          type: string
          description: The captcha challenge.
        emailVerified:
          description: Mark the email as verified or not.
          type: boolean
        oobCode:
          description: The out-of-band code of the change email request.
          type: string
        deleteProvider:
          type: array
          description: The IDPs the user request to delete.
          items:
            type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        instanceId:
          type: string
          description: Instance id token of the app.
        disableUser:
          description: Whether to disable the user.
          type: boolean
        createdAt:
          description: The timestamp when the account is created.
          format: int64
          type: string
        lastLoginAt:
          description: Last login timestamp.
          format: int64
          type: string
        email:
          description: The email of the user.
          type: string
        localId:
          description: The local ID of the user.
          type: string
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
    GetRecaptchaParamResponse:
      description: Response of getting recaptcha param.
      properties:
        recaptchaSiteKey:
          description: Site key registered at recaptcha.
          type: string
        kind:
          default: identitytoolkit#GetRecaptchaParamResponse
          type: string
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
        recaptchaStoken:
          description: 'The stoken field for the recaptcha widget, used to request captcha challenge.'
          type: string
      id: GetRecaptchaParamResponse
      type: object
    UploadAccountResponse:
      description: Respone of uploading accounts in batch.
      properties:
        error:
          type: array
          items:
            properties:
              index:
                format: int32
                type: integer
                description: 'The index of the malformed account, starting from 0.'
              message:
                description: Detailed error message for the account info.
                type: string
            type: object
          description: The error encountered while processing the account info.
        kind:
          default: identitytoolkit#UploadAccountResponse
          description: The fixed string "identitytoolkit#UploadAccountResponse".
          type: string
      type: object
      id: UploadAccountResponse
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      type: object
      description: Respone of getting public keys.
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
      additionalProperties:
        type: string
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      properties:
        email:
          description: The email address of the user.
          type: string
        oldPassword:
          type: string
          description: The old password inputted by the user.
        oobCode:
          type: string
          description: The confirmation code.
        newPassword:
          description: The new password inputted by the user.
          type: string
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
      description: Request to reset the password.
      type: object
    IdpConfig:
      id: IdpConfig
      description: Template for a single idp configuration.
      type: object
      properties:
        experimentPercent:
          type: integer
          format: int32
          description: Percent of users who will be prompted/redirected federated login for this IDP.
        enabled:
          type: boolean
          description: Whether this IDP is enabled.
        clientId:
          description: OAuth2 client ID.
          type: string
        provider:
          description: OAuth2 provider.
          type: string
        whitelistedAudiences:
          type: array
          items:
            type: string
          description: Whitelisted client IDs for audience check.
        secret:
          description: OAuth2 client secret.
          type: string
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
      properties:
        verificationProofExpiresIn:
          format: int64
          type: string
        localId:
          type: string
        temporaryProof:
          type: string
        expiresIn:
          type: string
          format: int64
        refreshToken:
          type: string
        temporaryProofExpiresIn:
          format: int64
          type: string
        isNewUser:
          type: boolean
        verificationProof:
          type: string
        idToken:
          type: string
        phoneNumber:
          type: string
      type: object
      description: Response for Identitytoolkit-VerifyPhoneNumber
    SetAccountInfoResponse:
      properties:
        photoUrl:
          description: The photo url of the user.
          type: string
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
        email:
          description: The email of the user.
          type: string
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        kind:
          default: identitytoolkit#SetAccountInfoResponse
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
          type: string
        newEmail:
          type: string
          description: The new email the user attempts to change to.
        localId:
          description: The local ID of the user.
          type: string
        passwordHash:
          format: byte
          type: string
          description: The user's hashed password.
        expiresIn:
          type: string
          format: int64
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        providerUserInfo:
          description: The user's profiles at the associated IdPs.
          type: array
          items:
            properties:
              federatedId:
                description: User's identifier at IDP.
                type: string
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
              providerId:
                description: 'The IdP ID. For whitelisted IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
                type: string
              displayName:
                description: The user's display name at the IDP.
                type: string
            type: object
        displayName:
          type: string
          description: The name of the user.
        emailVerified:
          type: boolean
          description: If email has been verified.
      description: Respone of setting the account information.
      type: object
      id: SetAccountInfoResponse
    VerifyAssertionResponse:
      id: VerifyAssertionResponse
      properties:
        emailVerified:
          description: The value is true if the IDP is also the email provider. It means the user owns the email.
          type: boolean
        kind:
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          default: identitytoolkit#VerifyAssertionResponse
          type: string
        emailRecycled:
          description: It's true if the email is recycled.
          type: boolean
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        firstName:
          description: The first name of the user.
          type: string
        inputEmail:
          description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
          type: string
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        language:
          type: string
          description: The language preference of the user.
        isNewUser:
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
          type: boolean
        expiresIn:
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
        fullName:
          description: The full name of the user.
          type: string
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          type: integer
          format: int32
        rawUserInfo:
          description: Raw IDP-returned user info.
          type: string
        oauthScope:
          type: string
          description: The scope for the OpenID OAuth extension.
        dateOfBirth:
          type: string
          description: The birth date of the IdP account.
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        errorMessage:
          description: Client error code.
          type: string
        nickName:
          description: The nick name of the user.
          type: string
        localId:
          type: string
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        verifiedProvider:
          type: array
          items:
            type: string
          description: 'When action is ''map'', contains the idps which can be used for confirmation.'
        screenName:
          description: The screen_name of a Twitter user or the login name at Github.
          type: string
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        needEmail:
          description: Whether need client to supply email to complete the federated login flow.
          type: boolean
        timeZone:
          description: The timezone of the user.
          type: string
        oauthIdToken:
          type: string
          description: The OIDC id token.
        idToken:
          description: The ID token.
          type: string
        appInstallationUrl:
          type: string
          description: URL for OTA app installation.
        oauthRequestToken:
          type: string
          description: The user approved request token for the OpenID OAuth extension.
        providerId:
          type: string
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.'
        photoUrl:
          type: string
          description: The URI of the public accessible profiel picture.
        action:
          type: string
          description: The action code.
        lastName:
          description: The last name of the user.
          type: string
        oauthTokenSecret:
          description: The OAuth1 access token secret.
          type: string
        federatedId:
          type: string
          description: The unique ID identifies the IdP account.
        originalEmail:
          description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
          type: string
        needConfirmation:
          type: boolean
          description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
        appScheme:
          description: The custom scheme used by mobile app.
          type: string
        displayName:
          description: The display name of the user.
          type: string
      description: Response of verifying the IDP assertion.
      type: object
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      type: object
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      properties:
        projectId:
          description: Project ID of the relying party.
          type: string
      description: Response of setting the project configuration.
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
      description: Request to upload user account in batch.
      type: object
      properties:
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        parallelization:
          type: integer
          format: int32
        allowOverwrite:
          type: boolean
          description: Whether allow overwrite existing account when user local_id exists.
        targetProjectId:
          type: string
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
        hashAlgorithm:
          type: string
          description: The password hash algorithm.
        dkLen:
          type: integer
          format: int32
        sanityCheck:
          description: 'If true, backend will do sanity check(including duplicate email and federated id) when uploading account.'
          type: boolean
        rounds:
          format: int32
          type: integer
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
        memoryCost:
          format: int32
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
          type: integer
        blockSize:
          format: int32
          type: integer
        cpuMemCost:
          description: The following 4 fields are for standard scrypt algorithm.
          type: integer
          format: int32
        signerKey:
          description: The key for to hash the password.
          type: string
          format: byte
        saltSeparator:
          type: string
          format: byte
          description: The salt separator.
        users:
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The account info to be stored.
          type: array
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      type: object
      properties:
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
        email:
          description: The email of the user.
          type: string
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        captchaResponse:
          type: string
          description: Response to the captcha.
        captchaChallenge:
          type: string
          description: The captcha challenge.
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        pendingIdToken:
          description: 'The GITKit token for the non-trusted IDP, which is to be confirmed by the user.'
          type: string
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        password:
          type: string
          description: The password inputed by the user.
        instanceId:
          type: string
          description: Instance id token of the app.
      description: Request to verify the password.
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
    EmailLinkSigninResponse:
      properties:
        refreshToken:
          description: The refresh token for the signed in user.
          type: string
        idToken:
          type: string
          description: The STS id token to login the newly signed in user.
        isNewUser:
          type: boolean
          description: Whether the user is new.
        expiresIn:
          type: string
          format: int64
          description: Expiration time of STS id token in seconds.
        email:
          type: string
          description: The user's email.
        localId:
          type: string
          description: The RP local ID of the user.
        kind:
          type: string
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          default: identitytoolkit#EmailLinkSigninResponse
      type: object
      description: Response of email signIn.
      id: EmailLinkSigninResponse
    CreateAuthUriResponse:
      id: CreateAuthUriResponse
      description: Response of creating the IDP authentication URL.
      properties:
        forExistingProvider:
          type: boolean
          description: True if the authUri is for user's existing provider.
        providerId:
          description: The provider ID of the auth URI.
          type: string
        allProviders:
          type: array
          items:
            type: string
          description: all providers the user has once used to do federated login
        authUri:
          description: The URI used by the IDP to authenticate the user.
          type: string
        signinMethods:
          description: All sign-in methods this user has used.
          items:
            type: string
          type: array
        sessionId:
          description: Session ID which should be passed in the following verifyAssertion request.
          type: string
        kind:
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          default: identitytoolkit#CreateAuthUriResponse
          type: string
        registered:
          type: boolean
          description: Whether the user is registered if the identifier is an email.
        captchaRequired:
          description: True if captcha is required.
          type: boolean
      type: object
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      description: Request to get the IDP authentication URL.
      properties:
        hostedDomain:
          type: string
          description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
        otaApp:
          type: string
          description: The native app package for OTA installation.
        openidRealm:
          type: string
          description: 'Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.'
        customParameter:
          additionalProperties:
            description: The customized query parameter.
            type: string
          description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
          type: object
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        sessionId:
          type: string
          description: The session_id passed by client.
        providerId:
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
          type: string
        continueUri:
          type: string
          description: The URI to which the IDP redirects the user after the federated login flow.
        authFlowType:
          description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
          type: string
        oauthScope:
          type: string
          description: 'Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant'
        appId:
          description: 'The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.'
          type: string
        oauthConsumerKey:
          type: string
          description: The developer's consumer key for OpenId OAuth Extension
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        clientId:
          description: The relying party OAuth client ID.
          type: string
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
        identifier:
          description: The email or federated ID of the user.
          type: string
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
      type: object
    GetAccountInfoResponse:
      properties:
        users:
          description: The info of the users.
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
        kind:
          default: identitytoolkit#GetAccountInfoResponse
          type: string
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
      description: Response of getting account information.
      id: GetAccountInfoResponse
      type: object
    ResetPasswordResponse:
      properties:
        requestType:
          type: string
          description: The request type.
        kind:
          default: identitytoolkit#ResetPasswordResponse
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          type: string
        newEmail:
          type: string
          description: 'If the out-of-band code is for email recovery, the user''s new email.'
        email:
          type: string
          description: 'The user''s email. If the out-of-band code is for email recovery, the user''s original email.'
      id: ResetPasswordResponse
      type: object
      description: Response of resetting the password.
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      type: object
      properties:
        localId:
          type: string
          description: The local ID of the user.
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        idToken:
          description: The GITKit token or STS id token of the authenticated user.
          type: string
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
      description: Request to delete account.
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      type: object
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      description: Response of getting the project configuration.
      properties:
        projectId:
          type: string
          description: Project ID of the relying party.
        dynamicLinksDomain:
          type: string
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        legacyResetPasswordTemplate:
          description: Legacy reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        authorizedDomains:
          description: Authorized domains.
          type: array
          items:
            type: string
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        enableAnonymousUser:
          description: Whether anonymous user is enabled.
          type: boolean
        apiKey:
          description: 'Browser API key, needed when making http request to Apiary.'
          type: string
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          type: boolean
        idpConfig:
          description: OAuth2 provider configuration.
          items:
            $ref: '#/components/schemas/IdpConfig'
          type: array
    GetOobConfirmationCodeResponse:
      description: 'Response of getting a code for user confirmation (reset password, change email etc.).'
      type: object
      id: GetOobConfirmationCodeResponse
      properties:
        kind:
          type: string
          default: identitytoolkit#GetOobConfirmationCodeResponse
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
        email:
          description: The email address that the email is sent to.
          type: string
        oobCode:
          type: string
          description: The code to be send to the user.
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      description: Request to verify a custom token
      type: object
      properties:
        instanceId:
          type: string
          description: Instance id token of the app.
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        token:
          type: string
          description: The custom token to verify
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      properties:
        iosSecret:
          description: Secret delivered to iOS app via APNS.
          type: string
        recaptchaToken:
          description: Recaptcha solution.
          type: string
        iosReceipt:
          description: Receipt of successful app token validation with APNS.
          type: string
        phoneNumber:
          type: string
          description: The phone number to send the verification code to in E.164 format.
      description: Request for Identitytoolkit-SendVerificationCode
      type: object
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      type: object
      properties:
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
          format: int64
        nextPageToken:
          description: The token for the next page. This should be taken from the previous response.
          type: string
        targetProjectId:
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
          type: string
        maxResults:
          format: uint32
          description: The max number of results to return in the response.
          type: integer
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
      description: Request to download user account in batch.
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      properties:
        sessionInfo:
          description: Encrypted session information
          type: string
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      description: Response for Identitytoolkit-SendVerificationCode
      type: object
    IdentitytoolkitRelyingpartySignOutUserResponse:
      description: Response of signing out user.
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      type: object
      properties:
        localId:
          type: string
          description: The local ID of the user.
    EmailTemplate:
      properties:
        body:
          type: string
          description: Email body.
        from:
          description: From address of the email.
          type: string
        format:
          description: Email body format.
          type: string
        fromDisplayName:
          type: string
          description: From display name.
        replyTo:
          description: Reply-to address.
          type: string
        subject:
          description: Subject of the email.
          type: string
      description: Template for an email template.
      id: EmailTemplate
      type: object
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      type: object
      properties:
        email:
          type: string
          description: The email address of the user.
        oobCode:
          type: string
          description: The confirmation code.
        idToken:
          description: Token for linking flow.
          type: string
      description: Request to sign in with email.
    VerifyPasswordResponse:
      properties:
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        oauthExpireIn:
          type: integer
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        photoUrl:
          type: string
          description: The URI of the user's photo at IdP
        registered:
          description: Whether the email is registered.
          type: boolean
        displayName:
          type: string
          description: The name of the user.
        expiresIn:
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        localId:
          type: string
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        kind:
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
          type: string
          default: identitytoolkit#VerifyPasswordResponse
        idToken:
          description: The GITKit token for authenticated user.
          type: string
      description: Request of verifying the password.
      type: object
      id: VerifyPasswordResponse
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      description: Request for Identitytoolkit-VerifyPhoneNumber
      type: object
      properties:
        sessionInfo:
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
          type: string
        operation:
          type: string
        verificationProof:
          type: string
        temporaryProof:
          type: string
        idToken:
          type: string
        phoneNumber:
          type: string
        code:
          type: string
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      description: 'Request to signup new user, create anonymous user or anonymous user reauth.'
      properties:
        emailVerified:
          description: Mark the email as verified or not. Only can be used by service account.
          type: boolean
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        captchaChallenge:
          type: string
          description: The captcha challenge.
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        captchaResponse:
          description: Response to the captcha.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        photoUrl:
          description: The photo url of the user.
          type: string
        disabled:
          type: boolean
          description: Whether to disable the user. Only can be used by service account.
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
        phoneNumber:
          type: string
          description: Privileged caller can create user with specified phone number.
        email:
          description: The email of the user.
          type: string
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        password:
          type: string
          description: The new password of the user.
        displayName:
          type: string
          description: The name of the user.
      type: object
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
    VerifyCustomTokenResponse:
      id: VerifyCustomTokenResponse
      properties:
        kind:
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
          default: identitytoolkit#VerifyCustomTokenResponse
          type: string
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        expiresIn:
          format: int64
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
      type: object
      description: Response from verifying a custom token
    DownloadAccountResponse:
      description: Response of downloading accounts in batch.
      type: object
      properties:
        users:
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
          description: The user accounts data.
        nextPageToken:
          description: The next page token. To be used in a subsequent request to return the next page of results.
          type: string
        kind:
          type: string
          default: identitytoolkit#DownloadAccountResponse
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
      id: DownloadAccountResponse
    DeleteAccountResponse:
      description: Respone of deleting account.
      type: object
      id: DeleteAccountResponse
      properties:
        kind:
          default: identitytoolkit#DeleteAccountResponse
          type: string
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
    SignupNewUserResponse:
      description: 'Response of signing up new user, creating anonymous user or anonymous user reauth.'
      id: SignupNewUserResponse
      type: object
      properties:
        email:
          description: The email of the user.
          type: string
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        kind:
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
          default: identitytoolkit#SignupNewUserResponse
          type: string
        localId:
          type: string
          description: The RP local ID of the user.
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
        displayName:
          description: The name of the user.
          type: string
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
  x-stackQL-resources:
    relyingparty_account_info:
      id: google.identitytoolkit.relyingparty_account_info
      name: relyingparty_account_info
      title: Relyingparty Account Info
      methods:
        get_account_info:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        set_account_info:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        email_link_signin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_custom_token:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signup_new_user:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_account:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_phone_number:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_verification_code:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_password:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_out_user:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_assertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_account:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_project_config:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_project_config:
      id: google.identitytoolkit.relyingparty_project_config
      name: relyingparty_project_config
      title: Relyingparty Project Config
      methods:
        get_project_config:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_project_config/methods/get_project_config'
        insert: []
        update: []
        delete: []
    relyingparty_auth_uri:
      id: google.identitytoolkit.relyingparty_auth_uri
      name: relyingparty_auth_uri
      title: Relyingparty Auth Uri
      methods:
        create_auth_uri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/relyingparty_auth_uri/methods/create_auth_uri'
        update: []
        delete: []
    relyingparty_public_keys:
      id: google.identitytoolkit.relyingparty_public_keys
      name: relyingparty_public_keys
      title: Relyingparty Public Keys
      methods:
        get_public_keys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_account:
      id: google.identitytoolkit.relyingparty_account
      name: relyingparty_account
      title: Relyingparty Account
      methods:
        delete_account:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_oob_confirmation_code:
      id: google.identitytoolkit.relyingparty_oob_confirmation_code
      name: relyingparty_oob_confirmation_code
      title: Relyingparty Oob Confirmation Code
      methods:
        get_oob_confirmation_code:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_recaptcha_param:
      id: google.identitytoolkit.relyingparty_recaptcha_param
      name: relyingparty_recaptcha_param
      title: Relyingparty Recaptcha Param
      methods:
        get_recaptcha_param:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_recaptcha_param/methods/get_recaptcha_param'
        insert: []
        update: []
        delete: []
paths:
  /getAccountInfo:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty_account_info
      x-stackQL-method: get_account_info
      x-stackQL-verb: exec
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_account_info
      x-stackQL-verb: exec
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: email_link_signin
      x-stackQL-verb: exec
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_custom_token
      x-stackQL-verb: exec
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: signup_new_user
      x-stackQL-verb: exec
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: upload_account
      x-stackQL-verb: exec
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
      parameters:
        - in: query
          name: projectNumber
          schema:
            type: string
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty_project_config
      x-stackQL-method: get_project_config
      x-stackQL-verb: select
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty_auth_uri
      x-stackQL-method: create_auth_uri
      x-stackQL-verb: insert
  /verifyPhoneNumber:
    parameters: *ref_1
    post:
      description: Verifies ownership of a phone number and creates/updates the user account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_phone_number
      x-stackQL-verb: exec
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
      x-stackQL-resource: relyingparty_public_keys
      x-stackQL-method: get_public_keys
      x-stackQL-verb: exec
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: send_verification_code
      x-stackQL-verb: exec
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: reset_password
      x-stackQL-verb: exec
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_password
      x-stackQL-verb: exec
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty_account
      x-stackQL-method: delete_account
      x-stackQL-verb: exec
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty_oob_confirmation_code
      x-stackQL-method: get_oob_confirmation_code
      x-stackQL-verb: exec
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: sign_out_user
      x-stackQL-verb: exec
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_assertion
      x-stackQL-verb: exec
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: download_account
      x-stackQL-verb: exec
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_project_config
      x-stackQL-verb: exec
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty_recaptcha_param
      x-stackQL-method: get_recaptcha_param
      x-stackQL-verb: select
