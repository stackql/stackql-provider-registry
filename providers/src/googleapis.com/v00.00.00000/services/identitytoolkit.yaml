openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://developers.google.com/identity-toolkit/v3/'
servers:
  - url: 'https://www.googleapis.com/identitytoolkit/v3/relyingparty'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      description: Request to set the account information.
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
      properties:
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        emailVerified:
          type: boolean
          description: Mark the email as verified or not.
        photoUrl:
          type: string
          description: The photo url of the user.
        deleteProvider:
          type: array
          description: The IDPs the user request to delete.
          items:
            type: string
        password:
          description: The new password of the user.
          type: string
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        email:
          type: string
          description: The email of the user.
        displayName:
          type: string
          description: The name of the user.
        captchaResponse:
          type: string
          description: Response to the captcha.
        oobCode:
          type: string
          description: The out-of-band code of the change email request.
        disableUser:
          type: boolean
          description: Whether to disable the user.
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        validSince:
          type: string
          description: Timestamp in seconds for valid login token.
          format: int64
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        provider:
          items:
            type: string
          description: The associated IDPs of the user.
          type: array
        upgradeToFederatedLogin:
          description: Mark the user to upgrade to federated login.
          type: boolean
        deleteAttribute:
          items:
            type: string
          type: array
          description: The attributes users request to delete.
        createdAt:
          format: int64
          description: The timestamp when the account is created.
          type: string
        phoneNumber:
          type: string
          description: Privileged caller can update user with specified phone number.
        instanceId:
          description: Instance id token of the app.
          type: string
        captchaChallenge:
          description: The captcha challenge.
          type: string
        lastLoginAt:
          type: string
          format: int64
          description: Last login timestamp.
        localId:
          description: The local ID of the user.
          type: string
      type: object
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      properties:
        idToken:
          type: string
          description: Token for linking flow.
        email:
          description: The email address of the user.
          type: string
        oobCode:
          description: The confirmation code.
          type: string
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      type: object
      description: Request to sign in with email.
    GetRecaptchaParamResponse:
      properties:
        recaptchaSiteKey:
          description: Site key registered at recaptcha.
          type: string
        recaptchaStoken:
          description: 'The stoken field for the recaptcha widget, used to request captcha challenge.'
          type: string
        kind:
          default: identitytoolkit#GetRecaptchaParamResponse
          type: string
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
      description: Response of getting recaptcha param.
      type: object
      id: GetRecaptchaParamResponse
    DeleteAccountResponse:
      type: object
      description: Respone of deleting account.
      properties:
        kind:
          default: identitytoolkit#DeleteAccountResponse
          type: string
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
      id: DeleteAccountResponse
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      properties:
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          type: string
          format: uint64
        phoneNumber:
          type: string
          description: Privileged caller can create user with specified phone number.
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        photoUrl:
          type: string
          description: The photo url of the user.
        disabled:
          description: Whether to disable the user. Only can be used by service account.
          type: boolean
        captchaChallenge:
          description: The captcha challenge.
          type: string
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        password:
          type: string
          description: The new password of the user.
        instanceId:
          type: string
          description: Instance id token of the app.
        captchaResponse:
          type: string
          description: Response to the captcha.
        email:
          description: The email of the user.
          type: string
        displayName:
          type: string
          description: The name of the user.
        emailVerified:
          description: Mark the email as verified or not. Only can be used by service account.
          type: boolean
      description: 'Request to signup new user, create anonymous user or anonymous user reauth.'
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      properties:
        code:
          type: string
        operation:
          type: string
        idToken:
          type: string
        phoneNumber:
          type: string
        verificationProof:
          type: string
        sessionInfo:
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
          type: string
        temporaryProof:
          type: string
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      description: Request for Identitytoolkit-VerifyPhoneNumber
      type: object
    UploadAccountResponse:
      id: UploadAccountResponse
      properties:
        error:
          type: array
          items:
            properties:
              message:
                type: string
                description: Detailed error message for the account info.
              index:
                type: integer
                description: 'The index of the malformed account, starting from 0.'
                format: int32
            type: object
          description: The error encountered while processing the account info.
        kind:
          description: The fixed string "identitytoolkit#UploadAccountResponse".
          type: string
          default: identitytoolkit#UploadAccountResponse
      description: Respone of uploading accounts in batch.
      type: object
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      properties:
        email:
          description: The email address of the user.
          type: string
        newPassword:
          type: string
          description: The new password inputted by the user.
        oldPassword:
          description: The old password inputted by the user.
          type: string
        oobCode:
          type: string
          description: The confirmation code.
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
      type: object
      description: Request to reset the password.
    IdentitytoolkitRelyingpartySignOutUserResponse:
      type: object
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      description: Response of signing out user.
      properties:
        localId:
          description: The local ID of the user.
          type: string
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      type: object
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
      properties:
        maxResults:
          type: integer
          description: The max number of results to return in the response.
          format: uint32
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        nextPageToken:
          description: The token for the next page. This should be taken from the previous response.
          type: string
        targetProjectId:
          type: string
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
      description: Request to download user account in batch.
    IdentitytoolkitRelyingpartySignOutUserRequest:
      id: IdentitytoolkitRelyingpartySignOutUserRequest
      properties:
        localId:
          type: string
          description: The local ID of the user.
        instanceId:
          type: string
          description: Instance id token of the app.
      description: Request to sign out user.
      type: object
    SignupNewUserResponse:
      description: 'Response of signing up new user, creating anonymous user or anonymous user reauth.'
      type: object
      id: SignupNewUserResponse
      properties:
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
        email:
          type: string
          description: The email of the user.
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        kind:
          type: string
          default: identitytoolkit#SignupNewUserResponse
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
        displayName:
          type: string
          description: The name of the user.
        localId:
          type: string
          description: The RP local ID of the user.
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
      description: Request to verify the password.
      properties:
        captchaChallenge:
          description: The captcha challenge.
          type: string
        captchaResponse:
          type: string
          description: Response to the captcha.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        instanceId:
          description: Instance id token of the app.
          type: string
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        password:
          description: The password inputed by the user.
          type: string
        pendingIdToken:
          type: string
          description: 'The GITKit token for the non-trusted IDP, which is to be confirmed by the user.'
        email:
          description: The email of the user.
          type: string
      type: object
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      description: Response of setting the project configuration.
      type: object
      properties:
        projectId:
          description: Project ID of the relying party.
          type: string
    ResetPasswordResponse:
      id: ResetPasswordResponse
      properties:
        requestType:
          description: The request type.
          type: string
        email:
          description: 'The user''s email. If the out-of-band code is for email recovery, the user''s original email.'
          type: string
        kind:
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          type: string
          default: identitytoolkit#ResetPasswordResponse
        newEmail:
          type: string
          description: 'If the out-of-band code is for email recovery, the user''s new email.'
      type: object
      description: Response of resetting the password.
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      type: object
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
      properties:
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        verifyEmailTemplate:
          description: Verify email template.
          $ref: '#/components/schemas/EmailTemplate'
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          type: boolean
        enableAnonymousUser:
          type: boolean
          description: Whether to enable anonymous user.
        resetPasswordTemplate:
          description: Reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        apiKey:
          description: 'Browser API key, needed when making http request to Apiary.'
          type: string
        idpConfig:
          type: array
          items:
            $ref: '#/components/schemas/IdpConfig'
          description: Oauth2 provider configuration.
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        authorizedDomains:
          description: Authorized domains for widget redirect.
          items:
            type: string
          type: array
      description: Request to set the project configuration.
    GetOobConfirmationCodeResponse:
      id: GetOobConfirmationCodeResponse
      properties:
        kind:
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
          default: identitytoolkit#GetOobConfirmationCodeResponse
          type: string
        email:
          type: string
          description: The email address that the email is sent to.
        oobCode:
          description: The code to be send to the user.
          type: string
      description: 'Response of getting a code for user confirmation (reset password, change email etc.).'
      type: object
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
      description: Request to upload user account in batch.
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The account info to be stored.
        parallelization:
          format: int32
          type: integer
        dkLen:
          format: int32
          type: integer
        saltSeparator:
          format: byte
          description: The salt separator.
          type: string
        targetProjectId:
          type: string
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
        allowOverwrite:
          description: Whether allow overwrite existing account when user local_id exists.
          type: boolean
        rounds:
          type: integer
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
          format: int32
        signerKey:
          format: byte
          description: The key for to hash the password.
          type: string
        sanityCheck:
          type: boolean
          description: 'If true, backend will do sanity check(including duplicate email and federated id) when uploading account.'
        hashAlgorithm:
          description: The password hash algorithm.
          type: string
        cpuMemCost:
          type: integer
          description: The following 4 fields are for standard scrypt algorithm.
          format: int32
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        blockSize:
          type: integer
          format: int32
        memoryCost:
          type: integer
          format: int32
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      type: object
      description: Response for Identitytoolkit-VerifyPhoneNumber
      properties:
        refreshToken:
          type: string
        localId:
          type: string
        expiresIn:
          format: int64
          type: string
        phoneNumber:
          type: string
        idToken:
          type: string
        temporaryProof:
          type: string
        verificationProof:
          type: string
        temporaryProofExpiresIn:
          type: string
          format: int64
        verificationProofExpiresIn:
          format: int64
          type: string
        isNewUser:
          type: boolean
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
    EmailTemplate:
      properties:
        body:
          type: string
          description: Email body.
        from:
          type: string
          description: From address of the email.
        format:
          description: Email body format.
          type: string
        fromDisplayName:
          type: string
          description: From display name.
        subject:
          type: string
          description: Subject of the email.
        replyTo:
          description: Reply-to address.
          type: string
      description: Template for an email template.
      id: EmailTemplate
      type: object
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      type: object
      description: Response of getting the project configuration.
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      properties:
        authorizedDomains:
          items:
            type: string
          type: array
          description: Authorized domains.
        idpConfig:
          type: array
          items:
            $ref: '#/components/schemas/IdpConfig'
          description: OAuth2 provider configuration.
        enableAnonymousUser:
          description: Whether anonymous user is enabled.
          type: boolean
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          type: boolean
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        apiKey:
          type: string
          description: 'Browser API key, needed when making http request to Apiary.'
        projectId:
          type: string
          description: Project ID of the relying party.
        verifyEmailTemplate:
          description: Verify email template.
          $ref: '#/components/schemas/EmailTemplate'
        dynamicLinksDomain:
          type: string
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
    DownloadAccountResponse:
      properties:
        kind:
          default: identitytoolkit#DownloadAccountResponse
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
          type: string
        nextPageToken:
          type: string
          description: The next page token. To be used in a subsequent request to return the next page of results.
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The user accounts data.
      type: object
      id: DownloadAccountResponse
      description: Response of downloading accounts in batch.
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      description: Request to delete account.
      type: object
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
      properties:
        localId:
          description: The local ID of the user.
          type: string
        idToken:
          type: string
          description: The GITKit token or STS id token of the authenticated user.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
          format: int64
    UserInfo:
      description: Template for an individual account info.
      type: object
      id: UserInfo
      properties:
        passwordHash:
          format: byte
          description: The user's hashed password.
          type: string
        validSince:
          type: string
          format: int64
          description: Timestamp in seconds for valid login token.
        screenName:
          type: string
          description: User's screen name at Twitter or login name at Github.
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        lastLoginAt:
          type: string
          format: int64
          description: last login timestamp.
        photoUrl:
          type: string
          description: The URL of the user profile photo.
        version:
          type: integer
          format: int32
          description: Version of the user's password.
        customAuth:
          type: boolean
          description: Whether the user is authenticated by the developer.
        providerUserInfo:
          type: array
          description: The IDP of the user.
          items:
            properties:
              providerId:
                type: string
                description: 'The IdP ID. For white listed IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
              federatedId:
                description: User's identifier at IDP.
                type: string
              displayName:
                description: The user's display name at the IDP.
                type: string
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
              screenName:
                type: string
                description: User's screen name at Twitter or login name at Github.
              email:
                type: string
                description: User's email at IDP.
              phoneNumber:
                type: string
                description: User's phone number.
              rawId:
                description: User's raw identifier directly returned from IDP.
                type: string
            type: object
        createdAt:
          description: User creation timestamp.
          format: int64
          type: string
        displayName:
          type: string
          description: The name of the user.
        localId:
          description: The local ID of the user.
          type: string
        email:
          description: The email of the user.
          type: string
        passwordUpdatedAt:
          type: number
          description: The timestamp when the password was last updated.
          format: double
        emailVerified:
          type: boolean
          description: Whether the email has been verified.
        salt:
          description: The user's password salt.
          type: string
          format: byte
        rawPassword:
          description: The user's plain text password.
          type: string
        disabled:
          type: boolean
          description: Whether the user is disabled.
        phoneNumber:
          description: User's phone number.
          type: string
    VerifyCustomTokenResponse:
      properties:
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
        kind:
          default: identitytoolkit#VerifyCustomTokenResponse
          type: string
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        expiresIn:
          format: int64
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        idToken:
          description: The GITKit token for authenticated user.
          type: string
      id: VerifyCustomTokenResponse
      description: Response from verifying a custom token
      type: object
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      properties:
        sessionInfo:
          description: Encrypted session information
          type: string
      type: object
      description: Response for Identitytoolkit-SendVerificationCode
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      description: Respone of getting public keys.
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
      type: object
      additionalProperties:
        type: string
    VerifyAssertionResponse:
      description: Response of verifying the IDP assertion.
      id: VerifyAssertionResponse
      type: object
      properties:
        verifiedProvider:
          type: array
          description: 'When action is ''map'', contains the idps which can be used for confirmation.'
          items:
            type: string
        oauthAuthorizationCode:
          description: The OAuth2 authorization code.
          type: string
        errorMessage:
          type: string
          description: Client error code.
        needConfirmation:
          type: boolean
          description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
        timeZone:
          type: string
          description: The timezone of the user.
        kind:
          default: identitytoolkit#VerifyAssertionResponse
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          type: string
        nickName:
          type: string
          description: The nick name of the user.
        originalEmail:
          description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
          type: string
        oauthScope:
          description: The scope for the OpenID OAuth extension.
          type: string
        displayName:
          type: string
          description: The display name of the user.
        fullName:
          type: string
          description: The full name of the user.
        oauthRequestToken:
          description: The user approved request token for the OpenID OAuth extension.
          type: string
        photoUrl:
          description: The URI of the public accessible profiel picture.
          type: string
        federatedId:
          description: The unique ID identifies the IdP account.
          type: string
        oauthIdToken:
          type: string
          description: The OIDC id token.
        idToken:
          description: The ID token.
          type: string
        action:
          description: The action code.
          type: string
        language:
          type: string
          description: The language preference of the user.
        providerId:
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.'
          type: string
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        localId:
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
          type: string
        dateOfBirth:
          description: The birth date of the IdP account.
          type: string
        oauthTokenSecret:
          description: The OAuth1 access token secret.
          type: string
        oauthExpireIn:
          type: integer
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
        screenName:
          description: The screen_name of a Twitter user or the login name at Github.
          type: string
        lastName:
          type: string
          description: The last name of the user.
        emailRecycled:
          description: It's true if the email is recycled.
          type: boolean
        appInstallationUrl:
          description: URL for OTA app installation.
          type: string
        firstName:
          description: The first name of the user.
          type: string
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          type: string
          format: int64
        isNewUser:
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
          type: boolean
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        rawUserInfo:
          description: Raw IDP-returned user info.
          type: string
        appScheme:
          type: string
          description: The custom scheme used by mobile app.
        needEmail:
          type: boolean
          description: Whether need client to supply email to complete the federated login flow.
        inputEmail:
          type: string
          description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
        emailVerified:
          description: The value is true if the IDP is also the email provider. It means the user owns the email.
          type: boolean
        oauthAccessToken:
          description: The OAuth2 access token.
          type: string
        context:
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
          type: string
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      properties:
        instanceId:
          description: Instance id token of the app.
          type: string
        requestUri:
          description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
          type: string
        returnIdpCredential:
          type: boolean
          description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
        postBody:
          description: The post body if the request is a HTTP POST.
          type: string
        returnRefreshToken:
          description: Whether to return refresh tokens.
          type: boolean
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        pendingIdToken:
          type: string
          description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
        autoCreate:
          type: boolean
          description: 'When it''s true, automatically creates a new account if the user doesn''t exist. When it''s false, allows existing user to sign in normally and throws exception if the user doesn''t exist.'
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        sessionId:
          type: string
          description: 'Session ID, which should match the one in previous createAuthUri request.'
      type: object
      description: Request to verify the IDP assertion.
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
    VerifyPasswordResponse:
      type: object
      id: VerifyPasswordResponse
      properties:
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          type: string
          format: int64
        registered:
          description: Whether the email is registered.
          type: boolean
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        displayName:
          description: The name of the user.
          type: string
        kind:
          default: identitytoolkit#VerifyPasswordResponse
          type: string
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        photoUrl:
          type: string
          description: The URI of the user's photo at IdP
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        oauthAccessToken:
          description: The OAuth2 access token.
          type: string
        localId:
          type: string
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        oauthExpireIn:
          format: int32
          description: The lifetime in seconds of the OAuth2 access token.
          type: integer
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
      description: Request of verifying the password.
    IdpConfig:
      type: object
      properties:
        whitelistedAudiences:
          description: Whitelisted client IDs for audience check.
          type: array
          items:
            type: string
        experimentPercent:
          description: Percent of users who will be prompted/redirected federated login for this IDP.
          type: integer
          format: int32
        enabled:
          type: boolean
          description: Whether this IDP is enabled.
        clientId:
          type: string
          description: OAuth2 client ID.
        provider:
          description: OAuth2 provider.
          type: string
        secret:
          description: OAuth2 client secret.
          type: string
      description: Template for a single idp configuration.
      id: IdpConfig
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      description: Request to get the account information.
      properties:
        localId:
          description: The list of local ID's of the users to inquiry.
          items:
            type: string
          type: array
        email:
          description: The list of emails of the users to inquiry.
          items:
            type: string
          type: array
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
          format: int64
        phoneNumber:
          items:
            type: string
          type: array
          description: Privileged caller can query users by specified phone number.
      type: object
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      type: object
      description: Request for Identitytoolkit-SendVerificationCode
      properties:
        iosReceipt:
          description: Receipt of successful app token validation with APNS.
          type: string
        recaptchaToken:
          description: Recaptcha solution.
          type: string
        phoneNumber:
          type: string
          description: The phone number to send the verification code to in E.164 format.
        iosSecret:
          description: Secret delivered to iOS app via APNS.
          type: string
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
    EmailLinkSigninResponse:
      properties:
        email:
          description: The user's email.
          type: string
        localId:
          description: The RP local ID of the user.
          type: string
        refreshToken:
          description: The refresh token for the signed in user.
          type: string
        isNewUser:
          type: boolean
          description: Whether the user is new.
        idToken:
          type: string
          description: The STS id token to login the newly signed in user.
        kind:
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          default: identitytoolkit#EmailLinkSigninResponse
          type: string
        expiresIn:
          description: Expiration time of STS id token in seconds.
          format: int64
          type: string
      id: EmailLinkSigninResponse
      type: object
      description: Response of email signIn.
    Relyingparty:
      id: Relyingparty
      type: object
      description: 'Request of getting a code for user confirmation (reset password, change email etc.)'
      properties:
        newEmail:
          type: string
          description: The new email if the code is for email change.
        androidMinimumVersion:
          type: string
          description: minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
        androidPackageName:
          description: android package name of the android app to handle the action code
          type: string
        androidInstallApp:
          type: boolean
          description: whether or not to install the android app on the device where the link is opened
        userIp:
          type: string
          description: The IP address of the user.
        iOSBundleId:
          type: string
          description: the iOS bundle id of iOS app to handle the action code
        continueUrl:
          type: string
          description: The url to continue to the Gitkit app
        requestType:
          description: The request type.
          type: string
        challenge:
          type: string
          description: The recaptcha challenge presented to the user.
        kind:
          description: The fixed string "identitytoolkit#relyingparty".
          type: string
          default: identitytoolkit#relyingparty
        idToken:
          type: string
          description: The user's Gitkit login token for email change.
        captchaResp:
          description: The recaptcha response from the user.
          type: string
        iOSAppStoreId:
          type: string
          description: iOS app store id to download the app if it's not already installed
        canHandleCodeInApp:
          description: whether or not the app can handle the oob code without first going to web
          type: boolean
        email:
          type: string
          description: The email of the user.
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      type: object
      description: Request to get the IDP authentication URL.
      properties:
        continueUri:
          type: string
          description: The URI to which the IDP redirects the user after the federated login flow.
        sessionId:
          type: string
          description: The session_id passed by client.
        clientId:
          description: The relying party OAuth client ID.
          type: string
        context:
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
          type: string
        authFlowType:
          type: string
          description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
        customParameter:
          additionalProperties:
            type: string
            description: The customized query parameter.
          type: object
          description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
        oauthScope:
          type: string
          description: 'Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant'
        otaApp:
          description: The native app package for OTA installation.
          type: string
        providerId:
          type: string
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
        hostedDomain:
          type: string
          description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        openidRealm:
          type: string
          description: 'Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.'
        oauthConsumerKey:
          type: string
          description: The developer's consumer key for OpenId OAuth Extension
        appId:
          type: string
          description: 'The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.'
        identifier:
          type: string
          description: The email or federated ID of the user.
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
    GetAccountInfoResponse:
      properties:
        kind:
          default: identitytoolkit#GetAccountInfoResponse
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          type: string
        users:
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The info of the users.
          type: array
      description: Response of getting account information.
      type: object
      id: GetAccountInfoResponse
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      properties:
        token:
          type: string
          description: The custom token to verify
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
      type: object
      description: Request to verify a custom token
    SetAccountInfoResponse:
      description: Respone of setting the account information.
      id: SetAccountInfoResponse
      properties:
        providerUserInfo:
          description: The user's profiles at the associated IdPs.
          type: array
          items:
            properties:
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
              providerId:
                description: 'The IdP ID. For whitelisted IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
                type: string
              federatedId:
                description: User's identifier at IDP.
                type: string
              displayName:
                description: The user's display name at the IDP.
                type: string
            type: object
        localId:
          type: string
          description: The local ID of the user.
        emailVerified:
          description: If email has been verified.
          type: boolean
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        email:
          description: The email of the user.
          type: string
        expiresIn:
          type: string
          format: int64
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        kind:
          default: identitytoolkit#SetAccountInfoResponse
          type: string
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
        passwordHash:
          type: string
          description: The user's hashed password.
          format: byte
        displayName:
          description: The name of the user.
          type: string
        photoUrl:
          type: string
          description: The photo url of the user.
        newEmail:
          type: string
          description: The new email the user attempts to change to.
      type: object
    CreateAuthUriResponse:
      type: object
      properties:
        registered:
          type: boolean
          description: Whether the user is registered if the identifier is an email.
        allProviders:
          type: array
          items:
            type: string
          description: all providers the user has once used to do federated login
        kind:
          type: string
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          default: identitytoolkit#CreateAuthUriResponse
        captchaRequired:
          description: True if captcha is required.
          type: boolean
        providerId:
          type: string
          description: The provider ID of the auth URI.
        signinMethods:
          description: All sign-in methods this user has used.
          items:
            type: string
          type: array
        authUri:
          description: The URI used by the IDP to authenticate the user.
          type: string
        sessionId:
          type: string
          description: Session ID which should be passed in the following verifyAssertion request.
        forExistingProvider:
          description: True if the authUri is for user's existing provider.
          type: boolean
      id: CreateAuthUriResponse
      description: Response of creating the IDP authentication URL.
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
  x-stackQL-resources:
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        verify_assertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signup_new_user:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_verification_code:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_password:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_account_info:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_out_user:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_project_config:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_account:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_phone_number:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_account:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        email_link_signin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_custom_token:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_project_config:
      id: google.identitytoolkit.relyingparty_project_config
      name: relyingparty_project_config
      title: Relyingparty Project Config
      methods:
        get_project_config:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_project_config/methods/get_project_config'
        insert: []
        update: []
        delete: []
    relyingparty_account_info:
      id: google.identitytoolkit.relyingparty_account_info
      name: relyingparty_account_info
      title: Relyingparty Account Info
      methods:
        get_account_info:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_auth_uri:
      id: google.identitytoolkit.relyingparty_auth_uri
      name: relyingparty_auth_uri
      title: Relyingparty Auth Uri
      methods:
        create_auth_uri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/relyingparty_auth_uri/methods/create_auth_uri'
        update: []
        delete: []
    relyingparty_public_keys:
      id: google.identitytoolkit.relyingparty_public_keys
      name: relyingparty_public_keys
      title: Relyingparty Public Keys
      methods:
        get_public_keys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_oob_confirmation_code:
      id: google.identitytoolkit.relyingparty_oob_confirmation_code
      name: relyingparty_oob_confirmation_code
      title: Relyingparty Oob Confirmation Code
      methods:
        get_oob_confirmation_code:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_recaptcha_param:
      id: google.identitytoolkit.relyingparty_recaptcha_param
      name: relyingparty_recaptcha_param
      title: Relyingparty Recaptcha Param
      methods:
        get_recaptcha_param:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_recaptcha_param/methods/get_recaptcha_param'
        insert: []
        update: []
        delete: []
    relyingparty_account:
      id: google.identitytoolkit.relyingparty_account
      name: relyingparty_account
      title: Relyingparty Account
      methods:
        delete_account:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /verifyAssertion:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_assertion
      x-stackQL-verb: exec
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
      parameters:
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
        - in: query
          name: projectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty_project_config
      x-stackQL-method: get_project_config
      x-stackQL-verb: select
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty_account_info
      x-stackQL-method: get_account_info
      x-stackQL-verb: exec
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: reset_password
      x-stackQL-verb: exec
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: signup_new_user
      x-stackQL-verb: exec
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: send_verification_code
      x-stackQL-verb: exec
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_password
      x-stackQL-verb: exec
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_account_info
      x-stackQL-verb: exec
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: sign_out_user
      x-stackQL-verb: exec
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_project_config
      x-stackQL-verb: exec
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: download_account
      x-stackQL-verb: exec
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty_auth_uri
      x-stackQL-method: create_auth_uri
      x-stackQL-verb: insert
  /verifyPhoneNumber:
    parameters: *ref_1
    post:
      description: Verifies ownership of a phone number and creates/updates the user account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_phone_number
      x-stackQL-verb: exec
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: upload_account
      x-stackQL-verb: exec
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: email_link_signin
      x-stackQL-verb: exec
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
      x-stackQL-resource: relyingparty_public_keys
      x-stackQL-method: get_public_keys
      x-stackQL-verb: exec
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty_oob_confirmation_code
      x-stackQL-method: get_oob_confirmation_code
      x-stackQL-verb: exec
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_custom_token
      x-stackQL-verb: exec
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty_recaptcha_param
      x-stackQL-method: get_recaptcha_param
      x-stackQL-verb: select
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty_account
      x-stackQL-method: delete_account
      x-stackQL-verb: exec
