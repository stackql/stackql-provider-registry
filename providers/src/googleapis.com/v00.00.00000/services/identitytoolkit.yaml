openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://developers.google.com/identity-toolkit/v3/'
servers:
  - url: 'https://www.googleapis.com/identitytoolkit/v3/relyingparty'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
            'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
      type: object
      properties:
        idToken:
          description: The GITKit token or STS id token of the authenticated user.
          type: string
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        localId:
          type: string
          description: The local ID of the user.
      description: Request to delete account.
    EmailLinkSigninResponse:
      id: EmailLinkSigninResponse
      description: Response of email signIn.
      type: object
      properties:
        expiresIn:
          type: string
          description: Expiration time of STS id token in seconds.
          format: int64
        isNewUser:
          type: boolean
          description: Whether the user is new.
        refreshToken:
          type: string
          description: The refresh token for the signed in user.
        localId:
          description: The RP local ID of the user.
          type: string
        email:
          description: The user's email.
          type: string
        kind:
          default: identitytoolkit#EmailLinkSigninResponse
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          type: string
        idToken:
          type: string
          description: The STS id token to login the newly signed in user.
    DownloadAccountResponse:
      properties:
        nextPageToken:
          description: The next page token. To be used in a subsequent request to return the next page of results.
          type: string
        kind:
          type: string
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
          default: identitytoolkit#DownloadAccountResponse
        users:
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The user accounts data.
          type: array
      description: Response of downloading accounts in batch.
      type: object
      id: DownloadAccountResponse
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      properties:
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        instanceId:
          description: Instance id token of the app.
          type: string
        token:
          type: string
          description: The custom token to verify
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
      description: Request to verify a custom token
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
      description: Request to verify the IDP assertion.
      properties:
        sessionId:
          type: string
          description: 'Session ID, which should match the one in previous createAuthUri request.'
        instanceId:
          description: Instance id token of the app.
          type: string
        tenantProjectNumber:
          format: uint64
          type: string
          description: Tenant project number to be used for idp discovery.
        returnRefreshToken:
          description: Whether to return refresh tokens.
          type: boolean
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        postBody:
          type: string
          description: The post body if the request is a HTTP POST.
        pendingIdToken:
          type: string
          description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
        requestUri:
          type: string
          description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
        autoCreate:
          type: boolean
          description: 'When it''s true, automatically creates a new account if the user doesn''t exist. When it''s false, allows existing user to sign in normally and throws exception if the user doesn''t exist.'
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        returnIdpCredential:
          description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
          type: boolean
      type: object
    CreateAuthUriResponse:
      description: Response of creating the IDP authentication URL.
      type: object
      id: CreateAuthUriResponse
      properties:
        signinMethods:
          description: All sign-in methods this user has used.
          items:
            type: string
          type: array
        registered:
          type: boolean
          description: Whether the user is registered if the identifier is an email.
        captchaRequired:
          description: True if captcha is required.
          type: boolean
        providerId:
          type: string
          description: The provider ID of the auth URI.
        forExistingProvider:
          description: True if the authUri is for user's existing provider.
          type: boolean
        sessionId:
          description: Session ID which should be passed in the following verifyAssertion request.
          type: string
        allProviders:
          items:
            type: string
          type: array
          description: all providers the user has once used to do federated login
        kind:
          default: identitytoolkit#CreateAuthUriResponse
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          type: string
        authUri:
          description: The URI used by the IDP to authenticate the user.
          type: string
    SignupNewUserResponse:
      id: SignupNewUserResponse
      properties:
        email:
          description: The email of the user.
          type: string
        kind:
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
          type: string
          default: identitytoolkit#SignupNewUserResponse
        expiresIn:
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        localId:
          description: The RP local ID of the user.
          type: string
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        displayName:
          type: string
          description: The name of the user.
      type: object
      description: 'Response of signing up new user, creating anonymous user or anonymous user reauth.'
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      properties:
        idToken:
          description: Token for linking flow.
          type: string
        email:
          description: The email address of the user.
          type: string
        oobCode:
          description: The confirmation code.
          type: string
      description: Request to sign in with email.
      type: object
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      properties:
        clientId:
          description: The relying party OAuth client ID.
          type: string
        providerId:
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
          type: string
        appId:
          description: 'The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.'
          type: string
        customParameter:
          description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
          type: object
          additionalProperties:
            description: The customized query parameter.
            type: string
        sessionId:
          type: string
          description: The session_id passed by client.
        identifier:
          description: The email or federated ID of the user.
          type: string
        otaApp:
          description: The native app package for OTA installation.
          type: string
        authFlowType:
          type: string
          description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
        oauthScope:
          type: string
          description: 'Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant'
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        openidRealm:
          type: string
          description: 'Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.'
        tenantProjectNumber:
          format: uint64
          type: string
          description: Tenant project number to be used for idp discovery.
        hostedDomain:
          description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
          type: string
        oauthConsumerKey:
          description: The developer's consumer key for OpenId OAuth Extension
          type: string
        continueUri:
          description: The URI to which the IDP redirects the user after the federated login flow.
          type: string
      type: object
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
      description: Request to get the IDP authentication URL.
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      properties:
        projectId:
          type: string
          description: Project ID of the relying party.
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      description: Response of setting the project configuration.
      type: object
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
      properties:
        deleteProvider:
          description: The IDPs the user request to delete.
          type: array
          items:
            type: string
        phoneNumber:
          description: Privileged caller can update user with specified phone number.
          type: string
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        email:
          description: The email of the user.
          type: string
        disableUser:
          description: Whether to disable the user.
          type: boolean
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        deleteAttribute:
          items:
            type: string
          description: The attributes users request to delete.
          type: array
        oobCode:
          type: string
          description: The out-of-band code of the change email request.
        photoUrl:
          description: The photo url of the user.
          type: string
        password:
          description: The new password of the user.
          type: string
        emailVerified:
          type: boolean
          description: Mark the email as verified or not.
        upgradeToFederatedLogin:
          description: Mark the user to upgrade to federated login.
          type: boolean
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        captchaResponse:
          description: Response to the captcha.
          type: string
        validSince:
          type: string
          format: int64
          description: Timestamp in seconds for valid login token.
        instanceId:
          type: string
          description: Instance id token of the app.
        displayName:
          type: string
          description: The name of the user.
        localId:
          description: The local ID of the user.
          type: string
        provider:
          type: array
          items:
            type: string
          description: The associated IDPs of the user.
        createdAt:
          description: The timestamp when the account is created.
          format: int64
          type: string
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
          format: int64
        captchaChallenge:
          description: The captcha challenge.
          type: string
        lastLoginAt:
          type: string
          format: int64
          description: Last login timestamp.
      type: object
      description: Request to set the account information.
    UserInfo:
      properties:
        version:
          description: Version of the user's password.
          format: int32
          type: integer
        emailVerified:
          type: boolean
          description: Whether the email has been verified.
        displayName:
          type: string
          description: The name of the user.
        createdAt:
          format: int64
          type: string
          description: User creation timestamp.
        customAuth:
          type: boolean
          description: Whether the user is authenticated by the developer.
        screenName:
          description: User's screen name at Twitter or login name at Github.
          type: string
        phoneNumber:
          description: User's phone number.
          type: string
        lastLoginAt:
          format: int64
          description: last login timestamp.
          type: string
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        localId:
          description: The local ID of the user.
          type: string
        salt:
          format: byte
          type: string
          description: The user's password salt.
        disabled:
          type: boolean
          description: Whether the user is disabled.
        rawPassword:
          type: string
          description: The user's plain text password.
        photoUrl:
          type: string
          description: The URL of the user profile photo.
        providerUserInfo:
          type: array
          description: The IDP of the user.
          items:
            type: object
            properties:
              phoneNumber:
                description: User's phone number.
                type: string
              federatedId:
                type: string
                description: User's identifier at IDP.
              screenName:
                type: string
                description: User's screen name at Twitter or login name at Github.
              displayName:
                description: The user's display name at the IDP.
                type: string
              email:
                description: User's email at IDP.
                type: string
              providerId:
                description: 'The IdP ID. For white listed IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
                type: string
              rawId:
                type: string
                description: User's raw identifier directly returned from IDP.
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
        email:
          description: The email of the user.
          type: string
        validSince:
          format: int64
          description: Timestamp in seconds for valid login token.
          type: string
        passwordHash:
          description: The user's hashed password.
          type: string
          format: byte
        passwordUpdatedAt:
          format: double
          type: number
          description: The timestamp when the password was last updated.
      id: UserInfo
      description: Template for an individual account info.
      type: object
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      properties:
        email:
          description: The list of emails of the users to inquiry.
          items:
            type: string
          type: array
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        phoneNumber:
          type: array
          description: Privileged caller can query users by specified phone number.
          items:
            type: string
        localId:
          type: array
          items:
            type: string
          description: The list of local ID's of the users to inquiry.
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
      description: Request to get the account information.
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
      type: object
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      description: Request for Identitytoolkit-SendVerificationCode
      type: object
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
      properties:
        iosSecret:
          description: Secret delivered to iOS app via APNS.
          type: string
        phoneNumber:
          description: The phone number to send the verification code to in E.164 format.
          type: string
        recaptchaToken:
          description: Recaptcha solution.
          type: string
        iosReceipt:
          type: string
          description: Receipt of successful app token validation with APNS.
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      properties:
        oldPassword:
          description: The old password inputted by the user.
          type: string
        oobCode:
          type: string
          description: The confirmation code.
        newPassword:
          type: string
          description: The new password inputted by the user.
        email:
          type: string
          description: The email address of the user.
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
      type: object
      description: Request to reset the password.
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      properties:
        apiKey:
          type: string
          description: 'Browser API key, needed when making http request to Apiary.'
        authorizedDomains:
          items:
            type: string
          type: array
          description: Authorized domains for widget redirect.
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        enableAnonymousUser:
          description: Whether to enable anonymous user.
          type: boolean
        resetPasswordTemplate:
          description: Reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        idpConfig:
          description: Oauth2 provider configuration.
          type: array
          items:
            $ref: '#/components/schemas/IdpConfig'
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
      type: object
      description: Request to set the project configuration.
    VerifyPasswordResponse:
      id: VerifyPasswordResponse
      description: Request of verifying the password.
      type: object
      properties:
        registered:
          type: boolean
          description: Whether the email is registered.
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        photoUrl:
          description: The URI of the user's photo at IdP
          type: string
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        oauthExpireIn:
          format: int32
          description: The lifetime in seconds of the OAuth2 access token.
          type: integer
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        displayName:
          type: string
          description: The name of the user.
        localId:
          type: string
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        kind:
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
          type: string
          default: identitytoolkit#VerifyPasswordResponse
        oauthAuthorizationCode:
          description: The OAuth2 authorization code.
          type: string
        expiresIn:
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
        idToken:
          description: The GITKit token for authenticated user.
          type: string
    GetRecaptchaParamResponse:
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          default: identitytoolkit#GetRecaptchaParamResponse
        recaptchaSiteKey:
          type: string
          description: Site key registered at recaptcha.
        recaptchaStoken:
          type: string
          description: 'The stoken field for the recaptcha widget, used to request captcha challenge.'
      type: object
      description: Response of getting recaptcha param.
      id: GetRecaptchaParamResponse
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      additionalProperties:
        type: string
      type: object
      description: Respone of getting public keys.
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      type: object
      properties:
        apiKey:
          description: 'Browser API key, needed when making http request to Apiary.'
          type: string
        dynamicLinksDomain:
          type: string
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        authorizedDomains:
          items:
            type: string
          type: array
          description: Authorized domains.
        resetPasswordTemplate:
          description: Reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        allowPasswordUser:
          type: boolean
          description: Whether to allow password user sign in or sign up.
        enableAnonymousUser:
          description: Whether anonymous user is enabled.
          type: boolean
        idpConfig:
          items:
            $ref: '#/components/schemas/IdpConfig'
          description: OAuth2 provider configuration.
          type: array
        projectId:
          type: string
          description: Project ID of the relying party.
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
      description: Response of getting the project configuration.
    VerifyAssertionResponse:
      type: object
      description: Response of verifying the IDP assertion.
      properties:
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        oauthIdToken:
          description: The OIDC id token.
          type: string
        action:
          description: The action code.
          type: string
        timeZone:
          description: The timezone of the user.
          type: string
        emailRecycled:
          description: It's true if the email is recycled.
          type: boolean
        screenName:
          description: The screen_name of a Twitter user or the login name at Github.
          type: string
        displayName:
          description: The display name of the user.
          type: string
        oauthRequestToken:
          type: string
          description: The user approved request token for the OpenID OAuth extension.
        oauthTokenSecret:
          type: string
          description: The OAuth1 access token secret.
        errorMessage:
          type: string
          description: Client error code.
        kind:
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          type: string
          default: identitytoolkit#VerifyAssertionResponse
        oauthScope:
          type: string
          description: The scope for the OpenID OAuth extension.
        inputEmail:
          description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
          type: string
        nickName:
          type: string
          description: The nick name of the user.
        needConfirmation:
          description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
          type: boolean
        needEmail:
          description: Whether need client to supply email to complete the federated login flow.
          type: boolean
        emailVerified:
          description: The value is true if the IDP is also the email provider. It means the user owns the email.
          type: boolean
        originalEmail:
          type: string
          description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
        language:
          description: The language preference of the user.
          type: string
        appInstallationUrl:
          description: URL for OTA app installation.
          type: string
        idToken:
          description: The ID token.
          type: string
        dateOfBirth:
          type: string
          description: The birth date of the IdP account.
        providerId:
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.'
          type: string
        localId:
          type: string
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        rawUserInfo:
          description: Raw IDP-returned user info.
          type: string
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
        fullName:
          description: The full name of the user.
          type: string
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
        firstName:
          type: string
          description: The first name of the user.
        federatedId:
          type: string
          description: The unique ID identifies the IdP account.
        photoUrl:
          type: string
          description: The URI of the public accessible profiel picture.
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
          type: integer
        lastName:
          description: The last name of the user.
          type: string
        verifiedProvider:
          type: array
          description: 'When action is ''map'', contains the idps which can be used for confirmation.'
          items:
            type: string
        email:
          type: string
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
        appScheme:
          type: string
          description: The custom scheme used by mobile app.
      id: VerifyAssertionResponse
    IdentitytoolkitRelyingpartySignOutUserRequest:
      properties:
        instanceId:
          description: Instance id token of the app.
          type: string
        localId:
          type: string
          description: The local ID of the user.
      id: IdentitytoolkitRelyingpartySignOutUserRequest
      description: Request to sign out user.
      type: object
    ResetPasswordResponse:
      description: Response of resetting the password.
      id: ResetPasswordResponse
      type: object
      properties:
        email:
          description: 'The user''s email. If the out-of-band code is for email recovery, the user''s original email.'
          type: string
        requestType:
          type: string
          description: The request type.
        newEmail:
          description: 'If the out-of-band code is for email recovery, the user''s new email.'
          type: string
        kind:
          type: string
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          default: identitytoolkit#ResetPasswordResponse
    VerifyCustomTokenResponse:
      properties:
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        expiresIn:
          format: int64
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        kind:
          default: identitytoolkit#VerifyCustomTokenResponse
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
          type: string
      id: VerifyCustomTokenResponse
      type: object
      description: Response from verifying a custom token
    GetAccountInfoResponse:
      description: Response of getting account information.
      properties:
        kind:
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          default: identitytoolkit#GetAccountInfoResponse
          type: string
        users:
          description: The info of the users.
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
      type: object
      id: GetAccountInfoResponse
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      properties:
        code:
          type: string
        phoneNumber:
          type: string
        temporaryProof:
          type: string
        verificationProof:
          type: string
        sessionInfo:
          type: string
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
        idToken:
          type: string
        operation:
          type: string
      description: Request for Identitytoolkit-VerifyPhoneNumber
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      type: object
    IdentitytoolkitRelyingpartySignOutUserResponse:
      description: Response of signing out user.
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      type: object
      properties:
        localId:
          type: string
          description: The local ID of the user.
    UploadAccountResponse:
      properties:
        error:
          description: The error encountered while processing the account info.
          items:
            properties:
              index:
                format: int32
                type: integer
                description: 'The index of the malformed account, starting from 0.'
              message:
                type: string
                description: Detailed error message for the account info.
            type: object
          type: array
        kind:
          description: The fixed string "identitytoolkit#UploadAccountResponse".
          default: identitytoolkit#UploadAccountResponse
          type: string
      type: object
      id: UploadAccountResponse
      description: Respone of uploading accounts in batch.
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      description: Response for Identitytoolkit-VerifyPhoneNumber
      type: object
      properties:
        idToken:
          type: string
        phoneNumber:
          type: string
        isNewUser:
          type: boolean
        expiresIn:
          type: string
          format: int64
        localId:
          type: string
        verificationProof:
          type: string
        refreshToken:
          type: string
        temporaryProof:
          type: string
        temporaryProofExpiresIn:
          format: int64
          type: string
        verificationProofExpiresIn:
          type: string
          format: int64
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
      type: object
      description: Request to upload user account in batch.
      properties:
        rounds:
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
          format: int32
          type: integer
        blockSize:
          format: int32
          type: integer
        parallelization:
          type: integer
          format: int32
        hashAlgorithm:
          description: The password hash algorithm.
          type: string
        signerKey:
          type: string
          description: The key for to hash the password.
          format: byte
        saltSeparator:
          type: string
          format: byte
          description: The salt separator.
        users:
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
          description: The account info to be stored.
        memoryCost:
          type: integer
          format: int32
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
        allowOverwrite:
          type: boolean
          description: Whether allow overwrite existing account when user local_id exists.
        dkLen:
          format: int32
          type: integer
        cpuMemCost:
          type: integer
          description: The following 4 fields are for standard scrypt algorithm.
          format: int32
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
          format: int64
        sanityCheck:
          type: boolean
          description: 'If true, backend will do sanity check(including duplicate email and federated id) when uploading account.'
        targetProjectId:
          type: string
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
    Relyingparty:
      properties:
        continueUrl:
          description: The url to continue to the Gitkit app
          type: string
        iOSAppStoreId:
          type: string
          description: iOS app store id to download the app if it's not already installed
        newEmail:
          description: The new email if the code is for email change.
          type: string
        androidPackageName:
          description: android package name of the android app to handle the action code
          type: string
        kind:
          description: The fixed string "identitytoolkit#relyingparty".
          type: string
          default: identitytoolkit#relyingparty
        requestType:
          description: The request type.
          type: string
        captchaResp:
          description: The recaptcha response from the user.
          type: string
        androidInstallApp:
          type: boolean
          description: whether or not to install the android app on the device where the link is opened
        androidMinimumVersion:
          description: minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
          type: string
        userIp:
          description: The IP address of the user.
          type: string
        email:
          description: The email of the user.
          type: string
        challenge:
          type: string
          description: The recaptcha challenge presented to the user.
        idToken:
          type: string
          description: The user's Gitkit login token for email change.
        canHandleCodeInApp:
          type: boolean
          description: whether or not the app can handle the oob code without first going to web
        iOSBundleId:
          type: string
          description: the iOS bundle id of iOS app to handle the action code
      description: 'Request of getting a code for user confirmation (reset password, change email etc.)'
      type: object
      id: Relyingparty
    DeleteAccountResponse:
      type: object
      properties:
        kind:
          type: string
          default: identitytoolkit#DeleteAccountResponse
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
      description: Respone of deleting account.
      id: DeleteAccountResponse
    IdpConfig:
      id: IdpConfig
      description: Template for a single idp configuration.
      type: object
      properties:
        secret:
          description: OAuth2 client secret.
          type: string
        experimentPercent:
          description: Percent of users who will be prompted/redirected federated login for this IDP.
          type: integer
          format: int32
        clientId:
          type: string
          description: OAuth2 client ID.
        provider:
          description: OAuth2 provider.
          type: string
        enabled:
          description: Whether this IDP is enabled.
          type: boolean
        whitelistedAudiences:
          type: array
          description: Whitelisted client IDs for audience check.
          items:
            type: string
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      description: Response for Identitytoolkit-SendVerificationCode
      type: object
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      properties:
        sessionInfo:
          type: string
          description: Encrypted session information
    GetOobConfirmationCodeResponse:
      properties:
        oobCode:
          description: The code to be send to the user.
          type: string
        email:
          description: The email address that the email is sent to.
          type: string
        kind:
          default: identitytoolkit#GetOobConfirmationCodeResponse
          type: string
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
      type: object
      description: 'Response of getting a code for user confirmation (reset password, change email etc.).'
      id: GetOobConfirmationCodeResponse
    SetAccountInfoResponse:
      properties:
        passwordHash:
          type: string
          description: The user's hashed password.
          format: byte
        newEmail:
          type: string
          description: The new email the user attempts to change to.
        emailVerified:
          type: boolean
          description: If email has been verified.
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
        kind:
          default: identitytoolkit#SetAccountInfoResponse
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
          type: string
        localId:
          description: The local ID of the user.
          type: string
        photoUrl:
          description: The photo url of the user.
          type: string
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        providerUserInfo:
          type: array
          items:
            type: object
            properties:
              providerId:
                description: 'The IdP ID. For whitelisted IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
                type: string
              displayName:
                description: The user's display name at the IDP.
                type: string
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
              federatedId:
                type: string
                description: User's identifier at IDP.
          description: The user's profiles at the associated IdPs.
        displayName:
          description: The name of the user.
          type: string
        email:
          type: string
          description: The email of the user.
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          type: string
          format: int64
      id: SetAccountInfoResponse
      description: Respone of setting the account information.
      type: object
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      type: object
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
      description: 'Request to signup new user, create anonymous user or anonymous user reauth.'
      properties:
        password:
          type: string
          description: The new password of the user.
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
        email:
          description: The email of the user.
          type: string
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        displayName:
          description: The name of the user.
          type: string
        phoneNumber:
          type: string
          description: Privileged caller can create user with specified phone number.
        captchaResponse:
          description: Response to the captcha.
          type: string
        emailVerified:
          type: boolean
          description: Mark the email as verified or not. Only can be used by service account.
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        disabled:
          type: boolean
          description: Whether to disable the user. Only can be used by service account.
        photoUrl:
          description: The photo url of the user.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        captchaChallenge:
          description: The captcha challenge.
          type: string
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      properties:
        nextPageToken:
          description: The token for the next page. This should be taken from the previous response.
          type: string
        maxResults:
          description: The max number of results to return in the response.
          format: uint32
          type: integer
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        targetProjectId:
          type: string
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
      type: object
      description: Request to download user account in batch.
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
      type: object
      properties:
        instanceId:
          description: Instance id token of the app.
          type: string
        pendingIdToken:
          type: string
          description: 'The GITKit token for the non-trusted IDP, which is to be confirmed by the user.'
        password:
          description: The password inputed by the user.
          type: string
        email:
          type: string
          description: The email of the user.
        tenantProjectNumber:
          format: uint64
          description: Tenant project number to be used for idp discovery.
          type: string
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        captchaResponse:
          type: string
          description: Response to the captcha.
        captchaChallenge:
          type: string
          description: The captcha challenge.
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
      description: Request to verify the password.
    EmailTemplate:
      properties:
        replyTo:
          type: string
          description: Reply-to address.
        fromDisplayName:
          description: From display name.
          type: string
        body:
          type: string
          description: Email body.
        from:
          type: string
          description: From address of the email.
        subject:
          type: string
          description: Subject of the email.
        format:
          description: Email body format.
          type: string
      type: object
      description: Template for an email template.
      id: EmailTemplate
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
  x-stackQL-resources:
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        verify_phone_number:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_assertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        email_link_signin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_custom_token:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_account_info:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_account:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signup_new_user:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_account:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_verification_code:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_out_user:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_password:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_project_config:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_auth_uri:
      id: google.identitytoolkit.relyingparty_auth_uri
      name: relyingparty_auth_uri
      title: Relyingparty Auth Uri
      methods:
        create_auth_uri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/relyingparty_auth_uri/methods/create_auth_uri'
        update: []
        delete: []
    relyingparty_project_config:
      id: google.identitytoolkit.relyingparty_project_config
      name: relyingparty_project_config
      title: Relyingparty Project Config
      methods:
        get_project_config:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_project_config/methods/get_project_config'
        insert: []
        update: []
        delete: []
    relyingparty_recaptcha_param:
      id: google.identitytoolkit.relyingparty_recaptcha_param
      name: relyingparty_recaptcha_param
      title: Relyingparty Recaptcha Param
      methods:
        get_recaptcha_param:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_recaptcha_param/methods/get_recaptcha_param'
        insert: []
        update: []
        delete: []
    relyingparty_oob_confirmation_code:
      id: google.identitytoolkit.relyingparty_oob_confirmation_code
      name: relyingparty_oob_confirmation_code
      title: Relyingparty Oob Confirmation Code
      methods:
        get_oob_confirmation_code:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_account_info:
      id: google.identitytoolkit.relyingparty_account_info
      name: relyingparty_account_info
      title: Relyingparty Account Info
      methods:
        get_account_info:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_account:
      id: google.identitytoolkit.relyingparty_account
      name: relyingparty_account
      title: Relyingparty Account
      methods:
        delete_account:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_public_keys:
      id: google.identitytoolkit.relyingparty_public_keys
      name: relyingparty_public_keys
      title: Relyingparty Public Keys
      methods:
        get_public_keys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /verifyPhoneNumber:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: Verifies ownership of a phone number and creates/updates the user account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_phone_number
      x-stackQL-verb: exec
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_assertion
      x-stackQL-verb: exec
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: email_link_signin
      x-stackQL-verb: exec
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_custom_token
      x-stackQL-verb: exec
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_account_info
      x-stackQL-verb: exec
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: upload_account
      x-stackQL-verb: exec
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty_auth_uri
      x-stackQL-method: create_auth_uri
      x-stackQL-verb: insert
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: signup_new_user
      x-stackQL-verb: exec
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
      parameters:
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
        - in: query
          name: projectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty_project_config
      x-stackQL-method: get_project_config
      x-stackQL-verb: select
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty_recaptcha_param
      x-stackQL-method: get_recaptcha_param
      x-stackQL-verb: select
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty_oob_confirmation_code
      x-stackQL-method: get_oob_confirmation_code
      x-stackQL-verb: exec
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty_account_info
      x-stackQL-method: get_account_info
      x-stackQL-verb: exec
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: download_account
      x-stackQL-verb: exec
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty_account
      x-stackQL-method: delete_account
      x-stackQL-verb: exec
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: send_verification_code
      x-stackQL-verb: exec
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: reset_password
      x-stackQL-verb: exec
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: sign_out_user
      x-stackQL-verb: exec
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_password
      x-stackQL-verb: exec
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
      x-stackQL-resource: relyingparty_public_keys
      x-stackQL-method: get_public_keys
      x-stackQL-verb: exec
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_project_config
      x-stackQL-verb: exec
