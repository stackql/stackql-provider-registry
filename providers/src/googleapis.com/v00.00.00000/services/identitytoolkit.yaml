openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://developers.google.com/identity-toolkit/v3/'
servers:
  - url: 'https://www.googleapis.com/identitytoolkit/v3/relyingparty'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
            'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    IdpConfig:
      properties:
        secret:
          type: string
          description: OAuth2 client secret.
        enabled:
          type: boolean
          description: Whether this IDP is enabled.
        experimentPercent:
          format: int32
          type: integer
          description: Percent of users who will be prompted/redirected federated login for this IDP.
        whitelistedAudiences:
          items:
            type: string
          description: Whitelisted client IDs for audience check.
          type: array
        provider:
          type: string
          description: OAuth2 provider.
        clientId:
          description: OAuth2 client ID.
          type: string
      description: Template for a single idp configuration.
      type: object
      id: IdpConfig
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      description: Response of setting the project configuration.
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      type: object
      properties:
        projectId:
          type: string
          description: Project ID of the relying party.
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      properties:
        cpuMemCost:
          description: The following 4 fields are for standard scrypt algorithm.
          format: int32
          type: integer
        rounds:
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
          type: integer
          format: int32
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        signerKey:
          description: The key for to hash the password.
          format: byte
          type: string
        users:
          type: array
          description: The account info to be stored.
          items:
            $ref: '#/components/schemas/UserInfo'
        memoryCost:
          type: integer
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
          format: int32
        sanityCheck:
          description: 'If true, backend will do sanity check(including duplicate email and federated id) when uploading account.'
          type: boolean
        blockSize:
          type: integer
          format: int32
        dkLen:
          type: integer
          format: int32
        hashAlgorithm:
          type: string
          description: The password hash algorithm.
        parallelization:
          format: int32
          type: integer
        saltSeparator:
          format: byte
          type: string
          description: The salt separator.
        targetProjectId:
          type: string
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
        allowOverwrite:
          type: boolean
          description: Whether allow overwrite existing account when user local_id exists.
      description: Request to upload user account in batch.
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
      type: object
    SignupNewUserResponse:
      description: 'Response of signing up new user, creating anonymous user or anonymous user reauth.'
      properties:
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        kind:
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
          type: string
          default: identitytoolkit#SignupNewUserResponse
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
        displayName:
          type: string
          description: The name of the user.
        email:
          description: The email of the user.
          type: string
        localId:
          type: string
          description: The RP local ID of the user.
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
      id: SignupNewUserResponse
      type: object
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      properties:
        temporaryProofExpiresIn:
          format: int64
          type: string
        isNewUser:
          type: boolean
        refreshToken:
          type: string
        localId:
          type: string
        phoneNumber:
          type: string
        idToken:
          type: string
        verificationProofExpiresIn:
          format: int64
          type: string
        expiresIn:
          format: int64
          type: string
        verificationProof:
          type: string
        temporaryProof:
          type: string
      description: Response for Identitytoolkit-VerifyPhoneNumber
      type: object
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
    VerifyAssertionResponse:
      id: VerifyAssertionResponse
      properties:
        kind:
          default: identitytoolkit#VerifyAssertionResponse
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          type: string
        idToken:
          description: The ID token.
          type: string
        oauthIdToken:
          type: string
          description: The OIDC id token.
        nickName:
          description: The nick name of the user.
          type: string
        firstName:
          description: The first name of the user.
          type: string
        verifiedProvider:
          description: 'When action is ''map'', contains the idps which can be used for confirmation.'
          items:
            type: string
          type: array
        appInstallationUrl:
          type: string
          description: URL for OTA app installation.
        emailVerified:
          description: The value is true if the IDP is also the email provider. It means the user owns the email.
          type: boolean
        oauthTokenSecret:
          type: string
          description: The OAuth1 access token secret.
        errorMessage:
          type: string
          description: Client error code.
        appScheme:
          type: string
          description: The custom scheme used by mobile app.
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        emailRecycled:
          description: It's true if the email is recycled.
          type: boolean
        language:
          type: string
          description: The language preference of the user.
        originalEmail:
          description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
          type: string
        timeZone:
          type: string
          description: The timezone of the user.
        photoUrl:
          type: string
          description: The URI of the public accessible profiel picture.
        fullName:
          description: The full name of the user.
          type: string
        dateOfBirth:
          type: string
          description: The birth date of the IdP account.
        screenName:
          description: The screen_name of a Twitter user or the login name at Github.
          type: string
        displayName:
          type: string
          description: The display name of the user.
        inputEmail:
          description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
          type: string
        oauthRequestToken:
          description: The user approved request token for the OpenID OAuth extension.
          type: string
        needEmail:
          type: boolean
          description: Whether need client to supply email to complete the federated login flow.
        action:
          description: The action code.
          type: string
        lastName:
          type: string
          description: The last name of the user.
        oauthScope:
          description: The scope for the OpenID OAuth extension.
          type: string
        federatedId:
          type: string
          description: The unique ID identifies the IdP account.
        oauthAccessToken:
          description: The OAuth2 access token.
          type: string
        localId:
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
          type: string
        expiresIn:
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        oauthExpireIn:
          type: integer
          format: int32
          description: The lifetime in seconds of the OAuth2 access token.
        rawUserInfo:
          description: Raw IDP-returned user info.
          type: string
        oauthAuthorizationCode:
          description: The OAuth2 authorization code.
          type: string
        providerId:
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.'
          type: string
        needConfirmation:
          type: boolean
          description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        isNewUser:
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
          type: boolean
      type: object
      description: Response of verifying the IDP assertion.
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      description: 'Request to signup new user, create anonymous user or anonymous user reauth.'
      properties:
        photoUrl:
          description: The photo url of the user.
          type: string
        displayName:
          description: The name of the user.
          type: string
        emailVerified:
          description: Mark the email as verified or not. Only can be used by service account.
          type: boolean
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        phoneNumber:
          description: Privileged caller can create user with specified phone number.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        captchaChallenge:
          description: The captcha challenge.
          type: string
        email:
          type: string
          description: The email of the user.
        captchaResponse:
          type: string
          description: Response to the captcha.
        password:
          description: The new password of the user.
          type: string
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        disabled:
          type: boolean
          description: Whether to disable the user. Only can be used by service account.
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      properties:
        password:
          description: The password inputed by the user.
          type: string
        captchaChallenge:
          type: string
          description: The captcha challenge.
        email:
          type: string
          description: The email of the user.
        instanceId:
          type: string
          description: Instance id token of the app.
        captchaResponse:
          type: string
          description: Response to the captcha.
        tenantProjectNumber:
          format: uint64
          type: string
          description: Tenant project number to be used for idp discovery.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        pendingIdToken:
          type: string
          description: 'The GITKit token for the non-trusted IDP, which is to be confirmed by the user.'
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
      description: Request to verify the password.
      type: object
    GetAccountInfoResponse:
      type: object
      description: Response of getting account information.
      properties:
        kind:
          default: identitytoolkit#GetAccountInfoResponse
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The info of the users.
      id: GetAccountInfoResponse
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      properties:
        continueUri:
          description: The URI to which the IDP redirects the user after the federated login flow.
          type: string
        oauthConsumerKey:
          description: The developer's consumer key for OpenId OAuth Extension
          type: string
        clientId:
          description: The relying party OAuth client ID.
          type: string
        openidRealm:
          type: string
          description: 'Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.'
        identifier:
          description: The email or federated ID of the user.
          type: string
        oauthScope:
          type: string
          description: 'Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant'
        sessionId:
          type: string
          description: The session_id passed by client.
        providerId:
          type: string
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
        context:
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
          type: string
        hostedDomain:
          type: string
          description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
        customParameter:
          type: object
          additionalProperties:
            description: The customized query parameter.
            type: string
          description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
        authFlowType:
          description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
          type: string
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          type: string
          format: uint64
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        appId:
          type: string
          description: 'The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.'
        otaApp:
          description: The native app package for OTA installation.
          type: string
      type: object
      description: Request to get the IDP authentication URL.
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
    EmailLinkSigninResponse:
      id: EmailLinkSigninResponse
      description: Response of email signIn.
      type: object
      properties:
        localId:
          description: The RP local ID of the user.
          type: string
        expiresIn:
          description: Expiration time of STS id token in seconds.
          format: int64
          type: string
        refreshToken:
          type: string
          description: The refresh token for the signed in user.
        kind:
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          type: string
          default: identitytoolkit#EmailLinkSigninResponse
        isNewUser:
          type: boolean
          description: Whether the user is new.
        idToken:
          description: The STS id token to login the newly signed in user.
          type: string
        email:
          description: The user's email.
          type: string
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
      description: Request for Identitytoolkit-SendVerificationCode
      properties:
        iosSecret:
          type: string
          description: Secret delivered to iOS app via APNS.
        recaptchaToken:
          description: Recaptcha solution.
          type: string
        iosReceipt:
          type: string
          description: Receipt of successful app token validation with APNS.
        phoneNumber:
          description: The phone number to send the verification code to in E.164 format.
          type: string
      type: object
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      description: Request to verify the IDP assertion.
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
      type: object
      properties:
        postBody:
          description: The post body if the request is a HTTP POST.
          type: string
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        instanceId:
          description: Instance id token of the app.
          type: string
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        requestUri:
          type: string
          description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
        returnIdpCredential:
          type: boolean
          description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        autoCreate:
          type: boolean
          description: 'When it''s true, automatically creates a new account if the user doesn''t exist. When it''s false, allows existing user to sign in normally and throws exception if the user doesn''t exist.'
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        pendingIdToken:
          type: string
          description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
        returnRefreshToken:
          description: Whether to return refresh tokens.
          type: boolean
        sessionId:
          description: 'Session ID, which should match the one in previous createAuthUri request.'
          type: string
    IdentitytoolkitRelyingpartySignOutUserRequest:
      properties:
        localId:
          description: The local ID of the user.
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
      type: object
      id: IdentitytoolkitRelyingpartySignOutUserRequest
      description: Request to sign out user.
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      description: Request to set the project configuration.
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
      properties:
        apiKey:
          description: 'Browser API key, needed when making http request to Apiary.'
          type: string
        legacyResetPasswordTemplate:
          description: Legacy reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        idpConfig:
          items:
            $ref: '#/components/schemas/IdpConfig'
          description: Oauth2 provider configuration.
          type: array
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        allowPasswordUser:
          type: boolean
          description: Whether to allow password user sign in or sign up.
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        authorizedDomains:
          type: array
          description: Authorized domains for widget redirect.
          items:
            type: string
        enableAnonymousUser:
          description: Whether to enable anonymous user.
          type: boolean
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
      type: object
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      type: object
      description: Request to verify a custom token
      properties:
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
        token:
          description: The custom token to verify
          type: string
    SetAccountInfoResponse:
      properties:
        passwordHash:
          type: string
          format: byte
          description: The user's hashed password.
        kind:
          type: string
          default: identitytoolkit#SetAccountInfoResponse
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        providerUserInfo:
          description: The user's profiles at the associated IdPs.
          items:
            properties:
              federatedId:
                type: string
                description: User's identifier at IDP.
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
              providerId:
                type: string
                description: 'The IdP ID. For whitelisted IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
              displayName:
                type: string
                description: The user's display name at the IDP.
            type: object
          type: array
        emailVerified:
          type: boolean
          description: If email has been verified.
        photoUrl:
          description: The photo url of the user.
          type: string
        newEmail:
          type: string
          description: The new email the user attempts to change to.
        expiresIn:
          type: string
          format: int64
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        localId:
          description: The local ID of the user.
          type: string
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        displayName:
          type: string
          description: The name of the user.
        email:
          description: The email of the user.
          type: string
      type: object
      id: SetAccountInfoResponse
      description: Respone of setting the account information.
    GetRecaptchaParamResponse:
      description: Response of getting recaptcha param.
      id: GetRecaptchaParamResponse
      type: object
      properties:
        recaptchaSiteKey:
          type: string
          description: Site key registered at recaptcha.
        recaptchaStoken:
          type: string
          description: 'The stoken field for the recaptcha widget, used to request captcha challenge.'
        kind:
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          default: identitytoolkit#GetRecaptchaParamResponse
          type: string
    GetOobConfirmationCodeResponse:
      id: GetOobConfirmationCodeResponse
      description: 'Response of getting a code for user confirmation (reset password, change email etc.).'
      properties:
        kind:
          type: string
          default: identitytoolkit#GetOobConfirmationCodeResponse
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
        email:
          type: string
          description: The email address that the email is sent to.
        oobCode:
          type: string
          description: The code to be send to the user.
      type: object
    IdentitytoolkitRelyingpartySignOutUserResponse:
      type: object
      properties:
        localId:
          description: The local ID of the user.
          type: string
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      description: Response of signing out user.
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      additionalProperties:
        type: string
      description: Respone of getting public keys.
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
      type: object
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      properties:
        email:
          description: The email address of the user.
          type: string
        idToken:
          type: string
          description: Token for linking flow.
        oobCode:
          type: string
          description: The confirmation code.
      description: Request to sign in with email.
      type: object
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
    VerifyCustomTokenResponse:
      properties:
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
        kind:
          type: string
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
          default: identitytoolkit#VerifyCustomTokenResponse
        expiresIn:
          format: int64
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          type: string
        idToken:
          type: string
          description: The GITKit token for authenticated user.
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
      description: Response from verifying a custom token
      type: object
      id: VerifyCustomTokenResponse
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      properties:
        operation:
          type: string
        verificationProof:
          type: string
        phoneNumber:
          type: string
        temporaryProof:
          type: string
        code:
          type: string
        sessionInfo:
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
          type: string
        idToken:
          type: string
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      description: Request for Identitytoolkit-VerifyPhoneNumber
      type: object
    VerifyPasswordResponse:
      properties:
        registered:
          description: Whether the email is registered.
          type: boolean
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        localId:
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
          type: string
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        displayName:
          type: string
          description: The name of the user.
        oauthExpireIn:
          type: integer
          format: int32
          description: The lifetime in seconds of the OAuth2 access token.
        expiresIn:
          format: int64
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        oauthAuthorizationCode:
          description: The OAuth2 authorization code.
          type: string
        photoUrl:
          type: string
          description: The URI of the user's photo at IdP
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        kind:
          default: identitytoolkit#VerifyPasswordResponse
          type: string
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
      description: Request of verifying the password.
      id: VerifyPasswordResponse
      type: object
    EmailTemplate:
      type: object
      properties:
        from:
          description: From address of the email.
          type: string
        format:
          type: string
          description: Email body format.
        body:
          description: Email body.
          type: string
        fromDisplayName:
          type: string
          description: From display name.
        subject:
          type: string
          description: Subject of the email.
        replyTo:
          description: Reply-to address.
          type: string
      description: Template for an email template.
      id: EmailTemplate
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      description: Response for Identitytoolkit-SendVerificationCode
      properties:
        sessionInfo:
          type: string
          description: Encrypted session information
      type: object
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      properties:
        email:
          description: The email address of the user.
          type: string
        newPassword:
          type: string
          description: The new password inputted by the user.
        oobCode:
          type: string
          description: The confirmation code.
        oldPassword:
          type: string
          description: The old password inputted by the user.
      description: Request to reset the password.
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
      type: object
    UploadAccountResponse:
      description: Respone of uploading accounts in batch.
      type: object
      id: UploadAccountResponse
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#UploadAccountResponse".
          default: identitytoolkit#UploadAccountResponse
        error:
          description: The error encountered while processing the account info.
          items:
            type: object
            properties:
              message:
                description: Detailed error message for the account info.
                type: string
              index:
                format: int32
                description: 'The index of the malformed account, starting from 0.'
                type: integer
          type: array
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      properties:
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        localId:
          items:
            type: string
          type: array
          description: The list of local ID's of the users to inquiry.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        phoneNumber:
          items:
            type: string
          type: array
          description: Privileged caller can query users by specified phone number.
        email:
          type: array
          description: The list of emails of the users to inquiry.
          items:
            type: string
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
      type: object
      description: Request to get the account information.
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      description: Request to download user account in batch.
      properties:
        targetProjectId:
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
          type: string
        maxResults:
          type: integer
          format: uint32
          description: The max number of results to return in the response.
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        nextPageToken:
          description: The token for the next page. This should be taken from the previous response.
          type: string
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
      type: object
    UserInfo:
      id: UserInfo
      properties:
        rawPassword:
          type: string
          description: The user's plain text password.
        createdAt:
          format: int64
          description: User creation timestamp.
          type: string
        emailVerified:
          type: boolean
          description: Whether the email has been verified.
        lastLoginAt:
          format: int64
          type: string
          description: last login timestamp.
        email:
          description: The email of the user.
          type: string
        phoneNumber:
          type: string
          description: User's phone number.
        disabled:
          description: Whether the user is disabled.
          type: boolean
        validSince:
          type: string
          description: Timestamp in seconds for valid login token.
          format: int64
        customAttributes:
          type: string
          description: The custom attributes to be set in the user's id token.
        displayName:
          description: The name of the user.
          type: string
        localId:
          description: The local ID of the user.
          type: string
        screenName:
          description: User's screen name at Twitter or login name at Github.
          type: string
        passwordHash:
          type: string
          description: The user's hashed password.
          format: byte
        version:
          type: integer
          description: Version of the user's password.
          format: int32
        customAuth:
          description: Whether the user is authenticated by the developer.
          type: boolean
        salt:
          type: string
          format: byte
          description: The user's password salt.
        providerUserInfo:
          description: The IDP of the user.
          items:
            type: object
            properties:
              rawId:
                type: string
                description: User's raw identifier directly returned from IDP.
              providerId:
                description: 'The IdP ID. For white listed IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
                type: string
              phoneNumber:
                type: string
                description: User's phone number.
              screenName:
                description: User's screen name at Twitter or login name at Github.
                type: string
              federatedId:
                description: User's identifier at IDP.
                type: string
              email:
                description: User's email at IDP.
                type: string
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
              displayName:
                type: string
                description: The user's display name at the IDP.
          type: array
        photoUrl:
          type: string
          description: The URL of the user profile photo.
        passwordUpdatedAt:
          format: double
          description: The timestamp when the password was last updated.
          type: number
      type: object
      description: Template for an individual account info.
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      properties:
        idToken:
          type: string
          description: The GITKit token or STS id token of the authenticated user.
        localId:
          type: string
          description: The local ID of the user.
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
      description: Request to delete account.
      type: object
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
    DeleteAccountResponse:
      type: object
      properties:
        kind:
          default: identitytoolkit#DeleteAccountResponse
          type: string
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
      id: DeleteAccountResponse
      description: Respone of deleting account.
    ResetPasswordResponse:
      id: ResetPasswordResponse
      type: object
      properties:
        requestType:
          type: string
          description: The request type.
        email:
          type: string
          description: 'The user''s email. If the out-of-band code is for email recovery, the user''s original email.'
        newEmail:
          description: 'If the out-of-band code is for email recovery, the user''s new email.'
          type: string
        kind:
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          default: identitytoolkit#ResetPasswordResponse
          type: string
      description: Response of resetting the password.
    CreateAuthUriResponse:
      type: object
      properties:
        sessionId:
          type: string
          description: Session ID which should be passed in the following verifyAssertion request.
        providerId:
          type: string
          description: The provider ID of the auth URI.
        authUri:
          type: string
          description: The URI used by the IDP to authenticate the user.
        registered:
          description: Whether the user is registered if the identifier is an email.
          type: boolean
        allProviders:
          description: all providers the user has once used to do federated login
          items:
            type: string
          type: array
        forExistingProvider:
          description: True if the authUri is for user's existing provider.
          type: boolean
        captchaRequired:
          description: True if captcha is required.
          type: boolean
        kind:
          type: string
          default: identitytoolkit#CreateAuthUriResponse
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
        signinMethods:
          type: array
          description: All sign-in methods this user has used.
          items:
            type: string
      id: CreateAuthUriResponse
      description: Response of creating the IDP authentication URL.
    Relyingparty:
      type: object
      id: Relyingparty
      properties:
        captchaResp:
          description: The recaptcha response from the user.
          type: string
        newEmail:
          description: The new email if the code is for email change.
          type: string
        iOSAppStoreId:
          type: string
          description: iOS app store id to download the app if it's not already installed
        requestType:
          type: string
          description: The request type.
        email:
          description: The email of the user.
          type: string
        kind:
          description: The fixed string "identitytoolkit#relyingparty".
          type: string
          default: identitytoolkit#relyingparty
        idToken:
          description: The user's Gitkit login token for email change.
          type: string
        androidInstallApp:
          type: boolean
          description: whether or not to install the android app on the device where the link is opened
        challenge:
          description: The recaptcha challenge presented to the user.
          type: string
        androidPackageName:
          type: string
          description: android package name of the android app to handle the action code
        canHandleCodeInApp:
          type: boolean
          description: whether or not the app can handle the oob code without first going to web
        iOSBundleId:
          description: the iOS bundle id of iOS app to handle the action code
          type: string
        continueUrl:
          type: string
          description: The url to continue to the Gitkit app
        androidMinimumVersion:
          type: string
          description: minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
        userIp:
          type: string
          description: The IP address of the user.
      description: 'Request of getting a code for user confirmation (reset password, change email etc.)'
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
      type: object
      properties:
        provider:
          description: The associated IDPs of the user.
          type: array
          items:
            type: string
        disableUser:
          description: Whether to disable the user.
          type: boolean
        emailVerified:
          description: Mark the email as verified or not.
          type: boolean
        phoneNumber:
          description: Privileged caller can update user with specified phone number.
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
        deleteProvider:
          type: array
          items:
            type: string
          description: The IDPs the user request to delete.
        password:
          description: The new password of the user.
          type: string
        email:
          type: string
          description: The email of the user.
        upgradeToFederatedLogin:
          description: Mark the user to upgrade to federated login.
          type: boolean
        lastLoginAt:
          description: Last login timestamp.
          type: string
          format: int64
        captchaResponse:
          description: Response to the captcha.
          type: string
        photoUrl:
          description: The photo url of the user.
          type: string
        oobCode:
          type: string
          description: The out-of-band code of the change email request.
        displayName:
          type: string
          description: The name of the user.
        createdAt:
          format: int64
          description: The timestamp when the account is created.
          type: string
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
          format: int64
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        deleteAttribute:
          description: The attributes users request to delete.
          items:
            type: string
          type: array
        captchaChallenge:
          type: string
          description: The captcha challenge.
        validSince:
          type: string
          description: Timestamp in seconds for valid login token.
          format: int64
        localId:
          type: string
          description: The local ID of the user.
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
      description: Request to set the account information.
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      properties:
        idpConfig:
          type: array
          description: OAuth2 provider configuration.
          items:
            $ref: '#/components/schemas/IdpConfig'
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
        projectId:
          type: string
          description: Project ID of the relying party.
        allowPasswordUser:
          type: boolean
          description: Whether to allow password user sign in or sign up.
        dynamicLinksDomain:
          type: string
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        apiKey:
          description: 'Browser API key, needed when making http request to Apiary.'
          type: string
        authorizedDomains:
          type: array
          description: Authorized domains.
          items:
            type: string
        enableAnonymousUser:
          description: Whether anonymous user is enabled.
          type: boolean
        legacyResetPasswordTemplate:
          description: Legacy reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
      type: object
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      description: Response of getting the project configuration.
    DownloadAccountResponse:
      description: Response of downloading accounts in batch.
      id: DownloadAccountResponse
      type: object
      properties:
        users:
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
          description: The user accounts data.
        nextPageToken:
          description: The next page token. To be used in a subsequent request to return the next page of results.
          type: string
        kind:
          default: identitytoolkit#DownloadAccountResponse
          type: string
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
  parameters:
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  x-stackQL-resources:
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        verify_custom_token:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_phone_number:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_password:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_account_info:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_out_user:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_assertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        email_link_signin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_project_config:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_account:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_account:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_verification_code:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signup_new_user:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_project_config:
      id: google.identitytoolkit.relyingparty_project_config
      name: relyingparty_project_config
      title: Relyingparty Project Config
      methods:
        get_project_config:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_project_config/methods/get_project_config'
        insert: []
        update: []
        delete: []
    relyingparty_public_keys:
      id: google.identitytoolkit.relyingparty_public_keys
      name: relyingparty_public_keys
      title: Relyingparty Public Keys
      methods:
        get_public_keys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_account:
      id: google.identitytoolkit.relyingparty_account
      name: relyingparty_account
      title: Relyingparty Account
      methods:
        delete_account:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_recaptcha_param:
      id: google.identitytoolkit.relyingparty_recaptcha_param
      name: relyingparty_recaptcha_param
      title: Relyingparty Recaptcha Param
      methods:
        get_recaptcha_param:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_recaptcha_param/methods/get_recaptcha_param'
        insert: []
        update: []
        delete: []
    relyingparty_account_info:
      id: google.identitytoolkit.relyingparty_account_info
      name: relyingparty_account_info
      title: Relyingparty Account Info
      methods:
        get_account_info:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_auth_uri:
      id: google.identitytoolkit.relyingparty_auth_uri
      name: relyingparty_auth_uri
      title: Relyingparty Auth Uri
      methods:
        create_auth_uri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/relyingparty_auth_uri/methods/create_auth_uri'
        update: []
        delete: []
    relyingparty_oob_confirmation_code:
      id: google.identitytoolkit.relyingparty_oob_confirmation_code
      name: relyingparty_oob_confirmation_code
      title: Relyingparty Oob Confirmation Code
      methods:
        get_oob_confirmation_code:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /verifyCustomToken:
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_custom_token
      x-stackQL-verb: exec
  /verifyPhoneNumber:
    parameters: *ref_1
    post:
      description: Verifies ownership of a phone number and creates/updates the user account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_phone_number
      x-stackQL-verb: exec
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_password
      x-stackQL-verb: exec
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_account_info
      x-stackQL-verb: exec
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: sign_out_user
      x-stackQL-verb: exec
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
      parameters:
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
        - in: query
          name: projectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty_project_config
      x-stackQL-method: get_project_config
      x-stackQL-verb: select
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_assertion
      x-stackQL-verb: exec
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: email_link_signin
      x-stackQL-verb: exec
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: reset_password
      x-stackQL-verb: exec
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_project_config
      x-stackQL-verb: exec
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
      x-stackQL-resource: relyingparty_public_keys
      x-stackQL-method: get_public_keys
      x-stackQL-verb: exec
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: upload_account
      x-stackQL-verb: exec
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: download_account
      x-stackQL-verb: exec
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty_account
      x-stackQL-method: delete_account
      x-stackQL-verb: exec
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty_recaptcha_param
      x-stackQL-method: get_recaptcha_param
      x-stackQL-verb: select
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: send_verification_code
      x-stackQL-verb: exec
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty_account_info
      x-stackQL-method: get_account_info
      x-stackQL-verb: exec
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty_auth_uri
      x-stackQL-method: create_auth_uri
      x-stackQL-verb: insert
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty_oob_confirmation_code
      x-stackQL-method: get_oob_confirmation_code
      x-stackQL-verb: exec
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: signup_new_user
      x-stackQL-verb: exec
