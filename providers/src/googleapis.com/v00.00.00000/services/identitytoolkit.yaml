openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-08-01'
externalDocs:
  url: 'https://developers.google.com/identity-toolkit/v3/'
servers:
  - url: 'https://www.googleapis.com/identitytoolkit/v3/relyingparty'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
            'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      description: Request to get the account information.
      properties:
        phoneNumber:
          description: Privileged caller can query users by specified phone number.
          type: array
          items:
            type: string
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        localId:
          type: array
          items:
            type: string
          description: The list of local ID's of the users to inquiry.
        email:
          description: The list of emails of the users to inquiry.
          items:
            type: string
          type: array
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
      type: object
    SetAccountInfoResponse:
      type: object
      id: SetAccountInfoResponse
      description: Respone of setting the account information.
      properties:
        displayName:
          description: The name of the user.
          type: string
        newEmail:
          description: The new email the user attempts to change to.
          type: string
        expiresIn:
          type: string
          format: int64
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        kind:
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
          type: string
          default: identitytoolkit#SetAccountInfoResponse
        providerUserInfo:
          type: array
          items:
            properties:
              federatedId:
                type: string
                description: User's identifier at IDP.
              providerId:
                type: string
                description: 'The IdP ID. For whitelisted IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
              displayName:
                type: string
                description: The user's display name at the IDP.
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
            type: object
          description: The user's profiles at the associated IdPs.
        email:
          type: string
          description: The email of the user.
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        localId:
          type: string
          description: The local ID of the user.
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        passwordHash:
          description: The user's hashed password.
          type: string
          format: byte
        photoUrl:
          description: The photo url of the user.
          type: string
        emailVerified:
          type: boolean
          description: If email has been verified.
    DeleteAccountResponse:
      type: object
      description: Respone of deleting account.
      properties:
        kind:
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
          type: string
          default: identitytoolkit#DeleteAccountResponse
      id: DeleteAccountResponse
    DownloadAccountResponse:
      type: object
      id: DownloadAccountResponse
      description: Response of downloading accounts in batch.
      properties:
        kind:
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
          default: identitytoolkit#DownloadAccountResponse
          type: string
        users:
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
          description: The user accounts data.
        nextPageToken:
          type: string
          description: The next page token. To be used in a subsequent request to return the next page of results.
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      description: Respone of getting public keys.
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
      type: object
      additionalProperties:
        type: string
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
      properties:
        oobCode:
          type: string
          description: The confirmation code.
        oldPassword:
          type: string
          description: The old password inputted by the user.
        newPassword:
          type: string
          description: The new password inputted by the user.
        email:
          type: string
          description: The email address of the user.
      type: object
      description: Request to reset the password.
    GetOobConfirmationCodeResponse:
      id: GetOobConfirmationCodeResponse
      type: object
      description: 'Response of getting a code for user confirmation (reset password, change email etc.).'
      properties:
        oobCode:
          type: string
          description: The code to be send to the user.
        kind:
          type: string
          default: identitytoolkit#GetOobConfirmationCodeResponse
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
        email:
          description: The email address that the email is sent to.
          type: string
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
      properties:
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        verifyEmailTemplate:
          description: Verify email template.
          $ref: '#/components/schemas/EmailTemplate'
        enableAnonymousUser:
          description: Whether to enable anonymous user.
          type: boolean
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        apiKey:
          description: 'Browser API key, needed when making http request to Apiary.'
          type: string
        resetPasswordTemplate:
          description: Reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        idpConfig:
          type: array
          items:
            $ref: '#/components/schemas/IdpConfig'
          description: Oauth2 provider configuration.
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        authorizedDomains:
          items:
            type: string
          type: array
          description: Authorized domains for widget redirect.
      type: object
      description: Request to set the project configuration.
    GetRecaptchaParamResponse:
      type: object
      id: GetRecaptchaParamResponse
      description: Response of getting recaptcha param.
      properties:
        kind:
          default: identitytoolkit#GetRecaptchaParamResponse
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          type: string
        recaptchaStoken:
          description: 'The stoken field for the recaptcha widget, used to request captcha challenge.'
          type: string
        recaptchaSiteKey:
          description: Site key registered at recaptcha.
          type: string
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      properties:
        verificationProof:
          type: string
        idToken:
          type: string
        operation:
          type: string
        temporaryProof:
          type: string
        code:
          type: string
        phoneNumber:
          type: string
        sessionInfo:
          type: string
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
      description: Request for Identitytoolkit-VerifyPhoneNumber
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      type: object
    VerifyCustomTokenResponse:
      id: VerifyCustomTokenResponse
      description: Response from verifying a custom token
      properties:
        expiresIn:
          format: int64
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          type: string
        kind:
          default: identitytoolkit#VerifyCustomTokenResponse
          type: string
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
      type: object
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      properties:
        sessionInfo:
          description: Encrypted session information
          type: string
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      type: object
      description: Response for Identitytoolkit-SendVerificationCode
    SignupNewUserResponse:
      id: SignupNewUserResponse
      properties:
        displayName:
          description: The name of the user.
          type: string
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        localId:
          type: string
          description: The RP local ID of the user.
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          type: string
          format: int64
        kind:
          type: string
          default: identitytoolkit#SignupNewUserResponse
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
        email:
          description: The email of the user.
          type: string
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
      description: 'Response of signing up new user, creating anonymous user or anonymous user reauth.'
      type: object
    UserInfo:
      id: UserInfo
      description: Template for an individual account info.
      properties:
        phoneNumber:
          type: string
          description: User's phone number.
        passwordHash:
          type: string
          description: The user's hashed password.
          format: byte
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        screenName:
          description: User's screen name at Twitter or login name at Github.
          type: string
        lastLoginAt:
          format: int64
          type: string
          description: last login timestamp.
        photoUrl:
          description: The URL of the user profile photo.
          type: string
        email:
          type: string
          description: The email of the user.
        rawPassword:
          type: string
          description: The user's plain text password.
        validSince:
          format: int64
          description: Timestamp in seconds for valid login token.
          type: string
        localId:
          type: string
          description: The local ID of the user.
        disabled:
          description: Whether the user is disabled.
          type: boolean
        salt:
          format: byte
          description: The user's password salt.
          type: string
        createdAt:
          description: User creation timestamp.
          format: int64
          type: string
        providerUserInfo:
          type: array
          description: The IDP of the user.
          items:
            properties:
              displayName:
                type: string
                description: The user's display name at the IDP.
              screenName:
                description: User's screen name at Twitter or login name at Github.
                type: string
              phoneNumber:
                type: string
                description: User's phone number.
              rawId:
                type: string
                description: User's raw identifier directly returned from IDP.
              email:
                type: string
                description: User's email at IDP.
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
              providerId:
                description: 'The IdP ID. For white listed IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
                type: string
              federatedId:
                description: User's identifier at IDP.
                type: string
            type: object
        emailVerified:
          description: Whether the email has been verified.
          type: boolean
        customAuth:
          type: boolean
          description: Whether the user is authenticated by the developer.
        passwordUpdatedAt:
          description: The timestamp when the password was last updated.
          format: double
          type: number
        displayName:
          description: The name of the user.
          type: string
        version:
          type: integer
          format: int32
          description: Version of the user's password.
      type: object
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
      properties:
        deleteProvider:
          items:
            type: string
          description: The IDPs the user request to delete.
          type: array
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        captchaChallenge:
          type: string
          description: The captcha challenge.
        captchaResponse:
          description: Response to the captcha.
          type: string
        password:
          description: The new password of the user.
          type: string
        emailVerified:
          type: boolean
          description: Mark the email as verified or not.
        email:
          description: The email of the user.
          type: string
        validSince:
          format: int64
          description: Timestamp in seconds for valid login token.
          type: string
        upgradeToFederatedLogin:
          description: Mark the user to upgrade to federated login.
          type: boolean
        lastLoginAt:
          description: Last login timestamp.
          format: int64
          type: string
        localId:
          description: The local ID of the user.
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
        provider:
          description: The associated IDPs of the user.
          items:
            type: string
          type: array
        displayName:
          type: string
          description: The name of the user.
        oobCode:
          type: string
          description: The out-of-band code of the change email request.
        deleteAttribute:
          description: The attributes users request to delete.
          type: array
          items:
            type: string
        photoUrl:
          description: The photo url of the user.
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        phoneNumber:
          type: string
          description: Privileged caller can update user with specified phone number.
        createdAt:
          format: int64
          type: string
          description: The timestamp when the account is created.
        disableUser:
          description: Whether to disable the user.
          type: boolean
      type: object
      description: Request to set the account information.
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      description: Response of getting the project configuration.
      type: object
      properties:
        dynamicLinksDomain:
          type: string
        verifyEmailTemplate:
          description: Verify email template.
          $ref: '#/components/schemas/EmailTemplate'
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          type: boolean
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        idpConfig:
          items:
            $ref: '#/components/schemas/IdpConfig'
          description: OAuth2 provider configuration.
          type: array
        apiKey:
          type: string
          description: 'Browser API key, needed when making http request to Apiary.'
        projectId:
          type: string
          description: Project ID of the relying party.
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        enableAnonymousUser:
          type: boolean
          description: Whether anonymous user is enabled.
        authorizedDomains:
          items:
            type: string
          description: Authorized domains.
          type: array
    GetAccountInfoResponse:
      properties:
        kind:
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          default: identitytoolkit#GetAccountInfoResponse
          type: string
        users:
          type: array
          description: The info of the users.
          items:
            $ref: '#/components/schemas/UserInfo'
      id: GetAccountInfoResponse
      type: object
      description: Response of getting account information.
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      type: object
      properties:
        projectId:
          description: Project ID of the relying party.
          type: string
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      description: Response of setting the project configuration.
    EmailLinkSigninResponse:
      description: Response of email signIn.
      id: EmailLinkSigninResponse
      properties:
        refreshToken:
          description: The refresh token for the signed in user.
          type: string
        localId:
          description: The RP local ID of the user.
          type: string
        email:
          type: string
          description: The user's email.
        isNewUser:
          type: boolean
          description: Whether the user is new.
        idToken:
          description: The STS id token to login the newly signed in user.
          type: string
        kind:
          type: string
          default: identitytoolkit#EmailLinkSigninResponse
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
        expiresIn:
          description: Expiration time of STS id token in seconds.
          format: int64
          type: string
      type: object
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      properties:
        displayName:
          description: The name of the user.
          type: string
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        email:
          description: The email of the user.
          type: string
        phoneNumber:
          type: string
          description: Privileged caller can create user with specified phone number.
        captchaResponse:
          description: Response to the captcha.
          type: string
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        emailVerified:
          description: Mark the email as verified or not. Only can be used by service account.
          type: boolean
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        photoUrl:
          description: The photo url of the user.
          type: string
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        password:
          type: string
          description: The new password of the user.
        disabled:
          type: boolean
          description: Whether to disable the user. Only can be used by service account.
        instanceId:
          type: string
          description: Instance id token of the app.
        captchaChallenge:
          type: string
          description: The captcha challenge.
      type: object
      description: 'Request to signup new user, create anonymous user or anonymous user reauth.'
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      type: object
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      description: Request to sign in with email.
      properties:
        idToken:
          description: Token for linking flow.
          type: string
        email:
          type: string
          description: The email address of the user.
        oobCode:
          type: string
          description: The confirmation code.
    UploadAccountResponse:
      id: UploadAccountResponse
      properties:
        kind:
          description: The fixed string "identitytoolkit#UploadAccountResponse".
          default: identitytoolkit#UploadAccountResponse
          type: string
        error:
          items:
            properties:
              message:
                description: Detailed error message for the account info.
                type: string
              index:
                description: 'The index of the malformed account, starting from 0.'
                type: integer
                format: int32
            type: object
          description: The error encountered while processing the account info.
          type: array
      type: object
      description: Respone of uploading accounts in batch.
    IdentitytoolkitRelyingpartySignOutUserRequest:
      properties:
        localId:
          type: string
          description: The local ID of the user.
        instanceId:
          type: string
          description: Instance id token of the app.
      description: Request to sign out user.
      type: object
      id: IdentitytoolkitRelyingpartySignOutUserRequest
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
      description: Request to upload user account in batch.
      type: object
      properties:
        rounds:
          type: integer
          format: int32
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
        memoryCost:
          type: integer
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
          format: int32
        signerKey:
          description: The key for to hash the password.
          format: byte
          type: string
        targetProjectId:
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
          type: string
        parallelization:
          type: integer
          format: int32
        hashAlgorithm:
          type: string
          description: The password hash algorithm.
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        saltSeparator:
          description: The salt separator.
          type: string
          format: byte
        cpuMemCost:
          format: int32
          description: The following 4 fields are for standard scrypt algorithm.
          type: integer
        sanityCheck:
          description: 'If true, backend will do sanity check(including duplicate email and federated id) when uploading account.'
          type: boolean
        users:
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
          description: The account info to be stored.
        blockSize:
          type: integer
          format: int32
        dkLen:
          type: integer
          format: int32
        allowOverwrite:
          type: boolean
          description: Whether allow overwrite existing account when user local_id exists.
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      properties:
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        token:
          description: The custom token to verify
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
      description: Request to verify a custom token
      type: object
    Relyingparty:
      type: object
      id: Relyingparty
      description: 'Request of getting a code for user confirmation (reset password, change email etc.)'
      properties:
        newEmail:
          type: string
          description: The new email if the code is for email change.
        androidPackageName:
          type: string
          description: android package name of the android app to handle the action code
        iOSAppStoreId:
          type: string
          description: iOS app store id to download the app if it's not already installed
        continueUrl:
          description: The url to continue to the Gitkit app
          type: string
        idToken:
          type: string
          description: The user's Gitkit login token for email change.
        userIp:
          type: string
          description: The IP address of the user.
        captchaResp:
          description: The recaptcha response from the user.
          type: string
        challenge:
          description: The recaptcha challenge presented to the user.
          type: string
        kind:
          description: The fixed string "identitytoolkit#relyingparty".
          default: identitytoolkit#relyingparty
          type: string
        androidMinimumVersion:
          description: minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
          type: string
        requestType:
          type: string
          description: The request type.
        canHandleCodeInApp:
          type: boolean
          description: whether or not the app can handle the oob code without first going to web
        iOSBundleId:
          type: string
          description: the iOS bundle id of iOS app to handle the action code
        email:
          type: string
          description: The email of the user.
        androidInstallApp:
          type: boolean
          description: whether or not to install the android app on the device where the link is opened
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      description: Response for Identitytoolkit-VerifyPhoneNumber
      type: object
      properties:
        temporaryProofExpiresIn:
          type: string
          format: int64
        phoneNumber:
          type: string
        expiresIn:
          type: string
          format: int64
        verificationProofExpiresIn:
          format: int64
          type: string
        refreshToken:
          type: string
        isNewUser:
          type: boolean
        temporaryProof:
          type: string
        verificationProof:
          type: string
        localId:
          type: string
        idToken:
          type: string
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
    EmailTemplate:
      properties:
        replyTo:
          description: Reply-to address.
          type: string
        format:
          type: string
          description: Email body format.
        from:
          description: From address of the email.
          type: string
        body:
          type: string
          description: Email body.
        subject:
          description: Subject of the email.
          type: string
        fromDisplayName:
          description: From display name.
          type: string
      type: object
      description: Template for an email template.
      id: EmailTemplate
    VerifyAssertionResponse:
      properties:
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        oauthAuthorizationCode:
          description: The OAuth2 authorization code.
          type: string
        federatedId:
          description: The unique ID identifies the IdP account.
          type: string
        isNewUser:
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
          type: boolean
        inputEmail:
          description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
          type: string
        language:
          description: The language preference of the user.
          type: string
        timeZone:
          description: The timezone of the user.
          type: string
        verifiedProvider:
          items:
            type: string
          description: 'When action is ''map'', contains the idps which can be used for confirmation.'
          type: array
        firstName:
          type: string
          description: The first name of the user.
        needConfirmation:
          type: boolean
          description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
        oauthIdToken:
          description: The OIDC id token.
          type: string
        fullName:
          type: string
          description: The full name of the user.
        oauthScope:
          description: The scope for the OpenID OAuth extension.
          type: string
        appScheme:
          type: string
          description: The custom scheme used by mobile app.
        displayName:
          description: The display name of the user.
          type: string
        localId:
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
          type: string
        oauthExpireIn:
          format: int32
          description: The lifetime in seconds of the OAuth2 access token.
          type: integer
        screenName:
          type: string
          description: The screen_name of a Twitter user or the login name at Github.
        oauthRequestToken:
          description: The user approved request token for the OpenID OAuth extension.
          type: string
        emailVerified:
          type: boolean
          description: The value is true if the IDP is also the email provider. It means the user owns the email.
        appInstallationUrl:
          description: URL for OTA app installation.
          type: string
        photoUrl:
          type: string
          description: The URI of the public accessible profiel picture.
        nickName:
          description: The nick name of the user.
          type: string
        providerId:
          type: string
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.'
        originalEmail:
          type: string
          description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
        action:
          description: The action code.
          type: string
        kind:
          type: string
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          default: identitytoolkit#VerifyAssertionResponse
        context:
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
          type: string
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        rawUserInfo:
          description: Raw IDP-returned user info.
          type: string
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
        dateOfBirth:
          description: The birth date of the IdP account.
          type: string
        oauthTokenSecret:
          type: string
          description: The OAuth1 access token secret.
        idToken:
          type: string
          description: The ID token.
        errorMessage:
          description: Client error code.
          type: string
        lastName:
          type: string
          description: The last name of the user.
        needEmail:
          type: boolean
          description: Whether need client to supply email to complete the federated login flow.
        emailRecycled:
          description: It's true if the email is recycled.
          type: boolean
      id: VerifyAssertionResponse
      type: object
      description: Response of verifying the IDP assertion.
    CreateAuthUriResponse:
      type: object
      description: Response of creating the IDP authentication URL.
      id: CreateAuthUriResponse
      properties:
        registered:
          type: boolean
          description: Whether the user is registered if the identifier is an email.
        signinMethods:
          items:
            type: string
          description: All sign-in methods this user has used.
          type: array
        kind:
          default: identitytoolkit#CreateAuthUriResponse
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          type: string
        sessionId:
          type: string
          description: Session ID which should be passed in the following verifyAssertion request.
        providerId:
          description: The provider ID of the auth URI.
          type: string
        allProviders:
          items:
            type: string
          type: array
          description: all providers the user has once used to do federated login
        captchaRequired:
          description: True if captcha is required.
          type: boolean
        forExistingProvider:
          type: boolean
          description: True if the authUri is for user's existing provider.
        authUri:
          type: string
          description: The URI used by the IDP to authenticate the user.
    VerifyPasswordResponse:
      properties:
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        kind:
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
          type: string
          default: identitytoolkit#VerifyPasswordResponse
        displayName:
          description: The name of the user.
          type: string
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        oauthExpireIn:
          type: integer
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
        registered:
          description: Whether the email is registered.
          type: boolean
        photoUrl:
          description: The URI of the user's photo at IdP
          type: string
        oauthAccessToken:
          description: The OAuth2 access token.
          type: string
        localId:
          type: string
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        email:
          type: string
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
      description: Request of verifying the password.
      id: VerifyPasswordResponse
      type: object
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      properties:
        recaptchaToken:
          type: string
          description: Recaptcha solution.
        iosReceipt:
          type: string
          description: Receipt of successful app token validation with APNS.
        iosSecret:
          type: string
          description: Secret delivered to iOS app via APNS.
        phoneNumber:
          type: string
          description: The phone number to send the verification code to in E.164 format.
      description: Request for Identitytoolkit-SendVerificationCode
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      description: Request to verify the IDP assertion.
      properties:
        returnRefreshToken:
          type: boolean
          description: Whether to return refresh tokens.
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        requestUri:
          type: string
          description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
        autoCreate:
          description: 'When it''s true, automatically creates a new account if the user doesn''t exist. When it''s false, allows existing user to sign in normally and throws exception if the user doesn''t exist.'
          type: boolean
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        sessionId:
          type: string
          description: 'Session ID, which should match the one in previous createAuthUri request.'
        pendingIdToken:
          description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
          type: string
        returnIdpCredential:
          type: boolean
          description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        postBody:
          description: The post body if the request is a HTTP POST.
          type: string
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          type: string
          format: uint64
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
      type: object
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      properties:
        nextPageToken:
          type: string
          description: The token for the next page. This should be taken from the previous response.
        targetProjectId:
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
          type: string
        maxResults:
          description: The max number of results to return in the response.
          format: uint32
          type: integer
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
      type: object
      description: Request to download user account in batch.
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      type: object
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
      description: Request to get the IDP authentication URL.
      properties:
        sessionId:
          description: The session_id passed by client.
          type: string
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
        oauthConsumerKey:
          type: string
          description: The developer's consumer key for OpenId OAuth Extension
        hostedDomain:
          description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
          type: string
        continueUri:
          description: The URI to which the IDP redirects the user after the federated login flow.
          type: string
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        clientId:
          description: The relying party OAuth client ID.
          type: string
        customParameter:
          additionalProperties:
            type: string
            description: The customized query parameter.
          description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
          type: object
        identifier:
          type: string
          description: The email or federated ID of the user.
        oauthScope:
          description: 'Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant'
          type: string
        openidRealm:
          type: string
          description: 'Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.'
        appId:
          type: string
          description: 'The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.'
        providerId:
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
          type: string
        otaApp:
          description: The native app package for OTA installation.
          type: string
        authFlowType:
          type: string
          description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      properties:
        idToken:
          type: string
          description: The GITKit token or STS id token of the authenticated user.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        localId:
          type: string
          description: The local ID of the user.
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
      type: object
      description: Request to delete account.
    IdpConfig:
      id: IdpConfig
      description: Template for a single idp configuration.
      properties:
        clientId:
          description: OAuth2 client ID.
          type: string
        enabled:
          type: boolean
          description: Whether this IDP is enabled.
        provider:
          type: string
          description: OAuth2 provider.
        experimentPercent:
          type: integer
          description: Percent of users who will be prompted/redirected federated login for this IDP.
          format: int32
        whitelistedAudiences:
          type: array
          items:
            type: string
          description: Whitelisted client IDs for audience check.
        secret:
          type: string
          description: OAuth2 client secret.
      type: object
    IdentitytoolkitRelyingpartySignOutUserResponse:
      description: Response of signing out user.
      properties:
        localId:
          description: The local ID of the user.
          type: string
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      type: object
    ResetPasswordResponse:
      description: Response of resetting the password.
      id: ResetPasswordResponse
      properties:
        kind:
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          default: identitytoolkit#ResetPasswordResponse
          type: string
        newEmail:
          description: 'If the out-of-band code is for email recovery, the user''s new email.'
          type: string
        email:
          description: 'The user''s email. If the out-of-band code is for email recovery, the user''s original email.'
          type: string
        requestType:
          description: The request type.
          type: string
      type: object
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      description: Request to verify the password.
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
      properties:
        pendingIdToken:
          description: 'The GITKit token for the non-trusted IDP, which is to be confirmed by the user.'
          type: string
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        captchaChallenge:
          description: The captcha challenge.
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
        password:
          description: The password inputed by the user.
          type: string
        tenantProjectNumber:
          format: uint64
          type: string
          description: Tenant project number to be used for idp discovery.
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        email:
          description: The email of the user.
          type: string
        captchaResponse:
          type: string
          description: Response to the captcha.
      type: object
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
  x-stackQL-resources:
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        send_verification_code:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_phone_number:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_assertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        email_link_signin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_account:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_password:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_project_config:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_account_info:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_custom_token:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_account:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signup_new_user:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_out_user:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_oob_confirmation_code:
      id: google.identitytoolkit.relyingparty_oob_confirmation_code
      name: relyingparty_oob_confirmation_code
      title: Relyingparty Oob Confirmation Code
      methods:
        get_oob_confirmation_code:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_recaptcha_param:
      id: google.identitytoolkit.relyingparty_recaptcha_param
      name: relyingparty_recaptcha_param
      title: Relyingparty Recaptcha Param
      methods:
        get_recaptcha_param:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_recaptcha_param/methods/get_recaptcha_param'
        insert: []
        update: []
        delete: []
    relyingparty_project_config:
      id: google.identitytoolkit.relyingparty_project_config
      name: relyingparty_project_config
      title: Relyingparty Project Config
      methods:
        get_project_config:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_project_config/methods/get_project_config'
        insert: []
        update: []
        delete: []
    relyingparty_account:
      id: google.identitytoolkit.relyingparty_account
      name: relyingparty_account
      title: Relyingparty Account
      methods:
        delete_account:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_auth_uri:
      id: google.identitytoolkit.relyingparty_auth_uri
      name: relyingparty_auth_uri
      title: Relyingparty Auth Uri
      methods:
        create_auth_uri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/relyingparty_auth_uri/methods/create_auth_uri'
        update: []
        delete: []
    relyingparty_account_info:
      id: google.identitytoolkit.relyingparty_account_info
      name: relyingparty_account_info
      title: Relyingparty Account Info
      methods:
        get_account_info:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_public_keys:
      id: google.identitytoolkit.relyingparty_public_keys
      name: relyingparty_public_keys
      title: Relyingparty Public Keys
      methods:
        get_public_keys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /sendVerificationCode:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: send_verification_code
      x-stackQL-verb: exec
  /verifyPhoneNumber:
    parameters: *ref_1
    post:
      description: Verifies ownership of a phone number and creates/updates the user account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_phone_number
      x-stackQL-verb: exec
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_assertion
      x-stackQL-verb: exec
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: reset_password
      x-stackQL-verb: exec
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: email_link_signin
      x-stackQL-verb: exec
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: download_account
      x-stackQL-verb: exec
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty_oob_confirmation_code
      x-stackQL-method: get_oob_confirmation_code
      x-stackQL-verb: exec
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_password
      x-stackQL-verb: exec
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_project_config
      x-stackQL-verb: exec
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty_recaptcha_param
      x-stackQL-method: get_recaptcha_param
      x-stackQL-verb: select
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_account_info
      x-stackQL-verb: exec
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_custom_token
      x-stackQL-verb: exec
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
      parameters:
        - in: query
          name: projectNumber
          schema:
            type: string
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty_project_config
      x-stackQL-method: get_project_config
      x-stackQL-verb: select
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: upload_account
      x-stackQL-verb: exec
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: signup_new_user
      x-stackQL-verb: exec
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty_account
      x-stackQL-method: delete_account
      x-stackQL-verb: exec
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty_auth_uri
      x-stackQL-method: create_auth_uri
      x-stackQL-verb: insert
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty_account_info
      x-stackQL-method: get_account_info
      x-stackQL-verb: exec
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: sign_out_user
      x-stackQL-verb: exec
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
      x-stackQL-resource: relyingparty_public_keys
      x-stackQL-method: get_public_keys
      x-stackQL-verb: exec
