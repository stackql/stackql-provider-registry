openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/identity-toolkit/v3/
servers:
  - url: https://www.googleapis.com/identitytoolkit/v3/relyingparty
components:
  schemas:
    VerifyAssertionResponse:
      properties:
        oauthScope:
          type: string
          description: The scope for the OpenID OAuth extension.
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        emailVerified:
          description: The value is true if the IDP is also the email provider. It means the user owns the email.
          type: boolean
        isNewUser:
          type: boolean
          description: True if it's a new user sign-in, false if it's a returning user.
        providerId:
          description: The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.
          type: string
        federatedId:
          description: The unique ID identifies the IdP account.
          type: string
        rawUserInfo:
          type: string
          description: Raw IDP-returned user info.
        email:
          type: string
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
        displayName:
          type: string
          description: The display name of the user.
        inputEmail:
          type: string
          description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
        fullName:
          type: string
          description: The full name of the user.
        verifiedProvider:
          description: When action is 'map', contains the idps which can be used for confirmation.
          type: array
          items:
            type: string
        appScheme:
          description: The custom scheme used by mobile app.
          type: string
        oauthTokenSecret:
          description: The OAuth1 access token secret.
          type: string
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        emailRecycled:
          type: boolean
          description: It's true if the email is recycled.
        timeZone:
          description: The timezone of the user.
          type: string
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        localId:
          type: string
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        idToken:
          description: The ID token.
          type: string
        appInstallationUrl:
          description: URL for OTA app installation.
          type: string
        expiresIn:
          format: int64
          type: string
          description: If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
        needConfirmation:
          description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
          type: boolean
        dateOfBirth:
          type: string
          description: The birth date of the IdP account.
        needEmail:
          description: Whether need client to supply email to complete the federated login flow.
          type: boolean
        nickName:
          type: string
          description: The nick name of the user.
        action:
          type: string
          description: The action code.
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
          type: integer
        kind:
          default: identitytoolkit#VerifyAssertionResponse
          type: string
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
        language:
          type: string
          description: The language preference of the user.
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        oauthRequestToken:
          type: string
          description: The user approved request token for the OpenID OAuth extension.
        screenName:
          description: The screen_name of a Twitter user or the login name at Github.
          type: string
        errorMessage:
          type: string
          description: Client error code.
        lastName:
          description: The last name of the user.
          type: string
        oauthIdToken:
          type: string
          description: The OIDC id token.
        photoUrl:
          description: The URI of the public accessible profiel picture.
          type: string
        firstName:
          type: string
          description: The first name of the user.
        originalEmail:
          type: string
          description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
      type: object
      id: VerifyAssertionResponse
      description: Response of verifying the IDP assertion.
    VerifyPasswordResponse:
      description: Request of verifying the password.
      properties:
        kind:
          type: string
          default: identitytoolkit#VerifyPasswordResponse
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
        localId:
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
          type: string
        registered:
          description: Whether the email is registered.
          type: boolean
        oauthAuthorizationCode:
          description: The OAuth2 authorization code.
          type: string
        oauthAccessToken:
          description: The OAuth2 access token.
          type: string
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        displayName:
          description: The name of the user.
          type: string
        expiresIn:
          format: int64
          description: If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
          type: string
        oauthExpireIn:
          format: int32
          type: integer
          description: The lifetime in seconds of the OAuth2 access token.
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        refreshToken:
          type: string
          description: If idToken is STS id token, then this field will be refresh token.
        photoUrl:
          type: string
          description: The URI of the user's photo at IdP
      type: object
      id: VerifyPasswordResponse
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      description: Response of setting the project configuration.
      type: object
      properties:
        projectId:
          type: string
          description: Project ID of the relying party.
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      properties:
        maxResults:
          format: uint32
          type: integer
          description: The max number of results to return in the response.
        targetProjectId:
          type: string
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
        nextPageToken:
          description: The token for the next page. This should be taken from the previous response.
          type: string
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
      type: object
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
      description: Request to download user account in batch.
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
      type: object
      properties:
        blockSize:
          type: integer
          format: int32
        memoryCost:
          format: int32
          type: integer
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
        parallelization:
          type: integer
          format: int32
        dkLen:
          format: int32
          type: integer
        allowOverwrite:
          type: boolean
          description: Whether allow overwrite existing account when user local_id exists.
        targetProjectId:
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
          type: string
        saltSeparator:
          description: The salt separator.
          type: string
          format: byte
        signerKey:
          description: The key for to hash the password.
          type: string
          format: byte
        rounds:
          format: int32
          type: integer
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        sanityCheck:
          type: boolean
          description: If true, backend will do sanity check(including duplicate email and federated id) when uploading account.
        cpuMemCost:
          format: int32
          description: The following 4 fields are for standard scrypt algorithm.
          type: integer
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The account info to be stored.
        hashAlgorithm:
          description: The password hash algorithm.
          type: string
      description: Request to upload user account in batch.
    UploadAccountResponse:
      id: UploadAccountResponse
      description: Respone of uploading accounts in batch.
      type: object
      properties:
        kind:
          type: string
          default: identitytoolkit#UploadAccountResponse
          description: The fixed string "identitytoolkit#UploadAccountResponse".
        error:
          type: array
          items:
            properties:
              message:
                type: string
                description: Detailed error message for the account info.
              index:
                type: integer
                format: int32
                description: The index of the malformed account, starting from 0.
            type: object
          description: The error encountered while processing the account info.
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      description: Request to delete account.
      type: object
      properties:
        idToken:
          type: string
          description: The GITKit token or STS id token of the authenticated user.
        localId:
          description: The local ID of the user.
          type: string
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
          format: int64
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
    Relyingparty:
      type: object
      description: Request of getting a code for user confirmation (reset password, change email etc.)
      properties:
        newEmail:
          type: string
          description: The new email if the code is for email change.
        idToken:
          description: The user's Gitkit login token for email change.
          type: string
        requestType:
          type: string
          description: The request type.
        iOSAppStoreId:
          type: string
          description: iOS app store id to download the app if it's not already installed
        email:
          description: The email of the user.
          type: string
        androidInstallApp:
          description: whether or not to install the android app on the device where the link is opened
          type: boolean
        androidPackageName:
          type: string
          description: android package name of the android app to handle the action code
        userIp:
          description: The IP address of the user.
          type: string
        androidMinimumVersion:
          type: string
          description: minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
        iOSBundleId:
          type: string
          description: the iOS bundle id of iOS app to handle the action code
        captchaResp:
          description: The recaptcha response from the user.
          type: string
        continueUrl:
          description: The url to continue to the Gitkit app
          type: string
        kind:
          description: The fixed string "identitytoolkit#relyingparty".
          default: identitytoolkit#relyingparty
          type: string
        challenge:
          description: The recaptcha challenge presented to the user.
          type: string
        canHandleCodeInApp:
          type: boolean
          description: whether or not the app can handle the oob code without first going to web
      id: Relyingparty
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      description: Request to set the project configuration.
      type: object
      properties:
        enableAnonymousUser:
          type: boolean
          description: Whether to enable anonymous user.
        idpConfig:
          type: array
          description: Oauth2 provider configuration.
          items:
            $ref: '#/components/schemas/IdpConfig'
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        apiKey:
          description: Browser API key, needed when making http request to Apiary.
          type: string
        authorizedDomains:
          items:
            type: string
          type: array
          description: Authorized domains for widget redirect.
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
    UserInfo:
      description: Template for an individual account info.
      id: UserInfo
      properties:
        localId:
          description: The local ID of the user.
          type: string
        emailVerified:
          description: Whether the email has been verified.
          type: boolean
        passwordUpdatedAt:
          format: double
          description: The timestamp when the password was last updated.
          type: number
        version:
          description: Version of the user's password.
          format: int32
          type: integer
        passwordHash:
          format: byte
          type: string
          description: The user's hashed password.
        email:
          type: string
          description: The email of the user.
        validSince:
          description: Timestamp in seconds for valid login token.
          type: string
          format: int64
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        photoUrl:
          type: string
          description: The URL of the user profile photo.
        displayName:
          description: The name of the user.
          type: string
        createdAt:
          type: string
          description: User creation timestamp.
          format: int64
        providerUserInfo:
          items:
            properties:
              email:
                type: string
                description: User's email at IDP.
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
              federatedId:
                type: string
                description: User's identifier at IDP.
              phoneNumber:
                type: string
                description: User's phone number.
              displayName:
                description: The user's display name at the IDP.
                type: string
              providerId:
                description: The IdP ID. For white listed IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
                type: string
              screenName:
                type: string
                description: User's screen name at Twitter or login name at Github.
              rawId:
                description: User's raw identifier directly returned from IDP.
                type: string
            type: object
          type: array
          description: The IDP of the user.
        lastLoginAt:
          description: last login timestamp.
          type: string
          format: int64
        salt:
          description: The user's password salt.
          type: string
          format: byte
        rawPassword:
          type: string
          description: The user's plain text password.
        screenName:
          description: User's screen name at Twitter or login name at Github.
          type: string
        customAuth:
          type: boolean
          description: Whether the user is authenticated by the developer.
        disabled:
          description: Whether the user is disabled.
          type: boolean
        phoneNumber:
          description: User's phone number.
          type: string
      type: object
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
      properties:
        newPassword:
          type: string
          description: The new password inputted by the user.
        oldPassword:
          description: The old password inputted by the user.
          type: string
        email:
          type: string
          description: The email address of the user.
        oobCode:
          type: string
          description: The confirmation code.
      description: Request to reset the password.
      type: object
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      type: object
      description: Response for Identitytoolkit-VerifyPhoneNumber
      properties:
        phoneNumber:
          type: string
        localId:
          type: string
        expiresIn:
          format: int64
          type: string
        temporaryProof:
          type: string
        refreshToken:
          type: string
        idToken:
          type: string
        verificationProofExpiresIn:
          type: string
          format: int64
        temporaryProofExpiresIn:
          format: int64
          type: string
        isNewUser:
          type: boolean
        verificationProof:
          type: string
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
    SignupNewUserResponse:
      type: object
      id: SignupNewUserResponse
      description: Response of signing up new user, creating anonymous user or anonymous user reauth.
      properties:
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
        kind:
          type: string
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
          default: identitytoolkit#SignupNewUserResponse
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        email:
          description: The email of the user.
          type: string
        expiresIn:
          type: string
          format: int64
          description: If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
        localId:
          description: The RP local ID of the user.
          type: string
        displayName:
          type: string
          description: The name of the user.
    EmailTemplate:
      type: object
      description: Template for an email template.
      id: EmailTemplate
      properties:
        replyTo:
          description: Reply-to address.
          type: string
        from:
          description: From address of the email.
          type: string
        body:
          type: string
          description: Email body.
        fromDisplayName:
          type: string
          description: From display name.
        subject:
          type: string
          description: Subject of the email.
        format:
          description: Email body format.
          type: string
    CreateAuthUriResponse:
      properties:
        authUri:
          type: string
          description: The URI used by the IDP to authenticate the user.
        forExistingProvider:
          type: boolean
          description: True if the authUri is for user's existing provider.
        signinMethods:
          type: array
          items:
            type: string
          description: All sign-in methods this user has used.
        providerId:
          type: string
          description: The provider ID of the auth URI.
        kind:
          type: string
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          default: identitytoolkit#CreateAuthUriResponse
        registered:
          type: boolean
          description: Whether the user is registered if the identifier is an email.
        captchaRequired:
          type: boolean
          description: True if captcha is required.
        sessionId:
          type: string
          description: Session ID which should be passed in the following verifyAssertion request.
        allProviders:
          description: all providers the user has once used to do federated login
          type: array
          items:
            type: string
      id: CreateAuthUriResponse
      description: Response of creating the IDP authentication URL.
      type: object
    IdpConfig:
      description: Template for a single idp configuration.
      id: IdpConfig
      properties:
        enabled:
          type: boolean
          description: Whether this IDP is enabled.
        secret:
          type: string
          description: OAuth2 client secret.
        whitelistedAudiences:
          items:
            type: string
          type: array
          description: Whitelisted client IDs for audience check.
        clientId:
          type: string
          description: OAuth2 client ID.
        experimentPercent:
          type: integer
          format: int32
          description: Percent of users who will be prompted/redirected federated login for this IDP.
        provider:
          description: OAuth2 provider.
          type: string
      type: object
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      properties:
        projectId:
          type: string
          description: Project ID of the relying party.
        enableAnonymousUser:
          type: boolean
          description: Whether anonymous user is enabled.
        idpConfig:
          items:
            $ref: '#/components/schemas/IdpConfig'
          type: array
          description: OAuth2 provider configuration.
        authorizedDomains:
          items:
            type: string
          type: array
          description: Authorized domains.
        resetPasswordTemplate:
          description: Reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        apiKey:
          type: string
          description: Browser API key, needed when making http request to Apiary.
        allowPasswordUser:
          type: boolean
          description: Whether to allow password user sign in or sign up.
        dynamicLinksDomain:
          type: string
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        legacyResetPasswordTemplate:
          description: Legacy reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
      type: object
      description: Response of getting the project configuration.
    GetRecaptchaParamResponse:
      id: GetRecaptchaParamResponse
      type: object
      description: Response of getting recaptcha param.
      properties:
        kind:
          default: identitytoolkit#GetRecaptchaParamResponse
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          type: string
        recaptchaSiteKey:
          description: Site key registered at recaptcha.
          type: string
        recaptchaStoken:
          description: The stoken field for the recaptcha widget, used to request captcha challenge.
          type: string
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      description: Response for Identitytoolkit-SendVerificationCode
      properties:
        sessionInfo:
          description: Encrypted session information
          type: string
      type: object
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
    DeleteAccountResponse:
      id: DeleteAccountResponse
      description: Respone of deleting account.
      type: object
      properties:
        kind:
          type: string
          default: identitytoolkit#DeleteAccountResponse
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
      properties:
        iosSecret:
          type: string
          description: Secret delivered to iOS app via APNS.
        recaptchaToken:
          type: string
          description: Recaptcha solution.
        iosReceipt:
          type: string
          description: Receipt of successful app token validation with APNS.
        phoneNumber:
          description: The phone number to send the verification code to in E.164 format.
          type: string
      type: object
      description: Request for Identitytoolkit-SendVerificationCode
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      type: object
      properties:
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        requestUri:
          type: string
          description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        pendingIdToken:
          type: string
          description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
        returnRefreshToken:
          description: Whether to return refresh tokens.
          type: boolean
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        returnIdpCredential:
          type: boolean
          description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
        instanceId:
          type: string
          description: Instance id token of the app.
        sessionId:
          type: string
          description: Session ID, which should match the one in previous createAuthUri request.
        autoCreate:
          description: When it's true, automatically creates a new account if the user doesn't exist. When it's false, allows existing user to sign in normally and throws exception if the user doesn't exist.
          type: boolean
        postBody:
          description: The post body if the request is a HTTP POST.
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        tenantId:
          description: For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
          type: string
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
      description: Request to verify the IDP assertion.
    DownloadAccountResponse:
      type: object
      id: DownloadAccountResponse
      description: Response of downloading accounts in batch.
      properties:
        nextPageToken:
          description: The next page token. To be used in a subsequent request to return the next page of results.
          type: string
        users:
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The user accounts data.
          type: array
        kind:
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
          default: identitytoolkit#DownloadAccountResponse
          type: string
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      type: object
      properties:
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        captchaResponse:
          description: Response to the captcha.
          type: string
        phoneNumber:
          description: Privileged caller can create user with specified phone number.
          type: string
        disabled:
          description: Whether to disable the user. Only can be used by service account.
          type: boolean
        tenantProjectNumber:
          format: uint64
          description: Tenant project number to be used for idp discovery.
          type: string
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        tenantId:
          type: string
          description: For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
        email:
          description: The email of the user.
          type: string
        photoUrl:
          description: The photo url of the user.
          type: string
        password:
          description: The new password of the user.
          type: string
        emailVerified:
          type: boolean
          description: Mark the email as verified or not. Only can be used by service account.
        captchaChallenge:
          type: string
          description: The captcha challenge.
        displayName:
          type: string
          description: The name of the user.
        instanceId:
          type: string
          description: Instance id token of the app.
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
      description: Request to signup new user, create anonymous user or anonymous user reauth.
    EmailLinkSigninResponse:
      type: object
      id: EmailLinkSigninResponse
      description: Response of email signIn.
      properties:
        email:
          type: string
          description: The user's email.
        kind:
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          type: string
          default: identitytoolkit#EmailLinkSigninResponse
        isNewUser:
          type: boolean
          description: Whether the user is new.
        idToken:
          description: The STS id token to login the newly signed in user.
          type: string
        localId:
          description: The RP local ID of the user.
          type: string
        refreshToken:
          description: The refresh token for the signed in user.
          type: string
        expiresIn:
          type: string
          description: Expiration time of STS id token in seconds.
          format: int64
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      type: object
      description: Request for Identitytoolkit-VerifyPhoneNumber
      properties:
        verificationProof:
          type: string
        code:
          type: string
        sessionInfo:
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
          type: string
        operation:
          type: string
        idToken:
          type: string
        temporaryProof:
          type: string
        phoneNumber:
          type: string
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      properties:
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        token:
          type: string
          description: The custom token to verify
        instanceId:
          description: Instance id token of the app.
          type: string
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
      description: Request to verify a custom token
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      type: object
    ResetPasswordResponse:
      properties:
        email:
          description: The user's email. If the out-of-band code is for email recovery, the user's original email.
          type: string
        kind:
          default: identitytoolkit#ResetPasswordResponse
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          type: string
        requestType:
          description: The request type.
          type: string
        newEmail:
          type: string
          description: If the out-of-band code is for email recovery, the user's new email.
      id: ResetPasswordResponse
      description: Response of resetting the password.
      type: object
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      description: Request to verify the password.
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
      properties:
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        captchaChallenge:
          type: string
          description: The captcha challenge.
        pendingIdToken:
          type: string
          description: The GITKit token for the non-trusted IDP, which is to be confirmed by the user.
        email:
          description: The email of the user.
          type: string
        captchaResponse:
          type: string
          description: Response to the captcha.
        password:
          type: string
          description: The password inputed by the user.
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        tenantId:
          description: For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
          type: string
      type: object
    SetAccountInfoResponse:
      type: object
      properties:
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        displayName:
          description: The name of the user.
          type: string
        passwordHash:
          type: string
          format: byte
          description: The user's hashed password.
        emailVerified:
          description: If email has been verified.
          type: boolean
        providerUserInfo:
          items:
            properties:
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
              federatedId:
                description: User's identifier at IDP.
                type: string
              providerId:
                type: string
                description: The IdP ID. For whitelisted IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
              displayName:
                type: string
                description: The user's display name at the IDP.
            type: object
          type: array
          description: The user's profiles at the associated IdPs.
        kind:
          type: string
          default: identitytoolkit#SetAccountInfoResponse
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
        localId:
          type: string
          description: The local ID of the user.
        email:
          type: string
          description: The email of the user.
        newEmail:
          description: The new email the user attempts to change to.
          type: string
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
        photoUrl:
          type: string
          description: The photo url of the user.
        expiresIn:
          format: int64
          type: string
          description: If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
      id: SetAccountInfoResponse
      description: Respone of setting the account information.
    GetOobConfirmationCodeResponse:
      type: object
      description: Response of getting a code for user confirmation (reset password, change email etc.).
      id: GetOobConfirmationCodeResponse
      properties:
        oobCode:
          type: string
          description: The code to be send to the user.
        kind:
          default: identitytoolkit#GetOobConfirmationCodeResponse
          type: string
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
        email:
          type: string
          description: The email address that the email is sent to.
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      type: object
      properties:
        idToken:
          description: Token for linking flow.
          type: string
        oobCode:
          description: The confirmation code.
          type: string
        email:
          type: string
          description: The email address of the user.
      description: Request to sign in with email.
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
    VerifyCustomTokenResponse:
      properties:
        refreshToken:
          type: string
          description: If idToken is STS id token, then this field will be refresh token.
        isNewUser:
          type: boolean
          description: True if it's a new user sign-in, false if it's a returning user.
        kind:
          default: identitytoolkit#VerifyCustomTokenResponse
          type: string
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
        idToken:
          type: string
          description: The GITKit token for authenticated user.
        expiresIn:
          description: If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
          format: int64
          type: string
      type: object
      id: VerifyCustomTokenResponse
      description: Response from verifying a custom token
    GetAccountInfoResponse:
      description: Response of getting account information.
      id: GetAccountInfoResponse
      type: object
      properties:
        kind:
          default: identitytoolkit#GetAccountInfoResponse
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          type: string
        users:
          type: array
          description: The info of the users.
          items:
            $ref: '#/components/schemas/UserInfo'
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      type: object
      description: Request to get the IDP authentication URL.
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
      properties:
        sessionId:
          description: The session_id passed by client.
          type: string
        continueUri:
          type: string
          description: The URI to which the IDP redirects the user after the federated login flow.
        providerId:
          type: string
          description: The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
        openidRealm:
          type: string
          description: Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.
        identifier:
          type: string
          description: The email or federated ID of the user.
        oauthScope:
          description: Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant
          type: string
        tenantId:
          description: For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
          type: string
        hostedDomain:
          type: string
          description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
        oauthConsumerKey:
          description: The developer's consumer key for OpenId OAuth Extension
          type: string
        customParameter:
          type: object
          description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
          additionalProperties:
            type: string
            description: The customized query parameter.
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        authFlowType:
          type: string
          description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
        otaApp:
          description: The native app package for OTA installation.
          type: string
        appId:
          type: string
          description: The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.
        clientId:
          type: string
          description: The relying party OAuth client ID.
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
      description: Request to get the account information.
      properties:
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        localId:
          type: array
          items:
            type: string
          description: The list of local ID's of the users to inquiry.
        phoneNumber:
          type: array
          description: Privileged caller can query users by specified phone number.
          items:
            type: string
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        email:
          type: array
          items:
            type: string
          description: The list of emails of the users to inquiry.
      type: object
    IdentitytoolkitRelyingpartySignOutUserRequest:
      type: object
      id: IdentitytoolkitRelyingpartySignOutUserRequest
      properties:
        localId:
          description: The local ID of the user.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
      description: Request to sign out user.
    IdentitytoolkitRelyingpartySignOutUserResponse:
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      type: object
      properties:
        localId:
          description: The local ID of the user.
          type: string
      description: Response of signing out user.
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      description: Respone of getting public keys.
      type: object
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
      additionalProperties:
        type: string
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      properties:
        emailVerified:
          description: Mark the email as verified or not.
          type: boolean
        instanceId:
          description: Instance id token of the app.
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        lastLoginAt:
          description: Last login timestamp.
          format: int64
          type: string
        customAttributes:
          type: string
          description: The custom attributes to be set in the user's id token.
        email:
          description: The email of the user.
          type: string
        deleteProvider:
          items:
            type: string
          description: The IDPs the user request to delete.
          type: array
        disableUser:
          description: Whether to disable the user.
          type: boolean
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        oobCode:
          type: string
          description: The out-of-band code of the change email request.
        validSince:
          description: Timestamp in seconds for valid login token.
          format: int64
          type: string
        provider:
          description: The associated IDPs of the user.
          type: array
          items:
            type: string
        captchaChallenge:
          type: string
          description: The captcha challenge.
        password:
          description: The new password of the user.
          type: string
        displayName:
          description: The name of the user.
          type: string
        createdAt:
          description: The timestamp when the account is created.
          format: int64
          type: string
        deleteAttribute:
          items:
            type: string
          description: The attributes users request to delete.
          type: array
        phoneNumber:
          description: Privileged caller can update user with specified phone number.
          type: string
        localId:
          description: The local ID of the user.
          type: string
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        photoUrl:
          type: string
          description: The photo url of the user.
        captchaResponse:
          description: Response to the captcha.
          type: string
        upgradeToFederatedLogin:
          description: Mark the user to upgrade to federated login.
          type: boolean
      type: object
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
      description: Request to set the account information.
  parameters:
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        emailLinkSignin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        downloadAccount:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resetPassword:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signupNewUser:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verifyCustomToken:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        uploadAccount:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        setProjectConfig:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verifyPhoneNumber:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        setAccountInfo:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signOutUser:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verifyAssertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sendVerificationCode:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verifyPassword:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_public_keys:
      id: google.identitytoolkit.relyingparty_public_keys
      name: relyingparty_public_keys
      title: Relyingparty_public_keys
      methods:
        relyingparty_getPublicKeys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_oob_confirmation_code:
      id: google.identitytoolkit.relyingparty_oob_confirmation_code
      name: relyingparty_oob_confirmation_code
      title: Relyingparty_oob_confirmation_code
      methods:
        relyingparty_getOobConfirmationCode:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_oob_confirmation_code/methods/relyingparty_getOobConfirmationCode'
        insert: []
        update: []
        delete: []
    relyingparty_auth_uri:
      id: google.identitytoolkit.relyingparty_auth_uri
      name: relyingparty_auth_uri
      title: Relyingparty_auth_uri
      methods:
        relyingparty_createAuthUri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/relyingparty_auth_uri/methods/relyingparty_createAuthUri'
        update: []
        delete: []
    relyingparty_account_info:
      id: google.identitytoolkit.relyingparty_account_info
      name: relyingparty_account_info
      title: Relyingparty_account_info
      methods:
        relyingparty_getAccountInfo:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_account_info/methods/relyingparty_getAccountInfo'
        insert: []
        update: []
        delete: []
    relyingparty_recaptcha_param:
      id: google.identitytoolkit.relyingparty_recaptcha_param
      name: relyingparty_recaptcha_param
      title: Relyingparty_recaptcha_param
      methods:
        relyingparty_getRecaptchaParam:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_recaptcha_param/methods/relyingparty_getRecaptchaParam'
        insert: []
        update: []
        delete: []
    relyingparty_project_config:
      id: google.identitytoolkit.relyingparty_project_config
      name: relyingparty_project_config
      title: Relyingparty_project_config
      methods:
        relyingparty_getProjectConfig:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_project_config/methods/relyingparty_getProjectConfig'
        insert: []
        update: []
        delete: []
    relyingparty_account:
      id: google.identitytoolkit.relyingparty_account
      name: relyingparty_account
      title: Relyingparty_account
      methods:
        relyingparty_deleteAccount:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/relyingparty_account/methods/relyingparty_deleteAccount'
paths:
  /emailLinkSignin:
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/fields'
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
      x-stackQL-resource: relyingparty_public_keys
      x-stackQL-verb: exec
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty_oob_confirmation_code
      x-stackQL-verb: select
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /verifyPhoneNumber:
    parameters: *ref_1
    post:
      description: Verifies ownership of a phone number and creates/updates the user account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty_auth_uri
      x-stackQL-verb: insert
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty_account_info
      x-stackQL-verb: select
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty_recaptcha_param
      x-stackQL-verb: select
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
      parameters:
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
        - in: query
          name: projectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty_project_config
      x-stackQL-verb: select
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty_account
      x-stackQL-verb: delete
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
