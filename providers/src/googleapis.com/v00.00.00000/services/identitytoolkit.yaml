openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://developers.google.com/identity-toolkit/v3/'
servers:
  - url: 'https://www.googleapis.com/identitytoolkit/v3/relyingparty'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
            'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GetOobConfirmationCodeResponse:
      type: object
      id: GetOobConfirmationCodeResponse
      properties:
        oobCode:
          description: The code to be send to the user.
          type: string
        kind:
          type: string
          default: identitytoolkit#GetOobConfirmationCodeResponse
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
        email:
          type: string
          description: The email address that the email is sent to.
      description: 'Response of getting a code for user confirmation (reset password, change email etc.).'
    UserInfo:
      description: Template for an individual account info.
      id: UserInfo
      type: object
      properties:
        passwordUpdatedAt:
          format: double
          description: The timestamp when the password was last updated.
          type: number
        email:
          type: string
          description: The email of the user.
        lastLoginAt:
          type: string
          description: last login timestamp.
          format: int64
        localId:
          type: string
          description: The local ID of the user.
        rawPassword:
          type: string
          description: The user's plain text password.
        createdAt:
          description: User creation timestamp.
          type: string
          format: int64
        emailVerified:
          type: boolean
          description: Whether the email has been verified.
        screenName:
          type: string
          description: User's screen name at Twitter or login name at Github.
        disabled:
          type: boolean
          description: Whether the user is disabled.
        version:
          format: int32
          type: integer
          description: Version of the user's password.
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        salt:
          format: byte
          description: The user's password salt.
          type: string
        providerUserInfo:
          items:
            properties:
              rawId:
                type: string
                description: User's raw identifier directly returned from IDP.
              federatedId:
                type: string
                description: User's identifier at IDP.
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
              displayName:
                description: The user's display name at the IDP.
                type: string
              email:
                type: string
                description: User's email at IDP.
              providerId:
                description: 'The IdP ID. For white listed IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
                type: string
              screenName:
                description: User's screen name at Twitter or login name at Github.
                type: string
              phoneNumber:
                description: User's phone number.
                type: string
            type: object
          type: array
          description: The IDP of the user.
        displayName:
          description: The name of the user.
          type: string
        phoneNumber:
          description: User's phone number.
          type: string
        passwordHash:
          description: The user's hashed password.
          type: string
          format: byte
        validSince:
          description: Timestamp in seconds for valid login token.
          type: string
          format: int64
        photoUrl:
          description: The URL of the user profile photo.
          type: string
        customAuth:
          description: Whether the user is authenticated by the developer.
          type: boolean
    ResetPasswordResponse:
      properties:
        requestType:
          type: string
          description: The request type.
        kind:
          type: string
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          default: identitytoolkit#ResetPasswordResponse
        newEmail:
          description: 'If the out-of-band code is for email recovery, the user''s new email.'
          type: string
        email:
          description: 'The user''s email. If the out-of-band code is for email recovery, the user''s original email.'
          type: string
      description: Response of resetting the password.
      id: ResetPasswordResponse
      type: object
    IdentitytoolkitRelyingpartySignOutUserResponse:
      type: object
      properties:
        localId:
          type: string
          description: The local ID of the user.
      description: Response of signing out user.
      id: IdentitytoolkitRelyingpartySignOutUserResponse
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      properties:
        phoneNumber:
          description: Privileged caller can update user with specified phone number.
          type: string
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        disableUser:
          type: boolean
          description: Whether to disable the user.
        upgradeToFederatedLogin:
          type: boolean
          description: Mark the user to upgrade to federated login.
        localId:
          description: The local ID of the user.
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        captchaChallenge:
          type: string
          description: The captcha challenge.
        photoUrl:
          description: The photo url of the user.
          type: string
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        deleteProvider:
          items:
            type: string
          description: The IDPs the user request to delete.
          type: array
        emailVerified:
          type: boolean
          description: Mark the email as verified or not.
        password:
          description: The new password of the user.
          type: string
        validSince:
          description: Timestamp in seconds for valid login token.
          format: int64
          type: string
        displayName:
          description: The name of the user.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        lastLoginAt:
          format: int64
          description: Last login timestamp.
          type: string
        oobCode:
          description: The out-of-band code of the change email request.
          type: string
        createdAt:
          description: The timestamp when the account is created.
          format: int64
          type: string
        captchaResponse:
          description: Response to the captcha.
          type: string
        deleteAttribute:
          type: array
          items:
            type: string
          description: The attributes users request to delete.
        provider:
          type: array
          items:
            type: string
          description: The associated IDPs of the user.
        customAttributes:
          type: string
          description: The custom attributes to be set in the user's id token.
        email:
          description: The email of the user.
          type: string
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
      type: object
      description: Request to set the account information.
    IdentitytoolkitRelyingpartySignOutUserRequest:
      description: Request to sign out user.
      properties:
        instanceId:
          type: string
          description: Instance id token of the app.
        localId:
          type: string
          description: The local ID of the user.
      type: object
      id: IdentitytoolkitRelyingpartySignOutUserRequest
    DownloadAccountResponse:
      description: Response of downloading accounts in batch.
      id: DownloadAccountResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The next page token. To be used in a subsequent request to return the next page of results.
        kind:
          default: identitytoolkit#DownloadAccountResponse
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
          type: string
        users:
          description: The user accounts data.
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      description: Request to get the IDP authentication URL.
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
      type: object
      properties:
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        oauthScope:
          type: string
          description: 'Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant'
        clientId:
          type: string
          description: The relying party OAuth client ID.
        context:
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
          type: string
        customParameter:
          description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
          type: object
          additionalProperties:
            type: string
            description: The customized query parameter.
        sessionId:
          type: string
          description: The session_id passed by client.
        continueUri:
          description: The URI to which the IDP redirects the user after the federated login flow.
          type: string
        identifier:
          type: string
          description: The email or federated ID of the user.
        appId:
          description: 'The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.'
          type: string
        otaApp:
          type: string
          description: The native app package for OTA installation.
        openidRealm:
          description: 'Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.'
          type: string
        hostedDomain:
          type: string
          description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
        providerId:
          type: string
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        authFlowType:
          description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
          type: string
        oauthConsumerKey:
          description: The developer's consumer key for OpenId OAuth Extension
          type: string
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      type: object
      properties:
        idToken:
          description: Token for linking flow.
          type: string
        email:
          type: string
          description: The email address of the user.
        oobCode:
          description: The confirmation code.
          type: string
      description: Request to sign in with email.
    DeleteAccountResponse:
      description: Respone of deleting account.
      type: object
      id: DeleteAccountResponse
      properties:
        kind:
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
          default: identitytoolkit#DeleteAccountResponse
          type: string
    Relyingparty:
      id: Relyingparty
      type: object
      properties:
        kind:
          description: The fixed string "identitytoolkit#relyingparty".
          default: identitytoolkit#relyingparty
          type: string
        iOSBundleId:
          type: string
          description: the iOS bundle id of iOS app to handle the action code
        challenge:
          description: The recaptcha challenge presented to the user.
          type: string
        androidPackageName:
          type: string
          description: android package name of the android app to handle the action code
        userIp:
          description: The IP address of the user.
          type: string
        newEmail:
          description: The new email if the code is for email change.
          type: string
        idToken:
          type: string
          description: The user's Gitkit login token for email change.
        continueUrl:
          description: The url to continue to the Gitkit app
          type: string
        email:
          type: string
          description: The email of the user.
        iOSAppStoreId:
          type: string
          description: iOS app store id to download the app if it's not already installed
        androidInstallApp:
          type: boolean
          description: whether or not to install the android app on the device where the link is opened
        canHandleCodeInApp:
          type: boolean
          description: whether or not the app can handle the oob code without first going to web
        androidMinimumVersion:
          description: minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
          type: string
        captchaResp:
          description: The recaptcha response from the user.
          type: string
        requestType:
          type: string
          description: The request type.
      description: 'Request of getting a code for user confirmation (reset password, change email etc.)'
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      type: object
      description: Request to delete account.
      properties:
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        localId:
          type: string
          description: The local ID of the user.
        idToken:
          description: The GITKit token or STS id token of the authenticated user.
          type: string
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      description: Request to set the project configuration.
      type: object
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
      properties:
        authorizedDomains:
          description: Authorized domains for widget redirect.
          type: array
          items:
            type: string
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          type: boolean
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        idpConfig:
          type: array
          description: Oauth2 provider configuration.
          items:
            $ref: '#/components/schemas/IdpConfig'
        apiKey:
          type: string
          description: 'Browser API key, needed when making http request to Apiary.'
        enableAnonymousUser:
          type: boolean
          description: Whether to enable anonymous user.
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      type: object
      properties:
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        token:
          description: The custom token to verify
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      description: Request to verify a custom token
    SetAccountInfoResponse:
      id: SetAccountInfoResponse
      type: object
      properties:
        newEmail:
          type: string
          description: The new email the user attempts to change to.
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        providerUserInfo:
          description: The user's profiles at the associated IdPs.
          items:
            type: object
            properties:
              federatedId:
                description: User's identifier at IDP.
                type: string
              providerId:
                description: 'The IdP ID. For whitelisted IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
                type: string
              displayName:
                type: string
                description: The user's display name at the IDP.
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
          type: array
        photoUrl:
          type: string
          description: The photo url of the user.
        expiresIn:
          format: int64
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        localId:
          description: The local ID of the user.
          type: string
        displayName:
          type: string
          description: The name of the user.
        email:
          description: The email of the user.
          type: string
        kind:
          default: identitytoolkit#SetAccountInfoResponse
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
          type: string
        emailVerified:
          type: boolean
          description: If email has been verified.
        passwordHash:
          format: byte
          description: The user's hashed password.
          type: string
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
      description: Respone of setting the account information.
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
      properties:
        phoneNumber:
          type: string
          description: The phone number to send the verification code to in E.164 format.
        iosReceipt:
          description: Receipt of successful app token validation with APNS.
          type: string
        iosSecret:
          type: string
          description: Secret delivered to iOS app via APNS.
        recaptchaToken:
          description: Recaptcha solution.
          type: string
      description: Request for Identitytoolkit-SendVerificationCode
      type: object
    GetAccountInfoResponse:
      properties:
        kind:
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          type: string
          default: identitytoolkit#GetAccountInfoResponse
        users:
          type: array
          description: The info of the users.
          items:
            $ref: '#/components/schemas/UserInfo'
      description: Response of getting account information.
      type: object
      id: GetAccountInfoResponse
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      type: object
      properties:
        projectId:
          type: string
          description: Project ID of the relying party.
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      description: Response of setting the project configuration.
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      properties:
        rounds:
          format: int32
          type: integer
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
        sanityCheck:
          description: 'If true, backend will do sanity check(including duplicate email and federated id) when uploading account.'
          type: boolean
        parallelization:
          format: int32
          type: integer
        users:
          description: The account info to be stored.
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
        hashAlgorithm:
          type: string
          description: The password hash algorithm.
        allowOverwrite:
          description: Whether allow overwrite existing account when user local_id exists.
          type: boolean
        dkLen:
          format: int32
          type: integer
        signerKey:
          type: string
          format: byte
          description: The key for to hash the password.
        targetProjectId:
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
          type: string
        saltSeparator:
          type: string
          description: The salt separator.
          format: byte
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        memoryCost:
          type: integer
          format: int32
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
        blockSize:
          type: integer
          format: int32
        cpuMemCost:
          format: int32
          description: The following 4 fields are for standard scrypt algorithm.
          type: integer
      description: Request to upload user account in batch.
      type: object
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
    VerifyCustomTokenResponse:
      id: VerifyCustomTokenResponse
      description: Response from verifying a custom token
      type: object
      properties:
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        expiresIn:
          format: int64
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        kind:
          type: string
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
          default: identitytoolkit#VerifyCustomTokenResponse
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
        idToken:
          description: The GITKit token for authenticated user.
          type: string
    GetRecaptchaParamResponse:
      type: object
      id: GetRecaptchaParamResponse
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          default: identitytoolkit#GetRecaptchaParamResponse
        recaptchaSiteKey:
          type: string
          description: Site key registered at recaptcha.
        recaptchaStoken:
          type: string
          description: 'The stoken field for the recaptcha widget, used to request captcha challenge.'
      description: Response of getting recaptcha param.
    CreateAuthUriResponse:
      properties:
        kind:
          default: identitytoolkit#CreateAuthUriResponse
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          type: string
        allProviders:
          items:
            type: string
          description: all providers the user has once used to do federated login
          type: array
        signinMethods:
          items:
            type: string
          type: array
          description: All sign-in methods this user has used.
        providerId:
          description: The provider ID of the auth URI.
          type: string
        authUri:
          type: string
          description: The URI used by the IDP to authenticate the user.
        registered:
          description: Whether the user is registered if the identifier is an email.
          type: boolean
        forExistingProvider:
          description: True if the authUri is for user's existing provider.
          type: boolean
        sessionId:
          type: string
          description: Session ID which should be passed in the following verifyAssertion request.
        captchaRequired:
          description: True if captcha is required.
          type: boolean
      description: Response of creating the IDP authentication URL.
      type: object
      id: CreateAuthUriResponse
    UploadAccountResponse:
      type: object
      id: UploadAccountResponse
      description: Respone of uploading accounts in batch.
      properties:
        kind:
          default: identitytoolkit#UploadAccountResponse
          type: string
          description: The fixed string "identitytoolkit#UploadAccountResponse".
        error:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                description: Detailed error message for the account info.
              index:
                format: int32
                description: 'The index of the malformed account, starting from 0.'
                type: integer
          description: The error encountered while processing the account info.
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      description: Response for Identitytoolkit-SendVerificationCode
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      type: object
      properties:
        sessionInfo:
          description: Encrypted session information
          type: string
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      type: object
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
      properties:
        captchaChallenge:
          description: The captcha challenge.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          format: uint64
          type: string
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        password:
          description: The password inputed by the user.
          type: string
        captchaResponse:
          type: string
          description: Response to the captcha.
        email:
          description: The email of the user.
          type: string
        pendingIdToken:
          description: 'The GITKit token for the non-trusted IDP, which is to be confirmed by the user.'
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
      description: Request to verify the password.
    SignupNewUserResponse:
      id: SignupNewUserResponse
      type: object
      properties:
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          type: string
          format: int64
        kind:
          default: identitytoolkit#SignupNewUserResponse
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
          type: string
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        localId:
          description: The RP local ID of the user.
          type: string
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        displayName:
          type: string
          description: The name of the user.
        email:
          type: string
          description: The email of the user.
      description: 'Response of signing up new user, creating anonymous user or anonymous user reauth.'
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
      type: object
      properties:
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
        photoUrl:
          type: string
          description: The photo url of the user.
        instanceId:
          type: string
          description: Instance id token of the app.
        emailVerified:
          description: Mark the email as verified or not. Only can be used by service account.
          type: boolean
        disabled:
          type: boolean
          description: Whether to disable the user. Only can be used by service account.
        displayName:
          description: The name of the user.
          type: string
        password:
          type: string
          description: The new password of the user.
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        email:
          type: string
          description: The email of the user.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        phoneNumber:
          type: string
          description: Privileged caller can create user with specified phone number.
        captchaResponse:
          description: Response to the captcha.
          type: string
        captchaChallenge:
          type: string
          description: The captcha challenge.
      description: 'Request to signup new user, create anonymous user or anonymous user reauth.'
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      properties:
        verificationProof:
          type: string
        temporaryProof:
          type: string
        idToken:
          type: string
        operation:
          type: string
        code:
          type: string
        sessionInfo:
          type: string
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
        phoneNumber:
          type: string
      description: Request for Identitytoolkit-VerifyPhoneNumber
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      type: object
    IdpConfig:
      type: object
      description: Template for a single idp configuration.
      id: IdpConfig
      properties:
        secret:
          type: string
          description: OAuth2 client secret.
        whitelistedAudiences:
          type: array
          items:
            type: string
          description: Whitelisted client IDs for audience check.
        clientId:
          description: OAuth2 client ID.
          type: string
        provider:
          type: string
          description: OAuth2 provider.
        experimentPercent:
          type: integer
          format: int32
          description: Percent of users who will be prompted/redirected federated login for this IDP.
        enabled:
          type: boolean
          description: Whether this IDP is enabled.
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      description: Request to download user account in batch.
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
      properties:
        nextPageToken:
          description: The token for the next page. This should be taken from the previous response.
          type: string
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        targetProjectId:
          type: string
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
        maxResults:
          type: integer
          description: The max number of results to return in the response.
          format: uint32
      type: object
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      properties:
        phoneNumber:
          type: string
        expiresIn:
          type: string
          format: int64
        temporaryProof:
          type: string
        verificationProofExpiresIn:
          type: string
          format: int64
        verificationProof:
          type: string
        idToken:
          type: string
        localId:
          type: string
        refreshToken:
          type: string
        temporaryProofExpiresIn:
          format: int64
          type: string
        isNewUser:
          type: boolean
      type: object
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
      description: Response for Identitytoolkit-VerifyPhoneNumber
    VerifyAssertionResponse:
      type: object
      id: VerifyAssertionResponse
      properties:
        federatedId:
          type: string
          description: The unique ID identifies the IdP account.
        screenName:
          type: string
          description: The screen_name of a Twitter user or the login name at Github.
        nickName:
          type: string
          description: The nick name of the user.
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        localId:
          type: string
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        providerId:
          type: string
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.'
        emailVerified:
          type: boolean
          description: The value is true if the IDP is also the email provider. It means the user owns the email.
        verifiedProvider:
          items:
            type: string
          type: array
          description: 'When action is ''map'', contains the idps which can be used for confirmation.'
        kind:
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          type: string
          default: identitytoolkit#VerifyAssertionResponse
        refreshToken:
          description: 'If idToken is STS id token, then this field will be refresh token.'
          type: string
        oauthScope:
          type: string
          description: The scope for the OpenID OAuth extension.
        needConfirmation:
          type: boolean
          description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
        action:
          description: The action code.
          type: string
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        lastName:
          description: The last name of the user.
          type: string
        emailRecycled:
          description: It's true if the email is recycled.
          type: boolean
        rawUserInfo:
          type: string
          description: Raw IDP-returned user info.
        dateOfBirth:
          type: string
          description: The birth date of the IdP account.
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
          type: integer
        appScheme:
          type: string
          description: The custom scheme used by mobile app.
        timeZone:
          type: string
          description: The timezone of the user.
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
        fullName:
          description: The full name of the user.
          type: string
        displayName:
          description: The display name of the user.
          type: string
        firstName:
          type: string
          description: The first name of the user.
        oauthRequestToken:
          type: string
          description: The user approved request token for the OpenID OAuth extension.
        oauthIdToken:
          description: The OIDC id token.
          type: string
        photoUrl:
          description: The URI of the public accessible profiel picture.
          type: string
        idToken:
          type: string
          description: The ID token.
        appInstallationUrl:
          type: string
          description: URL for OTA app installation.
        inputEmail:
          description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
          type: string
        errorMessage:
          description: Client error code.
          type: string
        context:
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
          type: string
        oauthTokenSecret:
          description: The OAuth1 access token secret.
          type: string
        needEmail:
          description: Whether need client to supply email to complete the federated login flow.
          type: boolean
        originalEmail:
          description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
          type: string
        language:
          type: string
          description: The language preference of the user.
      description: Response of verifying the IDP assertion.
    EmailTemplate:
      description: Template for an email template.
      type: object
      id: EmailTemplate
      properties:
        from:
          type: string
          description: From address of the email.
        replyTo:
          description: Reply-to address.
          type: string
        body:
          description: Email body.
          type: string
        subject:
          type: string
          description: Subject of the email.
        format:
          type: string
          description: Email body format.
        fromDisplayName:
          description: From display name.
          type: string
    EmailLinkSigninResponse:
      description: Response of email signIn.
      type: object
      properties:
        refreshToken:
          description: The refresh token for the signed in user.
          type: string
        kind:
          default: identitytoolkit#EmailLinkSigninResponse
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          type: string
        email:
          type: string
          description: The user's email.
        idToken:
          type: string
          description: The STS id token to login the newly signed in user.
        isNewUser:
          type: boolean
          description: Whether the user is new.
        expiresIn:
          description: Expiration time of STS id token in seconds.
          type: string
          format: int64
        localId:
          description: The RP local ID of the user.
          type: string
      id: EmailLinkSigninResponse
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
      description: Request to get the account information.
      properties:
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        localId:
          type: array
          items:
            type: string
          description: The list of local ID's of the users to inquiry.
        phoneNumber:
          type: array
          description: Privileged caller can query users by specified phone number.
          items:
            type: string
        email:
          items:
            type: string
          type: array
          description: The list of emails of the users to inquiry.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
      type: object
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      type: object
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
      description: Request to reset the password.
      properties:
        oldPassword:
          description: The old password inputted by the user.
          type: string
        email:
          description: The email address of the user.
          type: string
        oobCode:
          description: The confirmation code.
          type: string
        newPassword:
          description: The new password inputted by the user.
          type: string
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      properties:
        authorizedDomains:
          items:
            type: string
          description: Authorized domains.
          type: array
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        dynamicLinksDomain:
          type: string
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
        enableAnonymousUser:
          type: boolean
          description: Whether anonymous user is enabled.
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        apiKey:
          type: string
          description: 'Browser API key, needed when making http request to Apiary.'
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        idpConfig:
          items:
            $ref: '#/components/schemas/IdpConfig'
          type: array
          description: OAuth2 provider configuration.
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        projectId:
          type: string
          description: Project ID of the relying party.
        resetPasswordTemplate:
          description: Reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      type: object
      description: Response of getting the project configuration.
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      description: Respone of getting public keys.
      type: object
      additionalProperties:
        type: string
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
    VerifyPasswordResponse:
      id: VerifyPasswordResponse
      properties:
        displayName:
          description: The name of the user.
          type: string
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        oauthAuthorizationCode:
          description: The OAuth2 authorization code.
          type: string
        oauthExpireIn:
          format: int32
          type: integer
          description: The lifetime in seconds of the OAuth2 access token.
        kind:
          type: string
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
          default: identitytoolkit#VerifyPasswordResponse
        localId:
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
          type: string
        expiresIn:
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
        photoUrl:
          description: The URI of the user's photo at IdP
          type: string
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        registered:
          type: boolean
          description: Whether the email is registered.
      description: Request of verifying the password.
      type: object
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      description: Request to verify the IDP assertion.
      properties:
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        returnRefreshToken:
          description: Whether to return refresh tokens.
          type: boolean
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        instanceId:
          type: string
          description: Instance id token of the app.
        pendingIdToken:
          type: string
          description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
        sessionId:
          type: string
          description: 'Session ID, which should match the one in previous createAuthUri request.'
        returnIdpCredential:
          type: boolean
          description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
        tenantProjectNumber:
          format: uint64
          description: Tenant project number to be used for idp discovery.
          type: string
        requestUri:
          type: string
          description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
        autoCreate:
          type: boolean
          description: 'When it''s true, automatically creates a new account if the user doesn''t exist. When it''s false, allows existing user to sign in normally and throws exception if the user doesn''t exist.'
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        postBody:
          type: string
          description: The post body if the request is a HTTP POST.
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
      type: object
  parameters:
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  x-stackQL-resources:
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        set_account_info:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_password:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_out_user:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signup_new_user:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_assertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_account:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_verification_code:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_phone_number:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_account:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_project_config:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        email_link_signin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_custom_token:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_auth_uri:
      id: google.identitytoolkit.relyingparty_auth_uri
      name: relyingparty_auth_uri
      title: Relyingparty Auth Uri
      methods:
        create_auth_uri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/relyingparty_auth_uri/methods/create_auth_uri'
        update: []
        delete: []
    relyingparty_project_config:
      id: google.identitytoolkit.relyingparty_project_config
      name: relyingparty_project_config
      title: Relyingparty Project Config
      methods:
        get_project_config:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_project_config/methods/get_project_config'
        insert: []
        update: []
        delete: []
    relyingparty_recaptcha_param:
      id: google.identitytoolkit.relyingparty_recaptcha_param
      name: relyingparty_recaptcha_param
      title: Relyingparty Recaptcha Param
      methods:
        get_recaptcha_param:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_recaptcha_param/methods/get_recaptcha_param'
        insert: []
        update: []
        delete: []
    relyingparty_account:
      id: google.identitytoolkit.relyingparty_account
      name: relyingparty_account
      title: Relyingparty Account
      methods:
        delete_account:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_oob_confirmation_code:
      id: google.identitytoolkit.relyingparty_oob_confirmation_code
      name: relyingparty_oob_confirmation_code
      title: Relyingparty Oob Confirmation Code
      methods:
        get_oob_confirmation_code:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_account_info:
      id: google.identitytoolkit.relyingparty_account_info
      name: relyingparty_account_info
      title: Relyingparty Account Info
      methods:
        get_account_info:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_public_keys:
      id: google.identitytoolkit.relyingparty_public_keys
      name: relyingparty_public_keys
      title: Relyingparty Public Keys
      methods:
        get_public_keys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /setAccountInfo:
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_account_info
      x-stackQL-verb: exec
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_password
      x-stackQL-verb: exec
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: sign_out_user
      x-stackQL-verb: exec
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: signup_new_user
      x-stackQL-verb: exec
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_assertion
      x-stackQL-verb: exec
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty_auth_uri
      x-stackQL-method: create_auth_uri
      x-stackQL-verb: insert
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: reset_password
      x-stackQL-verb: exec
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
      parameters:
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
        - in: query
          name: projectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty_project_config
      x-stackQL-method: get_project_config
      x-stackQL-verb: select
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty_recaptcha_param
      x-stackQL-method: get_recaptcha_param
      x-stackQL-verb: select
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: download_account
      x-stackQL-verb: exec
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: send_verification_code
      x-stackQL-verb: exec
  /verifyPhoneNumber:
    parameters: *ref_1
    post:
      description: Verifies ownership of a phone number and creates/updates the user account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_phone_number
      x-stackQL-verb: exec
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: upload_account
      x-stackQL-verb: exec
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty_account
      x-stackQL-method: delete_account
      x-stackQL-verb: exec
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty_oob_confirmation_code
      x-stackQL-method: get_oob_confirmation_code
      x-stackQL-verb: exec
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_project_config
      x-stackQL-verb: exec
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: email_link_signin
      x-stackQL-verb: exec
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_custom_token
      x-stackQL-verb: exec
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty_account_info
      x-stackQL-method: get_account_info
      x-stackQL-verb: exec
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
      x-stackQL-resource: relyingparty_public_keys
      x-stackQL-method: get_public_keys
      x-stackQL-verb: exec
