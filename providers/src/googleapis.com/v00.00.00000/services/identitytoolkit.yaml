openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://developers.google.com/identity-toolkit/v3/'
servers:
  - url: 'https://www.googleapis.com/identitytoolkit/v3/relyingparty'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      properties:
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        authorizedDomains:
          items:
            type: string
          type: array
          description: Authorized domains for widget redirect.
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        enableAnonymousUser:
          description: Whether to enable anonymous user.
          type: boolean
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        verifyEmailTemplate:
          description: Verify email template.
          $ref: '#/components/schemas/EmailTemplate'
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        idpConfig:
          description: Oauth2 provider configuration.
          type: array
          items:
            $ref: '#/components/schemas/IdpConfig'
        legacyResetPasswordTemplate:
          description: Legacy reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        apiKey:
          type: string
          description: 'Browser API key, needed when making http request to Apiary.'
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
      type: object
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
      description: Request to set the project configuration.
    UserInfo:
      id: UserInfo
      type: object
      properties:
        validSince:
          description: Timestamp in seconds for valid login token.
          format: int64
          type: string
        lastLoginAt:
          format: int64
          type: string
          description: last login timestamp.
        email:
          type: string
          description: The email of the user.
        customAttributes:
          type: string
          description: The custom attributes to be set in the user's id token.
        salt:
          description: The user's password salt.
          type: string
          format: byte
        customAuth:
          type: boolean
          description: Whether the user is authenticated by the developer.
        rawPassword:
          description: The user's plain text password.
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        localId:
          description: The local ID of the user.
          type: string
        phoneNumber:
          type: string
          description: User's phone number.
        displayName:
          type: string
          description: The name of the user.
        createdAt:
          description: User creation timestamp.
          format: int64
          type: string
        emailVerified:
          type: boolean
          description: Whether the email has been verified.
        providerUserInfo:
          items:
            type: object
            properties:
              rawId:
                type: string
                description: User's raw identifier directly returned from IDP.
              displayName:
                description: The user's display name at the IDP.
                type: string
              providerId:
                type: string
                description: 'The IdP ID. For white listed IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
              screenName:
                type: string
                description: User's screen name at Twitter or login name at Github.
              phoneNumber:
                description: User's phone number.
                type: string
              federatedId:
                type: string
                description: User's identifier at IDP.
              email:
                type: string
                description: User's email at IDP.
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
          type: array
          description: The IDP of the user.
        version:
          type: integer
          description: Version of the user's password.
          format: int32
        screenName:
          description: User's screen name at Twitter or login name at Github.
          type: string
        photoUrl:
          description: The URL of the user profile photo.
          type: string
        passwordUpdatedAt:
          type: number
          format: double
          description: The timestamp when the password was last updated.
        passwordHash:
          format: byte
          description: The user's hashed password.
          type: string
      description: Template for an individual account info.
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      type: object
      description: Request to upload user account in batch.
      properties:
        rounds:
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
          format: int32
          type: integer
        sanityCheck:
          description: 'If true, backend will do sanity check(including duplicate email and federated id) when uploading account.'
          type: boolean
        users:
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
          description: The account info to be stored.
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        signerKey:
          description: The key for to hash the password.
          format: byte
          type: string
        memoryCost:
          format: int32
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
          type: integer
        cpuMemCost:
          type: integer
          description: The following 4 fields are for standard scrypt algorithm.
          format: int32
        hashAlgorithm:
          type: string
          description: The password hash algorithm.
        blockSize:
          type: integer
          format: int32
        parallelization:
          type: integer
          format: int32
        dkLen:
          format: int32
          type: integer
        saltSeparator:
          type: string
          description: The salt separator.
          format: byte
        targetProjectId:
          type: string
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
        allowOverwrite:
          description: Whether allow overwrite existing account when user local_id exists.
          type: boolean
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
    DownloadAccountResponse:
      id: DownloadAccountResponse
      description: Response of downloading accounts in batch.
      type: object
      properties:
        nextPageToken:
          description: The next page token. To be used in a subsequent request to return the next page of results.
          type: string
        kind:
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
          default: identitytoolkit#DownloadAccountResponse
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The user accounts data.
    VerifyCustomTokenResponse:
      id: VerifyCustomTokenResponse
      type: object
      description: Response from verifying a custom token
      properties:
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        idToken:
          type: string
          description: The GITKit token for authenticated user.
        kind:
          type: string
          default: identitytoolkit#VerifyCustomTokenResponse
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      description: Request for Identitytoolkit-SendVerificationCode
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
      properties:
        recaptchaToken:
          type: string
          description: Recaptcha solution.
        iosSecret:
          type: string
          description: Secret delivered to iOS app via APNS.
        iosReceipt:
          type: string
          description: Receipt of successful app token validation with APNS.
        phoneNumber:
          type: string
          description: The phone number to send the verification code to in E.164 format.
      type: object
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
      type: object
      properties:
        openidRealm:
          description: 'Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.'
          type: string
        oauthConsumerKey:
          type: string
          description: The developer's consumer key for OpenId OAuth Extension
        otaApp:
          description: The native app package for OTA installation.
          type: string
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          type: string
          format: uint64
        authFlowType:
          type: string
          description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
        providerId:
          type: string
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        clientId:
          description: The relying party OAuth client ID.
          type: string
        customParameter:
          type: object
          additionalProperties:
            type: string
            description: The customized query parameter.
          description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
        hostedDomain:
          type: string
          description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
        continueUri:
          description: The URI to which the IDP redirects the user after the federated login flow.
          type: string
        sessionId:
          description: The session_id passed by client.
          type: string
        identifier:
          description: The email or federated ID of the user.
          type: string
        oauthScope:
          description: 'Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant'
          type: string
        appId:
          type: string
          description: 'The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.'
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
      description: Request to get the IDP authentication URL.
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      properties:
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        projectId:
          type: string
          description: Project ID of the relying party.
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          type: boolean
        authorizedDomains:
          type: array
          items:
            type: string
          description: Authorized domains.
        legacyResetPasswordTemplate:
          description: Legacy reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        idpConfig:
          items:
            $ref: '#/components/schemas/IdpConfig'
          description: OAuth2 provider configuration.
          type: array
        apiKey:
          type: string
          description: 'Browser API key, needed when making http request to Apiary.'
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        dynamicLinksDomain:
          type: string
        resetPasswordTemplate:
          description: Reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        enableAnonymousUser:
          description: Whether anonymous user is enabled.
          type: boolean
      type: object
      description: Response of getting the project configuration.
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      description: Request to reset the password.
      properties:
        newPassword:
          description: The new password inputted by the user.
          type: string
        oldPassword:
          description: The old password inputted by the user.
          type: string
        email:
          description: The email address of the user.
          type: string
        oobCode:
          type: string
          description: The confirmation code.
      type: object
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
    VerifyAssertionResponse:
      properties:
        inputEmail:
          description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
          type: string
        nickName:
          type: string
          description: The nick name of the user.
        language:
          description: The language preference of the user.
          type: string
        federatedId:
          type: string
          description: The unique ID identifies the IdP account.
        oauthScope:
          description: The scope for the OpenID OAuth extension.
          type: string
        oauthRequestToken:
          type: string
          description: The user approved request token for the OpenID OAuth extension.
        screenName:
          type: string
          description: The screen_name of a Twitter user or the login name at Github.
        providerId:
          type: string
          description: 'The IdP ID. For white listed IdPs it''s a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.'
        emailVerified:
          description: The value is true if the IDP is also the email provider. It means the user owns the email.
          type: boolean
        appInstallationUrl:
          type: string
          description: URL for OTA app installation.
        oauthTokenSecret:
          type: string
          description: The OAuth1 access token secret.
        action:
          type: string
          description: The action code.
        originalEmail:
          type: string
          description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        fullName:
          description: The full name of the user.
          type: string
        verifiedProvider:
          description: 'When action is ''map'', contains the idps which can be used for confirmation.'
          type: array
          items:
            type: string
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          type: integer
          format: int32
        dateOfBirth:
          type: string
          description: The birth date of the IdP account.
        displayName:
          description: The display name of the user.
          type: string
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        photoUrl:
          description: The URI of the public accessible profiel picture.
          type: string
        expiresIn:
          format: int64
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        errorMessage:
          description: Client error code.
          type: string
        firstName:
          description: The first name of the user.
          type: string
        localId:
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
          type: string
        emailRecycled:
          description: It's true if the email is recycled.
          type: boolean
        idToken:
          type: string
          description: The ID token.
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        appScheme:
          type: string
          description: The custom scheme used by mobile app.
        needConfirmation:
          type: boolean
          description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
        rawUserInfo:
          type: string
          description: Raw IDP-returned user info.
        timeZone:
          type: string
          description: The timezone of the user.
        isNewUser:
          type: boolean
          description: 'True if it''s a new user sign-in, false if it''s a returning user.'
        oauthIdToken:
          description: The OIDC id token.
          type: string
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        email:
          type: string
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
        lastName:
          type: string
          description: The last name of the user.
        kind:
          type: string
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          default: identitytoolkit#VerifyAssertionResponse
        needEmail:
          description: Whether need client to supply email to complete the federated login flow.
          type: boolean
      id: VerifyAssertionResponse
      description: Response of verifying the IDP assertion.
      type: object
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      description: Request to download user account in batch.
      type: object
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
      properties:
        nextPageToken:
          type: string
          description: The token for the next page. This should be taken from the previous response.
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        maxResults:
          format: uint32
          description: The max number of results to return in the response.
          type: integer
        targetProjectId:
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
          type: string
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      description: Response for Identitytoolkit-SendVerificationCode
      properties:
        sessionInfo:
          type: string
          description: Encrypted session information
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      type: object
    EmailTemplate:
      properties:
        replyTo:
          description: Reply-to address.
          type: string
        subject:
          type: string
          description: Subject of the email.
        format:
          description: Email body format.
          type: string
        body:
          type: string
          description: Email body.
        from:
          description: From address of the email.
          type: string
        fromDisplayName:
          type: string
          description: From display name.
      description: Template for an email template.
      type: object
      id: EmailTemplate
    GetOobConfirmationCodeResponse:
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
          default: identitytoolkit#GetOobConfirmationCodeResponse
        email:
          description: The email address that the email is sent to.
          type: string
        oobCode:
          type: string
          description: The code to be send to the user.
      type: object
      id: GetOobConfirmationCodeResponse
      description: 'Response of getting a code for user confirmation (reset password, change email etc.).'
    IdentitytoolkitRelyingpartySignOutUserResponse:
      description: Response of signing out user.
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      properties:
        localId:
          description: The local ID of the user.
          type: string
      type: object
    GetRecaptchaParamResponse:
      type: object
      properties:
        kind:
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          type: string
          default: identitytoolkit#GetRecaptchaParamResponse
        recaptchaSiteKey:
          description: Site key registered at recaptcha.
          type: string
        recaptchaStoken:
          description: 'The stoken field for the recaptcha widget, used to request captcha challenge.'
          type: string
      id: GetRecaptchaParamResponse
      description: Response of getting recaptcha param.
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      description: Response of setting the project configuration.
      type: object
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      properties:
        projectId:
          type: string
          description: Project ID of the relying party.
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      description: Request to verify the password.
      properties:
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        captchaChallenge:
          type: string
          description: The captcha challenge.
        email:
          type: string
          description: The email of the user.
        password:
          type: string
          description: The password inputed by the user.
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        pendingIdToken:
          description: 'The GITKit token for the non-trusted IDP, which is to be confirmed by the user.'
          type: string
        tenantId:
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
          type: string
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        captchaResponse:
          description: Response to the captcha.
          type: string
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
      type: object
    GetAccountInfoResponse:
      type: object
      description: Response of getting account information.
      id: GetAccountInfoResponse
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          default: identitytoolkit#GetAccountInfoResponse
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The info of the users.
    EmailLinkSigninResponse:
      id: EmailLinkSigninResponse
      type: object
      properties:
        localId:
          type: string
          description: The RP local ID of the user.
        isNewUser:
          description: Whether the user is new.
          type: boolean
        idToken:
          type: string
          description: The STS id token to login the newly signed in user.
        email:
          description: The user's email.
          type: string
        refreshToken:
          type: string
          description: The refresh token for the signed in user.
        expiresIn:
          type: string
          format: int64
          description: Expiration time of STS id token in seconds.
        kind:
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          default: identitytoolkit#EmailLinkSigninResponse
          type: string
      description: Response of email signIn.
    IdpConfig:
      id: IdpConfig
      description: Template for a single idp configuration.
      properties:
        experimentPercent:
          type: integer
          description: Percent of users who will be prompted/redirected federated login for this IDP.
          format: int32
        enabled:
          description: Whether this IDP is enabled.
          type: boolean
        whitelistedAudiences:
          items:
            type: string
          type: array
          description: Whitelisted client IDs for audience check.
        clientId:
          description: OAuth2 client ID.
          type: string
        secret:
          description: OAuth2 client secret.
          type: string
        provider:
          description: OAuth2 provider.
          type: string
      type: object
    DeleteAccountResponse:
      properties:
        kind:
          type: string
          default: identitytoolkit#DeleteAccountResponse
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
      type: object
      id: DeleteAccountResponse
      description: Respone of deleting account.
    SignupNewUserResponse:
      description: 'Response of signing up new user, creating anonymous user or anonymous user reauth.'
      type: object
      properties:
        kind:
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
          type: string
          default: identitytoolkit#SignupNewUserResponse
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        displayName:
          description: The name of the user.
          type: string
        localId:
          description: The RP local ID of the user.
          type: string
        email:
          description: The email of the user.
          type: string
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        expiresIn:
          format: int64
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
      id: SignupNewUserResponse
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      description: Request to set the account information.
      type: object
      properties:
        deleteProvider:
          type: array
          items:
            type: string
          description: The IDPs the user request to delete.
        photoUrl:
          description: The photo url of the user.
          type: string
        oobCode:
          description: The out-of-band code of the change email request.
          type: string
        validSince:
          format: int64
          type: string
          description: Timestamp in seconds for valid login token.
        instanceId:
          type: string
          description: Instance id token of the app.
        captchaResponse:
          description: Response to the captcha.
          type: string
        disableUser:
          description: Whether to disable the user.
          type: boolean
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        captchaChallenge:
          description: The captcha challenge.
          type: string
        email:
          type: string
          description: The email of the user.
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        localId:
          type: string
          description: The local ID of the user.
        upgradeToFederatedLogin:
          description: Mark the user to upgrade to federated login.
          type: boolean
        displayName:
          description: The name of the user.
          type: string
        emailVerified:
          type: boolean
          description: Mark the email as verified or not.
        password:
          description: The new password of the user.
          type: string
        provider:
          description: The associated IDPs of the user.
          items:
            type: string
          type: array
        deleteAttribute:
          description: The attributes users request to delete.
          items:
            type: string
          type: array
        createdAt:
          format: int64
          description: The timestamp when the account is created.
          type: string
        lastLoginAt:
          format: int64
          description: Last login timestamp.
          type: string
        phoneNumber:
          type: string
          description: Privileged caller can update user with specified phone number.
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      type: object
      properties:
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        token:
          description: The custom token to verify
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
      description: Request to verify a custom token
    ResetPasswordResponse:
      type: object
      properties:
        email:
          description: 'The user''s email. If the out-of-band code is for email recovery, the user''s original email.'
          type: string
        requestType:
          type: string
          description: The request type.
        newEmail:
          type: string
          description: 'If the out-of-band code is for email recovery, the user''s new email.'
        kind:
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          default: identitytoolkit#ResetPasswordResponse
          type: string
      id: ResetPasswordResponse
      description: Response of resetting the password.
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      type: object
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
      properties:
        isNewUser:
          type: boolean
        idToken:
          type: string
        phoneNumber:
          type: string
        localId:
          type: string
        expiresIn:
          type: string
          format: int64
        verificationProof:
          type: string
        verificationProofExpiresIn:
          type: string
          format: int64
        temporaryProofExpiresIn:
          format: int64
          type: string
        refreshToken:
          type: string
        temporaryProof:
          type: string
      description: Response for Identitytoolkit-VerifyPhoneNumber
    SetAccountInfoResponse:
      type: object
      properties:
        newEmail:
          description: The new email the user attempts to change to.
          type: string
        expiresIn:
          format: int64
          type: string
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
        passwordHash:
          type: string
          description: The user's hashed password.
          format: byte
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        email:
          description: The email of the user.
          type: string
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        localId:
          description: The local ID of the user.
          type: string
        kind:
          default: identitytoolkit#SetAccountInfoResponse
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
          type: string
        emailVerified:
          description: If email has been verified.
          type: boolean
        providerUserInfo:
          items:
            properties:
              displayName:
                description: The user's display name at the IDP.
                type: string
              federatedId:
                type: string
                description: User's identifier at IDP.
              providerId:
                type: string
                description: 'The IdP ID. For whitelisted IdPs it''s a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it''s the OP identifier.'
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
            type: object
          type: array
          description: The user's profiles at the associated IdPs.
        displayName:
          description: The name of the user.
          type: string
        photoUrl:
          type: string
          description: The photo url of the user.
      id: SetAccountInfoResponse
      description: Respone of setting the account information.
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      description: Request to sign in with email.
      type: object
      properties:
        email:
          type: string
          description: The email address of the user.
        oobCode:
          description: The confirmation code.
          type: string
        idToken:
          description: Token for linking flow.
          type: string
    UploadAccountResponse:
      properties:
        kind:
          default: identitytoolkit#UploadAccountResponse
          type: string
          description: The fixed string "identitytoolkit#UploadAccountResponse".
        error:
          description: The error encountered while processing the account info.
          type: array
          items:
            properties:
              message:
                description: Detailed error message for the account info.
                type: string
              index:
                format: int32
                description: 'The index of the malformed account, starting from 0.'
                type: integer
            type: object
      type: object
      id: UploadAccountResponse
      description: Respone of uploading accounts in batch.
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
      description: 'Request to signup new user, create anonymous user or anonymous user reauth.'
      type: object
      properties:
        photoUrl:
          description: The photo url of the user.
          type: string
        email:
          description: The email of the user.
          type: string
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        tenantProjectNumber:
          format: uint64
          type: string
          description: Tenant project number to be used for idp discovery.
        displayName:
          description: The name of the user.
          type: string
        password:
          type: string
          description: The new password of the user.
        captchaResponse:
          type: string
          description: Response to the captcha.
        emailVerified:
          type: boolean
          description: Mark the email as verified or not. Only can be used by service account.
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        disabled:
          type: boolean
          description: Whether to disable the user. Only can be used by service account.
        captchaChallenge:
          type: string
          description: The captcha challenge.
        phoneNumber:
          description: Privileged caller can create user with specified phone number.
          type: string
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        instanceId:
          type: string
          description: Instance id token of the app.
    IdentitytoolkitRelyingpartySignOutUserRequest:
      properties:
        localId:
          type: string
          description: The local ID of the user.
        instanceId:
          type: string
          description: Instance id token of the app.
      id: IdentitytoolkitRelyingpartySignOutUserRequest
      type: object
      description: Request to sign out user.
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      type: object
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
      description: Request to get the account information.
      properties:
        phoneNumber:
          description: Privileged caller can query users by specified phone number.
          items:
            type: string
          type: array
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        email:
          items:
            type: string
          description: The list of emails of the users to inquiry.
          type: array
        localId:
          description: The list of local ID's of the users to inquiry.
          items:
            type: string
          type: array
        delegatedProjectNumber:
          format: int64
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
    VerifyPasswordResponse:
      type: object
      id: VerifyPasswordResponse
      description: Request of verifying the password.
      properties:
        expiresIn:
          description: 'If idToken is STS id token, then this field will be expiration time of STS id token in seconds.'
          format: int64
          type: string
        refreshToken:
          type: string
          description: 'If idToken is STS id token, then this field will be refresh token.'
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        email:
          type: string
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
        oauthExpireIn:
          format: int32
          type: integer
          description: The lifetime in seconds of the OAuth2 access token.
        photoUrl:
          type: string
          description: The URI of the user's photo at IdP
        kind:
          default: identitytoolkit#VerifyPasswordResponse
          type: string
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
        registered:
          type: boolean
          description: Whether the email is registered.
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        displayName:
          description: The name of the user.
          type: string
        oauthAuthorizationCode:
          description: The OAuth2 authorization code.
          type: string
        localId:
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
          type: string
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      properties:
        pendingIdToken:
          type: string
          description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
        autoCreate:
          type: boolean
          description: 'When it''s true, automatically creates a new account if the user doesn''t exist. When it''s false, allows existing user to sign in normally and throws exception if the user doesn''t exist.'
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        postBody:
          description: The post body if the request is a HTTP POST.
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
        returnRefreshToken:
          description: Whether to return refresh tokens.
          type: boolean
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          type: string
          format: uint64
        requestUri:
          type: string
          description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
        returnIdpCredential:
          description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
          type: boolean
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        tenantId:
          type: string
          description: 'For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.'
        sessionId:
          type: string
          description: 'Session ID, which should match the one in previous createAuthUri request.'
      type: object
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
      description: Request to verify the IDP assertion.
    CreateAuthUriResponse:
      properties:
        registered:
          description: Whether the user is registered if the identifier is an email.
          type: boolean
        allProviders:
          description: all providers the user has once used to do federated login
          type: array
          items:
            type: string
        kind:
          type: string
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          default: identitytoolkit#CreateAuthUriResponse
        providerId:
          type: string
          description: The provider ID of the auth URI.
        forExistingProvider:
          description: True if the authUri is for user's existing provider.
          type: boolean
        captchaRequired:
          type: boolean
          description: True if captcha is required.
        sessionId:
          description: Session ID which should be passed in the following verifyAssertion request.
          type: string
        signinMethods:
          description: All sign-in methods this user has used.
          items:
            type: string
          type: array
        authUri:
          type: string
          description: The URI used by the IDP to authenticate the user.
      type: object
      description: Response of creating the IDP authentication URL.
      id: CreateAuthUriResponse
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      description: Request for Identitytoolkit-VerifyPhoneNumber
      type: object
      properties:
        operation:
          type: string
        phoneNumber:
          type: string
        idToken:
          type: string
        code:
          type: string
        temporaryProof:
          type: string
        verificationProof:
          type: string
        sessionInfo:
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
          type: string
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      properties:
        idToken:
          description: The GITKit token or STS id token of the authenticated user.
          type: string
        localId:
          type: string
          description: The local ID of the user.
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
      type: object
      description: Request to delete account.
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      description: Respone of getting public keys.
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
      type: object
      additionalProperties:
        type: string
    Relyingparty:
      description: 'Request of getting a code for user confirmation (reset password, change email etc.)'
      properties:
        canHandleCodeInApp:
          type: boolean
          description: whether or not the app can handle the oob code without first going to web
        userIp:
          description: The IP address of the user.
          type: string
        email:
          description: The email of the user.
          type: string
        newEmail:
          description: The new email if the code is for email change.
          type: string
        iOSBundleId:
          type: string
          description: the iOS bundle id of iOS app to handle the action code
        challenge:
          description: The recaptcha challenge presented to the user.
          type: string
        androidInstallApp:
          type: boolean
          description: whether or not to install the android app on the device where the link is opened
        androidMinimumVersion:
          description: minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
          type: string
        kind:
          type: string
          description: The fixed string "identitytoolkit#relyingparty".
          default: identitytoolkit#relyingparty
        androidPackageName:
          description: android package name of the android app to handle the action code
          type: string
        requestType:
          type: string
          description: The request type.
        continueUrl:
          type: string
          description: The url to continue to the Gitkit app
        iOSAppStoreId:
          type: string
          description: iOS app store id to download the app if it's not already installed
        idToken:
          type: string
          description: The user's Gitkit login token for email change.
        captchaResp:
          description: The recaptcha response from the user.
          type: string
      type: object
      id: Relyingparty
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        verify_phone_number:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signup_new_user:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_verification_code:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_custom_token:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_account_info:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_account:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_account:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_out_user:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_assertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_password:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        email_link_signin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_project_config:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_account_info:
      id: google.identitytoolkit.relyingparty_account_info
      name: relyingparty_account_info
      title: Relyingparty Account Info
      methods:
        get_account_info:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_auth_uri:
      id: google.identitytoolkit.relyingparty_auth_uri
      name: relyingparty_auth_uri
      title: Relyingparty Auth Uri
      methods:
        create_auth_uri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/relyingparty_auth_uri/methods/create_auth_uri'
        update: []
        delete: []
    relyingparty_project_config:
      id: google.identitytoolkit.relyingparty_project_config
      name: relyingparty_project_config
      title: Relyingparty Project Config
      methods:
        get_project_config:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_project_config/methods/get_project_config'
        insert: []
        update: []
        delete: []
    relyingparty_recaptcha_param:
      id: google.identitytoolkit.relyingparty_recaptcha_param
      name: relyingparty_recaptcha_param
      title: Relyingparty Recaptcha Param
      methods:
        get_recaptcha_param:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty_recaptcha_param/methods/get_recaptcha_param'
        insert: []
        update: []
        delete: []
    relyingparty_account:
      id: google.identitytoolkit.relyingparty_account
      name: relyingparty_account
      title: Relyingparty Account
      methods:
        delete_account:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_public_keys:
      id: google.identitytoolkit.relyingparty_public_keys
      name: relyingparty_public_keys
      title: Relyingparty Public Keys
      methods:
        get_public_keys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_oob_confirmation_code:
      id: google.identitytoolkit.relyingparty_oob_confirmation_code
      name: relyingparty_oob_confirmation_code
      title: Relyingparty Oob Confirmation Code
      methods:
        get_oob_confirmation_code:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /verifyPhoneNumber:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Verifies ownership of a phone number and creates/updates the user account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_phone_number
      x-stackQL-verb: exec
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty_account_info
      x-stackQL-method: get_account_info
      x-stackQL-verb: exec
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: signup_new_user
      x-stackQL-verb: exec
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: send_verification_code
      x-stackQL-verb: exec
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_custom_token
      x-stackQL-verb: exec
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_account_info
      x-stackQL-verb: exec
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: reset_password
      x-stackQL-verb: exec
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: upload_account
      x-stackQL-verb: exec
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty_auth_uri
      x-stackQL-method: create_auth_uri
      x-stackQL-verb: insert
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
      parameters:
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
        - in: query
          name: projectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty_project_config
      x-stackQL-method: get_project_config
      x-stackQL-verb: select
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: download_account
      x-stackQL-verb: exec
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: sign_out_user
      x-stackQL-verb: exec
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_assertion
      x-stackQL-verb: exec
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty_recaptcha_param
      x-stackQL-method: get_recaptcha_param
      x-stackQL-verb: select
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty_account
      x-stackQL-method: delete_account
      x-stackQL-verb: exec
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: verify_password
      x-stackQL-verb: exec
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: email_link_signin
      x-stackQL-verb: exec
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-method: set_project_config
      x-stackQL-verb: exec
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
      x-stackQL-resource: relyingparty_public_keys
      x-stackQL-method: get_public_keys
      x-stackQL-verb: exec
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty_oob_confirmation_code
      x-stackQL-method: get_oob_confirmation_code
      x-stackQL-verb: exec
