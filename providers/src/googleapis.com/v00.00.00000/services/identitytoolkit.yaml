openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/identity-toolkit/v3/
servers:
  - url: https://www.googleapis.com/identitytoolkit/v3/relyingparty
components:
  schemas:
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      description: Request to download user account in batch.
      type: object
      properties:
        delegatedProjectNumber:
          type: string
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
        maxResults:
          description: The max number of results to return in the response.
          format: uint32
          type: integer
        targetProjectId:
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
          type: string
        nextPageToken:
          description: The token for the next page. This should be taken from the previous response.
          type: string
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
    VerifyCustomTokenResponse:
      properties:
        isNewUser:
          type: boolean
          description: True if it's a new user sign-in, false if it's a returning user.
        expiresIn:
          type: string
          format: int64
          description: If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
        idToken:
          type: string
          description: The GITKit token for authenticated user.
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        kind:
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
          default: identitytoolkit#VerifyCustomTokenResponse
          type: string
      type: object
      id: VerifyCustomTokenResponse
      description: Response from verifying a custom token
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
      type: object
      properties:
        oldPassword:
          type: string
          description: The old password inputted by the user.
        newPassword:
          description: The new password inputted by the user.
          type: string
        email:
          type: string
          description: The email address of the user.
        oobCode:
          type: string
          description: The confirmation code.
      description: Request to reset the password.
    ResetPasswordResponse:
      id: ResetPasswordResponse
      type: object
      properties:
        email:
          type: string
          description: The user's email. If the out-of-band code is for email recovery, the user's original email.
        newEmail:
          type: string
          description: If the out-of-band code is for email recovery, the user's new email.
        kind:
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          default: identitytoolkit#ResetPasswordResponse
          type: string
        requestType:
          type: string
          description: The request type.
      description: Response of resetting the password.
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      description: Response of getting the project configuration.
      properties:
        apiKey:
          type: string
          description: Browser API key, needed when making http request to Apiary.
        idpConfig:
          items:
            $ref: '#/components/schemas/IdpConfig'
          type: array
          description: OAuth2 provider configuration.
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        projectId:
          description: Project ID of the relying party.
          type: string
        dynamicLinksDomain:
          type: string
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        authorizedDomains:
          type: array
          description: Authorized domains.
          items:
            type: string
        verifyEmailTemplate:
          description: Verify email template.
          $ref: '#/components/schemas/EmailTemplate'
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        enableAnonymousUser:
          description: Whether anonymous user is enabled.
          type: boolean
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      type: object
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      description: Request to get the IDP authentication URL.
      type: object
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
      properties:
        oauthConsumerKey:
          type: string
          description: The developer's consumer key for OpenId OAuth Extension
        tenantId:
          description: For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
          type: string
        clientId:
          description: The relying party OAuth client ID.
          type: string
        tenantProjectNumber:
          type: string
          format: uint64
          description: Tenant project number to be used for idp discovery.
        sessionId:
          type: string
          description: The session_id passed by client.
        context:
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
          type: string
        customParameter:
          description: 'The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.'
          type: object
          additionalProperties:
            description: The customized query parameter.
            type: string
        identifier:
          description: The email or federated ID of the user.
          type: string
        providerId:
          type: string
          description: The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
        hostedDomain:
          description: The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
          type: string
        openidRealm:
          description: Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.
          type: string
        appId:
          description: The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.
          type: string
        authFlowType:
          type: string
          description: Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
        oauthScope:
          description: Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant
          type: string
        continueUri:
          description: The URI to which the IDP redirects the user after the federated login flow.
          type: string
        otaApp:
          type: string
          description: The native app package for OTA installation.
    UserInfo:
      properties:
        displayName:
          type: string
          description: The name of the user.
        salt:
          description: The user's password salt.
          type: string
          format: byte
        screenName:
          type: string
          description: User's screen name at Twitter or login name at Github.
        email:
          type: string
          description: The email of the user.
        customAttributes:
          type: string
          description: The custom attributes to be set in the user's id token.
        passwordHash:
          type: string
          description: The user's hashed password.
          format: byte
        phoneNumber:
          description: User's phone number.
          type: string
        disabled:
          type: boolean
          description: Whether the user is disabled.
        rawPassword:
          description: The user's plain text password.
          type: string
        localId:
          type: string
          description: The local ID of the user.
        passwordUpdatedAt:
          format: double
          type: number
          description: The timestamp when the password was last updated.
        validSince:
          description: Timestamp in seconds for valid login token.
          format: int64
          type: string
        emailVerified:
          type: boolean
          description: Whether the email has been verified.
        createdAt:
          description: User creation timestamp.
          type: string
          format: int64
        lastLoginAt:
          type: string
          description: last login timestamp.
          format: int64
        providerUserInfo:
          description: The IDP of the user.
          type: array
          items:
            properties:
              email:
                type: string
                description: User's email at IDP.
              providerId:
                type: string
                description: The IdP ID. For white listed IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
              federatedId:
                type: string
                description: User's identifier at IDP.
              phoneNumber:
                type: string
                description: User's phone number.
              displayName:
                type: string
                description: The user's display name at the IDP.
              screenName:
                description: User's screen name at Twitter or login name at Github.
                type: string
              rawId:
                description: User's raw identifier directly returned from IDP.
                type: string
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
            type: object
        customAuth:
          description: Whether the user is authenticated by the developer.
          type: boolean
        version:
          format: int32
          description: Version of the user's password.
          type: integer
        photoUrl:
          type: string
          description: The URL of the user profile photo.
      type: object
      description: Template for an individual account info.
      id: UserInfo
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
      properties:
        verificationProof:
          type: string
        expiresIn:
          type: string
          format: int64
        phoneNumber:
          type: string
        verificationProofExpiresIn:
          type: string
          format: int64
        temporaryProofExpiresIn:
          format: int64
          type: string
        refreshToken:
          type: string
        idToken:
          type: string
        localId:
          type: string
        temporaryProof:
          type: string
        isNewUser:
          type: boolean
      description: Response for Identitytoolkit-VerifyPhoneNumber
      type: object
    SetAccountInfoResponse:
      properties:
        emailVerified:
          type: boolean
          description: If email has been verified.
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        email:
          description: The email of the user.
          type: string
        displayName:
          description: The name of the user.
          type: string
        localId:
          type: string
          description: The local ID of the user.
        photoUrl:
          type: string
          description: The photo url of the user.
        expiresIn:
          type: string
          description: If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
          format: int64
        kind:
          type: string
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
          default: identitytoolkit#SetAccountInfoResponse
        newEmail:
          type: string
          description: The new email the user attempts to change to.
        passwordHash:
          description: The user's hashed password.
          type: string
          format: byte
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
        providerUserInfo:
          description: The user's profiles at the associated IdPs.
          items:
            type: object
            properties:
              photoUrl:
                description: The user's photo url at the IDP.
                type: string
              providerId:
                type: string
                description: The IdP ID. For whitelisted IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
              federatedId:
                description: User's identifier at IDP.
                type: string
              displayName:
                description: The user's display name at the IDP.
                type: string
          type: array
      id: SetAccountInfoResponse
      description: Respone of setting the account information.
      type: object
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
      description: Request to signup new user, create anonymous user or anonymous user reauth.
      properties:
        tenantId:
          description: For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
          type: string
        emailVerified:
          description: Mark the email as verified or not. Only can be used by service account.
          type: boolean
        captchaChallenge:
          description: The captcha challenge.
          type: string
        disabled:
          description: Whether to disable the user. Only can be used by service account.
          type: boolean
        captchaResponse:
          description: Response to the captcha.
          type: string
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        photoUrl:
          description: The photo url of the user.
          type: string
        localId:
          description: Privileged caller can create user with specified user id.
          type: string
        tenantProjectNumber:
          format: uint64
          type: string
          description: Tenant project number to be used for idp discovery.
        email:
          type: string
          description: The email of the user.
        phoneNumber:
          description: Privileged caller can create user with specified phone number.
          type: string
        password:
          type: string
          description: The new password of the user.
        displayName:
          type: string
          description: The name of the user.
      type: object
    IdpConfig:
      id: IdpConfig
      type: object
      description: Template for a single idp configuration.
      properties:
        secret:
          type: string
          description: OAuth2 client secret.
        whitelistedAudiences:
          description: Whitelisted client IDs for audience check.
          type: array
          items:
            type: string
        clientId:
          type: string
          description: OAuth2 client ID.
        enabled:
          type: boolean
          description: Whether this IDP is enabled.
        provider:
          description: OAuth2 provider.
          type: string
        experimentPercent:
          format: int32
          description: Percent of users who will be prompted/redirected federated login for this IDP.
          type: integer
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      properties:
        captchaResponse:
          description: Response to the captcha.
          type: string
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        email:
          type: string
          description: The email of the user.
        instanceId:
          type: string
          description: Instance id token of the app.
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        tenantId:
          type: string
          description: For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
        pendingIdToken:
          description: The GITKit token for the non-trusted IDP, which is to be confirmed by the user.
          type: string
        captchaChallenge:
          description: The captcha challenge.
          type: string
        password:
          type: string
          description: The password inputed by the user.
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        tenantProjectNumber:
          format: uint64
          type: string
          description: Tenant project number to be used for idp discovery.
      description: Request to verify the password.
      type: object
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      properties:
        instanceId:
          type: string
          description: Instance id token of the app.
        token:
          description: The custom token to verify
          type: string
        returnSecureToken:
          type: boolean
          description: Whether return sts id token and refresh token instead of gitkit token.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
      description: Request to verify a custom token
      type: object
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      properties:
        phoneNumber:
          type: string
        temporaryProof:
          type: string
        sessionInfo:
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
          type: string
        idToken:
          type: string
        verificationProof:
          type: string
        code:
          type: string
        operation:
          type: string
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      type: object
      description: Request for Identitytoolkit-VerifyPhoneNumber
    GetOobConfirmationCodeResponse:
      type: object
      description: Response of getting a code for user confirmation (reset password, change email etc.).
      id: GetOobConfirmationCodeResponse
      properties:
        oobCode:
          type: string
          description: The code to be send to the user.
        email:
          type: string
          description: The email address that the email is sent to.
        kind:
          default: identitytoolkit#GetOobConfirmationCodeResponse
          type: string
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
    DownloadAccountResponse:
      id: DownloadAccountResponse
      properties:
        kind:
          default: identitytoolkit#DownloadAccountResponse
          type: string
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
        users:
          description: The user accounts data.
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
        nextPageToken:
          type: string
          description: The next page token. To be used in a subsequent request to return the next page of results.
      type: object
      description: Response of downloading accounts in batch.
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      properties:
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          type: boolean
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        idpConfig:
          items:
            $ref: '#/components/schemas/IdpConfig'
          description: Oauth2 provider configuration.
          type: array
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        apiKey:
          type: string
          description: Browser API key, needed when making http request to Apiary.
        resetPasswordTemplate:
          description: Reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        enableAnonymousUser:
          type: boolean
          description: Whether to enable anonymous user.
        authorizedDomains:
          type: array
          items:
            type: string
          description: Authorized domains for widget redirect.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
      description: Request to set the project configuration.
      type: object
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
      type: object
      description: Request to upload user account in batch.
      properties:
        targetProjectId:
          type: string
          description: Specify which project (field value is actually project id) to operate. Only used when provided credential.
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          description: The account info to be stored.
        memoryCost:
          format: int32
          type: integer
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
        dkLen:
          format: int32
          type: integer
        hashAlgorithm:
          description: The password hash algorithm.
          type: string
        sanityCheck:
          type: boolean
          description: If true, backend will do sanity check(including duplicate email and federated id) when uploading account.
        blockSize:
          format: int32
          type: integer
        parallelization:
          type: integer
          format: int32
        cpuMemCost:
          type: integer
          format: int32
          description: The following 4 fields are for standard scrypt algorithm.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        signerKey:
          format: byte
          description: The key for to hash the password.
          type: string
        saltSeparator:
          description: The salt separator.
          format: byte
          type: string
        rounds:
          format: int32
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
          type: integer
        allowOverwrite:
          description: Whether allow overwrite existing account when user local_id exists.
          type: boolean
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      description: Request for Identitytoolkit-SendVerificationCode
      type: object
      properties:
        iosReceipt:
          description: Receipt of successful app token validation with APNS.
          type: string
        iosSecret:
          description: Secret delivered to iOS app via APNS.
          type: string
        recaptchaToken:
          description: Recaptcha solution.
          type: string
        phoneNumber:
          type: string
          description: The phone number to send the verification code to in E.164 format.
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      type: object
      description: Response of setting the project configuration.
      properties:
        projectId:
          description: Project ID of the relying party.
          type: string
    GetRecaptchaParamResponse:
      type: object
      description: Response of getting recaptcha param.
      id: GetRecaptchaParamResponse
      properties:
        kind:
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          default: identitytoolkit#GetRecaptchaParamResponse
          type: string
        recaptchaSiteKey:
          type: string
          description: Site key registered at recaptcha.
        recaptchaStoken:
          type: string
          description: The stoken field for the recaptcha widget, used to request captcha challenge.
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      type: object
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      properties:
        email:
          type: string
          description: The email address of the user.
        oobCode:
          type: string
          description: The confirmation code.
        idToken:
          type: string
          description: Token for linking flow.
      description: Request to sign in with email.
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      type: object
      properties:
        localId:
          items:
            type: string
          type: array
          description: The list of local ID's of the users to inquiry.
        delegatedProjectNumber:
          type: string
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
        phoneNumber:
          items:
            type: string
          type: array
          description: Privileged caller can query users by specified phone number.
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        email:
          items:
            type: string
          description: The list of emails of the users to inquiry.
          type: array
      description: Request to get the account information.
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
    EmailLinkSigninResponse:
      id: EmailLinkSigninResponse
      description: Response of email signIn.
      type: object
      properties:
        email:
          type: string
          description: The user's email.
        expiresIn:
          description: Expiration time of STS id token in seconds.
          format: int64
          type: string
        idToken:
          type: string
          description: The STS id token to login the newly signed in user.
        refreshToken:
          description: The refresh token for the signed in user.
          type: string
        kind:
          default: identitytoolkit#EmailLinkSigninResponse
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          type: string
        localId:
          description: The RP local ID of the user.
          type: string
        isNewUser:
          description: Whether the user is new.
          type: boolean
    CreateAuthUriResponse:
      properties:
        allProviders:
          description: all providers the user has once used to do federated login
          items:
            type: string
          type: array
        registered:
          description: Whether the user is registered if the identifier is an email.
          type: boolean
        providerId:
          type: string
          description: The provider ID of the auth URI.
        kind:
          default: identitytoolkit#CreateAuthUriResponse
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          type: string
        authUri:
          description: The URI used by the IDP to authenticate the user.
          type: string
        sessionId:
          description: Session ID which should be passed in the following verifyAssertion request.
          type: string
        forExistingProvider:
          type: boolean
          description: True if the authUri is for user's existing provider.
        signinMethods:
          items:
            type: string
          description: All sign-in methods this user has used.
          type: array
        captchaRequired:
          description: True if captcha is required.
          type: boolean
      description: Response of creating the IDP authentication URL.
      id: CreateAuthUriResponse
      type: object
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      properties:
        idToken:
          description: The GITKit token or STS id token of the authenticated user.
          type: string
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        localId:
          type: string
          description: The local ID of the user.
      type: object
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
      description: Request to delete account.
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
      type: object
      description: Request to verify the IDP assertion.
      properties:
        returnRefreshToken:
          type: boolean
          description: Whether to return refresh tokens.
        postBody:
          type: string
          description: The post body if the request is a HTTP POST.
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          format: int64
          type: string
        pendingIdToken:
          description: The GITKit token for the non-trusted IDP pending to be confirmed by the user.
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        autoCreate:
          description: When it's true, automatically creates a new account if the user doesn't exist. When it's false, allows existing user to sign in normally and throws exception if the user doesn't exist.
          type: boolean
        tenantId:
          type: string
          description: For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
        sessionId:
          description: Session ID, which should match the one in previous createAuthUri request.
          type: string
        requestUri:
          type: string
          description: The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
        instanceId:
          type: string
          description: Instance id token of the app.
        returnIdpCredential:
          type: boolean
          description: Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
        tenantProjectNumber:
          format: uint64
          type: string
          description: Tenant project number to be used for idp discovery.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      description: Request to set the account information.
      type: object
      properties:
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit token.
          type: boolean
        delegatedProjectNumber:
          format: int64
          description: GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
          type: string
        phoneNumber:
          description: Privileged caller can update user with specified phone number.
          type: string
        createdAt:
          format: int64
          type: string
          description: The timestamp when the account is created.
        lastLoginAt:
          description: Last login timestamp.
          type: string
          format: int64
        captchaResponse:
          type: string
          description: Response to the captcha.
        upgradeToFederatedLogin:
          description: Mark the user to upgrade to federated login.
          type: boolean
        emailVerified:
          type: boolean
          description: Mark the email as verified or not.
        disableUser:
          type: boolean
          description: Whether to disable the user.
        email:
          description: The email of the user.
          type: string
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        instanceId:
          description: Instance id token of the app.
          type: string
        provider:
          type: array
          description: The associated IDPs of the user.
          items:
            type: string
        photoUrl:
          description: The photo url of the user.
          type: string
        validSince:
          format: int64
          description: Timestamp in seconds for valid login token.
          type: string
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        deleteProvider:
          type: array
          description: The IDPs the user request to delete.
          items:
            type: string
        displayName:
          type: string
          description: The name of the user.
        password:
          type: string
          description: The new password of the user.
        localId:
          type: string
          description: The local ID of the user.
        deleteAttribute:
          description: The attributes users request to delete.
          type: array
          items:
            type: string
        oobCode:
          type: string
          description: The out-of-band code of the change email request.
        captchaChallenge:
          description: The captcha challenge.
          type: string
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
    IdentitytoolkitRelyingpartySignOutUserRequest:
      description: Request to sign out user.
      properties:
        localId:
          description: The local ID of the user.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
      type: object
      id: IdentitytoolkitRelyingpartySignOutUserRequest
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      type: object
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      description: Response for Identitytoolkit-SendVerificationCode
      properties:
        sessionInfo:
          description: Encrypted session information
          type: string
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      additionalProperties:
        type: string
      description: Respone of getting public keys.
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
      type: object
    GetAccountInfoResponse:
      description: Response of getting account information.
      properties:
        kind:
          type: string
          default: identitytoolkit#GetAccountInfoResponse
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
        users:
          description: The info of the users.
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
      id: GetAccountInfoResponse
      type: object
    DeleteAccountResponse:
      id: DeleteAccountResponse
      properties:
        kind:
          default: identitytoolkit#DeleteAccountResponse
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
          type: string
      description: Respone of deleting account.
      type: object
    EmailTemplate:
      description: Template for an email template.
      id: EmailTemplate
      properties:
        format:
          type: string
          description: Email body format.
        replyTo:
          type: string
          description: Reply-to address.
        from:
          description: From address of the email.
          type: string
        fromDisplayName:
          type: string
          description: From display name.
        body:
          description: Email body.
          type: string
        subject:
          description: Subject of the email.
          type: string
      type: object
    Relyingparty:
      properties:
        continueUrl:
          type: string
          description: The url to continue to the Gitkit app
        canHandleCodeInApp:
          type: boolean
          description: whether or not the app can handle the oob code without first going to web
        challenge:
          type: string
          description: The recaptcha challenge presented to the user.
        requestType:
          type: string
          description: The request type.
        androidMinimumVersion:
          type: string
          description: minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
        email:
          description: The email of the user.
          type: string
        captchaResp:
          type: string
          description: The recaptcha response from the user.
        idToken:
          type: string
          description: The user's Gitkit login token for email change.
        androidInstallApp:
          description: whether or not to install the android app on the device where the link is opened
          type: boolean
        userIp:
          type: string
          description: The IP address of the user.
        iOSAppStoreId:
          type: string
          description: iOS app store id to download the app if it's not already installed
        iOSBundleId:
          type: string
          description: the iOS bundle id of iOS app to handle the action code
        kind:
          type: string
          default: identitytoolkit#relyingparty
          description: The fixed string "identitytoolkit#relyingparty".
        androidPackageName:
          type: string
          description: android package name of the android app to handle the action code
        newEmail:
          description: The new email if the code is for email change.
          type: string
      description: Request of getting a code for user confirmation (reset password, change email etc.)
      type: object
      id: Relyingparty
    IdentitytoolkitRelyingpartySignOutUserResponse:
      description: Response of signing out user.
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      type: object
      properties:
        localId:
          description: The local ID of the user.
          type: string
    VerifyAssertionResponse:
      type: object
      id: VerifyAssertionResponse
      properties:
        context:
          type: string
          description: The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
        errorMessage:
          description: Client error code.
          type: string
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
          type: integer
        needEmail:
          type: boolean
          description: Whether need client to supply email to complete the federated login flow.
        oauthTokenSecret:
          type: string
          description: The OAuth1 access token secret.
        email:
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
          type: string
        lastName:
          description: The last name of the user.
          type: string
        idToken:
          description: The ID token.
          type: string
        oauthScope:
          description: The scope for the OpenID OAuth extension.
          type: string
        screenName:
          type: string
          description: The screen_name of a Twitter user or the login name at Github.
        fullName:
          type: string
          description: The full name of the user.
        kind:
          type: string
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          default: identitytoolkit#VerifyAssertionResponse
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        displayName:
          description: The display name of the user.
          type: string
        emailVerified:
          description: The value is true if the IDP is also the email provider. It means the user owns the email.
          type: boolean
        federatedId:
          type: string
          description: The unique ID identifies the IdP account.
        timeZone:
          type: string
          description: The timezone of the user.
        appScheme:
          description: The custom scheme used by mobile app.
          type: string
        nickName:
          type: string
          description: The nick name of the user.
        oauthRequestToken:
          description: The user approved request token for the OpenID OAuth extension.
          type: string
        verifiedProvider:
          type: array
          items:
            type: string
          description: When action is 'map', contains the idps which can be used for confirmation.
        originalEmail:
          type: string
          description: The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.
        rawUserInfo:
          description: Raw IDP-returned user info.
          type: string
        inputEmail:
          type: string
          description: It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        providerId:
          description: The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the "providerId" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the "identifier" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.
          type: string
        emailRecycled:
          description: It's true if the email is recycled.
          type: boolean
        localId:
          type: string
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
        needConfirmation:
          type: boolean
          description: Whether the assertion is from a non-trusted IDP and need account linking confirmation.
        isNewUser:
          description: True if it's a new user sign-in, false if it's a returning user.
          type: boolean
        language:
          type: string
          description: The language preference of the user.
        photoUrl:
          description: The URI of the public accessible profiel picture.
          type: string
        firstName:
          type: string
          description: The first name of the user.
        appInstallationUrl:
          type: string
          description: URL for OTA app installation.
        oauthIdToken:
          type: string
          description: The OIDC id token.
        dateOfBirth:
          description: The birth date of the IdP account.
          type: string
        expiresIn:
          type: string
          description: If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
          format: int64
        action:
          type: string
          description: The action code.
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
      description: Response of verifying the IDP assertion.
    SignupNewUserResponse:
      properties:
        displayName:
          description: The name of the user.
          type: string
        refreshToken:
          type: string
          description: If idToken is STS id token, then this field will be refresh token.
        email:
          description: The email of the user.
          type: string
        expiresIn:
          description: If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
          format: int64
          type: string
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
        kind:
          default: identitytoolkit#SignupNewUserResponse
          type: string
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
        localId:
          type: string
          description: The RP local ID of the user.
      id: SignupNewUserResponse
      description: Response of signing up new user, creating anonymous user or anonymous user reauth.
      type: object
    UploadAccountResponse:
      description: Respone of uploading accounts in batch.
      id: UploadAccountResponse
      type: object
      properties:
        error:
          type: array
          items:
            properties:
              index:
                description: The index of the malformed account, starting from 0.
                format: int32
                type: integer
              message:
                description: Detailed error message for the account info.
                type: string
            type: object
          description: The error encountered while processing the account info.
        kind:
          default: identitytoolkit#UploadAccountResponse
          type: string
          description: The fixed string "identitytoolkit#UploadAccountResponse".
    VerifyPasswordResponse:
      properties:
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        email:
          type: string
          description: 'The email returned by the IdP. NOTE: The federated login user may not own the email.'
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        displayName:
          type: string
          description: The name of the user.
        kind:
          default: identitytoolkit#VerifyPasswordResponse
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
          type: string
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        oauthAccessToken:
          description: The OAuth2 access token.
          type: string
        expiresIn:
          type: string
          format: int64
          description: If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          type: integer
          format: int32
        photoUrl:
          description: The URI of the user's photo at IdP
          type: string
        localId:
          description: The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
          type: string
        registered:
          description: Whether the email is registered.
          type: boolean
      id: VerifyPasswordResponse
      type: object
      description: Request of verifying the password.
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        verifyPhoneNumber:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verifyCustomToken:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signOutUser:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resetPassword:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signupNewUser:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        uploadAccount:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        downloadAccount:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sendVerificationCode:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verifyAssertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verifyPassword:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        setProjectConfig:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        setAccountInfo:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        emailLinkSignin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty__recaptcha_param:
      id: google.identitytoolkit.relyingparty__recaptcha_param
      name: relyingparty__recaptcha_param
      title: Relyingparty__recaptcha_param
      methods:
        relyingparty_getRecaptchaParam:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty__recaptcha_param/methods/relyingparty_getRecaptchaParam'
        insert: []
        update: []
        delete: []
    relyingparty__account:
      id: google.identitytoolkit.relyingparty__account
      name: relyingparty__account
      title: Relyingparty__account
      methods:
        relyingparty_deleteAccount:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/relyingparty__account/methods/relyingparty_deleteAccount'
    relyingparty__account_info:
      id: google.identitytoolkit.relyingparty__account_info
      name: relyingparty__account_info
      title: Relyingparty__account_info
      methods:
        relyingparty_getAccountInfo:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty__account_info/methods/relyingparty_getAccountInfo'
        insert: []
        update: []
        delete: []
    relyingparty__auth_uri:
      id: google.identitytoolkit.relyingparty__auth_uri
      name: relyingparty__auth_uri
      title: Relyingparty__auth_uri
      methods:
        relyingparty_createAuthUri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/relyingparty__auth_uri/methods/relyingparty_createAuthUri'
        update: []
        delete: []
    relyingparty__oob_confirmation_code:
      id: google.identitytoolkit.relyingparty__oob_confirmation_code
      name: relyingparty__oob_confirmation_code
      title: Relyingparty__oob_confirmation_code
      methods:
        relyingparty_getOobConfirmationCode:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty__oob_confirmation_code/methods/relyingparty_getOobConfirmationCode'
        insert: []
        update: []
        delete: []
    relyingparty__public_keys:
      id: google.identitytoolkit.relyingparty__public_keys
      name: relyingparty__public_keys
      title: Relyingparty__public_keys
      methods:
        relyingparty_getPublicKeys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty__project_config:
      id: google.identitytoolkit.relyingparty__project_config
      name: relyingparty__project_config
      title: Relyingparty__project_config
      methods:
        relyingparty_getProjectConfig:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relyingparty__project_config/methods/relyingparty_getProjectConfig'
        insert: []
        update: []
        delete: []
paths:
  /verifyPhoneNumber:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: Verifies ownership of a phone number and creates/updates the user account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty__recaptcha_param
      x-stackQL-verb: select
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty__account
      x-stackQL-verb: delete
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty__account_info
      x-stackQL-verb: select
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty__auth_uri
      x-stackQL-verb: insert
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty__oob_confirmation_code
      x-stackQL-verb: select
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
      x-stackQL-resource: relyingparty__public_keys
      x-stackQL-verb: exec
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
      parameters:
        - in: query
          name: projectNumber
          schema:
            type: string
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty__project_config
      x-stackQL-verb: select
