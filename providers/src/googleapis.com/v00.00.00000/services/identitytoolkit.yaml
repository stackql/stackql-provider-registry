openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2024-06-03'
externalDocs:
  url: https://developers.google.com/identity-toolkit/v3/
servers:
  - url: https://www.googleapis.com/identitytoolkit/v3/relyingparty
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    CreateAuthUriResponse:
      id: CreateAuthUriResponse
      type: object
      description: Response of creating the IDP authentication URL.
      properties:
        allProviders:
          type: array
          description: all providers the user has once used to do federated login
          items:
            type: string
        authUri:
          type: string
          description: The URI used by the IDP to authenticate the user.
        captchaRequired:
          type: boolean
          description: True if captcha is required.
        forExistingProvider:
          type: boolean
          description: True if the authUri is for user's existing provider.
        kind:
          type: string
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          default: identitytoolkit#CreateAuthUriResponse
        providerId:
          type: string
          description: The provider ID of the auth URI.
        registered:
          type: boolean
          description: Whether the user is registered if the identifier is an email.
        sessionId:
          type: string
          description: >-
            Session ID which should be passed in the following verifyAssertion
            request.
        signinMethods:
          type: array
          description: All sign-in methods this user has used.
          items:
            type: string
    DeleteAccountResponse:
      id: DeleteAccountResponse
      type: object
      description: Respone of deleting account.
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
          default: identitytoolkit#DeleteAccountResponse
    DownloadAccountResponse:
      id: DownloadAccountResponse
      type: object
      description: Response of downloading accounts in batch.
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
          default: identitytoolkit#DownloadAccountResponse
        nextPageToken:
          type: string
          description: >-
            The next page token. To be used in a subsequent request to return
            the next page of results.
        users:
          type: array
          description: The user accounts data.
          items:
            $ref: '#/components/schemas/UserInfo'
    EmailLinkSigninResponse:
      id: EmailLinkSigninResponse
      type: object
      description: Response of email signIn.
      properties:
        email:
          type: string
          description: The user's email.
        expiresIn:
          type: string
          description: Expiration time of STS id token in seconds.
          format: int64
        idToken:
          type: string
          description: The STS id token to login the newly signed in user.
        isNewUser:
          type: boolean
          description: Whether the user is new.
        kind:
          type: string
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          default: identitytoolkit#EmailLinkSigninResponse
        localId:
          type: string
          description: The RP local ID of the user.
        refreshToken:
          type: string
          description: The refresh token for the signed in user.
    EmailTemplate:
      id: EmailTemplate
      type: object
      description: Template for an email template.
      properties:
        body:
          type: string
          description: Email body.
        format:
          type: string
          description: Email body format.
        from:
          type: string
          description: From address of the email.
        fromDisplayName:
          type: string
          description: From display name.
        replyTo:
          type: string
          description: Reply-to address.
        subject:
          type: string
          description: Subject of the email.
    GetAccountInfoResponse:
      id: GetAccountInfoResponse
      type: object
      description: Response of getting account information.
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          default: identitytoolkit#GetAccountInfoResponse
        users:
          type: array
          description: The info of the users.
          items:
            $ref: '#/components/schemas/UserInfo'
    GetOobConfirmationCodeResponse:
      id: GetOobConfirmationCodeResponse
      type: object
      description: >-
        Response of getting a code for user confirmation (reset password, change
        email etc.).
      properties:
        email:
          type: string
          description: The email address that the email is sent to.
        kind:
          type: string
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
          default: identitytoolkit#GetOobConfirmationCodeResponse
        oobCode:
          type: string
          description: The code to be send to the user.
    GetRecaptchaParamResponse:
      id: GetRecaptchaParamResponse
      type: object
      description: Response of getting recaptcha param.
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          default: identitytoolkit#GetRecaptchaParamResponse
        recaptchaSiteKey:
          type: string
          description: Site key registered at recaptcha.
        recaptchaStoken:
          type: string
          description: >-
            The stoken field for the recaptcha widget, used to request captcha
            challenge.
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
      type: object
      description: Request to get the IDP authentication URL.
      properties:
        appId:
          type: string
          description: >-
            The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for
            Android, BUNDLE_ID for iOS.
        authFlowType:
          type: string
          description: >-
            Explicitly specify the auth flow type. Currently only support
            "CODE_FLOW" type. The field is only used for Google provider.
        clientId:
          type: string
          description: The relying party OAuth client ID.
        context:
          type: string
          description: >-
            The opaque value used by the client to maintain context info between
            the authentication request and the IDP callback.
        continueUri:
          type: string
          description: >-
            The URI to which the IDP redirects the user after the federated
            login flow.
        customParameter:
          type: object
          description: >-
            The query parameter that client can customize by themselves in auth
            url. The following parameters are reserved for server so that they
            cannot be customized by clients: client_id, response_type, scope,
            redirect_uri, state, oauth_token.
          additionalProperties:
            type: string
            description: The customized query parameter.
        hostedDomain:
          type: string
          description: >-
            The hosted domain to restrict sign-in to accounts at that domain for
            Google Apps hosted accounts.
        identifier:
          type: string
          description: The email or federated ID of the user.
        oauthConsumerKey:
          type: string
          description: The developer's consumer key for OpenId OAuth Extension
        oauthScope:
          type: string
          description: >-
            Additional oauth scopes, beyond the basid user profile, that the
            user would be prompted to grant
        openidRealm:
          type: string
          description: >-
            Optional realm for OpenID protocol. The sub string
            "scheme://domain:port" of the param "continueUri" is used if this is
            not set.
        otaApp:
          type: string
          description: The native app package for OTA installation.
        providerId:
          type: string
          description: >-
            The IdP ID. For white listed IdPs it's a short domain name e.g.
            google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs
            it's the OP identifier.
        sessionId:
          type: string
          description: The session_id passed by client.
        tenantId:
          type: string
          description: >-
            For multi-tenant use cases, in order to construct sign-in URL with
            the correct IDP parameters, Firebear needs to know which Tenant to
            retrieve IDP configs from.
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
      type: object
      description: Request to delete account.
      properties:
        delegatedProjectNumber:
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          format: int64
        idToken:
          type: string
          description: The GITKit token or STS id token of the authenticated user.
        localId:
          type: string
          description: The local ID of the user.
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
      type: object
      description: Request to download user account in batch.
      properties:
        delegatedProjectNumber:
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          format: int64
        maxResults:
          type: integer
          description: The max number of results to return in the response.
          format: uint32
        nextPageToken:
          type: string
          description: >-
            The token for the next page. This should be taken from the previous
            response.
        targetProjectId:
          type: string
          description: >-
            Specify which project (field value is actually project id) to
            operate. Only used when provided credential.
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      type: object
      description: Request to sign in with email.
      properties:
        email:
          type: string
          description: The email address of the user.
        idToken:
          type: string
          description: Token for linking flow.
        oobCode:
          type: string
          description: The confirmation code.
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
      type: object
      description: Request to get the account information.
      properties:
        delegatedProjectNumber:
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          format: int64
        email:
          type: array
          description: The list of emails of the users to inquiry.
          items:
            type: string
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        localId:
          type: array
          description: The list of local ID's of the users to inquiry.
          items:
            type: string
        phoneNumber:
          type: array
          description: Privileged caller can query users by specified phone number.
          items:
            type: string
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      type: object
      description: Response of getting the project configuration.
      properties:
        allowPasswordUser:
          type: boolean
          description: Whether to allow password user sign in or sign up.
        apiKey:
          type: string
          description: Browser API key, needed when making http request to Apiary.
        authorizedDomains:
          type: array
          description: Authorized domains.
          items:
            type: string
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
        dynamicLinksDomain:
          type: string
        enableAnonymousUser:
          type: boolean
          description: Whether anonymous user is enabled.
        idpConfig:
          type: array
          description: OAuth2 provider configuration.
          items:
            $ref: '#/components/schemas/IdpConfig'
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        projectId:
          type: string
          description: Project ID of the relying party.
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
      type: object
      description: Respone of getting public keys.
      additionalProperties:
        type: string
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
      type: object
      description: Request to reset the password.
      properties:
        email:
          type: string
          description: The email address of the user.
        newPassword:
          type: string
          description: The new password inputted by the user.
        oldPassword:
          type: string
          description: The old password inputted by the user.
        oobCode:
          type: string
          description: The confirmation code.
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
      type: object
      description: Request for Identitytoolkit-SendVerificationCode
      properties:
        iosReceipt:
          type: string
          description: Receipt of successful app token validation with APNS.
        iosSecret:
          type: string
          description: Secret delivered to iOS app via APNS.
        phoneNumber:
          type: string
          description: The phone number to send the verification code to in E.164 format.
        recaptchaToken:
          type: string
          description: Recaptcha solution.
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      type: object
      description: Response for Identitytoolkit-SendVerificationCode
      properties:
        sessionInfo:
          type: string
          description: Encrypted session information
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
      type: object
      description: Request to set the account information.
      properties:
        captchaChallenge:
          type: string
          description: The captcha challenge.
        captchaResponse:
          type: string
          description: Response to the captcha.
        createdAt:
          type: string
          description: The timestamp when the account is created.
          format: int64
        customAttributes:
          type: string
          description: The custom attributes to be set in the user's id token.
        delegatedProjectNumber:
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          format: int64
        deleteAttribute:
          type: array
          description: The attributes users request to delete.
          items:
            type: string
        deleteProvider:
          type: array
          description: The IDPs the user request to delete.
          items:
            type: string
        disableUser:
          type: boolean
          description: Whether to disable the user.
        displayName:
          type: string
          description: The name of the user.
        email:
          type: string
          description: The email of the user.
        emailVerified:
          type: boolean
          description: Mark the email as verified or not.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        instanceId:
          type: string
          description: Instance id token of the app.
        lastLoginAt:
          type: string
          description: Last login timestamp.
          format: int64
        localId:
          type: string
          description: The local ID of the user.
        oobCode:
          type: string
          description: The out-of-band code of the change email request.
        password:
          type: string
          description: The new password of the user.
        phoneNumber:
          type: string
          description: Privileged caller can update user with specified phone number.
        photoUrl:
          type: string
          description: The photo url of the user.
        provider:
          type: array
          description: The associated IDPs of the user.
          items:
            type: string
        returnSecureToken:
          type: boolean
          description: >-
            Whether return sts id token and refresh token instead of gitkit
            token.
        upgradeToFederatedLogin:
          type: boolean
          description: Mark the user to upgrade to federated login.
        validSince:
          type: string
          description: Timestamp in seconds for valid login token.
          format: int64
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
      type: object
      description: Request to set the project configuration.
      properties:
        allowPasswordUser:
          type: boolean
          description: Whether to allow password user sign in or sign up.
        apiKey:
          type: string
          description: Browser API key, needed when making http request to Apiary.
        authorizedDomains:
          type: array
          description: Authorized domains for widget redirect.
          items:
            type: string
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Change email template.
        delegatedProjectNumber:
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          format: int64
        enableAnonymousUser:
          type: boolean
          description: Whether to enable anonymous user.
        idpConfig:
          type: array
          description: Oauth2 provider configuration.
          items:
            $ref: '#/components/schemas/IdpConfig'
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Verify email template.
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      type: object
      description: Response of setting the project configuration.
      properties:
        projectId:
          type: string
          description: Project ID of the relying party.
    IdentitytoolkitRelyingpartySignOutUserRequest:
      id: IdentitytoolkitRelyingpartySignOutUserRequest
      type: object
      description: Request to sign out user.
      properties:
        instanceId:
          type: string
          description: Instance id token of the app.
        localId:
          type: string
          description: The local ID of the user.
    IdentitytoolkitRelyingpartySignOutUserResponse:
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      type: object
      description: Response of signing out user.
      properties:
        localId:
          type: string
          description: The local ID of the user.
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
      type: object
      description: >-
        Request to signup new user, create anonymous user or anonymous user
        reauth.
      properties:
        captchaChallenge:
          type: string
          description: The captcha challenge.
        captchaResponse:
          type: string
          description: Response to the captcha.
        disabled:
          type: boolean
          description: Whether to disable the user. Only can be used by service account.
        displayName:
          type: string
          description: The name of the user.
        email:
          type: string
          description: The email of the user.
        emailVerified:
          type: boolean
          description: >-
            Mark the email as verified or not. Only can be used by service
            account.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        instanceId:
          type: string
          description: Instance id token of the app.
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        password:
          type: string
          description: The new password of the user.
        phoneNumber:
          type: string
          description: Privileged caller can create user with specified phone number.
        photoUrl:
          type: string
          description: The photo url of the user.
        tenantId:
          type: string
          description: >-
            For multi-tenant use cases, in order to construct sign-in URL with
            the correct IDP parameters, Firebear needs to know which Tenant to
            retrieve IDP configs from.
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
      type: object
      description: Request to upload user account in batch.
      properties:
        allowOverwrite:
          type: boolean
          description: Whether allow overwrite existing account when user local_id exists.
        blockSize:
          type: integer
          format: int32
        cpuMemCost:
          type: integer
          description: The following 4 fields are for standard scrypt algorithm.
          format: int32
        delegatedProjectNumber:
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          format: int64
        dkLen:
          type: integer
          format: int32
        hashAlgorithm:
          type: string
          description: The password hash algorithm.
        memoryCost:
          type: integer
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
          format: int32
        parallelization:
          type: integer
          format: int32
        rounds:
          type: integer
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
          format: int32
        saltSeparator:
          type: string
          description: The salt separator.
          format: byte
        sanityCheck:
          type: boolean
          description: >-
            If true, backend will do sanity check(including duplicate email and
            federated id) when uploading account.
        signerKey:
          type: string
          description: The key for to hash the password.
          format: byte
        targetProjectId:
          type: string
          description: >-
            Specify which project (field value is actually project id) to
            operate. Only used when provided credential.
        users:
          type: array
          description: The account info to be stored.
          items:
            $ref: '#/components/schemas/UserInfo'
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
      type: object
      description: Request to verify the IDP assertion.
      properties:
        autoCreate:
          type: boolean
          description: >-
            When it's true, automatically creates a new account if the user
            doesn't exist. When it's false, allows existing user to sign in
            normally and throws exception if the user doesn't exist.
        delegatedProjectNumber:
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          format: int64
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        instanceId:
          type: string
          description: Instance id token of the app.
        pendingIdToken:
          type: string
          description: >-
            The GITKit token for the non-trusted IDP pending to be confirmed by
            the user.
        postBody:
          type: string
          description: The post body if the request is a HTTP POST.
        requestUri:
          type: string
          description: >-
            The URI to which the IDP redirects the user back. It may contain
            federated login result params added by the IDP.
        returnIdpCredential:
          type: boolean
          description: >-
            Whether return 200 and IDP credential rather than throw exception
            when federated id is already linked.
        returnRefreshToken:
          type: boolean
          description: Whether to return refresh tokens.
        returnSecureToken:
          type: boolean
          description: >-
            Whether return sts id token and refresh token instead of gitkit
            token.
        sessionId:
          type: string
          description: >-
            Session ID, which should match the one in previous createAuthUri
            request.
        tenantId:
          type: string
          description: >-
            For multi-tenant use cases, in order to construct sign-in URL with
            the correct IDP parameters, Firebear needs to know which Tenant to
            retrieve IDP configs from.
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      type: object
      description: Request to verify a custom token
      properties:
        delegatedProjectNumber:
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          format: int64
        instanceId:
          type: string
          description: Instance id token of the app.
        returnSecureToken:
          type: boolean
          description: >-
            Whether return sts id token and refresh token instead of gitkit
            token.
        token:
          type: string
          description: The custom token to verify
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
      type: object
      description: Request to verify the password.
      properties:
        captchaChallenge:
          type: string
          description: The captcha challenge.
        captchaResponse:
          type: string
          description: Response to the captcha.
        delegatedProjectNumber:
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          format: int64
        email:
          type: string
          description: The email of the user.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        instanceId:
          type: string
          description: Instance id token of the app.
        password:
          type: string
          description: The password inputed by the user.
        pendingIdToken:
          type: string
          description: >-
            The GITKit token for the non-trusted IDP, which is to be confirmed
            by the user.
        returnSecureToken:
          type: boolean
          description: >-
            Whether return sts id token and refresh token instead of gitkit
            token.
        tenantId:
          type: string
          description: >-
            For multi-tenant use cases, in order to construct sign-in URL with
            the correct IDP parameters, Firebear needs to know which Tenant to
            retrieve IDP configs from.
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      type: object
      description: Request for Identitytoolkit-VerifyPhoneNumber
      properties:
        code:
          type: string
        idToken:
          type: string
        operation:
          type: string
        phoneNumber:
          type: string
        sessionInfo:
          type: string
          description: >-
            The session info previously returned by
            IdentityToolkit-SendVerificationCode.
        temporaryProof:
          type: string
        verificationProof:
          type: string
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
      type: object
      description: Response for Identitytoolkit-VerifyPhoneNumber
      properties:
        expiresIn:
          type: string
          format: int64
        idToken:
          type: string
        isNewUser:
          type: boolean
        localId:
          type: string
        phoneNumber:
          type: string
        refreshToken:
          type: string
        temporaryProof:
          type: string
        temporaryProofExpiresIn:
          type: string
          format: int64
        verificationProof:
          type: string
        verificationProofExpiresIn:
          type: string
          format: int64
    IdpConfig:
      id: IdpConfig
      type: object
      description: Template for a single idp configuration.
      properties:
        clientId:
          type: string
          description: OAuth2 client ID.
        enabled:
          type: boolean
          description: Whether this IDP is enabled.
        experimentPercent:
          type: integer
          description: >-
            Percent of users who will be prompted/redirected federated login for
            this IDP.
          format: int32
        provider:
          type: string
          description: OAuth2 provider.
        secret:
          type: string
          description: OAuth2 client secret.
        whitelistedAudiences:
          type: array
          description: Whitelisted client IDs for audience check.
          items:
            type: string
    Relyingparty:
      id: Relyingparty
      type: object
      description: >-
        Request of getting a code for user confirmation (reset password, change
        email etc.)
      properties:
        androidInstallApp:
          type: boolean
          description: >-
            whether or not to install the android app on the device where the
            link is opened
        androidMinimumVersion:
          type: string
          description: >-
            minimum version of the app. if the version on the device is lower
            than this version then the user is taken to the play store to
            upgrade the app
        androidPackageName:
          type: string
          description: android package name of the android app to handle the action code
        canHandleCodeInApp:
          type: boolean
          description: >-
            whether or not the app can handle the oob code without first going
            to web
        captchaResp:
          type: string
          description: The recaptcha response from the user.
        challenge:
          type: string
          description: The recaptcha challenge presented to the user.
        continueUrl:
          type: string
          description: The url to continue to the Gitkit app
        email:
          type: string
          description: The email of the user.
        iOSAppStoreId:
          type: string
          description: iOS app store id to download the app if it's not already installed
        iOSBundleId:
          type: string
          description: the iOS bundle id of iOS app to handle the action code
        idToken:
          type: string
          description: The user's Gitkit login token for email change.
        kind:
          type: string
          description: The fixed string "identitytoolkit#relyingparty".
          default: identitytoolkit#relyingparty
        newEmail:
          type: string
          description: The new email if the code is for email change.
        requestType:
          type: string
          description: The request type.
        userIp:
          type: string
          description: The IP address of the user.
    ResetPasswordResponse:
      id: ResetPasswordResponse
      type: object
      description: Response of resetting the password.
      properties:
        email:
          type: string
          description: >-
            The user's email. If the out-of-band code is for email recovery, the
            user's original email.
        kind:
          type: string
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          default: identitytoolkit#ResetPasswordResponse
        newEmail:
          type: string
          description: If the out-of-band code is for email recovery, the user's new email.
        requestType:
          type: string
          description: The request type.
    SetAccountInfoResponse:
      id: SetAccountInfoResponse
      type: object
      description: Respone of setting the account information.
      properties:
        displayName:
          type: string
          description: The name of the user.
        email:
          type: string
          description: The email of the user.
        emailVerified:
          type: boolean
          description: If email has been verified.
        expiresIn:
          type: string
          description: >-
            If idToken is STS id token, then this field will be expiration time
            of STS id token in seconds.
          format: int64
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
        kind:
          type: string
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
          default: identitytoolkit#SetAccountInfoResponse
        localId:
          type: string
          description: The local ID of the user.
        newEmail:
          type: string
          description: The new email the user attempts to change to.
        passwordHash:
          type: string
          description: The user's hashed password.
          format: byte
        photoUrl:
          type: string
          description: The photo url of the user.
        providerUserInfo:
          type: array
          description: The user's profiles at the associated IdPs.
          items:
            type: object
            properties:
              displayName:
                type: string
                description: The user's display name at the IDP.
              federatedId:
                type: string
                description: User's identifier at IDP.
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
              providerId:
                type: string
                description: >-
                  The IdP ID. For whitelisted IdPs it's a short domain name,
                  e.g., google.com, aol.com, live.net and yahoo.com. For other
                  OpenID IdPs it's the OP identifier.
        refreshToken:
          type: string
          description: If idToken is STS id token, then this field will be refresh token.
    SignupNewUserResponse:
      id: SignupNewUserResponse
      type: object
      description: >-
        Response of signing up new user, creating anonymous user or anonymous
        user reauth.
      properties:
        displayName:
          type: string
          description: The name of the user.
        email:
          type: string
          description: The email of the user.
        expiresIn:
          type: string
          description: >-
            If idToken is STS id token, then this field will be expiration time
            of STS id token in seconds.
          format: int64
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
        kind:
          type: string
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
          default: identitytoolkit#SignupNewUserResponse
        localId:
          type: string
          description: The RP local ID of the user.
        refreshToken:
          type: string
          description: If idToken is STS id token, then this field will be refresh token.
    UploadAccountResponse:
      id: UploadAccountResponse
      type: object
      description: Respone of uploading accounts in batch.
      properties:
        error:
          type: array
          description: The error encountered while processing the account info.
          items:
            type: object
            properties:
              index:
                type: integer
                description: The index of the malformed account, starting from 0.
                format: int32
              message:
                type: string
                description: Detailed error message for the account info.
        kind:
          type: string
          description: The fixed string "identitytoolkit#UploadAccountResponse".
          default: identitytoolkit#UploadAccountResponse
    UserInfo:
      id: UserInfo
      type: object
      description: Template for an individual account info.
      properties:
        createdAt:
          type: string
          description: User creation timestamp.
          format: int64
        customAttributes:
          type: string
          description: The custom attributes to be set in the user's id token.
        customAuth:
          type: boolean
          description: Whether the user is authenticated by the developer.
        disabled:
          type: boolean
          description: Whether the user is disabled.
        displayName:
          type: string
          description: The name of the user.
        email:
          type: string
          description: The email of the user.
        emailVerified:
          type: boolean
          description: Whether the email has been verified.
        lastLoginAt:
          type: string
          description: last login timestamp.
          format: int64
        localId:
          type: string
          description: The local ID of the user.
        passwordHash:
          type: string
          description: The user's hashed password.
          format: byte
        passwordUpdatedAt:
          type: number
          description: The timestamp when the password was last updated.
          format: double
        phoneNumber:
          type: string
          description: User's phone number.
        photoUrl:
          type: string
          description: The URL of the user profile photo.
        providerUserInfo:
          type: array
          description: The IDP of the user.
          items:
            type: object
            properties:
              displayName:
                type: string
                description: The user's display name at the IDP.
              email:
                type: string
                description: User's email at IDP.
              federatedId:
                type: string
                description: User's identifier at IDP.
              phoneNumber:
                type: string
                description: User's phone number.
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
              providerId:
                type: string
                description: >-
                  The IdP ID. For white listed IdPs it's a short domain name,
                  e.g., google.com, aol.com, live.net and yahoo.com. For other
                  OpenID IdPs it's the OP identifier.
              rawId:
                type: string
                description: User's raw identifier directly returned from IDP.
              screenName:
                type: string
                description: User's screen name at Twitter or login name at Github.
        rawPassword:
          type: string
          description: The user's plain text password.
        salt:
          type: string
          description: The user's password salt.
          format: byte
        screenName:
          type: string
          description: User's screen name at Twitter or login name at Github.
        validSince:
          type: string
          description: Timestamp in seconds for valid login token.
          format: int64
        version:
          type: integer
          description: Version of the user's password.
          format: int32
    VerifyAssertionResponse:
      id: VerifyAssertionResponse
      type: object
      description: Response of verifying the IDP assertion.
      properties:
        action:
          type: string
          description: The action code.
        appInstallationUrl:
          type: string
          description: URL for OTA app installation.
        appScheme:
          type: string
          description: The custom scheme used by mobile app.
        context:
          type: string
          description: >-
            The opaque value used by the client to maintain context info between
            the authentication request and the IDP callback.
        dateOfBirth:
          type: string
          description: The birth date of the IdP account.
        displayName:
          type: string
          description: The display name of the user.
        email:
          type: string
          description: >-
            The email returned by the IdP. NOTE: The federated login user may
            not own the email.
        emailRecycled:
          type: boolean
          description: It's true if the email is recycled.
        emailVerified:
          type: boolean
          description: >-
            The value is true if the IDP is also the email provider. It means
            the user owns the email.
        errorMessage:
          type: string
          description: Client error code.
        expiresIn:
          type: string
          description: >-
            If idToken is STS id token, then this field will be expiration time
            of STS id token in seconds.
          format: int64
        federatedId:
          type: string
          description: The unique ID identifies the IdP account.
        firstName:
          type: string
          description: The first name of the user.
        fullName:
          type: string
          description: The full name of the user.
        idToken:
          type: string
          description: The ID token.
        inputEmail:
          type: string
          description: >-
            It's the identifier param in the createAuthUri request if the
            identifier is an email. It can be used to check whether the user
            input email is different from the asserted email.
        isNewUser:
          type: boolean
          description: True if it's a new user sign-in, false if it's a returning user.
        kind:
          type: string
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          default: identitytoolkit#VerifyAssertionResponse
        language:
          type: string
          description: The language preference of the user.
        lastName:
          type: string
          description: The last name of the user.
        localId:
          type: string
          description: >-
            The RP local ID if it's already been mapped to the IdP account
            identified by the federated ID.
        needConfirmation:
          type: boolean
          description: >-
            Whether the assertion is from a non-trusted IDP and need account
            linking confirmation.
        needEmail:
          type: boolean
          description: >-
            Whether need client to supply email to complete the federated login
            flow.
        nickName:
          type: string
          description: The nick name of the user.
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        oauthExpireIn:
          type: integer
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
        oauthIdToken:
          type: string
          description: The OIDC id token.
        oauthRequestToken:
          type: string
          description: The user approved request token for the OpenID OAuth extension.
        oauthScope:
          type: string
          description: The scope for the OpenID OAuth extension.
        oauthTokenSecret:
          type: string
          description: The OAuth1 access token secret.
        originalEmail:
          type: string
          description: >-
            The original email stored in the mapping storage. It's returned when
            the federated ID is associated to a different email.
        photoUrl:
          type: string
          description: The URI of the public accessible profiel picture.
        providerId:
          type: string
          description: >-
            The IdP ID. For white listed IdPs it's a short domain name e.g.
            google.com, aol.com, live.net and yahoo.com. If the "providerId"
            param is set to OpenID OP identifer other than the whilte listed
            IdPs the OP identifier is returned. If the "identifier" param is
            federated ID in the createAuthUri request. The domain part of the
            federated ID is returned.
        rawUserInfo:
          type: string
          description: Raw IDP-returned user info.
        refreshToken:
          type: string
          description: If idToken is STS id token, then this field will be refresh token.
        screenName:
          type: string
          description: The screen_name of a Twitter user or the login name at Github.
        timeZone:
          type: string
          description: The timezone of the user.
        verifiedProvider:
          type: array
          description: >-
            When action is 'map', contains the idps which can be used for
            confirmation.
          items:
            type: string
    VerifyCustomTokenResponse:
      id: VerifyCustomTokenResponse
      type: object
      description: Response from verifying a custom token
      properties:
        expiresIn:
          type: string
          description: >-
            If idToken is STS id token, then this field will be expiration time
            of STS id token in seconds.
          format: int64
        idToken:
          type: string
          description: The GITKit token for authenticated user.
        isNewUser:
          type: boolean
          description: True if it's a new user sign-in, false if it's a returning user.
        kind:
          type: string
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
          default: identitytoolkit#VerifyCustomTokenResponse
        refreshToken:
          type: string
          description: If idToken is STS id token, then this field will be refresh token.
    VerifyPasswordResponse:
      id: VerifyPasswordResponse
      type: object
      description: Request of verifying the password.
      properties:
        displayName:
          type: string
          description: The name of the user.
        email:
          type: string
          description: >-
            The email returned by the IdP. NOTE: The federated login user may
            not own the email.
        expiresIn:
          type: string
          description: >-
            If idToken is STS id token, then this field will be expiration time
            of STS id token in seconds.
          format: int64
        idToken:
          type: string
          description: The GITKit token for authenticated user.
        kind:
          type: string
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
          default: identitytoolkit#VerifyPasswordResponse
        localId:
          type: string
          description: >-
            The RP local ID if it's already been mapped to the IdP account
            identified by the federated ID.
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        oauthExpireIn:
          type: integer
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
        photoUrl:
          type: string
          description: The URI of the user's photo at IdP
        refreshToken:
          type: string
          description: If idToken is STS id token, then this field will be refresh token.
        registered:
          type: boolean
          description: Whether the email is registered.
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        An opaque string that represents a user for quota purposes. Must not
        exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  x-stackQL-resources:
    relyingparty_auth_uri:
      id: google.identitytoolkit.relyingparty_auth_uri
      name: relyingparty_auth_uri
      title: Relyingparty_auth_uri
      methods:
        create_auth_uri:
          operation:
            $ref: '#/paths/~1createAuthUri/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/relyingparty_auth_uri/methods/create_auth_uri
        update: []
        delete: []
    relyingparty_account:
      id: google.identitytoolkit.relyingparty_account
      name: relyingparty_account
      title: Relyingparty_account
      methods:
        delete_account:
          operation:
            $ref: '#/paths/~1deleteAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty:
      id: google.identitytoolkit.relyingparty
      name: relyingparty
      title: Relyingparty
      methods:
        download_account:
          operation:
            $ref: '#/paths/~1downloadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        email_link_signin:
          operation:
            $ref: '#/paths/~1emailLinkSignin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1resetPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_verification_code:
          operation:
            $ref: '#/paths/~1sendVerificationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_account_info:
          operation:
            $ref: '#/paths/~1setAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_project_config:
          operation:
            $ref: '#/paths/~1setProjectConfig/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sign_out_user:
          operation:
            $ref: '#/paths/~1signOutUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        signup_new_user:
          operation:
            $ref: '#/paths/~1signupNewUser/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_account:
          operation:
            $ref: '#/paths/~1uploadAccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_assertion:
          operation:
            $ref: '#/paths/~1verifyAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_custom_token:
          operation:
            $ref: '#/paths/~1verifyCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_password:
          operation:
            $ref: '#/paths/~1verifyPassword/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_phone_number:
          operation:
            $ref: '#/paths/~1verifyPhoneNumber/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_account_info:
      id: google.identitytoolkit.relyingparty_account_info
      name: relyingparty_account_info
      title: Relyingparty_account_info
      methods:
        get_account_info:
          operation:
            $ref: '#/paths/~1getAccountInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_oob_confirmation_code:
      id: google.identitytoolkit.relyingparty_oob_confirmation_code
      name: relyingparty_oob_confirmation_code
      title: Relyingparty_oob_confirmation_code
      methods:
        get_oob_confirmation_code:
          operation:
            $ref: '#/paths/~1getOobConfirmationCode/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_project_config:
      id: google.identitytoolkit.relyingparty_project_config
      name: relyingparty_project_config
      title: Relyingparty_project_config
      methods:
        get_project_config:
          operation:
            $ref: '#/paths/~1getProjectConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/relyingparty_project_config/methods/get_project_config
        insert: []
        update: []
        delete: []
    relyingparty_public_keys:
      id: google.identitytoolkit.relyingparty_public_keys
      name: relyingparty_public_keys
      title: Relyingparty_public_keys
      methods:
        get_public_keys:
          operation:
            $ref: '#/paths/~1publicKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relyingparty_recaptcha_param:
      id: google.identitytoolkit.relyingparty_recaptcha_param
      name: relyingparty_recaptcha_param
      title: Relyingparty_recaptcha_param
      methods:
        get_recaptcha_param:
          operation:
            $ref: '#/paths/~1getRecaptchaParam/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/relyingparty_recaptcha_param/methods/get_recaptcha_param
        insert: []
        update: []
        delete: []
paths:
  /createAuthUri:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse
      parameters:
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
        - in: query
          name: projectNumber
          schema:
            type: string
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse
  /signOutUser:
    parameters: *ref_1
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
  /verifyPhoneNumber:
    parameters: *ref_1
    post:
      description: >-
        Verifies ownership of a phone number and creates/updates the user
        account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
