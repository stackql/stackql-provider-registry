openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Places API (New)
  description: ''
  version: v1
  x-discovery-doc-revision: '20250826'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://mapsplatform.google.com/maps-products/#places-section
servers:
  - url: https://places.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/maps-platform.places: >-
              Private Service:
              https://www.googleapis.com/auth/maps-platform.places
            https://www.googleapis.com/auth/maps-platform.places.autocomplete: >-
              Private Service:
              https://www.googleapis.com/auth/maps-platform.places.autocomplete
            https://www.googleapis.com/auth/maps-platform.places.details: >-
              Private Service:
              https://www.googleapis.com/auth/maps-platform.places.details
            https://www.googleapis.com/auth/maps-platform.places.getphotomedia: >-
              Private Service:
              https://www.googleapis.com/auth/maps-platform.places.getphotomedia
            https://www.googleapis.com/auth/maps-platform.places.nearbysearch: >-
              Private Service:
              https://www.googleapis.com/auth/maps-platform.places.nearbysearch
            https://www.googleapis.com/auth/maps-platform.places.textsearch: >-
              Private Service:
              https://www.googleapis.com/auth/maps-platform.places.textsearch
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleMapsPlacesV1SearchNearbyRequest:
      id: GoogleMapsPlacesV1SearchNearbyRequest
      description: 'Request proto for Search Nearby. '
      type: object
      properties:
        languageCode:
          description: >-
            Place details will be displayed with the preferred language if
            available. If the language code is unspecified or unrecognized,
            place details of any language may be returned, with a preference for
            English if such details exist. Current list of supported languages:
            https://developers.google.com/maps/faq#languagesupport.
          type: string
        regionCode:
          description: >-
            The Unicode country/region code (CLDR) of the location where the
            request is coming from. This parameter is used to display the place
            details, like region-specific place name, if available. The
            parameter can affect results based on applicable law. For more
            information, see
            https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html.
            Note that 3-digit region codes are not currently supported.
          type: string
        includedTypes:
          description: >-
            Included Place type (eg, "restaurant" or "gas_station") from
            https://developers.google.com/maps/documentation/places/web-service/place-types.
            Up to 50 types from [Table
            A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
            may be specified. If there are any conflicting types, i.e. a type
            appears in both included_types and excluded_types, an
            INVALID_ARGUMENT error is returned. If a Place type is specified
            with multiple type restrictions, only places that satisfy all of the
            restrictions are returned. For example, if we have {included_types =
            ["restaurant"], excluded_primary_types = ["restaurant"]}, the
            returned places provide "restaurant" related services but do not
            operate primarily as "restaurants".
          type: array
          items:
            type: string
        excludedTypes:
          description: >-
            Excluded Place type (eg, "restaurant" or "gas_station") from
            https://developers.google.com/maps/documentation/places/web-service/place-types.
            Up to 50 types from [Table
            A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
            may be specified. If the client provides both included_types (e.g.
            restaurant) and excluded_types (e.g. cafe), then the response should
            include places that are restaurant but not cafe. The response
            includes places that match at least one of the included_types and
            none of the excluded_types. If there are any conflicting types, i.e.
            a type appears in both included_types and excluded_types, an
            INVALID_ARGUMENT error is returned. If a Place type is specified
            with multiple type restrictions, only places that satisfy all of the
            restrictions are returned. For example, if we have {included_types =
            ["restaurant"], excluded_primary_types = ["restaurant"]}, the
            returned places provide "restaurant" related services but do not
            operate primarily as "restaurants".
          type: array
          items:
            type: string
        includedPrimaryTypes:
          description: >-
            Included primary Place type (e.g. "restaurant" or "gas_station")
            from
            https://developers.google.com/maps/documentation/places/web-service/place-types.
            A place can only have a single primary type from the supported types
            table associated with it. Up to 50 types from [Table
            A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
            may be specified. If there are any conflicting primary types, i.e. a
            type appears in both included_primary_types and
            excluded_primary_types, an INVALID_ARGUMENT error is returned. If a
            Place type is specified with multiple type restrictions, only places
            that satisfy all of the restrictions are returned. For example, if
            we have {included_types = ["restaurant"], excluded_primary_types =
            ["restaurant"]}, the returned places provide "restaurant" related
            services but do not operate primarily as "restaurants".
          type: array
          items:
            type: string
        excludedPrimaryTypes:
          description: >-
            Excluded primary Place type (e.g. "restaurant" or "gas_station")
            from
            https://developers.google.com/maps/documentation/places/web-service/place-types.
            Up to 50 types from [Table
            A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
            may be specified. If there are any conflicting primary types, i.e. a
            type appears in both included_primary_types and
            excluded_primary_types, an INVALID_ARGUMENT error is returned. If a
            Place type is specified with multiple type restrictions, only places
            that satisfy all of the restrictions are returned. For example, if
            we have {included_types = ["restaurant"], excluded_primary_types =
            ["restaurant"]}, the returned places provide "restaurant" related
            services but do not operate primarily as "restaurants".
          type: array
          items:
            type: string
        maxResultCount:
          description: >-
            Maximum number of results to return. It must be between 1 and 20
            (default), inclusively. If the number is unset, it falls back to the
            upper limit. If the number is set to negative or exceeds the upper
            limit, an INVALID_ARGUMENT error is returned.
          type: integer
          format: int32
        locationRestriction:
          description: Required. The region to search.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction
        rankPreference:
          description: How results will be ranked in the response.
          type: string
          enumDescriptions:
            - >-
              RankPreference value not set. Will use rank by POPULARITY by
              default.
            - Ranks results by distance.
            - Ranks results by popularity.
          enum:
            - RANK_PREFERENCE_UNSPECIFIED
            - DISTANCE
            - POPULARITY
        routingParameters:
          description: Optional. Parameters that affect the routing to the search results.
          $ref: '#/components/schemas/GoogleMapsPlacesV1RoutingParameters'
    GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction:
      id: GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction
      description: The region to search.
      type: object
      properties:
        circle:
          description: A circle defined by center point and radius.
          $ref: '#/components/schemas/GoogleMapsPlacesV1Circle'
    GoogleMapsPlacesV1Circle:
      id: GoogleMapsPlacesV1Circle
      description: Circle with a LatLng as center and radius.
      type: object
      properties:
        center:
          description: >-
            Required. Center latitude and longitude. The range of latitude must
            be within [-90.0, 90.0]. The range of the longitude must be within
            [-180.0, 180.0].
          $ref: '#/components/schemas/GoogleTypeLatLng'
        radius:
          description: >-
            Required. Radius measured in meters. The radius must be within [0.0,
            50000.0].
          type: number
          format: double
    GoogleTypeLatLng:
      id: GoogleTypeLatLng
      description: >-
        An object that represents a latitude/longitude pair. This is expressed
        as a pair of doubles to represent degrees latitude and degrees
        longitude. Unless specified otherwise, this object must conform to the
        WGS84 standard. Values must be within normalized ranges.
      type: object
      properties:
        latitude:
          description: The latitude in degrees. It must be in the range [-90.0, +90.0].
          type: number
          format: double
        longitude:
          description: The longitude in degrees. It must be in the range [-180.0, +180.0].
          type: number
          format: double
    GoogleMapsPlacesV1RoutingParameters:
      id: GoogleMapsPlacesV1RoutingParameters
      description: >-
        Parameters to configure the routing calculations to the places in the
        response, both along a route (where result ranking will be influenced)
        and for calculating travel times on results.
      type: object
      properties:
        origin:
          description: >-
            Optional. An explicit routing origin that overrides the origin
            defined in the polyline. By default, the polyline origin is used.
          $ref: '#/components/schemas/GoogleTypeLatLng'
        travelMode:
          description: Optional. The travel mode.
          type: string
          enumDescriptions:
            - No travel mode specified. Defaults to `DRIVE`.
            - Travel by passenger car.
            - >-
              Travel by bicycle. Not supported with
              `search_along_route_parameters`.
            - >-
              Travel by walking. Not supported with
              `search_along_route_parameters`.
            - >-
              Motorized two wheeled vehicles of all kinds such as scooters and
              motorcycles. Note that this is distinct from the `BICYCLE` travel
              mode which covers human-powered transport. Not supported with
              `search_along_route_parameters`. Only supported in those countries
              listed at [Countries and regions supported for two-wheeled
              vehicles](https://developers.google.com/maps/documentation/routes/coverage-two-wheeled).
          enum:
            - TRAVEL_MODE_UNSPECIFIED
            - DRIVE
            - BICYCLE
            - WALK
            - TWO_WHEELER
        routeModifiers:
          description: Optional. The route modifiers.
          $ref: '#/components/schemas/GoogleMapsPlacesV1RouteModifiers'
        routingPreference:
          description: >-
            Optional. Specifies how to compute the routing summaries. The server
            attempts to use the selected routing preference to compute the
            route. The traffic aware routing preference is only available for
            the `DRIVE` or `TWO_WHEELER` `travelMode`.
          type: string
          enumDescriptions:
            - No routing preference specified. Default to `TRAFFIC_UNAWARE`.
            - >-
              Computes routes without taking live traffic conditions into
              consideration. Suitable when traffic conditions don't matter or
              are not applicable. Using this value produces the lowest latency.
              Note: For `TravelMode` `DRIVE` and `TWO_WHEELER`, the route and
              duration chosen are based on road network and average
              time-independent traffic conditions, not current road conditions.
              Consequently, routes may include roads that are temporarily
              closed. Results for a given request may vary over time due to
              changes in the road network, updated average traffic conditions,
              and the distributed nature of the service. Results may also vary
              between nearly-equivalent routes at any time or frequency.
            - >-
              Calculates routes taking live traffic conditions into
              consideration. In contrast to `TRAFFIC_AWARE_OPTIMAL`, some
              optimizations are applied to significantly reduce latency.
            - >-
              Calculates the routes taking live traffic conditions into
              consideration, without applying most performance optimizations.
              Using this value produces the highest latency.
          enum:
            - ROUTING_PREFERENCE_UNSPECIFIED
            - TRAFFIC_UNAWARE
            - TRAFFIC_AWARE
            - TRAFFIC_AWARE_OPTIMAL
    GoogleMapsPlacesV1RouteModifiers:
      id: GoogleMapsPlacesV1RouteModifiers
      description: >-
        Encapsulates a set of optional conditions to satisfy when calculating
        the routes.
      type: object
      properties:
        avoidTolls:
          description: >-
            Optional. When set to true, avoids toll roads where reasonable,
            giving preference to routes not containing toll roads. Applies only
            to the `DRIVE` and `TWO_WHEELER` `TravelMode`.
          type: boolean
        avoidHighways:
          description: >-
            Optional. When set to true, avoids highways where reasonable, giving
            preference to routes not containing highways. Applies only to the
            `DRIVE` and `TWO_WHEELER` `TravelMode`.
          type: boolean
        avoidFerries:
          description: >-
            Optional. When set to true, avoids ferries where reasonable, giving
            preference to routes not containing ferries. Applies only to the
            `DRIVE` and `TWO_WHEELER` `TravelMode`.
          type: boolean
        avoidIndoor:
          description: >-
            Optional. When set to true, avoids navigating indoors where
            reasonable, giving preference to routes not containing indoor
            navigation. Applies only to the `WALK` `TravelMode`.
          type: boolean
    GoogleMapsPlacesV1SearchNearbyResponse:
      id: GoogleMapsPlacesV1SearchNearbyResponse
      description: 'Response proto for Search Nearby. '
      type: object
      properties:
        places:
          description: >-
            A list of places that meets user's requirements like places types,
            number of places and specific location restriction.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1Place'
        routingSummaries:
          description: >-
            A list of routing summaries where each entry associates to the
            corresponding place in the same index in the `places` field. If the
            routing summary is not available for one of the places, it will
            contain an empty entry. This list should have as many entries as the
            list of places if requested.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1RoutingSummary'
    GoogleMapsPlacesV1Place:
      id: GoogleMapsPlacesV1Place
      description: All the information representing a Place.
      type: object
      properties:
        name:
          description: >-
            This Place's resource name, in `places/{place_id}` format. Can be
            used to look up the Place.
          type: string
        id:
          description: The unique identifier of a place.
          type: string
        displayName:
          description: >-
            The localized name of the place, suitable as a short human-readable
            description. For example, "Google Sydney", "Starbucks", "Pyrmont",
            etc.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        types:
          description: >-
            A set of type tags for this result. For example, "political" and
            "locality". For the complete list of possible values, see Table A
            and Table B at
            https://developers.google.com/maps/documentation/places/web-service/place-types
          type: array
          items:
            type: string
        primaryType:
          description: >-
            The primary type of the given result. This type must be one of the
            Places API supported types. For example, "restaurant", "cafe",
            "airport", etc. A place can only have a single primary type. For the
            complete list of possible values, see Table A and Table B at
            https://developers.google.com/maps/documentation/places/web-service/place-types.
            The primary type may be missing if the place's primary type is not a
            supported type. When a primary type is present, it is always one of
            the types in the `types` field.
          type: string
        primaryTypeDisplayName:
          description: >-
            The display name of the primary type, localized to the request
            language if applicable. For the complete list of possible values,
            see Table A and Table B at
            https://developers.google.com/maps/documentation/places/web-service/place-types.
            The primary type may be missing if the place's primary type is not a
            supported type.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        nationalPhoneNumber:
          description: A human-readable phone number for the place, in national format.
          type: string
        internationalPhoneNumber:
          description: >-
            A human-readable phone number for the place, in international
            format.
          type: string
        formattedAddress:
          description: A full, human-readable address for this place.
          type: string
        shortFormattedAddress:
          description: A short, human-readable address for this place.
          type: string
        postalAddress:
          description: The address in postal address format.
          $ref: '#/components/schemas/GoogleTypePostalAddress'
        addressComponents:
          description: >-
            Repeated components for each locality level. Note the following
            facts about the address_components[] array: - The array of address
            components may contain more components than the formatted_address. -
            The array does not necessarily include all the political entities
            that contain an address, apart from those included in the
            formatted_address. To retrieve all the political entities that
            contain a specific address, you should use reverse geocoding,
            passing the latitude/longitude of the address as a parameter to the
            request. - The format of the response is not guaranteed to remain
            the same between requests. In particular, the number of
            address_components varies based on the address requested and can
            change over time for the same address. A component can change
            position in the array. The type of the component can change. A
            particular component may be missing in a later response.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceAddressComponent'
        plusCode:
          description: Plus code of the place location lat/long.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlacePlusCode'
        location:
          description: The position of this place.
          $ref: '#/components/schemas/GoogleTypeLatLng'
        viewport:
          description: >-
            A viewport suitable for displaying the place on an average-sized
            map. This viewport should not be used as the physical boundary or
            the service area of the business.
          $ref: '#/components/schemas/GoogleGeoTypeViewport'
        rating:
          description: A rating between 1.0 and 5.0, based on user reviews of this place.
          type: number
          format: double
        googleMapsUri:
          description: A URL providing more information about this place.
          type: string
        websiteUri:
          description: >-
            The authoritative website for this place, e.g. a business' homepage.
            Note that for places that are part of a chain (e.g. an IKEA store),
            this will usually be the website for the individual store, not the
            overall chain.
          type: string
        reviews:
          description: >-
            List of reviews about this place, sorted by relevance. A maximum of
            5 reviews can be returned.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1Review'
        regularOpeningHours:
          description: >-
            The regular hours of operation. Note that if a place is always open
            (24 hours), the `close` field will not be set. Clients can rely on
            always open (24 hours) being represented as an
            [`open`](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places#Period)
            period containing
            [`day`](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places#Point)
            with value `0`,
            [`hour`](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places#Point)
            with value `0`, and
            [`minute`](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places#Point)
            with value `0`.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHours'
        utcOffsetMinutes:
          description: >-
            Number of minutes this place's timezone is currently offset from
            UTC. This is expressed in minutes to support timezones that are
            offset by fractions of an hour, e.g. X hours and 15 minutes.
          type: integer
          format: int32
        timeZone:
          description: IANA Time Zone Database time zone. For example "America/New_York".
          $ref: '#/components/schemas/GoogleTypeTimeZone'
        photos:
          description: >-
            Information (including references) about photos of this place. A
            maximum of 10 photos can be returned.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1Photo'
        adrFormatAddress:
          description: >-
            The place's address in adr microformat:
            http://microformats.org/wiki/adr.
          type: string
        businessStatus:
          description: The business status for the place.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The establishment is operational, not necessarily open now.
            - The establishment is temporarily closed.
            - The establishment is permanently closed.
          enum:
            - BUSINESS_STATUS_UNSPECIFIED
            - OPERATIONAL
            - CLOSED_TEMPORARILY
            - CLOSED_PERMANENTLY
        priceLevel:
          description: Price level of the place.
          type: string
          enumDescriptions:
            - Place price level is unspecified or unknown.
            - Place provides free services.
            - Place provides inexpensive services.
            - Place provides moderately priced services.
            - Place provides expensive services.
            - Place provides very expensive services.
          enum:
            - PRICE_LEVEL_UNSPECIFIED
            - PRICE_LEVEL_FREE
            - PRICE_LEVEL_INEXPENSIVE
            - PRICE_LEVEL_MODERATE
            - PRICE_LEVEL_EXPENSIVE
            - PRICE_LEVEL_VERY_EXPENSIVE
        attributions:
          description: A set of data provider that must be shown with this result.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceAttribution'
        userRatingCount:
          description: The total number of reviews (with or without text) for this place.
          type: integer
          format: int32
        iconMaskBaseUri:
          description: >-
            A truncated URL to an icon mask. User can access different icon type
            by appending type suffix to the end (eg, ".svg" or ".png").
          type: string
        iconBackgroundColor:
          description: 'Background color for icon_mask in hex format, e.g. #909CE1.'
          type: string
        takeout:
          description: Specifies if the business supports takeout.
          type: boolean
        delivery:
          description: Specifies if the business supports delivery.
          type: boolean
        dineIn:
          description: >-
            Specifies if the business supports indoor or outdoor seating
            options.
          type: boolean
        curbsidePickup:
          description: Specifies if the business supports curbside pickup.
          type: boolean
        reservable:
          description: Specifies if the place supports reservations.
          type: boolean
        servesBreakfast:
          description: Specifies if the place serves breakfast.
          type: boolean
        servesLunch:
          description: Specifies if the place serves lunch.
          type: boolean
        servesDinner:
          description: Specifies if the place serves dinner.
          type: boolean
        servesBeer:
          description: Specifies if the place serves beer.
          type: boolean
        servesWine:
          description: Specifies if the place serves wine.
          type: boolean
        servesBrunch:
          description: Specifies if the place serves brunch.
          type: boolean
        servesVegetarianFood:
          description: Specifies if the place serves vegetarian food.
          type: boolean
        currentOpeningHours:
          description: >-
            The hours of operation for the next seven days (including today).
            The time period starts at midnight on the date of the request and
            ends at 11:59 pm six days later. This field includes the
            special_days subfield of all hours, set for dates that have
            exceptional hours.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHours'
        currentSecondaryOpeningHours:
          description: >-
            Contains an array of entries for the next seven days including
            information about secondary hours of a business. Secondary hours are
            different from a business's main hours. For example, a restaurant
            can specify drive through hours or delivery hours as its secondary
            hours. This field populates the type subfield, which draws from a
            predefined list of opening hours types (such as DRIVE_THROUGH,
            PICKUP, or TAKEOUT) based on the types of the place. This field
            includes the special_days subfield of all hours, set for dates that
            have exceptional hours.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHours'
        regularSecondaryOpeningHours:
          description: >-
            Contains an array of entries for information about regular secondary
            hours of a business. Secondary hours are different from a business's
            main hours. For example, a restaurant can specify drive through
            hours or delivery hours as its secondary hours. This field populates
            the type subfield, which draws from a predefined list of opening
            hours types (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the
            types of the place.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHours'
        editorialSummary:
          description: >-
            Contains a summary of the place. A summary is comprised of a textual
            overview, and also includes the language code for these if
            applicable. Summary text must be presented as-is and can not be
            modified or altered.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        outdoorSeating:
          description: Place provides outdoor seating.
          type: boolean
        liveMusic:
          description: Place provides live music.
          type: boolean
        menuForChildren:
          description: Place has a children's menu.
          type: boolean
        servesCocktails:
          description: Place serves cocktails.
          type: boolean
        servesDessert:
          description: Place serves dessert.
          type: boolean
        servesCoffee:
          description: Place serves coffee.
          type: boolean
        goodForChildren:
          description: Place is good for children.
          type: boolean
        allowsDogs:
          description: Place allows dogs.
          type: boolean
        restroom:
          description: Place has restroom.
          type: boolean
        goodForGroups:
          description: Place accommodates groups.
          type: boolean
        goodForWatchingSports:
          description: Place is suitable for watching sports.
          type: boolean
        paymentOptions:
          description: >-
            Payment options the place accepts. If a payment option data is not
            available, the payment option field will be unset.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlacePaymentOptions'
        parkingOptions:
          description: Options of parking provided by the place.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceParkingOptions'
        subDestinations:
          description: A list of sub-destinations related to the place.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceSubDestination'
        accessibilityOptions:
          description: Information about the accessibility options a place offers.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceAccessibilityOptions'
        fuelOptions:
          description: >-
            The most recent information about fuel options in a gas station.
            This information is updated regularly.
          $ref: '#/components/schemas/GoogleMapsPlacesV1FuelOptions'
        evChargeOptions:
          description: Information of ev charging options.
          $ref: '#/components/schemas/GoogleMapsPlacesV1EVChargeOptions'
        generativeSummary:
          description: AI-generated summary of the place.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceGenerativeSummary'
        containingPlaces:
          description: List of places in which the current place is located.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceContainingPlace'
        pureServiceAreaBusiness:
          description: >-
            Indicates whether the place is a pure service area business. Pure
            service area business is a business that visits or delivers to
            customers directly but does not serve customers at their business
            address. For example, businesses like cleaning services or plumbers.
            Those businesses may not have a physical address or location on
            Google Maps.
          type: boolean
        addressDescriptor:
          description: >-
            The address descriptor of the place. Address descriptors include
            additional information that help describe a location using landmarks
            and areas. See address descriptor regional coverage in
            https://developers.google.com/maps/documentation/geocoding/address-descriptors/coverage.
          $ref: '#/components/schemas/GoogleMapsPlacesV1AddressDescriptor'
        googleMapsLinks:
          description: Links to trigger different Google Maps actions.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceGoogleMapsLinks'
        priceRange:
          description: The price range associated with a Place.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PriceRange'
        reviewSummary:
          description: AI-generated summary of the place using user reviews.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceReviewSummary'
        evChargeAmenitySummary:
          description: The summary of amenities near the EV charging station.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceEvChargeAmenitySummary'
        neighborhoodSummary:
          description: A summary of points of interest near the place.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceNeighborhoodSummary'
    GoogleTypeLocalizedText:
      id: GoogleTypeLocalizedText
      description: Localized variant of a text in a particular language.
      type: object
      properties:
        text:
          description: >-
            Localized string in the language corresponding to language_code
            below.
          type: string
        languageCode:
          description: >-
            The text's BCP-47 language code, such as "en-US" or "sr-Latn". For
            more information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
          type: string
    GoogleTypePostalAddress:
      id: GoogleTypePostalAddress
      description: >-
        Represents a postal address, such as for postal delivery or payments
        addresses. With a postal address, a postal service can deliver items to
        a premise, P.O. box, or similar. A postal address is not intended to
        model geographical locations like roads, towns, or mountains. In typical
        usage, an address would be created by user input or from importing
        existing data, depending on the type of process. Advice on address input
        or editing: - Use an internationalization-ready address widget such as
        https://github.com/google/libaddressinput. - Users should not be
        presented with UI elements for input or editing of fields outside
        countries where that field is used. For more guidance on how to use this
        schema, see: https://support.google.com/business/answer/6397478.
      type: object
      properties:
        revision:
          description: >-
            The schema revision of the `PostalAddress`. This must be set to 0,
            which is the latest revision. All new revisions **must** be backward
            compatible with old revisions.
          type: integer
          format: int32
        regionCode:
          description: >-
            Required. CLDR region code of the country/region of the address.
            This is never inferred and it is up to the user to ensure the value
            is correct. See https://cldr.unicode.org/ and
            https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html
            for details. Example: "CH" for Switzerland.
          type: string
        languageCode:
          description: >-
            Optional. BCP-47 language code of the contents of this address (if
            known). This is often the UI language of the input form or is
            expected to match one of the languages used in the address'
            country/region, or their transliterated equivalents. This can affect
            formatting in certain countries, but is not critical to the
            correctness of the data and will never affect any validation or
            other non-formatting related operations. If this value is not known,
            it should be omitted (rather than specifying a possibly incorrect
            default). Examples: "zh-Hant", "ja", "ja-Latn", "en".
          type: string
        postalCode:
          description: >-
            Optional. Postal code of the address. Not all countries use or
            require postal codes to be present, but where they are used, they
            may trigger additional validation with other parts of the address
            (for example, state or zip code validation in the United States).
          type: string
        sortingCode:
          description: >-
            Optional. Additional, country-specific, sorting code. This is not
            used in most regions. Where it is used, the value is either a string
            like "CEDEX", optionally followed by a number (for example, "CEDEX
            7"), or just a number alone, representing the "sector code"
            (Jamaica), "delivery area indicator" (Malawi) or "post office
            indicator" (Côte d'Ivoire).
          type: string
        administrativeArea:
          description: >-
            Optional. Highest administrative subdivision which is used for
            postal addresses of a country or region. For example, this can be a
            state, a province, an oblast, or a prefecture. For Spain, this is
            the province and not the autonomous community (for example,
            "Barcelona" and not "Catalonia"). Many countries don't use an
            administrative area in postal addresses. For example, in
            Switzerland, this should be left unpopulated.
          type: string
        locality:
          description: >-
            Optional. Generally refers to the city or town portion of the
            address. Examples: US city, IT comune, UK post town. In regions of
            the world where localities are not well defined or do not fit into
            this structure well, leave `locality` empty and use `address_lines`.
          type: string
        sublocality:
          description: >-
            Optional. Sublocality of the address. For example, this can be a
            neighborhood, borough, or district.
          type: string
        addressLines:
          description: >-
            Unstructured address lines describing the lower levels of an
            address. Because values in `address_lines` do not have type
            information and may sometimes contain multiple values in a single
            field (for example, "Austin, TX"), it is important that the line
            order is clear. The order of address lines should be "envelope
            order" for the country or region of the address. In places where
            this can vary (for example, Japan), `address_language` is used to
            make it explicit (for example, "ja" for large-to-small ordering and
            "ja-Latn" or "en" for small-to-large). In this way, the most
            specific line of an address can be selected based on the language.
            The minimum permitted structural representation of an address
            consists of a `region_code` with all remaining information placed in
            the `address_lines`. It would be possible to format such an address
            very approximately without geocoding, but no semantic reasoning
            could be made about any of the address components until it was at
            least partially resolved. Creating an address only containing a
            `region_code` and `address_lines` and then geocoding is the
            recommended way to handle completely unstructured addresses (as
            opposed to guessing which parts of the address should be localities
            or administrative areas).
          type: array
          items:
            type: string
        recipients:
          description: >-
            Optional. The recipient at the address. This field may, under
            certain circumstances, contain multiline information. For example,
            it might contain "care of" information.
          type: array
          items:
            type: string
        organization:
          description: Optional. The name of the organization at the address.
          type: string
    GoogleMapsPlacesV1PlaceAddressComponent:
      id: GoogleMapsPlacesV1PlaceAddressComponent
      description: >-
        The structured components that form the formatted address, if this
        information is available.
      type: object
      properties:
        longText:
          description: >-
            The full text description or name of the address component. For
            example, an address component for the country Australia may have a
            long_name of "Australia".
          type: string
        shortText:
          description: >-
            An abbreviated textual name for the address component, if available.
            For example, an address component for the country of Australia may
            have a short_name of "AU".
          type: string
        types:
          description: An array indicating the type(s) of the address component.
          type: array
          items:
            type: string
        languageCode:
          description: The language used to format this components, in CLDR notation.
          type: string
    GoogleMapsPlacesV1PlacePlusCode:
      id: GoogleMapsPlacesV1PlacePlusCode
      description: >-
        Plus code (http://plus.codes) is a location reference with two formats:
        global code defining a 14mx14m (1/8000th of a degree) or smaller
        rectangle, and compound code, replacing the prefix with a reference
        location.
      type: object
      properties:
        globalCode:
          description: >-
            Place's global (full) code, such as "9FWM33GV+HQ", representing an
            1/8000 by 1/8000 degree area (~14 by 14 meters).
          type: string
        compoundCode:
          description: >-
            Place's compound code, such as "33GV+HQ, Ramberg, Norway",
            containing the suffix of the global code and replacing the prefix
            with a formatted name of a reference entity.
          type: string
    GoogleGeoTypeViewport:
      id: GoogleGeoTypeViewport
      description: >-
        A latitude-longitude viewport, represented as two diagonally opposite
        `low` and `high` points. A viewport is considered a closed region, i.e.
        it includes its boundary. The latitude bounds must range between -90 to
        90 degrees inclusive, and the longitude bounds must range between -180
        to 180 degrees inclusive. Various cases include: - If `low` = `high`,
        the viewport consists of that single point. - If `low.longitude` >
        `high.longitude`, the longitude range is inverted (the viewport crosses
        the 180 degree longitude line). - If `low.longitude` = -180 degrees and
        `high.longitude` = 180 degrees, the viewport includes all longitudes. -
        If `low.longitude` = 180 degrees and `high.longitude` = -180 degrees,
        the longitude range is empty. - If `low.latitude` > `high.latitude`, the
        latitude range is empty. Both `low` and `high` must be populated, and
        the represented box cannot be empty (as specified by the definitions
        above). An empty viewport will result in an error. For example, this
        viewport fully encloses New York City: { "low": { "latitude": 40.477398,
        "longitude": -74.259087 }, "high": { "latitude": 40.91618, "longitude":
        -73.70018 } }
      type: object
      properties:
        low:
          description: Required. The low point of the viewport.
          $ref: '#/components/schemas/GoogleTypeLatLng'
        high:
          description: Required. The high point of the viewport.
          $ref: '#/components/schemas/GoogleTypeLatLng'
    GoogleMapsPlacesV1Review:
      id: GoogleMapsPlacesV1Review
      description: Information about a review of a place.
      type: object
      properties:
        name:
          description: >-
            A reference representing this place review which may be used to look
            up this place review again (also called the API "resource" name:
            `places/{place_id}/reviews/{review}`).
          type: string
        relativePublishTimeDescription:
          description: >-
            A string of formatted recent time, expressing the review time
            relative to the current time in a form appropriate for the language
            and country.
          type: string
        text:
          description: The localized text of the review.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        originalText:
          description: The review text in its original language.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        rating:
          description: A number between 1.0 and 5.0, also called the number of stars.
          type: number
          format: double
        authorAttribution:
          description: This review's author.
          $ref: '#/components/schemas/GoogleMapsPlacesV1AuthorAttribution'
        publishTime:
          description: Timestamp for the review.
          type: string
          format: google-datetime
        flagContentUri:
          description: A link where users can flag a problem with the review.
          type: string
        googleMapsUri:
          description: A link to show the review on Google Maps.
          type: string
    GoogleMapsPlacesV1AuthorAttribution:
      id: GoogleMapsPlacesV1AuthorAttribution
      description: Information about the author of the UGC data. Used in Photo, and Review.
      type: object
      properties:
        displayName:
          description: Name of the author of the Photo or Review.
          type: string
        uri:
          description: URI of the author of the Photo or Review.
          type: string
        photoUri:
          description: Profile photo URI of the author of the Photo or Review.
          type: string
    GoogleMapsPlacesV1PlaceOpeningHours:
      id: GoogleMapsPlacesV1PlaceOpeningHours
      description: Information about business hour of the place.
      type: object
      properties:
        openNow:
          description: >-
            Whether the opening hours period is currently active. For regular
            opening hours and current opening hours, this field means whether
            the place is open. For secondary opening hours and current secondary
            opening hours, this field means whether the secondary hours of this
            place is active.
          type: boolean
        periods:
          description: >-
            The periods that this place is open during the week. The periods are
            in chronological order, in the place-local timezone. An empty (but
            not absent) value indicates a place that is never open, e.g. because
            it is closed temporarily for renovations. The starting day of
            `periods` is NOT fixed and should not be assumed to be Sunday. The
            API determines the start day based on a variety of factors. For
            example, for a 24/7 business, the first period may begin on the day
            of the request. For other businesses, it might be the first day of
            the week that they are open. NOTE: The ordering of the `periods`
            array is independent of the ordering of the `weekday_descriptions`
            array. Do not assume they will begin on the same day.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHoursPeriod'
        weekdayDescriptions:
          description: >-
            Localized strings describing the opening hours of this place, one
            string for each day of the week. NOTE: The order of the days and the
            start of the week is determined by the locale (language and region).
            The ordering of the `periods` array is independent of the ordering
            of the `weekday_descriptions` array. Do not assume they will begin
            on the same day. Will be empty if the hours are unknown or could not
            be converted to localized text. Example: "Sun: 18:00–06:00"
          type: array
          items:
            type: string
        secondaryHoursType:
          description: A type string used to identify the type of secondary hours.
          type: string
          enumDescriptions:
            - Default value when secondary hour type is not specified.
            - The drive-through hour for banks, restaurants, or pharmacies.
            - The happy hour.
            - The delivery hour.
            - The takeout hour.
            - The kitchen hour.
            - The breakfast hour.
            - The lunch hour.
            - The dinner hour.
            - The brunch hour.
            - The pickup hour.
            - The access hours for storage places.
            - The special hours for seniors.
            - The online service hours.
          enum:
            - SECONDARY_HOURS_TYPE_UNSPECIFIED
            - DRIVE_THROUGH
            - HAPPY_HOUR
            - DELIVERY
            - TAKEOUT
            - KITCHEN
            - BREAKFAST
            - LUNCH
            - DINNER
            - BRUNCH
            - PICKUP
            - ACCESS
            - SENIOR_HOURS
            - ONLINE_SERVICE_HOURS
        specialDays:
          description: >-
            Structured information for special days that fall within the period
            that the returned opening hours cover. Special days are days that
            could impact the business hours of a place, e.g. Christmas day. Set
            for current_opening_hours and current_secondary_opening_hours if
            there are exceptional hours.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay'
        nextOpenTime:
          description: >-
            The next time the current opening hours period starts up to 7 days
            in the future. This field is only populated if the opening hours
            period is not active at the time of serving the request.
          type: string
          format: google-datetime
        nextCloseTime:
          description: >-
            The next time the current opening hours period ends up to 7 days in
            the future. This field is only populated if the opening hours period
            is active at the time of serving the request.
          type: string
          format: google-datetime
    GoogleMapsPlacesV1PlaceOpeningHoursPeriod:
      id: GoogleMapsPlacesV1PlaceOpeningHoursPeriod
      description: A period the place remains in open_now status.
      type: object
      properties:
        open:
          description: The time that the place starts to be open.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint'
        close:
          description: The time that the place starts to be closed.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint'
    GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint:
      id: GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint
      description: Status changing points.
      type: object
      properties:
        day:
          description: >-
            A day of the week, as an integer in the range 0-6. 0 is Sunday, 1 is
            Monday, etc.
          type: integer
          format: int32
        hour:
          description: The hour in 24 hour format. Ranges from 0 to 23.
          type: integer
          format: int32
        minute:
          description: The minute. Ranges from 0 to 59.
          type: integer
          format: int32
        date:
          description: Date in the local timezone for the place.
          $ref: '#/components/schemas/GoogleTypeDate'
        truncated:
          description: >-
            Whether or not this endpoint was truncated. Truncation occurs when
            the real hours are outside the times we are willing to return hours
            between, so we truncate the hours back to these boundaries. This
            ensures that at most 24 * 7 hours from midnight of the day of the
            request are returned.
          type: boolean
    GoogleTypeDate:
      id: GoogleTypeDate
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      type: object
      properties:
        year:
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          type: integer
          format: int32
        month:
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          type: integer
          format: int32
        day:
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
          format: int32
    GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay:
      id: GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay
      description: >-
        Structured information for special days that fall within the period that
        the returned opening hours cover. Special days are days that could
        impact the business hours of a place, e.g. Christmas day.
      type: object
      properties:
        date:
          description: The date of this special day.
          $ref: '#/components/schemas/GoogleTypeDate'
    GoogleTypeTimeZone:
      id: GoogleTypeTimeZone
      description: >-
        Represents a time zone from the [IANA Time Zone
        Database](https://www.iana.org/time-zones).
      type: object
      properties:
        id:
          description: IANA Time Zone Database time zone. For example "America/New_York".
          type: string
        version:
          description: >-
            Optional. IANA Time Zone Database version number. For example
            "2019a".
          type: string
    GoogleMapsPlacesV1Photo:
      id: GoogleMapsPlacesV1Photo
      description: Information about a photo of a place.
      type: object
      properties:
        name:
          description: >-
            Identifier. A reference representing this place photo which may be
            used to look up this place photo again (also called the API
            "resource" name: `places/{place_id}/photos/{photo}`).
          type: string
        widthPx:
          description: The maximum available width, in pixels.
          type: integer
          format: int32
        heightPx:
          description: The maximum available height, in pixels.
          type: integer
          format: int32
        authorAttributions:
          description: This photo's authors.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1AuthorAttribution'
        flagContentUri:
          description: A link where users can flag a problem with the photo.
          type: string
        googleMapsUri:
          description: A link to show the photo on Google Maps.
          type: string
    GoogleMapsPlacesV1PlaceAttribution:
      id: GoogleMapsPlacesV1PlaceAttribution
      description: Information about data providers of this place.
      type: object
      properties:
        provider:
          description: Name of the Place's data provider.
          type: string
        providerUri:
          description: URI to the Place's data provider.
          type: string
    GoogleMapsPlacesV1PlacePaymentOptions:
      id: GoogleMapsPlacesV1PlacePaymentOptions
      description: Payment options the place accepts.
      type: object
      properties:
        acceptsCreditCards:
          description: Place accepts credit cards as payment.
          type: boolean
        acceptsDebitCards:
          description: Place accepts debit cards as payment.
          type: boolean
        acceptsCashOnly:
          description: >-
            Place accepts cash only as payment. Places with this attribute may
            still accept other payment methods.
          type: boolean
        acceptsNfc:
          description: Place accepts NFC payments.
          type: boolean
    GoogleMapsPlacesV1PlaceParkingOptions:
      id: GoogleMapsPlacesV1PlaceParkingOptions
      description: >-
        Information about parking options for the place. A parking lot could
        support more than one option at the same time.
      type: object
      properties:
        freeParkingLot:
          description: Place offers free parking lots.
          type: boolean
        paidParkingLot:
          description: Place offers paid parking lots.
          type: boolean
        freeStreetParking:
          description: Place offers free street parking.
          type: boolean
        paidStreetParking:
          description: Place offers paid street parking.
          type: boolean
        valetParking:
          description: Place offers valet parking.
          type: boolean
        freeGarageParking:
          description: Place offers free garage parking.
          type: boolean
        paidGarageParking:
          description: Place offers paid garage parking.
          type: boolean
    GoogleMapsPlacesV1PlaceSubDestination:
      id: GoogleMapsPlacesV1PlaceSubDestination
      description: >-
        Sub-destinations are specific places associated with a main place. These
        provide more specific destinations for users who are searching within a
        large or complex place, like an airport, national park, university, or
        stadium. For example, sub-destinations at an airport might include
        associated terminals and parking lots. Sub-destinations return the place
        ID and place resource name, which can be used in subsequent Place
        Details (New) requests to fetch richer details, including the
        sub-destination's display name and location.
      type: object
      properties:
        name:
          description: The resource name of the sub-destination.
          type: string
        id:
          description: The place id of the sub-destination.
          type: string
    GoogleMapsPlacesV1PlaceAccessibilityOptions:
      id: GoogleMapsPlacesV1PlaceAccessibilityOptions
      description: Information about the accessibility options a place offers.
      type: object
      properties:
        wheelchairAccessibleParking:
          description: Place offers wheelchair accessible parking.
          type: boolean
        wheelchairAccessibleEntrance:
          description: Places has wheelchair accessible entrance.
          type: boolean
        wheelchairAccessibleRestroom:
          description: Place has wheelchair accessible restroom.
          type: boolean
        wheelchairAccessibleSeating:
          description: Place has wheelchair accessible seating.
          type: boolean
    GoogleMapsPlacesV1FuelOptions:
      id: GoogleMapsPlacesV1FuelOptions
      description: >-
        The most recent information about fuel options in a gas station. This
        information is updated regularly.
      type: object
      properties:
        fuelPrices:
          description: >-
            The last known fuel price for each type of fuel this station has.
            There is one entry per fuel type this station has. Order is not
            important.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1FuelOptionsFuelPrice'
    GoogleMapsPlacesV1FuelOptionsFuelPrice:
      id: GoogleMapsPlacesV1FuelOptionsFuelPrice
      description: Fuel price information for a given type.
      type: object
      properties:
        type:
          description: The type of fuel.
          type: string
          enumDescriptions:
            - Unspecified fuel type.
            - Diesel fuel.
            - Diesel plus fuel.
            - Regular unleaded.
            - Midgrade.
            - Premium.
            - SP 91.
            - SP 91 E10.
            - SP 92.
            - SP 95.
            - SP95 E10.
            - SP 98.
            - SP 99.
            - SP 100.
            - Liquefied Petroleum Gas.
            - E 80.
            - E 85.
            - E 100.
            - Methane.
            - Bio-diesel.
            - Truck diesel.
          enum:
            - FUEL_TYPE_UNSPECIFIED
            - DIESEL
            - DIESEL_PLUS
            - REGULAR_UNLEADED
            - MIDGRADE
            - PREMIUM
            - SP91
            - SP91_E10
            - SP92
            - SP95
            - SP95_E10
            - SP98
            - SP99
            - SP100
            - LPG
            - E80
            - E85
            - E100
            - METHANE
            - BIO_DIESEL
            - TRUCK_DIESEL
        price:
          description: The price of the fuel.
          $ref: '#/components/schemas/GoogleTypeMoney'
        updateTime:
          description: The time the fuel price was last updated.
          type: string
          format: google-datetime
    GoogleTypeMoney:
      id: GoogleTypeMoney
      description: Represents an amount of money with its currency type.
      type: object
      properties:
        currencyCode:
          description: The three-letter currency code defined in ISO 4217.
          type: string
        units:
          description: >-
            The whole units of the amount. For example if `currencyCode` is
            `"USD"`, then 1 unit is one US dollar.
          type: string
          format: int64
        nanos:
          description: >-
            Number of nano (10^-9) units of the amount. The value must be
            between -999,999,999 and +999,999,999 inclusive. If `units` is
            positive, `nanos` must be positive or zero. If `units` is zero,
            `nanos` can be positive, zero, or negative. If `units` is negative,
            `nanos` must be negative or zero. For example $-1.75 is represented
            as `units`=-1 and `nanos`=-750,000,000.
          type: integer
          format: int32
    GoogleMapsPlacesV1EVChargeOptions:
      id: GoogleMapsPlacesV1EVChargeOptions
      description: >-
        Information about the EV Charge Station hosted in Place. Terminology
        follows https://afdc.energy.gov/fuels/electricity_infrastructure.html
        One port could charge one car at a time. One port has one or more
        connectors. One station has one or more ports.
      type: object
      properties:
        connectorCount:
          description: >-
            Number of connectors at this station. However, because some ports
            can have multiple connectors but only be able to charge one car at a
            time (e.g.) the number of connectors may be greater than the total
            number of cars which can charge simultaneously.
          type: integer
          format: int32
        connectorAggregation:
          description: >-
            A list of EV charging connector aggregations that contain connectors
            of the same type and same charge rate.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation
    GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation:
      id: GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation
      description: >-
        EV charging information grouped by [type, max_charge_rate_kw]. Shows EV
        charge aggregation of connectors that have the same type and max charge
        rate in kw.
      type: object
      properties:
        type:
          description: The connector type of this aggregation.
          type: string
          enumDescriptions:
            - Unspecified connector.
            - Other connector types.
            - J1772 type 1 connector.
            - IEC 62196 type 2 connector. Often referred to as MENNEKES.
            - CHAdeMO type connector.
            - >-
              Combined Charging System (AC and DC). Based on SAE. Type-1 J-1772
              connector
            - >-
              Combined Charging System (AC and DC). Based on Type-2 Mennekes
              connector
            - >-
              The generic TESLA connector. This is NACS in the North America but
              can be non-NACS in other parts of the world (e.g. CCS Combo 2
              (CCS2) or GB/T). This value is less representative of an actual
              connector type, and more represents the ability to charge a Tesla
              brand vehicle at a Tesla owned charging station.
            - >-
              GB/T type corresponds to the GB/T standard in China. This type
              covers all GB_T types.
            - Unspecified wall outlet.
            - >-
              The North American Charging System (NACS), standardized as SAE
              J3400.
          enum:
            - EV_CONNECTOR_TYPE_UNSPECIFIED
            - EV_CONNECTOR_TYPE_OTHER
            - EV_CONNECTOR_TYPE_J1772
            - EV_CONNECTOR_TYPE_TYPE_2
            - EV_CONNECTOR_TYPE_CHADEMO
            - EV_CONNECTOR_TYPE_CCS_COMBO_1
            - EV_CONNECTOR_TYPE_CCS_COMBO_2
            - EV_CONNECTOR_TYPE_TESLA
            - EV_CONNECTOR_TYPE_UNSPECIFIED_GB_T
            - EV_CONNECTOR_TYPE_UNSPECIFIED_WALL_OUTLET
            - EV_CONNECTOR_TYPE_NACS
        maxChargeRateKw:
          description: >-
            The static max charging rate in kw of each connector in the
            aggregation.
          type: number
          format: double
        count:
          description: Number of connectors in this aggregation.
          type: integer
          format: int32
        availableCount:
          description: >-
            Number of connectors in this aggregation that are currently
            available.
          type: integer
          format: int32
        outOfServiceCount:
          description: >-
            Number of connectors in this aggregation that are currently out of
            service.
          type: integer
          format: int32
        availabilityLastUpdateTime:
          description: >-
            The timestamp when the connector availability information in this
            aggregation was last updated.
          type: string
          format: google-datetime
    GoogleMapsPlacesV1PlaceGenerativeSummary:
      id: GoogleMapsPlacesV1PlaceGenerativeSummary
      description: AI-generated summary of the place.
      type: object
      properties:
        overview:
          description: The overview of the place.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        overviewFlagContentUri:
          description: A link where users can flag a problem with the overview summary.
          type: string
        disclosureText:
          description: >-
            The AI disclosure message "Summarized with Gemini" (and its
            localized variants). This will be in the language specified in the
            request if available.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
    GoogleMapsPlacesV1PlaceContainingPlace:
      id: GoogleMapsPlacesV1PlaceContainingPlace
      description: Info about the place in which this place is located.
      type: object
      properties:
        name:
          description: The resource name of the place in which this place is located.
          type: string
        id:
          description: The place id of the place in which this place is located.
          type: string
    GoogleMapsPlacesV1AddressDescriptor:
      id: GoogleMapsPlacesV1AddressDescriptor
      description: >-
        A relational description of a location. Includes a ranked set of nearby
        landmarks and precise containing areas and their relationship to the
        target location.
      type: object
      properties:
        landmarks:
          description: >-
            A ranked list of nearby landmarks. The most recognizable and nearby
            landmarks are ranked first.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1AddressDescriptorLandmark'
        areas:
          description: >-
            A ranked list of containing or adjacent areas. The most recognizable
            and precise areas are ranked first.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1AddressDescriptorArea'
    GoogleMapsPlacesV1AddressDescriptorLandmark:
      id: GoogleMapsPlacesV1AddressDescriptorLandmark
      description: >-
        Basic landmark information and the landmark's relationship with the
        target location. Landmarks are prominent places that can be used to
        describe a location.
      type: object
      properties:
        name:
          description: The landmark's resource name.
          type: string
        placeId:
          description: The landmark's place id.
          type: string
        displayName:
          description: The landmark's display name.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        types:
          description: >-
            A set of type tags for this landmark. For a complete list of
            possible values, see
            https://developers.google.com/maps/documentation/places/web-service/place-types.
          type: array
          items:
            type: string
        spatialRelationship:
          description: >-
            Defines the spatial relationship between the target location and the
            landmark.
          type: string
          enumDescriptions:
            - >-
              This is the default relationship when nothing more specific below
              applies.
            - >-
              The landmark has a spatial geometry and the target is within its
              bounds.
            - The target is directly adjacent to the landmark.
            - >-
              The target is directly opposite the landmark on the other side of
              the road.
            - On the same route as the landmark but not besides or across.
            - Not on the same route as the landmark but a single turn away.
            - >-
              Close to the landmark's structure but further away from its street
              entrances.
          enum:
            - NEAR
            - WITHIN
            - BESIDE
            - ACROSS_THE_ROAD
            - DOWN_THE_ROAD
            - AROUND_THE_CORNER
            - BEHIND
        straightLineDistanceMeters:
          description: >-
            The straight line distance, in meters, between the center point of
            the target and the center point of the landmark. In some situations,
            this value can be longer than `travel_distance_meters`.
          type: number
          format: float
        travelDistanceMeters:
          description: >-
            The travel distance, in meters, along the road network from the
            target to the landmark, if known. This value does not take into
            account the mode of transportation, such as walking, driving, or
            biking.
          type: number
          format: float
    GoogleMapsPlacesV1AddressDescriptorArea:
      id: GoogleMapsPlacesV1AddressDescriptorArea
      description: >-
        Area information and the area's relationship with the target location.
        Areas includes precise sublocality, neighborhoods, and large compounds
        that are useful for describing a location.
      type: object
      properties:
        name:
          description: The area's resource name.
          type: string
        placeId:
          description: The area's place id.
          type: string
        displayName:
          description: The area's display name.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        containment:
          description: >-
            Defines the spatial relationship between the target location and the
            area.
          type: string
          enumDescriptions:
            - The containment is unspecified.
            - >-
              The target location is within the area region, close to the
              center.
            - The target location is within the area region, close to the edge.
            - The target location is outside the area region, but close by.
          enum:
            - CONTAINMENT_UNSPECIFIED
            - WITHIN
            - OUTSKIRTS
            - NEAR
    GoogleMapsPlacesV1PlaceGoogleMapsLinks:
      id: GoogleMapsPlacesV1PlaceGoogleMapsLinks
      description: Links to trigger different Google Maps actions.
      type: object
      properties:
        directionsUri:
          description: >-
            A link to show the directions to the place. The link only populates
            the destination location and uses the default travel mode `DRIVE`.
          type: string
        placeUri:
          description: A link to show this place.
          type: string
        writeAReviewUri:
          description: A link to write a review for this place on Google Maps.
          type: string
        reviewsUri:
          description: A link to show reviews of this place on Google Maps.
          type: string
        photosUri:
          description: A link to show reviews of this place on Google Maps.
          type: string
    GoogleMapsPlacesV1PriceRange:
      id: GoogleMapsPlacesV1PriceRange
      description: >-
        The price range associated with a Place. `end_price` could be unset,
        which indicates a range without upper bound (e.g. "More than $100").
      type: object
      properties:
        startPrice:
          description: >-
            The low end of the price range (inclusive). Price should be at or
            above this amount.
          $ref: '#/components/schemas/GoogleTypeMoney'
        endPrice:
          description: >-
            The high end of the price range (exclusive). Price should be lower
            than this amount.
          $ref: '#/components/schemas/GoogleTypeMoney'
    GoogleMapsPlacesV1PlaceReviewSummary:
      id: GoogleMapsPlacesV1PlaceReviewSummary
      description: AI-generated summary of the place using user reviews.
      type: object
      properties:
        text:
          description: The summary of user reviews.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        flagContentUri:
          description: A link where users can flag a problem with the summary.
          type: string
        disclosureText:
          description: >-
            The AI disclosure message "Summarized with Gemini" (and its
            localized variants). This will be in the language specified in the
            request if available.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        reviewsUri:
          description: A link to show reviews of this place on Google Maps.
          type: string
    GoogleMapsPlacesV1PlaceEvChargeAmenitySummary:
      id: GoogleMapsPlacesV1PlaceEvChargeAmenitySummary
      description: >-
        The summary of amenities near the EV charging station. This only applies
        to places with type `electric_vehicle_charging_station`. The `overview`
        field is guaranteed to be provided while the other fields are optional.
      type: object
      properties:
        overview:
          description: >-
            An overview of the available amenities. This is guaranteed to be
            provided.
          $ref: '#/components/schemas/GoogleMapsPlacesV1ContentBlock'
        coffee:
          description: A summary of the nearby coffee options.
          $ref: '#/components/schemas/GoogleMapsPlacesV1ContentBlock'
        restaurant:
          description: A summary of the nearby restaurants.
          $ref: '#/components/schemas/GoogleMapsPlacesV1ContentBlock'
        store:
          description: A summary of the nearby stores.
          $ref: '#/components/schemas/GoogleMapsPlacesV1ContentBlock'
        flagContentUri:
          description: A link where users can flag a problem with the summary.
          type: string
        disclosureText:
          description: >-
            The AI disclosure message "Summarized with Gemini" (and its
            localized variants). This will be in the language specified in the
            request if available.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
    GoogleMapsPlacesV1ContentBlock:
      id: GoogleMapsPlacesV1ContentBlock
      description: A block of content that can be served individually.
      type: object
      properties:
        content:
          description: Content related to the topic.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        referencedPlaces:
          description: >-
            The list of resource names of the referenced places. This name can
            be used in other APIs that accept Place resource names.
          type: array
          items:
            type: string
    GoogleMapsPlacesV1PlaceNeighborhoodSummary:
      id: GoogleMapsPlacesV1PlaceNeighborhoodSummary
      description: A summary of points of interest near the place.
      type: object
      properties:
        overview:
          description: An overview summary of the neighborhood.
          $ref: '#/components/schemas/GoogleMapsPlacesV1ContentBlock'
        description:
          description: A detailed description of the neighborhood.
          $ref: '#/components/schemas/GoogleMapsPlacesV1ContentBlock'
        flagContentUri:
          description: A link where users can flag a problem with the summary.
          type: string
        disclosureText:
          description: >-
            The AI disclosure message "Summarized with Gemini" (and its
            localized variants). This will be in the language specified in the
            request if available.
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
    GoogleMapsPlacesV1RoutingSummary:
      id: GoogleMapsPlacesV1RoutingSummary
      description: >-
        The duration and distance from the routing origin to a place in the
        response, and a second leg from that place to the destination, if
        requested. **Note:** Adding `routingSummaries` in the field mask without
        also including either the `routingParameters.origin` parameter or the
        `searchAlongRouteParameters.polyline.encodedPolyline` parameter in the
        request causes an error.
      type: object
      properties:
        legs:
          description: >-
            The legs of the trip. When you calculate travel duration and
            distance from a set origin, `legs` contains a single leg containing
            the duration and distance from the origin to the destination. When
            you do a search along route, `legs` contains two legs: one from the
            origin to place, and one from the place to the destination.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1RoutingSummaryLeg'
        directionsUri:
          description: >-
            A link to show directions on Google Maps using the waypoints from
            the given routing summary. The route generated by this link is not
            guaranteed to be the same as the route used to generate the routing
            summary. The link uses information provided in the request, from
            fields including `routingParameters` and
            `searchAlongRouteParameters` when applicable, to generate the
            directions link.
          type: string
    GoogleMapsPlacesV1RoutingSummaryLeg:
      id: GoogleMapsPlacesV1RoutingSummaryLeg
      description: A leg is a single portion of a journey from one location to another.
      type: object
      properties:
        duration:
          description: The time it takes to complete this leg of the trip.
          type: string
          format: google-duration
        distanceMeters:
          description: The distance of this leg of the trip.
          type: integer
          format: int32
    GoogleMapsPlacesV1SearchTextRequest:
      id: GoogleMapsPlacesV1SearchTextRequest
      description: 'Request proto for SearchText. '
      type: object
      properties:
        textQuery:
          description: Required. The text query for textual search.
          type: string
        languageCode:
          description: >-
            Place details will be displayed with the preferred language if
            available. If the language code is unspecified or unrecognized,
            place details of any language may be returned, with a preference for
            English if such details exist. Current list of supported languages:
            https://developers.google.com/maps/faq#languagesupport.
          type: string
        regionCode:
          description: >-
            The Unicode country/region code (CLDR) of the location where the
            request is coming from. This parameter is used to display the place
            details, like region-specific place name, if available. The
            parameter can affect results based on applicable law. For more
            information, see
            https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html.
            Note that 3-digit region codes are not currently supported.
          type: string
        rankPreference:
          description: How results will be ranked in the response.
          type: string
          enumDescriptions:
            - >-
              For a categorical query such as "Restaurants in New York City",
              RELEVANCE is the default. For non-categorical queries such as
              "Mountain View, CA" we recommend that you leave rankPreference
              unset.
            - Ranks results by distance.
            - >-
              Ranks results by relevance. Sort order determined by normal
              ranking stack.
          enum:
            - RANK_PREFERENCE_UNSPECIFIED
            - DISTANCE
            - RELEVANCE
        includedType:
          description: >-
            The requested place type. Full list of types supported:
            https://developers.google.com/maps/documentation/places/web-service/place-types.
            Only support one included type.
          type: string
        openNow:
          description: >-
            Used to restrict the search to places that are currently open. The
            default is false.
          type: boolean
        minRating:
          description: >-
            Filter out results whose average user rating is strictly less than
            this limit. A valid value must be a float between 0 and 5
            (inclusively) at a 0.5 cadence i.e. [0, 0.5, 1.0, ... , 5.0]
            inclusively. The input rating will round up to the nearest
            0.5(ceiling). For instance, a rating of 0.6 will eliminate all
            results with a less than 1.0 rating.
          type: number
          format: double
        maxResultCount:
          description: >-
            Deprecated: Use `page_size` instead. The maximum number of results
            per page that can be returned. If the number of available results is
            larger than `max_result_count`, a `next_page_token` is returned
            which can be passed to `page_token` to get the next page of results
            in subsequent requests. If 0 or no value is provided, a default of
            20 is used. The maximum value is 20; values above 20 will be coerced
            to 20. Negative values will return an INVALID_ARGUMENT error. If
            both `max_result_count` and `page_size` are specified,
            `max_result_count` will be ignored.
          deprecated: true
          type: integer
          format: int32
        pageSize:
          description: >-
            Optional. The maximum number of results per page that can be
            returned. If the number of available results is larger than
            `page_size`, a `next_page_token` is returned which can be passed to
            `page_token` to get the next page of results in subsequent requests.
            If 0 or no value is provided, a default of 20 is used. The maximum
            value is 20; values above 20 will be set to 20. Negative values will
            return an INVALID_ARGUMENT error. If both `max_result_count` and
            `page_size` are specified, `max_result_count` will be ignored.
          type: integer
          format: int32
        pageToken:
          description: >-
            Optional. A page token, received from a previous TextSearch call.
            Provide this to retrieve the subsequent page. When paginating, all
            parameters other than `page_token`, `page_size`, and
            `max_result_count` provided to TextSearch must match the initial
            call that provided the page token. Otherwise an INVALID_ARGUMENT
            error is returned.
          type: string
        priceLevels:
          description: >-
            Used to restrict the search to places that are marked as certain
            price levels. Users can choose any combinations of price levels.
            Default to select all price levels.
          type: array
          items:
            type: string
            enumDescriptions:
              - Place price level is unspecified or unknown.
              - Place provides free services.
              - Place provides inexpensive services.
              - Place provides moderately priced services.
              - Place provides expensive services.
              - Place provides very expensive services.
            enum:
              - PRICE_LEVEL_UNSPECIFIED
              - PRICE_LEVEL_FREE
              - PRICE_LEVEL_INEXPENSIVE
              - PRICE_LEVEL_MODERATE
              - PRICE_LEVEL_EXPENSIVE
              - PRICE_LEVEL_VERY_EXPENSIVE
        strictTypeFiltering:
          description: >-
            Used to set strict type filtering for included_type. If set to true,
            only results of the same type will be returned. Default to false.
          type: boolean
        locationBias:
          description: >-
            The region to search. This location serves as a bias which means
            results around given location might be returned. Cannot be set along
            with location_restriction.
          $ref: '#/components/schemas/GoogleMapsPlacesV1SearchTextRequestLocationBias'
        locationRestriction:
          description: >-
            The region to search. This location serves as a restriction which
            means results outside given location will not be returned. Cannot be
            set along with location_bias.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1SearchTextRequestLocationRestriction
        evOptions:
          description: Optional. Set the searchable EV options of a place search request.
          $ref: '#/components/schemas/GoogleMapsPlacesV1SearchTextRequestEVOptions'
        routingParameters:
          description: Optional. Additional parameters for routing to results.
          $ref: '#/components/schemas/GoogleMapsPlacesV1RoutingParameters'
        searchAlongRouteParameters:
          description: Optional. Additional parameters proto for searching along a route.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1SearchTextRequestSearchAlongRouteParameters
        includePureServiceAreaBusinesses:
          description: >-
            Optional. Include pure service area businesses if the field is set
            to true. Pure service area business is a business that visits or
            delivers to customers directly but does not serve customers at their
            business address. For example, businesses like cleaning services or
            plumbers. Those businesses do not have a physical address or
            location on Google Maps. Places will not return fields including
            `location`, `plus_code`, and other location related fields for these
            businesses.
          type: boolean
    GoogleMapsPlacesV1SearchTextRequestLocationBias:
      id: GoogleMapsPlacesV1SearchTextRequestLocationBias
      description: >-
        The region to search. This location serves as a bias which means results
        around given location might be returned.
      type: object
      properties:
        rectangle:
          description: >-
            A rectangle box defined by northeast and southwest corner.
            `rectangle.high()` must be the northeast point of the rectangle
            viewport. `rectangle.low()` must be the southwest point of the
            rectangle viewport. `rectangle.low().latitude()` cannot be greater
            than `rectangle.high().latitude()`. This will result in an empty
            latitude range. A rectangle viewport cannot be wider than 180
            degrees.
          $ref: '#/components/schemas/GoogleGeoTypeViewport'
        circle:
          description: A circle defined by center point and radius.
          $ref: '#/components/schemas/GoogleMapsPlacesV1Circle'
    GoogleMapsPlacesV1SearchTextRequestLocationRestriction:
      id: GoogleMapsPlacesV1SearchTextRequestLocationRestriction
      description: >-
        The region to search. This location serves as a restriction which means
        results outside given location will not be returned.
      type: object
      properties:
        rectangle:
          description: >-
            A rectangle box defined by northeast and southwest corner.
            `rectangle.high()` must be the northeast point of the rectangle
            viewport. `rectangle.low()` must be the southwest point of the
            rectangle viewport. `rectangle.low().latitude()` cannot be greater
            than `rectangle.high().latitude()`. This will result in an empty
            latitude range. A rectangle viewport cannot be wider than 180
            degrees.
          $ref: '#/components/schemas/GoogleGeoTypeViewport'
    GoogleMapsPlacesV1SearchTextRequestEVOptions:
      id: GoogleMapsPlacesV1SearchTextRequestEVOptions
      description: Searchable EV options of a place search request.
      type: object
      properties:
        minimumChargingRateKw:
          description: >-
            Optional. Minimum required charging rate in kilowatts. A place with
            a charging rate less than the specified rate is filtered out.
          type: number
          format: double
        connectorTypes:
          description: >-
            Optional. The list of preferred EV connector types. A place that
            does not support any of the listed connector types is filtered out.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified connector.
              - Other connector types.
              - J1772 type 1 connector.
              - IEC 62196 type 2 connector. Often referred to as MENNEKES.
              - CHAdeMO type connector.
              - >-
                Combined Charging System (AC and DC). Based on SAE. Type-1
                J-1772 connector
              - >-
                Combined Charging System (AC and DC). Based on Type-2 Mennekes
                connector
              - >-
                The generic TESLA connector. This is NACS in the North America
                but can be non-NACS in other parts of the world (e.g. CCS Combo
                2 (CCS2) or GB/T). This value is less representative of an
                actual connector type, and more represents the ability to charge
                a Tesla brand vehicle at a Tesla owned charging station.
              - >-
                GB/T type corresponds to the GB/T standard in China. This type
                covers all GB_T types.
              - Unspecified wall outlet.
              - >-
                The North American Charging System (NACS), standardized as SAE
                J3400.
            enum:
              - EV_CONNECTOR_TYPE_UNSPECIFIED
              - EV_CONNECTOR_TYPE_OTHER
              - EV_CONNECTOR_TYPE_J1772
              - EV_CONNECTOR_TYPE_TYPE_2
              - EV_CONNECTOR_TYPE_CHADEMO
              - EV_CONNECTOR_TYPE_CCS_COMBO_1
              - EV_CONNECTOR_TYPE_CCS_COMBO_2
              - EV_CONNECTOR_TYPE_TESLA
              - EV_CONNECTOR_TYPE_UNSPECIFIED_GB_T
              - EV_CONNECTOR_TYPE_UNSPECIFIED_WALL_OUTLET
              - EV_CONNECTOR_TYPE_NACS
    GoogleMapsPlacesV1SearchTextRequestSearchAlongRouteParameters:
      id: GoogleMapsPlacesV1SearchTextRequestSearchAlongRouteParameters
      description: >-
        Specifies a precalculated polyline from the [Routes
        API](https://developers.google.com/maps/documentation/routes) defining
        the route to search. Searching along a route is similar to using the
        `locationBias` or `locationRestriction` request option to bias the
        search results. However, while the `locationBias` and
        `locationRestriction` options let you specify a region to bias the
        search results, this option lets you bias the results along a trip
        route. Results are not guaranteed to be along the route provided, but
        rather are ranked within the search area defined by the polyline and,
        optionally, by the `locationBias` or `locationRestriction` based on
        minimal detour times from origin to destination. The results might be
        along an alternate route, especially if the provided polyline does not
        define an optimal route from origin to destination.
      type: object
      properties:
        polyline:
          description: Required. The route polyline.
          $ref: '#/components/schemas/GoogleMapsPlacesV1Polyline'
    GoogleMapsPlacesV1Polyline:
      id: GoogleMapsPlacesV1Polyline
      description: >-
        A route polyline. Only supports an [encoded
        polyline](https://developers.google.com/maps/documentation/utilities/polylinealgorithm),
        which can be passed as a string and includes compression with minimal
        lossiness. This is the Routes API default output.
      type: object
      properties:
        encodedPolyline:
          description: >-
            An [encoded
            polyline](https://developers.google.com/maps/documentation/utilities/polylinealgorithm),
            as returned by the [Routes API by
            default](https://developers.google.com/maps/documentation/routes/reference/rest/v2/TopLevel/computeRoutes#polylineencoding).
            See the
            [encoder](https://developers.google.com/maps/documentation/utilities/polylineutility)
            and
            [decoder](https://developers.google.com/maps/documentation/routes/polylinedecoder)
            tools.
          type: string
    GoogleMapsPlacesV1SearchTextResponse:
      id: GoogleMapsPlacesV1SearchTextResponse
      description: 'Response proto for SearchText. '
      type: object
      properties:
        places:
          description: A list of places that meet the user's text search criteria.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1Place'
        routingSummaries:
          description: >-
            A list of routing summaries where each entry associates to the
            corresponding place in the same index in the `places` field. If the
            routing summary is not available for one of the places, it will
            contain an empty entry. This list will have as many entries as the
            list of places if requested.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1RoutingSummary'
        contextualContents:
          description: >-
            Experimental: See
            https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
            for more details. A list of contextual contents where each entry
            associates to the corresponding place in the same index in the
            places field. The contents that are relevant to the `text_query` in
            the request are preferred. If the contextual content is not
            available for one of the places, it will return non-contextual
            content. It will be empty only when the content is unavailable for
            this place. This list will have as many entries as the list of
            places if requested.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1ContextualContent'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted or empty, there are no subsequent pages.
          type: string
        searchUri:
          description: >-
            A link allows the user to search with the same text query as
            specified in the request on Google Maps.
          type: string
    GoogleMapsPlacesV1ContextualContent:
      id: GoogleMapsPlacesV1ContextualContent
      description: >-
        Experimental: See
        https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
        for more details. Content that is contextual to the place query.
      type: object
      properties:
        reviews:
          description: List of reviews about this place, contexual to the place query.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1Review'
        photos:
          description: >-
            Information (including references) about photos of this place,
            contexual to the place query.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1Photo'
        justifications:
          description: >-
            Experimental: See
            https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
            for more details. Justifications for the place.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleMapsPlacesV1ContextualContentJustification
    GoogleMapsPlacesV1ContextualContentJustification:
      id: GoogleMapsPlacesV1ContextualContentJustification
      description: >-
        Experimental: See
        https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
        for more details. Justifications for the place. Justifications answers
        the question of why a place could interest an end user.
      type: object
      properties:
        reviewJustification:
          description: >-
            Experimental: See
            https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
            for more details.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1ContextualContentJustificationReviewJustification
        businessAvailabilityAttributesJustification:
          description: >-
            Experimental: See
            https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
            for more details.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1ContextualContentJustificationBusinessAvailabilityAttributesJustification
    GoogleMapsPlacesV1ContextualContentJustificationReviewJustification:
      id: GoogleMapsPlacesV1ContextualContentJustificationReviewJustification
      description: >-
        Experimental: See
        https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
        for more details. User review justifications. This highlights a section
        of the user review that would interest an end user. For instance, if the
        search query is "firewood pizza", the review justification highlights
        the text relevant to the search query.
      type: object
      properties:
        highlightedText:
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1ContextualContentJustificationReviewJustificationHighlightedText
        review:
          description: The review that the highlighted text is generated from.
          $ref: '#/components/schemas/GoogleMapsPlacesV1Review'
    GoogleMapsPlacesV1ContextualContentJustificationReviewJustificationHighlightedText:
      id: >-
        GoogleMapsPlacesV1ContextualContentJustificationReviewJustificationHighlightedText
      description: >-
        The text highlighted by the justification. This is a subset of the
        review itself. The exact word to highlight is marked by the
        HighlightedTextRange. There could be several words in the text being
        highlighted.
      type: object
      properties:
        text:
          type: string
        highlightedTextRanges:
          description: The list of the ranges of the highlighted text.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleMapsPlacesV1ContextualContentJustificationReviewJustificationHighlightedTextHighlightedTextRange
    GoogleMapsPlacesV1ContextualContentJustificationReviewJustificationHighlightedTextHighlightedTextRange:
      id: >-
        GoogleMapsPlacesV1ContextualContentJustificationReviewJustificationHighlightedTextHighlightedTextRange
      description: The range of highlighted text.
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        endIndex:
          type: integer
          format: int32
    GoogleMapsPlacesV1ContextualContentJustificationBusinessAvailabilityAttributesJustification:
      id: >-
        GoogleMapsPlacesV1ContextualContentJustificationBusinessAvailabilityAttributesJustification
      description: >-
        Experimental: See
        https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
        for more details. BusinessAvailabilityAttributes justifications. This
        shows some attributes a business has that could interest an end user.
      type: object
      properties:
        takeout:
          description: If a place provides takeout.
          type: boolean
        delivery:
          description: If a place provides delivery.
          type: boolean
        dineIn:
          description: If a place provides dine-in.
          type: boolean
    GoogleMapsPlacesV1PhotoMedia:
      id: GoogleMapsPlacesV1PhotoMedia
      description: A photo media from Places API.
      type: object
      properties:
        name:
          description: >-
            The resource name of a photo media in the format:
            `places/{place_id}/photos/{photo_reference}/media`.
          type: string
        photoUri:
          description: A short-lived uri that can be used to render the photo.
          type: string
    GoogleMapsPlacesV1AutocompletePlacesRequest:
      id: GoogleMapsPlacesV1AutocompletePlacesRequest
      description: Request proto for AutocompletePlaces.
      type: object
      properties:
        input:
          description: Required. The text string on which to search.
          type: string
        locationBias:
          description: >-
            Optional. Bias results to a specified location. At most one of
            `location_bias` or `location_restriction` should be set. If neither
            are set, the results will be biased by IP address, meaning the IP
            address will be mapped to an imprecise location and used as a
            biasing signal.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias
        locationRestriction:
          description: >-
            Optional. Restrict results to a specified location. At most one of
            `location_bias` or `location_restriction` should be set. If neither
            are set, the results will be biased by IP address, meaning the IP
            address will be mapped to an imprecise location and used as a
            biasing signal.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction
        includedPrimaryTypes:
          description: >-
            Optional. Included primary Place type (for example, "restaurant" or
            "gas_station") in Place Types
            (https://developers.google.com/maps/documentation/places/web-service/place-types),
            or only `(regions)`, or only `(cities)`. A Place is only returned if
            its primary type is included in this list. Up to 5 values can be
            specified. If no types are specified, all Place types are returned.
          type: array
          items:
            type: string
        includedRegionCodes:
          description: >-
            Optional. Only include results in the specified regions, specified
            as up to 15 CLDR two-character region codes. An empty set will not
            restrict the results. If both `location_restriction` and
            `included_region_codes` are set, the results will be located in the
            area of intersection.
          type: array
          items:
            type: string
        languageCode:
          description: >-
            Optional. The language in which to return results. Defaults to
            en-US. The results may be in mixed languages if the language used in
            `input` is different from `language_code` or if the returned Place
            does not have a translation from the local language to
            `language_code`.
          type: string
        regionCode:
          description: >-
            Optional. The region code, specified as a CLDR two-character region
            code. This affects address formatting, result ranking, and may
            influence what results are returned. This does not restrict results
            to the specified region. To restrict results to a region, use
            `region_code_restriction`.
          type: string
        origin:
          description: >-
            Optional. The origin point from which to calculate geodesic distance
            to the destination (returned as `distance_meters`). If this value is
            omitted, geodesic distance will not be returned.
          $ref: '#/components/schemas/GoogleTypeLatLng'
        inputOffset:
          description: >-
            Optional. A zero-based Unicode character offset of `input`
            indicating the cursor position in `input`. The cursor position may
            influence what predictions are returned. If empty, defaults to the
            length of `input`.
          type: integer
          format: int32
        includeQueryPredictions:
          description: >-
            Optional. If true, the response will include both Place and query
            predictions. Otherwise the response will only return Place
            predictions.
          type: boolean
        sessionToken:
          description: >-
            Optional. A string which identifies an Autocomplete session for
            billing purposes. Must be a URL and filename safe base64 string with
            at most 36 ASCII characters in length. Otherwise an INVALID_ARGUMENT
            error is returned. The session begins when the user starts typing a
            query, and concludes when they select a place and a call to Place
            Details or Address Validation is made. Each session can have
            multiple queries, followed by one Place Details or Address
            Validation request. The credentials used for each request within a
            session must belong to the same Google Cloud Console project. Once a
            session has concluded, the token is no longer valid; your app must
            generate a fresh token for each session. If the `session_token`
            parameter is omitted, or if you reuse a session token, the session
            is charged as if no session token was provided (each request is
            billed separately). We recommend the following guidelines: * Use
            session tokens for all Place Autocomplete calls. * Generate a fresh
            token for each session. Using a version 4 UUID is recommended. *
            Ensure that the credentials used for all Place Autocomplete, Place
            Details, and Address Validation requests within a session belong to
            the same Cloud Console project. * Be sure to pass a unique session
            token for each new session. Using the same token for more than one
            session will result in each request being billed individually.
          type: string
        includePureServiceAreaBusinesses:
          description: >-
            Optional. Include pure service area businesses if the field is set
            to true. Pure service area business is a business that visits or
            delivers to customers directly but does not serve customers at their
            business address. For example, businesses like cleaning services or
            plumbers. Those businesses do not have a physical address or
            location on Google Maps. Places will not return fields including
            `location`, `plus_code`, and other location related fields for these
            businesses.
          type: boolean
    GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias:
      id: GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias
      description: >-
        The region to search. The results may be biased around the specified
        region.
      type: object
      properties:
        rectangle:
          description: A viewport defined by a northeast and a southwest corner.
          $ref: '#/components/schemas/GoogleGeoTypeViewport'
        circle:
          description: A circle defined by a center point and radius.
          $ref: '#/components/schemas/GoogleMapsPlacesV1Circle'
    GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction:
      id: GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction
      description: >-
        The region to search. The results will be restricted to the specified
        region.
      type: object
      properties:
        rectangle:
          description: A viewport defined by a northeast and a southwest corner.
          $ref: '#/components/schemas/GoogleGeoTypeViewport'
        circle:
          description: A circle defined by a center point and radius.
          $ref: '#/components/schemas/GoogleMapsPlacesV1Circle'
    GoogleMapsPlacesV1AutocompletePlacesResponse:
      id: GoogleMapsPlacesV1AutocompletePlacesResponse
      description: Response proto for AutocompletePlaces.
      type: object
      properties:
        suggestions:
          description: >-
            Contains a list of suggestions, ordered in descending order of
            relevance.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion
    GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion:
      id: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion
      description: An Autocomplete suggestion result.
      type: object
      properties:
        placePrediction:
          description: A prediction for a Place.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction
        queryPrediction:
          description: A prediction for a query.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction
    GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction:
      id: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction
      description: Prediction results for a Place Autocomplete prediction.
      type: object
      properties:
        place:
          description: >-
            The resource name of the suggested Place. This name can be used in
            other APIs that accept Place names.
          type: string
        placeId:
          description: >-
            The unique identifier of the suggested Place. This identifier can be
            used in other APIs that accept Place IDs.
          type: string
        text:
          description: >-
            Contains the human-readable name for the returned result. For
            establishment results, this is usually the business name and
            address. `text` is recommended for developers who wish to show a
            single UI element. Developers who wish to show two separate, but
            related, UI elements may want to use `structured_format` instead.
            They are two different ways to represent a Place prediction. Users
            should not try to parse `structured_format` into `text` or vice
            versa. This text may be different from the `display_name` returned
            by GetPlace. May be in mixed languages if the request `input` and
            `language_code` are in different languages or if the Place does not
            have a translation from the local language to `language_code`.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText
        structuredFormat:
          description: >-
            A breakdown of the Place prediction into main text containing the
            name of the Place and secondary text containing additional
            disambiguating features (such as a city or region).
            `structured_format` is recommended for developers who wish to show
            two separate, but related, UI elements. Developers who wish to show
            a single UI element may want to use `text` instead. They are two
            different ways to represent a Place prediction. Users should not try
            to parse `structured_format` into `text` or vice versa.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat
        types:
          description: >-
            List of types that apply to this Place from Table A or Table B in
            https://developers.google.com/maps/documentation/places/web-service/place-types.
            A type is a categorization of a Place. Places with shared types will
            share similar characteristics.
          type: array
          items:
            type: string
        distanceMeters:
          description: >-
            The length of the geodesic in meters from `origin` if `origin` is
            specified. Certain predictions such as routes may not populate this
            field.
          type: integer
          format: int32
    GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText:
      id: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText
      description: >-
        Text representing a Place or query prediction. The text may be used as
        is or formatted.
      type: object
      properties:
        text:
          description: Text that may be used as is or formatted with `matches`.
          type: string
        matches:
          description: >-
            A list of string ranges identifying where the input request matched
            in `text`. The ranges can be used to format specific parts of
            `text`. The substrings may not be exact matches of `input` if the
            matching was determined by criteria other than string matching (for
            example, spell corrections or transliterations). These values are
            Unicode character offsets of `text`. The ranges are guaranteed to be
            ordered in increasing offset values.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStringRange
    GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStringRange:
      id: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStringRange
      description: Identifies a substring within a given text.
      type: object
      properties:
        startOffset:
          description: >-
            Zero-based offset of the first Unicode character of the string
            (inclusive).
          type: integer
          format: int32
        endOffset:
          description: Zero-based offset of the last Unicode character (exclusive).
          type: integer
          format: int32
    GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat:
      id: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat
      description: >-
        Contains a breakdown of a Place or query prediction into main text and
        secondary text. For Place predictions, the main text contains the
        specific name of the Place. For query predictions, the main text
        contains the query. The secondary text contains additional
        disambiguating features (such as a city or region) to further identify
        the Place or refine the query.
      type: object
      properties:
        mainText:
          description: Represents the name of the Place or query.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText
        secondaryText:
          description: >-
            Represents additional disambiguating features (such as a city or
            region) to further identify the Place or refine the query.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText
    GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction:
      id: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction
      description: Prediction results for a Query Autocomplete prediction.
      type: object
      properties:
        text:
          description: >-
            The predicted text. This text does not represent a Place, but rather
            a text query that could be used in a search endpoint (for example,
            Text Search). `text` is recommended for developers who wish to show
            a single UI element. Developers who wish to show two separate, but
            related, UI elements may want to use `structured_format` instead.
            They are two different ways to represent a query prediction. Users
            should not try to parse `structured_format` into `text` or vice
            versa. May be in mixed languages if the request `input` and
            `language_code` are in different languages or if part of the query
            does not have a translation from the local language to
            `language_code`.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText
        structuredFormat:
          description: >-
            A breakdown of the query prediction into main text containing the
            query and secondary text containing additional disambiguating
            features (such as a city or region). `structured_format` is
            recommended for developers who wish to show two separate, but
            related, UI elements. Developers who wish to show a single UI
            element may want to use `text` instead. They are two different ways
            to represent a query prediction. Users should not try to parse
            `structured_format` into `text` or vice versa.
          $ref: >-
            #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    places:
      id: google.places.places
      name: places
      title: Places
      methods:
        search_nearby:
          operation:
            $ref: '#/paths/~1v1~1places:searchNearby/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_text:
          operation:
            $ref: '#/paths/~1v1~1places:searchText/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1places~1{placesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        autocomplete:
          operation:
            $ref: '#/paths/~1v1~1places:autocomplete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/places/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    photos_media:
      id: google.places.photos_media
      name: photos_media
      title: Photos_media
      methods:
        get_media:
          operation:
            $ref: '#/paths/~1v1~1places~1{placesId}~1photos~1{photosId}~1media/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/photos_media/methods/get_media'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/places:searchNearby:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Search for places near locations.
      operationId: places.places.searchNearby
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleMapsPlacesV1SearchNearbyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/maps-platform.places
          Oauth2c:
            - https://www.googleapis.com/auth/maps-platform.places
        - Oauth2:
            - https://www.googleapis.com/auth/maps-platform.places.nearbysearch
          Oauth2c:
            - https://www.googleapis.com/auth/maps-platform.places.nearbysearch
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMapsPlacesV1SearchNearbyResponse'
      parameters: []
  /v1/places:searchText:
    parameters: *ref_1
    post:
      description: Text query based place search.
      operationId: places.places.searchText
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleMapsPlacesV1SearchTextRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/maps-platform.places
          Oauth2c:
            - https://www.googleapis.com/auth/maps-platform.places
        - Oauth2:
            - https://www.googleapis.com/auth/maps-platform.places.textsearch
          Oauth2c:
            - https://www.googleapis.com/auth/maps-platform.places.textsearch
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMapsPlacesV1SearchTextResponse'
      parameters: []
  /v1/places/{placesId}:
    parameters: *ref_1
    get:
      description: >-
        Get the details of a place based on its resource name, which is a string
        in the `places/{place_id}` format.
      operationId: places.places.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/maps-platform.places
          Oauth2c:
            - https://www.googleapis.com/auth/maps-platform.places
        - Oauth2:
            - https://www.googleapis.com/auth/maps-platform.places.details
          Oauth2c:
            - https://www.googleapis.com/auth/maps-platform.places.details
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMapsPlacesV1Place'
      parameters:
        - in: path
          name: placesId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: regionCode
          schema:
            type: string
        - in: query
          name: sessionToken
          schema:
            type: string
  /v1/places:autocomplete:
    parameters: *ref_1
    post:
      description: Returns predictions for the given input.
      operationId: places.places.autocomplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleMapsPlacesV1AutocompletePlacesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/maps-platform.places
          Oauth2c:
            - https://www.googleapis.com/auth/maps-platform.places
        - Oauth2:
            - https://www.googleapis.com/auth/maps-platform.places.autocomplete
          Oauth2c:
            - https://www.googleapis.com/auth/maps-platform.places.autocomplete
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleMapsPlacesV1AutocompletePlacesResponse
      parameters: []
  /v1/places/{placesId}/photos/{photosId}/media:
    parameters: *ref_1
    get:
      description: Get a photo media with a photo reference string.
      operationId: places.places.photos.getMedia
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/maps-platform.places
          Oauth2c:
            - https://www.googleapis.com/auth/maps-platform.places
        - Oauth2:
            - https://www.googleapis.com/auth/maps-platform.places.getphotomedia
          Oauth2c:
            - https://www.googleapis.com/auth/maps-platform.places.getphotomedia
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMapsPlacesV1PhotoMedia'
      parameters:
        - in: path
          name: placesId
          required: true
          schema:
            type: string
        - in: path
          name: photosId
          required: true
          schema:
            type: string
        - in: query
          name: maxWidthPx
          schema:
            type: integer
            format: int32
        - in: query
          name: maxHeightPx
          schema:
            type: integer
            format: int32
        - in: query
          name: skipHttpRedirect
          schema:
            type: boolean
