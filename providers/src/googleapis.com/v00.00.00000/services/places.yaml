openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Places API (New)
  description: ''
  version: v1
  x-discovery-doc-revision: '20230830'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://mapsplatform.google.com/maps-products/#places-section'
servers:
  - url: 'https://places.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/maps-platform.places.textsearch': 'Private Service: https://www.googleapis.com/auth/maps-platform.places.textsearch'
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/maps-platform.places': 'Private Service: https://www.googleapis.com/auth/maps-platform.places'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleMapsPlacesV1PlaceAttribution:
      type: object
      description: Information about data providers of this place.
      id: GoogleMapsPlacesV1PlaceAttribution
      properties:
        providerUri:
          type: string
          readOnly: true
          description: Output only. URI to the Place's data provider.
        provider:
          readOnly: true
          description: Output only. Name of the Place's data provider.
          type: string
    GoogleMapsPlacesV1SearchTextRequest:
      id: GoogleMapsPlacesV1SearchTextRequest
      description: 'Request proto for SearchText. '
      properties:
        languageCode:
          type: string
          description: 'Place details will be displayed with the preferred language if available. If the language code is unspecified or unrecognized, place details of any language may be returned, with a preference for English if such details exist. Current list of supported languages: https://developers.google.com/maps/faq#languagesupport.'
        strictTypeFiltering:
          description: 'Used to set strict type filtering for included_type. If set to true, only results of the same type will be returned. Default to false.'
          type: boolean
        minRating:
          description: 'Filter out results whose average user rating is strictly less than this limit. A valid value must be an float between 0 and 5 (inclusively) at a 0.5 cadence i.e. [0, 0.5, 1.0, ... , 5.0] inclusively. This is to keep parity with LocalRefinement_UserRating. The input rating will round up to the nearest 0.5(ceiling). For instance, a rating of 0.6 will eliminate all results with a less than 1.0 rating.'
          format: double
          type: number
        regionCode:
          description: 'The Unicode country/region code (CLDR) of the location where the request is coming from. This parameter is used to display the place details, like region-specific place name, if available. The parameter can affect results based on applicable law. For more information, see http://www.unicode.org/reports/tr35/#unicode_region_subtag. Note that 3-digit region codes are not currently supported.'
          type: string
        locationRestriction:
          description: The region to search. This location serves as a restriction which means results outside given location will not be returned. Cannot be set along with location_bias.
          $ref: '#/components/schemas/GoogleMapsPlacesV1SearchTextRequestLocationRestriction'
        priceLevels:
          type: array
          description: Used to restrict the search to places that are marked as certain price levels. Users can choose any combinations of price levels. Default to select all price levels.
          items:
            type: string
            enum:
              - PRICE_LEVEL_UNSPECIFIED
              - PRICE_LEVEL_FREE
              - PRICE_LEVEL_INEXPENSIVE
              - PRICE_LEVEL_MODERATE
              - PRICE_LEVEL_EXPENSIVE
              - PRICE_LEVEL_VERY_EXPENSIVE
            enumDescriptions:
              - Place price level is unspecified or unknown.
              - Place provides free services.
              - Place provides inexpensive services.
              - Place provides moderately priced services.
              - Place provides expensive services.
              - Place provides very expensive services.
        openNow:
          type: boolean
          description: Used to restrict the search to places that are open at a specific time. open_now marks if a business is currently open.
        includedType:
          description: 'The requested place type. Full list of types supported: https://developers.google.com/places/supported_types. Only support one included type.'
          type: string
        locationBias:
          description: The region to search. This location serves as a bias which means results around given location might be returned. Cannot be set along with location_restriction.
          $ref: '#/components/schemas/GoogleMapsPlacesV1SearchTextRequestLocationBias'
        maxResultCount:
          description: 'Maximum number of results to return. It must be between 1 and 20, inclusively. If the number is unset, it falls back to the upper limit. If the number is set to negative or exceeds the upper limit, an INVALID_ARGUMENT error is returned.'
          type: integer
          format: int32
        rankPreference:
          enumDescriptions:
            - RankPreference value not set. Will default to DISTANCE.
            - Ranks results by distance.
            - 'Ranks results by relevance. Sort order determined by normal ranking stack. See SortRefinement::RELEVANCE.'
          type: string
          description: How results will be ranked in the response.
          enum:
            - RANK_PREFERENCE_UNSPECIFIED
            - DISTANCE
            - RELEVANCE
        textQuery:
          description: Required. The text query for textual search.
          type: string
      type: object
    GoogleMapsPlacesV1SearchTextResponse:
      id: GoogleMapsPlacesV1SearchTextResponse
      type: object
      properties:
        places:
          description: A list of places that meet the user's text search criteria.
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1Place'
      description: 'Response proto for SearchText. '
    GoogleMapsPlacesV1SearchTextRequestLocationBias:
      type: object
      description: The region to search. This location serves as a bias which means results around given location might be returned.
      properties:
        circle:
          description: A circle defined by center point and radius.
          $ref: '#/components/schemas/GoogleMapsPlacesV1Circle'
        rectangle:
          $ref: '#/components/schemas/GoogleGeoTypeViewport'
          description: A rectangle box defined by northeast and southwest corner.
      id: GoogleMapsPlacesV1SearchTextRequestLocationBias
    GoogleMapsPlacesV1Circle:
      description: Circle with a LatLng as center and radius.
      id: GoogleMapsPlacesV1Circle
      type: object
      properties:
        center:
          $ref: '#/components/schemas/GoogleTypeLatLng'
          description: 'Required. Center latitude and longitude. The range of latitude must be within [-90.0, 90.0]. The range of the longitude must be within [-180.0, 180.0].'
        radius:
          format: double
          description: 'Required. Radius measured in meters. The radius must be within [0.0, 50000.0].'
          type: number
    GoogleGeoTypeViewport:
      properties:
        high:
          $ref: '#/components/schemas/GoogleTypeLatLng'
          description: Required. The high point of the viewport.
        low:
          $ref: '#/components/schemas/GoogleTypeLatLng'
          description: Required. The low point of the viewport.
      id: GoogleGeoTypeViewport
      type: object
      description: 'A latitude-longitude viewport, represented as two diagonally opposite `low` and `high` points. A viewport is considered a closed region, i.e. it includes its boundary. The latitude bounds must range between -90 to 90 degrees inclusive, and the longitude bounds must range between -180 to 180 degrees inclusive. Various cases include: - If `low` = `high`, the viewport consists of that single point. - If `low.longitude` > `high.longitude`, the longitude range is inverted (the viewport crosses the 180 degree longitude line). - If `low.longitude` = -180 degrees and `high.longitude` = 180 degrees, the viewport includes all longitudes. - If `low.longitude` = 180 degrees and `high.longitude` = -180 degrees, the longitude range is empty. - If `low.latitude` > `high.latitude`, the latitude range is empty. Both `low` and `high` must be populated, and the represented box cannot be empty (as specified by the definitions above). An empty viewport will result in an error. For example, this viewport fully encloses New York City: { "low": { "latitude": 40.477398, "longitude": -74.259087 }, "high": { "latitude": 40.91618, "longitude": -73.70018 } }'
    GoogleTypeLatLng:
      properties:
        longitude:
          description: 'The longitude in degrees. It must be in the range [-180.0, +180.0].'
          type: number
          format: double
        latitude:
          description: 'The latitude in degrees. It must be in the range [-90.0, +90.0].'
          type: number
          format: double
      type: object
      id: GoogleTypeLatLng
      description: 'An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.'
    GoogleMapsPlacesV1PlacePlusCode:
      properties:
        globalCode:
          type: string
          description: 'Output only. Place''s global (full) code, such as "9FWM33GV+HQ", representing an 1/8000 by 1/8000 degree area (~14 by 14 meters).'
          readOnly: true
        compoundCode:
          description: 'Output only. Place''s compound code, such as "33GV+HQ, Ramberg, Norway", containing the suffix of the global code and replacing the prefix with a formatted name of a reference entity.'
          type: string
          readOnly: true
      id: GoogleMapsPlacesV1PlacePlusCode
      type: object
      description: 'Plus code (http://plus.codes) is a location reference with two formats: global code defining a 14mx14m (1/8000th of a degree) or smaller rectangle, and compound code, replacing the prefix with a reference location.'
    GoogleMapsPlacesV1PlaceAddressComponent:
      properties:
        shortText:
          type: string
          description: 'Output only. An abbreviated textual name for the address component, if available. For example, an address component for the country of Australia may have a short_name of "AU".'
          readOnly: true
        longText:
          type: string
          description: 'Output only. The full text description or name of the address component. For example, an address component for the country Australia may have a long_name of "Australia".'
          readOnly: true
        languageCode:
          type: string
          description: 'Output only. The language used to format this components, in CLDR notation.'
          readOnly: true
        types:
          description: Output only. An array indicating the type(s) of the address component.
          type: array
          items:
            type: string
          readOnly: true
      id: GoogleMapsPlacesV1PlaceAddressComponent
      description: 'The structured components that form the formatted address, if this information is available.'
      type: object
    GoogleMapsPlacesV1PlaceOpeningHoursPeriod:
      description: A period the place remains in open_now status.
      id: GoogleMapsPlacesV1PlaceOpeningHoursPeriod
      properties:
        close:
          description: Output only. The time that the place starts to be closed.
          readOnly: true
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint'
        open:
          description: Output only. The time that the place starts to be open.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint'
          readOnly: true
      type: object
    GoogleMapsPlacesV1PlaceOpeningHours:
      type: object
      description: Information about business hour of the place.
      id: GoogleMapsPlacesV1PlaceOpeningHours
      properties:
        secondaryHoursType:
          type: string
          enumDescriptions:
            - Default value when secondary hour type is not specified.
            - 'The drive-through hour for banks, restaurants, or pharmacies.'
            - The happy hour.
            - The delivery hour.
            - The takeout hour.
            - The kitchen hour.
            - The breakfast hour.
            - The lunch hour.
            - The dinner hour.
            - The brunch hour.
            - The pickup hour.
            - The access hours for storage places.
            - The special hours for seniors.
            - The online service hours.
          description: Output only. A type string used to identify the type of secondary hours.
          readOnly: true
          enum:
            - SECONDARY_HOURS_TYPE_UNSPECIFIED
            - DRIVE_THROUGH
            - HAPPY_HOUR
            - DELIVERY
            - TAKEOUT
            - KITCHEN
            - BREAKFAST
            - LUNCH
            - DINNER
            - BRUNCH
            - PICKUP
            - ACCESS
            - SENIOR_HOURS
            - ONLINE_SERVICE_HOURS
        openNow:
          description: Output only. Is this place open right now? Always present unless we lack time-of-day or timezone data for these opening hours.
          readOnly: true
          type: boolean
        periods:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHoursPeriod'
          description: 'Output only. The periods that this place is open during the week. The periods are in chronological order, starting with Sunday in the place-local timezone. An empty (but not absent) value indicates a place that is never open, e.g. because it is closed temporarily for renovations.'
        specialDays:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay'
          description: 'Output only. Structured information for special days that fall within the period that the returned opening hours cover. Special days are days that could impact the business hours of a place, e.g. Christmas day. Set for current_opening_hours and current_secondary_opening_hours if there are exceptional hours.'
        weekdayDescriptions:
          items:
            type: string
          readOnly: true
          type: array
          description: 'Output only. Localized strings describing the opening hours of this place, one string for each day of the week. Will be empty if the hours are unknown or could not be converted to localized text. Example: "Sun: 18:00–06:00"'
    GoogleMapsPlacesV1AuthorAttribution:
      description: 'Information about the author of the UGC data. Used in Photo, and Review.'
      type: object
      id: GoogleMapsPlacesV1AuthorAttribution
      properties:
        photoUri:
          type: string
          description: Output only. Profile photo URI of the author of the Photo or Review.
          readOnly: true
        displayName:
          type: string
          description: Output only. Name of the author of the Photo or Review.
          readOnly: true
        uri:
          readOnly: true
          description: Output only. URI of the author of the Photo or Review.
          type: string
    GoogleMapsPlacesV1Review:
      properties:
        authorAttribution:
          $ref: '#/components/schemas/GoogleMapsPlacesV1AuthorAttribution'
          readOnly: true
          description: Output only. This review's author.
        publishTime:
          readOnly: true
          description: Output only. Timestamp for the review.
          format: google-datetime
          type: string
        text:
          description: Output only. The localized text of the review.
          readOnly: true
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        rating:
          format: double
          type: number
          readOnly: true
          description: 'Output only. A number between 1.0 and 5.0, a.k.a. the number of stars.'
        relativePublishTimeDescription:
          description: 'Output only. A string of formatted recent time, expressing the review time relative to the current time in a form appropriate for the language and country.'
          type: string
          readOnly: true
        originalText:
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
          readOnly: true
          description: Output only. The review text in its original language.
      type: object
      id: GoogleMapsPlacesV1Review
      description: Information about a review of a place.
    GoogleMapsPlacesV1SearchTextRequestLocationRestriction:
      id: GoogleMapsPlacesV1SearchTextRequestLocationRestriction
      type: object
      description: The region to search. This location serves as a restriction which means results outside given location will not be returned.
      properties:
        rectangle:
          $ref: '#/components/schemas/GoogleGeoTypeViewport'
          description: A rectangle box defined by northeast and southwest corner.
    GoogleTypeDate:
      type: object
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      properties:
        month:
          format: int32
          type: integer
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
        day:
          type: integer
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          format: int32
        year:
          format: int32
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
          type: integer
      id: GoogleTypeDate
    GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay:
      id: GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay
      description: 'Structured information for special days that fall within the period that the returned opening hours cover. Special days are days that could impact the business hours of a place, e.g. Christmas day.'
      properties:
        date:
          readOnly: true
          description: Output only. The date of this special day.
          $ref: '#/components/schemas/GoogleTypeDate'
      type: object
    GoogleTypeLocalizedText:
      type: object
      id: GoogleTypeLocalizedText
      properties:
        languageCode:
          description: 'The text''s BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.'
          type: string
        text:
          type: string
          description: Localized string in the language corresponding to `language_code' below.
      description: Localized variant of a text in a particular language.
    GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint:
      description: Status changing points.
      properties:
        truncated:
          type: boolean
          description: 'Output only. Whether or not this endpoint was truncated. Truncation occurs when the real hours are outside the times we are willing to return hours between, so we truncate the hours back to these boundaries. This ensures that at most 24 * 7 hours from midnight of the day of the request are returned.'
          readOnly: true
        hour:
          type: integer
          readOnly: true
          format: int32
          description: Output only. The hour in 2 digits. Ranges from 00 to 23.
        date:
          readOnly: true
          description: Output only. Date in the local timezone for the place.
          $ref: '#/components/schemas/GoogleTypeDate'
        day:
          readOnly: true
          format: int32
          description: 'Output only. A day of the week, as an integer in the range 0-6. 0 is Sunday, 1 is Monday, etc.'
          type: integer
        minute:
          format: int32
          type: integer
          readOnly: true
          description: Output only. The minute in 2 digits. Ranges from 00 to 59.
      type: object
      id: GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint
    GoogleMapsPlacesV1Place:
      id: GoogleMapsPlacesV1Place
      type: object
      properties:
        currentSecondaryOpeningHours:
          readOnly: true
          description: 'Output only. Contains an array of entries for the next seven days including information about secondary hours of a business. Secondary hours are different from a business''s main hours. For example, a restaurant can specify drive through hours or delivery hours as its secondary hours. This field populates the type subfield, which draws from a predefined list of opening hours types (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the place. This field includes the special_days subfield of all hours, set for dates that have exceptional hours.'
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHours'
          type: array
        name:
          description: 'Output only. An ID representing this place which may be used to look up this place again (a.k.a. the API "resource" name: places/).'
          readOnly: true
          type: string
        servesLunch:
          type: boolean
          description: Output only. Specifies if the place serves lunch.
          readOnly: true
        servesDinner:
          description: Output only. Specifies if the place serves dinner.
          type: boolean
          readOnly: true
        reservable:
          description: Output only. Specifies if the place supports reservations.
          readOnly: true
          type: boolean
        googleMapsUri:
          readOnly: true
          type: string
          description: Output only. A URL providing more information about this place.
        servesVegetarianFood:
          type: boolean
          readOnly: true
          description: Output only. Specifies if the place serves vegetarian food.
        plusCode:
          readOnly: true
          description: Output only. Plus code of the place location lat/long.
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlacePlusCode'
        location:
          $ref: '#/components/schemas/GoogleTypeLatLng'
          readOnly: true
          description: Output only. The position of this place.
        iconMaskBaseUri:
          description: 'Output only. A truncated URL to an v2 icon mask. User can access different icon type by appending type suffix to the end (eg, ".svg" or ".png").'
          readOnly: true
          type: string
        viewport:
          description: Output only. A viewport suitable for displaying the place on an average-sized map.
          readOnly: true
          $ref: '#/components/schemas/GoogleGeoTypeViewport'
        dineIn:
          type: boolean
          readOnly: true
          description: Output only. Specifies if the business supports indoor or outdoor seating options.
        curbsidePickup:
          readOnly: true
          type: boolean
          description: Output only. Specifies if the business supports curbside pickup.
        nationalPhoneNumber:
          type: string
          readOnly: true
          description: 'Output only. A human-readable phone number for the place, in national format.'
        reviews:
          type: array
          description: Output only. List of reviews about this place.
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1Review'
          readOnly: true
        displayName:
          description: 'Output only. The localized name of the place, suitable as a short human-readable description. For example, "Google Sydney", "Starbucks", "Pyrmont", etc.'
          readOnly: true
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        utcOffsetMinutes:
          description: 'Output only. Number of minutes this place''s timezone is currently offset from UTC. This is expressed in minutes to support timezones that are offset by fractions of an hour, e.g. X hours and 15 minutes.'
          format: int32
          type: integer
          readOnly: true
        userRatingCount:
          description: Output only. The total number of reviews (with or without text) for this place.
          format: int32
          readOnly: true
          type: integer
        addressComponents:
          type: array
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceAddressComponent'
          description: Output only. Repeated components for each locality level.
          readOnly: true
        adrFormatAddress:
          readOnly: true
          description: 'Output only. The place''s address in adr microformat: http://microformats.org/wiki/adr.'
          type: string
        servesWine:
          type: boolean
          description: Output only. Specifies if the place serves wine.
          readOnly: true
        rating:
          type: number
          readOnly: true
          format: double
          description: 'Output only. A rating between 1.0 and 5.0, based on user reviews of this place.'
        websiteUri:
          description: 'Output only. The authoritative website for this place, e.g. a business'' homepage. Note that for places that are part of a chain (e.g. an IKEA store), this will usually be the website for the individual store, not the overall chain.'
          readOnly: true
          type: string
        wheelchairAccessibleEntrance:
          type: boolean
          description: Output only. Specifies if the place has an entrance that is wheelchair-accessible.
          readOnly: true
        delivery:
          readOnly: true
          type: boolean
          description: Output only. Specifies if the business supports delivery.
        formattedAddress:
          readOnly: true
          description: 'Output only. A full, human-readable address for this place.'
          type: string
        secondaryOpeningHours:
          type: array
          description: 'Output only. Contains an array of entries for information about regular secondary hours of a business. Secondary hours are different from a business''s main hours. For example, a restaurant can specify drive through hours or delivery hours as its secondary hours. This field populates the type subfield, which draws from a predefined list of opening hours types (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the place.'
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHours'
          readOnly: true
        currentOpeningHours:
          description: 'Output only. The hours of operation for the next seven days (including today). The time period starts at midnight on the date of the request and ends at 11:59 pm six days later. This field includes the special_days subfield of all hours, set for dates that have exceptional hours.'
          readOnly: true
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHours'
        attributions:
          description: Output only. A set of data provider that must be shown with this result.
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceAttribution'
          type: array
        internationalPhoneNumber:
          description: 'Output only. A human-readable phone number for the place, in international format.'
          type: string
          readOnly: true
        id:
          description: Output only. The unique identifier of a place.
          type: string
          readOnly: true
        businessStatus:
          readOnly: true
          type: string
          enum:
            - BUSINESS_STATUS_UNSPECIFIED
            - OPERATIONAL
            - CLOSED_TEMPORARILY
            - CLOSED_PERMANENTLY
          enumDescriptions:
            - Default value. This value is unused.
            - 'The establishment is operational, not necessarily open now.'
            - The establishment is temporarily closed.
            - The establishment is permanently closed.
          description: Output only. The business status for the place.
        types:
          description: 'Output only. A set of type tags for this result. For example, "political" and "locality".'
          type: array
          items:
            type: string
          readOnly: true
        openingHours:
          readOnly: true
          $ref: '#/components/schemas/GoogleMapsPlacesV1PlaceOpeningHours'
          description: Output only. The regular hours of operation.
        servesBreakfast:
          description: Output only. Specifies if the place serves breakfast.
          type: boolean
          readOnly: true
        editorialSummary:
          readOnly: true
          description: 'Output only. Contains a summary of the place. A summary is comprised of a textual overview, and also includes the language code for these if applicable. Summary text must be presented as-is and can not be modified or altered.'
          $ref: '#/components/schemas/GoogleTypeLocalizedText'
        servesBrunch:
          description: Output only. Specifies if the place serves brunch.
          type: boolean
          readOnly: true
        servesBeer:
          readOnly: true
          type: boolean
          description: Output only. Specifies if the place serves beer.
        priceLevel:
          readOnly: true
          enumDescriptions:
            - Place price level is unspecified or unknown.
            - Place provides free services.
            - Place provides inexpensive services.
            - Place provides moderately priced services.
            - Place provides expensive services.
            - Place provides very expensive services.
          description: Output only. Price level of the place.
          enum:
            - PRICE_LEVEL_UNSPECIFIED
            - PRICE_LEVEL_FREE
            - PRICE_LEVEL_INEXPENSIVE
            - PRICE_LEVEL_MODERATE
            - PRICE_LEVEL_EXPENSIVE
            - PRICE_LEVEL_VERY_EXPENSIVE
          type: string
        takeout:
          type: boolean
          readOnly: true
          description: Output only. Specifies if the business supports takeout.
        iconBackgroundColor:
          description: 'Output only. Background color for icon_mask in hex format, e.g. #909CE1.'
          type: string
          readOnly: true
      description: All the information representing a Place.
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  x-stackQL-resources:
    text:
      id: google.places.text
      name: text
      title: Text
      methods:
        search:
          operation:
            $ref: '#/paths/~1v1~1Text:search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    places:
      id: google.places.places
      name: places
      title: Places
      methods:
        search_text:
          operation:
            $ref: '#/paths/~1v1~1places:searchText/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v1/Text:search':
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
    post:
      description: Text query based place search.
      operationId: places.Text.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleMapsPlacesV1SearchTextRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/maps-platform.places'
          Oauth2c:
            - 'https://www.googleapis.com/auth/maps-platform.places'
        - Oauth2:
            - 'https://www.googleapis.com/auth/maps-platform.places.textsearch'
          Oauth2c:
            - 'https://www.googleapis.com/auth/maps-platform.places.textsearch'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMapsPlacesV1SearchTextResponse'
      parameters: []
      x-stackQL-resource: text
      x-stackQL-method: search
      x-stackQL-verb: exec
  '/v1/places:searchText':
    parameters: *ref_1
    post:
      description: Text query based place search.
      operationId: places.places.searchText
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleMapsPlacesV1SearchTextRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/maps-platform.places'
          Oauth2c:
            - 'https://www.googleapis.com/auth/maps-platform.places'
        - Oauth2:
            - 'https://www.googleapis.com/auth/maps-platform.places.textsearch'
          Oauth2c:
            - 'https://www.googleapis.com/auth/maps-platform.places.textsearch'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMapsPlacesV1SearchTextResponse'
      parameters: []
      x-stackQL-resource: places
      x-stackQL-method: search_text
      x-stackQL-verb: exec
