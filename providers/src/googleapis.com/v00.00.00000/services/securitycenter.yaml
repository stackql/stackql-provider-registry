openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Security Command Center API
  description: Security Command Center API provides access to temporal views of assets and findings within an organization.
  version: v1
  x-discovery-doc-revision: '20230103'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/security-command-center
servers:
  - url: https://securitycenter.googleapis.com
components:
  schemas:
    AuditLogConfig:
      type: object
      id: AuditLogConfig
      properties:
        exemptedMembers:
          items:
            type: string
          type: array
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
        logType:
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
    SecurityMarks:
      id: SecurityMarks
      properties:
        marks:
          type: object
          additionalProperties:
            type: string
          description: 'Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)'
        name:
          description: 'The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".'
          type: string
        canonicalName:
          description: 'The canonical name of the marks. Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "folders/{folder_id}/assets/{asset_id}/securityMarks" "projects/{project_number}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"'
          type: string
      type: object
      description: User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.
    Exfiltration:
      description: Exfiltration represents a data exfiltration attempt of one or more sources to one or more targets. Sources represent the source of data that is exfiltrated, and Targets represents the destination the data was copied to.
      type: object
      properties:
        targets:
          type: array
          description: If there are multiple targets, each target would get a complete copy of the "joined" source data.
          items:
            $ref: '#/components/schemas/ExfilResource'
        sources:
          description: If there are multiple sources, then the data is considered "joined" between them. For instance, BigQuery can join multiple tables, and each table would be considered a source.
          type: array
          items:
            $ref: '#/components/schemas/ExfilResource'
      id: Exfiltration
    NotificationConfig:
      properties:
        streamingConfig:
          description: The config for triggering streaming-based notifications.
          $ref: '#/components/schemas/StreamingConfig'
        serviceAccount:
          readOnly: true
          type: string
          description: Output only. The service account that needs "pubsub.topics.publish" permission to publish to the Pub/Sub topic.
        name:
          description: 'The relative resource name of this notification config. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/notificationConfigs/notify_public_bucket", "folders/{folder_id}/notificationConfigs/notify_public_bucket", or "projects/{project_id}/notificationConfigs/notify_public_bucket".'
          type: string
        description:
          type: string
          description: The description of the notification config (max of 1024 characters).
        pubsubTopic:
          description: The Pub/Sub topic to send notifications to. Its format is "projects/[project_id]/topics/[topic]".
          type: string
      type: object
      description: Cloud Security Command Center (Cloud SCC) notification configs. A notification config is a Cloud SCC resource that contains the configuration to send notifications for create/update events of findings, assets and etc.
      id: NotificationConfig
    GroupAssetsResponse:
      properties:
        groupByResults:
          items:
            $ref: '#/components/schemas/GroupResult'
          type: array
          description: Group results. There exists an element for each existing unique combination of property/values. The element contains a count for the number of times those specific property/values appear.
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results.
          type: string
        totalSize:
          description: The total number of results matching the query.
          format: int32
          type: integer
        readTime:
          format: google-datetime
          type: string
          description: Time used for executing the groupBy request.
      description: Response message for grouping by assets.
      id: GroupAssetsResponse
      type: object
    IamPolicy:
      type: object
      description: Cloud IAM Policy information associated with the Google Cloud resource described by the Security Command Center asset. This information is managed and defined by the Google Cloud resource and cannot be modified by the user.
      id: IamPolicy
      properties:
        policyBlob:
          type: string
          description: The JSON representation of the Policy associated with the asset. See https://cloud.google.com/iam/reference/rest/v1/Policy for format details.
    ListOperationsResponse:
      properties:
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
    ContactDetails:
      description: The details pertaining to specific contacts
      type: object
      properties:
        contacts:
          items:
            $ref: '#/components/schemas/Contact'
          description: A list of contacts
          type: array
      id: ContactDetails
    ListFindingsResult:
      description: Result containing the Finding and its StateChange.
      type: object
      id: ListFindingsResult
      properties:
        resource:
          $ref: '#/components/schemas/Resource'
          readOnly: true
          description: Output only. Resource that is associated with this finding.
        finding:
          $ref: '#/components/schemas/Finding'
          description: Finding matching the search request.
        stateChange:
          type: string
          description: State change of the finding between the points in time.
          enumDescriptions:
            - State change is unused, this is the canonical default for this enum.
            - The finding has changed state in some way between the points in time and existed at both points.
            - The finding has not changed state between the points in time and existed at both points.
            - The finding was created between the points in time.
            - The finding at timestamp does not match the filter specified, but it did at timestamp - compare_duration.
          enum:
            - UNUSED
            - CHANGED
            - UNCHANGED
            - ADDED
            - REMOVED
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
      id: TestIamPermissionsResponse
    Expr:
      properties:
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          type: string
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
        description:
          type: string
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
      id: Expr
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
    Edge:
      properties:
        source:
          description: This is the resource name of the source node.
          type: string
        destination:
          type: string
          description: This is the resource name of the destination node.
      id: Edge
      type: object
      description: Represents a connection between a source node and a destination node in this exposure path.
    YaraRuleSignature:
      id: YaraRuleSignature
      properties:
        yaraRule:
          type: string
          description: The name of the YARA rule.
      description: A signature corresponding to a YARA rule.
      type: object
    Database:
      id: Database
      properties:
        displayName:
          type: string
          description: The human readable name of the database the user connected to.
        query:
          description: The SQL statement associated with the relevant access.
          type: string
        grantees:
          type: array
          description: The target usernames/roles/groups of a SQL privilege grant (not an IAM policy change).
          items:
            type: string
        userName:
          type: string
          description: The username used to connect to the DB. This may not necessarily be an IAM principal, and has no required format.
        name:
          description: The full resource name of the database the user connected to, if it is supported by CAI. (https://google.aip.dev/122#full-resource-names)
          type: string
      description: Represents database access information, such as queries. A database may be a sub-resource of an instance (as in the case of CloudSQL instances or Cloud Spanner instances), or the database instance itself. Some database resources may not have the full resource name populated because these resource types are not yet supported by Cloud Asset Inventory (e.g. CloudSQL databases). In these cases only the display name will be provided.
      type: object
    ListNotificationConfigsResponse:
      type: object
      id: ListNotificationConfigsResponse
      description: Response message for listing notification configs.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results.
          type: string
        notificationConfigs:
          items:
            $ref: '#/components/schemas/NotificationConfig'
          description: Notification configs belonging to the requested parent.
          type: array
    Contact:
      type: object
      id: Contact
      description: The email address of a contact.
      properties:
        email:
          description: An email address. For example, "`person123@company.com`".
          type: string
    AuditConfig:
      type: object
      properties:
        auditLogConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
        service:
          type: string
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      id: AuditConfig
    GoogleCloudSecuritycenterV1NotificationMessage:
      type: object
      id: GoogleCloudSecuritycenterV1NotificationMessage
      description: Cloud SCC's Notification
      properties:
        resource:
          description: The Cloud resource tied to this notification's Finding.
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1Resource'
        finding:
          description: If it's a Finding based notification config, this field will be populated.
          $ref: '#/components/schemas/Finding'
        notificationConfigName:
          type: string
          description: Name of the notification config that generated current notification.
    ListFindingsResponse:
      properties:
        readTime:
          description: Time used for executing the list request.
          format: google-datetime
          type: string
        totalSize:
          type: integer
          format: int32
          description: The total number of findings matching the query.
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results.
          type: string
        listFindingsResults:
          type: array
          description: Findings matching the list request.
          items:
            $ref: '#/components/schemas/ListFindingsResult'
      description: Response message for listing findings.
      id: ListFindingsResponse
      type: object
    ExfilResource:
      properties:
        components:
          items:
            type: string
          description: Subcomponents of the asset that is exfiltrated - these could be URIs used during exfiltration, table names, databases, filenames, etc. For example, multiple tables may be exfiltrated from the same CloudSQL instance, or multiple files from the same Cloud Storage bucket.
          type: array
        name:
          type: string
          description: Resource's URI (https://google.aip.dev/122#full-resource-names)
      description: Resource that has been exfiltrated or exfiltrated_to.
      id: ExfilResource
      type: object
    GetIamPolicyRequest:
      properties:
        options:
          description: 'OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.'
          $ref: '#/components/schemas/GetPolicyOptions'
      description: Request message for `GetIamPolicy` method.
      id: GetIamPolicyRequest
      type: object
    Compliance:
      type: object
      id: Compliance
      properties:
        version:
          type: string
          description: Version of the standard/benchmark e.g. 1.1
        ids:
          items:
            type: string
          type: array
          description: Policies within the standard/benchmark e.g. A.12.4.1
        standard:
          type: string
          description: Refers to industry wide standards or benchmarks e.g. "cis", "pci", "owasp", etc.
      description: Contains compliance information about a security standard indicating unmet recommendations.
    GoogleCloudSecuritycenterV1MuteConfig:
      id: GoogleCloudSecuritycenterV1MuteConfig
      description: A mute config is a Cloud SCC resource that contains the configuration to mute create/update events of findings.
      properties:
        mostRecentEditor:
          type: string
          readOnly: true
          description: Output only. Email address of the user who last edited the mute config. This field is set by the server and will be ignored if provided on config creation or update.
        createTime:
          readOnly: true
          type: string
          description: Output only. The time at which the mute config was created. This field is set by the server and will be ignored if provided on config creation.
          format: google-datetime
        displayName:
          type: string
          description: The human readable name to be displayed for the mute config.
        name:
          description: This field will be ignored if provided on config creation. Format "organizations/{organization}/muteConfigs/{mute_config}" "folders/{folder}/muteConfigs/{mute_config}" "projects/{project}/muteConfigs/{mute_config}"
          type: string
        filter:
          description: 'Required. An expression that defines the filter to apply across create/update events of findings. While creating a filter string, be mindful of the scope in which the mute configuration is being created. E.g., If a filter contains project = X but is created under the project = Y scope, it might not match any findings. The following field and operator combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:` * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`'
          type: string
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The most recent time at which the mute config was updated. This field is set by the server and will be ignored if provided on config creation or update.
        description:
          description: A description of the mute config.
          type: string
      type: object
    ListMuteConfigsResponse:
      id: ListMuteConfigsResponse
      type: object
      description: Response message for listing mute configs.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        muteConfigs:
          type: array
          description: The mute configs from the specified parent.
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
    Geolocation:
      description: Represents a geographical location for a given access.
      properties:
        regionCode:
          type: string
          description: A CLDR.
      type: object
      id: Geolocation
    GoogleCloudSecuritycenterV1BigQueryExport:
      description: Configures how to deliver Findings to BigQuery Instance.
      type: object
      id: GoogleCloudSecuritycenterV1BigQueryExport
      properties:
        createTime:
          description: Output only. The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
          readOnly: true
          format: google-datetime
          type: string
        updateTime:
          description: Output only. The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
          type: string
          readOnly: true
          format: google-datetime
        description:
          description: The description of the export (max of 1024 characters).
          type: string
        dataset:
          description: The dataset to write findings' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
          type: string
        name:
          type: string
          description: 'The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format: "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.'
        mostRecentEditor:
          type: string
          readOnly: true
          description: Output only. Email address of the user who last edited the BigQuery export. This field is set by the server and will be ignored if provided on export creation or update.
        filter:
          description: 'Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.'
          type: string
        principal:
          description: Output only. The service account that needs permission to create table and upload data to the BigQuery dataset.
          type: string
          readOnly: true
    StreamingConfig:
      description: The config for streaming-based notifications, which send each event as soon as it is detected.
      properties:
        filter:
          type: string
          description: 'Expression that defines the filter to apply across create/update events of assets or findings as specified by the event type. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.'
      type: object
      id: StreamingConfig
    OrganizationSettings:
      type: object
      properties:
        assetDiscoveryConfig:
          description: The configuration used for Asset Discovery runs.
          $ref: '#/components/schemas/AssetDiscoveryConfig'
        name:
          description: 'The relative resource name of the settings. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/organizationSettings".'
          type: string
        enableAssetDiscovery:
          type: boolean
          description: A flag that indicates if Asset Discovery should be enabled. If the flag is set to `true`, then discovery of assets will occur. If it is set to `false, all historical assets will remain, but discovery of future assets will not occur.
      description: User specified settings that are attached to the Security Command Center organization.
      id: OrganizationSettings
    GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse:
      id: GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - COMPLETED
            - SUPERSEDED
            - TERMINATED
          type: string
          description: The state of an asset discovery run.
          enumDescriptions:
            - Asset discovery run state was unspecified.
            - Asset discovery run completed successfully.
            - Asset discovery run was cancelled with tasks still pending, as another run for the same organization was started with a higher priority.
            - Asset discovery run was killed and terminated.
        duration:
          format: google-duration
          description: The duration between asset discovery run start and end
          type: string
      description: Response of asset discovery run
      type: object
    Finding:
      properties:
        contacts:
          type: object
          description: 'Output only. Map containing the points of contact for the given finding. The key represents the type of contact, while the value contains a list of all the contacts that pertain. Please refer to: https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories { "security": { "contacts": [ { "email": "person1@company.com" }, { "email": "person2@company.com" } ] } }'
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/ContactDetails'
        database:
          description: Database associated with the finding.
          $ref: '#/components/schemas/Database'
        parentDisplayName:
          description: Output only. The human readable display name of the finding source such as "Event Threat Detection" or "Security Health Analytics".
          readOnly: true
          type: string
        kernelRootkit:
          description: Kernel Rootkit signature.
          $ref: '#/components/schemas/KernelRootkit'
        name:
          description: 'The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"'
          type: string
        processes:
          description: Represents operating system processes associated with the Finding.
          items:
            $ref: '#/components/schemas/Process'
          type: array
        findingClass:
          enum:
            - FINDING_CLASS_UNSPECIFIED
            - THREAT
            - VULNERABILITY
            - MISCONFIGURATION
            - OBSERVATION
            - SCC_ERROR
          type: string
          enumDescriptions:
            - Unspecified finding class.
            - Describes unwanted or malicious activity.
            - Describes a potential weakness in software that increases risk to Confidentiality & Integrity & Availability.
            - Describes a potential weakness in cloud resource/asset configuration that increases risk.
            - Describes a security observation that is for informational purposes.
            - Describes an error that prevents some SCC functionality.
          description: The class of the finding.
        externalUri:
          type: string
          description: The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.
        parent:
          type: string
          description: 'The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"'
        severity:
          type: string
          description: The severity of the finding. This field is managed by the source that writes the finding.
          enumDescriptions:
            - This value is used for findings when a source doesn't write a severity value.
            - 'Vulnerability: A critical vulnerability is easily discoverable by an external actor, exploitable, and results in the direct ability to execute arbitrary code, exfiltrate data, and otherwise gain additional access and privileges to cloud resources and workloads. Examples include publicly accessible unprotected user data, public SSH access with weak or no passwords, etc. Threat: Indicates a threat that is able to access, modify, or delete data or execute unauthorized code within existing resources.'
            - 'Vulnerability: A high risk vulnerability can be easily discovered and exploited in combination with other vulnerabilities in order to gain direct access and the ability to execute arbitrary code, exfiltrate data, and otherwise gain additional access and privileges to cloud resources and workloads. An example is a database with weak or no passwords that is only accessible internally. This database could easily be compromised by an actor that had access to the internal network. Threat: Indicates a threat that is able to create new computational resources in an environment but not able to access data or execute code in existing resources.'
            - 'Vulnerability: A medium risk vulnerability could be used by an actor to gain access to resources or privileges that enable them to eventually (through multiple steps or a complex exploit) gain access and the ability to execute arbitrary code or exfiltrate data. An example is a service account with access to more projects than it should have. If an actor gains access to the service account, they could potentially use that access to manipulate a project the service account was not intended to. Threat: Indicates a threat that is able to cause operational impact but may not access data or execute unauthorized code.'
            - 'Vulnerability: A low risk vulnerability hampers a security organization''s ability to detect vulnerabilities or active threats in their deployment, or prevents the root cause investigation of security issues. An example is monitoring and logs being disabled for resource configurations and access. Threat: Indicates a threat that has obtained minimal access to an environment but is not able to access data, execute code, or create resources.'
          enum:
            - SEVERITY_UNSPECIFIED
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
        sourceProperties:
          additionalProperties:
            type: any
          type: object
          description: Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.
        indicator:
          description: 'Represents what''s commonly known as an Indicator of compromise (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise'
          $ref: '#/components/schemas/Indicator'
        description:
          description: Contains more detail about the finding.
          type: string
        muteInitiator:
          type: string
          description: First known as mute_annotation. Records additional information about the mute operation e.g. mute config that muted the finding, user who muted the finding, etc. Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.
        mitreAttack:
          description: 'MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org'
          $ref: '#/components/schemas/MitreAttack'
        muteUpdateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The most recent time this finding was muted or unmuted.
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
          enumDescriptions:
            - Unspecified state.
            - The finding requires attention and has not been addressed yet.
            - The finding has been fixed, triaged as a non-issue or otherwise addressed and is no longer active.
          description: The state of the finding.
        mute:
          enum:
            - MUTE_UNSPECIFIED
            - MUTED
            - UNMUTED
            - UNDEFINED
          type: string
          enumDescriptions:
            - Unspecified.
            - Finding has been muted.
            - Finding has been unmuted.
            - Finding has never been muted/unmuted.
          description: Indicates the mute state of a finding (either muted, unmuted or undefined). Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.
        securityMarks:
          description: Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding.
          $ref: '#/components/schemas/SecurityMarks'
          readOnly: true
        access:
          description: Access details associated to the Finding, such as more information on the caller, which method was accessed, from where, etc.
          $ref: '#/components/schemas/Access'
        exfiltration:
          description: Represents exfiltration associated with the Finding.
          $ref: '#/components/schemas/Exfiltration'
        compliances:
          type: array
          description: Contains compliance information for security standards associated to the finding.
          items:
            $ref: '#/components/schemas/Compliance'
        category:
          description: 'The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"'
          type: string
        kubernetes:
          description: Kubernetes resources associated with the finding.
          $ref: '#/components/schemas/Kubernetes'
        nextSteps:
          description: Next steps associate to the finding.
          type: string
        externalSystems:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1ExternalSystem'
          description: Output only. Third party SIEM/SOAR fields within SCC, contains external system information and external system finding fields.
          readOnly: true
          type: object
        resourceName:
          description: 'For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.'
          type: string
        connections:
          type: array
          description: Contains information about the IP connection associated with the finding.
          items:
            $ref: '#/components/schemas/Connection'
        createTime:
          description: The time at which the finding was created in Security Command Center.
          format: google-datetime
          type: string
        eventTime:
          type: string
          description: The time the finding was first detected. If an existing finding is updated, then this is the time the update occurred. For example, if the finding represents an open firewall, this property captures the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding is later resolved, then this time reflects when the finding was resolved. This must not be set to a value greater than the current timestamp.
          format: google-datetime
        containers:
          description: Containers associated with the finding. containers provides information for both Kubernetes and non-Kubernetes containers.
          type: array
          items:
            $ref: '#/components/schemas/Container'
        canonicalName:
          type: string
          description: The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of the resource associated with the finding.
        files:
          items:
            $ref: '#/components/schemas/File'
          description: File associated with the finding.
          type: array
        iamBindings:
          description: Represents IAM bindings associated with the Finding.
          items:
            $ref: '#/components/schemas/IamBinding'
          type: array
        vulnerability:
          description: Represents vulnerability-specific fields like CVE and CVSS scores. CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)
          $ref: '#/components/schemas/Vulnerability'
      description: Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.
      id: Finding
      type: object
    Asset:
      properties:
        iamPolicy:
          $ref: '#/components/schemas/IamPolicy'
          description: Cloud IAM Policy information associated with the Google Cloud resource described by the Security Command Center asset. This information is managed and defined by the Google Cloud resource and cannot be modified by the user.
        createTime:
          description: The time at which the asset was created in Security Command Center.
          format: google-datetime
          type: string
        securityCenterProperties:
          description: Security Command Center managed properties. These properties are managed by Security Command Center and cannot be modified by the user.
          $ref: '#/components/schemas/SecurityCenterProperties'
        name:
          description: 'The relative resource name of this asset. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/assets/{asset_id}".'
          type: string
        canonicalName:
          type: string
          description: The canonical name of the resource. It's either "organizations/{organization_id}/assets/{asset_id}", "folders/{folder_id}/assets/{asset_id}" or "projects/{project_number}/assets/{asset_id}", depending on the closest CRM ancestor of the resource.
        securityMarks:
          description: User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the asset.
          $ref: '#/components/schemas/SecurityMarks'
        resourceProperties:
          additionalProperties:
            type: any
          type: object
          description: Resource managed properties. These properties are managed and defined by the Google Cloud resource and cannot be modified by the user.
        updateTime:
          format: google-datetime
          type: string
          description: The time at which the asset was last updated or added in Cloud SCC.
      id: Asset
      description: Security Command Center representation of a Google Cloud resource. The Asset is a Security Command Center resource that captures information about a single Google Cloud resource. All modifications to an Asset are only within the context of Security Command Center and don't affect the referenced Google Cloud resource.
      type: object
    Cve:
      properties:
        references:
          description: Additional information about the CVE. e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        id:
          description: The unique identifier for the vulnerability. e.g. CVE-2021-34527
          type: string
        upstreamFixAvailable:
          type: boolean
          description: Whether upstream fix is available for the CVE.
        cvssv3:
          description: Describe Common Vulnerability Scoring System specified at https://www.first.org/cvss/v3.1/specification-document
          $ref: '#/components/schemas/Cvssv3'
      id: Cve
      type: object
      description: 'CVE stands for Common Vulnerabilities and Exposures. More information: https://cve.mitre.org'
    Empty:
      id: Empty
      type: object
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    GroupFindingsRequest:
      description: Request message for grouping by findings.
      type: object
      properties:
        pageToken:
          type: string
          description: The value returned by the last `GroupFindingsResponse`; indicates that this is a continuation of a prior `GroupFindings` call, and that the system should return the next page of data.
        pageSize:
          format: int32
          type: integer
          description: The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.
        filter:
          description: 'Expression that defines the filter to apply across findings. The expression is a list of one or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. Examples include: * name * source_properties.a_property * security_marks.marks.marka The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes. The following field and operator combinations are supported: * name: `=` * parent: `=`, `:` * resource_name: `=`, `:` * state: `=`, `:` * category: `=`, `:` * external_uri: `=`, `:` * event_time: `=`, `>`, `<`, `>=`, `<=` Usage: This should be milliseconds since epoch or an RFC3339 string. Examples: `event_time = "2019-06-10T16:07:18-07:00"` `event_time = 1560208038000` * severity: `=`, `:` * workflow_state: `=`, `:` * security_marks.marks: `=`, `:` * source_properties: `=`, `:`, `>`, `<`, `>=`, `<=` For example, `source_properties.size = 100` is a valid filter string. Use a partial match on the empty string to filter based on a property existing: `source_properties.my_property : ""` Use a negated partial match on the empty string to filter based on a property not existing: `-source_properties.my_property : ""` * resource: * resource.name: `=`, `:` * resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` * resource.type: `=`, `:`'
          type: string
        readTime:
          type: string
          description: Time used as a reference point when filtering findings. The filter is limited to findings existing at the supplied time and their values are those at that specific time. Absence of this field will default to the API's version of NOW.
          format: google-datetime
        groupBy:
          description: 'Required. Expression that defines what assets fields to use for grouping (including `state_change`). The string value should follow SQL syntax: comma separated list of fields. For example: "parent,resource_name". The following fields are supported: * resource_name * category * state * parent * severity The following fields are supported when compare_duration is set: * state_change'
          type: string
        compareDuration:
          description: 'When compare_duration is set, the GroupResult''s "state_change" attribute is updated to indicate whether the finding had its state changed, the finding''s state remained unchanged, or if the finding was added during the compare_duration period of time that precedes the read_time. This is the time between (read_time - compare_duration) and read_time. The state_change value is derived based on the presence and state of the finding at the two points in time. Intermediate state changes between the two times don''t affect the result. For example, the results aren''t affected if the finding is made inactive and then active again. Possible "state_change" values when compare_duration is specified: * "CHANGED": indicates that the finding was present and matched the given filter at the start of compare_duration, but changed its state at read_time. * "UNCHANGED": indicates that the finding was present and matched the given filter at the start of compare_duration and did not change state at read_time. * "ADDED": indicates that the finding did not match the given filter or was not present at the start of compare_duration, but was present at read_time. * "REMOVED": indicates that the finding was present and matched the filter at the start of compare_duration, but did not match the filter at read_time. If compare_duration is not specified, then the only possible state_change is "UNUSED", which will be the state_change set for all findings present at read_time. If this field is set then `state_change` must be a specified field in `group_by`.'
          type: string
          format: google-duration
      id: GroupFindingsRequest
    GroupAssetsRequest:
      properties:
        compareDuration:
          format: google-duration
          description: 'When compare_duration is set, the GroupResult''s "state_change" property is updated to indicate whether the asset was added, removed, or remained present during the compare_duration period of time that precedes the read_time. This is the time between (read_time - compare_duration) and read_time. The state change value is derived based on the presence of the asset at the two points in time. Intermediate state changes between the two times don''t affect the result. For example, the results aren''t affected if the asset is removed and re-created again. Possible "state_change" values when compare_duration is specified: * "ADDED": indicates that the asset was not present at the start of compare_duration, but present at reference_time. * "REMOVED": indicates that the asset was present at the start of compare_duration, but not present at reference_time. * "ACTIVE": indicates that the asset was present at both the start and the end of the time period defined by compare_duration and reference_time. If compare_duration is not specified, then the only possible state_change is "UNUSED", which will be the state_change set for all assets present at read_time. If this field is set then `state_change` must be a specified field in `group_by`.'
          type: string
        pageToken:
          description: The value returned by the last `GroupAssetsResponse`; indicates that this is a continuation of a prior `GroupAssets` call, and that the system should return the next page of data.
          type: string
        readTime:
          format: google-datetime
          type: string
          description: Time used as a reference point when filtering assets. The filter is limited to assets existing at the supplied time and their values are those at that specific time. Absence of this field will default to the API's version of NOW.
        pageSize:
          format: int32
          description: The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.
          type: integer
        groupBy:
          type: string
          description: 'Required. Expression that defines what assets fields to use for grouping. The string value should follow SQL syntax: comma separated list of fields. For example: "security_center_properties.resource_project,security_center_properties.project". The following fields are supported when compare_duration is not set: * security_center_properties.resource_project * security_center_properties.resource_project_display_name * security_center_properties.resource_type * security_center_properties.resource_parent * security_center_properties.resource_parent_display_name The following fields are supported when compare_duration is set: * security_center_properties.resource_type * security_center_properties.resource_project_display_name * security_center_properties.resource_parent_display_name'
        filter:
          type: string
          description: 'Expression that defines the filter to apply across assets. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the Asset resource. Examples include: * name * security_center_properties.resource_name * resource_properties.a_property * security_marks.marks.marka The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes. The following field and operator combinations are supported: * name: `=` * update_time: `=`, `>`, `<`, `>=`, `<=` Usage: This should be milliseconds since epoch or an RFC3339 string. Examples: `update_time = "2019-06-10T16:07:18-07:00"` `update_time = 1560208038000` * create_time: `=`, `>`, `<`, `>=`, `<=` Usage: This should be milliseconds since epoch or an RFC3339 string. Examples: `create_time = "2019-06-10T16:07:18-07:00"` `create_time = 1560208038000` * iam_policy.policy_blob: `=`, `:` * resource_properties: `=`, `:`, `>`, `<`, `>=`, `<=` * security_marks.marks: `=`, `:` * security_center_properties.resource_name: `=`, `:` * security_center_properties.resource_display_name: `=`, `:` * security_center_properties.resource_type: `=`, `:` * security_center_properties.resource_parent: `=`, `:` * security_center_properties.resource_parent_display_name: `=`, `:` * security_center_properties.resource_project: `=`, `:` * security_center_properties.resource_project_display_name: `=`, `:` * security_center_properties.resource_owners: `=`, `:` For example, `resource_properties.size = 100` is a valid filter string. Use a partial match on the empty string to filter based on a property existing: `resource_properties.my_property : ""` Use a negated partial match on the empty string to filter based on a property not existing: `-resource_properties.my_property : ""`'
      id: GroupAssetsRequest
      description: Request message for grouping by assets.
      type: object
    Node:
      type: object
      properties:
        name:
          description: Full Resource name of the Compute Engine VM running the cluster node.
          type: string
      id: Node
      description: Kubernetes Nodes associated with the finding.
    MitreAttack:
      type: object
      properties:
        additionalTechniques:
          description: Additional MITRE ATT&CK techniques related to this finding, if any, along with any of their respective parent techniques.
          items:
            enum:
              - TECHNIQUE_UNSPECIFIED
              - ACTIVE_SCANNING
              - SCANNING_IP_BLOCKS
              - INGRESS_TOOL_TRANSFER
              - NATIVE_API
              - SHARED_MODULES
              - COMMAND_AND_SCRIPTING_INTERPRETER
              - UNIX_SHELL
              - RESOURCE_HIJACKING
              - PROXY
              - EXTERNAL_PROXY
              - MULTI_HOP_PROXY
              - DYNAMIC_RESOLUTION
              - UNSECURED_CREDENTIALS
              - VALID_ACCOUNTS
              - LOCAL_ACCOUNTS
              - CLOUD_ACCOUNTS
              - NETWORK_DENIAL_OF_SERVICE
              - PERMISSION_GROUPS_DISCOVERY
              - CLOUD_GROUPS
              - EXFILTRATION_OVER_WEB_SERVICE
              - EXFILTRATION_TO_CLOUD_STORAGE
              - ACCOUNT_MANIPULATION
              - SSH_AUTHORIZED_KEYS
              - CREATE_OR_MODIFY_SYSTEM_PROCESS
              - STEAL_WEB_SESSION_COOKIE
              - MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE
              - EXPLOIT_PUBLIC_FACING_APPLICATION
              - MODIFY_AUTHENTICATION_PROCESS
              - DATA_DESTRUCTION
              - DOMAIN_POLICY_MODIFICATION
              - IMPAIR_DEFENSES
              - NETWORK_SERVICE_DISCOVERY
              - ACCESS_TOKEN_MANIPULATION
              - ABUSE_ELEVATION_CONTROL_MECHANISM
              - DEFAULT_ACCOUNTS
            type: string
            enumDescriptions:
              - Unspecified value.
              - T1595
              - T1595.001
              - T1105
              - T1106
              - T1129
              - T1059
              - T1059.004
              - T1496
              - T1090
              - T1090.002
              - T1090.003
              - T1568
              - T1552
              - T1078
              - T1078.003
              - T1078.004
              - T1498
              - T1069
              - T1069.003
              - T1567
              - T1567.002
              - T1098
              - T1098.004
              - T1543
              - T1539
              - T1578
              - T1190
              - T1556
              - T1485
              - T1484
              - T1562
              - T1046
              - T1134
              - T1548
              - T1078.001
          type: array
        primaryTactic:
          description: The MITRE ATT&CK tactic most closely represented by this finding, if any.
          enumDescriptions:
            - Unspecified value.
            - TA0043
            - TA0042
            - TA0001
            - TA0002
            - TA0003
            - TA0004
            - TA0005
            - TA0006
            - TA0007
            - TA0008
            - TA0009
            - TA0011
            - TA0010
            - TA0040
          enum:
            - TACTIC_UNSPECIFIED
            - RECONNAISSANCE
            - RESOURCE_DEVELOPMENT
            - INITIAL_ACCESS
            - EXECUTION
            - PERSISTENCE
            - PRIVILEGE_ESCALATION
            - DEFENSE_EVASION
            - CREDENTIAL_ACCESS
            - DISCOVERY
            - LATERAL_MOVEMENT
            - COLLECTION
            - COMMAND_AND_CONTROL
            - EXFILTRATION
            - IMPACT
          type: string
        version:
          description: The MITRE ATT&CK version referenced by the above fields. E.g. "8".
          type: string
        primaryTechniques:
          type: array
          items:
            enumDescriptions:
              - Unspecified value.
              - T1595
              - T1595.001
              - T1105
              - T1106
              - T1129
              - T1059
              - T1059.004
              - T1496
              - T1090
              - T1090.002
              - T1090.003
              - T1568
              - T1552
              - T1078
              - T1078.003
              - T1078.004
              - T1498
              - T1069
              - T1069.003
              - T1567
              - T1567.002
              - T1098
              - T1098.004
              - T1543
              - T1539
              - T1578
              - T1190
              - T1556
              - T1485
              - T1484
              - T1562
              - T1046
              - T1134
              - T1548
              - T1078.001
            type: string
            enum:
              - TECHNIQUE_UNSPECIFIED
              - ACTIVE_SCANNING
              - SCANNING_IP_BLOCKS
              - INGRESS_TOOL_TRANSFER
              - NATIVE_API
              - SHARED_MODULES
              - COMMAND_AND_SCRIPTING_INTERPRETER
              - UNIX_SHELL
              - RESOURCE_HIJACKING
              - PROXY
              - EXTERNAL_PROXY
              - MULTI_HOP_PROXY
              - DYNAMIC_RESOLUTION
              - UNSECURED_CREDENTIALS
              - VALID_ACCOUNTS
              - LOCAL_ACCOUNTS
              - CLOUD_ACCOUNTS
              - NETWORK_DENIAL_OF_SERVICE
              - PERMISSION_GROUPS_DISCOVERY
              - CLOUD_GROUPS
              - EXFILTRATION_OVER_WEB_SERVICE
              - EXFILTRATION_TO_CLOUD_STORAGE
              - ACCOUNT_MANIPULATION
              - SSH_AUTHORIZED_KEYS
              - CREATE_OR_MODIFY_SYSTEM_PROCESS
              - STEAL_WEB_SESSION_COOKIE
              - MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE
              - EXPLOIT_PUBLIC_FACING_APPLICATION
              - MODIFY_AUTHENTICATION_PROCESS
              - DATA_DESTRUCTION
              - DOMAIN_POLICY_MODIFICATION
              - IMPAIR_DEFENSES
              - NETWORK_SERVICE_DISCOVERY
              - ACCESS_TOKEN_MANIPULATION
              - ABUSE_ELEVATION_CONTROL_MECHANISM
              - DEFAULT_ACCOUNTS
          description: The MITRE ATT&CK technique most closely represented by this finding, if any. primary_techniques is a repeated field because there are multiple levels of MITRE ATT&CK techniques. If the technique most closely represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`), both the sub-technique and its parent technique(s) will be listed (e.g. `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`).
        additionalTactics:
          description: Additional MITRE ATT&CK tactics related to this finding, if any.
          items:
            enum:
              - TACTIC_UNSPECIFIED
              - RECONNAISSANCE
              - RESOURCE_DEVELOPMENT
              - INITIAL_ACCESS
              - EXECUTION
              - PERSISTENCE
              - PRIVILEGE_ESCALATION
              - DEFENSE_EVASION
              - CREDENTIAL_ACCESS
              - DISCOVERY
              - LATERAL_MOVEMENT
              - COLLECTION
              - COMMAND_AND_CONTROL
              - EXFILTRATION
              - IMPACT
            type: string
            enumDescriptions:
              - Unspecified value.
              - TA0043
              - TA0042
              - TA0001
              - TA0002
              - TA0003
              - TA0004
              - TA0005
              - TA0006
              - TA0007
              - TA0008
              - TA0009
              - TA0011
              - TA0010
              - TA0040
          type: array
      description: 'MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org'
      id: MitreAttack
    AssetDiscoveryConfig:
      type: object
      description: The configuration used for Asset Discovery runs.
      id: AssetDiscoveryConfig
      properties:
        inclusionMode:
          description: The mode to use for filtering asset discovery.
          enumDescriptions:
            - Unspecified. Setting the mode with this value will disable inclusion/exclusion filtering for Asset Discovery.
            - Asset Discovery will capture only the resources within the projects specified. All other resources will be ignored.
            - Asset Discovery will ignore all resources under the projects specified. All other resources will be retrieved.
          enum:
            - INCLUSION_MODE_UNSPECIFIED
            - INCLUDE_ONLY
            - EXCLUDE
          type: string
        projectIds:
          type: array
          description: The project ids to use for filtering asset discovery.
          items:
            type: string
        folderIds:
          description: The folder ids to use for filtering asset discovery. It consists of only digits, e.g., 756619654966.
          type: array
          items:
            type: string
    Process:
      description: Represents an operating system process.
      properties:
        parentPid:
          format: int64
          description: The parent process id.
          type: string
        script:
          description: When the process represents the invocation of a script, `binary` provides information about the interpreter while `script` provides information about the script file provided to the interpreter.
          $ref: '#/components/schemas/File'
        argumentsTruncated:
          description: True if `args` is incomplete.
          type: boolean
        binary:
          $ref: '#/components/schemas/File'
          description: File information for the process executable.
        envVariables:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          description: Process environment variables.
        pid:
          format: int64
          description: The process id.
          type: string
        libraries:
          items:
            $ref: '#/components/schemas/File'
          type: array
          description: File information for libraries loaded by the process.
        envVariablesTruncated:
          description: True if `env_variables` is incomplete.
          type: boolean
        args:
          description: Process arguments as JSON encoded strings.
          items:
            type: string
          type: array
        name:
          type: string
          description: The process name visible in utilities like `top` and `ps`; it can be accessed via `/proc/[pid]/comm` and changed with `prctl(PR_SET_NAME)`.
      type: object
      id: Process
    Indicator:
      properties:
        uris:
          items:
            type: string
          type: array
          description: The list of URIs associated to the Findings.
        ipAddresses:
          type: array
          description: The list of IP addresses that are associated with the finding.
          items:
            type: string
        signatures:
          description: The list of matched signatures indicating that the given process is present in the environment.
          type: array
          items:
            $ref: '#/components/schemas/ProcessSignature'
        domains:
          type: array
          description: List of domains associated to the Finding.
          items:
            type: string
      description: Represents what's commonly known as an _indicator of compromise_ (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. For more information, see [Indicator of compromise](https://en.wikipedia.org/wiki/Indicator_of_compromise).
      id: Indicator
      type: object
    SecurityCenterProperties:
      description: Security Command Center managed properties. These properties are managed by Security Command Center and cannot be modified by the user.
      type: object
      properties:
        resourceProjectDisplayName:
          type: string
          description: The user defined display name for the project of this resource.
        resourceProject:
          description: 'The full resource name of the project the resource belongs to. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
          type: string
        resourceOwners:
          items:
            type: string
          type: array
          description: Owners of the Google Cloud resource.
        resourceName:
          type: string
          description: 'The full resource name of the Google Cloud resource this asset represents. This field is immutable after create time. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
        resourceParentDisplayName:
          type: string
          description: The user defined display name for the parent of this resource.
        resourceDisplayName:
          description: The user defined display name for this resource.
          type: string
        resourceParent:
          description: 'The full resource name of the immediate parent of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
          type: string
        folders:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
          description: Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.
        resourceType:
          type: string
          description: 'The type of the Google Cloud resource. Examples include: APPLICATION, PROJECT, and ORGANIZATION. This is a case insensitive field defined by Security Command Center and/or the producer of the resource and is immutable after create time.'
      id: SecurityCenterProperties
    Resource:
      type: object
      description: Information related to the Google Cloud resource that is associated with this finding.
      id: Resource
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
          description: Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.
        parentDisplayName:
          description: The human readable name of resource's parent.
          type: string
        parentName:
          description: The full resource name of resource's parent.
          type: string
        projectName:
          type: string
          description: The full resource name of project that the resource belongs to.
        displayName:
          type: string
          description: The human readable name of the resource.
        type:
          description: The full resource type of the resource.
          type: string
        projectDisplayName:
          type: string
          description: The project ID that the resource belongs to.
        name:
          description: 'The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
          type: string
    GoogleCloudSecuritycenterV1p1beta1Folder:
      id: GoogleCloudSecuritycenterV1p1beta1Folder
      properties:
        resourceFolder:
          type: string
          description: 'Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
        resourceFolderDisplayName:
          type: string
          description: The user defined display name for this folder.
      description: Message that contains the resource name and display name of a folder resource.
      type: object
    Vulnerability:
      type: object
      properties:
        cve:
          $ref: '#/components/schemas/Cve'
          description: CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)
      description: Refers to common vulnerability fields e.g. cve, cvss, cwe etc.
      id: Vulnerability
    GoogleCloudSecuritycenterV1p1beta1NotificationMessage:
      id: GoogleCloudSecuritycenterV1p1beta1NotificationMessage
      description: Security Command Center's Notification
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1Resource'
          description: The Cloud resource tied to the notification.
        finding:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1Finding'
          description: If it's a Finding based notification config, this field will be populated.
        notificationConfigName:
          description: Name of the notification config that generated current notification.
          type: string
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        role:
          type: string
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        members:
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. '
          type: array
      type: object
      id: Binding
    GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse:
      type: object
      properties:
        duration:
          description: The duration between asset discovery run start and end
          format: google-duration
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - COMPLETED
            - SUPERSEDED
            - TERMINATED
          type: string
          description: The state of an asset discovery run.
          enumDescriptions:
            - Asset discovery run state was unspecified.
            - Asset discovery run completed successfully.
            - Asset discovery run was cancelled with tasks still pending, as another run for the same organization was started with a higher priority.
            - Asset discovery run was killed and terminated.
      id: GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse
      description: Response of asset discovery run
    Connection:
      description: Contains information about the IP connection associated with the finding.
      type: object
      properties:
        protocol:
          type: string
          description: IANA Internet Protocol Number such as TCP(6) and UDP(17).
          enumDescriptions:
            - Unspecified protocol (not HOPOPT).
            - Internet Control Message Protocol.
            - Transmission Control Protocol.
            - User Datagram Protocol.
            - Generic Routing Encapsulation.
            - Encap Security Payload.
          enum:
            - PROTOCOL_UNSPECIFIED
            - ICMP
            - TCP
            - UDP
            - GRE
            - ESP
        destinationPort:
          type: integer
          description: Destination port. Not present for sockets that are listening and not connected.
          format: int32
        destinationIp:
          description: Destination IP address. Not present for sockets that are listening and not connected.
          type: string
        sourceIp:
          description: Source IP address.
          type: string
        sourcePort:
          description: Source port.
          type: integer
          format: int32
      id: Connection
    AssociatedFinding:
      type: object
      id: AssociatedFinding
      properties:
        findingCategory:
          type: string
          description: The additional taxonomy group within findings from a given source.
        name:
          type: string
          description: Full resource name of the finding.
        canonicalFindingName:
          description: 'Canonical name of the associated findings. Example: organizations/123/sources/456/findings/789'
          type: string
      description: A finding that is associated with this node in the exposure path.
    Folder:
      description: Message that contains the resource name and display name of a folder resource.
      properties:
        resourceFolderDisplayName:
          type: string
          description: The user defined display name for this folder.
        resourceFolder:
          type: string
          description: 'Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
      id: Folder
      type: object
    Role:
      description: Kubernetes Role or ClusterRole.
      type: object
      properties:
        ns:
          type: string
          description: Role namespace.
        kind:
          type: string
          enumDescriptions:
            - Role type is not specified.
            - Kubernetes Role.
            - Kubernetes ClusterRole.
          description: Role type.
          enum:
            - KIND_UNSPECIFIED
            - ROLE
            - CLUSTER_ROLE
        name:
          description: Role name.
          type: string
      id: Role
    Detection:
      properties:
        binary:
          description: The name of the binary associated with the memory hash signature detection.
          type: string
        percentPagesMatched:
          format: double
          description: The percentage of memory page hashes in the signature that were matched.
          type: number
      type: object
      id: Detection
      description: Memory hash detection contributing to the binary family match.
    Label:
      id: Label
      type: object
      description: Label represents a generic name=value label. Label has separate name and value fields to support filtering with contains().
      properties:
        value:
          description: Label value.
          type: string
        name:
          description: Label name.
          type: string
    File:
      description: File information about the related binary/library used by an executable, or the script used by a script interpreter
      id: File
      properties:
        sha256:
          type: string
          description: SHA256 hash of the first hashed_size bytes of the file encoded as a hex string. If hashed_size == size, sha256 represents the SHA256 hash of the entire file.
        contents:
          description: Prefix of the file contents as a JSON encoded string. (Currently only populated for Malicious Script Executed findings.)
          type: string
        partiallyHashed:
          type: boolean
          description: True when the hash covers only a prefix of the file.
        path:
          description: Absolute path of the file as a JSON encoded string.
          type: string
        hashedSize:
          format: int64
          description: The length in bytes of the file prefix that was hashed. If hashed_size == size, any hashes reported represent the entire file.
          type: string
        size:
          description: Size of the file in bytes.
          format: int64
          type: string
      type: object
    ListAssetsResult:
      type: object
      description: Result containing the Asset and its State.
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
          description: Asset matching the search request.
        stateChange:
          enum:
            - UNUSED
            - ADDED
            - REMOVED
            - ACTIVE
          type: string
          enumDescriptions:
            - State change is unused, this is the canonical default for this enum.
            - Asset was added between the points in time.
            - Asset was removed between the points in time.
            - Asset was present at both point(s) in time.
          description: State change of the asset between the points in time.
      id: ListAssetsResult
    GoogleCloudSecuritycenterV1p1beta1SecurityMarks:
      id: GoogleCloudSecuritycenterV1p1beta1SecurityMarks
      description: User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.
      type: object
      properties:
        marks:
          description: 'Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)'
          additionalProperties:
            type: string
          type: object
        canonicalName:
          description: 'The canonical name of the marks. Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "folders/{folder_id}/assets/{asset_id}/securityMarks" "projects/{project_number}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"'
          type: string
        name:
          description: 'The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".'
          type: string
    GoogleCloudSecuritycenterV1ExternalSystem:
      description: Representation of third party SIEM/SOAR fields within SCC.
      id: GoogleCloudSecuritycenterV1ExternalSystem
      type: object
      properties:
        externalUid:
          description: Identifier that's used to track the given finding in the external system.
          type: string
        assignees:
          items:
            type: string
          type: array
          description: References primary/secondary etc assignees in the external system.
        status:
          description: Most recent status of the corresponding finding's ticket/tracker in the external system.
          type: string
        name:
          type: string
          description: 'Full resource name of the external system, for example: "organizations/1234/sources/5678/findings/123456/externalSystems/jira", "folders/1234/sources/5678/findings/123456/externalSystems/jira", "projects/1234/sources/5678/findings/123456/externalSystems/jira"'
        externalSystemUpdateTime:
          description: The most recent time when the corresponding finding's ticket/tracker was updated in the external system.
          type: string
          format: google-datetime
    Container:
      type: object
      id: Container
      properties:
        name:
          description: Container name.
          type: string
        labels:
          description: Container labels, as provided by the container runtime.
          items:
            $ref: '#/components/schemas/Label'
          type: array
        imageId:
          type: string
          description: Optional container image id, when provided by the container runtime. Uniquely identifies the container image launched using a container image digest.
        uri:
          type: string
          description: Container image URI provided when configuring a pod/container. May identify a container image version using mutable tags.
      description: Container associated with the finding.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      type: object
      properties:
        updateMask:
          type: string
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
      description: Request message for `SetIamPolicy` method.
    GoogleCloudSecuritycenterV1ResourceValueConfig:
      type: object
      id: GoogleCloudSecuritycenterV1ResourceValueConfig
      properties:
        resourceValue:
          type: string
          description: Required. Resource value level this expression represents
          enum:
            - RESOURCE_VALUE_UNSPECIFIED
            - HIGH
            - MEDIUM
            - LOW
            - NONE
          enumDescriptions:
            - Unspecific value
            - High resource value
            - Medium resource value
            - Low resource value
            - No resource value, e.g. ignore these resources
        scope:
          type: string
          description: Project or folder to scope this config to. For example, "project/456" would apply this config only to resources in "project/456" scope will be checked with "AND" of other resources.
        name:
          description: Name for the resource value config
          type: string
        resourceType:
          description: Apply resource_value only to resources that match resource_type. resource_type will be checked with "AND" of other resources. E.g. "storage.googleapis.com/Bucket" with resource_value "HIGH" will apply "HIGH" value only to "storage.googleapis.com/Bucket" resources.
          type: string
        tagValues:
          description: Required. Tag values combined with AND to check against. Values in the form "tagValues/123" E.g. [ "tagValues/123", "tagValues/456", "tagValues/789" ] https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing
          items:
            type: string
          type: array
      description: A resource value config is a mapping configuration of user's tag values to resource values. Used by the attack path simulation.
    GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse:
      properties:
        duration:
          format: google-duration
          type: string
          description: The duration between asset discovery run start and end
        state:
          enumDescriptions:
            - Asset discovery run state was unspecified.
            - Asset discovery run completed successfully.
            - Asset discovery run was cancelled with tasks still pending, as another run for the same organization was started with a higher priority.
            - Asset discovery run was killed and terminated.
          description: The state of an asset discovery run.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - COMPLETED
            - SUPERSEDED
            - TERMINATED
      id: GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse
      type: object
      description: Response of asset discovery run
    Subject:
      id: Subject
      description: Represents a Kubernetes Subject.
      properties:
        name:
          type: string
          description: Name for subject.
        kind:
          description: Authentication type for subject.
          type: string
          enumDescriptions:
            - Authentication is not specified.
            - User with valid certificate.
            - Users managed by Kubernetes API with credentials stored as Secrets.
            - Collection of users.
          enum:
            - AUTH_TYPE_UNSPECIFIED
            - USER
            - SERVICEACCOUNT
            - GROUP
        ns:
          type: string
          description: Namespace for subject.
      type: object
    Source:
      id: Source
      properties:
        description:
          description: 'The description of the source (max of 1024 characters). Example: "Web Security Scanner is a web security scanner for common vulnerabilities in App Engine applications. It can automatically scan and detect four common vulnerabilities, including cross-site-scripting (XSS), Flash injection, mixed content (HTTP in HTTPS), and outdated or insecure libraries."'
          type: string
        name:
          description: 'The relative resource name of this source. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}"'
          type: string
        canonicalName:
          description: The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}", "folders/{folder_id}/sources/{source_id}" or "projects/{project_number}/sources/{source_id}", depending on the closest CRM ancestor of the resource associated with the finding.
          type: string
        displayName:
          type: string
          description: The source's display name. A source's display name must be unique amongst its siblings, for example, two sources with the same parent can't share the same display name. The display name must have a length between 1 and 64 characters (inclusive).
      type: object
      description: Security Command Center finding source. A finding source is an entity or a mechanism that can produce a finding. A source is like a container of findings that come from the same scanner, logger, monitor, and other tools.
    MemoryHashSignature:
      type: object
      properties:
        detections:
          type: array
          description: The list of memory hash detections contributing to the binary family match.
          items:
            $ref: '#/components/schemas/Detection'
        binaryFamily:
          description: The binary family.
          type: string
      id: MemoryHashSignature
      description: A signature corresponding to memory page hashes.
    ListAssetsResponse:
      id: ListAssetsResponse
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results.
          type: string
        readTime:
          format: google-datetime
          description: Time used for executing the list request.
          type: string
        listAssetsResults:
          items:
            $ref: '#/components/schemas/ListAssetsResult'
          description: Assets matching the list request.
          type: array
        totalSize:
          type: integer
          description: The total number of assets matching the query.
          format: int32
      description: Response message for listing assets.
      type: object
    KernelRootkit:
      properties:
        unexpectedReadOnlyDataModification:
          type: boolean
          description: True when unexpected modifications of kernel read-only data memory are present.
        name:
          description: Rootkit name when available.
          type: string
        unexpectedKernelCodePages:
          description: True when kernel code pages that are not in the expected kernel or module code regions are present.
          type: boolean
        unexpectedInterruptHandler:
          description: True when interrupt handlers that are are not in the expected kernel or module code regions are present.
          type: boolean
        unexpectedProcessesInRunqueue:
          type: boolean
          description: True when unexpected processes in the scheduler run queue are present. Such processes are in the run queue, but not in the process task list.
        unexpectedFtraceHandler:
          description: True when `ftrace` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.
          type: boolean
        unexpectedSystemCallHandler:
          description: True when system call handlers that are are not in the expected kernel or module code regions are present.
          type: boolean
        unexpectedKprobeHandler:
          type: boolean
          description: True when `kprobe` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.
        unexpectedCodeModification:
          description: True when unexpected modifications of kernel code memory are present.
          type: boolean
      description: Kernel mode rootkit signatures.
      id: KernelRootkit
      type: object
    PathNode:
      description: Represents one point that an attacker passes through in this exposure path.
      id: PathNode
      properties:
        resource:
          type: string
          description: 'The name of the resource at this point in the exposure path. The format of the name is: https://cloud.google.com/apis/design/resource_names#full_resource_name'
        displayName:
          type: string
          description: Human readable name of this resource.
        associatedFindings:
          type: array
          items:
            $ref: '#/components/schemas/AssociatedFinding'
          description: The findings associated with this node in the exposure path.
        resourceType:
          description: 'The resource type of this resource. See: https://cloud.google.com/asset-inventory/docs/supported-asset-types'
          type: string
      type: object
    Pod:
      properties:
        labels:
          description: Pod labels. For Kubernetes containers, these are applied to the container.
          type: array
          items:
            $ref: '#/components/schemas/Label'
        containers:
          items:
            $ref: '#/components/schemas/Container'
          type: array
          description: Pod containers associated with this finding, if any.
        ns:
          type: string
          description: Kubernetes Pod namespace.
        name:
          description: Kubernetes Pod name.
          type: string
      description: Kubernetes Pod.
      id: Pod
      type: object
    Policy:
      id: Policy
      properties:
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
          format: byte
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        version:
          type: integer
          format: int32
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
    GoogleCloudSecuritycenterV1Binding:
      properties:
        ns:
          type: string
          description: Namespace for binding.
        name:
          type: string
          description: Name for binding.
        subjects:
          items:
            $ref: '#/components/schemas/Subject'
          description: Represents one or more subjects that are bound to the role. Not always available for PATCH requests.
          type: array
        role:
          description: The Role or ClusterRole referenced by the binding.
          $ref: '#/components/schemas/Role'
      type: object
      id: GoogleCloudSecuritycenterV1Binding
      description: Represents a Kubernetes RoleBinding or ClusterRoleBinding.
    GroupResult:
      properties:
        properties:
          description: Properties matching the groupBy fields in the request.
          additionalProperties:
            type: any
          type: object
        count:
          format: int64
          description: Total count of resources for the given properties.
          type: string
      id: GroupResult
      description: Result containing the properties and count of a groupBy request.
      type: object
    GoogleCloudSecuritycenterV1ExposedResource:
      type: object
      description: A resource that is exposed as a result of a finding.
      id: GoogleCloudSecuritycenterV1ExposedResource
      properties:
        resourceType:
          description: 'The resource type of the exposed resource. See: https://cloud.google.com/asset-inventory/docs/supported-asset-types'
          type: string
        methods:
          type: array
          items:
            type: string
          description: 'The ways in which this resource is exposed. Examples: Read, Write'
        resourceValue:
          description: How valuable this resource is.
          type: string
          enum:
            - RESOURCE_VALUE_UNSPECIFIED
            - RESOURCE_VALUE_LOW
            - RESOURCE_VALUE_MEDIUM
            - RESOURCE_VALUE_HIGH
          enumDescriptions:
            - The resource value isn't specified.
            - This is a low value resource.
            - This is a medium value resource.
            - This is a high value resource.
        resource:
          type: string
          description: 'The name of the resource that is exposed. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
        displayName:
          type: string
          description: Human readable name of the resource that is exposed.
        name:
          type: string
          description: 'Exposed Resource Name e.g.: `organizations/123/attackExposureResults/456/exposedResources/789`'
    Reference:
      type: object
      id: Reference
      description: Additional Links
      properties:
        uri:
          type: string
          description: Uri for the mentioned source e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527.
        source:
          description: Source of the reference e.g. NVD
          type: string
    GoogleCloudSecuritycenterV1Resource:
      description: Information related to the Google Cloud resource.
      type: object
      id: GoogleCloudSecuritycenterV1Resource
      properties:
        name:
          type: string
          description: 'The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
        parent:
          type: string
          description: The full resource name of resource's parent.
        folders:
          readOnly: true
          items:
            $ref: '#/components/schemas/Folder'
          type: array
          description: Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.
        project:
          type: string
          description: The full resource name of project that the resource belongs to.
        type:
          description: The full resource type of the resource.
          type: string
        parentDisplayName:
          type: string
          description: The human readable name of resource's parent.
        projectDisplayName:
          description: The project ID that the resource belongs to.
          type: string
        displayName:
          type: string
          description: The human readable name of the resource.
    ProcessSignature:
      properties:
        yaraRuleSignature:
          $ref: '#/components/schemas/YaraRuleSignature'
          description: Signature indicating that a YARA rule was matched.
        memoryHashSignature:
          $ref: '#/components/schemas/MemoryHashSignature'
          description: Signature indicating that a binary family was matched.
      id: ProcessSignature
      description: Indicates what signature matched this process.
      type: object
    NodePool:
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/Node'
          description: Nodes associated with the finding.
          type: array
        name:
          description: Kubernetes Node pool name.
          type: string
      description: Provides GKE Node Pool information.
      type: object
      id: NodePool
    GroupFindingsResponse:
      id: GroupFindingsResponse
      description: Response message for group by findings.
      properties:
        groupByResults:
          type: array
          description: Group results. There exists an element for each existing unique combination of property/values. The element contains a count for the number of times those specific property/values appear.
          items:
            $ref: '#/components/schemas/GroupResult'
        totalSize:
          type: integer
          description: The total number of results matching the query.
          format: int32
        readTime:
          type: string
          description: Time used for executing the groupBy request.
          format: google-datetime
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results.
      type: object
    GoogleCloudSecuritycenterV1BulkMuteFindingsResponse:
      description: The response to a BulkMute request. Contains the LRO information.
      id: GoogleCloudSecuritycenterV1BulkMuteFindingsResponse
      type: object
      properties: {}
    SetMuteRequest:
      properties:
        mute:
          description: Required. The desired state of the Mute.
          type: string
          enumDescriptions:
            - Unspecified.
            - Finding has been muted.
            - Finding has been unmuted.
            - Finding has never been muted/unmuted.
          enum:
            - MUTE_UNSPECIFIED
            - MUTED
            - UNMUTED
            - UNDEFINED
      id: SetMuteRequest
      type: object
      description: Request message for updating a finding's mute status.
    GoogleCloudSecuritycenterV1p1beta1Resource:
      properties:
        project:
          type: string
          description: The full resource name of project that the resource belongs to.
        parent:
          type: string
          description: The full resource name of resource's parent.
        projectDisplayName:
          type: string
          description: The project id that the resource belongs to.
        folders:
          readOnly: true
          type: array
          description: Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1Folder'
        name:
          description: 'The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
          type: string
        parentDisplayName:
          description: The human readable name of resource's parent.
          type: string
      id: GoogleCloudSecuritycenterV1p1beta1Resource
      description: Information related to the Google Cloud resource.
      type: object
    Cvssv3:
      properties:
        attackComplexity:
          description: This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.
          enumDescriptions:
            - Invalid value.
            - Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success when attacking the vulnerable component.
            - A successful attack depends on conditions beyond the attacker's control. That is, a successful attack cannot be accomplished at will, but requires the attacker to invest in some measurable amount of effort in preparation or execution against the vulnerable component before a successful attack can be expected.
          type: string
          enum:
            - ATTACK_COMPLEXITY_UNSPECIFIED
            - ATTACK_COMPLEXITY_LOW
            - ATTACK_COMPLEXITY_HIGH
        privilegesRequired:
          description: This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability.
          type: string
          enum:
            - PRIVILEGES_REQUIRED_UNSPECIFIED
            - PRIVILEGES_REQUIRED_NONE
            - PRIVILEGES_REQUIRED_LOW
            - PRIVILEGES_REQUIRED_HIGH
          enumDescriptions:
            - Invalid value.
            - The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files of the vulnerable system to carry out an attack.
            - The attacker requires privileges that provide basic user capabilities that could normally affect only settings and files owned by a user. Alternatively, an attacker with Low privileges has the ability to access only non-sensitive resources.
            - The attacker requires privileges that provide significant (e.g., administrative) control over the vulnerable component allowing access to component-wide settings and files.
        baseScore:
          format: double
          type: number
          description: The base score is a function of the base metric scores.
        scope:
          enum:
            - SCOPE_UNSPECIFIED
            - SCOPE_UNCHANGED
            - SCOPE_CHANGED
          enumDescriptions:
            - Invalid value.
            - An exploited vulnerability can only affect resources managed by the same security authority.
            - An exploited vulnerability can affect resources beyond the security scope managed by the security authority of the vulnerable component.
          description: The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.
          type: string
        attackVector:
          enum:
            - ATTACK_VECTOR_UNSPECIFIED
            - ATTACK_VECTOR_NETWORK
            - ATTACK_VECTOR_ADJACENT
            - ATTACK_VECTOR_LOCAL
            - ATTACK_VECTOR_PHYSICAL
          enumDescriptions:
            - Invalid value.
            - The vulnerable component is bound to the network stack and the set of possible attackers extends beyond the other options listed below, up to and including the entire Internet.
            - The vulnerable component is bound to the network stack, but the attack is limited at the protocol level to a logically adjacent topology.
            - The vulnerable component is not bound to the network stack and the attacker's path is via read/write/execute capabilities.
            - The attack requires the attacker to physically touch or manipulate the vulnerable component.
          description: Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. This metric reflects the context by which vulnerability exploitation is possible.
          type: string
        availabilityImpact:
          description: This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability.
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
          type: string
        integrityImpact:
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          type: string
          description: This metric measures the impact to integrity of a successfully exploited vulnerability.
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
        confidentialityImpact:
          type: string
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          description: This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
        userInteraction:
          type: string
          enum:
            - USER_INTERACTION_UNSPECIFIED
            - USER_INTERACTION_NONE
            - USER_INTERACTION_REQUIRED
          description: This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component.
          enumDescriptions:
            - Invalid value.
            - The vulnerable system can be exploited without interaction from any user.
            - Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited.
      id: Cvssv3
      description: Common Vulnerability Scoring System version 3.
      type: object
    SetFindingStateRequest:
      id: SetFindingStateRequest
      type: object
      description: Request message for updating a finding's state.
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
          type: string
          enumDescriptions:
            - Unspecified state.
            - The finding requires attention and has not been addressed yet.
            - The finding has been fixed, triaged as a non-issue or otherwise addressed and is no longer active.
          description: Required. The desired State of the finding.
        startTime:
          format: google-datetime
          type: string
          description: Required. The time at which the updated state takes effect.
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      id: TestIamPermissionsRequest
      properties:
        permissions:
          items:
            type: string
          type: array
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
      type: object
    Operation:
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
      properties:
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
    IamBinding:
      id: IamBinding
      description: Represents a particular IAM binding, which captures a member's role addition, removal, or state.
      type: object
      properties:
        member:
          type: string
          description: A single identity requesting access for a Cloud Platform resource, e.g. "foo@google.com".
        action:
          enumDescriptions:
            - Unspecified.
            - Addition of a Binding.
            - Removal of a Binding.
          description: The action that was performed on a Binding.
          enum:
            - ACTION_UNSPECIFIED
            - ADD
            - REMOVE
          type: string
        role:
          description: Role that is assigned to "members". For example, "roles/viewer", "roles/editor", or "roles/owner".
          type: string
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
      id: Status
      type: object
    AccessReview:
      type: object
      description: Conveys information about a Kubernetes access review (e.g. kubectl auth can-i ...) that was involved in a finding.
      properties:
        resource:
          type: string
          description: Resource is the optional resource type requested. "*" means all.
        name:
          description: Name is the name of the resource being requested. Empty means all.
          type: string
        ns:
          type: string
          description: Namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces. Both are represented by "" (empty).
        subresource:
          description: Subresource is the optional subresource type.
          type: string
        version:
          type: string
          description: Version is the API Version of the Resource. "*" means all.
        verb:
          description: 'Verb is a Kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. "*" means all.'
          type: string
        group:
          description: Group is the API Group of the Resource. "*" means all.
          type: string
      id: AccessReview
    ServiceAccountDelegationInfo:
      type: object
      properties:
        principalEmail:
          type: string
          description: The email address of a Google account.
        principalSubject:
          type: string
          description: A string representing the principal_subject associated with the identity. As compared to `principal_email`, supports principals that aren't associated with email addresses, such as third party principals. For most identities, the format will be `principal://iam.googleapis.com/{identity pool name}/subjects/{subject}` except for some GKE identities (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format `serviceAccount:{identity pool name}[{subject}]`
      description: Identity delegation history of an authenticated service account.
      id: ServiceAccountDelegationInfo
    Access:
      properties:
        serviceAccountKeyName:
          type: string
          description: 'The name of the service account key used to create or exchange credentials for authenticating the service account making the request. This is a scheme-less URI full resource name. For example: "//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}" '
        methodName:
          type: string
          description: The method that the service account called, e.g. "SetIamPolicy".
        callerIpGeo:
          $ref: '#/components/schemas/Geolocation'
          description: The caller IP's geolocation, which identifies where the call came from.
        userName:
          type: string
          description: A string representing a username. This is likely not an IAM principal. For instance, this may be the system user name if the finding is VM-related, or this may be some type of application login user name, depending on the type of finding.
        principalSubject:
          description: A string representing the principal_subject associated with the identity. As compared to `principal_email`, supports principals that aren't associated with email addresses, such as third party principals. For most identities, the format will be `principal://iam.googleapis.com/{identity pool name}/subjects/{subject}` except for some GKE identities (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format `serviceAccount:{identity pool name}[{subject}]`
          type: string
        serviceAccountDelegationInfo:
          description: Identity delegation history of an authenticated service account that makes the request. It contains information on the real authorities that try to access GCP resources by delegating on a service account. When multiple authorities are present, they are guaranteed to be sorted based on the original ordering of the identity delegation events.
          items:
            $ref: '#/components/schemas/ServiceAccountDelegationInfo'
          type: array
        callerIp:
          type: string
          description: Caller's IP address, such as "1.1.1.1".
        principalEmail:
          description: Associated email, such as "foo@google.com". The email address of the authenticated user (or service account on behalf of third party principal) making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).
          type: string
        serviceName:
          type: string
          description: This is the API service that the service account made a call to, e.g. "iam.googleapis.com"
        userAgentFamily:
          description: What kind of user agent is associated, e.g. operating system shells, embedded or stand-alone applications, etc.
          type: string
      id: Access
      description: Represents an access event.
      type: object
    EnvironmentVariable:
      type: object
      description: EnvironmentVariable is a name-value pair to store environment variables for Process.
      properties:
        name:
          type: string
          description: Environment variable name as a JSON encoded string.
        val:
          description: Environment variable value as a JSON encoded string.
          type: string
      id: EnvironmentVariable
    GoogleCloudSecuritycenterV1p1beta1Finding:
      type: object
      description: Security Command Center finding. A finding is a record of assessment data (security, risk, health or privacy) ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, an XSS vulnerability in an App Engine application is a finding.
      id: GoogleCloudSecuritycenterV1p1beta1Finding
      properties:
        sourceProperties:
          description: Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.
          additionalProperties:
            type: any
          type: object
        parent:
          description: 'The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"'
          type: string
        category:
          type: string
          description: 'The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"'
        resourceName:
          description: 'For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.'
          type: string
        securityMarks:
          readOnly: true
          description: Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding.
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1SecurityMarks'
        severity:
          enum:
            - SEVERITY_UNSPECIFIED
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
          enumDescriptions:
            - No severity specified. The default value.
            - Critical severity.
            - High severity.
            - Medium severity.
            - Low severity.
          type: string
          description: The severity of the finding. This field is managed by the source that writes the finding.
        eventTime:
          format: google-datetime
          description: The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved. Must not be set to a value greater than the current timestamp.
          type: string
        name:
          type: string
          description: 'The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"'
        canonicalName:
          type: string
          description: The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of the resource associated with the finding.
        state:
          type: string
          enumDescriptions:
            - Unspecified state.
            - The finding requires attention and has not been addressed yet.
            - The finding has been fixed, triaged as a non-issue or otherwise addressed and is no longer active.
          description: The state of the finding.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
        createTime:
          format: google-datetime
          type: string
          description: The time at which the finding was created in Security Command Center.
        externalUri:
          type: string
          description: The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.
    GoogleCloudSecuritycenterV1ExposurePath:
      type: object
      description: A path that an attacker could take to reach an exposed resource.
      properties:
        exposedResource:
          description: The leaf node of this exposure path.
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1ExposedResource'
        edges:
          items:
            $ref: '#/components/schemas/Edge'
          description: A list of the edges between nodes in this exposure path.
          type: array
        pathNodes:
          items:
            $ref: '#/components/schemas/PathNode'
          type: array
          description: A list of nodes that exist in this exposure path.
        name:
          description: 'Exposure Path Name e.g.: `organizations/123/attackExposureResults/456/exposurePaths/789`'
          type: string
      id: GoogleCloudSecuritycenterV1ExposurePath
    ListBigQueryExportsResponse:
      id: ListBigQueryExportsResponse
      properties:
        bigQueryExports:
          type: array
          description: The BigQuery exports from the specified parent.
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      description: Response message for listing BigQuery exports.
      type: object
    Kubernetes:
      id: Kubernetes
      type: object
      description: Kubernetes-related attributes.
      properties:
        pods:
          description: Kubernetes Pods associated with the finding. This field will contain Pod records for each container that is owned by a Pod.
          type: array
          items:
            $ref: '#/components/schemas/Pod'
        bindings:
          description: Provides Kubernetes role binding information for findings that involve RoleBindings or ClusterRoleBindings.
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1Binding'
          type: array
        nodes:
          description: Provides Kubernetes Node information.
          type: array
          items:
            $ref: '#/components/schemas/Node'
        accessReviews:
          description: Provides information on any Kubernetes access reviews (i.e. privilege checks) relevant to the finding.
          type: array
          items:
            $ref: '#/components/schemas/AccessReview'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          description: Provides Kubernetes role information for findings that involve Roles or ClusterRoles.
        nodePools:
          items:
            $ref: '#/components/schemas/NodePool'
          description: GKE Node Pools associated with the finding. This field will contain NodePool information for each Node, when it is available.
          type: array
    ListSourcesResponse:
      id: ListSourcesResponse
      description: Response message for listing sources.
      type: object
      properties:
        sources:
          description: Sources belonging to the requested parent.
          type: array
          items:
            $ref: '#/components/schemas/Source'
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results.
    RunAssetDiscoveryRequest:
      description: Request message for running asset discovery for an organization.
      id: RunAssetDiscoveryRequest
      properties: {}
      type: object
    BulkMuteFindingsRequest:
      type: object
      properties:
        filter:
          description: 'Expression that identifies findings that should be updated. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.'
          type: string
        muteAnnotation:
          description: This can be a mute configuration name or any identifier for mute/unmute of findings based on the filter.
          type: string
      id: BulkMuteFindingsRequest
      description: 'Request message for bulk findings update. Note: 1. If multiple bulk update requests match the same resource, the order in which they get executed is not defined. 2. Once a bulk operation is started, there is no way to stop it.'
    GetPolicyOptions:
      properties:
        requestedPolicyVersion:
          description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
      description: Encapsulates settings provided to GetIamPolicy.
      type: object
      id: GetPolicyOptions
  parameters:
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    organizations__organization_settings:
      id: google.securitycenter.organizations__organization_settings
      name: organizations__organization_settings
      title: Organizations__organization_settings
      methods:
        organizations_getOrganizationSettings:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1organizationSettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organizations__organization_settings/methods/organizations_getOrganizationSettings'
        insert: []
        update: []
        delete: []
    organizations:
      id: google.securitycenter.organizations
      name: organizations
      title: Organizations
      methods:
        updateOrganizationSettings:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1organizationSettings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: google.securitycenter.operations
      name: operations
      title: Operations
      methods:
        organizations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/organizations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/organizations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/organizations_operations_delete'
    notification_configs:
      id: google.securitycenter.notification_configs
      name: notification_configs
      title: Notification_configs
      methods:
        organizations_notificationConfigs_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1notificationConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: notificationConfigs
        organizations_notificationConfigs_create:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1notificationConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_notificationConfigs_delete:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1notificationConfigs~1{notificationConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_notificationConfigs_patch:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1notificationConfigs~1{notificationConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_notificationConfigs_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1notificationConfigs~1{notificationConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_notificationConfigs_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1notificationConfigs~1{notificationConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_notificationConfigs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1notificationConfigs~1{notificationConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_notificationConfigs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1notificationConfigs~1{notificationConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_notificationConfigs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1notificationConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_notificationConfigs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1notificationConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: notificationConfigs
        folders_notificationConfigs_patch:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1notificationConfigs~1{notificationConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_notificationConfigs_delete:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1notificationConfigs~1{notificationConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_notificationConfigs_get:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1notificationConfigs~1{notificationConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_notificationConfigs_create:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1notificationConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_notificationConfigs_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1notificationConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: notificationConfigs
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/organizations_notificationConfigs_get'
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/projects_notificationConfigs_get'
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/folders_notificationConfigs_get'
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/organizations_notificationConfigs_list'
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/projects_notificationConfigs_list'
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/folders_notificationConfigs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/organizations_notificationConfigs_create'
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/projects_notificationConfigs_create'
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/folders_notificationConfigs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/organizations_notificationConfigs_delete'
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/projects_notificationConfigs_delete'
          - $ref: '#/components/x-stackQL-resources/notification_configs/methods/folders_notificationConfigs_delete'
    big_query_exports:
      id: google.securitycenter.big_query_exports
      name: big_query_exports
      title: Big_query_exports
      methods:
        organizations_bigQueryExports_create:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1bigQueryExports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_bigQueryExports_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1bigQueryExports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bigQueryExports
        organizations_bigQueryExports_delete:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1bigQueryExports~1{bigQueryExportsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_bigQueryExports_patch:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1bigQueryExports~1{bigQueryExportsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_bigQueryExports_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1bigQueryExports~1{bigQueryExportsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_bigQueryExports_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1bigQueryExports~1{bigQueryExportsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_bigQueryExports_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1bigQueryExports~1{bigQueryExportsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_bigQueryExports_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1bigQueryExports~1{bigQueryExportsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_bigQueryExports_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1bigQueryExports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bigQueryExports
        projects_bigQueryExports_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1bigQueryExports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_bigQueryExports_delete:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1bigQueryExports~1{bigQueryExportsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_bigQueryExports_patch:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1bigQueryExports~1{bigQueryExportsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_bigQueryExports_get:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1bigQueryExports~1{bigQueryExportsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_bigQueryExports_create:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1bigQueryExports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_bigQueryExports_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1bigQueryExports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bigQueryExports
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/organizations_bigQueryExports_get'
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/projects_bigQueryExports_get'
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/folders_bigQueryExports_get'
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/organizations_bigQueryExports_list'
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/projects_bigQueryExports_list'
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/folders_bigQueryExports_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/organizations_bigQueryExports_create'
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/projects_bigQueryExports_create'
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/folders_bigQueryExports_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/organizations_bigQueryExports_delete'
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/projects_bigQueryExports_delete'
          - $ref: '#/components/x-stackQL-resources/big_query_exports/methods/folders_bigQueryExports_delete'
    assets:
      id: google.securitycenter.assets
      name: assets
      title: Assets
      methods:
        organizations_assets_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: listAssetsResults
        organizations_assets_runDiscovery:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1assets:runDiscovery/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_assets_updateSecurityMarks:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1assets~1{assetsId}~1securityMarks/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_assets_group:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1assets:group/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_assets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: listAssetsResults
        projects_assets_updateSecurityMarks:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1assets~1{assetsId}~1securityMarks/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_assets_group:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1assets:group/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_assets_updateSecurityMarks:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1assets~1{assetsId}~1securityMarks/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_assets_group:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1assets:group/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_assets_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: listAssetsResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/organizations_assets_list'
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_assets_list'
          - $ref: '#/components/x-stackQL-resources/assets/methods/folders_assets_list'
        insert: []
        update: []
        delete: []
    mute_configs:
      id: google.securitycenter.mute_configs
      name: mute_configs
      title: Mute_configs
      methods:
        organizations_muteConfigs_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1muteConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: muteConfigs
        organizations_muteConfigs_create:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1muteConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_muteConfigs_patch:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1muteConfigs~1{muteConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_muteConfigs_delete:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1muteConfigs~1{muteConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_muteConfigs_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1muteConfigs~1{muteConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_muteConfigs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1muteConfigs~1{muteConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_muteConfigs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1muteConfigs~1{muteConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_muteConfigs_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1muteConfigs~1{muteConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_muteConfigs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1muteConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: muteConfigs
        projects_muteConfigs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1muteConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_muteConfigs_patch:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1muteConfigs~1{muteConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_muteConfigs_get:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1muteConfigs~1{muteConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_muteConfigs_delete:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1muteConfigs~1{muteConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_muteConfigs_create:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1muteConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_muteConfigs_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1muteConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: muteConfigs
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/organizations_muteConfigs_get'
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/projects_muteConfigs_get'
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/folders_muteConfigs_get'
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/organizations_muteConfigs_list'
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/projects_muteConfigs_list'
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/folders_muteConfigs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/organizations_muteConfigs_create'
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/projects_muteConfigs_create'
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/folders_muteConfigs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/organizations_muteConfigs_delete'
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/projects_muteConfigs_delete'
          - $ref: '#/components/x-stackQL-resources/mute_configs/methods/folders_muteConfigs_delete'
    findings:
      id: google.securitycenter.findings
      name: findings
      title: Findings
      methods:
        organizations_findings_bulkMute:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1findings:bulkMute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_sources_findings_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}~1findings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: listFindingsResults
        organizations_sources_findings_create:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}~1findings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_sources_findings_updateSecurityMarks:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}~1findings~1{findingsId}~1securityMarks/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_sources_findings_patch:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}~1findings~1{findingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_sources_findings_setMute:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}~1findings~1{findingsId}:setMute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_sources_findings_group:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}~1findings:group/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_sources_findings_setState:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}~1findings~1{findingsId}:setState/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_findings_bulkMute:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1findings:bulkMute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_sources_findings_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1sources~1{sourcesId}~1findings~1{findingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_sources_findings_updateSecurityMarks:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1sources~1{sourcesId}~1findings~1{findingsId}~1securityMarks/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_sources_findings_setMute:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1sources~1{sourcesId}~1findings~1{findingsId}:setMute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_sources_findings_group:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1sources~1{sourcesId}~1findings:group/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_sources_findings_setState:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1sources~1{sourcesId}~1findings~1{findingsId}:setState/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_sources_findings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1sources~1{sourcesId}~1findings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: listFindingsResults
        folders_findings_bulkMute:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1findings:bulkMute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_sources_findings_patch:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1sources~1{sourcesId}~1findings~1{findingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_sources_findings_group:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1sources~1{sourcesId}~1findings:group/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_sources_findings_updateSecurityMarks:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1sources~1{sourcesId}~1findings~1{findingsId}~1securityMarks/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_sources_findings_setMute:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1sources~1{sourcesId}~1findings~1{findingsId}:setMute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_sources_findings_setState:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1sources~1{sourcesId}~1findings~1{findingsId}:setState/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_sources_findings_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1sources~1{sourcesId}~1findings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: listFindingsResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/findings/methods/organizations_sources_findings_list'
          - $ref: '#/components/x-stackQL-resources/findings/methods/projects_sources_findings_list'
          - $ref: '#/components/x-stackQL-resources/findings/methods/folders_sources_findings_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/findings/methods/organizations_sources_findings_create'
        update: []
        delete: []
    external_systems:
      id: google.securitycenter.external_systems
      name: external_systems
      title: External_systems
      methods:
        organizations_sources_findings_externalSystems_patch:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}~1findings~1{findingsId}~1externalSystems~1{externalSystemsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_sources_findings_externalSystems_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1sources~1{sourcesId}~1findings~1{findingsId}~1externalSystems~1{externalSystemsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_sources_findings_externalSystems_patch:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1sources~1{sourcesId}~1findings~1{findingsId}~1externalSystems~1{externalSystemsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    sources_iam_policies:
      id: google.securitycenter.sources_iam_policies
      name: sources_iam_policies
      title: Sources_iam_policies
      methods:
        organizations_sources_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_sources_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_sources_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sources_iam_policies/methods/organizations_sources_getIamPolicy'
        insert: []
        update: []
        delete: []
    sources:
      id: google.securitycenter.sources
      name: sources
      title: Sources
      methods:
        organizations_sources_create:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_sources_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: sources
        organizations_sources_patch:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_sources_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_sources_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: sources
        folders_sources_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: sources
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sources/methods/organizations_sources_get'
          - $ref: '#/components/x-stackQL-resources/sources/methods/organizations_sources_list'
          - $ref: '#/components/x-stackQL-resources/sources/methods/projects_sources_list'
          - $ref: '#/components/x-stackQL-resources/sources/methods/folders_sources_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sources/methods/organizations_sources_create'
        update: []
        delete: []
    sources_iam_bindings:
      id: google.securitycenter.sources_iam_bindings
      name: sources_iam_bindings
      title: sources_iam_bindings
      methods:
        organizations_sources_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/sources_iam_bindings/methods/organizations_sources_getIamPolicy'
    sources_iam_audit_configs:
      id: google.securitycenter.sources_iam_audit_configs
      name: sources_iam_audit_configs
      title: sources_iam_audit_configs
      methods:
        organizations_sources_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1sources~1{sourcesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/sources_iam_audit_configs/methods/organizations_sources_getIamPolicy'
paths:
  /v1/organizations/{organizationsId}/organizationSettings:
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
    get:
      description: Gets the settings for an organization.
      operationId: securitycenter.organizations.getOrganizationSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: organizations__organization_settings
      x-stackQL-verb: select
    patch:
      description: Updates an organization's settings.
      operationId: securitycenter.organizations.updateOrganizationSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: organizations
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: securitycenter.organizations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: securitycenter.organizations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: securitycenter.organizations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: securitycenter.organizations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/notificationConfigs:
    parameters: *ref_1
    get:
      description: Lists notification configs.
      operationId: securitycenter.organizations.notificationConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotificationConfigsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: select
    post:
      description: Creates a notification config.
      operationId: securitycenter.organizations.notificationConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: configId
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: insert
  /v1/organizations/{organizationsId}/notificationConfigs/{notificationConfigsId}:
    parameters: *ref_1
    delete:
      description: Deletes a notification config.
      operationId: securitycenter.organizations.notificationConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: delete
    patch:
      description: ' Updates a notification config. The following update fields are allowed: description, pubsub_topic, streaming_config.filter'
      operationId: securitycenter.organizations.notificationConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: exec
    get:
      description: Gets a notification config.
      operationId: securitycenter.organizations.notificationConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/bigQueryExports:
    parameters: *ref_1
    post:
      description: Creates a BigQuery export.
      operationId: securitycenter.organizations.bigQueryExports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: bigQueryExportId
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: insert
    get:
      description: Lists BigQuery exports. Note that when requesting BigQuery exports at a given level all exports under that level are also returned e.g. if requesting BigQuery exports under a folder, then all BigQuery exports immediately under the folder plus the ones created under the projects within the folder are returned.
      operationId: securitycenter.organizations.bigQueryExports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBigQueryExportsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/bigQueryExports/{bigQueryExportsId}:
    parameters: *ref_1
    delete:
      description: Deletes an existing BigQuery export.
      operationId: securitycenter.organizations.bigQueryExports.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: bigQueryExportsId
          required: true
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: delete
    patch:
      description: Updates a BigQuery export.
      operationId: securitycenter.organizations.bigQueryExports.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: bigQueryExportsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: exec
    get:
      description: Gets a BigQuery export.
      operationId: securitycenter.organizations.bigQueryExports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: bigQueryExportsId
          required: true
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/assets:
    parameters: *ref_1
    get:
      description: Lists an organization's assets.
      operationId: securitycenter.organizations.assets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readTime
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: compareDuration
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/assets:runDiscovery:
    parameters: *ref_1
    post:
      description: Runs asset discovery. The discovery is tracked with a long-running operation. This API can only be called with limited frequency for an organization. If it is called too frequently the caller will receive a TOO_MANY_REQUESTS error.
      operationId: securitycenter.organizations.assets.runDiscovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunAssetDiscoveryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/assets/{assetsId}/securityMarks:
    parameters: *ref_1
    patch:
      description: Updates security marks.
      operationId: securitycenter.organizations.assets.updateSecurityMarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMarks'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMarks'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/assets:group:
    parameters: *ref_1
    post:
      description: Filters an organization's assets and groups them by their specified properties.
      operationId: securitycenter.organizations.assets.group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupAssetsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupAssetsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/muteConfigs:
    parameters: *ref_1
    get:
      description: Lists mute configs.
      operationId: securitycenter.organizations.muteConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMuteConfigsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: select
    post:
      description: Creates a mute config.
      operationId: securitycenter.organizations.muteConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: muteConfigId
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: insert
  /v1/organizations/{organizationsId}/muteConfigs/{muteConfigsId}:
    parameters: *ref_1
    patch:
      description: Updates a mute config.
      operationId: securitycenter.organizations.muteConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: muteConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: exec
    delete:
      description: Deletes an existing mute config.
      operationId: securitycenter.organizations.muteConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: muteConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: delete
    get:
      description: Gets a mute config.
      operationId: securitycenter.organizations.muteConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: muteConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/findings:bulkMute:
    parameters: *ref_1
    post:
      description: Kicks off an LRO to bulk mute findings for a parent based on a filter. The parent can be either an organization, folder or project. The findings matched by the filter will be muted after the LRO is done.
      operationId: securitycenter.organizations.findings.bulkMute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkMuteFindingsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/sources/{sourcesId}/findings:
    parameters: *ref_1
    get:
      description: 'Lists an organization or source''s findings. To list across all sources provide a `-` as the source id. Example: /v1/organizations/{organization_id}/sources/-/findings'
      operationId: securitycenter.organizations.sources.findings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: readTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: compareDuration
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: select
    post:
      description: Creates a finding. The corresponding source must exist for finding creation to succeed.
      operationId: securitycenter.organizations.sources.findings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Finding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: findingId
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: insert
  /v1/organizations/{organizationsId}/sources/{sourcesId}/findings/{findingsId}/securityMarks:
    parameters: *ref_1
    patch:
      description: Updates security marks.
      operationId: securitycenter.organizations.sources.findings.updateSecurityMarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMarks'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMarks'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/sources/{sourcesId}/findings/{findingsId}:
    parameters: *ref_1
    patch:
      description: Creates or updates a finding. The corresponding source must exist for a finding creation to succeed.
      operationId: securitycenter.organizations.sources.findings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Finding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/sources/{sourcesId}/findings/{findingsId}:setMute:
    parameters: *ref_1
    post:
      description: Updates the mute state of a finding.
      operationId: securitycenter.organizations.sources.findings.setMute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMuteRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/sources/{sourcesId}/findings:group:
    parameters: *ref_1
    post:
      description: 'Filters an organization or source''s findings and groups them by their specified properties. To group across all sources provide a `-` as the source id. Example: /v1/organizations/{organization_id}/sources/-/findings, /v1/folders/{folder_id}/sources/-/findings, /v1/projects/{project_id}/sources/-/findings'
      operationId: securitycenter.organizations.sources.findings.group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupFindingsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFindingsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/sources/{sourcesId}/findings/{findingsId}:setState:
    parameters: *ref_1
    post:
      description: Updates the state of a finding.
      operationId: securitycenter.organizations.sources.findings.setState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetFindingStateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/sources/{sourcesId}/findings/{findingsId}/externalSystems/{externalSystemsId}:
    parameters: *ref_1
    patch:
      description: Updates external system. This is for a given finding.
      operationId: securitycenter.organizations.sources.findings.externalSystems.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1ExternalSystem'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1ExternalSystem'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: path
          name: externalSystemsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: external_systems
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/sources/{sourcesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets the access control policy on the specified Source.
      operationId: securitycenter.organizations.sources.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources_iam_policies
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/sources:
    parameters: *ref_1
    post:
      description: Creates a source.
      operationId: securitycenter.organizations.sources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: insert
    get:
      description: Lists all sources belonging to an organization.
      operationId: securitycenter.organizations.sources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/sources/{sourcesId}:
    parameters: *ref_1
    patch:
      description: Updates a source.
      operationId: securitycenter.organizations.sources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: exec
    get:
      description: Gets a source.
      operationId: securitycenter.organizations.sources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/sources/{sourcesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: Returns the permissions that a caller has on the specified source.
      operationId: securitycenter.organizations.sources.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources_iam_policies
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/sources/{sourcesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified Source.
      operationId: securitycenter.organizations.sources.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/findings:bulkMute:
    parameters: *ref_1
    post:
      description: Kicks off an LRO to bulk mute findings for a parent based on a filter. The parent can be either an organization, folder or project. The findings matched by the filter will be muted after the LRO is done.
      operationId: securitycenter.projects.findings.bulkMute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkMuteFindingsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/sources/{sourcesId}/findings/{findingsId}/externalSystems/{externalSystemsId}:
    parameters: *ref_1
    patch:
      description: Updates external system. This is for a given finding.
      operationId: securitycenter.projects.sources.findings.externalSystems.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1ExternalSystem'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1ExternalSystem'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: path
          name: externalSystemsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: external_systems
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/sources/{sourcesId}/findings/{findingsId}:
    parameters: *ref_1
    patch:
      description: Creates or updates a finding. The corresponding source must exist for a finding creation to succeed.
      operationId: securitycenter.projects.sources.findings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Finding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/sources/{sourcesId}/findings/{findingsId}/securityMarks:
    parameters: *ref_1
    patch:
      description: Updates security marks.
      operationId: securitycenter.projects.sources.findings.updateSecurityMarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMarks'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMarks'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/sources/{sourcesId}/findings/{findingsId}:setMute:
    parameters: *ref_1
    post:
      description: Updates the mute state of a finding.
      operationId: securitycenter.projects.sources.findings.setMute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMuteRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/sources/{sourcesId}/findings:group:
    parameters: *ref_1
    post:
      description: 'Filters an organization or source''s findings and groups them by their specified properties. To group across all sources provide a `-` as the source id. Example: /v1/organizations/{organization_id}/sources/-/findings, /v1/folders/{folder_id}/sources/-/findings, /v1/projects/{project_id}/sources/-/findings'
      operationId: securitycenter.projects.sources.findings.group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupFindingsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/sources/{sourcesId}/findings/{findingsId}:setState:
    parameters: *ref_1
    post:
      description: Updates the state of a finding.
      operationId: securitycenter.projects.sources.findings.setState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetFindingStateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/sources/{sourcesId}/findings:
    parameters: *ref_1
    get:
      description: 'Lists an organization or source''s findings. To list across all sources provide a `-` as the source id. Example: /v1/organizations/{organization_id}/sources/-/findings'
      operationId: securitycenter.projects.sources.findings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
        - in: query
          name: readTime
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: compareDuration
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: select
  /v1/projects/{projectsId}/sources:
    parameters: *ref_1
    get:
      description: Lists all sources belonging to an organization.
      operationId: securitycenter.projects.sources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: select
  /v1/projects/{projectsId}/assets:
    parameters: *ref_1
    get:
      description: Lists an organization's assets.
      operationId: securitycenter.projects.assets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: compareDuration
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: readTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: select
  /v1/projects/{projectsId}/assets/{assetsId}/securityMarks:
    parameters: *ref_1
    patch:
      description: Updates security marks.
      operationId: securitycenter.projects.assets.updateSecurityMarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMarks'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMarks'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/assets:group:
    parameters: *ref_1
    post:
      description: Filters an organization's assets and groups them by their specified properties.
      operationId: securitycenter.projects.assets.group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupAssetsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/bigQueryExports/{bigQueryExportsId}:
    parameters: *ref_1
    get:
      description: Gets a BigQuery export.
      operationId: securitycenter.projects.bigQueryExports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bigQueryExportsId
          required: true
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: select
    delete:
      description: Deletes an existing BigQuery export.
      operationId: securitycenter.projects.bigQueryExports.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bigQueryExportsId
          required: true
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: delete
    patch:
      description: Updates a BigQuery export.
      operationId: securitycenter.projects.bigQueryExports.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bigQueryExportsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/bigQueryExports:
    parameters: *ref_1
    get:
      description: Lists BigQuery exports. Note that when requesting BigQuery exports at a given level all exports under that level are also returned e.g. if requesting BigQuery exports under a folder, then all BigQuery exports immediately under the folder plus the ones created under the projects within the folder are returned.
      operationId: securitycenter.projects.bigQueryExports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBigQueryExportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: select
    post:
      description: Creates a BigQuery export.
      operationId: securitycenter.projects.bigQueryExports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: bigQueryExportId
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/notificationConfigs/{notificationConfigsId}:
    parameters: *ref_1
    patch:
      description: ' Updates a notification config. The following update fields are allowed: description, pubsub_topic, streaming_config.filter'
      operationId: securitycenter.projects.notificationConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: exec
    delete:
      description: Deletes a notification config.
      operationId: securitycenter.projects.notificationConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: delete
    get:
      description: Gets a notification config.
      operationId: securitycenter.projects.notificationConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: notificationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/notificationConfigs:
    parameters: *ref_1
    post:
      description: Creates a notification config.
      operationId: securitycenter.projects.notificationConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: configId
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: insert
    get:
      description: Lists notification configs.
      operationId: securitycenter.projects.notificationConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotificationConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: notification_configs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/muteConfigs/{muteConfigsId}:
    parameters: *ref_1
    delete:
      description: Deletes an existing mute config.
      operationId: securitycenter.projects.muteConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: muteConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: delete
    get:
      description: Gets a mute config.
      operationId: securitycenter.projects.muteConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: muteConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: select
    patch:
      description: Updates a mute config.
      operationId: securitycenter.projects.muteConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: muteConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/muteConfigs:
    parameters: *ref_1
    get:
      description: Lists mute configs.
      operationId: securitycenter.projects.muteConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMuteConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: select
    post:
      description: Creates a mute config.
      operationId: securitycenter.projects.muteConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: muteConfigId
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: insert
  /v1/folders/{foldersId}/muteConfigs/{muteConfigsId}:
    parameters: *ref_1
    patch:
      description: Updates a mute config.
      operationId: securitycenter.folders.muteConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: muteConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: exec
    get:
      description: Gets a mute config.
      operationId: securitycenter.folders.muteConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: muteConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: select
    delete:
      description: Deletes an existing mute config.
      operationId: securitycenter.folders.muteConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: muteConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: delete
  /v1/folders/{foldersId}/muteConfigs:
    parameters: *ref_1
    post:
      description: Creates a mute config.
      operationId: securitycenter.folders.muteConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1MuteConfig'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: muteConfigId
          schema:
            type: string
      x-stackQL-resource: mute_configs
      x-stackQL-verb: insert
    get:
      description: Lists mute configs.
      operationId: securitycenter.folders.muteConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMuteConfigsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: mute_configs
      x-stackQL-verb: select
  /v1/folders/{foldersId}/assets/{assetsId}/securityMarks:
    parameters: *ref_1
    patch:
      description: Updates security marks.
      operationId: securitycenter.folders.assets.updateSecurityMarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMarks'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMarks'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1/folders/{foldersId}/assets:group:
    parameters: *ref_1
    post:
      description: Filters an organization's assets and groups them by their specified properties.
      operationId: securitycenter.folders.assets.group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupAssetsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupAssetsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1/folders/{foldersId}/assets:
    parameters: *ref_1
    get:
      description: Lists an organization's assets.
      operationId: securitycenter.folders.assets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: compareDuration
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readTime
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: select
  /v1/folders/{foldersId}/findings:bulkMute:
    parameters: *ref_1
    post:
      description: Kicks off an LRO to bulk mute findings for a parent based on a filter. The parent can be either an organization, folder or project. The findings matched by the filter will be muted after the LRO is done.
      operationId: securitycenter.folders.findings.bulkMute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkMuteFindingsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/folders/{foldersId}/sources/{sourcesId}/findings/{findingsId}:
    parameters: *ref_1
    patch:
      description: Creates or updates a finding. The corresponding source must exist for a finding creation to succeed.
      operationId: securitycenter.folders.sources.findings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Finding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/folders/{foldersId}/sources/{sourcesId}/findings:group:
    parameters: *ref_1
    post:
      description: 'Filters an organization or source''s findings and groups them by their specified properties. To group across all sources provide a `-` as the source id. Example: /v1/organizations/{organization_id}/sources/-/findings, /v1/folders/{folder_id}/sources/-/findings, /v1/projects/{project_id}/sources/-/findings'
      operationId: securitycenter.folders.sources.findings.group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupFindingsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFindingsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/folders/{foldersId}/sources/{sourcesId}/findings/{findingsId}/securityMarks:
    parameters: *ref_1
    patch:
      description: Updates security marks.
      operationId: securitycenter.folders.sources.findings.updateSecurityMarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMarks'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMarks'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/folders/{foldersId}/sources/{sourcesId}/findings/{findingsId}:setMute:
    parameters: *ref_1
    post:
      description: Updates the mute state of a finding.
      operationId: securitycenter.folders.sources.findings.setMute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMuteRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/folders/{foldersId}/sources/{sourcesId}/findings/{findingsId}:setState:
    parameters: *ref_1
    post:
      description: Updates the state of a finding.
      operationId: securitycenter.folders.sources.findings.setState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetFindingStateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1/folders/{foldersId}/sources/{sourcesId}/findings:
    parameters: *ref_1
    get:
      description: 'Lists an organization or source''s findings. To list across all sources provide a `-` as the source id. Example: /v1/organizations/{organization_id}/sources/-/findings'
      operationId: securitycenter.folders.sources.findings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: readTime
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
        - in: query
          name: compareDuration
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: findings
      x-stackQL-verb: select
  /v1/folders/{foldersId}/sources/{sourcesId}/findings/{findingsId}/externalSystems/{externalSystemsId}:
    parameters: *ref_1
    patch:
      description: Updates external system. This is for a given finding.
      operationId: securitycenter.folders.sources.findings.externalSystems.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1ExternalSystem'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1ExternalSystem'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: path
          name: externalSystemsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: external_systems
      x-stackQL-verb: exec
  /v1/folders/{foldersId}/sources:
    parameters: *ref_1
    get:
      description: Lists all sources belonging to an organization.
      operationId: securitycenter.folders.sources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: sources
      x-stackQL-verb: select
  /v1/folders/{foldersId}/bigQueryExports/{bigQueryExportsId}:
    parameters: *ref_1
    delete:
      description: Deletes an existing BigQuery export.
      operationId: securitycenter.folders.bigQueryExports.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: bigQueryExportsId
          required: true
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: delete
    patch:
      description: Updates a BigQuery export.
      operationId: securitycenter.folders.bigQueryExports.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: bigQueryExportsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: exec
    get:
      description: Gets a BigQuery export.
      operationId: securitycenter.folders.bigQueryExports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: bigQueryExportsId
          required: true
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: select
  /v1/folders/{foldersId}/bigQueryExports:
    parameters: *ref_1
    post:
      description: Creates a BigQuery export.
      operationId: securitycenter.folders.bigQueryExports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1BigQueryExport'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: bigQueryExportId
          schema:
            type: string
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: insert
    get:
      description: Lists BigQuery exports. Note that when requesting BigQuery exports at a given level all exports under that level are also returned e.g. if requesting BigQuery exports under a folder, then all BigQuery exports immediately under the folder plus the ones created under the projects within the folder are returned.
      operationId: securitycenter.folders.bigQueryExports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBigQueryExportsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: big_query_exports
      x-stackQL-verb: select
  /v1/folders/{foldersId}/notificationConfigs/{notificationConfigsId}:
    parameters: *ref_1
    patch:
      description: ' Updates a notification config. The following update fields are allowed: description, pubsub_topic, streaming_config.filter'
      operationId: securitycenter.folders.notificationConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: notificationConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: exec
    delete:
      description: Deletes a notification config.
      operationId: securitycenter.folders.notificationConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: notificationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: delete
    get:
      description: Gets a notification config.
      operationId: securitycenter.folders.notificationConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: notificationConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: select
  /v1/folders/{foldersId}/notificationConfigs:
    parameters: *ref_1
    post:
      description: Creates a notification config.
      operationId: securitycenter.folders.notificationConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: configId
          schema:
            type: string
      x-stackQL-resource: notification_configs
      x-stackQL-verb: insert
    get:
      description: Lists notification configs.
      operationId: securitycenter.folders.notificationConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotificationConfigsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: notification_configs
      x-stackQL-verb: select
