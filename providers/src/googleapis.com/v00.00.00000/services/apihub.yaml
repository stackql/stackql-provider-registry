openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: API hub API
  description: ''
  version: v1
  x-discovery-doc-revision: '20250731'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/apigee/docs/api-hub/what-is-api-hub
servers:
  - url: https://apihub.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    GoogleLongrunningCancelOperationRequest:
      id: GoogleLongrunningCancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    GoogleCloudApihubV1Plugin:
      id: GoogleCloudApihubV1Plugin
      description: A plugin resource in the API Hub.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the plugin. Format:
            `projects/{project}/locations/{location}/plugins/{plugin}`
          type: string
        displayName:
          description: >-
            Required. The display name of the plugin. Max length is 50
            characters (Unicode code points).
          type: string
        type:
          description: >-
            Optional. The type of the API. This maps to the following system
            defined attribute:
            `projects/{project}/locations/{location}/attributes/system-plugin-type`
            attribute. The number of allowed values for this attribute will be
            based on the cardinality of the attribute. The same can be retrieved
            via GetAttribute API. All values should be from the list of allowed
            values defined for the attribute. Note this field is not required
            for plugins developed via plugin framework.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        description:
          description: >-
            Optional. The plugin description. Max length is 2000 characters
            (Unicode code points).
          type: string
        state:
          description: >-
            Output only. Represents the state of the plugin. Note this field
            will not be set for plugins developed via plugin framework as the
            state will be managed at plugin instance level.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - The plugin is enabled.
            - The plugin is disabled.
          enum:
            - STATE_UNSPECIFIED
            - ENABLED
            - DISABLED
        ownershipType:
          description: >-
            Output only. The type of the plugin, indicating whether it is
            'SYSTEM_OWNED' or 'USER_OWNED'.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified type.
            - >-
              System owned plugins are defined by API hub and are available out
              of the box in API hub.
            - >-
              User owned plugins are defined by the user and need to be
              explicitly added to API hub via CreatePlugin method.
          enum:
            - OWNERSHIP_TYPE_UNSPECIFIED
            - SYSTEM_OWNED
            - USER_OWNED
        hostingService:
          description: >-
            Optional. This field is optional. It is used to notify the plugin
            hosting service for any lifecycle changes of the plugin instance and
            trigger execution of plugin instance actions in case of API hub
            managed actions. This field should be provided if the plugin
            instance lifecycle of the developed plugin needs to be managed from
            API hub. Also, in this case the plugin hosting service interface
            needs to be implemented. This field should not be provided if the
            plugin wants to manage plugin instance lifecycle events outside of
            hub interface and use plugin framework for only registering of
            plugin and plugin instances to capture the source of data into hub.
            Note, in this case the plugin hosting service interface is not
            required to be implemented. Also, the plugin instance lifecycle
            actions will be disabled from API hub's UI.
          $ref: '#/components/schemas/GoogleCloudApihubV1HostingService'
        actionsConfig:
          description: Required. The configuration of actions supported by the plugin.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1PluginActionConfig'
        documentation:
          description: >-
            Optional. The documentation of the plugin, that explains how to set
            up and use the plugin.
          $ref: '#/components/schemas/GoogleCloudApihubV1Documentation'
        pluginCategory:
          description: >-
            Optional. The category of the plugin, identifying its primary
            category or purpose. This field is required for all plugins.
          type: string
          enumDescriptions:
            - Default unspecified plugin type.
            - >-
              API_GATEWAY plugins represent plugins built for API Gateways like
              Apigee.
            - >-
              API_PRODUCER plugins represent plugins built for API Producers
              like Cloud Run, Application Integration etc.
          enum:
            - PLUGIN_CATEGORY_UNSPECIFIED
            - API_GATEWAY
            - API_PRODUCER
        configTemplate:
          description: Optional. The configuration template for the plugin.
          $ref: '#/components/schemas/GoogleCloudApihubV1ConfigTemplate'
        createTime:
          description: Output only. Timestamp indicating when the plugin was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Timestamp indicating when the plugin was last updated.
          readOnly: true
          type: string
          format: google-datetime
        gatewayType:
          description: Optional. The type of the gateway.
          type: string
          enumDescriptions:
            - The gateway type is not specified.
            - The gateway type is Apigee X and Hybrid.
            - The gateway type is Apigee Edge Public Cloud.
            - The gateway type is Apigee Edge Private Cloud.
            - The gateway type is Cloud API Gateway.
            - The gateway type is Cloud Endpoints.
            - The gateway type is API Discovery.
            - The gateway type for any other types of gateways.
          enum:
            - GATEWAY_TYPE_UNSPECIFIED
            - APIGEE_X_AND_HYBRID
            - APIGEE_EDGE_PUBLIC_CLOUD
            - APIGEE_EDGE_PRIVATE_CLOUD
            - CLOUD_API_GATEWAY
            - CLOUD_ENDPOINTS
            - API_DISCOVERY
            - OTHERS
    GoogleCloudApihubV1AttributeValues:
      id: GoogleCloudApihubV1AttributeValues
      description: The attribute values associated with resource.
      type: object
      properties:
        enumValues:
          description: >-
            The attribute values associated with a resource in case attribute
            data type is enum.
          $ref: '#/components/schemas/GoogleCloudApihubV1EnumAttributeValues'
        stringValues:
          description: >-
            The attribute values associated with a resource in case attribute
            data type is string.
          $ref: '#/components/schemas/GoogleCloudApihubV1StringAttributeValues'
        jsonValues:
          description: >-
            The attribute values associated with a resource in case attribute
            data type is JSON.
          $ref: '#/components/schemas/GoogleCloudApihubV1StringAttributeValues'
        uriValues:
          description: >-
            The attribute values associated with a resource in case attribute
            data type is URL, URI or IP, like gs://bucket-name/object-name.
          $ref: '#/components/schemas/GoogleCloudApihubV1StringAttributeValues'
        attribute:
          description: >-
            Output only. The name of the attribute. Format:
            projects/{project}/locations/{location}/attributes/{attribute}
          readOnly: true
          type: string
    GoogleCloudApihubV1EnumAttributeValues:
      id: GoogleCloudApihubV1EnumAttributeValues
      description: The attribute values of data type enum.
      type: object
      properties:
        values:
          description: Required. The attribute values in case attribute data type is enum.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1AllowedValue'
    GoogleCloudApihubV1AllowedValue:
      id: GoogleCloudApihubV1AllowedValue
      description: >-
        The value that can be assigned to the attribute when the data type is
        enum.
      type: object
      properties:
        id:
          description: >-
            Required. The ID of the allowed value. * If provided, the same will
            be used. The service will throw an error if the specified id is
            already used by another allowed value in the same attribute
            resource. * If not provided, a system generated id derived from the
            display name will be used. In this case, the service will handle
            conflict resolution by adding a system generated suffix in case of
            duplicates. This value should be 4-63 characters, and valid
            characters are /a-z-/.
          type: string
        displayName:
          description: Required. The display name of the allowed value.
          type: string
        description:
          description: Optional. The detailed description of the allowed value.
          type: string
        immutable:
          description: >-
            Optional. When set to true, the allowed value cannot be updated or
            deleted by the user. It can only be true for System defined
            attributes.
          type: boolean
    GoogleCloudApihubV1StringAttributeValues:
      id: GoogleCloudApihubV1StringAttributeValues
      description: The attribute values of data type string or JSON.
      type: object
      properties:
        values:
          description: >-
            Required. The attribute values in case attribute data type is string
            or JSON.
          type: array
          items:
            type: string
    GoogleCloudApihubV1HostingService:
      id: GoogleCloudApihubV1HostingService
      description: >-
        The information related to the service implemented by the plugin
        developer, used to invoke the plugin's functionality.
      type: object
      properties:
        serviceUri:
          description: >-
            Optional. The URI of the service implemented by the plugin
            developer, used to invoke the plugin's functionality. This
            information is only required for user defined plugins.
          type: string
    GoogleCloudApihubV1PluginActionConfig:
      id: GoogleCloudApihubV1PluginActionConfig
      description: >-
        PluginActionConfig represents the configuration of an action supported
        by a plugin.
      type: object
      properties:
        id:
          description: Required. The id of the action.
          type: string
        displayName:
          description: Required. The display name of the action.
          type: string
        description:
          description: Required. The description of the operation performed by the action.
          type: string
        triggerMode:
          description: Required. The trigger mode supported by the action.
          type: string
          enumDescriptions:
            - Default unspecified mode.
            - >-
              This action can be executed by invoking
              ExecutePluginInstanceAction API with the given action id. To
              support this, the plugin hosting service should handle this action
              id as part of execute call.
            - >-
              This action will be executed on schedule by invoking
              ExecutePluginInstanceAction API with the given action id. To set
              the schedule, the user can provide the cron expression in the
              PluginAction field for a given plugin instance. To support this,
              the plugin hosting service should handle this action id as part of
              execute call. Note, on demand execution will be supported by
              default in this trigger mode.
            - >-
              The execution of this plugin is not handled by API hub. In this
              case, the plugin hosting service need not handle this action id as
              part of the execute call.
          enum:
            - TRIGGER_MODE_UNSPECIFIED
            - API_HUB_ON_DEMAND_TRIGGER
            - API_HUB_SCHEDULE_TRIGGER
            - NON_API_HUB_MANAGED
    GoogleCloudApihubV1Documentation:
      id: GoogleCloudApihubV1Documentation
      description: Documentation details.
      type: object
      properties:
        externalUri:
          description: Optional. The uri of the externally hosted documentation.
          type: string
    GoogleCloudApihubV1ConfigTemplate:
      id: GoogleCloudApihubV1ConfigTemplate
      description: ConfigTemplate represents the configuration template for a plugin.
      type: object
      properties:
        authConfigTemplate:
          description: Optional. The authentication template for the plugin.
          $ref: '#/components/schemas/GoogleCloudApihubV1AuthConfigTemplate'
        additionalConfigTemplate:
          description: >-
            Optional. The list of additional configuration variables for the
            plugin's configuration.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1ConfigVariableTemplate'
    GoogleCloudApihubV1AuthConfigTemplate:
      id: GoogleCloudApihubV1AuthConfigTemplate
      description: AuthConfigTemplate represents the authentication template for a plugin.
      type: object
      properties:
        supportedAuthTypes:
          description: Required. The list of authentication types supported by the plugin.
          type: array
          items:
            type: string
            enumDescriptions:
              - Authentication type not specified.
              - No authentication.
              - Google service account authentication.
              - Username and password authentication.
              - API Key authentication.
              - Oauth 2.0 client credentials grant authentication.
            enum:
              - AUTH_TYPE_UNSPECIFIED
              - NO_AUTH
              - GOOGLE_SERVICE_ACCOUNT
              - USER_PASSWORD
              - API_KEY
              - OAUTH2_CLIENT_CREDENTIALS
        serviceAccount:
          description: >-
            Optional. The service account of the plugin hosting service. This
            service account should be granted the required permissions on the
            Auth Config parameters provided while creating the plugin instances
            corresponding to this plugin. For example, if the plugin instance
            auth config requires a secret manager secret, the service account
            should be granted the secretmanager.versions.access permission on
            the corresponding secret, if the plugin instance auth config
            contains a service account, the service account should be granted
            the iam.serviceAccounts.getAccessToken permission on the
            corresponding service account.
          $ref: '#/components/schemas/GoogleCloudApihubV1GoogleServiceAccountConfig'
    GoogleCloudApihubV1GoogleServiceAccountConfig:
      id: GoogleCloudApihubV1GoogleServiceAccountConfig
      description: Config for Google service account authentication.
      type: object
      properties:
        serviceAccount:
          description: >-
            Required. The service account to be used for authenticating request.
            The `iam.serviceAccounts.getAccessToken` permission should be
            granted on this service account to the impersonator service account.
          type: string
    GoogleCloudApihubV1ConfigVariableTemplate:
      id: GoogleCloudApihubV1ConfigVariableTemplate
      description: >-
        ConfigVariableTemplate represents a configuration variable template
        present in a Plugin Config.
      type: object
      properties:
        id:
          description: >-
            Required. ID of the config variable. Must be unique within the
            configuration.
          type: string
        valueType:
          description: 'Required. Type of the parameter: string, int, bool etc.'
          type: string
          enumDescriptions:
            - Value type is not specified.
            - Value type is string.
            - Value type is integer.
            - Value type is boolean.
            - Value type is secret.
            - Value type is enum.
            - Value type is multi select.
            - Value type is multi string.
            - Value type is multi int.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - STRING
            - INT
            - BOOL
            - SECRET
            - ENUM
            - MULTI_SELECT
            - MULTI_STRING
            - MULTI_INT
        description:
          description: Optional. Description.
          type: string
        validationRegex:
          description: >-
            Optional. Regular expression in RE2 syntax used for validating the
            `value` of a `ConfigVariable`.
          type: string
        required:
          description: >-
            Optional. Flag represents that this `ConfigVariable` must be
            provided for a PluginInstance.
          type: boolean
        enumOptions:
          description: Optional. Enum options. To be populated if `ValueType` is `ENUM`.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1ConfigValueOption'
        multiSelectOptions:
          description: >-
            Optional. Multi select options. To be populated if `ValueType` is
            `MULTI_SELECT`.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1ConfigValueOption'
    GoogleCloudApihubV1ConfigValueOption:
      id: GoogleCloudApihubV1ConfigValueOption
      description: >-
        ConfigValueOption represents an option for a config variable of type
        enum or multi select.
      type: object
      properties:
        id:
          description: Required. Id of the option.
          type: string
        displayName:
          description: Required. Display name of the option.
          type: string
        description:
          description: Optional. Description of the option.
          type: string
    GoogleCloudApihubV1EnablePluginRequest:
      id: GoogleCloudApihubV1EnablePluginRequest
      description: The EnablePlugin method's request.
      type: object
      properties: {}
    GoogleCloudApihubV1DisablePluginRequest:
      id: GoogleCloudApihubV1DisablePluginRequest
      description: The DisablePlugin method's request.
      type: object
      properties: {}
    GoogleCloudApihubV1ListPluginsResponse:
      id: GoogleCloudApihubV1ListPluginsResponse
      description: The ListPlugins method's response.
      type: object
      properties:
        plugins:
          description: The plugins from the specified parent resource.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1Plugin'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1PluginInstance:
      id: GoogleCloudApihubV1PluginInstance
      description: >-
        Represents a plugin instance resource in the API Hub. A PluginInstance
        is a specific instance of a hub plugin with its own configuration,
        state, and execution details.
      type: object
      properties:
        name:
          description: >-
            Identifier. The unique name of the plugin instance resource. Format:
            `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`
          type: string
        displayName:
          description: >-
            Required. The display name for this plugin instance. Max length is
            255 characters.
          type: string
        authConfig:
          description: Optional. The authentication information for this plugin instance.
          $ref: '#/components/schemas/GoogleCloudApihubV1AuthConfig'
        additionalConfig:
          description: >-
            Optional. The additional information for this plugin instance
            corresponding to the additional config template of the plugin. This
            information will be sent to plugin hosting service on each call to
            plugin hosted service. The key will be the
            config_variable_template.display_name to uniquely identify the
            config variable.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1ConfigVariable'
        state:
          description: >-
            Output only. The current state of the plugin instance (e.g.,
            enabled, disabled, provisioning).
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified state.
            - The plugin instance is being created.
            - >-
              The plugin instance is active and ready for executions. This is
              the only state where executions can run on the plugin instance.
            - >-
              The updated config that contains additional_config and auth_config
              is being applied.
            - >-
              The ERROR state can come while applying config. Users can
              retrigger ApplyPluginInstanceConfig to restore the plugin instance
              back to active state. Note, In case the ERROR state happens while
              applying config (auth_config, additional_config), the plugin
              instance will reflect the config which was trying to be applied
              while error happened. In order to overwrite, trigger ApplyConfig
              with a new config.
            - >-
              The plugin instance is in a failed state. This indicates that an
              unrecoverable error occurred during a previous operation (Create,
              Delete).
            - >-
              The plugin instance is being deleted. Delete is only possible if
              there is no other operation running on the plugin instance and
              plugin instance action.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - APPLYING_CONFIG
            - ERROR
            - FAILED
            - DELETING
        errorMessage:
          description: >-
            Output only. Error message describing the failure, if any, during
            Create, Delete or ApplyConfig operation corresponding to the plugin
            instance.This field will only be populated if the plugin instance is
            in the ERROR or FAILED state.
          readOnly: true
          type: string
        actions:
          description: Required. The action status for the plugin instance.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1PluginInstanceAction'
        createTime:
          description: >-
            Output only. Timestamp indicating when the plugin instance was
            created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. Timestamp indicating when the plugin instance was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        sourceProjectId:
          description: >-
            Optional. The source project id of the plugin instance. This will be
            the id of runtime project in case of gcp based plugins and org id in
            case of non gcp based plugins. This field will be a required field
            for Google provided on-ramp plugins.
          type: string
    GoogleCloudApihubV1AuthConfig:
      id: GoogleCloudApihubV1AuthConfig
      description: AuthConfig represents the authentication information.
      type: object
      properties:
        googleServiceAccountConfig:
          description: Google Service Account.
          $ref: '#/components/schemas/GoogleCloudApihubV1GoogleServiceAccountConfig'
        userPasswordConfig:
          description: User Password.
          $ref: '#/components/schemas/GoogleCloudApihubV1UserPasswordConfig'
        apiKeyConfig:
          description: Api Key Config.
          $ref: '#/components/schemas/GoogleCloudApihubV1ApiKeyConfig'
        oauth2ClientCredentialsConfig:
          description: Oauth2.0 Client Credentials.
          $ref: >-
            #/components/schemas/GoogleCloudApihubV1Oauth2ClientCredentialsConfig
        authType:
          description: Required. The authentication type.
          type: string
          enumDescriptions:
            - Authentication type not specified.
            - No authentication.
            - Google service account authentication.
            - Username and password authentication.
            - API Key authentication.
            - Oauth 2.0 client credentials grant authentication.
          enum:
            - AUTH_TYPE_UNSPECIFIED
            - NO_AUTH
            - GOOGLE_SERVICE_ACCOUNT
            - USER_PASSWORD
            - API_KEY
            - OAUTH2_CLIENT_CREDENTIALS
    GoogleCloudApihubV1UserPasswordConfig:
      id: GoogleCloudApihubV1UserPasswordConfig
      description: Parameters to support Username and Password Authentication.
      type: object
      properties:
        username:
          description: Required. Username.
          type: string
        password:
          description: >-
            Required. Secret version reference containing the password. The
            `secretmanager.versions.access` permission should be granted to the
            service account accessing the secret.
          $ref: '#/components/schemas/GoogleCloudApihubV1Secret'
    GoogleCloudApihubV1Secret:
      id: GoogleCloudApihubV1Secret
      description: Secret provides a reference to entries in Secret Manager.
      type: object
      properties:
        secretVersion:
          description: >-
            Required. The resource name of the secret version in the format,
            format as: `projects/*/secrets/*/versions/*`.
          type: string
    GoogleCloudApihubV1ApiKeyConfig:
      id: GoogleCloudApihubV1ApiKeyConfig
      description: Config for authentication with API key.
      type: object
      properties:
        name:
          description: >-
            Required. The parameter name of the API key. E.g. If the API request
            is "https://example.com/act?api_key=", "api_key" would be the
            parameter name.
          type: string
        apiKey:
          description: >-
            Required. The name of the SecretManager secret version resource
            storing the API key. Format:
            `projects/{project}/secrets/{secrete}/versions/{version}`. The
            `secretmanager.versions.access` permission should be granted to the
            service account accessing the secret.
          $ref: '#/components/schemas/GoogleCloudApihubV1Secret'
        httpElementLocation:
          description: Required. The location of the API key. The default value is QUERY.
          type: string
          enumDescriptions:
            - HTTP element location not specified.
            - Element is in the HTTP request query.
            - Element is in the HTTP request header.
            - Element is in the HTTP request path.
            - Element is in the HTTP request body.
            - Element is in the HTTP request cookie.
          enum:
            - HTTP_ELEMENT_LOCATION_UNSPECIFIED
            - QUERY
            - HEADER
            - PATH
            - BODY
            - COOKIE
    GoogleCloudApihubV1Oauth2ClientCredentialsConfig:
      id: GoogleCloudApihubV1Oauth2ClientCredentialsConfig
      description: >-
        Parameters to support Oauth 2.0 client credentials grant authentication.
        See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
      type: object
      properties:
        clientId:
          description: Required. The client identifier.
          type: string
        clientSecret:
          description: >-
            Required. Secret version reference containing the client secret. The
            `secretmanager.versions.access` permission should be granted to the
            service account accessing the secret.
          $ref: '#/components/schemas/GoogleCloudApihubV1Secret'
    GoogleCloudApihubV1ConfigVariable:
      id: GoogleCloudApihubV1ConfigVariable
      description: >-
        ConfigVariable represents a additional configuration variable present in
        a PluginInstance Config or AuthConfig, based on a
        ConfigVariableTemplate.
      type: object
      properties:
        stringValue:
          description: >-
            Optional. The config variable value in case of config variable of
            type string.
          type: string
        intValue:
          description: >-
            Optional. The config variable value in case of config variable of
            type integer.
          type: string
          format: int64
        boolValue:
          description: >-
            Optional. The config variable value in case of config variable of
            type boolean.
          type: boolean
        secretValue:
          description: >-
            Optional. The config variable value in case of config variable of
            type secret.
          $ref: '#/components/schemas/GoogleCloudApihubV1Secret'
        enumValue:
          description: >-
            Optional. The config variable value in case of config variable of
            type enum.
          $ref: '#/components/schemas/GoogleCloudApihubV1ConfigValueOption'
        multiSelectValues:
          description: >-
            Optional. The config variable value in case of config variable of
            type multi select.
          $ref: '#/components/schemas/GoogleCloudApihubV1MultiSelectValues'
        multiStringValues:
          description: >-
            Optional. The config variable value in case of config variable of
            type multi string.
          $ref: '#/components/schemas/GoogleCloudApihubV1MultiStringValues'
        multiIntValues:
          description: >-
            Optional. The config variable value in case of config variable of
            type multi integer.
          $ref: '#/components/schemas/GoogleCloudApihubV1MultiIntValues'
        key:
          description: >-
            Output only. Key will be the id to uniquely identify the config
            variable.
          readOnly: true
          type: string
    GoogleCloudApihubV1MultiSelectValues:
      id: GoogleCloudApihubV1MultiSelectValues
      description: The config variable value of data type multi select.
      type: object
      properties:
        values:
          description: Optional. The config variable value of data type multi select.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1ConfigValueOption'
    GoogleCloudApihubV1MultiStringValues:
      id: GoogleCloudApihubV1MultiStringValues
      description: The config variable value of data type multi string.
      type: object
      properties:
        values:
          description: Optional. The config variable value of data type multi string.
          type: array
          items:
            type: string
    GoogleCloudApihubV1MultiIntValues:
      id: GoogleCloudApihubV1MultiIntValues
      description: The config variable value of data type multi int.
      type: object
      properties:
        values:
          description: Optional. The config variable value of data type multi int.
          type: array
          items:
            type: integer
            format: int32
    GoogleCloudApihubV1PluginInstanceAction:
      id: GoogleCloudApihubV1PluginInstanceAction
      description: >-
        PluginInstanceAction represents an action which can be executed in the
        plugin instance.
      type: object
      properties:
        hubInstanceAction:
          description: >-
            Optional. The execution information for the plugin instance action
            done corresponding to an API hub instance.
          $ref: '#/components/schemas/GoogleCloudApihubV1ExecutionStatus'
        actionId:
          description: >-
            Required. This should map to one of the action id specified in
            actions_config in the plugin.
          type: string
        state:
          description: >-
            Output only. The current state of the plugin action in the plugin
            instance.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified state.
            - >-
              The action is enabled in the plugin instance i.e., executions can
              be triggered for this action.
            - >-
              The action is disabled in the plugin instance i.e., no executions
              can be triggered for this action. This state indicates that the
              user explicitly disabled the instance, and no further action is
              needed unless the user wants to re-enable it.
            - The action in the plugin instance is being enabled.
            - The action in the plugin instance is being disabled.
            - >-
              The ERROR state can come while enabling/disabling plugin instance
              action. Users can retrigger enable, disable via
              EnablePluginInstanceAction and DisablePluginInstanceAction to
              restore the action back to enabled/disabled state. Note
              enable/disable on actions can only be triggered if plugin instance
              is in Active state.
          enum:
            - STATE_UNSPECIFIED
            - ENABLED
            - DISABLED
            - ENABLING
            - DISABLING
            - ERROR
        scheduleCronExpression:
          description: >-
            Optional. The schedule for this plugin instance action. This can
            only be set if the plugin supports API_HUB_SCHEDULE_TRIGGER mode for
            this action.
          type: string
        curationConfig:
          description: >-
            Optional. This configuration should be provided if the plugin action
            is publishing data to API hub curate layer.
          $ref: '#/components/schemas/GoogleCloudApihubV1CurationConfig'
        scheduleTimeZone:
          description: >-
            Optional. The time zone for the schedule cron expression. If not
            provided, UTC will be used.
          type: string
        serviceAccount:
          description: >-
            Optional. The service account used to publish data. Note, the
            service account will only be accepted for non GCP plugins like OPDK.
          type: string
        resourceConfig:
          description: >-
            Output only. The configuration of resources created for a given
            plugin instance action. Note these will be returned only in case of
            Non-GCP plugins like OPDK.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudApihubV1ResourceConfig'
    GoogleCloudApihubV1ExecutionStatus:
      id: GoogleCloudApihubV1ExecutionStatus
      description: The execution status for the plugin instance.
      type: object
      properties:
        currentExecutionState:
          description: Output only. The current state of the execution.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified execution state.
            - The plugin instance is executing.
            - The plugin instance is not running an execution.
          enum:
            - CURRENT_EXECUTION_STATE_UNSPECIFIED
            - RUNNING
            - NOT_RUNNING
        lastExecution:
          description: Output only. The last execution of the plugin instance.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudApihubV1LastExecution'
    GoogleCloudApihubV1LastExecution:
      id: GoogleCloudApihubV1LastExecution
      description: The result of the last execution of the plugin instance.
      type: object
      properties:
        result:
          description: >-
            Output only. The result of the last execution of the plugin
            instance.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified execution result.
            - The plugin instance executed successfully.
            - The plugin instance execution failed.
          enum:
            - RESULT_UNSPECIFIED
            - SUCCEEDED
            - FAILED
        errorMessage:
          description: >-
            Output only. Error message describing the failure, if any, during
            the last execution.
          readOnly: true
          type: string
        startTime:
          description: Output only. The last execution start time of the plugin instance.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The last execution end time of the plugin instance.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudApihubV1CurationConfig:
      id: GoogleCloudApihubV1CurationConfig
      description: The curation information for this plugin instance.
      type: object
      properties:
        customCuration:
          description: Optional. Custom curation information for this plugin instance.
          $ref: '#/components/schemas/GoogleCloudApihubV1CustomCuration'
        curationType:
          description: Required. The curation type for this plugin instance.
          type: string
          enumDescriptions:
            - Default unspecified curation type.
            - Default curation for API metadata will be used.
            - Custom curation for API metadata will be used.
          enum:
            - CURATION_TYPE_UNSPECIFIED
            - DEFAULT_CURATION_FOR_API_METADATA
            - CUSTOM_CURATION_FOR_API_METADATA
    GoogleCloudApihubV1CustomCuration:
      id: GoogleCloudApihubV1CustomCuration
      description: Custom curation information for this plugin instance.
      type: object
      properties:
        curation:
          description: >-
            Required. The unique name of the curation resource. This will be the
            name of the curation resource in the format:
            `projects/{project}/locations/{location}/curations/{curation}`
          type: string
    GoogleCloudApihubV1ResourceConfig:
      id: GoogleCloudApihubV1ResourceConfig
      description: >-
        The configuration of resources created for a given plugin instance
        action.
      type: object
      properties:
        actionType:
          description: Output only. The type of the action.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified action type.
            - Action type for sync metadata.
            - Action type for sync runtime data.
          enum:
            - ACTION_TYPE_UNSPECIFIED
            - SYNC_METADATA
            - SYNC_RUNTIME_DATA
        pubsubTopic:
          description: >-
            Output only. The pubsub topic to publish the data to. Format is
            projects/{project}/topics/{topic}
          readOnly: true
          type: string
    GoogleCloudApihubV1ExecutePluginInstanceActionRequest:
      id: GoogleCloudApihubV1ExecutePluginInstanceActionRequest
      description: The ExecutePluginInstanceAction method's request.
      type: object
      properties:
        actionExecutionDetail:
          description: Required. The execution details for the action to execute.
          $ref: '#/components/schemas/GoogleCloudApihubV1ActionExecutionDetail'
    GoogleCloudApihubV1ActionExecutionDetail:
      id: GoogleCloudApihubV1ActionExecutionDetail
      description: The details for the action to execute.
      type: object
      properties:
        actionId:
          description: Required. The action id of the plugin to execute.
          type: string
    GoogleCloudApihubV1ListPluginInstancesResponse:
      id: GoogleCloudApihubV1ListPluginInstancesResponse
      description: The ListPluginInstances method's response.
      type: object
      properties:
        pluginInstances:
          description: The plugin instances from the specified parent resource.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1PluginInstance'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1EnablePluginInstanceActionRequest:
      id: GoogleCloudApihubV1EnablePluginInstanceActionRequest
      description: The EnablePluginInstanceAction method's request.
      type: object
      properties:
        actionId:
          description: Required. The action id to enable.
          type: string
    GoogleCloudApihubV1DisablePluginInstanceActionRequest:
      id: GoogleCloudApihubV1DisablePluginInstanceActionRequest
      description: The DisablePluginInstanceAction method's request.
      type: object
      properties:
        actionId:
          description: Required. The action id to disable.
          type: string
    GoogleCloudApihubV1Api:
      id: GoogleCloudApihubV1Api
      description: An API resource in the API Hub.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the API resource in the API Hub. Format:
            `projects/{project}/locations/{location}/apis/{api}`
          type: string
        displayName:
          description: Required. The display name of the API resource.
          type: string
        description:
          description: Optional. The description of the API resource.
          type: string
        documentation:
          description: Optional. The documentation for the API resource.
          $ref: '#/components/schemas/GoogleCloudApihubV1Documentation'
        owner:
          description: Optional. Owner details for the API resource.
          $ref: '#/components/schemas/GoogleCloudApihubV1Owner'
        versions:
          description: >-
            Output only. The list of versions present in an API resource. Note:
            An API resource can be associated with more than 1 version. Format
            is
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
          readOnly: true
          type: array
          items:
            type: string
        createTime:
          description: Output only. The time at which the API resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the API resource was last updated.
          readOnly: true
          type: string
          format: google-datetime
        targetUser:
          description: >-
            Optional. The target users for the API. This maps to the following
            system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-target-user`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        team:
          description: >-
            Optional. The team owning the API. This maps to the following system
            defined attribute:
            `projects/{project}/locations/{location}/attributes/system-team`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        businessUnit:
          description: >-
            Optional. The business unit owning the API. This maps to the
            following system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-business-unit`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        maturityLevel:
          description: >-
            Optional. The maturity level of the API. This maps to the following
            system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-maturity-level`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        attributes:
          description: >-
            Optional. The list of user defined attributes associated with the
            API resource. The key is the attribute name. It will be of the
            format:
            `projects/{project}/locations/{location}/attributes/{attribute}`.
            The value is the attribute values associated with the resource.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        apiStyle:
          description: >-
            Optional. The style of the API. This maps to the following system
            defined attribute:
            `projects/{project}/locations/{location}/attributes/system-api-style`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        selectedVersion:
          description: >-
            Optional. The selected version for an API resource. This can be used
            when special handling is needed on client side for particular
            version of the API. Format is
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
          type: string
        apiRequirements:
          description: >-
            Optional. The api requirement doc associated with the API resource.
            Carinality is 1 for this attribute. This maps to the following
            system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-api-requirements`
            attribute. The value of the attribute should be a proper URI, and in
            case of Cloud Storage URI, it should point to a Cloud Storage
            object, not a directory.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        fingerprint:
          description: Optional. Fingerprint of the API resource.
          type: string
        sourceMetadata:
          description: >-
            Output only. The list of sources and metadata from the sources of
            the API resource.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1SourceMetadata'
        apiFunctionalRequirements:
          description: >-
            Optional. The api functional requirements associated with the API
            resource. Carinality is 1 for this attribute. This maps to the
            following system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-api-functional-requirements`
            attribute. The value of the attribute should be a proper URI, and in
            case of Cloud Storage URI, it should point to a Cloud Storage
            object, not a directory.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        apiTechnicalRequirements:
          description: >-
            Optional. The api technical requirements associated with the API
            resource. Carinality is 1 for this attribute. This maps to the
            following system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-api-technical-requirements`
            attribute. The value of the attribute should be a proper URI, and in
            case of Cloud Storage URI, it should point to a Cloud Storage
            object, not a directory.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
    GoogleCloudApihubV1Owner:
      id: GoogleCloudApihubV1Owner
      description: Owner details.
      type: object
      properties:
        displayName:
          description: Optional. The name of the owner.
          type: string
        email:
          description: Required. The email of the owner.
          type: string
    GoogleCloudApihubV1SourceMetadata:
      id: GoogleCloudApihubV1SourceMetadata
      description: SourceMetadata represents the metadata for a resource at the source.
      type: object
      properties:
        pluginInstanceActionSource:
          description: Output only. The source of the resource is a plugin instance action.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudApihubV1PluginInstanceActionSource'
        sourceType:
          description: Output only. The type of the source.
          readOnly: true
          type: string
          enumDescriptions:
            - Source type not specified.
            - Source type plugin.
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - PLUGIN
        originalResourceId:
          description: Output only. The unique identifier of the resource at the source.
          readOnly: true
          type: string
        originalResourceCreateTime:
          description: >-
            Output only. The time at which the resource was created at the
            source.
          readOnly: true
          type: string
          format: google-datetime
        originalResourceUpdateTime:
          description: >-
            Output only. The time at which the resource was last updated at the
            source.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudApihubV1PluginInstanceActionSource:
      id: GoogleCloudApihubV1PluginInstanceActionSource
      description: PluginInstanceActionSource represents the plugin instance action source.
      type: object
      properties:
        pluginInstance:
          description: >-
            Output only. The resource name of the source plugin instance. Format
            is
            `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`
          readOnly: true
          type: string
        actionId:
          description: Output only. The id of the plugin instance action.
          readOnly: true
          type: string
    GoogleCloudApihubV1ListApisResponse:
      id: GoogleCloudApihubV1ListApisResponse
      description: The ListApis method's response.
      type: object
      properties:
        apis:
          description: The API resources present in the API hub.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1Api'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1Version:
      id: GoogleCloudApihubV1Version
      description: >-
        Represents a version of the API resource in API hub. This is also
        referred to as the API version.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the version. Format:
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
          type: string
        displayName:
          description: Required. The display name of the version.
          type: string
        description:
          description: Optional. The description of the version.
          type: string
        documentation:
          description: Optional. The documentation of the version.
          $ref: '#/components/schemas/GoogleCloudApihubV1Documentation'
        specs:
          description: >-
            Output only. The specs associated with this version. Note that an
            API version can be associated with multiple specs. Format is
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}`
          readOnly: true
          type: array
          items:
            type: string
        apiOperations:
          description: >-
            Output only. The operations contained in the API version. These
            operations will be added to the version when a new spec is added or
            when an existing spec is updated. Format is
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`
          readOnly: true
          type: array
          items:
            type: string
        definitions:
          description: >-
            Output only. The definitions contained in the API version. These
            definitions will be added to the version when a new spec is added or
            when an existing spec is updated. Format is
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}/definitions/{definition}`
          readOnly: true
          type: array
          items:
            type: string
        deployments:
          description: >-
            Optional. The deployments linked to this API version. Note: A
            particular API version could be deployed to multiple deployments
            (for dev deployment, UAT deployment, etc) Format is
            `projects/{project}/locations/{location}/deployments/{deployment}`
          type: array
          items:
            type: string
        createTime:
          description: Output only. The time at which the version was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the version was last updated.
          readOnly: true
          type: string
          format: google-datetime
        lifecycle:
          description: >-
            Optional. The lifecycle of the API version. This maps to the
            following system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-lifecycle`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        compliance:
          description: >-
            Optional. The compliance associated with the API version. This maps
            to the following system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-compliance`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        accreditation:
          description: >-
            Optional. The accreditations associated with the API version. This
            maps to the following system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-accreditation`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        attributes:
          description: >-
            Optional. The list of user defined attributes associated with the
            Version resource. The key is the attribute name. It will be of the
            format:
            `projects/{project}/locations/{location}/attributes/{attribute}`.
            The value is the attribute values associated with the resource.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        selectedDeployment:
          description: >-
            Optional. The selected deployment for a Version resource. This can
            be used when special handling is needed on client side for a
            particular deployment linked to the version. Format is
            `projects/{project}/locations/{location}/deployments/{deployment}`
          type: string
        sourceMetadata:
          description: >-
            Output only. The list of sources and metadata from the sources of
            the version.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1SourceMetadata'
    GoogleCloudApihubV1ListVersionsResponse:
      id: GoogleCloudApihubV1ListVersionsResponse
      description: The ListVersions method's response.
      type: object
      properties:
        versions:
          description: The versions corresponding to an API.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1Version'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1Spec:
      id: GoogleCloudApihubV1Spec
      description: >-
        Represents a spec associated with an API version in the API Hub. Note
        that specs of various types can be uploaded, however parsing of details
        is supported for OpenAPI spec currently.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the spec. Format:
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}`
          type: string
        displayName:
          description: >-
            Required. The display name of the spec. This can contain the file
            name of the spec.
          type: string
        specType:
          description: >-
            Required. The type of spec. The value should be one of the allowed
            values defined for
            `projects/{project}/locations/{location}/attributes/system-spec-type`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. Note, this field is mandatory if content is
            provided.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        contents:
          description: Optional. Input only. The contents of the uploaded spec.
          $ref: '#/components/schemas/GoogleCloudApihubV1SpecContents'
        details:
          description: Output only. Details parsed from the spec.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudApihubV1SpecDetails'
        sourceUri:
          description: >-
            Optional. The URI of the spec source in case file is uploaded from
            an external version control system.
          type: string
        createTime:
          description: Output only. The time at which the spec was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the spec was last updated.
          readOnly: true
          type: string
          format: google-datetime
        lintResponse:
          description: Optional. The lint response for the spec.
          $ref: '#/components/schemas/GoogleCloudApihubV1LintResponse'
        attributes:
          description: >-
            Optional. The list of user defined attributes associated with the
            spec. The key is the attribute name. It will be of the format:
            `projects/{project}/locations/{location}/attributes/{attribute}`.
            The value is the attribute values associated with the resource.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        documentation:
          description: >-
            Optional. The documentation of the spec. For OpenAPI spec, this will
            be populated from `externalDocs` in OpenAPI spec.
          $ref: '#/components/schemas/GoogleCloudApihubV1Documentation'
        parsingMode:
          description: >-
            Optional. Input only. Enum specifying the parsing mode for OpenAPI
            Specification (OAS) parsing.
          type: string
          enumDescriptions:
            - Defaults to `RELAXED`.
            - >-
              Parsing of the Spec on create and update is relaxed, meaning that
              parsing errors the spec contents will not fail the API call.
            - >-
              Parsing of the Spec on create and update is strict, meaning that
              parsing errors in the spec contents will fail the API call.
          enum:
            - PARSING_MODE_UNSPECIFIED
            - RELAXED
            - STRICT
        sourceMetadata:
          description: >-
            Output only. The list of sources and metadata from the sources of
            the spec.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1SourceMetadata'
    GoogleCloudApihubV1SpecContents:
      id: GoogleCloudApihubV1SpecContents
      description: The spec contents.
      type: object
      properties:
        contents:
          description: Required. The contents of the spec.
          type: string
          format: byte
        mimeType:
          description: >-
            Required. The mime type of the content for example application/json,
            application/yaml, application/wsdl etc.
          type: string
    GoogleCloudApihubV1SpecDetails:
      id: GoogleCloudApihubV1SpecDetails
      description: SpecDetails contains the details parsed from supported spec types.
      type: object
      properties:
        openApiSpecDetails:
          description: >-
            Output only. Additional details apart from `OperationDetails` parsed
            from an OpenAPI spec. The OperationDetails parsed from the spec can
            be obtained by using ListAPIOperations method.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudApihubV1OpenApiSpecDetails'
        description:
          description: Output only. The description of the spec.
          readOnly: true
          type: string
    GoogleCloudApihubV1OpenApiSpecDetails:
      id: GoogleCloudApihubV1OpenApiSpecDetails
      description: >-
        OpenApiSpecDetails contains the details parsed from an OpenAPI spec in
        addition to the fields mentioned in SpecDetails.
      type: object
      properties:
        format:
          description: Output only. The format of the spec.
          readOnly: true
          type: string
          enumDescriptions:
            - SpecFile type unspecified.
            - OpenAPI Spec v2.0.
            - OpenAPI Spec v3.0.
            - OpenAPI Spec v3.1.
          enum:
            - FORMAT_UNSPECIFIED
            - OPEN_API_SPEC_2_0
            - OPEN_API_SPEC_3_0
            - OPEN_API_SPEC_3_1
        version:
          description: >-
            Output only. The version in the spec. This maps to `info.version` in
            OpenAPI spec.
          readOnly: true
          type: string
        owner:
          description: >-
            Output only. Owner details for the spec. This maps to `info.contact`
            in OpenAPI spec.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudApihubV1Owner'
    GoogleCloudApihubV1LintResponse:
      id: GoogleCloudApihubV1LintResponse
      description: LintResponse contains the response from the linter.
      type: object
      properties:
        issues:
          description: Optional. Array of issues found in the analyzed document.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1Issue'
        summary:
          description: >-
            Optional. Summary of all issue types and counts for each severity
            level.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1SummaryEntry'
        state:
          description: Required. Lint state represents success or failure for linting.
          type: string
          enumDescriptions:
            - Lint state unspecified.
            - Linting was completed successfully.
            - Linting encountered errors.
          enum:
            - LINT_STATE_UNSPECIFIED
            - LINT_STATE_SUCCESS
            - LINT_STATE_ERROR
        source:
          description: Required. Name of the linting application.
          type: string
        linter:
          description: Required. Name of the linter used.
          type: string
          enumDescriptions:
            - Linter type unspecified.
            - Linter type spectral.
            - Linter type other.
          enum:
            - LINTER_UNSPECIFIED
            - SPECTRAL
            - OTHER
        createTime:
          description: Required. Timestamp when the linting response was generated.
          type: string
          format: google-datetime
    GoogleCloudApihubV1Issue:
      id: GoogleCloudApihubV1Issue
      description: Issue contains the details of a single issue found by the linter.
      type: object
      properties:
        code:
          description: Required. Rule code unique to each rule defined in linter.
          type: string
        path:
          description: >-
            Required. An array of strings indicating the location in the
            analyzed document where the rule was triggered.
          type: array
          items:
            type: string
        message:
          description: >-
            Required. Human-readable message describing the issue found by the
            linter.
          type: string
        severity:
          description: Required. Severity level of the rule violation.
          type: string
          enumDescriptions:
            - Severity unspecified.
            - Severity error.
            - Severity warning.
            - Severity info.
            - Severity hint.
          enum:
            - SEVERITY_UNSPECIFIED
            - SEVERITY_ERROR
            - SEVERITY_WARNING
            - SEVERITY_INFO
            - SEVERITY_HINT
        range:
          description: Required. Object describing where in the file the issue was found.
          $ref: '#/components/schemas/GoogleCloudApihubV1Range'
    GoogleCloudApihubV1Range:
      id: GoogleCloudApihubV1Range
      description: Object describing where in the file the issue was found.
      type: object
      properties:
        start:
          description: Required. Start of the issue.
          $ref: '#/components/schemas/GoogleCloudApihubV1Point'
        end:
          description: Required. End of the issue.
          $ref: '#/components/schemas/GoogleCloudApihubV1Point'
    GoogleCloudApihubV1Point:
      id: GoogleCloudApihubV1Point
      description: Point within the file (line and character).
      type: object
      properties:
        line:
          description: Required. Line number (zero-indexed).
          type: integer
          format: int32
        character:
          description: Required. Character position within the line (zero-indexed).
          type: integer
          format: int32
    GoogleCloudApihubV1SummaryEntry:
      id: GoogleCloudApihubV1SummaryEntry
      description: Count of issues with a given severity.
      type: object
      properties:
        severity:
          description: Required. Severity of the issue.
          type: string
          enumDescriptions:
            - Severity unspecified.
            - Severity error.
            - Severity warning.
            - Severity info.
            - Severity hint.
          enum:
            - SEVERITY_UNSPECIFIED
            - SEVERITY_ERROR
            - SEVERITY_WARNING
            - SEVERITY_INFO
            - SEVERITY_HINT
        count:
          description: Required. Count of issues with the given severity.
          type: integer
          format: int32
    GoogleCloudApihubV1ListSpecsResponse:
      id: GoogleCloudApihubV1ListSpecsResponse
      description: The ListSpecs method's response.
      type: object
      properties:
        specs:
          description: The specs corresponding to an API Version.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1Spec'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1ApiOperation:
      id: GoogleCloudApihubV1ApiOperation
      description: >-
        Represents an operation contained in an API version in the API Hub. An
        operation is added/updated/deleted in an API version when a new spec is
        added or an existing spec is updated/deleted in a version. Currently, an
        operation will be created only corresponding to OpenAPI spec as parsing
        is supported for OpenAPI spec. Alternatively operations can be managed
        via create,update and delete APIs, creation of apiOperation can be
        possible only for version with no parsed operations and update/delete
        can be possible only for operations created via create API.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the operation. Format:
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`
          type: string
        spec:
          description: >-
            Output only. The name of the spec will be of the format:
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}`
            Note:The name of the spec will be empty if the operation is created
            via CreateApiOperation API.
          readOnly: true
          type: string
        details:
          description: >-
            Optional. Operation details. Note: Even though this field is
            optional, it is required for CreateApiOperation API and we will fail
            the request if not provided.
          $ref: '#/components/schemas/GoogleCloudApihubV1OperationDetails'
        createTime:
          description: Output only. The time at which the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the operation was last updated.
          readOnly: true
          type: string
          format: google-datetime
        attributes:
          description: >-
            Optional. The list of user defined attributes associated with the
            API operation resource. The key is the attribute name. It will be of
            the format:
            `projects/{project}/locations/{location}/attributes/{attribute}`.
            The value is the attribute values associated with the resource.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        sourceMetadata:
          description: >-
            Output only. The list of sources and metadata from the sources of
            the API operation.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1SourceMetadata'
    GoogleCloudApihubV1OperationDetails:
      id: GoogleCloudApihubV1OperationDetails
      description: The operation details parsed from the spec.
      type: object
      properties:
        httpOperation:
          description: The HTTP Operation.
          $ref: '#/components/schemas/GoogleCloudApihubV1HttpOperation'
        description:
          description: >-
            Optional. Description of the operation behavior. For OpenAPI spec,
            this will map to `operation.description` in the spec, in case
            description is empty, `operation.summary` will be used.
          type: string
        documentation:
          description: >-
            Optional. Additional external documentation for this operation. For
            OpenAPI spec, this will map to `operation.documentation` in the
            spec.
          $ref: '#/components/schemas/GoogleCloudApihubV1Documentation'
        deprecated:
          description: >-
            Optional. For OpenAPI spec, this will be set if
            `operation.deprecated`is marked as `true` in the spec.
          type: boolean
    GoogleCloudApihubV1HttpOperation:
      id: GoogleCloudApihubV1HttpOperation
      description: The HTTP Operation.
      type: object
      properties:
        path:
          description: >-
            Optional. The path details for the Operation. Note: Even though this
            field is optional, it is required for CreateApiOperation API and we
            will fail the request if not provided.
          $ref: '#/components/schemas/GoogleCloudApihubV1Path'
        method:
          description: >-
            Optional. Operation method Note: Even though this field is optional,
            it is required for CreateApiOperation API and we will fail the
            request if not provided.
          type: string
          enumDescriptions:
            - Method unspecified.
            - Get Operation type.
            - Put Operation type.
            - Post Operation type.
            - Delete Operation type.
            - Options Operation type.
            - Head Operation type.
            - Patch Operation type.
            - Trace Operation type.
          enum:
            - METHOD_UNSPECIFIED
            - GET
            - PUT
            - POST
            - DELETE
            - OPTIONS
            - HEAD
            - PATCH
            - TRACE
    GoogleCloudApihubV1Path:
      id: GoogleCloudApihubV1Path
      description: The path details derived from the spec.
      type: object
      properties:
        path:
          description: >-
            Optional. Complete path relative to server endpoint. Note: Even
            though this field is optional, it is required for CreateApiOperation
            API and we will fail the request if not provided.
          type: string
        description:
          description: >-
            Optional. A short description for the path applicable to all
            operations.
          type: string
    GoogleCloudApihubV1ListApiOperationsResponse:
      id: GoogleCloudApihubV1ListApiOperationsResponse
      description: The ListApiOperations method's response.
      type: object
      properties:
        apiOperations:
          description: The operations corresponding to an API version.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1ApiOperation'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1Definition:
      id: GoogleCloudApihubV1Definition
      description: >-
        Represents a definition for example schema, request, response
        definitions contained in an API version. A definition is
        added/updated/deleted in an API version when a new spec is added or an
        existing spec is updated/deleted in a version. Currently, definition
        will be created only corresponding to OpenAPI spec as parsing is
        supported for OpenAPI spec. Also, within OpenAPI spec, only `schema`
        object is supported.
      type: object
      properties:
        schema:
          description: Output only. The value of a schema definition.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudApihubV1Schema'
        name:
          description: >-
            Identifier. The name of the definition. Format:
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}/definitions/{definition}`
          type: string
        spec:
          description: >-
            Output only. The name of the spec from where the definition was
            parsed. Format is
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}`
          readOnly: true
          type: string
        type:
          description: Output only. The type of the definition.
          readOnly: true
          type: string
          enumDescriptions:
            - Definition type unspecified.
            - Definition type schema.
          enum:
            - TYPE_UNSPECIFIED
            - SCHEMA
        createTime:
          description: Output only. The time at which the definition was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the definition was last updated.
          readOnly: true
          type: string
          format: google-datetime
        attributes:
          description: >-
            Optional. The list of user defined attributes associated with the
            definition resource. The key is the attribute name. It will be of
            the format:
            `projects/{project}/locations/{location}/attributes/{attribute}`.
            The value is the attribute values associated with the resource.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
    GoogleCloudApihubV1Schema:
      id: GoogleCloudApihubV1Schema
      description: >-
        The schema details derived from the spec. Currently, this entity is
        supported for OpenAPI spec only. For OpenAPI spec, this maps to the
        schema defined in the `definitions` section for OpenAPI 2.0 version and
        in `components.schemas` section for OpenAPI 3.0 and 3.1 version.
      type: object
      properties:
        displayName:
          description: >-
            Output only. The display name of the schema. This will map to the
            name of the schema in the spec.
          readOnly: true
          type: string
        rawValue:
          description: >-
            Output only. The raw value of the schema definition corresponding to
            the schema name in the spec.
          readOnly: true
          type: string
          format: byte
    GoogleCloudApihubV1Deployment:
      id: GoogleCloudApihubV1Deployment
      description: >-
        Details of the deployment where APIs are hosted. A deployment could
        represent an Apigee proxy, API gateway, other Google Cloud services or
        non-Google Cloud services as well. A deployment entity is a root level
        entity in the API hub and exists independent of any API.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the deployment. Format:
            `projects/{project}/locations/{location}/deployments/{deployment}`
          type: string
        displayName:
          description: Required. The display name of the deployment.
          type: string
        description:
          description: Optional. The description of the deployment.
          type: string
        documentation:
          description: Optional. The documentation of the deployment.
          $ref: '#/components/schemas/GoogleCloudApihubV1Documentation'
        deploymentType:
          description: >-
            Required. The type of deployment. This maps to the following system
            defined attribute:
            `projects/{project}/locations/{location}/attributes/system-deployment-type`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        resourceUri:
          description: >-
            Required. The resource URI identifies the deployment within its
            gateway. For Apigee gateways, its recommended to use the format:
            organizations/{org}/environments/{env}/apis/{api}. For ex: if a
            proxy with name `orders` is deployed in `staging` environment of
            `cymbal` organization, the resource URI would be:
            `organizations/cymbal/environments/staging/apis/orders`.
          type: string
        endpoints:
          description: >-
            Required. The endpoints at which this deployment resource is
            listening for API requests. This could be a list of complete URIs,
            hostnames or an IP addresses.
          type: array
          items:
            type: string
        apiVersions:
          description: >-
            Output only. The API versions linked to this deployment. Note: A
            particular deployment could be linked to multiple different API
            versions (of same or different APIs).
          readOnly: true
          type: array
          items:
            type: string
        createTime:
          description: Output only. The time at which the deployment was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the deployment was last updated.
          readOnly: true
          type: string
          format: google-datetime
        slo:
          description: >-
            Optional. The SLO for this deployment. This maps to the following
            system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-slo`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        environment:
          description: >-
            Optional. The environment mapping to this deployment. This maps to
            the following system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-environment`
            attribute. The number of values for this attribute will be based on
            the cardinality of the attribute. The same can be retrieved via
            GetAttribute API. All values should be from the list of allowed
            values defined for the attribute.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        attributes:
          description: >-
            Optional. The list of user defined attributes associated with the
            deployment resource. The key is the attribute name. It will be of
            the format:
            `projects/{project}/locations/{location}/attributes/{attribute}`.
            The value is the attribute values associated with the resource.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        sourceMetadata:
          description: >-
            Output only. The list of sources and metadata from the sources of
            the deployment.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1SourceMetadata'
        managementUrl:
          description: >-
            Optional. The uri where users can navigate to for the management of
            the deployment. This maps to the following system defined attribute:
            `projects/{project}/locations/{location}/attributes/system-management-url`
            The number of values for this attribute will be based on the
            cardinality of the attribute. The same can be retrieved via
            GetAttribute API. The value of the attribute should be a valid URL.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        sourceUri:
          description: >-
            Optional. The uri where additional source specific information for
            this deployment can be found. This maps to the following system
            defined attribute:
            `projects/{project}/locations/{location}/attributes/system-source-uri`
            The number of values for this attribute will be based on the
            cardinality of the attribute. The same can be retrieved via
            GetAttribute API. The value of the attribute should be a valid URI,
            and in case of Cloud Storage URI, it should point to a Cloud Storage
            object, not a directory.
          $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        sourceProject:
          description: >-
            Optional. The project to which the deployment belongs. For GCP
            gateways, this will refer to the project identifier. For others like
            Edge/OPDK, this will refer to the org identifier.
          type: string
        sourceEnvironment:
          description: >-
            Optional. The environment at source for the deployment. For example:
            prod, dev, staging, etc.
          type: string
    GoogleCloudApihubV1ListDeploymentsResponse:
      id: GoogleCloudApihubV1ListDeploymentsResponse
      description: The ListDeployments method's response.
      type: object
      properties:
        deployments:
          description: The deployment resources present in the API hub.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1Deployment'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1Attribute:
      id: GoogleCloudApihubV1Attribute
      description: >-
        An attribute in the API Hub. An attribute is a name value pair which can
        be attached to different resources in the API hub based on the scope of
        the attribute. Attributes can either be pre-defined by the API Hub or
        created by users.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the attribute in the API Hub. Format:
            `projects/{project}/locations/{location}/attributes/{attribute}`
          type: string
        displayName:
          description: Required. The display name of the attribute.
          type: string
        description:
          description: Optional. The description of the attribute.
          type: string
        definitionType:
          description: Output only. The definition type of the attribute.
          readOnly: true
          type: string
          enumDescriptions:
            - Attribute definition type unspecified.
            - >-
              The attribute is predefined by the API Hub. Note that only the
              list of allowed values can be updated in this case via
              UpdateAttribute method.
            - The attribute is defined by the user.
          enum:
            - DEFINITION_TYPE_UNSPECIFIED
            - SYSTEM_DEFINED
            - USER_DEFINED
        scope:
          description: >-
            Required. The scope of the attribute. It represents the resource in
            the API Hub to which the attribute can be linked.
          type: string
          enumDescriptions:
            - Scope Unspecified.
            - Attribute can be linked to an API.
            - Attribute can be linked to an API version.
            - Attribute can be linked to a Spec.
            - Attribute can be linked to an API Operation.
            - Attribute can be linked to a Deployment.
            - Attribute can be linked to a Dependency.
            - Attribute can be linked to a definition.
            - Attribute can be linked to a ExternalAPI.
            - Attribute can be linked to a Plugin.
          enum:
            - SCOPE_UNSPECIFIED
            - API
            - VERSION
            - SPEC
            - API_OPERATION
            - DEPLOYMENT
            - DEPENDENCY
            - DEFINITION
            - EXTERNAL_API
            - PLUGIN
        dataType:
          description: Required. The type of the data of the attribute.
          type: string
          enumDescriptions:
            - Attribute data type unspecified.
            - Attribute's value is of type enum.
            - Attribute's value is of type json.
            - Attribute's value is of type string.
            - Attribute's value is of type uri.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - ENUM
            - JSON
            - STRING
            - URI
        allowedValues:
          description: >-
            Optional. The list of allowed values when the attribute value is of
            type enum. This is required when the data_type of the attribute is
            ENUM. The maximum number of allowed values of an attribute will be
            1000.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1AllowedValue'
        cardinality:
          description: >-
            Optional. The maximum number of values that the attribute can have
            when associated with an API Hub resource. Cardinality 1 would
            represent a single-valued attribute. It must not be less than 1 or
            greater than 20. If not specified, the cardinality would be set to 1
            by default and represent a single-valued attribute.
          type: integer
          format: int32
        mandatory:
          description: >-
            Output only. When mandatory is true, the attribute is mandatory for
            the resource specified in the scope. Only System defined attributes
            can be mandatory.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. The time at which the attribute was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the attribute was last updated.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudApihubV1ListAttributesResponse:
      id: GoogleCloudApihubV1ListAttributesResponse
      description: The ListAttributes method's response.
      type: object
      properties:
        attributes:
          description: The list of all attributes.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1Attribute'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1SearchResourcesRequest:
      id: GoogleCloudApihubV1SearchResourcesRequest
      description: The SearchResources method's request.
      type: object
      properties:
        query:
          description: >-
            Required. The free text search query. This query can contain
            keywords which could be related to any detail of the API-Hub
            resources such display names, descriptions, attributes etc.
          type: string
        filter:
          description: >-
            Optional. An expression that filters the list of search results. A
            filter expression consists of a field name, a comparison operator,
            and a value for filtering. The value must be a string, a number, or
            a boolean. The comparison operator must be `=`. Filters are not case
            sensitive. The following field names are eligible for filtering: *
            `resource_type` - The type of resource in the search results. Must
            be one of the following: `Api`, `ApiOperation`, `Deployment`,
            `Definition`, `Spec` or `Version`. This field can only be specified
            once in the filter. Here are is an example: * `resource_type = Api`
            - The resource_type is _Api_.
          type: string
        pageSize:
          description: >-
            Optional. The maximum number of search results to return. The
            service may return fewer than this value. If unspecified at most 10
            search results will be returned. If value is negative then
            `INVALID_ARGUMENT` error is returned. The maximum value is 25;
            values above 25 will be coerced to 25. While paginating, you can
            specify a new page size parameter for each page of search results to
            be listed.
          type: integer
          format: int32
        pageToken:
          description: >-
            Optional. A page token, received from a previous SearchResources
            call. Specify this parameter to retrieve the next page of
            transactions. When paginating, you must specify the `page_token`
            parameter and all the other parameters except page_size should be
            specified with the same value which was used in the previous call.
            If the other fields are set with a different value than the previous
            call then `INVALID_ARGUMENT` error is returned.
          type: string
    GoogleCloudApihubV1SearchResourcesResponse:
      id: GoogleCloudApihubV1SearchResourcesResponse
      description: Response for the SearchResources method.
      type: object
      properties:
        searchResults:
          description: >-
            List of search results according to the filter and search query
            specified. The order of search results represents the ranking.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1SearchResult'
        nextPageToken:
          description: >-
            Pass this token in the SearchResourcesRequest to continue to list
            results. If all results have been returned, this field is an empty
            string or not present in the response.
          type: string
    GoogleCloudApihubV1SearchResult:
      id: GoogleCloudApihubV1SearchResult
      description: Represents the search results.
      type: object
      properties:
        resource:
          description: >-
            This represents the ApiHubResource. Note: Only selected fields of
            the resources are populated in response.
          $ref: '#/components/schemas/GoogleCloudApihubV1ApiHubResource'
    GoogleCloudApihubV1ApiHubResource:
      id: GoogleCloudApihubV1ApiHubResource
      description: >-
        ApiHubResource is one of the resources such as Api, Operation,
        Deployment, Definition, Spec and Version resources stored in API-Hub.
      type: object
      properties:
        api:
          description: >-
            This represents Api resource in search results. Only name,
            display_name, description and owner fields are populated in search
            results.
          $ref: '#/components/schemas/GoogleCloudApihubV1Api'
        operation:
          description: >-
            This represents ApiOperation resource in search results. Only name,
            description, spec and details fields are populated in search
            results.
          $ref: '#/components/schemas/GoogleCloudApihubV1ApiOperation'
        deployment:
          description: >-
            This represents Deployment resource in search results. Only name,
            display_name, description, deployment_type and api_versions fields
            are populated in search results.
          $ref: '#/components/schemas/GoogleCloudApihubV1Deployment'
        spec:
          description: >-
            This represents Spec resource in search results. Only name,
            display_name, description, spec_type and documentation fields are
            populated in search results.
          $ref: '#/components/schemas/GoogleCloudApihubV1Spec'
        definition:
          description: >-
            This represents Definition resource in search results. Only name
            field is populated in search results.
          $ref: '#/components/schemas/GoogleCloudApihubV1Definition'
        version:
          description: >-
            This represents Version resource in search results. Only name,
            display_name, description, lifecycle, compliance and accreditation
            fields are populated in search results.
          $ref: '#/components/schemas/GoogleCloudApihubV1Version'
    GoogleCloudApihubV1ExternalApi:
      id: GoogleCloudApihubV1ExternalApi
      description: >-
        An external API represents an API being provided by external sources.
        This can be used to model third-party APIs and can be used to define
        dependencies.
      type: object
      properties:
        name:
          description: >-
            Identifier. Format:
            `projects/{project}/locations/{location}/externalApi/{externalApi}`.
          type: string
        displayName:
          description: >-
            Required. Display name of the external API. Max length is 63
            characters (Unicode Code Points).
          type: string
        description:
          description: >-
            Optional. Description of the external API. Max length is 2000
            characters (Unicode Code Points).
          type: string
        endpoints:
          description: Optional. List of endpoints on which this API is accessible.
          type: array
          items:
            type: string
        paths:
          description: Optional. List of paths served by this API.
          type: array
          items:
            type: string
        documentation:
          description: Optional. Documentation of the external API.
          $ref: '#/components/schemas/GoogleCloudApihubV1Documentation'
        attributes:
          description: >-
            Optional. The list of user defined attributes associated with the
            Version resource. The key is the attribute name. It will be of the
            format:
            `projects/{project}/locations/{location}/attributes/{attribute}`.
            The value is the attribute values associated with the resource.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
        createTime:
          description: Output only. Creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update timestamp.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudApihubV1ListExternalApisResponse:
      id: GoogleCloudApihubV1ListExternalApisResponse
      description: The ListExternalApis method's response.
      type: object
      properties:
        externalApis:
          description: The External API resources present in the API hub.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1ExternalApi'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1Dependency:
      id: GoogleCloudApihubV1Dependency
      description: >-
        A dependency resource defined in the API hub describes a dependency
        directed from a consumer to a supplier entity. A dependency can be
        defined between two Operations or between an Operation and External API.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the dependency in the API Hub. Format:
            `projects/{project}/locations/{location}/dependencies/{dependency}`
          type: string
        consumer:
          description: >-
            Required. Immutable. The entity acting as the consumer in the
            dependency.
          $ref: '#/components/schemas/GoogleCloudApihubV1DependencyEntityReference'
        supplier:
          description: >-
            Required. Immutable. The entity acting as the supplier in the
            dependency.
          $ref: '#/components/schemas/GoogleCloudApihubV1DependencyEntityReference'
        state:
          description: Output only. State of the dependency.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              Dependency will be in a proposed state when it is newly identified
              by the API hub on its own.
            - >-
              Dependency will be in a validated state when it is validated by
              the admin or manually created in the API hub.
          enum:
            - STATE_UNSPECIFIED
            - PROPOSED
            - VALIDATED
        description:
          description: >-
            Optional. Human readable description corresponding of the
            dependency.
          type: string
        discoveryMode:
          description: Output only. Discovery mode of the dependency.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              Manual mode of discovery when the dependency is defined by the
              user.
          enum:
            - DISCOVERY_MODE_UNSPECIFIED
            - MANUAL
        errorDetail:
          description: >-
            Output only. Error details of a dependency if the system has
            detected it internally.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudApihubV1DependencyErrorDetail'
        createTime:
          description: Output only. The time at which the dependency was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the dependency was last updated.
          readOnly: true
          type: string
          format: google-datetime
        attributes:
          description: >-
            Optional. The list of user defined attributes associated with the
            dependency resource. The key is the attribute name. It will be of
            the format:
            `projects/{project}/locations/{location}/attributes/{attribute}`.
            The value is the attribute values associated with the resource.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1AttributeValues'
    GoogleCloudApihubV1DependencyEntityReference:
      id: GoogleCloudApihubV1DependencyEntityReference
      description: Reference to an entity participating in a dependency.
      type: object
      properties:
        operationResourceName:
          description: >-
            The resource name of an operation in the API Hub. Format:
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`
          type: string
        externalApiResourceName:
          description: >-
            The resource name of an external API in the API Hub. Format:
            `projects/{project}/locations/{location}/externalApis/{external_api}`
          type: string
        displayName:
          description: Output only. Display name of the entity.
          readOnly: true
          type: string
    GoogleCloudApihubV1DependencyErrorDetail:
      id: GoogleCloudApihubV1DependencyErrorDetail
      description: Details describing error condition of a dependency.
      type: object
      properties:
        error:
          description: Optional. Error in the dependency.
          type: string
          enumDescriptions:
            - Default value used for no error in the dependency.
            - Supplier entity has been deleted.
            - Supplier entity has been recreated.
          enum:
            - ERROR_UNSPECIFIED
            - SUPPLIER_NOT_FOUND
            - SUPPLIER_RECREATED
        errorTime:
          description: Optional. Timestamp at which the error was found.
          type: string
          format: google-datetime
    GoogleCloudApihubV1ListDependenciesResponse:
      id: GoogleCloudApihubV1ListDependenciesResponse
      description: The ListDependencies method's response.
      type: object
      properties:
        dependencies:
          description: The dependency resources present in the API hub.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1Dependency'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1CollectApiDataRequest:
      id: GoogleCloudApihubV1CollectApiDataRequest
      description: The CollectApiData method's request.
      type: object
      properties:
        collectionType:
          description: >-
            Required. The type of collection. Applies to all entries in
            api_data.
          type: string
          enumDescriptions:
            - >-
              The default value. This value is used if the collection type is
              omitted.
            - >-
              The collection type is upsert. This should be used when an API is
              created or updated at the source.
            - >-
              The collection type is delete. This should be used when an API is
              deleted at the source.
          enum:
            - COLLECTION_TYPE_UNSPECIFIED
            - COLLECTION_TYPE_UPSERT
            - COLLECTION_TYPE_DELETE
        pluginInstance:
          description: >-
            Required. The plugin instance collecting the API data. Format:
            `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`.
          type: string
        actionId:
          description: >-
            Required. The action ID to be used for collecting the API data. This
            should map to one of the action IDs specified in action configs in
            the plugin.
          type: string
        apiData:
          description: Required. The API data to be collected.
          $ref: '#/components/schemas/GoogleCloudApihubV1ApiData'
    GoogleCloudApihubV1ApiData:
      id: GoogleCloudApihubV1ApiData
      description: The API data to be collected.
      type: object
      properties:
        apiMetadataList:
          description: Optional. The list of API metadata.
          $ref: '#/components/schemas/GoogleCloudApihubV1ApiMetadataList'
    GoogleCloudApihubV1ApiMetadataList:
      id: GoogleCloudApihubV1ApiMetadataList
      description: The message to hold repeated API metadata.
      type: object
      properties:
        apiMetadata:
          description: Required. The list of API metadata.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1APIMetadata'
    GoogleCloudApihubV1APIMetadata:
      id: GoogleCloudApihubV1APIMetadata
      description: The API metadata.
      type: object
      properties:
        api:
          description: >-
            Required. The API resource to be pushed to Hub's collect layer. The
            ID of the API resource will be generated by Hub to ensure uniqueness
            across all APIs across systems.
          $ref: '#/components/schemas/GoogleCloudApihubV1Api'
        versions:
          description: Optional. The list of versions present in an API resource.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1VersionMetadata'
        originalId:
          description: >-
            Optional. The unique identifier of the API in the system where it
            was originally created.
          type: string
        originalCreateTime:
          description: >-
            Optional. Timestamp indicating when the API was created at the
            source.
          type: string
          format: google-datetime
        originalUpdateTime:
          description: >-
            Required. Timestamp indicating when the API was last updated at the
            source.
          type: string
          format: google-datetime
    GoogleCloudApihubV1VersionMetadata:
      id: GoogleCloudApihubV1VersionMetadata
      description: The metadata associated with a version of the API resource.
      type: object
      properties:
        version:
          description: >-
            Required. Represents a version of the API resource in API hub. The
            ID of the version will be generated by Hub.
          $ref: '#/components/schemas/GoogleCloudApihubV1Version'
        specs:
          description: >-
            Optional. The specs associated with this version. Note that an API
            version can be associated with multiple specs.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1SpecMetadata'
        deployments:
          description: >-
            Optional. The deployments linked to this API version. Note: A
            particular API version could be deployed to multiple deployments
            (for dev deployment, UAT deployment, etc.)
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1DeploymentMetadata'
        originalId:
          description: >-
            Optional. The unique identifier of the version in the system where
            it was originally created.
          type: string
        originalCreateTime:
          description: >-
            Optional. Timestamp indicating when the version was created at the
            source.
          type: string
          format: google-datetime
        originalUpdateTime:
          description: >-
            Required. Timestamp indicating when the version was last updated at
            the source.
          type: string
          format: google-datetime
    GoogleCloudApihubV1SpecMetadata:
      id: GoogleCloudApihubV1SpecMetadata
      description: The metadata associated with a spec of the API version.
      type: object
      properties:
        spec:
          description: >-
            Required. The spec resource to be pushed to Hub's collect layer. The
            ID of the spec will be generated by Hub.
          $ref: '#/components/schemas/GoogleCloudApihubV1Spec'
        originalId:
          description: >-
            Optional. The unique identifier of the spec in the system where it
            was originally created.
          type: string
        originalCreateTime:
          description: >-
            Optional. Timestamp indicating when the spec was created at the
            source.
          type: string
          format: google-datetime
        originalUpdateTime:
          description: >-
            Required. Timestamp indicating when the spec was last updated at the
            source.
          type: string
          format: google-datetime
    GoogleCloudApihubV1DeploymentMetadata:
      id: GoogleCloudApihubV1DeploymentMetadata
      description: The metadata associated with a deployment.
      type: object
      properties:
        deployment:
          description: >-
            Required. The deployment resource to be pushed to Hub's collect
            layer. The ID of the deployment will be generated by Hub.
          $ref: '#/components/schemas/GoogleCloudApihubV1Deployment'
        originalId:
          description: >-
            Optional. The unique identifier of the deployment in the system
            where it was originally created.
          type: string
        originalCreateTime:
          description: >-
            Optional. Timestamp indicating when the deployment was created at
            the source.
          type: string
          format: google-datetime
        originalUpdateTime:
          description: >-
            Required. Timestamp indicating when the deployment was last updated
            at the source.
          type: string
          format: google-datetime
    GoogleCloudApihubV1Curation:
      id: GoogleCloudApihubV1Curation
      description: A curation resource in the API Hub.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the curation. Format:
            `projects/{project}/locations/{location}/curations/{curation}`
          type: string
        displayName:
          description: Required. The display name of the curation.
          type: string
        description:
          description: Optional. The description of the curation.
          type: string
        endpoint:
          description: Required. The endpoint to be triggered for curation.
          $ref: '#/components/schemas/GoogleCloudApihubV1Endpoint'
        pluginInstanceActions:
          description: >-
            Output only. The plugin instances and associated actions that are
            using the curation. Note: A particular curation could be used by
            multiple plugin instances or multiple actions in a plugin instance.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1PluginInstanceActionID'
        lastExecutionState:
          description: Output only. The last execution state of the curation.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified state.
            - The last curation execution was successful.
            - The last curation execution failed.
          enum:
            - LAST_EXECUTION_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
        lastExecutionErrorCode:
          description: >-
            Output only. The error code of the last execution of the curation.
            The error code is populated only when the last execution state is
            failed.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified error code.
            - The execution failed due to an internal error.
            - The curation is not authorized to trigger the endpoint uri.
          enum:
            - ERROR_CODE_UNSPECIFIED
            - INTERNAL_ERROR
            - UNAUTHORIZED
        lastExecutionErrorMessage:
          description: >-
            Output only. Error message describing the failure, if any, during
            the last execution of the curation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time at which the curation was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the curation was last updated.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudApihubV1Endpoint:
      id: GoogleCloudApihubV1Endpoint
      description: >-
        The endpoint to be triggered for curation. The endpoint will be invoked
        with a request payload containing ApiMetadata. Response should contain
        curated data in the form of ApiMetadata.
      type: object
      properties:
        applicationIntegrationEndpointDetails:
          description: >-
            Required. The details of the Application Integration endpoint to be
            triggered for curation.
          $ref: >-
            #/components/schemas/GoogleCloudApihubV1ApplicationIntegrationEndpointDetails
    GoogleCloudApihubV1ApplicationIntegrationEndpointDetails:
      id: GoogleCloudApihubV1ApplicationIntegrationEndpointDetails
      description: >-
        The details of the Application Integration endpoint to be triggered for
        curation.
      type: object
      properties:
        uri:
          description: >-
            Required. The endpoint URI should be a valid REST URI for triggering
            an Application Integration. Format:
            `https://integrations.googleapis.com/v1/{name=projects/*/locations/*/integrations/*}:execute`
            or
            `https://{location}-integrations.googleapis.com/v1/{name=projects/*/locations/*/integrations/*}:execute`
          type: string
        triggerId:
          description: >-
            Required. The API trigger ID of the Application Integration
            workflow.
          type: string
    GoogleCloudApihubV1PluginInstanceActionID:
      id: GoogleCloudApihubV1PluginInstanceActionID
      description: The plugin instance and associated action that is using the curation.
      type: object
      properties:
        pluginInstance:
          description: >-
            Output only. Plugin instance that is using the curation. Format is
            `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`
          readOnly: true
          type: string
        actionId:
          description: >-
            Output only. The action ID that is using the curation. This should
            map to one of the action IDs specified in action configs in the
            plugin.
          readOnly: true
          type: string
    GoogleCloudApihubV1ListCurationsResponse:
      id: GoogleCloudApihubV1ListCurationsResponse
      description: The ListCurations method's response.
      type: object
      properties:
        curations:
          description: The curation resources present in the API hub.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1Curation'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1ListDiscoveredApiObservationsResponse:
      id: GoogleCloudApihubV1ListDiscoveredApiObservationsResponse
      description: Message for response to listing DiscoveredApiObservations
      type: object
      properties:
        discoveredApiObservations:
          description: >-
            The DiscoveredApiObservation from the specified project and
            location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1DiscoveredApiObservation'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1DiscoveredApiObservation:
      id: GoogleCloudApihubV1DiscoveredApiObservation
      description: Respresents an API Observation observed in one of the sources.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the discovered API Observation. Format:
            `projects/{project}/locations/{location}/discoveredApiObservations/{discovered_api_observation}`
          type: string
        style:
          description: Optional. Style of ApiObservation
          type: string
          enumDescriptions:
            - Unknown style
            - Style is Rest API
            - Style is Grpc API
            - Style is GraphQL API
          enum:
            - STYLE_UNSPECIFIED
            - REST
            - GRPC
            - GRAPHQL
        serverIps:
          description: >-
            Optional. The IP address (IPv4 or IPv6) of the origin server that
            the request was sent to. This field can include port information.
            Examples: `"192.168.1.1"`, `"10.0.0.1:80"`,
            `"FE80::0202:B3FF:FE1E:8329"`.
          type: array
          items:
            type: string
        hostname:
          description: Optional. The hostname of requests processed for this Observation.
          type: string
        lastEventDetectedTime:
          description: Optional. Last event detected time stamp
          type: string
          format: google-datetime
        sourceLocations:
          description: Optional. The location of the observation source.
          type: array
          items:
            type: string
        apiOperationCount:
          description: Optional. The number of observed API Operations.
          type: string
          format: int64
        origin:
          description: >-
            Optional. For an observation pushed from a gcp resource, this would
            be the gcp project id.
          type: string
        sourceTypes:
          description: >-
            Optional. The type of the source from which the observation was
            collected.
          type: array
          items:
            type: string
            enumDescriptions:
              - Source type not specified.
              - GCP external load balancer.
              - GCP internal load balancer.
            enum:
              - SOURCE_TYPE_UNSPECIFIED
              - GCP_XLB
              - GCP_ILB
        knownOperationsCount:
          description: Output only. The number of known API Operations.
          readOnly: true
          type: string
          format: int64
        unknownOperationsCount:
          description: Output only. The number of unknown API Operations.
          readOnly: true
          type: string
          format: int64
        createTime:
          description: Output only. Create time stamp of the observation in API Hub.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update time stamp of the observation in API Hub.
          readOnly: true
          type: string
          format: google-datetime
        sourceMetadata:
          description: >-
            Output only. The metadata of the source from which the observation
            was collected.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudApihubV1SourceMetadata'
    GoogleCloudApihubV1ListDiscoveredApiOperationsResponse:
      id: GoogleCloudApihubV1ListDiscoveredApiOperationsResponse
      description: Message for response to listing DiscoveredApiOperations
      type: object
      properties:
        discoveredApiOperations:
          description: >-
            The DiscoveredApiOperations from the specified project, location and
            DiscoveredApiObservation.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1DiscoveredApiOperation'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1DiscoveredApiOperation:
      id: GoogleCloudApihubV1DiscoveredApiOperation
      description: >-
        DiscoveredApiOperation represents an API Operation observed in one of
        the sources.
      type: object
      properties:
        httpOperation:
          description: Optional. An HTTP Operation.
          $ref: '#/components/schemas/GoogleCloudApihubV1HttpOperationDetails'
        name:
          description: >-
            Identifier. The name of the discovered API Operation. Format:
            `projects/{project}/locations/{location}/discoveredApiObservations/{discovered_api_observation}/discoveredApiOperations/{discovered_api_operation}`
          type: string
        firstSeenTime:
          description: Optional. First seen time stamp
          type: string
          format: google-datetime
        lastSeenTime:
          description: Optional. Last seen time stamp
          type: string
          format: google-datetime
        count:
          description: Optional. The number of occurrences of this API Operation.
          type: string
          format: int64
        classification:
          description: Output only. The classification of the discovered API operation.
          readOnly: true
          type: string
          enumDescriptions:
            - Operation is not classified as known or unknown.
            - Operation has a matched catalog operation.
            - Operation does not have a matched catalog operation.
          enum:
            - CLASSIFICATION_UNSPECIFIED
            - KNOWN
            - UNKNOWN
        matchResults:
          description: >-
            Output only. The list of matched results for the discovered API
            operation. This will be populated only if the classification is
            known. The current usecase is for a single match. Keeping it
            repeated to support multiple matches in future.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1MatchResult'
        sourceMetadata:
          description: >-
            Output only. The metadata of the source from which the api operation
            was collected.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudApihubV1SourceMetadata'
        createTime:
          description: >-
            Output only. Create time stamp of the discovered API operation in
            API Hub.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. Update time stamp of the discovered API operation in
            API Hub.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudApihubV1HttpOperationDetails:
      id: GoogleCloudApihubV1HttpOperationDetails
      description: An HTTP-based API Operation, sometimes called a "REST" Operation.
      type: object
      properties:
        httpOperation:
          description: Required. An HTTP Operation.
          $ref: '#/components/schemas/GoogleCloudApihubV1HttpOperation'
        pathParams:
          description: Optional. Path params of HttpOperation
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1PathParam'
        queryParams:
          description: Optional. Query params of HttpOperation
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1QueryParam'
        request:
          description: Optional. Request metadata.
          $ref: '#/components/schemas/GoogleCloudApihubV1HttpRequest'
        response:
          description: Optional. Response metadata.
          $ref: '#/components/schemas/GoogleCloudApihubV1HttpResponse'
    GoogleCloudApihubV1PathParam:
      id: GoogleCloudApihubV1PathParam
      description: HTTP Path parameter.
      type: object
      properties:
        position:
          description: Optional. Segment location in the path, 1-indexed
          type: integer
          format: int32
        dataType:
          description: Optional. Data type of path param
          type: string
          enumDescriptions:
            - Unspecified data type
            - Boolean data type
            - Integer data type
            - Float data type
            - String data type
            - UUID data type
          enum:
            - DATA_TYPE_UNSPECIFIED
            - BOOL
            - INTEGER
            - FLOAT
            - STRING
            - UUID
    GoogleCloudApihubV1QueryParam:
      id: GoogleCloudApihubV1QueryParam
      description: An aggregation of HTTP query parameter occurrences.
      type: object
      properties:
        name:
          description: Required. Name of query param
          type: string
        count:
          description: >-
            Optional. The number of occurrences of this query parameter across
            transactions.
          type: string
          format: int64
        dataType:
          description: Optional. Data type of path param
          type: string
          enumDescriptions:
            - Unspecified data type
            - Boolean data type
            - Integer data type
            - Float data type
            - String data type
            - UUID data type
          enum:
            - DATA_TYPE_UNSPECIFIED
            - BOOL
            - INTEGER
            - FLOAT
            - STRING
            - UUID
    GoogleCloudApihubV1HttpRequest:
      id: GoogleCloudApihubV1HttpRequest
      description: An aggregation of HTTP requests.
      type: object
      properties:
        headers:
          description: Optional. Unordered map from header name to header metadata
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1Header'
    GoogleCloudApihubV1Header:
      id: GoogleCloudApihubV1Header
      description: An aggregation of HTTP header occurrences.
      type: object
      properties:
        name:
          description: Header name.
          type: string
        count:
          description: The number of occurrences of this Header across transactions.
          type: string
          format: int64
        dataType:
          description: Data type of header
          type: string
          enumDescriptions:
            - Unspecified data type
            - Boolean data type
            - Integer data type
            - Float data type
            - String data type
            - UUID data type
          enum:
            - DATA_TYPE_UNSPECIFIED
            - BOOL
            - INTEGER
            - FLOAT
            - STRING
            - UUID
    GoogleCloudApihubV1HttpResponse:
      id: GoogleCloudApihubV1HttpResponse
      description: An aggregation of HTTP responses.
      type: object
      properties:
        headers:
          description: Optional. Unordered map from header name to header metadata
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudApihubV1Header'
        responseCodes:
          description: Optional. Map of status code to observed count
          type: object
          additionalProperties:
            type: string
            format: int64
    GoogleCloudApihubV1MatchResult:
      id: GoogleCloudApihubV1MatchResult
      description: >-
        MatchResult represents the result of matching a discovered API operation
        with a catalog API operation.
      type: object
      properties:
        name:
          description: >-
            Output only. The name of the matched API Operation. Format:
            `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`
          readOnly: true
          type: string
    GoogleCloudApihubV1HostProjectRegistration:
      id: GoogleCloudApihubV1HostProjectRegistration
      description: >-
        Host project registration refers to the registration of a Google cloud
        project with Api Hub as a host project. This is the project where Api
        Hub is provisioned. It acts as the consumer project for the Api Hub
        instance provisioned. Multiple runtime projects can be attached to the
        host project and these attachments define the scope of Api Hub.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the host project registration. Format:
            "projects/{project}/locations/{location}/hostProjectRegistrations/{host_project_registration}".
          type: string
        gcpProject:
          description: >-
            Required. Immutable. Google cloud project name in the format:
            "projects/abc" or "projects/123". As input, project name with either
            project id or number are accepted. As output, this field will
            contain project number.
          type: string
        createTime:
          description: >-
            Output only. The time at which the host project registration was
            created.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudApihubV1ListHostProjectRegistrationsResponse:
      id: GoogleCloudApihubV1ListHostProjectRegistrationsResponse
      description: The ListHostProjectRegistrations method's response.
      type: object
      properties:
        hostProjectRegistrations:
          description: The list of host project registrations.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1HostProjectRegistration'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1StyleGuide:
      id: GoogleCloudApihubV1StyleGuide
      description: >-
        Represents a singleton style guide resource to be used for linting Open
        API specs.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the style guide. Format:
            `projects/{project}/locations/{location}/plugins/{plugin}/styleGuide`
          type: string
        linter:
          description: Required. Target linter for the style guide.
          type: string
          enumDescriptions:
            - Linter type unspecified.
            - Linter type spectral.
            - Linter type other.
          enum:
            - LINTER_UNSPECIFIED
            - SPECTRAL
            - OTHER
        contents:
          description: Required. Input only. The contents of the uploaded style guide.
          $ref: '#/components/schemas/GoogleCloudApihubV1StyleGuideContents'
    GoogleCloudApihubV1StyleGuideContents:
      id: GoogleCloudApihubV1StyleGuideContents
      description: The style guide contents.
      type: object
      properties:
        contents:
          description: Required. The contents of the style guide.
          type: string
          format: byte
        mimeType:
          description: Required. The mime type of the content.
          type: string
    GoogleCloudApihubV1LintSpecRequest:
      id: GoogleCloudApihubV1LintSpecRequest
      description: The LintSpec method's request.
      type: object
      properties: {}
    GoogleCloudApihubV1ApiHubInstance:
      id: GoogleCloudApihubV1ApiHubInstance
      description: >-
        An ApiHubInstance represents the instance resources of the API Hub.
        Currently, only one ApiHub instance is allowed for each project.
      type: object
      properties:
        name:
          description: >-
            Identifier. Format:
            `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
          type: string
        createTime:
          description: Output only. Creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update timestamp.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The current state of the ApiHub instance.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - The ApiHub instance has not been initialized or has been deleted.
            - The ApiHub instance is being created.
            - The ApiHub instance has been created and is ready for use.
            - The ApiHub instance is being updated.
            - The ApiHub instance is being deleted.
            - The ApiHub instance encountered an error during a state change.
          enum:
            - STATE_UNSPECIFIED
            - INACTIVE
            - CREATING
            - ACTIVE
            - UPDATING
            - DELETING
            - FAILED
        stateMessage:
          description: >-
            Output only. Extra information about ApiHub instance state.
            Currently the message would be populated when state is `FAILED`.
          readOnly: true
          type: string
        config:
          description: Required. Config of the ApiHub instance.
          $ref: '#/components/schemas/GoogleCloudApihubV1Config'
        labels:
          description: >-
            Optional. Instance labels to represent user-provided metadata. Refer
            to cloud documentation on labels for more details.
            https://cloud.google.com/compute/docs/labeling-resources
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. Description of the ApiHub instance.
          type: string
    GoogleCloudApihubV1Config:
      id: GoogleCloudApihubV1Config
      description: Available configurations to provision an ApiHub Instance.
      type: object
      properties:
        cmekKeyName:
          description: >-
            Optional. The Customer Managed Encryption Key (CMEK) used for data
            encryption. The CMEK name should follow the format of
            `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
            where the location must match the instance location. If the CMEK is
            not provided, a GMEK will be created for the instance.
          type: string
        disableSearch:
          description: >-
            Optional. If true, the search will be disabled for the instance. The
            default value is false.
          type: boolean
        vertexLocation:
          description: >-
            Optional. The name of the Vertex AI location where the data store is
            stored.
          type: string
        encryptionType:
          description: >-
            Optional. Encryption type for the region. If the encryption type is
            CMEK, the cmek_key_name must be provided. If no encryption type is
            provided, GMEK will be used.
          type: string
          enumDescriptions:
            - Encryption type unspecified.
            - Default encryption using Google managed encryption key.
            - Encryption using customer managed encryption key.
          enum:
            - ENCRYPTION_TYPE_UNSPECIFIED
            - GMEK
            - CMEK
    GoogleCloudApihubV1LookupApiHubInstanceResponse:
      id: GoogleCloudApihubV1LookupApiHubInstanceResponse
      description: The LookupApiHubInstance method's response.`
      type: object
      properties:
        apiHubInstance:
          description: API Hub instance for a project if it exists, empty otherwise.
          $ref: '#/components/schemas/GoogleCloudApihubV1ApiHubInstance'
    GoogleCloudApihubV1RuntimeProjectAttachment:
      id: GoogleCloudApihubV1RuntimeProjectAttachment
      description: >-
        Runtime project attachment represents an attachment from the runtime
        project to the host project. Api Hub looks for deployments in the
        attached runtime projects and creates corresponding resources in Api Hub
        for the discovered deployments.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of a runtime project attachment.
            Format:
            "projects/{project}/locations/{location}/runtimeProjectAttachments/{runtime_project_attachment}".
          type: string
        runtimeProject:
          description: >-
            Required. Immutable. Google cloud project name in the format:
            "projects/abc" or "projects/123". As input, project name with either
            project id or number are accepted. As output, this field will
            contain project number.
          type: string
        createTime:
          description: Output only. Create time.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudApihubV1ListRuntimeProjectAttachmentsResponse:
      id: GoogleCloudApihubV1ListRuntimeProjectAttachmentsResponse
      description: The ListRuntimeProjectAttachments method's response.
      type: object
      properties:
        runtimeProjectAttachments:
          description: List of runtime project attachments.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudApihubV1RuntimeProjectAttachment'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudApihubV1LookupRuntimeProjectAttachmentResponse:
      id: GoogleCloudApihubV1LookupRuntimeProjectAttachmentResponse
      description: The ListRuntimeProjectAttachments method's response.
      type: object
      properties:
        runtimeProjectAttachment:
          description: Runtime project attachment for a project if exists, empty otherwise.
          $ref: '#/components/schemas/GoogleCloudApihubV1RuntimeProjectAttachment'
    GoogleCloudLocationListLocationsResponse:
      id: GoogleCloudLocationListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleCloudLocationLocation:
      id: GoogleCloudLocationLocation
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleCloudCommonOperationMetadata:
      id: GoogleCloudCommonOperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        cancelRequested:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have google.longrunning.Operation.error value with a
            google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    GoogleCloudApihubV1OperationMetadata:
      id: GoogleCloudApihubV1OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.apihub.locations
      name: locations
      title: Locations
      methods:
        search_resources:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:searchResources/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        collect_api_data:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:collectApiData/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lookup_runtime_project_attachment:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:lookupRuntimeProjectAttachment/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.apihub.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.apiOperations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1operations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1operations~1{operationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/operations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/operations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    plugins:
      id: google.apihub.plugins
      name: plugins
      title: Plugins
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}:enable/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}:disable/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.plugins
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/plugins/methods/get'
          - $ref: '#/components/x-stackQL-resources/plugins/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/plugins/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/plugins/methods/delete'
    plugins_style_guide:
      id: google.apihub.plugins_style_guide
      name: plugins_style_guide
      title: Plugins_style_guide
      methods:
        get_style_guide:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1styleGuide/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_style_guide:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1styleGuide/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/plugins_style_guide/methods/get_style_guide
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/plugins_style_guide/methods/update_style_guide
        replace: []
        delete: []
    instances:
      id: google.apihub.instances
      name: instances
      title: Instances
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1instances/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1instances/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.pluginInstances
        execute_action:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1instances~1{instancesId}:executeAction/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1instances~1{instancesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1instances~1{instancesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1instances~1{instancesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable_action:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1instances~1{instancesId}:enableAction/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable_action:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1instances~1{instancesId}:disableAction/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/instances/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    style_guide_contents:
      id: google.apihub.style_guide_contents
      name: style_guide_contents
      title: Style_guide_contents
      methods:
        get_contents:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1plugins~1{pluginsId}~1styleGuide:contents/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/style_guide_contents/methods/get_contents
        insert: []
        update: []
        replace: []
        delete: []
    apis:
      id: google.apihub.apis
      name: apis
      title: Apis
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.apis
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/apis/methods/get'
          - $ref: '#/components/x-stackQL-resources/apis/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/apis/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/apis/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/apis/methods/delete'
    versions:
      id: google.apihub.versions
      name: versions
      title: Versions
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.versions
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/versions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/versions/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/versions/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/versions/methods/delete'
    specs:
      id: google.apihub.specs
      name: specs
      title: Specs
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1specs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1specs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.specs
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1specs~1{specsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1specs~1{specsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1specs~1{specsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lint:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1specs~1{specsId}:lint/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/specs/methods/get'
          - $ref: '#/components/x-stackQL-resources/specs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/specs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/specs/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/specs/methods/delete'
    specs_contents:
      id: google.apihub.specs_contents
      name: specs_contents
      title: Specs_contents
      methods:
        get_contents:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1specs~1{specsId}:contents/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/specs_contents/methods/get_contents
        insert: []
        update: []
        replace: []
        delete: []
    definitions:
      id: google.apihub.definitions
      name: definitions
      title: Definitions
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apis~1{apisId}~1versions~1{versionsId}~1definitions~1{definitionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/definitions/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    deployments:
      id: google.apihub.deployments
      name: deployments
      title: Deployments
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployments
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployments~1{deploymentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployments~1{deploymentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1deployments~1{deploymentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/delete'
    attributes:
      id: google.apihub.attributes
      name: attributes
      title: Attributes
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1attributes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1attributes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.attributes
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1attributes~1{attributesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1attributes~1{attributesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1attributes~1{attributesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attributes/methods/get'
          - $ref: '#/components/x-stackQL-resources/attributes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/attributes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/attributes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/attributes/methods/delete'
    external_apis:
      id: google.apihub.external_apis
      name: external_apis
      title: External_apis
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1externalApis/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1externalApis/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.externalApis
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1externalApis~1{externalApisId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1externalApis~1{externalApisId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1externalApis~1{externalApisId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/external_apis/methods/get'
          - $ref: '#/components/x-stackQL-resources/external_apis/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/external_apis/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/external_apis/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/external_apis/methods/delete'
    dependencies:
      id: google.apihub.dependencies
      name: dependencies
      title: Dependencies
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dependencies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dependencies/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dependencies
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dependencies~1{dependenciesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dependencies~1{dependenciesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dependencies~1{dependenciesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dependencies/methods/get'
          - $ref: '#/components/x-stackQL-resources/dependencies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dependencies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/dependencies/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dependencies/methods/delete'
    curations:
      id: google.apihub.curations
      name: curations
      title: Curations
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1curations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1curations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.curations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1curations~1{curationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1curations~1{curationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1curations~1{curationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/curations/methods/get'
          - $ref: '#/components/x-stackQL-resources/curations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/curations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/curations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/curations/methods/delete'
    discovered_api_observations:
      id: google.apihub.discovered_api_observations
      name: discovered_api_observations
      title: Discovered_api_observations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveredApiObservations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.discoveredApiObservations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveredApiObservations~1{discoveredApiObservationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/discovered_api_observations/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/discovered_api_observations/methods/list
        insert: []
        update: []
        replace: []
        delete: []
    discovered_api_operations:
      id: google.apihub.discovered_api_operations
      name: discovered_api_operations
      title: Discovered_api_operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveredApiObservations~1{discoveredApiObservationsId}~1discoveredApiOperations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.discoveredApiOperations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveredApiObservations~1{discoveredApiObservationsId}~1discoveredApiOperations~1{discoveredApiOperationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/discovered_api_operations/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/discovered_api_operations/methods/list
        insert: []
        update: []
        replace: []
        delete: []
    host_project_registrations:
      id: google.apihub.host_project_registrations
      name: host_project_registrations
      title: Host_project_registrations
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hostProjectRegistrations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hostProjectRegistrations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.hostProjectRegistrations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1hostProjectRegistrations~1{hostProjectRegistrationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/host_project_registrations/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/host_project_registrations/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/host_project_registrations/methods/create
        update: []
        replace: []
        delete: []
    api_hub_instances:
      id: google.apihub.api_hub_instances
      name: api_hub_instances
      title: Api_hub_instances
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apiHubInstances/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apiHubInstances~1{apiHubInstancesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apiHubInstances~1{apiHubInstancesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lookup:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1apiHubInstances:lookup/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/api_hub_instances/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/api_hub_instances/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/api_hub_instances/methods/delete'
    runtime_project_attachments:
      id: google.apihub.runtime_project_attachments
      name: runtime_project_attachments
      title: Runtime_project_attachments
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimeProjectAttachments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimeProjectAttachments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.runtimeProjectAttachments
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimeProjectAttachments~1{runtimeProjectAttachmentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimeProjectAttachments~1{runtimeProjectAttachmentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/runtime_project_attachments/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/runtime_project_attachments/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/runtime_project_attachments/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/runtime_project_attachments/methods/delete
paths:
  /v1/projects/{projectsId}/locations/{locationsId}:searchResources:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Search across API-Hub resources.
      operationId: apihub.projects.locations.searchResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1SearchResourcesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1SearchResourcesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:collectApiData:
    parameters: *ref_1
    post:
      description: Collect API data from a source and push it to Hub's collect layer.
      operationId: apihub.projects.locations.collectApiData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1CollectApiDataRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:lookupRuntimeProjectAttachment:
    parameters: *ref_1
    get:
      description: >-
        Look up a runtime project attachment. This API can be called in the
        context of any project.
      operationId: apihub.projects.locations.lookupRuntimeProjectAttachment
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1LookupRuntimeProjectAttachmentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: apihub.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: apihub.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: apihub.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: apihub.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: apihub.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: apihub.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/plugins/{pluginsId}:
    parameters: *ref_1
    get:
      description: Get an API Hub plugin.
      operationId: apihub.projects.locations.plugins.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Plugin'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Delete a Plugin in API hub. Note, only user owned plugins can be deleted
        via this method.
      operationId: apihub.projects.locations.plugins.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/plugins/{pluginsId}:enable:
    parameters: *ref_1
    post:
      description: Enables a plugin. The `state` of the plugin after enabling is `ENABLED`
      operationId: apihub.projects.locations.plugins.enable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1EnablePluginRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Plugin'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/plugins/{pluginsId}:disable:
    parameters: *ref_1
    post:
      description: >-
        Disables a plugin. The `state` of the plugin after disabling is
        `DISABLED`
      operationId: apihub.projects.locations.plugins.disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1DisablePluginRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Plugin'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/plugins:
    parameters: *ref_1
    post:
      description: >-
        Create an API Hub plugin resource in the API hub. Once a plugin is
        created, it can be used to create plugin instances.
      operationId: apihub.projects.locations.plugins.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Plugin'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Plugin'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pluginId
          schema:
            type: string
    get:
      description: List all the plugins in a given project and location.
      operationId: apihub.projects.locations.plugins.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ListPluginsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/plugins/{pluginsId}/styleGuide:
    parameters: *ref_1
    get:
      description: Get the style guide being used for linting.
      operationId: apihub.projects.locations.plugins.getStyleGuide
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1StyleGuide'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
    patch:
      description: Update the styleGuide to be used for liniting in by API hub.
      operationId: apihub.projects.locations.plugins.updateStyleGuide
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1StyleGuide'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1StyleGuide'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/plugins/{pluginsId}/instances:
    parameters: *ref_1
    post:
      description: Creates a Plugin instance in the API hub.
      operationId: apihub.projects.locations.plugins.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1PluginInstance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
        - in: query
          name: pluginInstanceId
          schema:
            type: string
    get:
      description: >-
        List all the plugins in a given project and location. `-` can be used as
        wildcard value for {plugin_id}
      operationId: apihub.projects.locations.plugins.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1ListPluginInstancesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/plugins/{pluginsId}/instances/{instancesId}:executeAction:
    parameters: *ref_1
    post:
      description: Executes a plugin instance in the API hub.
      operationId: apihub.projects.locations.plugins.instances.executeAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudApihubV1ExecutePluginInstanceActionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/plugins/{pluginsId}/instances/{instancesId}:
    parameters: *ref_1
    get:
      description: Get an API Hub plugin instance.
      operationId: apihub.projects.locations.plugins.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1PluginInstance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a plugin instance in the API hub. The following fields in the
        plugin_instance can be updated currently: * display_name *
        schedule_cron_expression The update_mask should be used to specify the
        fields being updated. To update the auth_config and additional_config of
        the plugin instance, use the ApplyPluginInstanceConfig method.
      operationId: apihub.projects.locations.plugins.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1PluginInstance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1PluginInstance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a plugin instance in the API hub.
      operationId: apihub.projects.locations.plugins.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/plugins/{pluginsId}/instances/{instancesId}:enableAction:
    parameters: *ref_1
    post:
      description: Enables a plugin instance in the API hub.
      operationId: apihub.projects.locations.plugins.instances.enableAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudApihubV1EnablePluginInstanceActionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/plugins/{pluginsId}/instances/{instancesId}:disableAction:
    parameters: *ref_1
    post:
      description: Disables a plugin instance in the API hub.
      operationId: apihub.projects.locations.plugins.instances.disableAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudApihubV1DisablePluginInstanceActionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/plugins/{pluginsId}/styleGuide:contents:
    parameters: *ref_1
    get:
      description: Get the contents of the style guide.
      operationId: apihub.projects.locations.plugins.styleGuide.getContents
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1StyleGuideContents'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pluginsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apis:
    parameters: *ref_1
    post:
      description: >-
        Create an API resource in the API hub. Once an API resource is created,
        versions can be added to it.
      operationId: apihub.projects.locations.apis.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Api'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Api'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: apiId
          schema:
            type: string
    get:
      description: List API resources in the API hub.
      operationId: apihub.projects.locations.apis.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ListApisResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}:
    parameters: *ref_1
    get:
      description: Get API resource details including the API versions contained in it.
      operationId: apihub.projects.locations.apis.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Api'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update an API resource in the API hub. The following fields in the API
        can be updated: * display_name * description * owner * documentation *
        target_user * team * business_unit * maturity_level * api_style *
        attributes The update_mask should be used to specify the fields being
        updated. Updating the owner field requires complete owner message and
        updates both owner and email fields.
      operationId: apihub.projects.locations.apis.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Api'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Api'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Delete an API resource in the API hub. API can only be deleted if all
        underlying versions are deleted.
      operationId: apihub.projects.locations.apis.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions:
    parameters: *ref_1
    post:
      description: Create an API version for an API resource in the API hub.
      operationId: apihub.projects.locations.apis.versions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Version'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Version'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: query
          name: versionId
          schema:
            type: string
    get:
      description: List API versions of an API resource in the API hub.
      operationId: apihub.projects.locations.apis.versions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ListVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}:
    parameters: *ref_1
    get:
      description: >-
        Get details about the API version of an API resource. This will include
        information about the specs and operations present in the API version as
        well as the deployments linked to it.
      operationId: apihub.projects.locations.apis.versions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Version'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update API version. The following fields in the version can be updated
        currently: * display_name * description * documentation * deployments *
        lifecycle * compliance * accreditation * attributes The update_mask
        should be used to specify the fields being updated.
      operationId: apihub.projects.locations.apis.versions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Version'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Version'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Delete an API version. Version can only be deleted if all underlying
        specs, operations, definitions and linked deployments are deleted.
      operationId: apihub.projects.locations.apis.versions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs:
    parameters: *ref_1
    post:
      description: >-
        Add a spec to an API version in the API hub. Multiple specs can be added
        to an API version. Note, while adding a spec, at least one of `contents`
        or `source_uri` must be provided. If `contents` is provided, then
        `spec_type` must also be provided. On adding a spec with contents to the
        version, the operations present in it will be added to the version.Note
        that the file contents in the spec should be of the same type as defined
        in the
        `projects/{project}/locations/{location}/attributes/system-spec-type`
        attribute associated with spec resource. Note that specs of various
        types can be uploaded, however parsing of details is supported for
        OpenAPI spec currently. In order to access the information parsed from
        the spec, use the GetSpec method. In order to access the raw contents
        for a particular spec, use the GetSpecContents method. In order to
        access the operations parsed from the spec, use the ListAPIOperations
        method.
      operationId: apihub.projects.locations.apis.versions.specs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Spec'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Spec'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: specId
          schema:
            type: string
    get:
      description: List specs corresponding to a particular API resource.
      operationId: apihub.projects.locations.apis.versions.specs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ListSpecsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:
    parameters: *ref_1
    get:
      description: >-
        Get details about the information parsed from a spec. Note that this
        method does not return the raw spec contents. Use GetSpecContents method
        to retrieve the same.
      operationId: apihub.projects.locations.apis.versions.specs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Spec'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: path
          name: specsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update spec. The following fields in the spec can be updated: *
        display_name * source_uri * lint_response * attributes * contents *
        spec_type In case of an OAS spec, updating spec contents can lead to: 1.
        Creation, deletion and update of operations. 2. Creation, deletion and
        update of definitions. 3. Update of other info parsed out from the new
        spec. In case of contents or source_uri being present in update mask,
        spec_type must also be present. Also, spec_type can not be present in
        update mask if contents or source_uri is not present. The update_mask
        should be used to specify the fields being updated.
      operationId: apihub.projects.locations.apis.versions.specs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Spec'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Spec'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: path
          name: specsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Delete a spec. Deleting a spec will also delete the associated
        operations from the version.
      operationId: apihub.projects.locations.apis.versions.specs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: path
          name: specsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:contents:
    parameters: *ref_1
    get:
      description: Get spec contents.
      operationId: apihub.projects.locations.apis.versions.specs.getContents
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1SpecContents'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: path
          name: specsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:lint:
    parameters: *ref_1
    post:
      description: >-
        Lints the requested spec and updates the corresponding API Spec with the
        lint response. This lint response will be available in all subsequent
        Get and List Spec calls to Core service.
      operationId: apihub.projects.locations.apis.versions.specs.lint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1LintSpecRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: path
          name: specsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/operations:
    parameters: *ref_1
    post:
      description: >-
        Create an apiOperation in an API version. An apiOperation can be created
        only if the version has no apiOperations which were created by parsing a
        spec.
      operationId: apihub.projects.locations.apis.versions.operations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1ApiOperation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ApiOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: apiOperationId
          schema:
            type: string
    get:
      description: List operations in an API version.
      operationId: apihub.projects.locations.apis.versions.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1ListApiOperationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Get details about a particular operation in API version.
      operationId: apihub.projects.locations.apis.versions.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ApiOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update an operation in an API version. The following fields in the
        ApiOperation resource can be updated: * details.description *
        details.documentation * details.http_operation.path *
        details.http_operation.method * details.deprecated * attributes The
        update_mask should be used to specify the fields being updated. An
        operation can be updated only if the operation was created via
        CreateApiOperation API. If the operation was created by parsing the
        spec, then it can be edited by updating the spec.
      operationId: apihub.projects.locations.apis.versions.operations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1ApiOperation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ApiOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Delete an operation in an API version and we can delete only the
        operations created via create API. If the operation was created by
        parsing the spec, then it can be deleted by editing or deleting the
        spec.
      operationId: apihub.projects.locations.apis.versions.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/definitions/{definitionsId}:
    parameters: *ref_1
    get:
      description: Get details about a definition in an API version.
      operationId: apihub.projects.locations.apis.versions.definitions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Definition'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apisId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: path
          name: definitionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deployments:
    parameters: *ref_1
    post:
      description: >-
        Create a deployment resource in the API hub. Once a deployment resource
        is created, it can be associated with API versions.
      operationId: apihub.projects.locations.deployments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Deployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Deployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: deploymentId
          schema:
            type: string
    get:
      description: List deployment resources in the API hub.
      operationId: apihub.projects.locations.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1ListDeploymentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/deployments/{deploymentsId}:
    parameters: *ref_1
    get:
      description: Get details about a deployment and the API versions linked to it.
      operationId: apihub.projects.locations.deployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Deployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update a deployment resource in the API hub. The following fields in the
        deployment resource can be updated: * display_name * description *
        documentation * deployment_type * resource_uri * endpoints * slo *
        environment * attributes * source_project * source_environment *
        management_url * source_uri The update_mask should be used to specify
        the fields being updated.
      operationId: apihub.projects.locations.deployments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Deployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Deployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete a deployment resource in the API hub.
      operationId: apihub.projects.locations.deployments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/attributes:
    parameters: *ref_1
    post:
      description: >-
        Create a user defined attribute. Certain pre defined attributes are
        already created by the API hub. These attributes will have type as
        `SYSTEM_DEFINED` and can be listed via ListAttributes method. Allowed
        values for the same can be updated via UpdateAttribute method.
      operationId: apihub.projects.locations.attributes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Attribute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Attribute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: attributeId
          schema:
            type: string
    get:
      description: List all attributes.
      operationId: apihub.projects.locations.attributes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ListAttributesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/attributes/{attributesId}:
    parameters: *ref_1
    get:
      description: Get details about the attribute.
      operationId: apihub.projects.locations.attributes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Attribute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update the attribute. The following fields in the Attribute resource can
        be updated: * display_name The display name can be updated for user
        defined attributes only. * description The description can be updated
        for user defined attributes only. * allowed_values To update the list of
        allowed values, clients need to use the fetched list of allowed values
        and add or remove values to or from the same list. The mutable allowed
        values can be updated for both user defined and System defined
        attributes. The immutable allowed values cannot be updated or deleted.
        The updated list of allowed values cannot be empty. If an allowed value
        that is already used by some resource's attribute is deleted, then the
        association between the resource and the attribute value will also be
        deleted. * cardinality The cardinality can be updated for user defined
        attributes only. Cardinality can only be increased during an update. The
        update_mask should be used to specify the fields being updated.
      operationId: apihub.projects.locations.attributes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Attribute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Attribute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Delete an attribute. Note: System defined attributes cannot be deleted.
        All associations of the attribute being deleted with any API hub
        resource will also get deleted.
      operationId: apihub.projects.locations.attributes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/externalApis:
    parameters: *ref_1
    post:
      description: Create an External API resource in the API hub.
      operationId: apihub.projects.locations.externalApis.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1ExternalApi'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ExternalApi'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: externalApiId
          schema:
            type: string
    get:
      description: List External API resources in the API hub.
      operationId: apihub.projects.locations.externalApis.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1ListExternalApisResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/externalApis/{externalApisId}:
    parameters: *ref_1
    get:
      description: Get details about an External API resource in the API hub.
      operationId: apihub.projects.locations.externalApis.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ExternalApi'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: externalApisId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update an External API resource in the API hub. The following fields can
        be updated: * display_name * description * documentation * endpoints *
        paths The update_mask should be used to specify the fields being
        updated.
      operationId: apihub.projects.locations.externalApis.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1ExternalApi'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ExternalApi'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: externalApisId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete an External API resource in the API hub.
      operationId: apihub.projects.locations.externalApis.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: externalApisId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dependencies:
    parameters: *ref_1
    post:
      description: Create a dependency between two entities in the API hub.
      operationId: apihub.projects.locations.dependencies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Dependency'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Dependency'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dependencyId
          schema:
            type: string
    get:
      description: >-
        List dependencies based on the provided filter and pagination
        parameters.
      operationId: apihub.projects.locations.dependencies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1ListDependenciesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dependencies/{dependenciesId}:
    parameters: *ref_1
    get:
      description: Get details about a dependency resource in the API hub.
      operationId: apihub.projects.locations.dependencies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Dependency'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dependenciesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update a dependency based on the update_mask provided in the request.
        The following fields in the dependency can be updated: * description
      operationId: apihub.projects.locations.dependencies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Dependency'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Dependency'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dependenciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete the dependency resource.
      operationId: apihub.projects.locations.dependencies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dependenciesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/curations:
    parameters: *ref_1
    post:
      description: >-
        Create a curation resource in the API hub. Once a curation resource is
        created, plugin instances can start using it.
      operationId: apihub.projects.locations.curations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Curation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Curation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: curationId
          schema:
            type: string
    get:
      description: List curation resources in the API hub.
      operationId: apihub.projects.locations.curations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ListCurationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/curations/{curationsId}:
    parameters: *ref_1
    get:
      description: Get curation resource details.
      operationId: apihub.projects.locations.curations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Curation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: curationsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update a curation resource in the API hub. The following fields in the
        curation can be updated: * display_name * description The update_mask
        should be used to specify the fields being updated.
      operationId: apihub.projects.locations.curations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1Curation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1Curation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: curationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Delete a curation resource in the API hub. A curation can only be
        deleted if it's not being used by any plugin instance.
      operationId: apihub.projects.locations.curations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: curationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/discoveredApiObservations:
    parameters: *ref_1
    get:
      description: Lists all the DiscoveredAPIObservations in a given project and location.
      operationId: apihub.projects.locations.discoveredApiObservations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1ListDiscoveredApiObservationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/discoveredApiObservations/{discoveredApiObservationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets a DiscoveredAPIObservation in a given project, location and
        ApiObservation.
      operationId: apihub.projects.locations.discoveredApiObservations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1DiscoveredApiObservation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: discoveredApiObservationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/discoveredApiObservations/{discoveredApiObservationsId}/discoveredApiOperations:
    parameters: *ref_1
    get:
      description: >-
        Lists all the DiscoveredAPIOperations in a given project, location and
        ApiObservation.
      operationId: >-
        apihub.projects.locations.discoveredApiObservations.discoveredApiOperations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1ListDiscoveredApiOperationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: discoveredApiObservationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/discoveredApiObservations/{discoveredApiObservationsId}/discoveredApiOperations/{discoveredApiOperationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets a DiscoveredAPIOperation in a given project, location,
        ApiObservation and ApiOperation.
      operationId: >-
        apihub.projects.locations.discoveredApiObservations.discoveredApiOperations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1DiscoveredApiOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: discoveredApiObservationsId
          required: true
          schema:
            type: string
        - in: path
          name: discoveredApiOperationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/hostProjectRegistrations:
    parameters: *ref_1
    post:
      description: >-
        Create a host project registration. A Google cloud project can be
        registered as a host project if it is not attached as a runtime project
        to another host project. A project can be registered as a host project
        only once. Subsequent register calls for the same project will fail.
      operationId: apihub.projects.locations.hostProjectRegistrations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1HostProjectRegistration'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1HostProjectRegistration
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: hostProjectRegistrationId
          schema:
            type: string
    get:
      description: Lists host project registrations.
      operationId: apihub.projects.locations.hostProjectRegistrations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1ListHostProjectRegistrationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/hostProjectRegistrations/{hostProjectRegistrationsId}:
    parameters: *ref_1
    get:
      description: Get a host project registration.
      operationId: apihub.projects.locations.hostProjectRegistrations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1HostProjectRegistration
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: hostProjectRegistrationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apiHubInstances:
    parameters: *ref_1
    post:
      description: Provisions instance resources for the API Hub.
      operationId: apihub.projects.locations.apiHubInstances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1ApiHubInstance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: apiHubInstanceId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apiHubInstances/{apiHubInstancesId}:
    parameters: *ref_1
    delete:
      description: Deletes the API hub instance.
      operationId: apihub.projects.locations.apiHubInstances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apiHubInstancesId
          required: true
          schema:
            type: string
    get:
      description: Gets details of a single API Hub instance.
      operationId: apihub.projects.locations.apiHubInstances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudApihubV1ApiHubInstance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: apiHubInstancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/apiHubInstances:lookup:
    parameters: *ref_1
    get:
      description: >-
        Looks up an Api Hub instance in a given GCP project. There will always
        be only one Api Hub instance for a GCP project across all locations.
      operationId: apihub.projects.locations.apiHubInstances.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1LookupApiHubInstanceResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/runtimeProjectAttachments:
    parameters: *ref_1
    post:
      description: Attaches a runtime project to the host project.
      operationId: apihub.projects.locations.runtimeProjectAttachments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudApihubV1RuntimeProjectAttachment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1RuntimeProjectAttachment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: runtimeProjectAttachmentId
          schema:
            type: string
    get:
      description: List runtime projects attached to the host project.
      operationId: apihub.projects.locations.runtimeProjectAttachments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1ListRuntimeProjectAttachmentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/runtimeProjectAttachments/{runtimeProjectAttachmentsId}:
    parameters: *ref_1
    get:
      description: Gets a runtime project attachment.
      operationId: apihub.projects.locations.runtimeProjectAttachments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudApihubV1RuntimeProjectAttachment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimeProjectAttachmentsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Delete a runtime project attachment in the API Hub. This call will
        detach the runtime project from the host project.
      operationId: apihub.projects.locations.runtimeProjectAttachments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimeProjectAttachmentsId
          required: true
          schema:
            type: string
